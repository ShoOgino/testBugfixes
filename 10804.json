{"path":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a13a126d15299d5c1e117ea99ddae6fb0fa3f209","date":1291909583,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  protected void setUp () throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = FSDirectory.open(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3741149a89925c02f14dbeef8365b896798d91fc","date":1303483574,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = _TestUtil.getTempDir(\"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":["1d16275d75dfe0b780ed62df4c811d083187c71a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d493718201f0d0c54c773fb323d87bbd2fbffe41","date":1303546048,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = _TestUtil.getTempDir(\"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = _TestUtil.getTempDir(\"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = _TestUtil.getTempDir(\"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = new File(TEMP_DIR, \"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = _TestUtil.getTempDir(\"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), StringField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = _TestUtil.getTempDir(\"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = _TestUtil.getTempDir(\"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), StringField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // setup the index\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDir = _TestUtil.getTempDir(\"RAMDirIndex\");\n    \n    Directory dir = newFSDirectory(indexDir);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(newField(\"content\", English.intToEnglish(i).trim(), StringField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["43b04c27924fe393e38e9f0986e32c634f261859"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","3741149a89925c02f14dbeef8365b896798d91fc"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["43b04c27924fe393e38e9f0986e32c634f261859","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["d572389229127c297dd1fa5ce4758e1cec41e799"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"d493718201f0d0c54c773fb323d87bbd2fbffe41":["962d04139994fce5193143ef35615499a9a96d78","3741149a89925c02f14dbeef8365b896798d91fc"],"43b04c27924fe393e38e9f0986e32c634f261859":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","3741149a89925c02f14dbeef8365b896798d91fc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3741149a89925c02f14dbeef8365b896798d91fc":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["3741149a89925c02f14dbeef8365b896798d91fc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"d572389229127c297dd1fa5ce4758e1cec41e799":["132903c28af3aa6f67284b78de91c0f0a99488c2","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["43b04c27924fe393e38e9f0986e32c634f261859"],"962d04139994fce5193143ef35615499a9a96d78":["d493718201f0d0c54c773fb323d87bbd2fbffe41"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"d493718201f0d0c54c773fb323d87bbd2fbffe41":[],"43b04c27924fe393e38e9f0986e32c634f261859":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["962d04139994fce5193143ef35615499a9a96d78","3741149a89925c02f14dbeef8365b896798d91fc"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3741149a89925c02f14dbeef8365b896798d91fc":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d493718201f0d0c54c773fb323d87bbd2fbffe41","a3776dccca01c11e7046323cfad46a3b4a471233","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d493718201f0d0c54c773fb323d87bbd2fbffe41","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}