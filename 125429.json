{"path":"contrib/miscellaneous/src/java/org/apache/lucene/queryParser/precedence/CharStream#GetSuffix(int).mjava","commits":[{"id":"e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a","date":1114594353,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/miscellaneous/src/java/org/apache/lucene/queryParser/precedence/CharStream#GetSuffix(int).mjava","pathOld":"src/java/org/apache/lucene/queryParser/precedence/CharStream#GetSuffix(int).mjava","sourceNew":"  /**\n   * Returns an array of characters that make up the suffix of length 'len' for\n   * the currently matched token. This is used to build up the matched string\n   * for use in actions in the case of MORE. A simple and inefficient\n   * implementation of this is as follows :\n   *\n   *   {\n   *      String t = GetImage();\n   *      return t.substring(t.length() - len, t.length()).toCharArray();\n   *   }\n   */\n  char[] GetSuffix(int len);\n\n","sourceOld":"  /**\n   * Returns an array of characters that make up the suffix of length 'len' for\n   * the currently matched token. This is used to build up the matched string\n   * for use in actions in the case of MORE. A simple and inefficient\n   * implementation of this is as follows :\n   *\n   *   {\n   *      String t = GetImage();\n   *      return t.substring(t.length() - len, t.length()).toCharArray();\n   *   }\n   */\n  char[] GetSuffix(int len);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/queryParser/precedence/CharStream#GetSuffix(int).mjava","pathOld":"contrib/miscellaneous/src/java/org/apache/lucene/queryParser/precedence/CharStream#GetSuffix(int).mjava","sourceNew":"  /**\n   * Returns an array of characters that make up the suffix of length 'len' for\n   * the currently matched token. This is used to build up the matched string\n   * for use in actions in the case of MORE. A simple and inefficient\n   * implementation of this is as follows :\n   *\n   *   {\n   *      String t = GetImage();\n   *      return t.substring(t.length() - len, t.length()).toCharArray();\n   *   }\n   */\n  char[] GetSuffix(int len);\n\n","sourceOld":"  /**\n   * Returns an array of characters that make up the suffix of length 'len' for\n   * the currently matched token. This is used to build up the matched string\n   * for use in actions in the case of MORE. A simple and inefficient\n   * implementation of this is as follows :\n   *\n   *   {\n   *      String t = GetImage();\n   *      return t.substring(t.length() - len, t.length()).toCharArray();\n   *   }\n   */\n  char[] GetSuffix(int len);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a"],"e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"]},"commit2Childs":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}