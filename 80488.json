{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#checkDistValueSource(Point,float...).mjava","commits":[{"id":"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003","date":1390592414,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#checkDistValueSource(Point,float...).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#checkDistValueSource(String,float...).mjava","sourceNew":"  void checkDistValueSource(Point pt, float... distances) throws IOException {\n    float multiplier = random().nextFloat() * 100f;\n    float[] dists2 = Arrays.copyOf(distances, distances.length);\n    for (int i = 0; i < dists2.length; i++) {\n      dists2[i] *= multiplier;\n    }\n    checkValueSource(strategy.makeDistanceValueSource(pt, multiplier), dists2, 1.0e-3f);\n  }\n\n","sourceOld":"  void checkDistValueSource(String ptStr, float... distances) throws IOException {\n    Point pt = (Point) ctx.readShape(ptStr);\n    float multiplier = random().nextFloat() * 100f;\n    float[] dists2 = Arrays.copyOf(distances, distances.length);\n    for (int i = 0; i < dists2.length; i++) {\n      dists2[i] *= multiplier;\n    }\n    checkValueSource(strategy.makeDistanceValueSource(pt, multiplier), dists2, 1.0e-3f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/DistanceStrategyTest#checkDistValueSource(Point,float...).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#checkDistValueSource(Point,float...).mjava","sourceNew":"  void checkDistValueSource(Point pt, float... distances) throws IOException {\n    float multiplier = random().nextFloat() * 100f;\n    float[] dists2 = Arrays.copyOf(distances, distances.length);\n    for (int i = 0; i < dists2.length; i++) {\n      dists2[i] *= multiplier;\n    }\n    checkValueSource(strategy.makeDistanceValueSource(pt, multiplier), dists2, 1.0e-3f);\n  }\n\n","sourceOld":"  void checkDistValueSource(Point pt, float... distances) throws IOException {\n    float multiplier = random().nextFloat() * 100f;\n    float[] dists2 = Arrays.copyOf(distances, distances.length);\n    for (int i = 0; i < dists2.length; i++) {\n      dists2[i] *= multiplier;\n    }\n    checkValueSource(strategy.makeDistanceValueSource(pt, multiplier), dists2, 1.0e-3f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/DistanceStrategyTest#checkDistValueSource(Point,float...).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#checkDistValueSource(Point,float...).mjava","sourceNew":"  void checkDistValueSource(Point pt, float... distances) throws IOException {\n    float multiplier = random().nextFloat() * 100f;\n    float[] dists2 = Arrays.copyOf(distances, distances.length);\n    for (int i = 0; i < dists2.length; i++) {\n      dists2[i] *= multiplier;\n    }\n    checkValueSource(strategy.makeDistanceValueSource(pt, multiplier), dists2, 1.0e-3f);\n  }\n\n","sourceOld":"  void checkDistValueSource(Point pt, float... distances) throws IOException {\n    float multiplier = random().nextFloat() * 100f;\n    float[] dists2 = Arrays.copyOf(distances, distances.length);\n    for (int i = 0; i < dists2.length; i++) {\n      dists2[i] *= multiplier;\n    }\n    checkValueSource(strategy.makeDistanceValueSource(pt, multiplier), dists2, 1.0e-3f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["6bc65e9e84ac8f81b0861d2c7d8f56715adbf003","112d77ac8d3e10a362516ad834c9a11d35c94234"],"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["6bc65e9e84ac8f81b0861d2c7d8f56715adbf003"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6bc65e9e84ac8f81b0861d2c7d8f56715adbf003"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}