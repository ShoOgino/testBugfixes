{"path":"src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#verifyNrHits(Query,int).mjava","commits":[{"id":"b6bffc7c3c9ddfcefe91b728c0680af2a3a96444","date":1132159199,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#verifyNrHits(Query,int).mjava","pathOld":"/dev/null","sourceNew":"    public void verifyNrHits(Query q, int expected) throws Exception {\n        Hits h = s.search(q);\n        if (expected != h.length()) {\n            printHits(getName(), h);\n        }\n        assertEquals(\"result count\", expected, h.length());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aabae793f43472efdf1dcdaae4e01e28cfc23ccd","date":1161750034,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#verifyNrHits(Query,int).mjava","pathOld":"src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#verifyNrHits(Query,int).mjava","sourceNew":"    public void verifyNrHits(Query q, int expected) throws Exception {\n        Hits h = s.search(q);\n        if (expected != h.length()) {\n            printHits(getName(), h);\n        }\n        assertEquals(\"result count\", expected, h.length());\n        QueryUtils.check(q,s);\n    }\n\n","sourceOld":"    public void verifyNrHits(Query q, int expected) throws Exception {\n        Hits h = s.search(q);\n        if (expected != h.length()) {\n            printHits(getName(), h);\n        }\n        assertEquals(\"result count\", expected, h.length());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5af07783dbc171e26a694c4f7d735e30c2769faa","date":1211569075,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#verifyNrHits(Query,int).mjava","pathOld":"src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#verifyNrHits(Query,int).mjava","sourceNew":"    public void verifyNrHits(Query q, int expected) throws Exception {\n        ScoreDoc[] h = s.search(q, null, 1000).scoreDocs;\n        if (expected != h.length) {\n            printHits(getName(), h, s);\n        }\n        assertEquals(\"result count\", expected, h.length);\n        QueryUtils.check(q,s);\n    }\n\n","sourceOld":"    public void verifyNrHits(Query q, int expected) throws Exception {\n        Hits h = s.search(q);\n        if (expected != h.length()) {\n            printHits(getName(), h);\n        }\n        assertEquals(\"result count\", expected, h.length());\n        QueryUtils.check(q,s);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#verifyNrHits(Query,int).mjava","pathOld":"src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#verifyNrHits(Query,int).mjava","sourceNew":"    public void verifyNrHits(Query q, int expected) throws Exception {\n        ScoreDoc[] h = s.search(q, null, 1000).scoreDocs;\n        if (expected != h.length) {\n            printHits(getName(), h, s);\n        }\n        assertEquals(\"result count\", expected, h.length);\n        QueryUtils.check(q,s);\n    }\n\n","sourceOld":"    public void verifyNrHits(Query q, int expected) throws Exception {\n        ScoreDoc[] h = s.search(q, null, 1000).scoreDocs;\n        if (expected != h.length) {\n            printHits(getName(), h, s);\n        }\n        assertEquals(\"result count\", expected, h.length);\n        QueryUtils.check(q,s);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5af07783dbc171e26a694c4f7d735e30c2769faa":["aabae793f43472efdf1dcdaae4e01e28cfc23ccd"],"b6bffc7c3c9ddfcefe91b728c0680af2a3a96444":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aabae793f43472efdf1dcdaae4e01e28cfc23ccd":["b6bffc7c3c9ddfcefe91b728c0680af2a3a96444"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5af07783dbc171e26a694c4f7d735e30c2769faa"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b6bffc7c3c9ddfcefe91b728c0680af2a3a96444"],"5af07783dbc171e26a694c4f7d735e30c2769faa":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b6bffc7c3c9ddfcefe91b728c0680af2a3a96444":["aabae793f43472efdf1dcdaae4e01e28cfc23ccd"],"aabae793f43472efdf1dcdaae4e01e28cfc23ccd":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}