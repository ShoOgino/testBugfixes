{"path":"solr/src/test/org/apache/solr/analysis/TestWordDelimiterFilter#testSplits().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/analysis/TestWordDelimiterFilter#testSplits().mjava","pathOld":"/dev/null","sourceNew":"  public void testSplits() throws Exception {\n    doSplit(\"basic-split\",\"basic\",\"split\");\n    doSplit(\"camelCase\",\"camel\",\"Case\");\n\n    // non-space marking symbol shouldn't cause split\n    // this is an example in Thai    \n    doSplit(\"\\u0e1a\\u0e49\\u0e32\\u0e19\",\"\\u0e1a\\u0e49\\u0e32\\u0e19\");\n    // possessive followed by delimiter\n    doSplit(\"test's'\", \"test\");\n\n    // some russian upper and lowercase\n    doSplit(\"Роберт\", \"Роберт\");\n    // now cause a split (russian camelCase)\n    doSplit(\"РобЕрт\", \"Роб\", \"Ерт\");\n\n    // a composed titlecase character, don't split\n    doSplit(\"aǅungla\", \"aǅungla\");\n    \n    // a modifier letter, don't split\n    doSplit(\"ســـــــــــــــــلام\", \"ســـــــــــــــــلام\");\n    \n    // enclosing mark, don't split\n    doSplit(\"۞test\", \"۞test\");\n    \n    // combining spacing mark (the virama), don't split\n    doSplit(\"हिन्दी\", \"हिन्दी\");\n    \n    // don't split non-ascii digits\n    doSplit(\"١٢٣٤\", \"١٢٣٤\");\n    \n    // don't split supplementaries into unpaired surrogates\n    doSplit(\"𠀀𠀀\", \"𠀀𠀀\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/analysis/TestWordDelimiterFilter#testSplits().mjava","sourceNew":null,"sourceOld":"  public void testSplits() throws Exception {\n    doSplit(\"basic-split\",\"basic\",\"split\");\n    doSplit(\"camelCase\",\"camel\",\"Case\");\n\n    // non-space marking symbol shouldn't cause split\n    // this is an example in Thai    \n    doSplit(\"\\u0e1a\\u0e49\\u0e32\\u0e19\",\"\\u0e1a\\u0e49\\u0e32\\u0e19\");\n    // possessive followed by delimiter\n    doSplit(\"test's'\", \"test\");\n\n    // some russian upper and lowercase\n    doSplit(\"Роберт\", \"Роберт\");\n    // now cause a split (russian camelCase)\n    doSplit(\"РобЕрт\", \"Роб\", \"Ерт\");\n\n    // a composed titlecase character, don't split\n    doSplit(\"aǅungla\", \"aǅungla\");\n    \n    // a modifier letter, don't split\n    doSplit(\"ســـــــــــــــــلام\", \"ســـــــــــــــــلام\");\n    \n    // enclosing mark, don't split\n    doSplit(\"۞test\", \"۞test\");\n    \n    // combining spacing mark (the virama), don't split\n    doSplit(\"हिन्दी\", \"हिन्दी\");\n    \n    // don't split non-ascii digits\n    doSplit(\"١٢٣٤\", \"١٢٣٤\");\n    \n    // don't split supplementaries into unpaired surrogates\n    doSplit(\"𠀀𠀀\", \"𠀀𠀀\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/analysis/TestWordDelimiterFilter#testSplits().mjava","pathOld":"src/test/org/apache/solr/analysis/TestWordDelimiterFilter#testSplits().mjava","sourceNew":"  public void testSplits() throws Exception {\n    doSplit(\"basic-split\",\"basic\",\"split\");\n    doSplit(\"camelCase\",\"camel\",\"Case\");\n\n    // non-space marking symbol shouldn't cause split\n    // this is an example in Thai    \n    doSplit(\"\\u0e1a\\u0e49\\u0e32\\u0e19\",\"\\u0e1a\\u0e49\\u0e32\\u0e19\");\n    // possessive followed by delimiter\n    doSplit(\"test's'\", \"test\");\n\n    // some russian upper and lowercase\n    doSplit(\"Роберт\", \"Роберт\");\n    // now cause a split (russian camelCase)\n    doSplit(\"РобЕрт\", \"Роб\", \"Ерт\");\n\n    // a composed titlecase character, don't split\n    doSplit(\"aǅungla\", \"aǅungla\");\n    \n    // a modifier letter, don't split\n    doSplit(\"ســـــــــــــــــلام\", \"ســـــــــــــــــلام\");\n    \n    // enclosing mark, don't split\n    doSplit(\"۞test\", \"۞test\");\n    \n    // combining spacing mark (the virama), don't split\n    doSplit(\"हिन्दी\", \"हिन्दी\");\n    \n    // don't split non-ascii digits\n    doSplit(\"١٢٣٤\", \"١٢٣٤\");\n    \n    // don't split supplementaries into unpaired surrogates\n    doSplit(\"𠀀𠀀\", \"𠀀𠀀\");\n  }\n\n","sourceOld":"  public void testSplits() throws Exception {\n    doSplit(\"basic-split\",\"basic\",\"split\");\n    doSplit(\"camelCase\",\"camel\",\"Case\");\n\n    // non-space marking symbol shouldn't cause split\n    // this is an example in Thai    \n    doSplit(\"\\u0e1a\\u0e49\\u0e32\\u0e19\",\"\\u0e1a\\u0e49\\u0e32\\u0e19\");\n    // possessive followed by delimiter\n    doSplit(\"test's'\", \"test\");\n\n    // some russian upper and lowercase\n    doSplit(\"Роберт\", \"Роберт\");\n    // now cause a split (russian camelCase)\n    doSplit(\"РобЕрт\", \"Роб\", \"Ерт\");\n\n    // a composed titlecase character, don't split\n    doSplit(\"aǅungla\", \"aǅungla\");\n    \n    // a modifier letter, don't split\n    doSplit(\"ســـــــــــــــــلام\", \"ســـــــــــــــــلام\");\n    \n    // enclosing mark, don't split\n    doSplit(\"۞test\", \"۞test\");\n    \n    // combining spacing mark (the virama), don't split\n    doSplit(\"हिन्दी\", \"हिन्दी\");\n    \n    // don't split non-ascii digits\n    doSplit(\"١٢٣٤\", \"١٢٣٤\");\n    \n    // don't split supplementaries into unpaired surrogates\n    doSplit(\"𠀀𠀀\", \"𠀀𠀀\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/analysis/TestWordDelimiterFilter#testSplits().mjava","pathOld":"/dev/null","sourceNew":"  public void testSplits() throws Exception {\n    doSplit(\"basic-split\",\"basic\",\"split\");\n    doSplit(\"camelCase\",\"camel\",\"Case\");\n\n    // non-space marking symbol shouldn't cause split\n    // this is an example in Thai    \n    doSplit(\"\\u0e1a\\u0e49\\u0e32\\u0e19\",\"\\u0e1a\\u0e49\\u0e32\\u0e19\");\n    // possessive followed by delimiter\n    doSplit(\"test's'\", \"test\");\n\n    // some russian upper and lowercase\n    doSplit(\"Роберт\", \"Роберт\");\n    // now cause a split (russian camelCase)\n    doSplit(\"РобЕрт\", \"Роб\", \"Ерт\");\n\n    // a composed titlecase character, don't split\n    doSplit(\"aǅungla\", \"aǅungla\");\n    \n    // a modifier letter, don't split\n    doSplit(\"ســـــــــــــــــلام\", \"ســـــــــــــــــلام\");\n    \n    // enclosing mark, don't split\n    doSplit(\"۞test\", \"۞test\");\n    \n    // combining spacing mark (the virama), don't split\n    doSplit(\"हिन्दी\", \"हिन्दी\");\n    \n    // don't split non-ascii digits\n    doSplit(\"١٢٣٤\", \"١٢٣٤\");\n    \n    // don't split supplementaries into unpaired surrogates\n    doSplit(\"𠀀𠀀\", \"𠀀𠀀\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b61c4d4553ce38d24ed06a43de07d3c3ca420b62","date":1269037941,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/analysis/TestWordDelimiterFilter#testSplits().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestWordDelimiterFilter#testSplits().mjava","sourceNew":"  @Test\n  public void testSplits() throws Exception {\n    doSplit(\"basic-split\",\"basic\",\"split\");\n    doSplit(\"camelCase\",\"camel\",\"Case\");\n\n    // non-space marking symbol shouldn't cause split\n    // this is an example in Thai    \n    doSplit(\"\\u0e1a\\u0e49\\u0e32\\u0e19\",\"\\u0e1a\\u0e49\\u0e32\\u0e19\");\n    // possessive followed by delimiter\n    doSplit(\"test's'\", \"test\");\n\n    // some russian upper and lowercase\n    doSplit(\"Роберт\", \"Роберт\");\n    // now cause a split (russian camelCase)\n    doSplit(\"РобЕрт\", \"Роб\", \"Ерт\");\n\n    // a composed titlecase character, don't split\n    doSplit(\"aǅungla\", \"aǅungla\");\n    \n    // a modifier letter, don't split\n    doSplit(\"ســـــــــــــــــلام\", \"ســـــــــــــــــلام\");\n    \n    // enclosing mark, don't split\n    doSplit(\"۞test\", \"۞test\");\n    \n    // combining spacing mark (the virama), don't split\n    doSplit(\"हिन्दी\", \"हिन्दी\");\n    \n    // don't split non-ascii digits\n    doSplit(\"١٢٣٤\", \"١٢٣٤\");\n    \n    // don't split supplementaries into unpaired surrogates\n    doSplit(\"𠀀𠀀\", \"𠀀𠀀\");\n  }\n\n","sourceOld":"  public void testSplits() throws Exception {\n    doSplit(\"basic-split\",\"basic\",\"split\");\n    doSplit(\"camelCase\",\"camel\",\"Case\");\n\n    // non-space marking symbol shouldn't cause split\n    // this is an example in Thai    \n    doSplit(\"\\u0e1a\\u0e49\\u0e32\\u0e19\",\"\\u0e1a\\u0e49\\u0e32\\u0e19\");\n    // possessive followed by delimiter\n    doSplit(\"test's'\", \"test\");\n\n    // some russian upper and lowercase\n    doSplit(\"Роберт\", \"Роберт\");\n    // now cause a split (russian camelCase)\n    doSplit(\"РобЕрт\", \"Роб\", \"Ерт\");\n\n    // a composed titlecase character, don't split\n    doSplit(\"aǅungla\", \"aǅungla\");\n    \n    // a modifier letter, don't split\n    doSplit(\"ســـــــــــــــــلام\", \"ســـــــــــــــــلام\");\n    \n    // enclosing mark, don't split\n    doSplit(\"۞test\", \"۞test\");\n    \n    // combining spacing mark (the virama), don't split\n    doSplit(\"हिन्दी\", \"हिन्दी\");\n    \n    // don't split non-ascii digits\n    doSplit(\"١٢٣٤\", \"١٢٣٤\");\n    \n    // don't split supplementaries into unpaired surrogates\n    doSplit(\"𠀀𠀀\", \"𠀀𠀀\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8598a11db0eb9efa116ba7656c437f5bed7de0f7","date":1272964265,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#testSplits().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestWordDelimiterFilter#testSplits().mjava","sourceNew":"  @Test\n  public void testSplits() throws Exception {\n    doSplit(\"basic-split\",\"basic\",\"split\");\n    doSplit(\"camelCase\",\"camel\",\"Case\");\n\n    // non-space marking symbol shouldn't cause split\n    // this is an example in Thai    \n    doSplit(\"\\u0e1a\\u0e49\\u0e32\\u0e19\",\"\\u0e1a\\u0e49\\u0e32\\u0e19\");\n    // possessive followed by delimiter\n    doSplit(\"test's'\", \"test\");\n\n    // some russian upper and lowercase\n    doSplit(\"Роберт\", \"Роберт\");\n    // now cause a split (russian camelCase)\n    doSplit(\"РобЕрт\", \"Роб\", \"Ерт\");\n\n    // a composed titlecase character, don't split\n    doSplit(\"aǅungla\", \"aǅungla\");\n    \n    // a modifier letter, don't split\n    doSplit(\"ســـــــــــــــــلام\", \"ســـــــــــــــــلام\");\n    \n    // enclosing mark, don't split\n    doSplit(\"۞test\", \"۞test\");\n    \n    // combining spacing mark (the virama), don't split\n    doSplit(\"हिन्दी\", \"हिन्दी\");\n    \n    // don't split non-ascii digits\n    doSplit(\"١٢٣٤\", \"١٢٣٤\");\n    \n    // don't split supplementaries into unpaired surrogates\n    doSplit(\"𠀀𠀀\", \"𠀀𠀀\");\n  }\n\n","sourceOld":"  @Test\n  public void testSplits() throws Exception {\n    doSplit(\"basic-split\",\"basic\",\"split\");\n    doSplit(\"camelCase\",\"camel\",\"Case\");\n\n    // non-space marking symbol shouldn't cause split\n    // this is an example in Thai    \n    doSplit(\"\\u0e1a\\u0e49\\u0e32\\u0e19\",\"\\u0e1a\\u0e49\\u0e32\\u0e19\");\n    // possessive followed by delimiter\n    doSplit(\"test's'\", \"test\");\n\n    // some russian upper and lowercase\n    doSplit(\"Роберт\", \"Роберт\");\n    // now cause a split (russian camelCase)\n    doSplit(\"РобЕрт\", \"Роб\", \"Ерт\");\n\n    // a composed titlecase character, don't split\n    doSplit(\"aǅungla\", \"aǅungla\");\n    \n    // a modifier letter, don't split\n    doSplit(\"ســـــــــــــــــلام\", \"ســـــــــــــــــلام\");\n    \n    // enclosing mark, don't split\n    doSplit(\"۞test\", \"۞test\");\n    \n    // combining spacing mark (the virama), don't split\n    doSplit(\"हिन्दी\", \"हिन्दी\");\n    \n    // don't split non-ascii digits\n    doSplit(\"١٢٣٤\", \"١٢٣٤\");\n    \n    // don't split supplementaries into unpaired surrogates\n    doSplit(\"𠀀𠀀\", \"𠀀𠀀\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8598a11db0eb9efa116ba7656c437f5bed7de0f7":["b61c4d4553ce38d24ed06a43de07d3c3ca420b62"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"b61c4d4553ce38d24ed06a43de07d3c3ca420b62":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8598a11db0eb9efa116ba7656c437f5bed7de0f7"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["b61c4d4553ce38d24ed06a43de07d3c3ca420b62"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"8598a11db0eb9efa116ba7656c437f5bed7de0f7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"b61c4d4553ce38d24ed06a43de07d3c3ca420b62":["8598a11db0eb9efa116ba7656c437f5bed7de0f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}