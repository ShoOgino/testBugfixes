{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesConsumer#addSortedNumericField(FieldInfo,Iterable[Number],Iterable[Number]).mjava","commits":[{"id":"d14ffaac9c4a4a2c750bf0cd956506802561e062","date":1402602036,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesConsumer#addSortedNumericField(FieldInfo,Iterable[Number],Iterable[Number]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void addSortedNumericField(FieldInfo field, final Iterable<Number> docToValueCount, final Iterable<Number> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene49DocValuesFormat.SORTED_NUMERIC);\n    if (isSingleValued(docToValueCount)) {\n      meta.writeVInt(SORTED_SINGLE_VALUED);\n      // The field is single-valued, we can encode it as NUMERIC\n      addNumericField(field, singletonView(docToValueCount, values, null));\n    } else {\n      meta.writeVInt(SORTED_WITH_ADDRESSES);\n      // write the stream of values as a numeric field\n      addNumericField(field, values, true);\n      // write the doc -> ord count as a absolute index to the stream\n      addAddresses(field, docToValueCount);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesConsumer#addSortedNumericField(FieldInfo,Iterable[Number],Iterable[Number]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void addSortedNumericField(FieldInfo field, final Iterable<Number> docToValueCount, final Iterable<Number> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene49DocValuesFormat.SORTED_NUMERIC);\n    if (isSingleValued(docToValueCount)) {\n      meta.writeVInt(SORTED_SINGLE_VALUED);\n      // The field is single-valued, we can encode it as NUMERIC\n      addNumericField(field, singletonView(docToValueCount, values, null));\n    } else {\n      meta.writeVInt(SORTED_WITH_ADDRESSES);\n      // write the stream of values as a numeric field\n      addNumericField(field, values, true);\n      // write the doc -> ord count as a absolute index to the stream\n      addAddresses(field, docToValueCount);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793","date":1408030244,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesConsumer#addSortedNumericField(FieldInfo,Iterable[Number],Iterable[Number]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesConsumer#addSortedNumericField(FieldInfo,Iterable[Number],Iterable[Number]).mjava","sourceNew":"  @Override\n  public void addSortedNumericField(FieldInfo field, final Iterable<Number> docToValueCount, final Iterable<Number> values) throws IOException {\n    checkCanWrite(field);\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene49DocValuesFormat.SORTED_NUMERIC);\n    if (isSingleValued(docToValueCount)) {\n      meta.writeVInt(SORTED_SINGLE_VALUED);\n      // The field is single-valued, we can encode it as NUMERIC\n      addNumericField(field, singletonView(docToValueCount, values, null));\n    } else {\n      meta.writeVInt(SORTED_WITH_ADDRESSES);\n      // write the stream of values as a numeric field\n      addNumericField(field, values, true);\n      // write the doc -> ord count as a absolute index to the stream\n      addAddresses(field, docToValueCount);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addSortedNumericField(FieldInfo field, final Iterable<Number> docToValueCount, final Iterable<Number> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene49DocValuesFormat.SORTED_NUMERIC);\n    if (isSingleValued(docToValueCount)) {\n      meta.writeVInt(SORTED_SINGLE_VALUED);\n      // The field is single-valued, we can encode it as NUMERIC\n      addNumericField(field, singletonView(docToValueCount, values, null));\n    } else {\n      meta.writeVInt(SORTED_WITH_ADDRESSES);\n      // write the stream of values as a numeric field\n      addNumericField(field, values, true);\n      // write the doc -> ord count as a absolute index to the stream\n      addAddresses(field, docToValueCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesConsumer#addSortedNumericField(FieldInfo,Iterable[Number],Iterable[Number]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesConsumer#addSortedNumericField(FieldInfo,Iterable[Number],Iterable[Number]).mjava","sourceNew":"  @Override\n  public void addSortedNumericField(FieldInfo field, final Iterable<Number> docToValueCount, final Iterable<Number> values) throws IOException {\n    checkCanWrite(field);\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene49DocValuesFormat.SORTED_NUMERIC);\n    if (isSingleValued(docToValueCount)) {\n      meta.writeVInt(SORTED_SINGLE_VALUED);\n      // The field is single-valued, we can encode it as NUMERIC\n      addNumericField(field, singletonView(docToValueCount, values, null));\n    } else {\n      meta.writeVInt(SORTED_WITH_ADDRESSES);\n      // write the stream of values as a numeric field\n      addNumericField(field, values, true);\n      // write the doc -> ord count as a absolute index to the stream\n      addAddresses(field, docToValueCount);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addSortedNumericField(FieldInfo field, final Iterable<Number> docToValueCount, final Iterable<Number> values) throws IOException {\n    checkCanWrite(field);\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene49DocValuesFormat.SORTED_NUMERIC);\n    if (isSingleValued(docToValueCount)) {\n      meta.writeVInt(SORTED_SINGLE_VALUED);\n      // The field is single-valued, we can encode it as NUMERIC\n      addNumericField(field, singletonView(docToValueCount, values, null));\n    } else {\n      meta.writeVInt(SORTED_WITH_ADDRESSES);\n      // write the stream of values as a numeric field\n      addNumericField(field, values, true);\n      // write the doc -> ord count as a absolute index to the stream\n      addAddresses(field, docToValueCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesConsumer#addSortedNumericField(FieldInfo,Iterable[Number],Iterable[Number]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesConsumer#addSortedNumericField(FieldInfo,Iterable[Number],Iterable[Number]).mjava","sourceNew":"  @Override\n  public void addSortedNumericField(FieldInfo field, final Iterable<Number> docToValueCount, final Iterable<Number> values) throws IOException {\n    checkCanWrite(field);\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene49DocValuesFormat.SORTED_NUMERIC);\n    if (isSingleValued(docToValueCount)) {\n      meta.writeVInt(SORTED_SINGLE_VALUED);\n      // The field is single-valued, we can encode it as NUMERIC\n      addNumericField(field, singletonView(docToValueCount, values, null));\n    } else {\n      meta.writeVInt(SORTED_WITH_ADDRESSES);\n      // write the stream of values as a numeric field\n      addNumericField(field, values, true);\n      // write the doc -> ord count as a absolute index to the stream\n      addAddresses(field, docToValueCount);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addSortedNumericField(FieldInfo field, final Iterable<Number> docToValueCount, final Iterable<Number> values) throws IOException {\n    checkCanWrite(field);\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene49DocValuesFormat.SORTED_NUMERIC);\n    if (isSingleValued(docToValueCount)) {\n      meta.writeVInt(SORTED_SINGLE_VALUED);\n      // The field is single-valued, we can encode it as NUMERIC\n      addNumericField(field, singletonView(docToValueCount, values, null));\n    } else {\n      meta.writeVInt(SORTED_WITH_ADDRESSES);\n      // write the stream of values as a numeric field\n      addNumericField(field, values, true);\n      // write the doc -> ord count as a absolute index to the stream\n      addAddresses(field, docToValueCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793"],"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793":["d14ffaac9c4a4a2c750bf0cd956506802561e062"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"d14ffaac9c4a4a2c750bf0cd956506802561e062":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"d14ffaac9c4a4a2c750bf0cd956506802561e062":["0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793","c6f080a2ab37c464dd98db173f6cbf10dc74f211"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}