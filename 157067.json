{"path":"solr/core/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase#writeCharStream(NamedList[Object],CharStream).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase#writeCharStream(NamedList[Object],CharStream).mjava","pathOld":"solr/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase#writeCharStream(NamedList[Object],CharStream).mjava","sourceNew":"  private String writeCharStream(NamedList<Object> out, CharStream input ){\n    final int BUFFER_SIZE = 1024;\n    char[] buf = new char[BUFFER_SIZE];\n    int len = 0;\n    StringBuilder sb = new StringBuilder();\n    do {\n      try {\n        len = input.read( buf, 0, BUFFER_SIZE );\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      if( len > 0 )\n        sb.append(buf, 0, len);\n    } while( len == BUFFER_SIZE );\n    out.add( input.getClass().getName(), sb.toString());\n    return sb.toString();\n  }\n\n","sourceOld":"  private String writeCharStream(NamedList<Object> out, CharStream input ){\n    final int BUFFER_SIZE = 1024;\n    char[] buf = new char[BUFFER_SIZE];\n    int len = 0;\n    StringBuilder sb = new StringBuilder();\n    do {\n      try {\n        len = input.read( buf, 0, BUFFER_SIZE );\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      if( len > 0 )\n        sb.append(buf, 0, len);\n    } while( len == BUFFER_SIZE );\n    out.add( input.getClass().getName(), sb.toString());\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase#writeCharStream(NamedList[Object],CharStream).mjava","pathOld":"solr/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase#writeCharStream(NamedList[Object],CharStream).mjava","sourceNew":"  private String writeCharStream(NamedList<Object> out, CharStream input ){\n    final int BUFFER_SIZE = 1024;\n    char[] buf = new char[BUFFER_SIZE];\n    int len = 0;\n    StringBuilder sb = new StringBuilder();\n    do {\n      try {\n        len = input.read( buf, 0, BUFFER_SIZE );\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      if( len > 0 )\n        sb.append(buf, 0, len);\n    } while( len == BUFFER_SIZE );\n    out.add( input.getClass().getName(), sb.toString());\n    return sb.toString();\n  }\n\n","sourceOld":"  private String writeCharStream(NamedList<Object> out, CharStream input ){\n    final int BUFFER_SIZE = 1024;\n    char[] buf = new char[BUFFER_SIZE];\n    int len = 0;\n    StringBuilder sb = new StringBuilder();\n    do {\n      try {\n        len = input.read( buf, 0, BUFFER_SIZE );\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      if( len > 0 )\n        sb.append(buf, 0, len);\n    } while( len == BUFFER_SIZE );\n    out.add( input.getClass().getName(), sb.toString());\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase#writeCharStream(NamedList[Object],CharStream).mjava","pathOld":"solr/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase#writeCharStream(NamedList[Object],CharStream).mjava","sourceNew":"  private String writeCharStream(NamedList<Object> out, CharStream input ){\n    final int BUFFER_SIZE = 1024;\n    char[] buf = new char[BUFFER_SIZE];\n    int len = 0;\n    StringBuilder sb = new StringBuilder();\n    do {\n      try {\n        len = input.read( buf, 0, BUFFER_SIZE );\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      if( len > 0 )\n        sb.append(buf, 0, len);\n    } while( len == BUFFER_SIZE );\n    out.add( input.getClass().getName(), sb.toString());\n    return sb.toString();\n  }\n\n","sourceOld":"  private String writeCharStream(NamedList<Object> out, CharStream input ){\n    final int BUFFER_SIZE = 1024;\n    char[] buf = new char[BUFFER_SIZE];\n    int len = 0;\n    StringBuilder sb = new StringBuilder();\n    do {\n      try {\n        len = input.read( buf, 0, BUFFER_SIZE );\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      if( len > 0 )\n        sb.append(buf, 0, len);\n    } while( len == BUFFER_SIZE );\n    out.add( input.getClass().getName(), sb.toString());\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc706b1e03a539d44d99998108feb684bb44cbb2","date":1342522408,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase#writeCharStream(NamedList[Object],Reader).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase#writeCharStream(NamedList[Object],CharStream).mjava","sourceNew":"  private String writeCharStream(NamedList<Object> out, Reader input ){\n    final int BUFFER_SIZE = 1024;\n    char[] buf = new char[BUFFER_SIZE];\n    int len = 0;\n    StringBuilder sb = new StringBuilder();\n    do {\n      try {\n        len = input.read( buf, 0, BUFFER_SIZE );\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      if( len > 0 )\n        sb.append(buf, 0, len);\n    } while( len == BUFFER_SIZE );\n    out.add( input.getClass().getName(), sb.toString());\n    return sb.toString();\n  }\n\n","sourceOld":"  private String writeCharStream(NamedList<Object> out, CharStream input ){\n    final int BUFFER_SIZE = 1024;\n    char[] buf = new char[BUFFER_SIZE];\n    int len = 0;\n    StringBuilder sb = new StringBuilder();\n    do {\n      try {\n        len = input.read( buf, 0, BUFFER_SIZE );\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      if( len > 0 )\n        sb.append(buf, 0, len);\n    } while( len == BUFFER_SIZE );\n    out.add( input.getClass().getName(), sb.toString());\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase#writeCharStream(NamedList[Object],CharStream).mjava","sourceNew":null,"sourceOld":"  private String writeCharStream(NamedList<Object> out, CharStream input ){\n    final int BUFFER_SIZE = 1024;\n    char[] buf = new char[BUFFER_SIZE];\n    int len = 0;\n    StringBuilder sb = new StringBuilder();\n    do {\n      try {\n        len = input.read( buf, 0, BUFFER_SIZE );\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      if( len > 0 )\n        sb.append(buf, 0, len);\n    } while( len == BUFFER_SIZE );\n    out.add( input.getClass().getName(), sb.toString());\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase#writeCharStream(NamedList[Object],CharStream).mjava","sourceNew":null,"sourceOld":"  private String writeCharStream(NamedList<Object> out, CharStream input ){\n    final int BUFFER_SIZE = 1024;\n    char[] buf = new char[BUFFER_SIZE];\n    int len = 0;\n    StringBuilder sb = new StringBuilder();\n    do {\n      try {\n        len = input.read( buf, 0, BUFFER_SIZE );\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      if( len > 0 )\n        sb.append(buf, 0, len);\n    } while( len == BUFFER_SIZE );\n    out.add( input.getClass().getName(), sb.toString());\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["c26f00b574427b55127e869b935845554afde1fa","fc706b1e03a539d44d99998108feb684bb44cbb2"],"fc706b1e03a539d44d99998108feb684bb44cbb2":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c26f00b574427b55127e869b935845554afde1fa","fc706b1e03a539d44d99998108feb684bb44cbb2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fc706b1e03a539d44d99998108feb684bb44cbb2"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fc706b1e03a539d44d99998108feb684bb44cbb2":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["aba371508186796cc6151d8223a5b4e16d02e26e","fc706b1e03a539d44d99998108feb684bb44cbb2","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}