{"path":"lucene/core/src/java/org/apache/lucene/codecs/PostingsFormat#fieldsProducer(SegmentReadState).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/PostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/PostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  /** Reads a segment.  NOTE: by the time this call\n   *  returns, it must hold open any files it will need to\n   *  use; else, those files may be deleted. */\n  public abstract FieldsProducer fieldsProducer(SegmentReadState state) throws IOException;\n\n","sourceOld":"  /** Reads a segment.  NOTE: by the time this call\n   *  returns, it must hold open any files it will need to\n   *  use; else, those files may be deleted. */\n  public abstract FieldsProducer fieldsProducer(SegmentReadState state) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08eba3d52b63561ebf936481ce73e6b6a14aa03","date":1333879759,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/PostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/PostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  /** Reads a segment.  NOTE: by the time this call\n   *  returns, it must hold open any files it will need to\n   *  use; else, those files may be deleted. */\n  public abstract InvertedFieldsProducer fieldsProducer(SegmentReadState state) throws IOException;\n\n","sourceOld":"  /** Reads a segment.  NOTE: by the time this call\n   *  returns, it must hold open any files it will need to\n   *  use; else, those files may be deleted. */\n  public abstract FieldsProducer fieldsProducer(SegmentReadState state) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","date":1333892281,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/PostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/PostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  /** Reads a segment.  NOTE: by the time this call\n   *  returns, it must hold open any files it will need to\n   *  use; else, those files may be deleted. */\n  public abstract FieldsProducer fieldsProducer(SegmentReadState state) throws IOException;\n\n","sourceOld":"  /** Reads a segment.  NOTE: by the time this call\n   *  returns, it must hold open any files it will need to\n   *  use; else, those files may be deleted. */\n  public abstract InvertedFieldsProducer fieldsProducer(SegmentReadState state) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0274c27988a26cb0cda3a0d15b282221b1b453f0","date":1343923460,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/PostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/PostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  /** Reads a segment.  NOTE: by the time this call\n   *  returns, it must hold open any files it will need to\n   *  use; else, those files may be deleted. \n   *  Additionally, required files may be deleted during the execution of \n   *  this call before there is a chance to open them. Under these \n   *  circumstances an IOException should be thrown by the implementation. \n   *  IOExceptions are expected and will automatically cause a retry of the \n   *  segment opening logic with the newly revised segments.\n   *  */\n  public abstract FieldsProducer fieldsProducer(SegmentReadState state) throws IOException;\n\n","sourceOld":"  /** Reads a segment.  NOTE: by the time this call\n   *  returns, it must hold open any files it will need to\n   *  use; else, those files may be deleted. */\n  public abstract FieldsProducer fieldsProducer(SegmentReadState state) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/PostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/PostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  /** Reads a segment.  NOTE: by the time this call\n   *  returns, it must hold open any files it will need to\n   *  use; else, those files may be deleted. \n   *  Additionally, required files may be deleted during the execution of \n   *  this call before there is a chance to open them. Under these \n   *  circumstances an IOException should be thrown by the implementation. \n   *  IOExceptions are expected and will automatically cause a retry of the \n   *  segment opening logic with the newly revised segments.\n   *  */\n  public abstract FieldsProducer fieldsProducer(SegmentReadState state) throws IOException;\n\n","sourceOld":"  /** Reads a segment.  NOTE: by the time this call\n   *  returns, it must hold open any files it will need to\n   *  use; else, those files may be deleted. */\n  public abstract FieldsProducer fieldsProducer(SegmentReadState state) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/PostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/PostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  /** Reads a segment.  NOTE: by the time this call\n   *  returns, it must hold open any files it will need to\n   *  use; else, those files may be deleted. \n   *  Additionally, required files may be deleted during the execution of \n   *  this call before there is a chance to open them. Under these \n   *  circumstances an IOException should be thrown by the implementation. \n   *  IOExceptions are expected and will automatically cause a retry of the \n   *  segment opening logic with the newly revised segments.\n   *  */\n  public abstract FieldsProducer fieldsProducer(SegmentReadState state) throws IOException;\n\n","sourceOld":"  /** Reads a segment.  NOTE: by the time this call\n   *  returns, it must hold open any files it will need to\n   *  use; else, those files may be deleted. */\n  public abstract FieldsProducer fieldsProducer(SegmentReadState state) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0274c27988a26cb0cda3a0d15b282221b1b453f0":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","0274c27988a26cb0cda3a0d15b282221b1b453f0"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","0274c27988a26cb0cda3a0d15b282221b1b453f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0274c27988a26cb0cda3a0d15b282221b1b453f0"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0274c27988a26cb0cda3a0d15b282221b1b453f0":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["0274c27988a26cb0cda3a0d15b282221b1b453f0","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}