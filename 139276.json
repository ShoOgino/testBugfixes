{"path":"solr/core/src/java/org/apache/solr/analysis/CJKBigramFilterFactory#init(Map[String,String]).mjava","commits":[{"id":"680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee","date":1325135089,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/CJKBigramFilterFactory#init(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3241e06e642196396b80bb293acd9c0814d079e0","date":1343094999,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilterFactory#init(Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/CJKBigramFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilterFactory#init(Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/CJKBigramFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilterFactory#init(Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/CJKBigramFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilterFactory#init(Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/CJKBigramFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee","5a1a22b1ad88b436661458df567f3fdb446392a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee","5a1a22b1ad88b436661458df567f3fdb446392a4"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee","3241e06e642196396b80bb293acd9c0814d079e0"],"3241e06e642196396b80bb293acd9c0814d079e0":["680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a1a22b1ad88b436661458df567f3fdb446392a4"]},"commit2Childs":{"680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","5a1a22b1ad88b436661458df567f3fdb446392a4","3241e06e642196396b80bb293acd9c0814d079e0"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3241e06e642196396b80bb293acd9c0814d079e0":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}