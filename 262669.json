{"path":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testHighlightingSynonymQuery().mjava","commits":[{"id":"02d468a946da60dfedb2d8d178fc0c40461f9798","date":1465542675,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testHighlightingSynonymQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testHighlightingSynonymQuery() throws Exception {\n    searcher = newSearcher(reader);\n    Query query = new SynonymQuery(new Term(FIELD_NAME, \"jfk\"), new Term(FIELD_NAME, \"kennedy\"));\n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n    TokenStream stream = getAnyTokenStream(FIELD_NAME, 2);\n    Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n    highlighter.setTextFragmenter(fragmenter);\n    String storedField = searcher.doc(2).get(FIELD_NAME);\n    String fragment = highlighter.getBestFragment(stream, storedField);\n    assertEquals(\"<B>JFK</B> has been shot\", fragment);\n\n    stream = getAnyTokenStream(FIELD_NAME, 3);\n    storedField = searcher.doc(3).get(FIELD_NAME);\n    fragment = highlighter.getBestFragment(stream, storedField);\n    assertEquals(\"John <B>Kennedy</B> has been shot\", fragment);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testHighlightingSynonymQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testHighlightingSynonymQuery() throws Exception {\n    searcher = newSearcher(reader);\n    Query query = new SynonymQuery(new Term(FIELD_NAME, \"jfk\"), new Term(FIELD_NAME, \"kennedy\"));\n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n    TokenStream stream = getAnyTokenStream(FIELD_NAME, 2);\n    Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n    highlighter.setTextFragmenter(fragmenter);\n    String storedField = searcher.doc(2).get(FIELD_NAME);\n    String fragment = highlighter.getBestFragment(stream, storedField);\n    assertEquals(\"<B>JFK</B> has been shot\", fragment);\n\n    stream = getAnyTokenStream(FIELD_NAME, 3);\n    storedField = searcher.doc(3).get(FIELD_NAME);\n    fragment = highlighter.getBestFragment(stream, storedField);\n    assertEquals(\"John <B>Kennedy</B> has been shot\", fragment);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df25592b82060bc1c800e87bf019444bf0ddf9d4","date":1552296011,"type":3,"author":"jimczi","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testHighlightingSynonymQuery().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testHighlightingSynonymQuery().mjava","sourceNew":"  public void testHighlightingSynonymQuery() throws Exception {\n    searcher = newSearcher(reader);\n    Query query = new SynonymQuery.Builder(FIELD_NAME)\n        .addTerm(new Term(FIELD_NAME, \"jfk\"))\n        .addTerm(new Term(FIELD_NAME, \"kennedy\"))\n        .build();\n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n    TokenStream stream = getAnyTokenStream(FIELD_NAME, 2);\n    Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n    highlighter.setTextFragmenter(fragmenter);\n    String storedField = searcher.doc(2).get(FIELD_NAME);\n    String fragment = highlighter.getBestFragment(stream, storedField);\n    assertEquals(\"<B>JFK</B> has been shot\", fragment);\n\n    stream = getAnyTokenStream(FIELD_NAME, 3);\n    storedField = searcher.doc(3).get(FIELD_NAME);\n    fragment = highlighter.getBestFragment(stream, storedField);\n    assertEquals(\"John <B>Kennedy</B> has been shot\", fragment);\n  }\n\n","sourceOld":"  public void testHighlightingSynonymQuery() throws Exception {\n    searcher = newSearcher(reader);\n    Query query = new SynonymQuery(new Term(FIELD_NAME, \"jfk\"), new Term(FIELD_NAME, \"kennedy\"));\n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n    TokenStream stream = getAnyTokenStream(FIELD_NAME, 2);\n    Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n    highlighter.setTextFragmenter(fragmenter);\n    String storedField = searcher.doc(2).get(FIELD_NAME);\n    String fragment = highlighter.getBestFragment(stream, storedField);\n    assertEquals(\"<B>JFK</B> has been shot\", fragment);\n\n    stream = getAnyTokenStream(FIELD_NAME, 3);\n    storedField = searcher.doc(3).get(FIELD_NAME);\n    fragment = highlighter.getBestFragment(stream, storedField);\n    assertEquals(\"John <B>Kennedy</B> has been shot\", fragment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"df25592b82060bc1c800e87bf019444bf0ddf9d4":["02d468a946da60dfedb2d8d178fc0c40461f9798"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","02d468a946da60dfedb2d8d178fc0c40461f9798"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df25592b82060bc1c800e87bf019444bf0ddf9d4"],"02d468a946da60dfedb2d8d178fc0c40461f9798":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","02d468a946da60dfedb2d8d178fc0c40461f9798"],"df25592b82060bc1c800e87bf019444bf0ddf9d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"02d468a946da60dfedb2d8d178fc0c40461f9798":["df25592b82060bc1c800e87bf019444bf0ddf9d4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}