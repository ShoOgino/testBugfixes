{"path":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestDrillDownQuery#testQueryImplicitDefaultParams().mjava","commits":[{"id":"ca39562b2d7687143fdb601d5de1b8f7b778f1db","date":1385299806,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestDrillDownQuery#testQueryImplicitDefaultParams().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/DrillDownQueryTest#testQueryImplicitDefaultParams().mjava","sourceNew":"  public void testQueryImplicitDefaultParams() throws IOException {\n    IndexSearcher searcher = newSearcher(reader);\n\n    // Create the base query to start with\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery(config);\n    q.add(\"a\");\n    \n    // Making sure the query yields 5 documents with the facet \"b\" and the\n    // previous (facet \"a\") query as a base query\n    SimpleDrillDownQuery q2 = new SimpleDrillDownQuery(config, q);\n    q2.add(\"b\");\n    TopDocs docs = searcher.search(q2, 100);\n    assertEquals(5, docs.totalHits);\n\n    // Check that content:foo (which yields 50% results) and facet/b (which yields 20%)\n    // would gather together 10 results (10%..) \n    Query fooQuery = new TermQuery(new Term(\"content\", \"foo\"));\n    SimpleDrillDownQuery q4 = new SimpleDrillDownQuery(config, fooQuery);\n    q4.add(\"b\");\n    docs = searcher.search(q4, 100);\n    assertEquals(10, docs.totalHits);\n  }\n\n","sourceOld":"  @Test\n  public void testQueryImplicitDefaultParams() throws IOException {\n    IndexSearcher searcher = newSearcher(reader);\n\n    // Create the base query to start with\n    DrillDownQuery q = new DrillDownQuery(defaultParams);\n    q.add(new FacetLabel(\"a\"));\n    \n    // Making sure the query yields 5 documents with the facet \"b\" and the\n    // previous (facet \"a\") query as a base query\n    DrillDownQuery q2 = new DrillDownQuery(defaultParams, q);\n    q2.add(new FacetLabel(\"b\"));\n    TopDocs docs = searcher.search(q2, 100);\n    assertEquals(5, docs.totalHits);\n\n    // Check that content:foo (which yields 50% results) and facet/b (which yields 20%)\n    // would gather together 10 results (10%..) \n    Query fooQuery = new TermQuery(new Term(\"content\", \"foo\"));\n    DrillDownQuery q4 = new DrillDownQuery(defaultParams, fooQuery);\n    q4.add(new FacetLabel(\"b\"));\n    docs = searcher.search(q4, 100);\n    assertEquals(10, docs.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillDownQuery#testQueryImplicitDefaultParams().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestDrillDownQuery#testQueryImplicitDefaultParams().mjava","sourceNew":"  public void testQueryImplicitDefaultParams() throws IOException {\n    IndexSearcher searcher = newSearcher(reader);\n\n    // Create the base query to start with\n    DrillDownQuery q = new DrillDownQuery(config);\n    q.add(\"a\");\n    \n    // Making sure the query yields 5 documents with the facet \"b\" and the\n    // previous (facet \"a\") query as a base query\n    DrillDownQuery q2 = new DrillDownQuery(config, q);\n    q2.add(\"b\");\n    TopDocs docs = searcher.search(q2, 100);\n    assertEquals(5, docs.totalHits);\n\n    // Check that content:foo (which yields 50% results) and facet/b (which yields 20%)\n    // would gather together 10 results (10%..) \n    Query fooQuery = new TermQuery(new Term(\"content\", \"foo\"));\n    DrillDownQuery q4 = new DrillDownQuery(config, fooQuery);\n    q4.add(\"b\");\n    docs = searcher.search(q4, 100);\n    assertEquals(10, docs.totalHits);\n  }\n\n","sourceOld":"  public void testQueryImplicitDefaultParams() throws IOException {\n    IndexSearcher searcher = newSearcher(reader);\n\n    // Create the base query to start with\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery(config);\n    q.add(\"a\");\n    \n    // Making sure the query yields 5 documents with the facet \"b\" and the\n    // previous (facet \"a\") query as a base query\n    SimpleDrillDownQuery q2 = new SimpleDrillDownQuery(config, q);\n    q2.add(\"b\");\n    TopDocs docs = searcher.search(q2, 100);\n    assertEquals(5, docs.totalHits);\n\n    // Check that content:foo (which yields 50% results) and facet/b (which yields 20%)\n    // would gather together 10 results (10%..) \n    Query fooQuery = new TermQuery(new Term(\"content\", \"foo\"));\n    SimpleDrillDownQuery q4 = new SimpleDrillDownQuery(config, fooQuery);\n    q4.add(\"b\");\n    docs = searcher.search(q4, 100);\n    assertEquals(10, docs.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["ca39562b2d7687143fdb601d5de1b8f7b778f1db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ca39562b2d7687143fdb601d5de1b8f7b778f1db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","ca39562b2d7687143fdb601d5de1b8f7b778f1db"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"ca39562b2d7687143fdb601d5de1b8f7b778f1db":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}