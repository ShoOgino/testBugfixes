{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#close().mjava","commits":[{"id":"d7a738ebbf9537051521dcc7e49f69208f91e2fc","date":1358194026,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesConsumer#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // nocommit: just write this to a RAMfile or something and flush it here, with #fields first.\n    // this meta is a tiny file so this hurts nobody\n    meta.writeVInt(-1);\n    IOUtils.close(data, meta);\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // nocommit: just write this to a RAMfile or something and flush it here, with #fields first.\n    // this meta is a tiny file so this hurts nobody\n    meta.writeVInt(-1);\n    IOUtils.close(data, meta);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"108734069d2c88e21774458fb016ab95c8a643d1","date":1358782151,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // nocommit: just write this to a RAMfile or something and flush it here, with #fields first.\n    // this meta is a tiny file so this hurts nobody\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1);\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // nocommit: just write this to a RAMfile or something and flush it here, with #fields first.\n    // this meta is a tiny file so this hurts nobody\n    meta.writeVInt(-1);\n    IOUtils.close(data, meta);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9ff828682aeceb1f6bf2e445208c2f52b4f61e9","date":1359302131,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // nocommit: just write this to a RAMfile or something and flush it here, with #fields first.\n    // this meta is a tiny file so this hurts nobody\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1);\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11a746437bc5c0a0b3df0337ed249c387c812871","date":1376687959,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene45/Lucene45DocValuesConsumer#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesConsumer#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":5,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesConsumer#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"11a746437bc5c0a0b3df0337ed249c387c812871":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c9ff828682aeceb1f6bf2e445208c2f52b4f61e9"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["d4d69c535930b5cce125cff868d40f6373dc27d4","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["d4d69c535930b5cce125cff868d40f6373dc27d4","11a746437bc5c0a0b3df0337ed249c387c812871"],"c9ff828682aeceb1f6bf2e445208c2f52b4f61e9":["108734069d2c88e21774458fb016ab95c8a643d1"],"d7a738ebbf9537051521dcc7e49f69208f91e2fc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"108734069d2c88e21774458fb016ab95c8a643d1":["d7a738ebbf9537051521dcc7e49f69208f91e2fc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"]},"commit2Childs":{"11a746437bc5c0a0b3df0337ed249c387c812871":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["11a746437bc5c0a0b3df0337ed249c387c812871","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","d7a738ebbf9537051521dcc7e49f69208f91e2fc"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9ff828682aeceb1f6bf2e445208c2f52b4f61e9":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d7a738ebbf9537051521dcc7e49f69208f91e2fc":["108734069d2c88e21774458fb016ab95c8a643d1"],"108734069d2c88e21774458fb016ab95c8a643d1":["c9ff828682aeceb1f6bf2e445208c2f52b4f61e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}