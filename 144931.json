{"path":"src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","commits":[{"id":"c7e70cecc56c33998f8f16cd1fbbc5a58de17f28","date":1247656558,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"/dev/null","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(2);\n    writer.setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(2);\n    writer.setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(2);\n    writer.setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(2);\n    writer.setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(2);\n    writer.setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(2);\n    writer.setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(2);\n    writer.setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(2);\n    writer.setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"c7e70cecc56c33998f8f16cd1fbbc5a58de17f28":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["c7e70cecc56c33998f8f16cd1fbbc5a58de17f28"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c7e70cecc56c33998f8f16cd1fbbc5a58de17f28":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7e70cecc56c33998f8f16cd1fbbc5a58de17f28"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}