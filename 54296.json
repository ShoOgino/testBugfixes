{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#getDateResolution(String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#getDateResolution(String).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#getDateResolution(String).mjava","sourceNew":"  /**\n   * Returns the date resolution that is used by RangeQueries for the given field.\n   * Returns null, if no default or field specific date resolution has been set\n   * for the given field.\n   *\n   */\n  public DateTools.Resolution getDateResolution(String fieldName) {\n    if (fieldName == null) {\n      throw new IllegalArgumentException(\"Field cannot be null.\");\n    }\n\n    if (fieldToDateResolution == null) {\n      // no field specific date resolutions set; return default date resolution instead\n      return this.dateResolution;\n    }\n\n    DateTools.Resolution resolution = fieldToDateResolution.get(fieldName);\n    if (resolution == null) {\n      // no date resolutions set for the given field; return default date resolution instead\n      resolution = this.dateResolution;\n    }\n\n    return resolution;\n  }\n\n","sourceOld":"  /**\n   * Returns the date resolution that is used by RangeQueries for the given field.\n   * Returns null, if no default or field specific date resolution has been set\n   * for the given field.\n   *\n   */\n  public DateTools.Resolution getDateResolution(String fieldName) {\n    if (fieldName == null) {\n      throw new IllegalArgumentException(\"Field cannot be null.\");\n    }\n\n    if (fieldToDateResolution == null) {\n      // no field specific date resolutions set; return default date resolution instead\n      return this.dateResolution;\n    }\n\n    DateTools.Resolution resolution = fieldToDateResolution.get(fieldName);\n    if (resolution == null) {\n      // no date resolutions set for the given field; return default date resolution instead\n      resolution = this.dateResolution;\n    }\n\n    return resolution;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad0d09e969f4763b0df4230f8e3f74357872a4e4","date":1459188769,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#getDateResolution(String).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#getDateResolution(String).mjava","sourceNew":"  /**\n   * Returns the date resolution that is used by RangeQueries for the given field.\n   * Returns null, if no default or field specific date resolution has been set\n   * for the given field.\n   *\n   */\n  public DateTools.Resolution getDateResolution(String fieldName) {\n    if (fieldName == null) {\n      throw new IllegalArgumentException(\"Field must not be null.\");\n    }\n\n    if (fieldToDateResolution == null) {\n      // no field specific date resolutions set; return default date resolution instead\n      return this.dateResolution;\n    }\n\n    DateTools.Resolution resolution = fieldToDateResolution.get(fieldName);\n    if (resolution == null) {\n      // no date resolutions set for the given field; return default date resolution instead\n      resolution = this.dateResolution;\n    }\n\n    return resolution;\n  }\n\n","sourceOld":"  /**\n   * Returns the date resolution that is used by RangeQueries for the given field.\n   * Returns null, if no default or field specific date resolution has been set\n   * for the given field.\n   *\n   */\n  public DateTools.Resolution getDateResolution(String fieldName) {\n    if (fieldName == null) {\n      throw new IllegalArgumentException(\"Field cannot be null.\");\n    }\n\n    if (fieldToDateResolution == null) {\n      // no field specific date resolutions set; return default date resolution instead\n      return this.dateResolution;\n    }\n\n    DateTools.Resolution resolution = fieldToDateResolution.get(fieldName);\n    if (resolution == null) {\n      // no date resolutions set for the given field; return default date resolution instead\n      resolution = this.dateResolution;\n    }\n\n    return resolution;\n  }\n\n","bugFix":["bed62fe6383040eaff2ec720cdc55bb1462c61da"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad0d09e969f4763b0df4230f8e3f74357872a4e4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ad0d09e969f4763b0df4230f8e3f74357872a4e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}