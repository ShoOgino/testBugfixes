{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testEquals().mjava","commits":[{"id":"5839bca64b33c24668e37476ee168d00dc0bb96d","date":1457536035,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testEquals().mjava","pathOld":"/dev/null","sourceNew":"  public void testEquals() {\n    GeoShape shape = randomShape(PlanetModel.WGS84);\n    Query q = Geo3DPoint.newShapeQuery(\"point\", shape);\n    assertEquals(q, Geo3DPoint.newShapeQuery(\"point\", shape));\n    \n    // make a different random shape:\n    GeoShape shape2;\n    do {\n      shape2 = randomShape(PlanetModel.WGS84);\n    } while (shape.equals(shape2));\n\n    assertFalse(q.equals(Geo3DPoint.newShapeQuery(\"point\", shape2)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2270976e274799939e1b5339eb6c16c7601dfda","date":1458767534,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testEquals().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testEquals().mjava","sourceNew":"  public void testEquals() {\n    GeoShape shape = randomShape(PlanetModel.WGS84);\n    Query q = Geo3DPoint.newShapeQuery(\"point\", shape);\n    assertEquals(q, Geo3DPoint.newShapeQuery(\"point\", shape));\n    assertFalse(q.equals(Geo3DPoint.newShapeQuery(\"point2\", shape)));\n    \n    // make a different random shape:\n    GeoShape shape2;\n    do {\n      shape2 = randomShape(PlanetModel.WGS84);\n    } while (shape.equals(shape2));\n\n    assertFalse(q.equals(Geo3DPoint.newShapeQuery(\"point\", shape2)));\n  }\n\n","sourceOld":"  public void testEquals() {\n    GeoShape shape = randomShape(PlanetModel.WGS84);\n    Query q = Geo3DPoint.newShapeQuery(\"point\", shape);\n    assertEquals(q, Geo3DPoint.newShapeQuery(\"point\", shape));\n    \n    // make a different random shape:\n    GeoShape shape2;\n    do {\n      shape2 = randomShape(PlanetModel.WGS84);\n    } while (shape.equals(shape2));\n\n    assertFalse(q.equals(Geo3DPoint.newShapeQuery(\"point\", shape2)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9","date":1459984736,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testEquals().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testEquals().mjava","sourceNew":"  public void testEquals() {\n    GeoShape shape = randomShape();\n    Query q = Geo3DPoint.newShapeQuery(\"point\", shape);\n    assertEquals(q, Geo3DPoint.newShapeQuery(\"point\", shape));\n    assertFalse(q.equals(Geo3DPoint.newShapeQuery(\"point2\", shape)));\n    \n    // make a different random shape:\n    GeoShape shape2;\n    do {\n      shape2 = randomShape();\n    } while (shape.equals(shape2));\n\n    assertFalse(q.equals(Geo3DPoint.newShapeQuery(\"point\", shape2)));\n  }\n\n","sourceOld":"  public void testEquals() {\n    GeoShape shape = randomShape(PlanetModel.WGS84);\n    Query q = Geo3DPoint.newShapeQuery(\"point\", shape);\n    assertEquals(q, Geo3DPoint.newShapeQuery(\"point\", shape));\n    assertFalse(q.equals(Geo3DPoint.newShapeQuery(\"point2\", shape)));\n    \n    // make a different random shape:\n    GeoShape shape2;\n    do {\n      shape2 = randomShape(PlanetModel.WGS84);\n    } while (shape.equals(shape2));\n\n    assertFalse(q.equals(Geo3DPoint.newShapeQuery(\"point\", shape2)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","date":1583186777,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testEquals().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testEquals().mjava","sourceNew":"  public void testEquals() {\n    PlanetModel planetModel = randomPlanetModel();\n    GeoShape shape = randomShape(planetModel);\n    Query q = Geo3DPoint.newShapeQuery(\"point\", shape);\n    assertEquals(q, Geo3DPoint.newShapeQuery(\"point\", shape));\n    assertFalse(q.equals(Geo3DPoint.newShapeQuery(\"point2\", shape)));\n    \n    // make a different random shape:\n    GeoShape shape2;\n    do {\n      shape2 = randomShape(planetModel);\n    } while (shape.equals(shape2));\n\n    assertFalse(q.equals(Geo3DPoint.newShapeQuery(\"point\", shape2)));\n  }\n\n","sourceOld":"  public void testEquals() {\n    GeoShape shape = randomShape();\n    Query q = Geo3DPoint.newShapeQuery(\"point\", shape);\n    assertEquals(q, Geo3DPoint.newShapeQuery(\"point\", shape));\n    assertFalse(q.equals(Geo3DPoint.newShapeQuery(\"point2\", shape)));\n    \n    // make a different random shape:\n    GeoShape shape2;\n    do {\n      shape2 = randomShape();\n    } while (shape.equals(shape2));\n\n    assertFalse(q.equals(Geo3DPoint.newShapeQuery(\"point\", shape2)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9":["d2270976e274799939e1b5339eb6c16c7601dfda"],"d2270976e274799939e1b5339eb6c16c7601dfda":["5839bca64b33c24668e37476ee168d00dc0bb96d"],"5839bca64b33c24668e37476ee168d00dc0bb96d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"]},"commit2Childs":{"4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"],"d2270976e274799939e1b5339eb6c16c7601dfda":["4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9"],"5839bca64b33c24668e37476ee168d00dc0bb96d":["d2270976e274799939e1b5339eb6c16c7601dfda"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5839bca64b33c24668e37476ee168d00dc0bb96d"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}