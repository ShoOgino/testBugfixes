{"path":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","sourceNew":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(Version.LUCENE_CURRENT, factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n  }\n\n","sourceOld":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(Version.LUCENE_CURRENT, factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","sourceNew":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(Version.LUCENE_CURRENT, factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n  }\n\n","sourceOld":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(Version.LUCENE_CURRENT, factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d","date":1298208351,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","sourceNew":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(LuceneTestCase.TEST_VERSION_CURRENT, factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n  }\n\n","sourceOld":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(Version.LUCENE_CURRENT, factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","sourceNew":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(LuceneTestCase.TEST_VERSION_CURRENT, factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n  }\n\n","sourceOld":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(Version.LUCENE_CURRENT, factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","sourceNew":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(Version.LUCENE_CURRENT, factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n  }\n\n","sourceOld":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(Version.LUCENE_CURRENT, factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70a32e313633383bfadd3bbf8b933611c6a07c7c","date":1303945298,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","sourceNew":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(LuceneTestCase.TEST_VERSION_CURRENT, factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n  }\n\n","sourceOld":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(Version.LUCENE_CURRENT, factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d6179f9c4237a7e5d423f4e4b439a94e967efc9","date":1304382587,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","sourceNew":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n  }\n\n","sourceOld":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(LuceneTestCase.TEST_VERSION_CURRENT, factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2efdd13c0f37dbe4a292a6f98ddcf8e8f872ac4","date":1305207152,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","sourceNew":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n    this.streamState = State.SETREADER;\n  }\n\n","sourceOld":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","sourceNew":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n    this.streamState = State.SETREADER;\n  }\n\n","sourceOld":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(LuceneTestCase.TEST_VERSION_CURRENT, factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84fc017ed7c9f13d0cb96bce55a5909f7d6161b6","date":1306073935,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean,int).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","sourceNew":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase, int maxTokenLength) {\n    super(factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n    this.streamState = State.SETREADER;\n    this.maxTokenLength = maxTokenLength;\n  }\n\n","sourceOld":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n    this.streamState = State.SETREADER;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","sourceNew":null,"sourceOld":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(LuceneTestCase.TEST_VERSION_CURRENT, factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","date":1306150983,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean,int).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean).mjava","sourceNew":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase, int maxTokenLength) {\n    super(factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n    this.streamState = State.SETREADER;\n    this.maxTokenLength = maxTokenLength;\n  }\n\n","sourceOld":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase) {\n    super(factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n    this.streamState = State.SETREADER;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb","84fc017ed7c9f13d0cb96bce55a5909f7d6161b6"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["29ef99d61cda9641b6250bf9567329a6e65f901d","0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"70a32e313633383bfadd3bbf8b933611c6a07c7c":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"1d6179f9c4237a7e5d423f4e4b439a94e967efc9":["0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"84fc017ed7c9f13d0cb96bce55a5909f7d6161b6":["e2efdd13c0f37dbe4a292a6f98ddcf8e8f872ac4"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"e2efdd13c0f37dbe4a292a6f98ddcf8e8f872ac4":["1d6179f9c4237a7e5d423f4e4b439a94e967efc9"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a3776dccca01c11e7046323cfad46a3b4a471233":["0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d","84fc017ed7c9f13d0cb96bce55a5909f7d6161b6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["f1bdbf92da222965b46c0a942c3857ba56e5c638","e2efdd13c0f37dbe4a292a6f98ddcf8e8f872ac4"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["84fc017ed7c9f13d0cb96bce55a5909f7d6161b6"]},"commit2Childs":{"5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a":[],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"70a32e313633383bfadd3bbf8b933611c6a07c7c":[],"1d6179f9c4237a7e5d423f4e4b439a94e967efc9":["e2efdd13c0f37dbe4a292a6f98ddcf8e8f872ac4"],"84fc017ed7c9f13d0cb96bce55a5909f7d6161b6":["5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d","29ef99d61cda9641b6250bf9567329a6e65f901d"],"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d":["f1bdbf92da222965b46c0a942c3857ba56e5c638","1d6179f9c4237a7e5d423f4e4b439a94e967efc9","a3776dccca01c11e7046323cfad46a3b4a471233","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"e2efdd13c0f37dbe4a292a6f98ddcf8e8f872ac4":["84fc017ed7c9f13d0cb96bce55a5909f7d6161b6","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["70a32e313633383bfadd3bbf8b933611c6a07c7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","70a32e313633383bfadd3bbf8b933611c6a07c7c","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}