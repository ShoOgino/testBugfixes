{"path":"lucene/backwards/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","sourceNew":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link #setMaxFieldLength(int)} terms for a given field, the remainder are\n   * discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","sourceOld":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link #setMaxFieldLength(int)} terms for a given field, the remainder are\n   * discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","sourceNew":null,"sourceOld":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link #setMaxFieldLength(int)} terms for a given field, the remainder are\n   * discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}