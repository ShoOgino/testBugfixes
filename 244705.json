{"path":"client/java/solrj/src/org/apache/solr/client/solrj/util/ClientUtils#escape(String).mjava","commits":[{"id":"14b335dfc862ca11d6d75ba2650299712a9e3533","date":1223339809,"type":0,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/util/ClientUtils#escape(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * See: http://lucene.apache.org/java/docs/queryparsersyntax.html#Escaping Special Characters\n   */\n  public static String escape(String s) {\n    StringBuffer sb = new StringBuffer();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      // These characters are part of the query syntax and must be escaped\n      if (c == '\\\\' || c == '+' || c == '-' || c == '!' || c == '(' || c == ')' || c == ':'\n        || c == '^' || c == '[' || c == ']' || c == '\\\"' || c == '{' || c == '}' || c == '~'\n        || c == '*' || c == '?' || c == '|' || c == '&') {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c4a13538c36c02a7d9b892afcd5494c8c2f5ba5","date":1223358691,"type":4,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"/dev/null","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/util/ClientUtils#escape(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * See: http://lucene.apache.org/java/docs/queryparsersyntax.html#Escaping Special Characters\n   */\n  public static String escape(String s) {\n    StringBuffer sb = new StringBuffer();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      // These characters are part of the query syntax and must be escaped\n      if (c == '\\\\' || c == '+' || c == '-' || c == '!' || c == '(' || c == ')' || c == ':'\n        || c == '^' || c == '[' || c == ']' || c == '\\\"' || c == '{' || c == '}' || c == '~'\n        || c == '*' || c == '?' || c == '|' || c == '&') {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"2c4a13538c36c02a7d9b892afcd5494c8c2f5ba5":["14b335dfc862ca11d6d75ba2650299712a9e3533"],"14b335dfc862ca11d6d75ba2650299712a9e3533":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["14b335dfc862ca11d6d75ba2650299712a9e3533"],"2c4a13538c36c02a7d9b892afcd5494c8c2f5ba5":[],"14b335dfc862ca11d6d75ba2650299712a9e3533":["2c4a13538c36c02a7d9b892afcd5494c8c2f5ba5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2c4a13538c36c02a7d9b892afcd5494c8c2f5ba5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}