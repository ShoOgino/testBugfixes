{"path":"lucene/src/test/org/apache/lucene/util/TestCharsRef#testUTF16InUTF8Order().mjava","commits":[{"id":"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c","date":1310389132,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/TestCharsRef#testUTF16InUTF8Order().mjava","pathOld":"/dev/null","sourceNew":"  public void testUTF16InUTF8Order() {\n    final int numStrings = atLeast(1000);\n    BytesRef utf8[] = new BytesRef[numStrings];\n    CharsRef utf16[] = new CharsRef[numStrings];\n    \n    for (int i = 0; i < numStrings; i++) {\n      String s = _TestUtil.randomUnicodeString(random);\n      utf8[i] = new BytesRef(s);\n      utf16[i] = new CharsRef(s);\n    }\n    \n    Arrays.sort(utf8);\n    Arrays.sort(utf16, CharsRef.getUTF16SortedAsUTF8Comparator());\n    \n    for (int i = 0; i < numStrings; i++) {\n      assertEquals(utf8[i].utf8ToString(), utf16[i].toString());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testUTF16InUTF8Order().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestCharsRef#testUTF16InUTF8Order().mjava","sourceNew":"  public void testUTF16InUTF8Order() {\n    final int numStrings = atLeast(1000);\n    BytesRef utf8[] = new BytesRef[numStrings];\n    CharsRef utf16[] = new CharsRef[numStrings];\n    \n    for (int i = 0; i < numStrings; i++) {\n      String s = _TestUtil.randomUnicodeString(random);\n      utf8[i] = new BytesRef(s);\n      utf16[i] = new CharsRef(s);\n    }\n    \n    Arrays.sort(utf8);\n    Arrays.sort(utf16, CharsRef.getUTF16SortedAsUTF8Comparator());\n    \n    for (int i = 0; i < numStrings; i++) {\n      assertEquals(utf8[i].utf8ToString(), utf16[i].toString());\n    }\n  }\n\n","sourceOld":"  public void testUTF16InUTF8Order() {\n    final int numStrings = atLeast(1000);\n    BytesRef utf8[] = new BytesRef[numStrings];\n    CharsRef utf16[] = new CharsRef[numStrings];\n    \n    for (int i = 0; i < numStrings; i++) {\n      String s = _TestUtil.randomUnicodeString(random);\n      utf8[i] = new BytesRef(s);\n      utf16[i] = new CharsRef(s);\n    }\n    \n    Arrays.sort(utf8);\n    Arrays.sort(utf16, CharsRef.getUTF16SortedAsUTF8Comparator());\n    \n    for (int i = 0; i < numStrings; i++) {\n      assertEquals(utf8[i].utf8ToString(), utf16[i].toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}