{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#getReader(long,long,byte[]).mjava","commits":[{"id":"78bdc7d6906146edb12a1a6c1f765ba680ed5124","date":1549523533,"type":0,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#getReader(long,long,byte[]).mjava","pathOld":"/dev/null","sourceNew":"  protected OfflinePointReader getReader(long start, long length, byte[] reusableBuffer) throws IOException {\n    assert closed;\n    assert start + length <= count: \"start=\" + start + \" length=\" + length + \" count=\" + count;\n    assert expectedCount == 0 || count == expectedCount;\n    return new OfflinePointReader(tempDir, name, packedBytesLength, start, length, reusableBuffer);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2344a1c769566d8c85cffcacc5e55153fa54b86","date":1550661298,"type":3,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#getReader(long,long,byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#getReader(long,long,byte[]).mjava","sourceNew":"  protected OfflinePointReader getReader(long start, long length, byte[] reusableBuffer) throws IOException {\n    assert closed: \"point writer is still open and trying to get a reader\";\n    assert start + length <= count: \"start=\" + start + \" length=\" + length + \" count=\" + count;\n    assert expectedCount == 0 || count == expectedCount;\n    return new OfflinePointReader(tempDir, name, packedBytesLength, start, length, reusableBuffer);\n  }\n\n","sourceOld":"  protected OfflinePointReader getReader(long start, long length, byte[] reusableBuffer) throws IOException {\n    assert closed;\n    assert start + length <= count: \"start=\" + start + \" length=\" + length + \" count=\" + count;\n    assert expectedCount == 0 || count == expectedCount;\n    return new OfflinePointReader(tempDir, name, packedBytesLength, start, length, reusableBuffer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb94bf667d51f9c390c99d97afb36b7caab6b6e9","date":1599548621,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#getReader(long,long,byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#getReader(long,long,byte[]).mjava","sourceNew":"  protected OfflinePointReader getReader(long start, long length, byte[] reusableBuffer) throws IOException {\n    assert closed: \"point writer is still open and trying to get a reader\";\n    assert start + length <= count: \"start=\" + start + \" length=\" + length + \" count=\" + count;\n    assert expectedCount == 0 || count == expectedCount;\n    return new OfflinePointReader(config, tempDir, name, start, length, reusableBuffer);\n  }\n\n","sourceOld":"  protected OfflinePointReader getReader(long start, long length, byte[] reusableBuffer) throws IOException {\n    assert closed: \"point writer is still open and trying to get a reader\";\n    assert start + length <= count: \"start=\" + start + \" length=\" + length + \" count=\" + count;\n    assert expectedCount == 0 || count == expectedCount;\n    return new OfflinePointReader(tempDir, name, packedBytesLength, start, length, reusableBuffer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["c2344a1c769566d8c85cffcacc5e55153fa54b86"],"c2344a1c769566d8c85cffcacc5e55153fa54b86":["78bdc7d6906146edb12a1a6c1f765ba680ed5124"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78bdc7d6906146edb12a1a6c1f765ba680ed5124":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"]},"commit2Childs":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c2344a1c769566d8c85cffcacc5e55153fa54b86":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["78bdc7d6906146edb12a1a6c1f765ba680ed5124"],"78bdc7d6906146edb12a1a6c1f765ba680ed5124":["c2344a1c769566d8c85cffcacc5e55153fa54b86"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}