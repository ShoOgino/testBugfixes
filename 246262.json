{"path":"solr/core/src/java/org/apache/solr/util/StartupLoggingUtils#flushAllLoggers().mjava","commits":[{"id":"692408ae18c2ef033137a2452cfd345006469088","date":1552935159,"type":0,"author":"erick","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/StartupLoggingUtils#flushAllLoggers().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * This is primarily for tests to insure that log messages don't bleed from one test case to another, see:\n   * SOLR-13268.\n   *\n   * However, if there are situations where we want to insure that all log messages for all loggers are flushed,\n   * this method can be called by anyone. It should _not_ affect Solr in any way except, perhaps, a slight delay\n   * while messages are being flushed.\n   *\n   * Expert, there are rarely good reasons for this to be called outside of the test framework. If you are tempted to\n   * call this for running Solr, you should probably be using synchronous logging.\n   */\n  @SuppressForbidden(reason = \"Legitimate log4j2 access\")\n  public static void flushAllLoggers() {\n    if (!isLog4jActive()) {\n      logNotSupported(\"Not running log4j2, could not call shutdown for async logging.\");\n      return;\n    }\n\n    final LoggerContext logCtx = ((LoggerContext) LogManager.getContext(false));\n    for (final org.apache.logging.log4j.core.Logger logger : logCtx.getLoggers()) {\n      for (final Appender appender : logger.getAppenders().values()) {\n        if (appender instanceof AbstractOutputStreamAppender) {\n          ((AbstractOutputStreamAppender) appender).getManager().flush();\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"692408ae18c2ef033137a2452cfd345006469088":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["692408ae18c2ef033137a2452cfd345006469088"]},"commit2Childs":{"692408ae18c2ef033137a2452cfd345006469088":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["692408ae18c2ef033137a2452cfd345006469088"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}