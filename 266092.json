{"path":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testDestroy().mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testDestroy().mjava","pathOld":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testDestroy().mjava","sourceNew":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.index.GDataIndexer.destroy()'\n     */\n    public void testDestroy() throws InterruptedException, IOException {\n        this.indexer.destroy();\n        String id = \"myID\";\n        Field f = new Field(FIELD_ID, id, Field.Store.YES,\n                Field.Index.UN_TOKENIZED);\n        Document doc = new Document();\n        doc.add(f);\n        Term delTerm = new Term(FIELD_ID, id);\n        IndexDocument iDoc = new IndexDocumentStub(doc, delTerm,\n                IndexAction.INSERT);\n        Future<IndexDocument> future = new FutureStub<IndexDocument>(iDoc);\n        try{\n        this.indexer.addIndexableDocumentTask(future);\n        fail(\"indexer already closed exc. expected\");\n        }catch (IllegalStateException e) {}\n        this.indexer = GDataIndexer.createGdataIndexer(config, dir, true);\n        CountDownLatch documentLatch = new CountDownLatch(1);\n        iDoc = new IndexDocumentStub(doc, delTerm,\n                IndexAction.INSERT,documentLatch);\n        \n        CountDownLatch latch = new CountDownLatch(1);\n        future = new FutureStub<IndexDocument>(iDoc,latch,true);\n        this.indexer.addIndexableDocumentTask(future);\n        this.indexer.destroy();\n        latch.countDown();\n        documentLatch.await(5000,TimeUnit.MILLISECONDS);\n        // wait active for the commit\n        while(this.indexer.writer != null){}\n        \n        IndexSearcher s = new IndexSearcher(this.dir);\n        Hits h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        s.close();\n        \n        \n    }\n\n","sourceOld":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.index.GDataIndexer.destroy()'\n     */\n    public void testDestroy() throws InterruptedException, IOException {\n        this.indexer.destroy();\n        String id = \"myID\";\n        Field f = new Field(FIELD_ID, id, Field.Store.YES,\n                Field.Index.UN_TOKENIZED);\n        Document doc = new Document();\n        doc.add(f);\n        Term delTerm = new Term(FIELD_ID, id);\n        IndexDocument iDoc = new IndexDocumentStub(doc, delTerm,\n                IndexAction.INSERT);\n        Future<IndexDocument> future = new FutureStub<IndexDocument>(iDoc);\n        try{\n        this.indexer.addIndexableDocumentTask(future);\n        fail(\"indexer already closed exc. expected\");\n        }catch (IllegalStateException e) {}\n        this.indexer = GDataIndexer.createGdataIndexer(config, dir, true);\n        CountDownLatch documentLatch = new CountDownLatch(1);\n        iDoc = new IndexDocumentStub(doc, delTerm,\n                IndexAction.INSERT,documentLatch);\n        \n        CountDownLatch latch = new CountDownLatch(1);\n        future = new FutureStub<IndexDocument>(iDoc,latch,true);\n        this.indexer.addIndexableDocumentTask(future);\n        this.indexer.destroy();\n        latch.countDown();\n        documentLatch.await(5000,TimeUnit.MILLISECONDS);\n        // wait active for the commit\n        while(this.indexer.writer != null){}\n        \n        IndexSearcher s = new IndexSearcher(this.dir);\n        Hits h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        s.close();\n        \n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0678b6e692b406ca6ae7563704943b8b3546f506","date":1183811284,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testDestroy().mjava","pathOld":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testDestroy().mjava","sourceNew":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.index.GDataIndexer.destroy()'\n     */\n    public void testDestroy() throws InterruptedException, IOException {\n        this.indexer.destroy();\n        String id = \"myID\";\n        Field f = new Field(FIELD_ID, id, Field.Store.YES,\n                Field.Index.UN_TOKENIZED);\n        Document doc = new Document();\n        doc.add(f);\n        Term delTerm = new Term(FIELD_ID, id);\n        IndexDocument iDoc = new IndexDocumentStub(doc, delTerm,\n                IndexAction.INSERT);\n        Future<IndexDocument> future = new FutureStub<IndexDocument>(iDoc);\n        try{\n        this.indexer.addIndexableDocumentTask(future);\n        fail(\"indexer already closed exc. expected\");\n        }catch (IllegalStateException e) {}\n        this.indexer = GDataIndexer.createGdataIndexer(config, dir, true);\n        CountDownLatch documentLatch = new CountDownLatch(1);\n        iDoc = new IndexDocumentStub(doc, delTerm,\n                IndexAction.INSERT,documentLatch);\n        \n        CountDownLatch latch = new CountDownLatch(1);\n        future = new FutureStub<IndexDocument>(iDoc,latch,true);\n        this.indexer.addIndexableDocumentTask(future);\n        this.indexer.destroy();\n        latch.countDown();\n        documentLatch.await(5000,TimeUnit.MILLISECONDS);\n        // wait active for the commit\n        while(this.indexer.getWriter() != null){}\n        \n        IndexSearcher s = new IndexSearcher(this.dir);\n        Hits h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        s.close();\n        \n        \n    }\n\n","sourceOld":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.index.GDataIndexer.destroy()'\n     */\n    public void testDestroy() throws InterruptedException, IOException {\n        this.indexer.destroy();\n        String id = \"myID\";\n        Field f = new Field(FIELD_ID, id, Field.Store.YES,\n                Field.Index.UN_TOKENIZED);\n        Document doc = new Document();\n        doc.add(f);\n        Term delTerm = new Term(FIELD_ID, id);\n        IndexDocument iDoc = new IndexDocumentStub(doc, delTerm,\n                IndexAction.INSERT);\n        Future<IndexDocument> future = new FutureStub<IndexDocument>(iDoc);\n        try{\n        this.indexer.addIndexableDocumentTask(future);\n        fail(\"indexer already closed exc. expected\");\n        }catch (IllegalStateException e) {}\n        this.indexer = GDataIndexer.createGdataIndexer(config, dir, true);\n        CountDownLatch documentLatch = new CountDownLatch(1);\n        iDoc = new IndexDocumentStub(doc, delTerm,\n                IndexAction.INSERT,documentLatch);\n        \n        CountDownLatch latch = new CountDownLatch(1);\n        future = new FutureStub<IndexDocument>(iDoc,latch,true);\n        this.indexer.addIndexableDocumentTask(future);\n        this.indexer.destroy();\n        latch.countDown();\n        documentLatch.await(5000,TimeUnit.MILLISECONDS);\n        // wait active for the commit\n        while(this.indexer.writer != null){}\n        \n        IndexSearcher s = new IndexSearcher(this.dir);\n        Hits h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        s.close();\n        \n        \n    }\n\n","bugFix":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testDestroy().mjava","sourceNew":null,"sourceOld":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.index.GDataIndexer.destroy()'\n     */\n    public void testDestroy() throws InterruptedException, IOException {\n        this.indexer.destroy();\n        String id = \"myID\";\n        Field f = new Field(FIELD_ID, id, Field.Store.YES,\n                Field.Index.UN_TOKENIZED);\n        Document doc = new Document();\n        doc.add(f);\n        Term delTerm = new Term(FIELD_ID, id);\n        IndexDocument iDoc = new IndexDocumentStub(doc, delTerm,\n                IndexAction.INSERT);\n        Future<IndexDocument> future = new FutureStub<IndexDocument>(iDoc);\n        try{\n        this.indexer.addIndexableDocumentTask(future);\n        fail(\"indexer already closed exc. expected\");\n        }catch (IllegalStateException e) {}\n        this.indexer = GDataIndexer.createGdataIndexer(config, dir, true);\n        CountDownLatch documentLatch = new CountDownLatch(1);\n        iDoc = new IndexDocumentStub(doc, delTerm,\n                IndexAction.INSERT,documentLatch);\n        \n        CountDownLatch latch = new CountDownLatch(1);\n        future = new FutureStub<IndexDocument>(iDoc,latch,true);\n        this.indexer.addIndexableDocumentTask(future);\n        this.indexer.destroy();\n        latch.countDown();\n        documentLatch.await(5000,TimeUnit.MILLISECONDS);\n        // wait active for the commit\n        while(this.indexer.getWriter() != null){}\n        \n        IndexSearcher s = new IndexSearcher(this.dir);\n        Hits h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        s.close();\n        \n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["0678b6e692b406ca6ae7563704943b8b3546f506"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"0678b6e692b406ca6ae7563704943b8b3546f506":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["0678b6e692b406ca6ae7563704943b8b3546f506"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0678b6e692b406ca6ae7563704943b8b3546f506":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}