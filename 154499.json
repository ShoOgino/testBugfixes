{"path":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingBinaryDocValues#get(int,BytesRef).mjava","commits":[{"id":"59d00acb12c9809438e21de7c24f016356973d46","date":1359349254,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingBinaryDocValues#get(int,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void get(int docID, BytesRef result) {\n      assert docID >= 0 && docID < maxDoc;\n      assert result.isValid();\n      in.get(docID, result);\n      assert result.isValid();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingBinaryDocValues#get(int,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void get(int docID, BytesRef result) {\n      assert docID >= 0 && docID < maxDoc;\n      assert result.isValid();\n      in.get(docID, result);\n      assert result.isValid();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","date":1401983689,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingBinaryDocValues#get(int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingBinaryDocValues#get(int,BytesRef).mjava","sourceNew":"    @Override\n    public BytesRef get(int docID) {\n      assert docID >= 0 && docID < maxDoc;\n      final BytesRef result = in.get(docID);\n      assert result.isValid();\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public void get(int docID, BytesRef result) {\n      assert docID >= 0 && docID < maxDoc;\n      assert result.isValid();\n      in.get(docID, result);\n      assert result.isValid();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","date":1401983689,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingSortedDocValues#get(int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingBinaryDocValues#get(int,BytesRef).mjava","sourceNew":"    @Override\n    public BytesRef get(int docID) {\n      assert docID >= 0 && docID < maxDoc;\n      final BytesRef result = in.get(docID);\n      assert result.isValid();\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public void get(int docID, BytesRef result) {\n      assert docID >= 0 && docID < maxDoc;\n      assert result.isValid();\n      in.get(docID, result);\n      assert result.isValid();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"59d00acb12c9809438e21de7c24f016356973d46":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","59d00acb12c9809438e21de7c24f016356973d46"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"]},"commit2Childs":{"59d00acb12c9809438e21de7c24f016356973d46":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["59d00acb12c9809438e21de7c24f016356973d46","d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}