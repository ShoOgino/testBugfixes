{"path":"solr/core/src/test/org/apache/solr/legacy/TestNumericTokenStream#[T-extends-AttributeImpl]_assertCopyIsEqual(T).mjava","commits":[{"id":"a178ac3dec643551e66363c457a9074f55545f86","date":1496133188,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/legacy/TestNumericTokenStream#[T-extends-AttributeImpl]_assertCopyIsEqual(T).mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/legacy/TestNumericTokenStream#[T-extends-AttributeImpl]_assertCopyIsEqual(T).mjava","sourceNew":"  public static <T extends AttributeImpl> T assertCopyIsEqual(T att) throws Exception {\n    @SuppressWarnings(\"unchecked\")\n    T copy = (T) att.getClass().newInstance();\n    att.copyTo(copy);\n    assertEquals(\"Copied instance must be equal\", att, copy);\n    assertEquals(\"Copied instance's hashcode must be equal\", att.hashCode(), copy.hashCode());\n    return copy;\n  }\n\n","sourceOld":"  public static <T extends AttributeImpl> T assertCopyIsEqual(T att) throws Exception {\n    @SuppressWarnings(\"unchecked\")\n    T copy = (T) att.getClass().newInstance();\n    att.copyTo(copy);\n    assertEquals(\"Copied instance must be equal\", att, copy);\n    assertEquals(\"Copied instance's hashcode must be equal\", att.hashCode(), copy.hashCode());\n    return copy;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/legacy/TestNumericTokenStream#[T-extends-AttributeImpl]_assertCopyIsEqual(T).mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/legacy/TestNumericTokenStream#[T-extends-AttributeImpl]_assertCopyIsEqual(T).mjava","sourceNew":"  public static <T extends AttributeImpl> T assertCopyIsEqual(T att) throws Exception {\n    @SuppressWarnings(\"unchecked\")\n    T copy = (T) att.getClass().newInstance();\n    att.copyTo(copy);\n    assertEquals(\"Copied instance must be equal\", att, copy);\n    assertEquals(\"Copied instance's hashcode must be equal\", att.hashCode(), copy.hashCode());\n    return copy;\n  }\n\n","sourceOld":"  public static <T extends AttributeImpl> T assertCopyIsEqual(T att) throws Exception {\n    @SuppressWarnings(\"unchecked\")\n    T copy = (T) att.getClass().newInstance();\n    att.copyTo(copy);\n    assertEquals(\"Copied instance must be equal\", att, copy);\n    assertEquals(\"Copied instance's hashcode must be equal\", att.hashCode(), copy.hashCode());\n    return copy;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/legacy/TestNumericTokenStream#[T-extends-AttributeImpl]_assertCopyIsEqual(T).mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/legacy/TestNumericTokenStream#[T-extends-AttributeImpl]_assertCopyIsEqual(T).mjava","sourceNew":"  public static <T extends AttributeImpl> T assertCopyIsEqual(T att) throws Exception {\n    @SuppressWarnings(\"unchecked\")\n    T copy = (T) att.getClass().newInstance();\n    att.copyTo(copy);\n    assertEquals(\"Copied instance must be equal\", att, copy);\n    assertEquals(\"Copied instance's hashcode must be equal\", att.hashCode(), copy.hashCode());\n    return copy;\n  }\n\n","sourceOld":"  public static <T extends AttributeImpl> T assertCopyIsEqual(T att) throws Exception {\n    @SuppressWarnings(\"unchecked\")\n    T copy = (T) att.getClass().newInstance();\n    att.copyTo(copy);\n    assertEquals(\"Copied instance must be equal\", att, copy);\n    assertEquals(\"Copied instance's hashcode must be equal\", att.hashCode(), copy.hashCode());\n    return copy;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b88a121b875f9ae2ac50f85cf46dcb680f126357","date":1555416009,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/legacy/TestNumericTokenStream#[T-extends-AttributeImpl]_assertCopyIsEqual(T).mjava","pathOld":"solr/core/src/test/org/apache/solr/legacy/TestNumericTokenStream#[T-extends-AttributeImpl]_assertCopyIsEqual(T).mjava","sourceNew":"  public static <T extends AttributeImpl> T assertCopyIsEqual(T att) throws Exception {\n    @SuppressWarnings(\"unchecked\")\n    T copy = (T) att.getClass().getConstructor().newInstance();\n    att.copyTo(copy);\n    assertEquals(\"Copied instance must be equal\", att, copy);\n    assertEquals(\"Copied instance's hashcode must be equal\", att.hashCode(), copy.hashCode());\n    return copy;\n  }\n\n","sourceOld":"  public static <T extends AttributeImpl> T assertCopyIsEqual(T att) throws Exception {\n    @SuppressWarnings(\"unchecked\")\n    T copy = (T) att.getClass().newInstance();\n    att.copyTo(copy);\n    assertEquals(\"Copied instance must be equal\", att, copy);\n    assertEquals(\"Copied instance's hashcode must be equal\", att.hashCode(), copy.hashCode());\n    return copy;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a178ac3dec643551e66363c457a9074f55545f86":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a178ac3dec643551e66363c457a9074f55545f86"],"b88a121b875f9ae2ac50f85cf46dcb680f126357":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a178ac3dec643551e66363c457a9074f55545f86"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b88a121b875f9ae2ac50f85cf46dcb680f126357"]},"commit2Childs":{"a178ac3dec643551e66363c457a9074f55545f86":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"b88a121b875f9ae2ac50f85cf46dcb680f126357":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a178ac3dec643551e66363c457a9074f55545f86","e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}