{"path":"lucene/analysis/smartcn/src/test/org/apache/lucene/analysis/cn/smart/TestSmartChineseAnalyzer#testInvalidOffset().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/test/org/apache/lucene/analysis/cn/smart/TestSmartChineseAnalyzer#testInvalidOffset().mjava","pathOld":"modules/analysis/smartcn/src/test/org/apache/lucene/analysis/cn/smart/TestSmartChineseAnalyzer#testInvalidOffset().mjava","sourceNew":"  // LUCENE-3642\n  public void testInvalidOffset() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        TokenFilter filters = new ASCIIFoldingFilter(tokenizer);\n        filters = new WordTokenFilter(filters);\n        return new TokenStreamComponents(tokenizer, filters);\n      }\n    };\n    \n    assertAnalyzesTo(analyzer, \"mosfellsbær\", \n        new String[] { \"mosfellsbaer\" },\n        new int[]    { 0 },\n        new int[]    { 11 });\n  }\n\n","sourceOld":"  // LUCENE-3642\n  public void testInvalidOffset() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        TokenFilter filters = new ASCIIFoldingFilter(tokenizer);\n        filters = new WordTokenFilter(filters);\n        return new TokenStreamComponents(tokenizer, filters);\n      }\n    };\n    \n    assertAnalyzesTo(analyzer, \"mosfellsbær\", \n        new String[] { \"mosfellsbaer\" },\n        new int[]    { 0 },\n        new int[]    { 11 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/test/org/apache/lucene/analysis/cn/smart/TestSmartChineseAnalyzer#testInvalidOffset().mjava","pathOld":"lucene/analysis/smartcn/src/test/org/apache/lucene/analysis/cn/smart/TestSmartChineseAnalyzer#testInvalidOffset().mjava","sourceNew":"  // LUCENE-3642\n  public void testInvalidOffset() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        TokenFilter filters = new ASCIIFoldingFilter(tokenizer);\n        filters = new WordTokenFilter(filters);\n        return new TokenStreamComponents(tokenizer, filters);\n      }\n    };\n    \n    assertAnalyzesTo(analyzer, \"mosfellsbær\", \n        new String[] { \"mosfellsbaer\" },\n        new int[]    { 0 },\n        new int[]    { 11 });\n  }\n\n","sourceOld":"  // LUCENE-3642\n  public void testInvalidOffset() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        TokenFilter filters = new ASCIIFoldingFilter(tokenizer);\n        filters = new WordTokenFilter(filters);\n        return new TokenStreamComponents(tokenizer, filters);\n      }\n    };\n    \n    assertAnalyzesTo(analyzer, \"mosfellsbær\", \n        new String[] { \"mosfellsbaer\" },\n        new int[]    { 0 },\n        new int[]    { 11 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3","date":1417215914,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/smartcn/src/test/org/apache/lucene/analysis/cn/smart/TestSmartChineseAnalyzer#testInvalidOffset().mjava","sourceNew":null,"sourceOld":"  // LUCENE-3642\n  public void testInvalidOffset() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        TokenFilter filters = new ASCIIFoldingFilter(tokenizer);\n        filters = new WordTokenFilter(filters);\n        return new TokenStreamComponents(tokenizer, filters);\n      }\n    };\n    \n    assertAnalyzesTo(analyzer, \"mosfellsbær\", \n        new String[] { \"mosfellsbaer\" },\n        new int[]    { 0 },\n        new int[]    { 11 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}