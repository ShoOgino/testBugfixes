{"path":"lucene/core/src/test/org/apache/lucene/index/TestFieldUpdatesBuffer#[T-extends-DocValuesUpdate]_getRandomUpdate(boolean).mjava","commits":[{"id":"28211671436f185419b3f7e53ccfc3911441ab65","date":1544026960,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldUpdatesBuffer#[T-extends-DocValuesUpdate]_getRandomUpdate(boolean).mjava","pathOld":"/dev/null","sourceNew":"  public <T extends DocValuesUpdate> T getRandomUpdate(boolean binary) {\n    String termField = RandomPicks.randomFrom(random(), Arrays.asList(\"id\", \"_id\", \"some_other_field\"));\n    String docId = \"\" + random().nextInt(10);\n    if (binary) {\n      DocValuesUpdate.BinaryDocValuesUpdate value =  new DocValuesUpdate.BinaryDocValuesUpdate(new Term(termField, docId), \"binary\",\n          rarely() ? null : new BytesRef(TestUtil.randomRealisticUnicodeString(random())));\n      return (T) (rarely() ? value.prepareForApply(random().nextInt(100)) : value);\n    } else {\n      DocValuesUpdate.NumericDocValuesUpdate value = new DocValuesUpdate.NumericDocValuesUpdate(new Term(termField, docId), \"numeric\",\n          rarely() ? null : Long.valueOf(random().nextInt(100)));\n\n      return (T) (rarely() ? value.prepareForApply(random().nextInt(100)) : value);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldUpdatesBuffer#[T-extends-DocValuesUpdate]_getRandomUpdate(boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldUpdatesBuffer#[T-extends-DocValuesUpdate]_getRandomUpdate(boolean).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  public <T extends DocValuesUpdate> T getRandomUpdate(boolean binary) {\n    String termField = RandomPicks.randomFrom(random(), Arrays.asList(\"id\", \"_id\", \"some_other_field\"));\n    String docId = \"\" + random().nextInt(10);\n    if (binary) {\n      DocValuesUpdate.BinaryDocValuesUpdate value =  new DocValuesUpdate.BinaryDocValuesUpdate(new Term(termField, docId), \"binary\",\n          rarely() ? null : new BytesRef(TestUtil.randomRealisticUnicodeString(random())));\n      return (T) (rarely() ? value.prepareForApply(random().nextInt(100)) : value);\n    } else {\n      DocValuesUpdate.NumericDocValuesUpdate value = new DocValuesUpdate.NumericDocValuesUpdate(new Term(termField, docId), \"numeric\",\n          rarely() ? null : Long.valueOf(random().nextInt(100)));\n\n      return (T) (rarely() ? value.prepareForApply(random().nextInt(100)) : value);\n    }\n  }\n\n","sourceOld":"  public <T extends DocValuesUpdate> T getRandomUpdate(boolean binary) {\n    String termField = RandomPicks.randomFrom(random(), Arrays.asList(\"id\", \"_id\", \"some_other_field\"));\n    String docId = \"\" + random().nextInt(10);\n    if (binary) {\n      DocValuesUpdate.BinaryDocValuesUpdate value =  new DocValuesUpdate.BinaryDocValuesUpdate(new Term(termField, docId), \"binary\",\n          rarely() ? null : new BytesRef(TestUtil.randomRealisticUnicodeString(random())));\n      return (T) (rarely() ? value.prepareForApply(random().nextInt(100)) : value);\n    } else {\n      DocValuesUpdate.NumericDocValuesUpdate value = new DocValuesUpdate.NumericDocValuesUpdate(new Term(termField, docId), \"numeric\",\n          rarely() ? null : Long.valueOf(random().nextInt(100)));\n\n      return (T) (rarely() ? value.prepareForApply(random().nextInt(100)) : value);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldUpdatesBuffer#[T-extends-DocValuesUpdate]_getRandomUpdate(boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldUpdatesBuffer#[T-extends-DocValuesUpdate]_getRandomUpdate(boolean).mjava","sourceNew":"  public <T extends DocValuesUpdate> T getRandomUpdate(boolean binary) {\n    String termField = RandomPicks.randomFrom(random(), Arrays.asList(\"id\", \"_id\", \"some_other_field\"));\n    String docId = \"\" + random().nextInt(10);\n    if (binary) {\n      DocValuesUpdate.BinaryDocValuesUpdate value =  new DocValuesUpdate.BinaryDocValuesUpdate(new Term(termField, docId), \"binary\",\n          rarely() ? null : new BytesRef(TestUtil.randomRealisticUnicodeString(random())));\n      return (T) (rarely() ? value.prepareForApply(random().nextInt(100)) : value);\n    } else {\n      DocValuesUpdate.NumericDocValuesUpdate value = new DocValuesUpdate.NumericDocValuesUpdate(new Term(termField, docId), \"numeric\",\n          rarely() ? null : Long.valueOf(random().nextInt(100)));\n\n      return (T) (rarely() ? value.prepareForApply(random().nextInt(100)) : value);\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  public <T extends DocValuesUpdate> T getRandomUpdate(boolean binary) {\n    String termField = RandomPicks.randomFrom(random(), Arrays.asList(\"id\", \"_id\", \"some_other_field\"));\n    String docId = \"\" + random().nextInt(10);\n    if (binary) {\n      DocValuesUpdate.BinaryDocValuesUpdate value =  new DocValuesUpdate.BinaryDocValuesUpdate(new Term(termField, docId), \"binary\",\n          rarely() ? null : new BytesRef(TestUtil.randomRealisticUnicodeString(random())));\n      return (T) (rarely() ? value.prepareForApply(random().nextInt(100)) : value);\n    } else {\n      DocValuesUpdate.NumericDocValuesUpdate value = new DocValuesUpdate.NumericDocValuesUpdate(new Term(termField, docId), \"numeric\",\n          rarely() ? null : Long.valueOf(random().nextInt(100)));\n\n      return (T) (rarely() ? value.prepareForApply(random().nextInt(100)) : value);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c21918ef3ad23e254f39cb0cd6c86851fcb993","date":1580123310,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldUpdatesBuffer#[T-extends-DocValuesUpdate]_getRandomUpdate(boolean).mjava","sourceNew":null,"sourceOld":"  public <T extends DocValuesUpdate> T getRandomUpdate(boolean binary) {\n    String termField = RandomPicks.randomFrom(random(), Arrays.asList(\"id\", \"_id\", \"some_other_field\"));\n    String docId = \"\" + random().nextInt(10);\n    if (binary) {\n      DocValuesUpdate.BinaryDocValuesUpdate value =  new DocValuesUpdate.BinaryDocValuesUpdate(new Term(termField, docId), \"binary\",\n          rarely() ? null : new BytesRef(TestUtil.randomRealisticUnicodeString(random())));\n      return (T) (rarely() ? value.prepareForApply(random().nextInt(100)) : value);\n    } else {\n      DocValuesUpdate.NumericDocValuesUpdate value = new DocValuesUpdate.NumericDocValuesUpdate(new Term(termField, docId), \"numeric\",\n          rarely() ? null : Long.valueOf(random().nextInt(100)));\n\n      return (T) (rarely() ? value.prepareForApply(random().nextInt(100)) : value);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"28211671436f185419b3f7e53ccfc3911441ab65":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["28211671436f185419b3f7e53ccfc3911441ab65"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"30c21918ef3ad23e254f39cb0cd6c86851fcb993":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["30c21918ef3ad23e254f39cb0cd6c86851fcb993"]},"commit2Childs":{"28211671436f185419b3f7e53ccfc3911441ab65":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["28211671436f185419b3f7e53ccfc3911441ab65"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["30c21918ef3ad23e254f39cb0cd6c86851fcb993"],"30c21918ef3ad23e254f39cb0cd6c86851fcb993":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}