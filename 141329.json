{"path":"solr/core/src/test/org/apache/solr/cloud/TrollingIndexReaderFactory#catchCount(int).mjava","commits":[{"id":"a3584d3db8b472772e3329d9d95d584b68ae997e","date":1551710517,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TrollingIndexReaderFactory#catchCount(int).mjava","pathOld":"/dev/null","sourceNew":"  public static Trap catchCount(int boundary) {\n    return setTrap(new Trap() {\n      \n      private AtomicInteger count = new AtomicInteger();\n    \n      @Override\n      public String toString() {\n        return \"\"+count.get()+\"th tick of \"+boundary+\" allowed\";\n      }\n      \n      private boolean trigered;\n\n      @Override\n      protected boolean shouldExit() {\n        int now = count.incrementAndGet();\n        boolean trigger = now==boundary \n            || (now>boundary && LuceneTestCase.rarely(LuceneTestCase.random()));\n        if (trigger) {\n          Exception e = new Exception(\"stack sniffer\"); \n          e.fillInStackTrace();\n          recordStackTrace(e.getStackTrace());\n          trigered = true;\n        } \n        return trigger;\n      }\n\n      @Override\n      public boolean hasCaught() {\n        return trigered;\n      }\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3584d3db8b472772e3329d9d95d584b68ae997e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a3584d3db8b472772e3329d9d95d584b68ae997e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3584d3db8b472772e3329d9d95d584b68ae997e"],"a3584d3db8b472772e3329d9d95d584b68ae997e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}