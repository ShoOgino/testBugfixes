{"path":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsReader#CompressingTermVectorsReader(CompressingTermVectorsReader).mjava","commits":[{"id":"eda61b1e90b490cc5837200e04c02639a0d272c7","date":1358795519,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsReader#CompressingTermVectorsReader(CompressingTermVectorsReader).mjava","pathOld":"/dev/null","sourceNew":"  // used by clone\n  private CompressingTermVectorsReader(CompressingTermVectorsReader reader) {\n    this.fieldInfos = reader.fieldInfos;\n    this.vectorsStream = reader.vectorsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.chunkSize = reader.chunkSize;\n    this.numDocs = reader.numDocs;\n    this.reader = new BlockPackedReader(vectorsStream, packedIntsVersion, BLOCK_SIZE, 0);\n    this.closed = false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsReader#CompressingTermVectorsReader(CompressingTermVectorsReader).mjava","pathOld":"/dev/null","sourceNew":"  // used by clone\n  private CompressingTermVectorsReader(CompressingTermVectorsReader reader) {\n    this.fieldInfos = reader.fieldInfos;\n    this.vectorsStream = reader.vectorsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.chunkSize = reader.chunkSize;\n    this.numDocs = reader.numDocs;\n    this.reader = new BlockPackedReader(vectorsStream, packedIntsVersion, BLOCK_SIZE, 0);\n    this.closed = false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37b84753dc1f66eba4973779932885fe42cde001","date":1358812051,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsReader#CompressingTermVectorsReader(CompressingTermVectorsReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsReader#CompressingTermVectorsReader(CompressingTermVectorsReader).mjava","sourceNew":"  // used by clone\n  private CompressingTermVectorsReader(CompressingTermVectorsReader reader) {\n    this.fieldInfos = reader.fieldInfos;\n    this.vectorsStream = reader.vectorsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.chunkSize = reader.chunkSize;\n    this.numDocs = reader.numDocs;\n    this.reader = new BlockPackedReaderIterator(vectorsStream, packedIntsVersion, BLOCK_SIZE, 0);\n    this.closed = false;\n  }\n\n","sourceOld":"  // used by clone\n  private CompressingTermVectorsReader(CompressingTermVectorsReader reader) {\n    this.fieldInfos = reader.fieldInfos;\n    this.vectorsStream = reader.vectorsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.chunkSize = reader.chunkSize;\n    this.numDocs = reader.numDocs;\n    this.reader = new BlockPackedReader(vectorsStream, packedIntsVersion, BLOCK_SIZE, 0);\n    this.closed = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsReader#CompressingTermVectorsReader(CompressingTermVectorsReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsReader#CompressingTermVectorsReader(CompressingTermVectorsReader).mjava","sourceNew":"  // used by clone\n  private CompressingTermVectorsReader(CompressingTermVectorsReader reader) {\n    this.fieldInfos = reader.fieldInfos;\n    this.vectorsStream = reader.vectorsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.chunkSize = reader.chunkSize;\n    this.numDocs = reader.numDocs;\n    this.reader = new BlockPackedReaderIterator(vectorsStream, packedIntsVersion, BLOCK_SIZE, 0);\n    this.closed = false;\n  }\n\n","sourceOld":"  // used by clone\n  private CompressingTermVectorsReader(CompressingTermVectorsReader reader) {\n    this.fieldInfos = reader.fieldInfos;\n    this.vectorsStream = reader.vectorsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.chunkSize = reader.chunkSize;\n    this.numDocs = reader.numDocs;\n    this.reader = new BlockPackedReader(vectorsStream, packedIntsVersion, BLOCK_SIZE, 0);\n    this.closed = false;\n  }\n\n","bugFix":["eda61b1e90b490cc5837200e04c02639a0d272c7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsReader#CompressingTermVectorsReader(CompressingTermVectorsReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsReader#CompressingTermVectorsReader(CompressingTermVectorsReader).mjava","sourceNew":"  // used by clone\n  private CompressingTermVectorsReader(CompressingTermVectorsReader reader) {\n    this.fieldInfos = reader.fieldInfos;\n    this.vectorsStream = reader.vectorsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.chunkSize = reader.chunkSize;\n    this.numDocs = reader.numDocs;\n    this.reader = new BlockPackedReaderIterator(vectorsStream, packedIntsVersion, BLOCK_SIZE, 0);\n    this.version = reader.version;\n    this.closed = false;\n  }\n\n","sourceOld":"  // used by clone\n  private CompressingTermVectorsReader(CompressingTermVectorsReader reader) {\n    this.fieldInfos = reader.fieldInfos;\n    this.vectorsStream = reader.vectorsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.chunkSize = reader.chunkSize;\n    this.numDocs = reader.numDocs;\n    this.reader = new BlockPackedReaderIterator(vectorsStream, packedIntsVersion, BLOCK_SIZE, 0);\n    this.closed = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsReader#CompressingTermVectorsReader(CompressingTermVectorsReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsReader#CompressingTermVectorsReader(CompressingTermVectorsReader).mjava","sourceNew":"  // used by clone\n  private CompressingTermVectorsReader(CompressingTermVectorsReader reader) {\n    this.fieldInfos = reader.fieldInfos;\n    this.vectorsStream = reader.vectorsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.chunkSize = reader.chunkSize;\n    this.numDocs = reader.numDocs;\n    this.reader = new BlockPackedReaderIterator(vectorsStream, packedIntsVersion, BLOCK_SIZE, 0);\n    this.version = reader.version;\n    this.closed = false;\n  }\n\n","sourceOld":"  // used by clone\n  private CompressingTermVectorsReader(CompressingTermVectorsReader reader) {\n    this.fieldInfos = reader.fieldInfos;\n    this.vectorsStream = reader.vectorsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.chunkSize = reader.chunkSize;\n    this.numDocs = reader.numDocs;\n    this.reader = new BlockPackedReaderIterator(vectorsStream, packedIntsVersion, BLOCK_SIZE, 0);\n    this.closed = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59d4661023aa9541b0a759e4d2e11dcf83b923a0","date":1420124226,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsReader#CompressingTermVectorsReader(CompressingTermVectorsReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsReader#CompressingTermVectorsReader(CompressingTermVectorsReader).mjava","sourceNew":"  // used by clone\n  private CompressingTermVectorsReader(CompressingTermVectorsReader reader) {\n    this.fieldInfos = reader.fieldInfos;\n    this.vectorsStream = reader.vectorsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.chunkSize = reader.chunkSize;\n    this.numDocs = reader.numDocs;\n    this.reader = new BlockPackedReaderIterator(vectorsStream, packedIntsVersion, PACKED_BLOCK_SIZE, 0);\n    this.version = reader.version;\n    this.closed = false;\n  }\n\n","sourceOld":"  // used by clone\n  private CompressingTermVectorsReader(CompressingTermVectorsReader reader) {\n    this.fieldInfos = reader.fieldInfos;\n    this.vectorsStream = reader.vectorsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.chunkSize = reader.chunkSize;\n    this.numDocs = reader.numDocs;\n    this.reader = new BlockPackedReaderIterator(vectorsStream, packedIntsVersion, BLOCK_SIZE, 0);\n    this.version = reader.version;\n    this.closed = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b88448324d3a96c5842455dabea63450b697b58f","date":1421779050,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsReader#CompressingTermVectorsReader(CompressingTermVectorsReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsReader#CompressingTermVectorsReader(CompressingTermVectorsReader).mjava","sourceNew":"  // used by clone\n  private CompressingTermVectorsReader(CompressingTermVectorsReader reader) {\n    this.fieldInfos = reader.fieldInfos;\n    this.vectorsStream = reader.vectorsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.chunkSize = reader.chunkSize;\n    this.numDocs = reader.numDocs;\n    this.reader = new BlockPackedReaderIterator(vectorsStream, packedIntsVersion, PACKED_BLOCK_SIZE, 0);\n    this.version = reader.version;\n    this.numChunks = reader.numChunks;\n    this.numDirtyChunks = reader.numDirtyChunks;\n    this.maxPointer = reader.maxPointer;\n    this.closed = false;\n  }\n\n","sourceOld":"  // used by clone\n  private CompressingTermVectorsReader(CompressingTermVectorsReader reader) {\n    this.fieldInfos = reader.fieldInfos;\n    this.vectorsStream = reader.vectorsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.chunkSize = reader.chunkSize;\n    this.numDocs = reader.numDocs;\n    this.reader = new BlockPackedReaderIterator(vectorsStream, packedIntsVersion, PACKED_BLOCK_SIZE, 0);\n    this.version = reader.version;\n    this.closed = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45264aed0cfa8a8a55ae1292b0e336d29cd88401","date":1600361948,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsReader#CompressingTermVectorsReader(CompressingTermVectorsReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsReader#CompressingTermVectorsReader(CompressingTermVectorsReader).mjava","sourceNew":"  // used by clone\n  private CompressingTermVectorsReader(CompressingTermVectorsReader reader) {\n    this.fieldInfos = reader.fieldInfos;\n    this.vectorsStream = reader.vectorsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.chunkSize = reader.chunkSize;\n    this.numDocs = reader.numDocs;\n    this.reader = new BlockPackedReaderIterator(vectorsStream, packedIntsVersion, PACKED_BLOCK_SIZE, 0);\n    this.version = reader.version;\n    this.numDirtyChunks = reader.numDirtyChunks;\n    this.numDirtyDocs = reader.numDirtyDocs;\n    this.maxPointer = reader.maxPointer;\n    this.closed = false;\n  }\n\n","sourceOld":"  // used by clone\n  private CompressingTermVectorsReader(CompressingTermVectorsReader reader) {\n    this.fieldInfos = reader.fieldInfos;\n    this.vectorsStream = reader.vectorsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.chunkSize = reader.chunkSize;\n    this.numDocs = reader.numDocs;\n    this.reader = new BlockPackedReaderIterator(vectorsStream, packedIntsVersion, PACKED_BLOCK_SIZE, 0);\n    this.version = reader.version;\n    this.numChunks = reader.numChunks;\n    this.numDirtyChunks = reader.numDirtyChunks;\n    this.maxPointer = reader.maxPointer;\n    this.closed = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["d4d69c535930b5cce125cff868d40f6373dc27d4","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"eda61b1e90b490cc5837200e04c02639a0d272c7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["eda61b1e90b490cc5837200e04c02639a0d272c7","37b84753dc1f66eba4973779932885fe42cde001"],"b88448324d3a96c5842455dabea63450b697b58f":["59d4661023aa9541b0a759e4d2e11dcf83b923a0"],"59d4661023aa9541b0a759e4d2e11dcf83b923a0":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"37b84753dc1f66eba4973779932885fe42cde001":["07155cdd910937cdf6877e48884d5782845c8b8b"],"45264aed0cfa8a8a55ae1292b0e336d29cd88401":["b88448324d3a96c5842455dabea63450b697b58f"],"07155cdd910937cdf6877e48884d5782845c8b8b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eda61b1e90b490cc5837200e04c02639a0d272c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["45264aed0cfa8a8a55ae1292b0e336d29cd88401"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","59d4661023aa9541b0a759e4d2e11dcf83b923a0"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"eda61b1e90b490cc5837200e04c02639a0d272c7":["d4d69c535930b5cce125cff868d40f6373dc27d4","07155cdd910937cdf6877e48884d5782845c8b8b"],"b88448324d3a96c5842455dabea63450b697b58f":["45264aed0cfa8a8a55ae1292b0e336d29cd88401"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eda61b1e90b490cc5837200e04c02639a0d272c7","07155cdd910937cdf6877e48884d5782845c8b8b"],"37b84753dc1f66eba4973779932885fe42cde001":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"59d4661023aa9541b0a759e4d2e11dcf83b923a0":["b88448324d3a96c5842455dabea63450b697b58f"],"45264aed0cfa8a8a55ae1292b0e336d29cd88401":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"07155cdd910937cdf6877e48884d5782845c8b8b":["37b84753dc1f66eba4973779932885fe42cde001"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}