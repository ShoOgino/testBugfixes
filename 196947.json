{"path":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.StringStream#detect(String).mjava","commits":[{"id":"0d17ec5164debc23076db7fd11d0331f201583b5","date":1426658173,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.StringStream#detect(String).mjava","pathOld":"/dev/null","sourceNew":"    public static String detect(String str) {\n      String detectedContentType = null;\n      int lim = str.length() - 1;\n      for (int i=0; i<lim; i++) {\n        char ch = str.charAt(i);\n        if (Character.isWhitespace(ch)) {\n          continue;\n        }\n        // first non-whitespace chars\n        if (ch == '#'                         // single line comment\n            || (ch == '/' && (str.charAt(i + 1) == '/' || str.charAt(i + 1) == '*'))  // single line or multi-line comment\n            || (ch == '{' || ch == '[')       // start of JSON object\n            )\n        {\n          detectedContentType = \"application/json\";\n        } else if (ch == '<') {\n          detectedContentType = \"text/xml\";\n        }\n        break;\n      }\n      return detectedContentType;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.StringStream#detect(String).mjava","pathOld":"/dev/null","sourceNew":"    public static String detect(String str) {\n      String detectedContentType = null;\n      int lim = str.length() - 1;\n      for (int i=0; i<lim; i++) {\n        char ch = str.charAt(i);\n        if (Character.isWhitespace(ch)) {\n          continue;\n        }\n        // first non-whitespace chars\n        if (ch == '#'                         // single line comment\n            || (ch == '/' && (str.charAt(i + 1) == '/' || str.charAt(i + 1) == '*'))  // single line or multi-line comment\n            || (ch == '{' || ch == '[')       // start of JSON object\n            )\n        {\n          detectedContentType = \"application/json\";\n        } else if (ch == '<') {\n          detectedContentType = \"text/xml\";\n        }\n        break;\n      }\n      return detectedContentType;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0d17ec5164debc23076db7fd11d0331f201583b5"],"0d17ec5164debc23076db7fd11d0331f201583b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d17ec5164debc23076db7fd11d0331f201583b5"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"0d17ec5164debc23076db7fd11d0331f201583b5":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0d17ec5164debc23076db7fd11d0331f201583b5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}