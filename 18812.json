{"path":"solr/contrib/dataimporthandler-extras/src/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","commits":[{"id":"d20d5e40789b1c42f4f926e3174b271256c43657","date":1301641092,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","sourceNew":"  @Override\n  protected void firstInit(Context context) {\n    try {\n      String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\n      if (tikaConfigFile == null) {\n        ClassLoader classLoader = context.getSolrCore().getResourceLoader().getClassLoader();\n        tikaConfig = new TikaConfig(classLoader);\n      } else {\n        File configFile = new File(tikaConfigFile);\n        if (!configFile.isAbsolute()) {\n          configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\n        }\n        tikaConfig = new TikaConfig(configFile);\n      }\n    } catch (Exception e) {\n      wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\n    }\n\n    format = context.getResolvedEntityAttribute(\"format\");\n    if(format == null)\n      format = \"text\";\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\n    parser = context.getResolvedEntityAttribute(\"parser\");\n    if(parser == null) {\n      parser = AUTO_PARSER;\n    }\n    done = false;\n  }\n\n","sourceOld":"  @Override\n  protected void firstInit(Context context) {\n    try {\n      String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\n      if (tikaConfigFile == null) {\n        ClassLoader classLoader = context.getSolrCore().getResourceLoader().getClassLoader();\n        tikaConfig = new TikaConfig(classLoader);\n      } else {\n        File configFile = new File(tikaConfigFile);\n        if (!configFile.isAbsolute()) {\n          configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\n        }\n        tikaConfig = new TikaConfig(configFile);\n      }\n    } catch (Exception e) {\n      wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\n    }\n\n    format = context.getResolvedEntityAttribute(\"format\");\n    if(format == null)\n      format = \"text\";\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\n    parser = context.getResolvedEntityAttribute(\"parser\");\n    if(parser == null) {\n      parser = AUTO_PARSER;\n    }\n    done = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","sourceNew":"  @Override\n  protected void firstInit(Context context) {\n    try {\n      String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\n      if (tikaConfigFile == null) {\n        ClassLoader classLoader = context.getSolrCore().getResourceLoader().getClassLoader();\n        tikaConfig = new TikaConfig(classLoader);\n      } else {\n        File configFile = new File(tikaConfigFile);\n        if (!configFile.isAbsolute()) {\n          configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\n        }\n        tikaConfig = new TikaConfig(configFile);\n      }\n    } catch (Exception e) {\n      wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\n    }\n\n    format = context.getResolvedEntityAttribute(\"format\");\n    if(format == null)\n      format = \"text\";\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\n    parser = context.getResolvedEntityAttribute(\"parser\");\n    if(parser == null) {\n      parser = AUTO_PARSER;\n    }\n    done = false;\n  }\n\n","sourceOld":"  @Override\n  protected void firstInit(Context context) {\n    try {\n      String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\n      if (tikaConfigFile == null) {\n        ClassLoader classLoader = context.getSolrCore().getResourceLoader().getClassLoader();\n        tikaConfig = new TikaConfig(classLoader);\n      } else {\n        File configFile = new File(tikaConfigFile);\n        if (!configFile.isAbsolute()) {\n          configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\n        }\n        tikaConfig = new TikaConfig(configFile);\n      }\n    } catch (Exception e) {\n      wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\n    }\n\n    format = context.getResolvedEntityAttribute(\"format\");\n    if(format == null)\n      format = \"text\";\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\n    parser = context.getResolvedEntityAttribute(\"parser\");\n    if(parser == null) {\n      parser = AUTO_PARSER;\n    }\n    done = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["d20d5e40789b1c42f4f926e3174b271256c43657","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d20d5e40789b1c42f4f926e3174b271256c43657":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","d20d5e40789b1c42f4f926e3174b271256c43657","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d20d5e40789b1c42f4f926e3174b271256c43657":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}