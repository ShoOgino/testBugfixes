{"path":"src/java/org/apache/lucene/index/TermInfosWriter#initialize(Directory,String,FieldInfos,boolean).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosWriter#initialize(Directory,String,FieldInfos,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n\t\t     boolean isi) throws IOException {\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createFile(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(0);\t\t\t\t  // leave space for size\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15c469602973ef1a33c9a07367a380d278ffab20","date":1074206555,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosWriter#initialize(Directory,String,FieldInfos,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/TermInfosWriter#initialize(Directory,String,FieldInfos,boolean).mjava","sourceNew":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n\t\t     boolean isi) throws IOException {\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createFile(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(FORMAT);                      // write format\n    output.writeLong(0);                          // leave space for size\n    if (!isIndex) {\n      output.writeInt(indexInterval);             // write indexInterval\n      output.writeInt(skipInterval);              // write skipInterval\n    }\n  }\n\n","sourceOld":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n\t\t     boolean isi) throws IOException {\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createFile(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(0);\t\t\t\t  // leave space for size\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23b8dd5490763d8f75b016adcb74ba1c2baa5227","date":1080222589,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosWriter#initialize(Directory,String,FieldInfos,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/TermInfosWriter#initialize(Directory,String,FieldInfos,boolean).mjava","sourceNew":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n         boolean isi) throws IOException {\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createFile(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(FORMAT);                      // write format\n    output.writeLong(0);                          // leave space for size\n    if (!isIndex) {\n      output.writeInt(indexInterval);             // write indexInterval\n      output.writeInt(skipInterval);              // write skipInterval\n    }\n  }\n\n","sourceOld":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n\t\t     boolean isi) throws IOException {\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createFile(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(FORMAT);                      // write format\n    output.writeLong(0);                          // leave space for size\n    if (!isIndex) {\n      output.writeInt(indexInterval);             // write indexInterval\n      output.writeInt(skipInterval);              // write skipInterval\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f5cf8ed8dfc080044944e2cabac618bc36199013","date":1082468878,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosWriter#initialize(Directory,String,FieldInfos,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/TermInfosWriter#initialize(Directory,String,FieldInfos,boolean).mjava","sourceNew":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n         boolean isi) throws IOException {\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createFile(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(FORMAT);                      // write format\n    output.writeLong(0);                          // leave space for size\n    output.writeInt(indexInterval);             // write indexInterval\n    output.writeInt(skipInterval);              // write skipInterval\n  }\n\n","sourceOld":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n         boolean isi) throws IOException {\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createFile(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(FORMAT);                      // write format\n    output.writeLong(0);                          // leave space for size\n    if (!isIndex) {\n      output.writeInt(indexInterval);             // write indexInterval\n      output.writeInt(skipInterval);              // write skipInterval\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dda77265180d41bf85c84c995e25eda7b8e1b74d","date":1096395352,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosWriter#initialize(Directory,String,FieldInfos,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/TermInfosWriter#initialize(Directory,String,FieldInfos,boolean).mjava","sourceNew":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n         boolean isi) throws IOException {\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createOutput(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(FORMAT);                      // write format\n    output.writeLong(0);                          // leave space for size\n    output.writeInt(indexInterval);             // write indexInterval\n    output.writeInt(skipInterval);              // write skipInterval\n  }\n\n","sourceOld":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n         boolean isi) throws IOException {\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createFile(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(FORMAT);                      // write format\n    output.writeLong(0);                          // leave space for size\n    output.writeInt(indexInterval);             // write indexInterval\n    output.writeInt(skipInterval);              // write skipInterval\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3afaca6e0770734b01e3bc663bec3ffa71b6f87b","date":1110394706,"type":5,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosWriter#initialize(Directory,String,FieldInfos,int,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/TermInfosWriter#initialize(Directory,String,FieldInfos,boolean).mjava","sourceNew":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n                          int interval, boolean isi) throws IOException {\n    indexInterval = interval;\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createOutput(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(FORMAT);                      // write format\n    output.writeLong(0);                          // leave space for size\n    output.writeInt(indexInterval);             // write indexInterval\n    output.writeInt(skipInterval);              // write skipInterval\n  }\n\n","sourceOld":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n         boolean isi) throws IOException {\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createOutput(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(FORMAT);                      // write format\n    output.writeLong(0);                          // leave space for size\n    output.writeInt(indexInterval);             // write indexInterval\n    output.writeInt(skipInterval);              // write skipInterval\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dda77265180d41bf85c84c995e25eda7b8e1b74d":["f5cf8ed8dfc080044944e2cabac618bc36199013"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"23b8dd5490763d8f75b016adcb74ba1c2baa5227":["15c469602973ef1a33c9a07367a380d278ffab20"],"f5cf8ed8dfc080044944e2cabac618bc36199013":["23b8dd5490763d8f75b016adcb74ba1c2baa5227"],"3afaca6e0770734b01e3bc663bec3ffa71b6f87b":["dda77265180d41bf85c84c995e25eda7b8e1b74d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3afaca6e0770734b01e3bc663bec3ffa71b6f87b"],"15c469602973ef1a33c9a07367a380d278ffab20":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"]},"commit2Childs":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["15c469602973ef1a33c9a07367a380d278ffab20"],"dda77265180d41bf85c84c995e25eda7b8e1b74d":["3afaca6e0770734b01e3bc663bec3ffa71b6f87b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"23b8dd5490763d8f75b016adcb74ba1c2baa5227":["f5cf8ed8dfc080044944e2cabac618bc36199013"],"f5cf8ed8dfc080044944e2cabac618bc36199013":["dda77265180d41bf85c84c995e25eda7b8e1b74d"],"3afaca6e0770734b01e3bc663bec3ffa71b6f87b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"15c469602973ef1a33c9a07367a380d278ffab20":["23b8dd5490763d8f75b016adcb74ba1c2baa5227"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}