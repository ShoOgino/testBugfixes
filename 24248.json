{"path":"lucene/facet/src/java/org/apache/lucene/facet/LongRange#LongRange(String,long,boolean,long,boolean).mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/LongRange#LongRange(String,long,boolean,long,boolean).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/LongRange#LongRange(String,long,boolean,long,boolean).mjava","sourceNew":"  /** Create a LongRange. */\n  public LongRange(String label, long min, boolean minInclusive, long max, boolean maxInclusive) {\n    super(label);\n    this.min = min;\n    this.max = max;\n    this.minInclusive = minInclusive;\n    this.maxInclusive = maxInclusive;\n\n    if (!minInclusive && min != Long.MAX_VALUE) {\n      min++;\n    }\n\n    if (!maxInclusive && max != Long.MIN_VALUE) {\n      max--;\n    }\n\n    this.minIncl = min;\n    this.maxIncl = max;\n  }\n\n","sourceOld":"  /** Create a LongRange. */\n  public LongRange(String label, long min, boolean minInclusive, long max, boolean maxInclusive) {\n    super(label);\n    this.min = min;\n    this.max = max;\n    this.minInclusive = minInclusive;\n    this.maxInclusive = maxInclusive;\n\n    if (!minInclusive && min != Long.MAX_VALUE) {\n      min++;\n    }\n\n    if (!maxInclusive && max != Long.MIN_VALUE) {\n      max--;\n    }\n\n    this.minIncl = min;\n    this.maxIncl = max;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6119ef33e3fbd8582640c23b3f5b3fbb22ba8d30","date":1387399235,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/LongRange#LongRange(String,long,boolean,long,boolean).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/LongRange#LongRange(String,long,boolean,long,boolean).mjava","sourceNew":"  /** Create a LongRange. */\n  public LongRange(String label, long minIn, boolean minInclusive, long maxIn, boolean maxInclusive) {\n    super(label);\n    this.min = minIn;\n    this.max = maxIn;\n    this.minInclusive = minInclusive;\n    this.maxInclusive = maxInclusive;\n\n    if (!minInclusive) {\n      if (minIn != Long.MAX_VALUE) {\n        minIn++;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (!maxInclusive) {\n      if (maxIn != Long.MIN_VALUE) {\n        maxIn--;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (minIn > maxIn) {\n      failNoMatch();\n    }\n\n    this.minIncl = minIn;\n    this.maxIncl = maxIn;\n  }\n\n","sourceOld":"  /** Create a LongRange. */\n  public LongRange(String label, long min, boolean minInclusive, long max, boolean maxInclusive) {\n    super(label);\n    this.min = min;\n    this.max = max;\n    this.minInclusive = minInclusive;\n    this.maxInclusive = maxInclusive;\n\n    if (!minInclusive && min != Long.MAX_VALUE) {\n      min++;\n    }\n\n    if (!maxInclusive && max != Long.MIN_VALUE) {\n      max--;\n    }\n\n    this.minIncl = min;\n    this.maxIncl = max;\n  }\n\n","bugFix":null,"bugIntro":["1800b996d8677670482a071dcb7a48b08c423ace"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/range/LongRange#LongRange(String,long,boolean,long,boolean).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/LongRange#LongRange(String,long,boolean,long,boolean).mjava","sourceNew":"  /** Create a LongRange. */\n  public LongRange(String label, long minIn, boolean minInclusive, long maxIn, boolean maxInclusive) {\n    super(label);\n    this.min = minIn;\n    this.max = maxIn;\n    this.minInclusive = minInclusive;\n    this.maxInclusive = maxInclusive;\n\n    if (!minInclusive) {\n      if (minIn != Long.MAX_VALUE) {\n        minIn++;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (!maxInclusive) {\n      if (maxIn != Long.MIN_VALUE) {\n        maxIn--;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (minIn > maxIn) {\n      failNoMatch();\n    }\n\n    this.minIncl = minIn;\n    this.maxIncl = maxIn;\n  }\n\n","sourceOld":"  /** Create a LongRange. */\n  public LongRange(String label, long minIn, boolean minInclusive, long maxIn, boolean maxInclusive) {\n    super(label);\n    this.min = minIn;\n    this.max = maxIn;\n    this.minInclusive = minInclusive;\n    this.maxInclusive = maxInclusive;\n\n    if (!minInclusive) {\n      if (minIn != Long.MAX_VALUE) {\n        minIn++;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (!maxInclusive) {\n      if (maxIn != Long.MIN_VALUE) {\n        maxIn--;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (minIn > maxIn) {\n      failNoMatch();\n    }\n\n    this.minIncl = minIn;\n    this.maxIncl = maxIn;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["6119ef33e3fbd8582640c23b3f5b3fbb22ba8d30"],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6119ef33e3fbd8582640c23b3f5b3fbb22ba8d30":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4edc984f0f4ac77c37e48ace2932f780f888453c":[],"21d36d0db865f7b84026b447bec653469a6e66df":["6119ef33e3fbd8582640c23b3f5b3fbb22ba8d30"],"6119ef33e3fbd8582640c23b3f5b3fbb22ba8d30":["4edc984f0f4ac77c37e48ace2932f780f888453c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4edc984f0f4ac77c37e48ace2932f780f888453c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}