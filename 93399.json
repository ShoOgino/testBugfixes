{"path":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            // (, line 225\n            // do, line 226\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 226\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 227\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 227\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 228\n            limit_backward = cursor; cursor = limit;\n            // (, line 228\n            // do, line 229\n            v_3 = limit - cursor;\n            lab2: do {\n                // call step_0, line 229\n                if (!r_step_0())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 230\n            v_4 = limit - cursor;\n            lab3: do {\n                // call standard_suffix, line 230\n                if (!r_standard_suffix())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = limit - v_4;\n            // do, line 231\n            v_5 = limit - cursor;\n            lab4: do {\n                // (, line 231\n                // or, line 231\n                lab5: do {\n                    v_6 = limit - cursor;\n                    lab6: do {\n                        // Boolean test standard_suffix_removed, line 231\n                        if (!(B_standard_suffix_removed))\n                        {\n                            break lab6;\n                        }\n                        break lab5;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // call verb_suffix, line 231\n                    if (!r_verb_suffix())\n                    {\n                        break lab4;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_5;\n            // do, line 232\n            v_7 = limit - cursor;\n            lab7: do {\n                // call vowel_suffix, line 232\n                if (!r_vowel_suffix())\n                {\n                    break lab7;\n                }\n            } while (false);\n            cursor = limit - v_7;\n            cursor = limit_backward;            // do, line 234\n            v_8 = cursor;\n            lab8: do {\n                // call postlude, line 234\n                if (!r_postlude())\n                {\n                    break lab8;\n                }\n            } while (false);\n            cursor = v_8;\n            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            // (, line 225\n            // do, line 226\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 226\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 227\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 227\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 228\n            limit_backward = cursor; cursor = limit;\n            // (, line 228\n            // do, line 229\n            v_3 = limit - cursor;\n            lab2: do {\n                // call step_0, line 229\n                if (!r_step_0())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 230\n            v_4 = limit - cursor;\n            lab3: do {\n                // call standard_suffix, line 230\n                if (!r_standard_suffix())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = limit - v_4;\n            // do, line 231\n            v_5 = limit - cursor;\n            lab4: do {\n                // (, line 231\n                // or, line 231\n                lab5: do {\n                    v_6 = limit - cursor;\n                    lab6: do {\n                        // Boolean test standard_suffix_removed, line 231\n                        if (!(B_standard_suffix_removed))\n                        {\n                            break lab6;\n                        }\n                        break lab5;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // call verb_suffix, line 231\n                    if (!r_verb_suffix())\n                    {\n                        break lab4;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_5;\n            // do, line 232\n            v_7 = limit - cursor;\n            lab7: do {\n                // call vowel_suffix, line 232\n                if (!r_vowel_suffix())\n                {\n                    break lab7;\n                }\n            } while (false);\n            cursor = limit - v_7;\n            cursor = limit_backward;            // do, line 234\n            v_8 = cursor;\n            lab8: do {\n                // call postlude, line 234\n                if (!r_postlude())\n                {\n                    break lab8;\n                }\n            } while (false);\n            cursor = v_8;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a6a9e301c12ab07b1d0428b5aad813fff317b3","date":1343846505,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n                    // (, line 225\n                    // do, line 226\n                    v_1 = cursor;\n                    lab0: do {\n                        // call prelude, line 226\n                        if (!r_prelude())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 227\n                    v_2 = cursor;\n                    lab1: do {\n                        // call mark_regions, line 227\n                        if (!r_mark_regions())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // backwards, line 228\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 228\n                    // do, line 229\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // call step_0, line 229\n                        if (!r_step_0())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 230\n                    v_4 = limit - cursor;\n                    lab3: do {\n                        // call standard_suffix, line 230\n                        if (!r_standard_suffix())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 231\n                    v_5 = limit - cursor;\n                    lab4: do {\n                        // (, line 231\n                        // or, line 231\n                        lab5: do {\n                            v_6 = limit - cursor;\n                            lab6: do {\n                                // Boolean test standard_suffix_removed, line 231\n                                if (!(B_standard_suffix_removed))\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // call verb_suffix, line 231\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 232\n                    v_7 = limit - cursor;\n                    lab7: do {\n                        // call vowel_suffix, line 232\n                        if (!r_vowel_suffix())\n                        {\n                            break lab7;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    cursor = limit_backward;                    // do, line 234\n                    v_8 = cursor;\n                    lab8: do {\n                        // call postlude, line 234\n                        if (!r_postlude())\n                        {\n                            break lab8;\n                        }\n                    } while (false);\n                    cursor = v_8;\n                    return true;\n                }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            // (, line 225\n            // do, line 226\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 226\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 227\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 227\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 228\n            limit_backward = cursor; cursor = limit;\n            // (, line 228\n            // do, line 229\n            v_3 = limit - cursor;\n            lab2: do {\n                // call step_0, line 229\n                if (!r_step_0())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 230\n            v_4 = limit - cursor;\n            lab3: do {\n                // call standard_suffix, line 230\n                if (!r_standard_suffix())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = limit - v_4;\n            // do, line 231\n            v_5 = limit - cursor;\n            lab4: do {\n                // (, line 231\n                // or, line 231\n                lab5: do {\n                    v_6 = limit - cursor;\n                    lab6: do {\n                        // Boolean test standard_suffix_removed, line 231\n                        if (!(B_standard_suffix_removed))\n                        {\n                            break lab6;\n                        }\n                        break lab5;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // call verb_suffix, line 231\n                    if (!r_verb_suffix())\n                    {\n                        break lab4;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_5;\n            // do, line 232\n            v_7 = limit - cursor;\n            lab7: do {\n                // call vowel_suffix, line 232\n                if (!r_vowel_suffix())\n                {\n                    break lab7;\n                }\n            } while (false);\n            cursor = limit - v_7;\n            cursor = limit_backward;            // do, line 234\n            v_8 = cursor;\n            lab8: do {\n                // call postlude, line 234\n                if (!r_postlude())\n                {\n                    break lab8;\n                }\n            } while (false);\n            cursor = v_8;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n                    // (, line 225\n                    // do, line 226\n                    v_1 = cursor;\n                    lab0: do {\n                        // call prelude, line 226\n                        if (!r_prelude())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 227\n                    v_2 = cursor;\n                    lab1: do {\n                        // call mark_regions, line 227\n                        if (!r_mark_regions())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // backwards, line 228\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 228\n                    // do, line 229\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // call step_0, line 229\n                        if (!r_step_0())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 230\n                    v_4 = limit - cursor;\n                    lab3: do {\n                        // call standard_suffix, line 230\n                        if (!r_standard_suffix())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 231\n                    v_5 = limit - cursor;\n                    lab4: do {\n                        // (, line 231\n                        // or, line 231\n                        lab5: do {\n                            v_6 = limit - cursor;\n                            lab6: do {\n                                // Boolean test standard_suffix_removed, line 231\n                                if (!(B_standard_suffix_removed))\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // call verb_suffix, line 231\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 232\n                    v_7 = limit - cursor;\n                    lab7: do {\n                        // call vowel_suffix, line 232\n                        if (!r_vowel_suffix())\n                        {\n                            break lab7;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    cursor = limit_backward;                    // do, line 234\n                    v_8 = cursor;\n                    lab8: do {\n                        // call postlude, line 234\n                        if (!r_postlude())\n                        {\n                            break lab8;\n                        }\n                    } while (false);\n                    cursor = v_8;\n                    return true;\n                }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            // (, line 225\n            // do, line 226\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 226\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 227\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 227\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 228\n            limit_backward = cursor; cursor = limit;\n            // (, line 228\n            // do, line 229\n            v_3 = limit - cursor;\n            lab2: do {\n                // call step_0, line 229\n                if (!r_step_0())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 230\n            v_4 = limit - cursor;\n            lab3: do {\n                // call standard_suffix, line 230\n                if (!r_standard_suffix())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = limit - v_4;\n            // do, line 231\n            v_5 = limit - cursor;\n            lab4: do {\n                // (, line 231\n                // or, line 231\n                lab5: do {\n                    v_6 = limit - cursor;\n                    lab6: do {\n                        // Boolean test standard_suffix_removed, line 231\n                        if (!(B_standard_suffix_removed))\n                        {\n                            break lab6;\n                        }\n                        break lab5;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // call verb_suffix, line 231\n                    if (!r_verb_suffix())\n                    {\n                        break lab4;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_5;\n            // do, line 232\n            v_7 = limit - cursor;\n            lab7: do {\n                // call vowel_suffix, line 232\n                if (!r_vowel_suffix())\n                {\n                    break lab7;\n                }\n            } while (false);\n            cursor = limit - v_7;\n            cursor = limit_backward;            // do, line 234\n            v_8 = cursor;\n            lab8: do {\n                // call postlude, line 234\n                if (!r_postlude())\n                {\n                    break lab8;\n                }\n            } while (false);\n            cursor = v_8;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n                    // (, line 225\n                    // do, line 226\n                    v_1 = cursor;\n                    lab0: do {\n                        // call prelude, line 226\n                        if (!r_prelude())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 227\n                    v_2 = cursor;\n                    lab1: do {\n                        // call mark_regions, line 227\n                        if (!r_mark_regions())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // backwards, line 228\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 228\n                    // do, line 229\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // call step_0, line 229\n                        if (!r_step_0())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 230\n                    v_4 = limit - cursor;\n                    lab3: do {\n                        // call standard_suffix, line 230\n                        if (!r_standard_suffix())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 231\n                    v_5 = limit - cursor;\n                    lab4: do {\n                        // (, line 231\n                        // or, line 231\n                        lab5: do {\n                            v_6 = limit - cursor;\n                            lab6: do {\n                                // Boolean test standard_suffix_removed, line 231\n                                if (!(B_standard_suffix_removed))\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // call verb_suffix, line 231\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 232\n                    v_7 = limit - cursor;\n                    lab7: do {\n                        // call vowel_suffix, line 232\n                        if (!r_vowel_suffix())\n                        {\n                            break lab7;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    cursor = limit_backward;                    // do, line 234\n                    v_8 = cursor;\n                    lab8: do {\n                        // call postlude, line 234\n                        if (!r_postlude())\n                        {\n                            break lab8;\n                        }\n                    } while (false);\n                    cursor = v_8;\n                    return true;\n                }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            // (, line 225\n            // do, line 226\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 226\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 227\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 227\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 228\n            limit_backward = cursor; cursor = limit;\n            // (, line 228\n            // do, line 229\n            v_3 = limit - cursor;\n            lab2: do {\n                // call step_0, line 229\n                if (!r_step_0())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 230\n            v_4 = limit - cursor;\n            lab3: do {\n                // call standard_suffix, line 230\n                if (!r_standard_suffix())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = limit - v_4;\n            // do, line 231\n            v_5 = limit - cursor;\n            lab4: do {\n                // (, line 231\n                // or, line 231\n                lab5: do {\n                    v_6 = limit - cursor;\n                    lab6: do {\n                        // Boolean test standard_suffix_removed, line 231\n                        if (!(B_standard_suffix_removed))\n                        {\n                            break lab6;\n                        }\n                        break lab5;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // call verb_suffix, line 231\n                    if (!r_verb_suffix())\n                    {\n                        break lab4;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_5;\n            // do, line 232\n            v_7 = limit - cursor;\n            lab7: do {\n                // call vowel_suffix, line 232\n                if (!r_vowel_suffix())\n                {\n                    break lab7;\n                }\n            } while (false);\n            cursor = limit - v_7;\n            cursor = limit_backward;            // do, line 234\n            v_8 = cursor;\n            lab8: do {\n                // call postlude, line 234\n                if (!r_postlude())\n                {\n                    break lab8;\n                }\n            } while (false);\n            cursor = v_8;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","sourceNew":"                @Override\n                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n                    // (, line 225\n                    // do, line 226\n                    v_1 = cursor;\n                    lab0: do {\n                        // call prelude, line 226\n                        if (!r_prelude())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 227\n                    v_2 = cursor;\n                    lab1: do {\n                        // call mark_regions, line 227\n                        if (!r_mark_regions())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // backwards, line 228\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 228\n                    // do, line 229\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // call step_0, line 229\n                        if (!r_step_0())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 230\n                    v_4 = limit - cursor;\n                    lab3: do {\n                        // call standard_suffix, line 230\n                        if (!r_standard_suffix())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 231\n                    v_5 = limit - cursor;\n                    lab4: do {\n                        // (, line 231\n                        // or, line 231\n                        lab5: do {\n                            v_6 = limit - cursor;\n                            lab6: do {\n                                // Boolean test standard_suffix_removed, line 231\n                                if (!(B_standard_suffix_removed))\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // call verb_suffix, line 231\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 232\n                    v_7 = limit - cursor;\n                    lab7: do {\n                        // call vowel_suffix, line 232\n                        if (!r_vowel_suffix())\n                        {\n                            break lab7;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    cursor = limit_backward;                    // do, line 234\n                    v_8 = cursor;\n                    lab8: do {\n                        // call postlude, line 234\n                        if (!r_postlude())\n                        {\n                            break lab8;\n                        }\n                    } while (false);\n                    cursor = v_8;\n                    return true;\n                }\n\n","sourceOld":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n                    // (, line 225\n                    // do, line 226\n                    v_1 = cursor;\n                    lab0: do {\n                        // call prelude, line 226\n                        if (!r_prelude())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 227\n                    v_2 = cursor;\n                    lab1: do {\n                        // call mark_regions, line 227\n                        if (!r_mark_regions())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // backwards, line 228\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 228\n                    // do, line 229\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // call step_0, line 229\n                        if (!r_step_0())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 230\n                    v_4 = limit - cursor;\n                    lab3: do {\n                        // call standard_suffix, line 230\n                        if (!r_standard_suffix())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 231\n                    v_5 = limit - cursor;\n                    lab4: do {\n                        // (, line 231\n                        // or, line 231\n                        lab5: do {\n                            v_6 = limit - cursor;\n                            lab6: do {\n                                // Boolean test standard_suffix_removed, line 231\n                                if (!(B_standard_suffix_removed))\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // call verb_suffix, line 231\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 232\n                    v_7 = limit - cursor;\n                    lab7: do {\n                        // call vowel_suffix, line 232\n                        if (!r_vowel_suffix())\n                        {\n                            break lab7;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    cursor = limit_backward;                    // do, line 234\n                    v_8 = cursor;\n                    lab8: do {\n                        // call postlude, line 234\n                        if (!r_postlude())\n                        {\n                            break lab8;\n                        }\n                    } while (false);\n                    cursor = v_8;\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","sourceNew":"                @Override\n                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n                    // (, line 225\n                    // do, line 226\n                    v_1 = cursor;\n                    lab0: do {\n                        // call prelude, line 226\n                        if (!r_prelude())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 227\n                    v_2 = cursor;\n                    lab1: do {\n                        // call mark_regions, line 227\n                        if (!r_mark_regions())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // backwards, line 228\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 228\n                    // do, line 229\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // call step_0, line 229\n                        if (!r_step_0())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 230\n                    v_4 = limit - cursor;\n                    lab3: do {\n                        // call standard_suffix, line 230\n                        if (!r_standard_suffix())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 231\n                    v_5 = limit - cursor;\n                    lab4: do {\n                        // (, line 231\n                        // or, line 231\n                        lab5: do {\n                            v_6 = limit - cursor;\n                            lab6: do {\n                                // Boolean test standard_suffix_removed, line 231\n                                if (!(B_standard_suffix_removed))\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // call verb_suffix, line 231\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 232\n                    v_7 = limit - cursor;\n                    lab7: do {\n                        // call vowel_suffix, line 232\n                        if (!r_vowel_suffix())\n                        {\n                            break lab7;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    cursor = limit_backward;                    // do, line 234\n                    v_8 = cursor;\n                    lab8: do {\n                        // call postlude, line 234\n                        if (!r_postlude())\n                        {\n                            break lab8;\n                        }\n                    } while (false);\n                    cursor = v_8;\n                    return true;\n                }\n\n","sourceOld":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n                    // (, line 225\n                    // do, line 226\n                    v_1 = cursor;\n                    lab0: do {\n                        // call prelude, line 226\n                        if (!r_prelude())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 227\n                    v_2 = cursor;\n                    lab1: do {\n                        // call mark_regions, line 227\n                        if (!r_mark_regions())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // backwards, line 228\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 228\n                    // do, line 229\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // call step_0, line 229\n                        if (!r_step_0())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 230\n                    v_4 = limit - cursor;\n                    lab3: do {\n                        // call standard_suffix, line 230\n                        if (!r_standard_suffix())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 231\n                    v_5 = limit - cursor;\n                    lab4: do {\n                        // (, line 231\n                        // or, line 231\n                        lab5: do {\n                            v_6 = limit - cursor;\n                            lab6: do {\n                                // Boolean test standard_suffix_removed, line 231\n                                if (!(B_standard_suffix_removed))\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // call verb_suffix, line 231\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 232\n                    v_7 = limit - cursor;\n                    lab7: do {\n                        // call vowel_suffix, line 232\n                        if (!r_vowel_suffix())\n                        {\n                            break lab7;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    cursor = limit_backward;                    // do, line 234\n                    v_8 = cursor;\n                    lab8: do {\n                        // call postlude, line 234\n                        if (!r_postlude())\n                        {\n                            break lab8;\n                        }\n                    } while (false);\n                    cursor = v_8;\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09479cd2de06c67a115b7346a8e5de8af4d62e81","date":1581961081,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","sourceNew":"public boolean stem() {\n  int v_1 = cursor;\n  r_prelude();\n  cursor = v_1;\n  r_mark_regions();\n  limit_backward = cursor;\n  cursor = limit;\n  int v_3 = limit - cursor;\n  r_step_0();\n  cursor = limit - v_3;\n  int v_4 = limit - cursor;\n  r_standard_suffix();\n  cursor = limit - v_4;\n  int v_5 = limit - cursor;\n  lab0: {\n    lab1: {\n      int v_6 = limit - cursor;\n      lab2: {\n        if (!(B_standard_suffix_removed))\n        {\n          break lab2;\n        }\n        break lab1;\n      }\n      cursor = limit - v_6;\n      if (!r_verb_suffix())\n      {\n        break lab0;\n      }\n    }\n  }\n  cursor = limit - v_5;\n  int v_7 = limit - cursor;\n  r_vowel_suffix();\n  cursor = limit - v_7;\n  cursor = limit_backward;\n  int v_8 = cursor;\n  r_postlude();\n  cursor = v_8;\n  return true;\n}\n\n","sourceOld":"                @Override\n                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n                    // (, line 225\n                    // do, line 226\n                    v_1 = cursor;\n                    lab0: do {\n                        // call prelude, line 226\n                        if (!r_prelude())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 227\n                    v_2 = cursor;\n                    lab1: do {\n                        // call mark_regions, line 227\n                        if (!r_mark_regions())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // backwards, line 228\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 228\n                    // do, line 229\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // call step_0, line 229\n                        if (!r_step_0())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 230\n                    v_4 = limit - cursor;\n                    lab3: do {\n                        // call standard_suffix, line 230\n                        if (!r_standard_suffix())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 231\n                    v_5 = limit - cursor;\n                    lab4: do {\n                        // (, line 231\n                        // or, line 231\n                        lab5: do {\n                            v_6 = limit - cursor;\n                            lab6: do {\n                                // Boolean test standard_suffix_removed, line 231\n                                if (!(B_standard_suffix_removed))\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // call verb_suffix, line 231\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 232\n                    v_7 = limit - cursor;\n                    lab7: do {\n                        // call vowel_suffix, line 232\n                        if (!r_vowel_suffix())\n                        {\n                            break lab7;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    cursor = limit_backward;                    // do, line 234\n                    v_8 = cursor;\n                    lab8: do {\n                        // call postlude, line 234\n                        if (!r_postlude())\n                        {\n                            break lab8;\n                        }\n                    } while (false);\n                    cursor = v_8;\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b6a6a9e301c12ab07b1d0428b5aad813fff317b3","7530de27b87b961b51f01bd1299b7004d46e8823"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09479cd2de06c67a115b7346a8e5de8af4d62e81"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d6f074e73200c07d54f242d3880a8da5a35ff97b","b6a6a9e301c12ab07b1d0428b5aad813fff317b3","8fd5be977c105554c6a7b68afcdbc511439723ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","7530de27b87b961b51f01bd1299b7004d46e8823"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","09479cd2de06c67a115b7346a8e5de8af4d62e81"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}