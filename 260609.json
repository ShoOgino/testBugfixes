{"path":"lucene/misc/src/java/org/apache/lucene/store/RAFDirectory#openInput(String,IOContext).mjava","commits":[{"id":"22c378dfd7d922a48b48093933404133eb253fe7","date":1410711399,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/store/RAFDirectory#openInput(String,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  /** Creates an IndexInput for the file with the given name. */\n  @Override\n  public IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    final File path = directory.resolve(name).toFile();\n    RandomAccessFile raf = new RandomAccessFile(path, \"r\");\n    return new RAFIndexInput(\"SimpleFSIndexInput(path=\\\"\" + path.getPath() + \"\\\")\", raf, context);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6105d385afcbf42689e171e9bcea48d0c9ff6c","date":1454692764,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/store/RAFDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/store/RAFDirectory#openInput(String,IOContext).mjava","sourceNew":"  /** Creates an IndexInput for the file with the given name. */\n  @Override\n  public IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    ensureCanRead(name);\n    final File path = directory.resolve(name).toFile();\n    RandomAccessFile raf = new RandomAccessFile(path, \"r\");\n    return new RAFIndexInput(\"SimpleFSIndexInput(path=\\\"\" + path.getPath() + \"\\\")\", raf, context);\n  }\n\n","sourceOld":"  /** Creates an IndexInput for the file with the given name. */\n  @Override\n  public IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    final File path = directory.resolve(name).toFile();\n    RandomAccessFile raf = new RandomAccessFile(path, \"r\");\n    return new RAFIndexInput(\"SimpleFSIndexInput(path=\\\"\" + path.getPath() + \"\\\")\", raf, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/store/RAFDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/store/RAFDirectory#openInput(String,IOContext).mjava","sourceNew":"  /** Creates an IndexInput for the file with the given name. */\n  @Override\n  public IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    ensureCanRead(name);\n    final File path = directory.resolve(name).toFile();\n    RandomAccessFile raf = new RandomAccessFile(path, \"r\");\n    return new RAFIndexInput(\"SimpleFSIndexInput(path=\\\"\" + path.getPath() + \"\\\")\", raf, context);\n  }\n\n","sourceOld":"  /** Creates an IndexInput for the file with the given name. */\n  @Override\n  public IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    final File path = directory.resolve(name).toFile();\n    RandomAccessFile raf = new RandomAccessFile(path, \"r\");\n    return new RAFIndexInput(\"SimpleFSIndexInput(path=\\\"\" + path.getPath() + \"\\\")\", raf, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/store/RAFDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/store/RAFDirectory#openInput(String,IOContext).mjava","sourceNew":"  /** Creates an IndexInput for the file with the given name. */\n  @Override\n  public IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    ensureCanRead(name);\n    final File path = directory.resolve(name).toFile();\n    RandomAccessFile raf = new RandomAccessFile(path, \"r\");\n    return new RAFIndexInput(\"SimpleFSIndexInput(path=\\\"\" + path.getPath() + \"\\\")\", raf, context);\n  }\n\n","sourceOld":"  /** Creates an IndexInput for the file with the given name. */\n  @Override\n  public IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    final File path = directory.resolve(name).toFile();\n    RandomAccessFile raf = new RandomAccessFile(path, \"r\");\n    return new RAFIndexInput(\"SimpleFSIndexInput(path=\\\"\" + path.getPath() + \"\\\")\", raf, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/store/RAFDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/store/RAFDirectory#openInput(String,IOContext).mjava","sourceNew":"  /** Creates an IndexInput for the file with the given name. */\n  @Override\n  public IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    ensureCanRead(name);\n    final File path = directory.resolve(name).toFile();\n    RandomAccessFile raf = new RandomAccessFile(path, \"r\");\n    return new RAFIndexInput(\"SimpleFSIndexInput(path=\\\"\" + path.getPath() + \"\\\")\", raf, context);\n  }\n\n","sourceOld":"  /** Creates an IndexInput for the file with the given name. */\n  @Override\n  public IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    final File path = directory.resolve(name).toFile();\n    RandomAccessFile raf = new RandomAccessFile(path, \"r\");\n    return new RAFIndexInput(\"SimpleFSIndexInput(path=\\\"\" + path.getPath() + \"\\\")\", raf, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e6105d385afcbf42689e171e9bcea48d0c9ff6c":["22c378dfd7d922a48b48093933404133eb253fe7"],"5a207d19eac354d649c3f0e2cce070017c78125e":["22c378dfd7d922a48b48093933404133eb253fe7","b470f36a9372c97283360b1304eacbde22df6c0d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["22c378dfd7d922a48b48093933404133eb253fe7","1e6105d385afcbf42689e171e9bcea48d0c9ff6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["22c378dfd7d922a48b48093933404133eb253fe7","b470f36a9372c97283360b1304eacbde22df6c0d"],"22c378dfd7d922a48b48093933404133eb253fe7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a207d19eac354d649c3f0e2cce070017c78125e"]},"commit2Childs":{"1e6105d385afcbf42689e171e9bcea48d0c9ff6c":["b470f36a9372c97283360b1304eacbde22df6c0d"],"5a207d19eac354d649c3f0e2cce070017c78125e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22c378dfd7d922a48b48093933404133eb253fe7"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"22c378dfd7d922a48b48093933404133eb253fe7":["1e6105d385afcbf42689e171e9bcea48d0c9ff6c","5a207d19eac354d649c3f0e2cce070017c78125e","b470f36a9372c97283360b1304eacbde22df6c0d","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}