{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#testDefaults().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#testDefaults().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestVariableResolver#testDefaults().mjava","sourceNew":"  @Test\n  public void testDefaults(){\n    // System.out.println(System.setProperty(TestVariableResolver.class.getName(),\"hello\"));\n    System.setProperty(TestVariableResolver.class.getName(),\"hello\");\n    // System.out.println(\"s.gP()\"+ System.getProperty(TestVariableResolver.class.getName())); \n\n    HashMap m = new HashMap();\n    m.put(\"hello\",\"world\");\n    VariableResolverImpl vri = new VariableResolverImpl(m);\n    Object val = vri.resolve(TestVariableResolver.class.getName());\n    // System.out.println(\"val = \" + val);\n    assertEquals(\"hello\", val);\n    assertEquals(\"world\",vri.resolve(\"hello\"));\n  }\n\n","sourceOld":"  @Test\n  public void testDefaults(){\n    // System.out.println(System.setProperty(TestVariableResolver.class.getName(),\"hello\"));\n    System.setProperty(TestVariableResolver.class.getName(),\"hello\");\n    // System.out.println(\"s.gP()\"+ System.getProperty(TestVariableResolver.class.getName())); \n\n    HashMap m = new HashMap();\n    m.put(\"hello\",\"world\");\n    VariableResolverImpl vri = new VariableResolverImpl(m);\n    Object val = vri.resolve(TestVariableResolver.class.getName());\n    // System.out.println(\"val = \" + val);\n    assertEquals(\"hello\", val);\n    assertEquals(\"world\",vri.resolve(\"hello\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#testDefaults().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestVariableResolver#testDefaults().mjava","sourceNew":"  @Test\n  public void testDefaults(){\n    // System.out.println(System.setProperty(TestVariableResolver.class.getName(),\"hello\"));\n    System.setProperty(TestVariableResolver.class.getName(),\"hello\");\n    // System.out.println(\"s.gP()\"+ System.getProperty(TestVariableResolver.class.getName())); \n\n    HashMap m = new HashMap();\n    m.put(\"hello\",\"world\");\n    VariableResolverImpl vri = new VariableResolverImpl(m);\n    Object val = vri.resolve(TestVariableResolver.class.getName());\n    // System.out.println(\"val = \" + val);\n    assertEquals(\"hello\", val);\n    assertEquals(\"world\",vri.resolve(\"hello\"));\n  }\n\n","sourceOld":"  @Test\n  public void testDefaults(){\n    // System.out.println(System.setProperty(TestVariableResolver.class.getName(),\"hello\"));\n    System.setProperty(TestVariableResolver.class.getName(),\"hello\");\n    // System.out.println(\"s.gP()\"+ System.getProperty(TestVariableResolver.class.getName())); \n\n    HashMap m = new HashMap();\n    m.put(\"hello\",\"world\");\n    VariableResolverImpl vri = new VariableResolverImpl(m);\n    Object val = vri.resolve(TestVariableResolver.class.getName());\n    // System.out.println(\"val = \" + val);\n    assertEquals(\"hello\", val);\n    assertEquals(\"world\",vri.resolve(\"hello\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c7b0ae5716b6c2044195a818e9ae58205175659","date":1353342230,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#testDefaults().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#testDefaults().mjava","sourceNew":"  @Test\n  public void testDefaults(){\n    // System.out.println(System.setProperty(TestVariableResolver.class.getName(),\"hello\"));\n    System.setProperty(TestVariableResolver.class.getName(),\"hello\");\n    // System.out.println(\"s.gP()\"+ System.getProperty(TestVariableResolver.class.getName())); \n\n    Properties p = new Properties();\n    p.put(\"hello\",\"world\");\n    VariableResolver vri = new VariableResolver(p);\n    Object val = vri.resolve(TestVariableResolver.class.getName());\n    // System.out.println(\"val = \" + val);\n    assertEquals(\"hello\", val);\n    assertEquals(\"world\",vri.resolve(\"hello\"));\n  }\n\n","sourceOld":"  @Test\n  public void testDefaults(){\n    // System.out.println(System.setProperty(TestVariableResolver.class.getName(),\"hello\"));\n    System.setProperty(TestVariableResolver.class.getName(),\"hello\");\n    // System.out.println(\"s.gP()\"+ System.getProperty(TestVariableResolver.class.getName())); \n\n    HashMap m = new HashMap();\n    m.put(\"hello\",\"world\");\n    VariableResolverImpl vri = new VariableResolverImpl(m);\n    Object val = vri.resolve(TestVariableResolver.class.getName());\n    // System.out.println(\"val = \" + val);\n    assertEquals(\"hello\", val);\n    assertEquals(\"world\",vri.resolve(\"hello\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1e9c3b0a1f683f4f9e53940d80b2791059be6b6","date":1353344064,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#testDefaults().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#testDefaults().mjava","sourceNew":"  @Test\n  public void testDefaults() {\n    // System.out.println(System.setProperty(TestVariableResolver.class.getName(),\"hello\"));\n    System.setProperty(TestVariableResolver.class.getName(), \"hello\");\n    // System.out.println(\"s.gP()\"+\n    // System.getProperty(TestVariableResolver.class.getName()));\n    \n    Properties p = new Properties();\n    p.put(\"hello\", \"world\");\n    VariableResolver vri = new VariableResolver(p);\n    Object val = vri.resolve(TestVariableResolver.class.getName());\n    // System.out.println(\"val = \" + val);\n    assertEquals(\"hello\", val);\n    assertEquals(\"world\", vri.resolve(\"hello\"));\n  }\n\n","sourceOld":"  @Test\n  public void testDefaults(){\n    // System.out.println(System.setProperty(TestVariableResolver.class.getName(),\"hello\"));\n    System.setProperty(TestVariableResolver.class.getName(),\"hello\");\n    // System.out.println(\"s.gP()\"+ System.getProperty(TestVariableResolver.class.getName())); \n\n    Properties p = new Properties();\n    p.put(\"hello\",\"world\");\n    VariableResolver vri = new VariableResolver(p);\n    Object val = vri.resolve(TestVariableResolver.class.getName());\n    // System.out.println(\"val = \" + val);\n    assertEquals(\"hello\", val);\n    assertEquals(\"world\",vri.resolve(\"hello\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#testDefaults().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#testDefaults().mjava","sourceNew":"  @Test\n  public void testDefaults() {\n    // System.out.println(System.setProperty(TestVariableResolver.class.getName(),\"hello\"));\n    System.setProperty(TestVariableResolver.class.getName(), \"hello\");\n    // System.out.println(\"s.gP()\"+\n    // System.getProperty(TestVariableResolver.class.getName()));\n    \n    Properties p = new Properties();\n    p.put(\"hello\", \"world\");\n    VariableResolver vri = new VariableResolver(p);\n    Object val = vri.resolve(TestVariableResolver.class.getName());\n    // System.out.println(\"val = \" + val);\n    assertEquals(\"hello\", val);\n    assertEquals(\"world\", vri.resolve(\"hello\"));\n  }\n\n","sourceOld":"  @Test\n  public void testDefaults(){\n    // System.out.println(System.setProperty(TestVariableResolver.class.getName(),\"hello\"));\n    System.setProperty(TestVariableResolver.class.getName(),\"hello\");\n    // System.out.println(\"s.gP()\"+ System.getProperty(TestVariableResolver.class.getName())); \n\n    HashMap m = new HashMap();\n    m.put(\"hello\",\"world\");\n    VariableResolverImpl vri = new VariableResolverImpl(m);\n    Object val = vri.resolve(TestVariableResolver.class.getName());\n    // System.out.println(\"val = \" + val);\n    assertEquals(\"hello\", val);\n    assertEquals(\"world\",vri.resolve(\"hello\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#testDefaults().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testDefaults() {\n    // System.out.println(System.setProperty(TestVariableResolver.class.getName(),\"hello\"));\n    System.setProperty(TestVariableResolver.class.getName(), \"hello\");\n    // System.out.println(\"s.gP()\"+\n    // System.getProperty(TestVariableResolver.class.getName()));\n    \n    Properties p = new Properties();\n    p.put(\"hello\", \"world\");\n    VariableResolver vri = new VariableResolver(p);\n    Object val = vri.resolve(TestVariableResolver.class.getName());\n    // System.out.println(\"val = \" + val);\n    assertEquals(\"hello\", val);\n    assertEquals(\"world\", vri.resolve(\"hello\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["e1e9c3b0a1f683f4f9e53940d80b2791059be6b6"],"e1e9c3b0a1f683f4f9e53940d80b2791059be6b6":["7c7b0ae5716b6c2044195a818e9ae58205175659"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["c26f00b574427b55127e869b935845554afde1fa","e1e9c3b0a1f683f4f9e53940d80b2791059be6b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e1e9c3b0a1f683f4f9e53940d80b2791059be6b6":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","407687e67faf6e1f02a211ca078d8e3eed631027"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["e1e9c3b0a1f683f4f9e53940d80b2791059be6b6"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7c7b0ae5716b6c2044195a818e9ae58205175659","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}