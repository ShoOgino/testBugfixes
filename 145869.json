{"path":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#checkCM(ConfusionMatrixGenerator.ConfusionMatrix).mjava","commits":[{"id":"e71b30ca45cace3116f6ee06a0bbcb578707fa52","date":1495110978,"type":0,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#checkCM(ConfusionMatrixGenerator.ConfusionMatrix).mjava","pathOld":"/dev/null","sourceNew":"  private void checkCM(ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix) {\n    assertNotNull(confusionMatrix);\n    assertNotNull(confusionMatrix.getLinearizedMatrix());\n    assertEquals(7, confusionMatrix.getNumberOfEvaluatedDocs());\n    assertTrue(confusionMatrix.getAvgClassificationTime() >= 0d);\n    double accuracy = confusionMatrix.getAccuracy();\n    assertTrue(accuracy >= 0d);\n    assertTrue(accuracy <= 1d);\n    double precision = confusionMatrix.getPrecision();\n    assertTrue(precision >= 0d);\n    assertTrue(precision <= 1d);\n    double recall = confusionMatrix.getRecall();\n    assertTrue(recall >= 0d);\n    assertTrue(recall <= 1d);\n    double f1Measure = confusionMatrix.getF1Measure();\n    assertTrue(f1Measure >= 0d);\n    assertTrue(f1Measure <= 1d);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#checkCM(ConfusionMatrixGenerator.ConfusionMatrix).mjava","pathOld":"/dev/null","sourceNew":"  private void checkCM(ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix) {\n    assertNotNull(confusionMatrix);\n    assertNotNull(confusionMatrix.getLinearizedMatrix());\n    assertEquals(7, confusionMatrix.getNumberOfEvaluatedDocs());\n    assertTrue(confusionMatrix.getAvgClassificationTime() >= 0d);\n    double accuracy = confusionMatrix.getAccuracy();\n    assertTrue(accuracy >= 0d);\n    assertTrue(accuracy <= 1d);\n    double precision = confusionMatrix.getPrecision();\n    assertTrue(precision >= 0d);\n    assertTrue(precision <= 1d);\n    double recall = confusionMatrix.getRecall();\n    assertTrue(recall >= 0d);\n    assertTrue(recall <= 1d);\n    double f1Measure = confusionMatrix.getF1Measure();\n    assertTrue(f1Measure >= 0d);\n    assertTrue(f1Measure <= 1d);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e71b30ca45cace3116f6ee06a0bbcb578707fa52":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e71b30ca45cace3116f6ee06a0bbcb578707fa52"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e71b30ca45cace3116f6ee06a0bbcb578707fa52"]},"commit2Childs":{"e71b30ca45cace3116f6ee06a0bbcb578707fa52":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e71b30ca45cace3116f6ee06a0bbcb578707fa52","e9017cf144952056066919f1ebc7897ff9bd71b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}