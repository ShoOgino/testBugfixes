{"path":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    MockIndexWriter.RANDOM = random;\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random, new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = _TestUtil.getTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    MockIndexWriter.RANDOM = random;\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random, new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = _TestUtil.getTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = _TestUtil.getTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    MockIndexWriter.RANDOM = random;\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random, new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = _TestUtil.getTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = TestUtil.getTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    TestUtil.rmDir(dirPath);\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = _TestUtil.getTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = TestUtil.createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    TestUtil.rmDir(dirPath);\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = TestUtil.getTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    TestUtil.rmDir(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be04a7534a8a0679382542b62556ea5fba6cfb7f","date":1396613089,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = TestUtil.createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    TestUtil.rm(dirPath);\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = TestUtil.createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    TestUtil.rmDir(dirPath);\n  }\n\n","bugFix":null,"bugIntro":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c","date":1396633078,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    TestUtil.rm(dirPath);\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = TestUtil.createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    TestUtil.rm(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    TestUtil.rm(dirPath);\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = TestUtil.getTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    TestUtil.rmDir(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cbc3688252d4a8045d69a164236b2cf87b721f17","date":1409846185,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    IOUtils.rm(dirPath);\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    TestUtil.rm(dirPath);\n  }\n\n","bugFix":["be04a7534a8a0679382542b62556ea5fba6cfb7f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    Path dirPath = createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    IOUtils.rm(dirPath);\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    IOUtils.rm(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    Path dirPath = createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    Path dirPath = createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    IOUtils.rm(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    Path dirPath = createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    Path dirPath = createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    IOUtils.rm(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    Path dirPath = createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    Path dirPath = createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    IOUtils.rm(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    Path dirPath = createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    Path dirPath = createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    IOUtils.rm(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /* */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // run against a random directory.\n    directory = new MockDirectoryWrapper(random(), new ByteBuffersDirectory());\n    runTest(directory);\n    directory.close();\n\n    // then against an FSDirectory.\n    Path dirPath = createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockDirectoryWrapper(random(), new RAMDirectory());\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    Path dirPath = createTempDir(\"lucene.test.atomic\");\n    directory = newFSDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["6613659748fe4411a7dcf85266e55db1f95f7315","a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"6613659748fe4411a7dcf85266e55db1f95f7315":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a207d19eac354d649c3f0e2cce070017c78125e":["f4abec28b874149a7223e32cc7a01704c27790de","b470f36a9372c97283360b1304eacbde22df6c0d"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["f4abec28b874149a7223e32cc7a01704c27790de","b470f36a9372c97283360b1304eacbde22df6c0d"],"d77dafd89756a5161d244985903e3487ca109182":["5a207d19eac354d649c3f0e2cce070017c78125e"],"f4abec28b874149a7223e32cc7a01704c27790de":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"d0d579490a72f2e6297eaa648940611234c57cf1":["6613659748fe4411a7dcf85266e55db1f95f7315"],"be04a7534a8a0679382542b62556ea5fba6cfb7f":["d0d579490a72f2e6297eaa648940611234c57cf1"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["be04a7534a8a0679382542b62556ea5fba6cfb7f"],"b470f36a9372c97283360b1304eacbde22df6c0d":["f4abec28b874149a7223e32cc7a01704c27790de","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["f4abec28b874149a7223e32cc7a01704c27790de"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"6613659748fe4411a7dcf85266e55db1f95f7315":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","d0d579490a72f2e6297eaa648940611234c57cf1"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"5a207d19eac354d649c3f0e2cce070017c78125e":["d77dafd89756a5161d244985903e3487ca109182"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f4abec28b874149a7223e32cc7a01704c27790de":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3","b470f36a9372c97283360b1304eacbde22df6c0d","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"d0d579490a72f2e6297eaa648940611234c57cf1":["be04a7534a8a0679382542b62556ea5fba6cfb7f"],"be04a7534a8a0679382542b62556ea5fba6cfb7f":["a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["f4abec28b874149a7223e32cc7a01704c27790de"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["b470f36a9372c97283360b1304eacbde22df6c0d"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["6613659748fe4411a7dcf85266e55db1f95f7315"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}