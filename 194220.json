{"path":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter#getPartition(Future[Partition]).mjava","commits":[{"id":"36a23c6fa37610e466602f47f4ddf1e7a8e702e5","date":1493213774,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter#getPartition(Future[Partition]).mjava","pathOld":"/dev/null","sourceNew":"  private Partition getPartition(Future<Partition> future) throws IOException {\n    try {\n      return future.get();\n    } catch (InterruptedException ie) {\n      throw new ThreadInterruptedException(ie);\n    } catch (ExecutionException ee) {\n      IOUtils.reThrow(ee.getCause());\n      // oh so soon to go away:\n      return null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2","date":1493374641,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter#getPartition(Future[Partition]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter#getPartition(Future[Partition]).mjava","sourceNew":"  private Partition getPartition(Future<Partition> future) throws IOException {\n    try {\n      return future.get();\n    } catch (InterruptedException ie) {\n      throw new ThreadInterruptedException(ie);\n    } catch (ExecutionException ee) {\n      // Theoretically cause can be null; guard against that.\n      Throwable cause = ee.getCause();\n      throw IOUtils.rethrowAlways(cause != null ? cause : ee);\n    }\n  }\n\n","sourceOld":"  private Partition getPartition(Future<Partition> future) throws IOException {\n    try {\n      return future.get();\n    } catch (InterruptedException ie) {\n      throw new ThreadInterruptedException(ie);\n    } catch (ExecutionException ee) {\n      IOUtils.reThrow(ee.getCause());\n      // oh so soon to go away:\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter#getPartition(Future[Partition]).mjava","pathOld":"/dev/null","sourceNew":"  private Partition getPartition(Future<Partition> future) throws IOException {\n    try {\n      return future.get();\n    } catch (InterruptedException ie) {\n      throw new ThreadInterruptedException(ie);\n    } catch (ExecutionException ee) {\n      // Theoretically cause can be null; guard against that.\n      Throwable cause = ee.getCause();\n      throw IOUtils.rethrowAlways(cause != null ? cause : ee);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"],"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2":["36a23c6fa37610e466602f47f4ddf1e7a8e702e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"36a23c6fa37610e466602f47f4ddf1e7a8e702e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","36a23c6fa37610e466602f47f4ddf1e7a8e702e5"],"36a23c6fa37610e466602f47f4ddf1e7a8e702e5":["97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}