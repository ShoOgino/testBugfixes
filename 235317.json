{"path":"src/java/org/apache/lucene/index/DirectoryReader#open(Directory,IndexDeletionPolicy,IndexCommit,boolean,int).mjava","commits":[{"id":"961159f13aece73fbb30aea720e77a2237e8bafd","date":1247258916,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryReader#open(Directory,IndexDeletionPolicy,IndexCommit,boolean,int).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryReader#open(Directory,IndexDeletionPolicy,IndexCommit,boolean).mjava","sourceNew":"  static IndexReader open(final Directory directory, final IndexDeletionPolicy deletionPolicy, final IndexCommit commit, final boolean readOnly,\n                          final int termInfosIndexDivisor) throws CorruptIndexException, IOException {\n    return (IndexReader) new SegmentInfos.FindSegmentsFile(directory) {\n      protected Object doBody(String segmentFileName) throws CorruptIndexException, IOException {\n        SegmentInfos infos = new SegmentInfos();\n        infos.read(directory, segmentFileName);\n        if (readOnly)\n          return new ReadOnlyDirectoryReader(directory, infos, deletionPolicy, termInfosIndexDivisor);\n        else\n          return new DirectoryReader(directory, infos, deletionPolicy, false, termInfosIndexDivisor);\n      }\n    }.run(commit);\n  }\n\n","sourceOld":"  static IndexReader open(final Directory directory, final IndexDeletionPolicy deletionPolicy, final IndexCommit commit, final boolean readOnly) throws CorruptIndexException, IOException {\n    return (IndexReader) new SegmentInfos.FindSegmentsFile(directory) {\n      protected Object doBody(String segmentFileName) throws CorruptIndexException, IOException {\n        SegmentInfos infos = new SegmentInfos();\n        infos.read(directory, segmentFileName);\n        if (readOnly)\n          return new ReadOnlyDirectoryReader(directory, infos, deletionPolicy);\n        else\n          return new DirectoryReader(directory, infos, deletionPolicy, false);\n      }\n    }.run(commit);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryReader#open(Directory,IndexDeletionPolicy,IndexCommit,boolean,int).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryReader#open(Directory,IndexDeletionPolicy,IndexCommit,boolean,int).mjava","sourceNew":"  static IndexReader open(final Directory directory, final IndexDeletionPolicy deletionPolicy, final IndexCommit commit, final boolean readOnly,\n                          final int termInfosIndexDivisor) throws CorruptIndexException, IOException {\n    return (IndexReader) new SegmentInfos.FindSegmentsFile(directory) {\n      @Override\n      protected Object doBody(String segmentFileName) throws CorruptIndexException, IOException {\n        SegmentInfos infos = new SegmentInfos();\n        infos.read(directory, segmentFileName);\n        if (readOnly)\n          return new ReadOnlyDirectoryReader(directory, infos, deletionPolicy, termInfosIndexDivisor);\n        else\n          return new DirectoryReader(directory, infos, deletionPolicy, false, termInfosIndexDivisor);\n      }\n    }.run(commit);\n  }\n\n","sourceOld":"  static IndexReader open(final Directory directory, final IndexDeletionPolicy deletionPolicy, final IndexCommit commit, final boolean readOnly,\n                          final int termInfosIndexDivisor) throws CorruptIndexException, IOException {\n    return (IndexReader) new SegmentInfos.FindSegmentsFile(directory) {\n      protected Object doBody(String segmentFileName) throws CorruptIndexException, IOException {\n        SegmentInfos infos = new SegmentInfos();\n        infos.read(directory, segmentFileName);\n        if (readOnly)\n          return new ReadOnlyDirectoryReader(directory, infos, deletionPolicy, termInfosIndexDivisor);\n        else\n          return new DirectoryReader(directory, infos, deletionPolicy, false, termInfosIndexDivisor);\n      }\n    }.run(commit);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#open(Directory,IndexDeletionPolicy,IndexCommit,boolean,int).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryReader#open(Directory,IndexDeletionPolicy,IndexCommit,boolean,int).mjava","sourceNew":"  static IndexReader open(final Directory directory, final IndexDeletionPolicy deletionPolicy, final IndexCommit commit, final boolean readOnly,\n                          final int termInfosIndexDivisor) throws CorruptIndexException, IOException {\n    return (IndexReader) new SegmentInfos.FindSegmentsFile(directory) {\n      @Override\n      protected Object doBody(String segmentFileName) throws CorruptIndexException, IOException {\n        SegmentInfos infos = new SegmentInfos();\n        infos.read(directory, segmentFileName);\n        if (readOnly)\n          return new ReadOnlyDirectoryReader(directory, infos, deletionPolicy, termInfosIndexDivisor);\n        else\n          return new DirectoryReader(directory, infos, deletionPolicy, false, termInfosIndexDivisor);\n      }\n    }.run(commit);\n  }\n\n","sourceOld":"  static IndexReader open(final Directory directory, final IndexDeletionPolicy deletionPolicy, final IndexCommit commit, final boolean readOnly,\n                          final int termInfosIndexDivisor) throws CorruptIndexException, IOException {\n    return (IndexReader) new SegmentInfos.FindSegmentsFile(directory) {\n      @Override\n      protected Object doBody(String segmentFileName) throws CorruptIndexException, IOException {\n        SegmentInfos infos = new SegmentInfos();\n        infos.read(directory, segmentFileName);\n        if (readOnly)\n          return new ReadOnlyDirectoryReader(directory, infos, deletionPolicy, termInfosIndexDivisor);\n        else\n          return new DirectoryReader(directory, infos, deletionPolicy, false, termInfosIndexDivisor);\n      }\n    }.run(commit);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"961159f13aece73fbb30aea720e77a2237e8bafd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8a9e385641d717e641408d8fbbc62be8fc766357":["961159f13aece73fbb30aea720e77a2237e8bafd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"961159f13aece73fbb30aea720e77a2237e8bafd":["8a9e385641d717e641408d8fbbc62be8fc766357"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["961159f13aece73fbb30aea720e77a2237e8bafd"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}