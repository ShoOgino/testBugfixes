{"path":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#setDefaultFieldSortScoring(boolean,boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#setDefaultFieldSortScoring(boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#setDefaultFieldSortScoring(boolean,boolean).mjava","sourceNew":"  /** By default, no scores are computed when sorting by\n   *  field (using {@link #search(Query,Filter,int,Sort)}).\n   *  You can change that, per IndexSearcher instance, by\n   *  calling this method.  Note that this will incur a CPU\n   *  cost.\n   * \n   *  @param doTrackScores If true, then scores are\n   *  returned for every matching document in {@link\n   *  TopFieldDocs}.\n   *\n   *  @param doMaxScore If true, then the max score for all\n   *  matching docs is computed. */\n  public void setDefaultFieldSortScoring(boolean doTrackScores, boolean doMaxScore) {\n    fieldSortDoTrackScores = doTrackScores;\n    fieldSortDoMaxScore = doMaxScore;\n  }\n\n","sourceOld":"  /** By default, no scores are computed when sorting by\n   *  field (using {@link #search(Query,Filter,int,Sort)}).\n   *  You can change that, per IndexSearcher instance, by\n   *  calling this method.  Note that this will incur a CPU\n   *  cost.\n   * \n   *  @param doTrackScores If true, then scores are\n   *  returned for every matching document in {@link\n   *  TopFieldDocs}.\n   *\n   *  @param doMaxScore If true, then the max score for all\n   *  matching docs is computed. */\n  public void setDefaultFieldSortScoring(boolean doTrackScores, boolean doMaxScore) {\n    fieldSortDoTrackScores = doTrackScores;\n    fieldSortDoMaxScore = doMaxScore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb02351ae2b114dd41585916d1e35fb2cff98fb0","date":1337171337,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#setDefaultFieldSortScoring(boolean,boolean).mjava","sourceNew":null,"sourceOld":"  /** By default, no scores are computed when sorting by\n   *  field (using {@link #search(Query,Filter,int,Sort)}).\n   *  You can change that, per IndexSearcher instance, by\n   *  calling this method.  Note that this will incur a CPU\n   *  cost.\n   * \n   *  @param doTrackScores If true, then scores are\n   *  returned for every matching document in {@link\n   *  TopFieldDocs}.\n   *\n   *  @param doMaxScore If true, then the max score for all\n   *  matching docs is computed. */\n  public void setDefaultFieldSortScoring(boolean doTrackScores, boolean doMaxScore) {\n    fieldSortDoTrackScores = doTrackScores;\n    fieldSortDoMaxScore = doMaxScore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#setDefaultFieldSortScoring(boolean,boolean).mjava","sourceNew":null,"sourceOld":"  /** By default, no scores are computed when sorting by\n   *  field (using {@link #search(Query,Filter,int,Sort)}).\n   *  You can change that, per IndexSearcher instance, by\n   *  calling this method.  Note that this will incur a CPU\n   *  cost.\n   * \n   *  @param doTrackScores If true, then scores are\n   *  returned for every matching document in {@link\n   *  TopFieldDocs}.\n   *\n   *  @param doMaxScore If true, then the max score for all\n   *  matching docs is computed. */\n  public void setDefaultFieldSortScoring(boolean doTrackScores, boolean doMaxScore) {\n    fieldSortDoTrackScores = doTrackScores;\n    fieldSortDoMaxScore = doMaxScore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb02351ae2b114dd41585916d1e35fb2cff98fb0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ef0d8a69209261514c5739c770bba706c2308450":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","fb02351ae2b114dd41585916d1e35fb2cff98fb0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb02351ae2b114dd41585916d1e35fb2cff98fb0"]},"commit2Childs":{"fb02351ae2b114dd41585916d1e35fb2cff98fb0":["ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fb02351ae2b114dd41585916d1e35fb2cff98fb0","ef0d8a69209261514c5739c770bba706c2308450"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"ef0d8a69209261514c5739c770bba706c2308450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}