{"path":"solr/core/src/test/org/apache/solr/core/TestShardHandlerFactory#testXML().mjava","commits":[{"id":"0937e467e3a2e44c636e2b022b816b21257acb26","date":1363268855,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestShardHandlerFactory#testXML().mjava","pathOld":"/dev/null","sourceNew":"  public void testXML() throws Exception {\n    CoreContainer cc = new CoreContainer(TEST_HOME());\n    cc.load(TEST_HOME(), new File(TEST_HOME(), \"solr-shardhandler.xml\"));\n    ShardHandlerFactory factory = cc.getShardHandlerFactory();\n    assertTrue(factory instanceof MockShardHandlerFactory);\n    NamedList args = ((MockShardHandlerFactory)factory).args;\n    assertEquals(\"myMagicRequiredValue\", args.get(\"myMagicRequiredParameter\"));\n    factory.close();\n    cc.shutdown();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d264f386d864b5751209060e8886ca9845f70469","date":1372172126,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestShardHandlerFactory#testXML().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestShardHandlerFactory#testXML().mjava","sourceNew":"  public void testXML() throws Exception {\n    CoreContainer cc = CoreContainer.createAndLoad(TEST_HOME(), new File(TEST_HOME(), \"solr-shardhandler.xml\"));\n    ShardHandlerFactory factory = cc.getShardHandlerFactory();\n    assertTrue(factory instanceof MockShardHandlerFactory);\n    NamedList args = ((MockShardHandlerFactory)factory).args;\n    assertEquals(\"myMagicRequiredValue\", args.get(\"myMagicRequiredParameter\"));\n    factory.close();\n    cc.shutdown();\n  }\n\n","sourceOld":"  public void testXML() throws Exception {\n    CoreContainer cc = new CoreContainer(TEST_HOME());\n    cc.load(TEST_HOME(), new File(TEST_HOME(), \"solr-shardhandler.xml\"));\n    ShardHandlerFactory factory = cc.getShardHandlerFactory();\n    assertTrue(factory instanceof MockShardHandlerFactory);\n    NamedList args = ((MockShardHandlerFactory)factory).args;\n    assertEquals(\"myMagicRequiredValue\", args.get(\"myMagicRequiredParameter\"));\n    factory.close();\n    cc.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"354983dcdf70c800bf2573d10b54a7391b1dc167","date":1372183171,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestShardHandlerFactory#testXML().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestShardHandlerFactory#testXML().mjava","sourceNew":"  public void testXML() throws Exception {\n    CoreContainer cc = new CoreContainer(TEST_HOME());\n    cc.load(TEST_HOME(), new File(TEST_HOME(), \"solr-shardhandler.xml\"));\n    ShardHandlerFactory factory = cc.getShardHandlerFactory();\n    assertTrue(factory instanceof MockShardHandlerFactory);\n    NamedList args = ((MockShardHandlerFactory)factory).args;\n    assertEquals(\"myMagicRequiredValue\", args.get(\"myMagicRequiredParameter\"));\n    factory.close();\n    cc.shutdown();\n  }\n\n","sourceOld":"  public void testXML() throws Exception {\n    CoreContainer cc = CoreContainer.createAndLoad(TEST_HOME(), new File(TEST_HOME(), \"solr-shardhandler.xml\"));\n    ShardHandlerFactory factory = cc.getShardHandlerFactory();\n    assertTrue(factory instanceof MockShardHandlerFactory);\n    NamedList args = ((MockShardHandlerFactory)factory).args;\n    assertEquals(\"myMagicRequiredValue\", args.get(\"myMagicRequiredParameter\"));\n    factory.close();\n    cc.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestShardHandlerFactory#testXML().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestShardHandlerFactory#testXML().mjava","sourceNew":"  public void testXML() throws Exception {\n    CoreContainer cc = CoreContainer.createAndLoad(TEST_HOME(), new File(TEST_HOME(), \"solr-shardhandler.xml\"));\n    ShardHandlerFactory factory = cc.getShardHandlerFactory();\n    assertTrue(factory instanceof MockShardHandlerFactory);\n    NamedList args = ((MockShardHandlerFactory)factory).args;\n    assertEquals(\"myMagicRequiredValue\", args.get(\"myMagicRequiredParameter\"));\n    factory.close();\n    cc.shutdown();\n  }\n\n","sourceOld":"  public void testXML() throws Exception {\n    CoreContainer cc = new CoreContainer(TEST_HOME());\n    cc.load(TEST_HOME(), new File(TEST_HOME(), \"solr-shardhandler.xml\"));\n    ShardHandlerFactory factory = cc.getShardHandlerFactory();\n    assertTrue(factory instanceof MockShardHandlerFactory);\n    NamedList args = ((MockShardHandlerFactory)factory).args;\n    assertEquals(\"myMagicRequiredValue\", args.get(\"myMagicRequiredParameter\"));\n    factory.close();\n    cc.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestShardHandlerFactory#testXML().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestShardHandlerFactory#testXML().mjava","sourceNew":"  public void testXML() throws Exception {\n    CoreContainer cc = CoreContainer.createAndLoad(TEST_HOME(), new File(TEST_HOME(), \"solr-shardhandler.xml\"));\n    ShardHandlerFactory factory = cc.getShardHandlerFactory();\n    assertTrue(factory instanceof MockShardHandlerFactory);\n    NamedList args = ((MockShardHandlerFactory)factory).args;\n    assertEquals(\"myMagicRequiredValue\", args.get(\"myMagicRequiredParameter\"));\n    factory.close();\n    cc.shutdown();\n  }\n\n","sourceOld":"  public void testXML() throws Exception {\n    CoreContainer cc = new CoreContainer(TEST_HOME());\n    cc.load(TEST_HOME(), new File(TEST_HOME(), \"solr-shardhandler.xml\"));\n    ShardHandlerFactory factory = cc.getShardHandlerFactory();\n    assertTrue(factory instanceof MockShardHandlerFactory);\n    NamedList args = ((MockShardHandlerFactory)factory).args;\n    assertEquals(\"myMagicRequiredValue\", args.get(\"myMagicRequiredParameter\"));\n    factory.close();\n    cc.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestShardHandlerFactory#testXML().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestShardHandlerFactory#testXML().mjava","sourceNew":"  public void testXML() throws Exception {\n    Path home = Paths.get(TEST_HOME());\n    CoreContainer cc = CoreContainer.createAndLoad(home, home.resolve(\"solr-shardhandler.xml\"));\n    ShardHandlerFactory factory = cc.getShardHandlerFactory();\n    assertTrue(factory instanceof MockShardHandlerFactory);\n    NamedList args = ((MockShardHandlerFactory)factory).args;\n    assertEquals(\"myMagicRequiredValue\", args.get(\"myMagicRequiredParameter\"));\n    factory.close();\n    cc.shutdown();\n  }\n\n","sourceOld":"  public void testXML() throws Exception {\n    CoreContainer cc = CoreContainer.createAndLoad(TEST_HOME(), new File(TEST_HOME(), \"solr-shardhandler.xml\"));\n    ShardHandlerFactory factory = cc.getShardHandlerFactory();\n    assertTrue(factory instanceof MockShardHandlerFactory);\n    NamedList args = ((MockShardHandlerFactory)factory).args;\n    assertEquals(\"myMagicRequiredValue\", args.get(\"myMagicRequiredParameter\"));\n    factory.close();\n    cc.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestShardHandlerFactory#testXML().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestShardHandlerFactory#testXML().mjava","sourceNew":"  public void testXML() throws Exception {\n    Path home = Paths.get(TEST_HOME());\n    CoreContainer cc = CoreContainer.createAndLoad(home, home.resolve(\"solr-shardhandler.xml\"));\n    ShardHandlerFactory factory = cc.getShardHandlerFactory();\n    assertTrue(factory instanceof MockShardHandlerFactory);\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList args = ((MockShardHandlerFactory)factory).args;\n    assertEquals(\"myMagicRequiredValue\", args.get(\"myMagicRequiredParameter\"));\n    factory.close();\n    cc.shutdown();\n  }\n\n","sourceOld":"  public void testXML() throws Exception {\n    Path home = Paths.get(TEST_HOME());\n    CoreContainer cc = CoreContainer.createAndLoad(home, home.resolve(\"solr-shardhandler.xml\"));\n    ShardHandlerFactory factory = cc.getShardHandlerFactory();\n    assertTrue(factory instanceof MockShardHandlerFactory);\n    NamedList args = ((MockShardHandlerFactory)factory).args;\n    assertEquals(\"myMagicRequiredValue\", args.get(\"myMagicRequiredParameter\"));\n    factory.close();\n    cc.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7116474e2e390259937401cf928323e0cbc75e60":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["7116474e2e390259937401cf928323e0cbc75e60"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["0937e467e3a2e44c636e2b022b816b21257acb26","7116474e2e390259937401cf928323e0cbc75e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"354983dcdf70c800bf2573d10b54a7391b1dc167":["d264f386d864b5751209060e8886ca9845f70469"],"d264f386d864b5751209060e8886ca9845f70469":["0937e467e3a2e44c636e2b022b816b21257acb26"],"0937e467e3a2e44c636e2b022b816b21257acb26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["a626ec4d1c92e59fe390724d6220081047b03ce7"]},"commit2Childs":{"7116474e2e390259937401cf928323e0cbc75e60":["a626ec4d1c92e59fe390724d6220081047b03ce7","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["e98520789adb1d5ad05afb4956eca0944a929688"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0937e467e3a2e44c636e2b022b816b21257acb26"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["7116474e2e390259937401cf928323e0cbc75e60"],"d264f386d864b5751209060e8886ca9845f70469":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"0937e467e3a2e44c636e2b022b816b21257acb26":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d264f386d864b5751209060e8886ca9845f70469"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}