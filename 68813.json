{"path":"lucene/core/src/java/org/apache/lucene/util/LongsRef#deepCopyOf(LongsRef).mjava","commits":[{"id":"55110eb60c5105294fc2ae7912d82b750865aa58","date":1341389822,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LongsRef#deepCopyOf(LongsRef).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new IntsRef that points to a copy of the longs from \n   * <code>other</code>\n   * <p>\n   * The returned IntsRef will have a length of other.length\n   * and an offset of zero.\n   */\n  public static LongsRef deepCopyOf(LongsRef other) {\n    LongsRef clone = new LongsRef();\n    clone.copyLongs(other);\n    return clone;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LongsRef#deepCopyOf(LongsRef).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new IntsRef that points to a copy of the longs from \n   * <code>other</code>\n   * <p>\n   * The returned IntsRef will have a length of other.length\n   * and an offset of zero.\n   */\n  public static LongsRef deepCopyOf(LongsRef other) {\n    LongsRef clone = new LongsRef();\n    clone.copyLongs(other);\n    return clone;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LongsRef#deepCopyOf(LongsRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/LongsRef#deepCopyOf(LongsRef).mjava","sourceNew":"  /**\n   * Creates a new LongsRef that points to a copy of the longs from \n   * <code>other</code>\n   * <p>\n   * The returned IntsRef will have a length of other.length\n   * and an offset of zero.\n   */\n  public static LongsRef deepCopyOf(LongsRef other) {\n    return new LongsRef(Arrays.copyOfRange(other.longs, other.offset, other.offset + other.length), 0, other.length);\n  }\n\n","sourceOld":"  /**\n   * Creates a new IntsRef that points to a copy of the longs from \n   * <code>other</code>\n   * <p>\n   * The returned IntsRef will have a length of other.length\n   * and an offset of zero.\n   */\n  public static LongsRef deepCopyOf(LongsRef other) {\n    LongsRef clone = new LongsRef();\n    clone.copyLongs(other);\n    return clone;\n  }\n\n","bugFix":["55110eb60c5105294fc2ae7912d82b750865aa58"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9798d0818e7a880546802b509792d3f3d57babd2","date":1528358901,"type":3,"author":"Nhat Nguyen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LongsRef#deepCopyOf(LongsRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/LongsRef#deepCopyOf(LongsRef).mjava","sourceNew":"  /**\n   * Creates a new LongsRef that points to a copy of the longs from \n   * <code>other</code>\n   * <p>\n   * The returned IntsRef will have a length of other.length\n   * and an offset of zero.\n   */\n  public static LongsRef deepCopyOf(LongsRef other) {\n    return new LongsRef(ArrayUtil.copyOfSubArray(other.longs, other.offset, other.offset + other.length), 0, other.length);\n  }\n\n","sourceOld":"  /**\n   * Creates a new LongsRef that points to a copy of the longs from \n   * <code>other</code>\n   * <p>\n   * The returned IntsRef will have a length of other.length\n   * and an offset of zero.\n   */\n  public static LongsRef deepCopyOf(LongsRef other) {\n    return new LongsRef(Arrays.copyOfRange(other.longs, other.offset, other.offset + other.length), 0, other.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LongsRef#deepCopyOf(LongsRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/LongsRef#deepCopyOf(LongsRef).mjava","sourceNew":"  /**\n   * Creates a new LongsRef that points to a copy of the longs from \n   * <code>other</code>\n   * <p>\n   * The returned IntsRef will have a length of other.length\n   * and an offset of zero.\n   */\n  public static LongsRef deepCopyOf(LongsRef other) {\n    return new LongsRef(ArrayUtil.copyOfSubArray(other.longs, other.offset, other.offset + other.length), 0, other.length);\n  }\n\n","sourceOld":"  /**\n   * Creates a new LongsRef that points to a copy of the longs from \n   * <code>other</code>\n   * <p>\n   * The returned IntsRef will have a length of other.length\n   * and an offset of zero.\n   */\n  public static LongsRef deepCopyOf(LongsRef other) {\n    return new LongsRef(Arrays.copyOfRange(other.longs, other.offset, other.offset + other.length), 0, other.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LongsRef#deepCopyOf(LongsRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/LongsRef#deepCopyOf(LongsRef).mjava","sourceNew":"  /**\n   * Creates a new LongsRef that points to a copy of the longs from \n   * <code>other</code>\n   * <p>\n   * The returned IntsRef will have a length of other.length\n   * and an offset of zero.\n   */\n  public static LongsRef deepCopyOf(LongsRef other) {\n    return new LongsRef(ArrayUtil.copyOfSubArray(other.longs, other.offset, other.offset + other.length), 0, other.length);\n  }\n\n","sourceOld":"  /**\n   * Creates a new LongsRef that points to a copy of the longs from \n   * <code>other</code>\n   * <p>\n   * The returned IntsRef will have a length of other.length\n   * and an offset of zero.\n   */\n  public static LongsRef deepCopyOf(LongsRef other) {\n    return new LongsRef(Arrays.copyOfRange(other.longs, other.offset, other.offset + other.length), 0, other.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55110eb60c5105294fc2ae7912d82b750865aa58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","55110eb60c5105294fc2ae7912d82b750865aa58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","9798d0818e7a880546802b509792d3f3d57babd2"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["55110eb60c5105294fc2ae7912d82b750865aa58"],"9798d0818e7a880546802b509792d3f3d57babd2":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9798d0818e7a880546802b509792d3f3d57babd2"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","9798d0818e7a880546802b509792d3f3d57babd2"]},"commit2Childs":{"55110eb60c5105294fc2ae7912d82b750865aa58":["fe33227f6805edab2036cbb80645cc4e2d1fa424","7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["55110eb60c5105294fc2ae7912d82b750865aa58","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["b70042a8a492f7054d480ccdd2be9796510d4327","9798d0818e7a880546802b509792d3f3d57babd2","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"9798d0818e7a880546802b509792d3f3d57babd2":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}