{"path":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T],Comparator[FSTPath[T]]).mjava","commits":[{"id":"8c33f6677a2078739058f81eca1df69d12cd62b0","date":1432799589,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T],Comparator[FSTPath[T]]).mjava","pathOld":"/dev/null","sourceNew":"    public TopNSearcher(FST<T> fst, int topN, int maxQueueDepth, Comparator<T> comparator,\n                        Comparator<FSTPath<T>> pathComparator) {\n      this.fst = fst;\n      this.bytesReader = fst.getBytesReader();\n      this.topN = topN;\n      this.maxQueueDepth = maxQueueDepth;\n      this.comparator = comparator;\n\n      queue = new TreeSet<>(pathComparator);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["13975b8f26b2a9600a5333689974923927b7b8ab"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"13975b8f26b2a9600a5333689974923927b7b8ab","date":1432835215,"type":3,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T],Comparator[FSTPath[T]]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T],Comparator[FSTPath[T]]).mjava","sourceNew":"    public TopNSearcher(FST<T> fst, int topN, int maxQueueDepth, Comparator<T> comparator,\n                        Comparator<FSTPath<T>> pathComparator) {\n      this.fst = fst;\n      this.bytesReader = fst.getBytesReader();\n      this.topN = topN;\n      this.maxQueueDepth = maxQueueDepth;\n      this.comparator = comparator;\n      this.pathComparator = pathComparator;\n      queue = new TreeSet<>(pathComparator);\n    }\n\n","sourceOld":"    public TopNSearcher(FST<T> fst, int topN, int maxQueueDepth, Comparator<T> comparator,\n                        Comparator<FSTPath<T>> pathComparator) {\n      this.fst = fst;\n      this.bytesReader = fst.getBytesReader();\n      this.topN = topN;\n      this.maxQueueDepth = maxQueueDepth;\n      this.comparator = comparator;\n\n      queue = new TreeSet<>(pathComparator);\n    }\n\n","bugFix":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"13975b8f26b2a9600a5333689974923927b7b8ab":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["13975b8f26b2a9600a5333689974923927b7b8ab"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"13975b8f26b2a9600a5333689974923927b7b8ab":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["13975b8f26b2a9600a5333689974923927b7b8ab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}