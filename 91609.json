{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionValueSource#getValues(LeafReaderContext,DoubleValues).mjava","commits":[{"id":"7ae1ad302fc92a61505409a38838f2b1a4a2b092","date":1483787106,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionValueSource#getValues(LeafReaderContext,DoubleValues).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionValueSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public DoubleValues getValues(LeafReaderContext readerContext, DoubleValues scores) throws IOException {\n    Map<String, DoubleValues> valuesCache = new HashMap<>();\n    DoubleValues[] externalValues = new DoubleValues[expression.variables.length];\n\n    for (int i = 0; i < variables.length; ++i) {\n      String externalName = expression.variables[i];\n      DoubleValues values = valuesCache.get(externalName);\n      if (values == null) {\n        values = variables[i].getValues(readerContext, scores);\n        if (values == null) {\n          throw new RuntimeException(\"Internal error. External (\" + externalName + \") does not exist.\");\n        }\n        valuesCache.put(externalName, values);\n      }\n      externalValues[i] = zeroWhenUnpositioned(values);\n    }\n\n    return new ExpressionFunctionValues(expression, externalValues);\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    Map<String, FunctionValues> valuesCache = (Map<String, FunctionValues>)context.get(\"valuesCache\");\n    if (valuesCache == null) {\n      valuesCache = new HashMap<>();\n      context = new HashMap(context);\n      context.put(\"valuesCache\", valuesCache);\n    }\n    FunctionValues[] externalValues = new FunctionValues[expression.variables.length];\n\n    for (int i = 0; i < variables.length; ++i) {\n      String externalName = expression.variables[i];\n      FunctionValues values = valuesCache.get(externalName);\n      if (values == null) {\n        values = variables[i].getValues(context, readerContext);\n        if (values == null) {\n          throw new RuntimeException(\"Internal error. External (\" + externalName + \") does not exist.\");\n        }\n        valuesCache.put(externalName, values);\n      }\n      externalValues[i] = values;\n    }\n\n    return new ExpressionFunctionValues(this, expression, externalValues);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionValueSource#getValues(LeafReaderContext,DoubleValues).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionValueSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public DoubleValues getValues(LeafReaderContext readerContext, DoubleValues scores) throws IOException {\n    Map<String, DoubleValues> valuesCache = new HashMap<>();\n    DoubleValues[] externalValues = new DoubleValues[expression.variables.length];\n\n    for (int i = 0; i < variables.length; ++i) {\n      String externalName = expression.variables[i];\n      DoubleValues values = valuesCache.get(externalName);\n      if (values == null) {\n        values = variables[i].getValues(readerContext, scores);\n        if (values == null) {\n          throw new RuntimeException(\"Internal error. External (\" + externalName + \") does not exist.\");\n        }\n        valuesCache.put(externalName, values);\n      }\n      externalValues[i] = zeroWhenUnpositioned(values);\n    }\n\n    return new ExpressionFunctionValues(expression, externalValues);\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    Map<String, FunctionValues> valuesCache = (Map<String, FunctionValues>)context.get(\"valuesCache\");\n    if (valuesCache == null) {\n      valuesCache = new HashMap<>();\n      context = new HashMap(context);\n      context.put(\"valuesCache\", valuesCache);\n    }\n    FunctionValues[] externalValues = new FunctionValues[expression.variables.length];\n\n    for (int i = 0; i < variables.length; ++i) {\n      String externalName = expression.variables[i];\n      FunctionValues values = valuesCache.get(externalName);\n      if (values == null) {\n        values = variables[i].getValues(context, readerContext);\n        if (values == null) {\n          throw new RuntimeException(\"Internal error. External (\" + externalName + \") does not exist.\");\n        }\n        valuesCache.put(externalName, values);\n      }\n      externalValues[i] = values;\n    }\n\n    return new ExpressionFunctionValues(this, expression, externalValues);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9b0e53e02301eb86bb475aee9c79e69fe0ac593","date":1594322334,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionValueSource#getValues(LeafReaderContext,DoubleValues).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionValueSource#getValues(LeafReaderContext,DoubleValues).mjava","sourceNew":"  @Override\n  public DoubleValues getValues(LeafReaderContext readerContext, DoubleValues scores) throws IOException {\n    Map<String, DoubleValues> valuesCache = new HashMap<>();\n    DoubleValues[] externalValues = new DoubleValues[expression.variables.length];\n\n    for (int i = 0; i < variables.length; ++i) {\n      String externalName = expression.variables[i];\n      DoubleValues values = valuesCache.get(externalName);\n      if (values == null) {\n        values = variables[i].getValues(readerContext, scores);\n        if (values == null) {\n          throw new RuntimeException(\"Unrecognized variable (\" + externalName + \") referenced in expression (\" +\n              expression.sourceText + \").\");\n        }\n        valuesCache.put(externalName, values);\n      }\n      externalValues[i] = zeroWhenUnpositioned(values);\n    }\n\n    return new ExpressionFunctionValues(expression, externalValues);\n  }\n\n","sourceOld":"  @Override\n  public DoubleValues getValues(LeafReaderContext readerContext, DoubleValues scores) throws IOException {\n    Map<String, DoubleValues> valuesCache = new HashMap<>();\n    DoubleValues[] externalValues = new DoubleValues[expression.variables.length];\n\n    for (int i = 0; i < variables.length; ++i) {\n      String externalName = expression.variables[i];\n      DoubleValues values = valuesCache.get(externalName);\n      if (values == null) {\n        values = variables[i].getValues(readerContext, scores);\n        if (values == null) {\n          throw new RuntimeException(\"Internal error. External (\" + externalName + \") does not exist.\");\n        }\n        valuesCache.put(externalName, values);\n      }\n      externalValues[i] = zeroWhenUnpositioned(values);\n    }\n\n    return new ExpressionFunctionValues(expression, externalValues);\n  }\n\n","bugFix":["7ae1ad302fc92a61505409a38838f2b1a4a2b092"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b9b0e53e02301eb86bb475aee9c79e69fe0ac593":["7ae1ad302fc92a61505409a38838f2b1a4a2b092"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7ae1ad302fc92a61505409a38838f2b1a4a2b092":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7ae1ad302fc92a61505409a38838f2b1a4a2b092"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b9b0e53e02301eb86bb475aee9c79e69fe0ac593"]},"commit2Childs":{"b9b0e53e02301eb86bb475aee9c79e69fe0ac593":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7ae1ad302fc92a61505409a38838f2b1a4a2b092","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"7ae1ad302fc92a61505409a38838f2b1a4a2b092":["b9b0e53e02301eb86bb475aee9c79e69fe0ac593","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}