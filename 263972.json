{"path":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","sourceNew":"  /** Sets the boost factor hits on this field.  This value will be\n   * multiplied into the score of all hits on this this field of this\n   * document.\n   *\n   * <p>The boost is used to compute the norm factor for the field.  By\n   * default, in the {@link org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)} method, \n   * the boost value is multiplied by the length normalization factor and then\n   * rounded by {@link org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)} before it is stored in the\n   * index.  One should attempt to ensure that this product does not overflow\n   * the range of that encoding.\n   *\n   * @see org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)\n   * @see org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)\n   */\n  public void setBoost(float boost) {\n    this.boost = boost;\n  }\n\n","sourceOld":"  /** Sets the boost factor hits on this field.  This value will be\n   * multiplied into the score of all hits on this this field of this\n   * document.\n   *\n   * <p>The boost is used to compute the norm factor for the field.  By\n   * default, in the {@link org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)} method, \n   * the boost value is multiplied by the length normalization factor and then\n   * rounded by {@link org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)} before it is stored in the\n   * index.  One should attempt to ensure that this product does not overflow\n   * the range of that encoding.\n   *\n   * @see org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)\n   * @see org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)\n   */\n  public void setBoost(float boost) {\n    this.boost = boost;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a3635dad24b0681f0088f2ef680456482cdb451","date":1344025573,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","sourceNew":"  /** Sets the boost factor hits on this field.  This value will be\n   * multiplied into the score of all hits on this this field of this\n   * document.\n   *\n   * <p>The boost is used to compute the norm factor for the field.  By\n   * default, in the {@link org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)} method, \n   * the boost value is multiplied by the length normalization factor and then\n   * rounded by {@link org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)} before it is stored in the\n   * index.  One should attempt to ensure that this product does not overflow\n   * the range of that encoding.\n   *\n   * @see org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)\n   * @see org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)\n   */\n  public void setBoost(float boost) {\n    if (boost != 1.0f) {\n      if (type.indexed() == false || type.omitNorms()) {\n        throw new IllegalArgumentException(\"You cannot set an index-time boost on an unindexed field, or one that omits norms\");\n      }\n    }\n    this.boost = boost;\n  }\n\n","sourceOld":"  /** Sets the boost factor hits on this field.  This value will be\n   * multiplied into the score of all hits on this this field of this\n   * document.\n   *\n   * <p>The boost is used to compute the norm factor for the field.  By\n   * default, in the {@link org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)} method, \n   * the boost value is multiplied by the length normalization factor and then\n   * rounded by {@link org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)} before it is stored in the\n   * index.  One should attempt to ensure that this product does not overflow\n   * the range of that encoding.\n   *\n   * @see org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)\n   * @see org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)\n   */\n  public void setBoost(float boost) {\n    this.boost = boost;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","sourceNew":"  /** Sets the boost factor hits on this field.  This value will be\n   * multiplied into the score of all hits on this this field of this\n   * document.\n   *\n   * <p>The boost is used to compute the norm factor for the field.  By\n   * default, in the {@link org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)} method, \n   * the boost value is multiplied by the length normalization factor and then\n   * rounded by {@link org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)} before it is stored in the\n   * index.  One should attempt to ensure that this product does not overflow\n   * the range of that encoding.\n   *\n   * @see org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)\n   * @see org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)\n   */\n  public void setBoost(float boost) {\n    if (boost != 1.0f) {\n      if (type.indexed() == false || type.omitNorms()) {\n        throw new IllegalArgumentException(\"You cannot set an index-time boost on an unindexed field, or one that omits norms\");\n      }\n    }\n    this.boost = boost;\n  }\n\n","sourceOld":"  /** Sets the boost factor hits on this field.  This value will be\n   * multiplied into the score of all hits on this this field of this\n   * document.\n   *\n   * <p>The boost is used to compute the norm factor for the field.  By\n   * default, in the {@link org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)} method, \n   * the boost value is multiplied by the length normalization factor and then\n   * rounded by {@link org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)} before it is stored in the\n   * index.  One should attempt to ensure that this product does not overflow\n   * the range of that encoding.\n   *\n   * @see org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)\n   * @see org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)\n   */\n  public void setBoost(float boost) {\n    this.boost = boost;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","sourceNew":"  /** Sets the boost factor hits on this field.  This value will be\n   * multiplied into the score of all hits on this this field of this\n   * document.\n   *\n   * <p>The boost is used to compute the norm factor for the field.  By\n   * default, in the {@link org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)} method, \n   * the boost value is multiplied by the length normalization factor and then\n   * rounded by {@link org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)} before it is stored in the\n   * index.  One should attempt to ensure that this product does not overflow\n   * the range of that encoding.\n   *\n   * @see org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)\n   * @see org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)\n   */\n  public void setBoost(float boost) {\n    if (boost != 1.0f) {\n      if (type.indexed() == false || type.omitNorms()) {\n        throw new IllegalArgumentException(\"You cannot set an index-time boost on an unindexed field, or one that omits norms\");\n      }\n    }\n    this.boost = boost;\n  }\n\n","sourceOld":"  /** Sets the boost factor hits on this field.  This value will be\n   * multiplied into the score of all hits on this this field of this\n   * document.\n   *\n   * <p>The boost is used to compute the norm factor for the field.  By\n   * default, in the {@link org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)} method, \n   * the boost value is multiplied by the length normalization factor and then\n   * rounded by {@link org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)} before it is stored in the\n   * index.  One should attempt to ensure that this product does not overflow\n   * the range of that encoding.\n   *\n   * @see org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)\n   * @see org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)\n   */\n  public void setBoost(float boost) {\n    this.boost = boost;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c19721aa3bad7ccd93aa898c543e98a67fff7958","date":1346108798,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","sourceNew":"  /** \n   * Sets the boost factor on this field. \n   * @see #boost()\n   */\n  public void setBoost(float boost) {\n    if (boost != 1.0f) {\n      if (type.indexed() == false || type.omitNorms()) {\n        throw new IllegalArgumentException(\"You cannot set an index-time boost on an unindexed field, or one that omits norms\");\n      }\n    }\n    this.boost = boost;\n  }\n\n","sourceOld":"  /** Sets the boost factor hits on this field.  This value will be\n   * multiplied into the score of all hits on this this field of this\n   * document.\n   *\n   * <p>The boost is used to compute the norm factor for the field.  By\n   * default, in the {@link org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)} method, \n   * the boost value is multiplied by the length normalization factor and then\n   * rounded by {@link org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)} before it is stored in the\n   * index.  One should attempt to ensure that this product does not overflow\n   * the range of that encoding.\n   *\n   * @see org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)\n   * @see org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)\n   */\n  public void setBoost(float boost) {\n    if (boost != 1.0f) {\n      if (type.indexed() == false || type.omitNorms()) {\n        throw new IllegalArgumentException(\"You cannot set an index-time boost on an unindexed field, or one that omits norms\");\n      }\n    }\n    this.boost = boost;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d","date":1346337224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","sourceNew":"  /** \n   * Sets the boost factor on this field.\n   * @throws IllegalArgumentException if this field is not indexed, \n   *         or if it omits norms. \n   * @see #boost()\n   */\n  public void setBoost(float boost) {\n    if (boost != 1.0f) {\n      if (type.indexed() == false || type.omitNorms()) {\n        throw new IllegalArgumentException(\"You cannot set an index-time boost on an unindexed field, or one that omits norms\");\n      }\n    }\n    this.boost = boost;\n  }\n\n","sourceOld":"  /** \n   * Sets the boost factor on this field. \n   * @see #boost()\n   */\n  public void setBoost(float boost) {\n    if (boost != 1.0f) {\n      if (type.indexed() == false || type.omitNorms()) {\n        throw new IllegalArgumentException(\"You cannot set an index-time boost on an unindexed field, or one that omits norms\");\n      }\n    }\n    this.boost = boost;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","sourceNew":"  /** \n   * Sets the boost factor on this field.\n   * @throws IllegalArgumentException if this field is not indexed, \n   *         or if it omits norms. \n   * @see #boost()\n   */\n  public void setBoost(float boost) {\n    if (boost != 1.0f) {\n      if (type.indexed() == false || type.omitNorms()) {\n        throw new IllegalArgumentException(\"You cannot set an index-time boost on an unindexed field, or one that omits norms\");\n      }\n    }\n    this.boost = boost;\n  }\n\n","sourceOld":"  /** Sets the boost factor hits on this field.  This value will be\n   * multiplied into the score of all hits on this this field of this\n   * document.\n   *\n   * <p>The boost is used to compute the norm factor for the field.  By\n   * default, in the {@link org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)} method, \n   * the boost value is multiplied by the length normalization factor and then\n   * rounded by {@link org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)} before it is stored in the\n   * index.  One should attempt to ensure that this product does not overflow\n   * the range of that encoding.\n   *\n   * @see org.apache.lucene.search.similarities.Similarity#computeNorm(FieldInvertState, Norm)\n   * @see org.apache.lucene.search.similarities.DefaultSimilarity#encodeNormValue(float)\n   */\n  public void setBoost(float boost) {\n    if (boost != 1.0f) {\n      if (type.indexed() == false || type.omitNorms()) {\n        throw new IllegalArgumentException(\"You cannot set an index-time boost on an unindexed field, or one that omits norms\");\n      }\n    }\n    this.boost = boost;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3184874f7f3aca850248483485b4995343066875","date":1413876758,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","sourceNew":"  /** \n   * Sets the boost factor on this field.\n   * @throws IllegalArgumentException if this field is not indexed, \n   *         or if it omits norms. \n   * @see #boost()\n   */\n  public void setBoost(float boost) {\n    if (boost != 1.0f) {\n      if (type.indexOptions() == null || type.omitNorms()) {\n        throw new IllegalArgumentException(\"You cannot set an index-time boost on an unindexed field, or one that omits norms\");\n      }\n    }\n    this.boost = boost;\n  }\n\n","sourceOld":"  /** \n   * Sets the boost factor on this field.\n   * @throws IllegalArgumentException if this field is not indexed, \n   *         or if it omits norms. \n   * @see #boost()\n   */\n  public void setBoost(float boost) {\n    if (boost != 1.0f) {\n      if (type.indexed() == false || type.omitNorms()) {\n        throw new IllegalArgumentException(\"You cannot set an index-time boost on an unindexed field, or one that omits norms\");\n      }\n    }\n    this.boost = boost;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","sourceNew":"  /** \n   * Sets the boost factor on this field.\n   * @throws IllegalArgumentException if this field is not indexed, \n   *         or if it omits norms. \n   * @see #boost()\n   */\n  public void setBoost(float boost) {\n    if (boost != 1.0f) {\n      if (type.indexOptions() == null || type.omitNorms()) {\n        throw new IllegalArgumentException(\"You cannot set an index-time boost on an unindexed field, or one that omits norms\");\n      }\n    }\n    this.boost = boost;\n  }\n\n","sourceOld":"  /** \n   * Sets the boost factor on this field.\n   * @throws IllegalArgumentException if this field is not indexed, \n   *         or if it omits norms. \n   * @see #boost()\n   */\n  public void setBoost(float boost) {\n    if (boost != 1.0f) {\n      if (type.indexed() == false || type.omitNorms()) {\n        throw new IllegalArgumentException(\"You cannot set an index-time boost on an unindexed field, or one that omits norms\");\n      }\n    }\n    this.boost = boost;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2bb2842e561df4e8e9ad89010605fc86ac265465","date":1414768208,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","sourceNew":"  /** \n   * Sets the boost factor on this field.\n   * @throws IllegalArgumentException if this field is not indexed, \n   *         or if it omits norms. \n   * @see #boost()\n   */\n  public void setBoost(float boost) {\n    if (boost != 1.0f) {\n      if (type.indexOptions() == IndexOptions.NO || type.omitNorms()) {\n        throw new IllegalArgumentException(\"You cannot set an index-time boost on an unindexed field, or one that omits norms\");\n      }\n    }\n    this.boost = boost;\n  }\n\n","sourceOld":"  /** \n   * Sets the boost factor on this field.\n   * @throws IllegalArgumentException if this field is not indexed, \n   *         or if it omits norms. \n   * @see #boost()\n   */\n  public void setBoost(float boost) {\n    if (boost != 1.0f) {\n      if (type.indexOptions() == null || type.omitNorms()) {\n        throw new IllegalArgumentException(\"You cannot set an index-time boost on an unindexed field, or one that omits norms\");\n      }\n    }\n    this.boost = boost;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f95ce1375367b92d411a06175eab3915fe93c6bc","date":1414788502,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","sourceNew":"  /** \n   * Sets the boost factor on this field.\n   * @throws IllegalArgumentException if this field is not indexed, \n   *         or if it omits norms. \n   * @see #boost()\n   */\n  public void setBoost(float boost) {\n    if (boost != 1.0f) {\n      if (type.indexOptions() == IndexOptions.NONE || type.omitNorms()) {\n        throw new IllegalArgumentException(\"You cannot set an index-time boost on an unindexed field, or one that omits norms\");\n      }\n    }\n    this.boost = boost;\n  }\n\n","sourceOld":"  /** \n   * Sets the boost factor on this field.\n   * @throws IllegalArgumentException if this field is not indexed, \n   *         or if it omits norms. \n   * @see #boost()\n   */\n  public void setBoost(float boost) {\n    if (boost != 1.0f) {\n      if (type.indexOptions() == IndexOptions.NO || type.omitNorms()) {\n        throw new IllegalArgumentException(\"You cannot set an index-time boost on an unindexed field, or one that omits norms\");\n      }\n    }\n    this.boost = boost;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBoost(float).mjava","sourceNew":null,"sourceOld":"  /** \n   * Sets the boost factor on this field.\n   * @throws IllegalArgumentException if this field is not indexed, \n   *         or if it omits norms. \n   * @see #boost()\n   */\n  public void setBoost(float boost) {\n    if (boost != 1.0f) {\n      if (type.indexOptions() == IndexOptions.NONE || type.omitNorms()) {\n        throw new IllegalArgumentException(\"You cannot set an index-time boost on an unindexed field, or one that omits norms\");\n      }\n    }\n    this.boost = boost;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2bb2842e561df4e8e9ad89010605fc86ac265465":["3184874f7f3aca850248483485b4995343066875"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","3a3635dad24b0681f0088f2ef680456482cdb451"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["d6f074e73200c07d54f242d3880a8da5a35ff97b","6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d"],"3a3635dad24b0681f0088f2ef680456482cdb451":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f95ce1375367b92d411a06175eab3915fe93c6bc":["2bb2842e561df4e8e9ad89010605fc86ac265465"],"3184874f7f3aca850248483485b4995343066875":["6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d"],"c19721aa3bad7ccd93aa898c543e98a67fff7958":["3a3635dad24b0681f0088f2ef680456482cdb451"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d","3184874f7f3aca850248483485b4995343066875"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","3a3635dad24b0681f0088f2ef680456482cdb451"],"acd9883560fd89e6448b2b447302fe543040cd4f":["f95ce1375367b92d411a06175eab3915fe93c6bc"],"6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d":["c19721aa3bad7ccd93aa898c543e98a67fff7958"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8fd5be977c105554c6a7b68afcdbc511439723ab","3a3635dad24b0681f0088f2ef680456482cdb451","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"2bb2842e561df4e8e9ad89010605fc86ac265465":["f95ce1375367b92d411a06175eab3915fe93c6bc"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"3a3635dad24b0681f0088f2ef680456482cdb451":["8fd5be977c105554c6a7b68afcdbc511439723ab","c19721aa3bad7ccd93aa898c543e98a67fff7958","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"3184874f7f3aca850248483485b4995343066875":["2bb2842e561df4e8e9ad89010605fc86ac265465","0a22eafe3f72a4c2945eaad9547e6c78816978f4"],"f95ce1375367b92d411a06175eab3915fe93c6bc":["acd9883560fd89e6448b2b447302fe543040cd4f"],"c19721aa3bad7ccd93aa898c543e98a67fff7958":["6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["05a14b2611ead08655a2b2bdc61632eb31316e57"],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d":["05a14b2611ead08655a2b2bdc61632eb31316e57","3184874f7f3aca850248483485b4995343066875","0a22eafe3f72a4c2945eaad9547e6c78816978f4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8fd5be977c105554c6a7b68afcdbc511439723ab","05a14b2611ead08655a2b2bdc61632eb31316e57","0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}