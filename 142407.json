{"path":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/DefaultSkipListWriter#resetSkip().mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/DefaultSkipListWriter#resetSkip().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/DefaultSkipListWriter#resetSkip().mjava","sourceNew":"  @Override\n  public void resetSkip() {\n    super.resetSkip();\n    Arrays.fill(lastSkipDoc, 0);\n    Arrays.fill(lastSkipPayloadLength, -1);  // we don't have to write the first length in the skip list\n    Arrays.fill(lastSkipFreqPointer, freqOutput.getFilePointer());\n    if (proxOutput != null)\n      Arrays.fill(lastSkipProxPointer, proxOutput.getFilePointer());\n  }\n\n","sourceOld":"  @Override\n  public void resetSkip() {\n    super.resetSkip();\n    Arrays.fill(lastSkipDoc, 0);\n    Arrays.fill(lastSkipPayloadLength, -1);  // we don't have to write the first length in the skip list\n    Arrays.fill(lastSkipFreqPointer, freqOutput.getFilePointer());\n    if (proxOutput != null)\n      Arrays.fill(lastSkipProxPointer, proxOutput.getFilePointer());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfd7f00f3dbc4c50d336540f063493fc0f7d830f","date":1322850565,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40SkipListWriter#resetSkip().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/DefaultSkipListWriter#resetSkip().mjava","sourceNew":"  @Override\n  public void resetSkip() {\n    super.resetSkip();\n    Arrays.fill(lastSkipDoc, 0);\n    Arrays.fill(lastSkipPayloadLength, -1);  // we don't have to write the first length in the skip list\n    Arrays.fill(lastSkipFreqPointer, freqOutput.getFilePointer());\n    if (proxOutput != null)\n      Arrays.fill(lastSkipProxPointer, proxOutput.getFilePointer());\n  }\n\n","sourceOld":"  @Override\n  public void resetSkip() {\n    super.resetSkip();\n    Arrays.fill(lastSkipDoc, 0);\n    Arrays.fill(lastSkipPayloadLength, -1);  // we don't have to write the first length in the skip list\n    Arrays.fill(lastSkipFreqPointer, freqOutput.getFilePointer());\n    if (proxOutput != null)\n      Arrays.fill(lastSkipProxPointer, proxOutput.getFilePointer());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["7b91922b55d15444d554721b352861d028eb8278"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"],"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}