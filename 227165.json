{"path":"solr/core/src/test/org/apache/solr/servlet/SolrRequestParserTest#testStreamFile().mjava","commits":[{"id":"d191285b804da9b550f60a7e04a3c5102e313dd2","date":1441171701,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/servlet/SolrRequestParserTest#testStreamFile().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testStreamFile() throws Exception\n  {\n    File file = getFile(\"README\");\n    \n    byte[] bytes = FileUtils.readFileToByteArray(file);\n\n    SolrCore core = h.getCore();\n    \n    Map<String,String[]> args = new HashMap<>();\n    args.put( CommonParams.STREAM_FILE, new String[] { file.getAbsolutePath() } );\n    \n    // Make sure it got a single stream in and out ok\n    List<ContentStream> streams = new ArrayList<>();\n    try (SolrQueryRequest req = parser.buildRequestFrom( core, new MultiMapSolrParams( args ), streams )) {\n      assertEquals( 1, streams.size() );\n      try (InputStream in = streams.get(0).getStream()) {\n        assertArrayEquals( bytes, IOUtils.toByteArray( in ) );\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/servlet/SolrRequestParserTest#testStreamFile().mjava","pathOld":"solr/core/src/test/org/apache/solr/servlet/SolrRequestParserTest#testStreamFile().mjava","sourceNew":"  @Test\n  @SuppressWarnings({\"try\"})\n  public void testStreamFile() throws Exception\n  {\n    File file = getFile(\"README\");\n    \n    byte[] bytes = FileUtils.readFileToByteArray(file);\n\n    SolrCore core = h.getCore();\n    \n    Map<String,String[]> args = new HashMap<>();\n    args.put( CommonParams.STREAM_FILE, new String[] { file.getAbsolutePath() } );\n    \n    // Make sure it got a single stream in and out ok\n    List<ContentStream> streams = new ArrayList<>();\n    try (SolrQueryRequest req = parser.buildRequestFrom( core, new MultiMapSolrParams( args ), streams )) {\n      assertEquals( 1, streams.size() );\n      try (InputStream in = streams.get(0).getStream()) {\n        assertArrayEquals( bytes, IOUtils.toByteArray( in ) );\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testStreamFile() throws Exception\n  {\n    File file = getFile(\"README\");\n    \n    byte[] bytes = FileUtils.readFileToByteArray(file);\n\n    SolrCore core = h.getCore();\n    \n    Map<String,String[]> args = new HashMap<>();\n    args.put( CommonParams.STREAM_FILE, new String[] { file.getAbsolutePath() } );\n    \n    // Make sure it got a single stream in and out ok\n    List<ContentStream> streams = new ArrayList<>();\n    try (SolrQueryRequest req = parser.buildRequestFrom( core, new MultiMapSolrParams( args ), streams )) {\n      assertEquals( 1, streams.size() );\n      try (InputStream in = streams.get(0).getStream()) {\n        assertArrayEquals( bytes, IOUtils.toByteArray( in ) );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d191285b804da9b550f60a7e04a3c5102e313dd2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["d191285b804da9b550f60a7e04a3c5102e313dd2"]},"commit2Childs":{"d191285b804da9b550f60a7e04a3c5102e313dd2":["e98520789adb1d5ad05afb4956eca0944a929688"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d191285b804da9b550f60a7e04a3c5102e313dd2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}