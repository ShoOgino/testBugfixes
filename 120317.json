{"path":"lucene/src/test/org/apache/lucene/store/MockRAMDirectory#getRecomputedActualSizeInBytes().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/MockRAMDirectory#getRecomputedActualSizeInBytes().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMDirectory#getRecomputedActualSizeInBytes().mjava","sourceNew":"  /** Like getRecomputedSizeInBytes(), but, uses actual file\n   * lengths rather than buffer allocations (which are\n   * quantized up to nearest\n   * RAMOutputStream.BUFFER_SIZE (now 1024) bytes.\n   */\n\n  public final synchronized long getRecomputedActualSizeInBytes() {\n    long size = 0;\n    for (final RAMFile file : fileMap.values())\n      size += file.length;\n    return size;\n  }\n\n","sourceOld":"  /** Like getRecomputedSizeInBytes(), but, uses actual file\n   * lengths rather than buffer allocations (which are\n   * quantized up to nearest\n   * RAMOutputStream.BUFFER_SIZE (now 1024) bytes.\n   */\n\n  public final synchronized long getRecomputedActualSizeInBytes() {\n    long size = 0;\n    for (final RAMFile file : fileMap.values())\n      size += file.length;\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/MockDirectoryWrapper#getRecomputedActualSizeInBytes().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/MockRAMDirectory#getRecomputedActualSizeInBytes().mjava","sourceNew":"  /** Like getRecomputedSizeInBytes(), but, uses actual file\n   * lengths rather than buffer allocations (which are\n   * quantized up to nearest\n   * RAMOutputStream.BUFFER_SIZE (now 1024) bytes.\n   */\n\n  public final synchronized long getRecomputedActualSizeInBytes() throws IOException {\n    if (!(delegate instanceof RAMDirectory))\n      return sizeInBytes();\n    long size = 0;\n    for (final RAMFile file : ((RAMDirectory)delegate).fileMap.values())\n      size += file.length;\n    return size;\n  }\n\n","sourceOld":"  /** Like getRecomputedSizeInBytes(), but, uses actual file\n   * lengths rather than buffer allocations (which are\n   * quantized up to nearest\n   * RAMOutputStream.BUFFER_SIZE (now 1024) bytes.\n   */\n\n  public final synchronized long getRecomputedActualSizeInBytes() {\n    long size = 0;\n    for (final RAMFile file : fileMap.values())\n      size += file.length;\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/store/MockRAMDirectory#getRecomputedActualSizeInBytes().mjava","sourceNew":null,"sourceOld":"  /** Like getRecomputedSizeInBytes(), but, uses actual file\n   * lengths rather than buffer allocations (which are\n   * quantized up to nearest\n   * RAMOutputStream.BUFFER_SIZE (now 1024) bytes.\n   */\n\n  public final synchronized long getRecomputedActualSizeInBytes() {\n    long size = 0;\n    for (final RAMFile file : fileMap.values())\n      size += file.length;\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a05409176bd65129d67a785ee70e881e238a9aef":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","a05409176bd65129d67a785ee70e881e238a9aef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a05409176bd65129d67a785ee70e881e238a9aef"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a05409176bd65129d67a785ee70e881e238a9aef":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a05409176bd65129d67a785ee70e881e238a9aef","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}