{"path":"solr/src/common/org/apache/solr/common/SolrException#doIgnore(String).mjava","commits":[{"id":"be38a703c871957da90985efa821b44e1c05ad2c","date":1269362485,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/common/org/apache/solr/common/SolrException#doIgnore(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns null if this exception does not match any ignore patterns, or a message string to use if it does. */\n  public static String doIgnore(String m) {\n    if (ignorePatterns == null || m == null) return null;\n\n    for (String regex : ignorePatterns) {\n      Pattern pattern = Pattern.compile(regex);\n      Matcher matcher = pattern.matcher(m);\n      if (matcher.find()) return \"Ignoring exception matching \" + regex;\n    }\n\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrException#doIgnore(String).mjava","pathOld":"solr/src/common/org/apache/solr/common/SolrException#doIgnore(String).mjava","sourceNew":"  /** Returns null if this exception does not match any ignore patterns, or a message string to use if it does. */\n  public static String doIgnore(String m) {\n    if (ignorePatterns == null || m == null) return null;\n\n    for (String regex : ignorePatterns) {\n      Pattern pattern = Pattern.compile(regex);\n      Matcher matcher = pattern.matcher(m);\n      if (matcher.find()) return \"Ignoring exception matching \" + regex;\n    }\n\n    return null;\n  }\n\n","sourceOld":"  /** Returns null if this exception does not match any ignore patterns, or a message string to use if it does. */\n  public static String doIgnore(String m) {\n    if (ignorePatterns == null || m == null) return null;\n\n    for (String regex : ignorePatterns) {\n      Pattern pattern = Pattern.compile(regex);\n      Matcher matcher = pattern.matcher(m);\n      if (matcher.find()) return \"Ignoring exception matching \" + regex;\n    }\n\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrException#doIgnore(String).mjava","pathOld":"solr/src/common/org/apache/solr/common/SolrException#doIgnore(String).mjava","sourceNew":"  /** Returns null if this exception does not match any ignore patterns, or a message string to use if it does. */\n  public static String doIgnore(String m) {\n    if (ignorePatterns == null || m == null) return null;\n\n    for (String regex : ignorePatterns) {\n      Pattern pattern = Pattern.compile(regex);\n      Matcher matcher = pattern.matcher(m);\n      if (matcher.find()) return \"Ignoring exception matching \" + regex;\n    }\n\n    return null;\n  }\n\n","sourceOld":"  /** Returns null if this exception does not match any ignore patterns, or a message string to use if it does. */\n  public static String doIgnore(String m) {\n    if (ignorePatterns == null || m == null) return null;\n\n    for (String regex : ignorePatterns) {\n      Pattern pattern = Pattern.compile(regex);\n      Matcher matcher = pattern.matcher(m);\n      if (matcher.find()) return \"Ignoring exception matching \" + regex;\n    }\n\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrException#doIgnore(String).mjava","pathOld":"solr/src/common/org/apache/solr/common/SolrException#doIgnore(String).mjava","sourceNew":"  /** Returns null if this exception does not match any ignore patterns, or a message string to use if it does. */\n  public static String doIgnore(String m) {\n    if (ignorePatterns == null || m == null) return null;\n\n    for (String regex : ignorePatterns) {\n      Pattern pattern = Pattern.compile(regex);\n      Matcher matcher = pattern.matcher(m);\n      if (matcher.find()) return \"Ignoring exception matching \" + regex;\n    }\n\n    return null;\n  }\n\n","sourceOld":"  /** Returns null if this exception does not match any ignore patterns, or a message string to use if it does. */\n  public static String doIgnore(String m) {\n    if (ignorePatterns == null || m == null) return null;\n\n    for (String regex : ignorePatterns) {\n      Pattern pattern = Pattern.compile(regex);\n      Matcher matcher = pattern.matcher(m);\n      if (matcher.find()) return \"Ignoring exception matching \" + regex;\n    }\n\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"be38a703c871957da90985efa821b44e1c05ad2c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["be38a703c871957da90985efa821b44e1c05ad2c"],"c26f00b574427b55127e869b935845554afde1fa":["be38a703c871957da90985efa821b44e1c05ad2c","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["be38a703c871957da90985efa821b44e1c05ad2c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"be38a703c871957da90985efa821b44e1c05ad2c":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be38a703c871957da90985efa821b44e1c05ad2c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}