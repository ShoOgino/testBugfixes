{"path":"lucene/src/test/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","commits":[{"id":"56da903869515527852ee21ea7ef7bfe414cd40d","date":1294224724,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    PrefixCodedTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    PrefixCodedTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    PrefixCodedTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","sourceNew":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","sourceOld":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    PrefixCodedTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","sourceNew":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","sourceOld":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    PrefixCodedTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","sourceNew":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","sourceOld":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    PrefixCodedTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#getExtensions(Set[String]).mjava","sourceNew":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","sourceOld":"  @Override\n  public void getExtensions(Set<String> extensions) {\n    SepPostingsWriterImpl.getExtensions(extensions);\n    BlockTermsReader.getExtensions(extensions);\n    FixedGapTermsIndexReader.getIndexExtensions(extensions);\n    VariableGapTermsIndexReader.getIndexExtensions(extensions);\n    extensions.add(SEED_EXT);\n    //System.out.println(\"MockRandom.getExtensions return \" + extensions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","56da903869515527852ee21ea7ef7bfe414cd40d"],"56da903869515527852ee21ea7ef7bfe414cd40d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["70ad682703b8585f5d0a637efec044d57ec05efb","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b1add9ddc0005b07550d4350720aac22dc9886b3":["56da903869515527852ee21ea7ef7bfe414cd40d"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","56da903869515527852ee21ea7ef7bfe414cd40d"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["868da859b43505d9d2a023bfeae6dd0c795f5295","b1add9ddc0005b07550d4350720aac22dc9886b3"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["e79a6d080bdd5b2a8f56342cf571b5476de04180","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["b1add9ddc0005b07550d4350720aac22dc9886b3"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"56da903869515527852ee21ea7ef7bfe414cd40d":["70ad682703b8585f5d0a637efec044d57ec05efb","b1add9ddc0005b07550d4350720aac22dc9886b3","868da859b43505d9d2a023bfeae6dd0c795f5295"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","56da903869515527852ee21ea7ef7bfe414cd40d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["e79a6d080bdd5b2a8f56342cf571b5476de04180","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}