{"path":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNumericDocValues(String,AtomicReader,NumericDocValues,Bits).mjava","commits":[{"id":"9faa42f41b6adb98daf009cf99a4ee239189e469","date":1376648738,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNumericDocValues(String,AtomicReader,NumericDocValues,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNumericDocValues(String,AtomicReader,NumericDocValues).mjava","sourceNew":"  private static void checkNumericDocValues(String fieldName, AtomicReader reader, NumericDocValues ndv, Bits docsWithField) {\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      long value = ndv.get(i);\n      if (docsWithField.get(i) == false && value > 0) {\n        throw new RuntimeException(\"dv for field: \" + fieldName + \" is marked missing but has value=\" + value + \" for doc: \" + i);\n      }\n    }\n  }\n\n","sourceOld":"  private static void checkNumericDocValues(String fieldName, AtomicReader reader, NumericDocValues ndv) {\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      ndv.get(i);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11a746437bc5c0a0b3df0337ed249c387c812871","date":1376687959,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNumericDocValues(String,AtomicReader,NumericDocValues,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNumericDocValues(String,AtomicReader,NumericDocValues,Bits).mjava","sourceNew":"  private static void checkNumericDocValues(String fieldName, AtomicReader reader, NumericDocValues ndv, Bits docsWithField) {\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      long value = ndv.get(i);\n      if (docsWithField.get(i) == false && value != 0) {\n        throw new RuntimeException(\"dv for field: \" + fieldName + \" is marked missing but has value=\" + value + \" for doc: \" + i);\n      }\n    }\n  }\n\n","sourceOld":"  private static void checkNumericDocValues(String fieldName, AtomicReader reader, NumericDocValues ndv, Bits docsWithField) {\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      long value = ndv.get(i);\n      if (docsWithField.get(i) == false && value > 0) {\n        throw new RuntimeException(\"dv for field: \" + fieldName + \" is marked missing but has value=\" + value + \" for doc: \" + i);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNumericDocValues(String,AtomicReader,NumericDocValues,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNumericDocValues(String,AtomicReader,NumericDocValues).mjava","sourceNew":"  private static void checkNumericDocValues(String fieldName, AtomicReader reader, NumericDocValues ndv, Bits docsWithField) {\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      long value = ndv.get(i);\n      if (docsWithField.get(i) == false && value != 0) {\n        throw new RuntimeException(\"dv for field: \" + fieldName + \" is marked missing but has value=\" + value + \" for doc: \" + i);\n      }\n    }\n  }\n\n","sourceOld":"  private static void checkNumericDocValues(String fieldName, AtomicReader reader, NumericDocValues ndv) {\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      ndv.get(i);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNumericDocValues(String,AtomicReader,NumericDocValues,Bits).mjava","pathOld":"/dev/null","sourceNew":"  private static void checkNumericDocValues(String fieldName, AtomicReader reader, NumericDocValues ndv, Bits docsWithField) {\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      long value = ndv.get(i);\n      if (docsWithField.get(i) == false && value != 0) {\n        throw new RuntimeException(\"dv for field: \" + fieldName + \" is marked missing but has value=\" + value + \" for doc: \" + i);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNumericDocValues(String,AtomicReader,NumericDocValues,Bits).mjava","sourceNew":null,"sourceOld":"  private static void checkNumericDocValues(String fieldName, AtomicReader reader, NumericDocValues ndv, Bits docsWithField) {\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      long value = ndv.get(i);\n      if (docsWithField.get(i) == false && value != 0) {\n        throw new RuntimeException(\"dv for field: \" + fieldName + \" is marked missing but has value=\" + value + \" for doc: \" + i);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"11a746437bc5c0a0b3df0337ed249c387c812871":["9faa42f41b6adb98daf009cf99a4ee239189e469"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","11a746437bc5c0a0b3df0337ed249c387c812871"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"11a746437bc5c0a0b3df0337ed249c387c812871":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["11a746437bc5c0a0b3df0337ed249c387c812871"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9faa42f41b6adb98daf009cf99a4ee239189e469","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}