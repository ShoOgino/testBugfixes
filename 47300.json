{"path":"src/java/org/apache/lucene/index/IndexReader#document(int).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#document(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the stored fields of the <code>n</code><sup>th</sup>\n      <code>Document</code> in this index. */\n  abstract public Document document(int n) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03ae70812bc33b0270c1366378b2c2da95fe86a6","date":1036648540,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#document(int).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#document(int).mjava","sourceNew":"  /** Returns the stored fields of the <code>n</code><sup>th</sup>\n      <code>Document</code> in this index. */\n  public abstract Document document(int n) throws IOException;\n\n","sourceOld":"  /** Returns the stored fields of the <code>n</code><sup>th</sup>\n      <code>Document</code> in this index. */\n  abstract public Document document(int n) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770281b8a8459cafcdd2354b6a06078fea2d83c9","date":1077308096,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#document(int).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#document(int).mjava","sourceNew":"  /** Returns the stored fields of the <code>n</code><sup>th</sup>\n   <code>Document</code> in this index. */\n  public abstract Document document(int n) throws IOException;\n\n","sourceOld":"  /** Returns the stored fields of the <code>n</code><sup>th</sup>\n      <code>Document</code> in this index. */\n  public abstract Document document(int n) throws IOException;\n\n","bugFix":null,"bugIntro":["1b54a9bc667895a2095a886184bf69a3179e63df"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"12d40284fd9481f79444bc63bc5d13847caddd3d","date":1149902602,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#document(int).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#document(int).mjava","sourceNew":"  /** Returns the stored fields of the <code>n</code><sup>th</sup>\n   <code>Document</code> in this index. */\n  public Document document(int n) throws IOException{\n    return document(n, null);\n  }\n\n","sourceOld":"  /** Returns the stored fields of the <code>n</code><sup>th</sup>\n   <code>Document</code> in this index. */\n  public abstract Document document(int n) throws IOException;\n\n","bugFix":null,"bugIntro":["1b54a9bc667895a2095a886184bf69a3179e63df"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1b54a9bc667895a2095a886184bf69a3179e63df","date":1172088096,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#document(int).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#document(int).mjava","sourceNew":"  /** Returns the stored fields of the <code>n</code><sup>th</sup>\n   <code>Document</code> in this index.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public Document document(int n) throws CorruptIndexException, IOException {\n    return document(n, null);\n  }\n\n","sourceOld":"  /** Returns the stored fields of the <code>n</code><sup>th</sup>\n   <code>Document</code> in this index. */\n  public Document document(int n) throws IOException{\n    return document(n, null);\n  }\n\n","bugFix":["12d40284fd9481f79444bc63bc5d13847caddd3d","770281b8a8459cafcdd2354b6a06078fea2d83c9"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"328c1568e471f0c6eaa49ec00334ca59e573710f","date":1173897963,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#document(int).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#document(int).mjava","sourceNew":"  /** Returns the stored fields of the <code>n</code><sup>th</sup>\n   <code>Document</code> in this index.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public Document document(int n) throws CorruptIndexException, IOException {\n    ensureOpen();\n    return document(n, null);\n  }\n\n","sourceOld":"  /** Returns the stored fields of the <code>n</code><sup>th</sup>\n   <code>Document</code> in this index.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public Document document(int n) throws CorruptIndexException, IOException {\n    return document(n, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d736930237c54e1516a9e3bae803c92ff19ec4e5","date":1245789156,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#document(int).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#document(int).mjava","sourceNew":"  /**\n   * Returns the stored fields of the <code>n</code><sup>th</sup>\n   * <code>Document</code> in this index.\n   * <p>\n   * <b>NOTE:</b> for performance reasons, this method does not check if the\n   * requested document is deleted, and therefore asking for a deleted document\n   * may yield unspecified results. Usually this is not required, however you\n   * can call {@link #isDeleted(int)} with the requested document ID to verify\n   * the document is not deleted.\n   * \n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public Document document(int n) throws CorruptIndexException, IOException {\n    ensureOpen();\n    return document(n, null);\n  }\n\n","sourceOld":"  /** Returns the stored fields of the <code>n</code><sup>th</sup>\n   <code>Document</code> in this index.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public Document document(int n) throws CorruptIndexException, IOException {\n    ensureOpen();\n    return document(n, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#document(int).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#document(int).mjava","sourceNew":"  /**\n   * Returns the stored fields of the <code>n</code><sup>th</sup>\n   * <code>Document</code> in this index.\n   * <p>\n   * <b>NOTE:</b> for performance reasons, this method does not check if the\n   * requested document is deleted, and therefore asking for a deleted document\n   * may yield unspecified results. Usually this is not required, however you\n   * can call {@link #isDeleted(int)} with the requested document ID to verify\n   * the document is not deleted.\n   * \n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public Document document(int n) throws CorruptIndexException, IOException {\n    ensureOpen();\n    return document(n, null);\n  }\n\n","sourceOld":"  /**\n   * Returns the stored fields of the <code>n</code><sup>th</sup>\n   * <code>Document</code> in this index.\n   * <p>\n   * <b>NOTE:</b> for performance reasons, this method does not check if the\n   * requested document is deleted, and therefore asking for a deleted document\n   * may yield unspecified results. Usually this is not required, however you\n   * can call {@link #isDeleted(int)} with the requested document ID to verify\n   * the document is not deleted.\n   * \n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public Document document(int n) throws CorruptIndexException, IOException {\n    ensureOpen();\n    return document(n, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["03ae70812bc33b0270c1366378b2c2da95fe86a6"],"328c1568e471f0c6eaa49ec00334ca59e573710f":["1b54a9bc667895a2095a886184bf69a3179e63df"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1b54a9bc667895a2095a886184bf69a3179e63df":["12d40284fd9481f79444bc63bc5d13847caddd3d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d736930237c54e1516a9e3bae803c92ff19ec4e5":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"03ae70812bc33b0270c1366378b2c2da95fe86a6":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"12d40284fd9481f79444bc63bc5d13847caddd3d":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d736930237c54e1516a9e3bae803c92ff19ec4e5"]},"commit2Childs":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["12d40284fd9481f79444bc63bc5d13847caddd3d"],"328c1568e471f0c6eaa49ec00334ca59e573710f":["d736930237c54e1516a9e3bae803c92ff19ec4e5"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["03ae70812bc33b0270c1366378b2c2da95fe86a6"],"1b54a9bc667895a2095a886184bf69a3179e63df":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"d736930237c54e1516a9e3bae803c92ff19ec4e5":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"03ae70812bc33b0270c1366378b2c2da95fe86a6":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"12d40284fd9481f79444bc63bc5d13847caddd3d":["1b54a9bc667895a2095a886184bf69a3179e63df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}