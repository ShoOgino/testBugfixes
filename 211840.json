{"path":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore().mjava","commits":[{"id":"b4471b2ef75c0e11869f60b23cabe292b895c3ee","date":1248991247,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore().mjava","pathOld":"/dev/null","sourceNew":"  /* (non-Javadoc)\n   * @see org.apache.lucene.search.highlight.Scorer#getTokenScore()\n   */\n  public float getTokenScore() {\n    String termText = termAtt.term();\n\n    WeightedTerm queryTerm = (WeightedTerm) termsToFind.get(termText);\n    if (queryTerm == null) {\n      // not a query term - return\n      return 0;\n    }\n    // found a query term - is it unique in this doc?\n    if (!uniqueTermsInFragment.contains(termText)) {\n      totalScore += queryTerm.getWeight();\n      uniqueTermsInFragment.add(termText);\n    }\n    return queryTerm.getWeight();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"943c3f9cf96b8df37f4273d66a66182e2a669467","date":1249394171,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore().mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore().mjava","sourceNew":"  /*\n   * (non-Javadoc)\n   *\n   * @see org.apache.lucene.search.highlight.Scorer#getTokenScore(org.apache.lucene.analysis.Token,\n   *      int)\n   */\n  public float getTokenScore() {\n    position += posIncAtt.getPositionIncrement();\n    String termText = termAtt.term();\n\n    WeightedSpanTerm weightedSpanTerm;\n\n    if ((weightedSpanTerm = (WeightedSpanTerm) fieldWeightedSpanTerms.get(\n              termText)) == null) {\n      return 0;\n    }\n\n    if (weightedSpanTerm.positionSensitive &&\n          !weightedSpanTerm.checkPosition(position)) {\n      return 0;\n    }\n\n    float score = weightedSpanTerm.getWeight();\n\n    // found a query term - is it unique in this doc?\n    if (!foundTerms.contains(termText)) {\n      totalScore += score;\n      foundTerms.add(termText);\n    }\n\n    return score;\n  }\n\n","sourceOld":"  /* (non-Javadoc)\n   * @see org.apache.lucene.search.highlight.Scorer#getTokenScore()\n   */\n  public float getTokenScore() {\n    String termText = termAtt.term();\n\n    WeightedTerm queryTerm = (WeightedTerm) termsToFind.get(termText);\n    if (queryTerm == null) {\n      // not a query term - return\n      return 0;\n    }\n    // found a query term - is it unique in this doc?\n    if (!uniqueTermsInFragment.contains(termText)) {\n      totalScore += queryTerm.getWeight();\n      uniqueTermsInFragment.add(termText);\n    }\n    return queryTerm.getWeight();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ffdf794cee8d43eb612df752c592cef2dc3e75ae","date":1256465578,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore().mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore().mjava","sourceNew":"  /*\n   * (non-Javadoc)\n   *\n   * @see org.apache.lucene.search.highlight.Scorer#getTokenScore(org.apache.lucene.analysis.Token,\n   *      int)\n   */\n  public float getTokenScore() {\n    position += posIncAtt.getPositionIncrement();\n    String termText = termAtt.term();\n\n    WeightedSpanTerm weightedSpanTerm;\n\n    if ((weightedSpanTerm = fieldWeightedSpanTerms.get(\n              termText)) == null) {\n      return 0;\n    }\n\n    if (weightedSpanTerm.positionSensitive &&\n          !weightedSpanTerm.checkPosition(position)) {\n      return 0;\n    }\n\n    float score = weightedSpanTerm.getWeight();\n\n    // found a query term - is it unique in this doc?\n    if (!foundTerms.contains(termText)) {\n      totalScore += score;\n      foundTerms.add(termText);\n    }\n\n    return score;\n  }\n\n","sourceOld":"  /*\n   * (non-Javadoc)\n   *\n   * @see org.apache.lucene.search.highlight.Scorer#getTokenScore(org.apache.lucene.analysis.Token,\n   *      int)\n   */\n  public float getTokenScore() {\n    position += posIncAtt.getPositionIncrement();\n    String termText = termAtt.term();\n\n    WeightedSpanTerm weightedSpanTerm;\n\n    if ((weightedSpanTerm = (WeightedSpanTerm) fieldWeightedSpanTerms.get(\n              termText)) == null) {\n      return 0;\n    }\n\n    if (weightedSpanTerm.positionSensitive &&\n          !weightedSpanTerm.checkPosition(position)) {\n      return 0;\n    }\n\n    float score = weightedSpanTerm.getWeight();\n\n    // found a query term - is it unique in this doc?\n    if (!foundTerms.contains(termText)) {\n      totalScore += score;\n      foundTerms.add(termText);\n    }\n\n    return score;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore().mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore().mjava","sourceNew":"  /*\n   * (non-Javadoc)\n   *\n   * @see org.apache.lucene.search.highlight.Scorer#getTokenScore(org.apache.lucene.analysis.Token,\n   *      int)\n   */\n  public float getTokenScore() {\n    position += posIncAtt.getPositionIncrement();\n    String termText = termAtt.term();\n\n    WeightedSpanTerm weightedSpanTerm;\n\n    if ((weightedSpanTerm = fieldWeightedSpanTerms.get(\n              termText)) == null) {\n      return 0;\n    }\n\n    if (weightedSpanTerm.positionSensitive &&\n          !weightedSpanTerm.checkPosition(position)) {\n      return 0;\n    }\n\n    float score = weightedSpanTerm.getWeight();\n\n    // found a query term - is it unique in this doc?\n    if (!foundTerms.contains(termText)) {\n      totalScore += score;\n      foundTerms.add(termText);\n    }\n\n    return score;\n  }\n\n","sourceOld":"  /*\n   * (non-Javadoc)\n   *\n   * @see org.apache.lucene.search.highlight.Scorer#getTokenScore(org.apache.lucene.analysis.Token,\n   *      int)\n   */\n  public float getTokenScore() {\n    position += posIncAtt.getPositionIncrement();\n    String termText = termAtt.term();\n\n    WeightedSpanTerm weightedSpanTerm;\n\n    if ((weightedSpanTerm = fieldWeightedSpanTerms.get(\n              termText)) == null) {\n      return 0;\n    }\n\n    if (weightedSpanTerm.positionSensitive &&\n          !weightedSpanTerm.checkPosition(position)) {\n      return 0;\n    }\n\n    float score = weightedSpanTerm.getWeight();\n\n    // found a query term - is it unique in this doc?\n    if (!foundTerms.contains(termText)) {\n      totalScore += score;\n      foundTerms.add(termText);\n    }\n\n    return score;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ffdf794cee8d43eb612df752c592cef2dc3e75ae":["943c3f9cf96b8df37f4273d66a66182e2a669467"],"b4471b2ef75c0e11869f60b23cabe292b895c3ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"943c3f9cf96b8df37f4273d66a66182e2a669467":["b4471b2ef75c0e11869f60b23cabe292b895c3ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ffdf794cee8d43eb612df752c592cef2dc3e75ae"]},"commit2Childs":{"ffdf794cee8d43eb612df752c592cef2dc3e75ae":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b4471b2ef75c0e11869f60b23cabe292b895c3ee":["943c3f9cf96b8df37f4273d66a66182e2a669467"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4471b2ef75c0e11869f60b23cabe292b895c3ee"],"943c3f9cf96b8df37f4273d66a66182e2a669467":["ffdf794cee8d43eb612df752c592cef2dc3e75ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}