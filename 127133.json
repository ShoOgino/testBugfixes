{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","commits":[{"id":"038e2a9b07e2f8ae58336613cea227bf8b973484","date":1346850972,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/BlockTermsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      int nonZeroCount = 0;\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          nonZeroCount++;\n        }\n      }\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(nonZeroCount);\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      int nonZeroCount = 0;\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          nonZeroCount++;\n        }\n      }\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(nonZeroCount);\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"26867fa391352324254e5eafd1c2d63e3221f4fc","date":1350562745,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(fields.size());\n      for(FieldMetaData field : fields) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.numTerms);\n        out.writeVLong(field.termsStartPointer);\n        if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n          out.writeVLong(field.sumTotalTermFreq);\n        }\n        out.writeVLong(field.sumDocFreq);\n        out.writeVInt(field.docCount);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      int nonZeroCount = 0;\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          nonZeroCount++;\n        }\n      }\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(nonZeroCount);\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(fields.size());\n      for(FieldMetaData field : fields) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.numTerms);\n        out.writeVLong(field.termsStartPointer);\n        if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n          out.writeVLong(field.sumTotalTermFreq);\n        }\n        out.writeVLong(field.sumDocFreq);\n        out.writeVInt(field.docCount);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      int nonZeroCount = 0;\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          nonZeroCount++;\n        }\n      }\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(nonZeroCount);\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98","date":1377268487,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(fields.size());\n      for(FieldMetaData field : fields) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.numTerms);\n        out.writeVLong(field.termsStartPointer);\n        if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n          out.writeVLong(field.sumTotalTermFreq);\n        }\n        out.writeVLong(field.sumDocFreq);\n        out.writeVInt(field.docCount);\n        out.writeVInt(field.longsSize);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(fields.size());\n      for(FieldMetaData field : fields) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.numTerms);\n        out.writeVLong(field.termsStartPointer);\n        if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n          out.writeVLong(field.sumTotalTermFreq);\n        }\n        out.writeVLong(field.sumDocFreq);\n        out.writeVInt(field.docCount);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3263230f04a1aa8d431d722fdfce583a9542c18","date":1377603209,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(fields.size());\n      for(FieldMetaData field : fields) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.numTerms);\n        out.writeVLong(field.termsStartPointer);\n        if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n          out.writeVLong(field.sumTotalTermFreq);\n        }\n        out.writeVLong(field.sumDocFreq);\n        out.writeVInt(field.docCount);\n        if (VERSION_CURRENT >= VERSION_META_ARRAY) {\n          out.writeVInt(field.longsSize);\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(fields.size());\n      for(FieldMetaData field : fields) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.numTerms);\n        out.writeVLong(field.termsStartPointer);\n        if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n          out.writeVLong(field.sumTotalTermFreq);\n        }\n        out.writeVLong(field.sumDocFreq);\n        out.writeVInt(field.docCount);\n        out.writeVInt(field.longsSize);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f948dd442d23baa6cbb28daf77c8db78b351329","date":1378742876,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(fields.size());\n      for(FieldMetaData field : fields) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.numTerms);\n        out.writeVLong(field.termsStartPointer);\n        if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n          out.writeVLong(field.sumTotalTermFreq);\n        }\n        out.writeVLong(field.sumDocFreq);\n        out.writeVInt(field.docCount);\n        if (VERSION_CURRENT >= VERSION_META_ARRAY) {\n          out.writeVInt(field.longsSize);\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(fields.size());\n      for(FieldMetaData field : fields) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.numTerms);\n        out.writeVLong(field.termsStartPointer);\n        if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n          out.writeVLong(field.sumTotalTermFreq);\n        }\n        out.writeVLong(field.sumDocFreq);\n        out.writeVInt(field.docCount);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa80a35d7c4b2b1e83082b275e3e8328ab93db52","date":1381766157,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    try {\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(fields.size());\n      for(FieldMetaData field : fields) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.numTerms);\n        out.writeVLong(field.termsStartPointer);\n        if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n          out.writeVLong(field.sumTotalTermFreq);\n        }\n        out.writeVLong(field.sumDocFreq);\n        out.writeVInt(field.docCount);\n        if (VERSION_CURRENT >= VERSION_META_ARRAY) {\n          out.writeVInt(field.longsSize);\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(fields.size());\n      for(FieldMetaData field : fields) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.numTerms);\n        out.writeVLong(field.termsStartPointer);\n        if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n          out.writeVLong(field.sumTotalTermFreq);\n        }\n        out.writeVLong(field.sumDocFreq);\n        out.writeVInt(field.docCount);\n        if (VERSION_CURRENT >= VERSION_META_ARRAY) {\n          out.writeVInt(field.longsSize);\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    if (out != null) {\n      try {\n        final long dirStart = out.getFilePointer();\n        \n        out.writeVInt(fields.size());\n        for(FieldMetaData field : fields) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n          if (VERSION_CURRENT >= VERSION_META_ARRAY) {\n            out.writeVInt(field.longsSize);\n          }\n        }\n        writeTrailer(dirStart);\n        CodecUtil.writeFooter(out);\n      } finally {\n        IOUtils.close(out, postingsWriter, termsIndexWriter);\n        out = null;\n      }\n    }\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    try {\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(fields.size());\n      for(FieldMetaData field : fields) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.numTerms);\n        out.writeVLong(field.termsStartPointer);\n        if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n          out.writeVLong(field.sumTotalTermFreq);\n        }\n        out.writeVLong(field.sumDocFreq);\n        out.writeVInt(field.docCount);\n        if (VERSION_CURRENT >= VERSION_META_ARRAY) {\n          out.writeVInt(field.longsSize);\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    if (out != null) {\n      try {\n        final long dirStart = out.getFilePointer();\n        \n        out.writeVInt(fields.size());\n        for(FieldMetaData field : fields) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n          if (VERSION_CURRENT >= VERSION_META_ARRAY) {\n            out.writeVInt(field.longsSize);\n          }\n        }\n        writeTrailer(dirStart);\n        CodecUtil.writeFooter(out);\n      } finally {\n        IOUtils.close(out, postingsWriter, termsIndexWriter);\n        out = null;\n      }\n    }\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    try {\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(fields.size());\n      for(FieldMetaData field : fields) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.numTerms);\n        out.writeVLong(field.termsStartPointer);\n        if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n          out.writeVLong(field.sumTotalTermFreq);\n        }\n        out.writeVLong(field.sumDocFreq);\n        out.writeVInt(field.docCount);\n        if (VERSION_CURRENT >= VERSION_META_ARRAY) {\n          out.writeVInt(field.longsSize);\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      IOUtils.close(out, postingsWriter, termsIndexWriter);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7afb64ff3a701f68b2689cafff6c5bdeb4f67f63","date":1398957288,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (out != null) {\n      try {\n        final long dirStart = out.getFilePointer();\n        \n        out.writeVInt(fields.size());\n        for(FieldMetaData field : fields) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n          if (VERSION_CURRENT >= VERSION_META_ARRAY) {\n            out.writeVInt(field.longsSize);\n          }\n        }\n        writeTrailer(dirStart);\n        CodecUtil.writeFooter(out);\n      } finally {\n        IOUtils.close(out, postingsWriter, termsIndexWriter);\n        out = null;\n      }\n    }\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    if (out != null) {\n      try {\n        final long dirStart = out.getFilePointer();\n        \n        out.writeVInt(fields.size());\n        for(FieldMetaData field : fields) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n          if (VERSION_CURRENT >= VERSION_META_ARRAY) {\n            out.writeVInt(field.longsSize);\n          }\n        }\n        writeTrailer(dirStart);\n        CodecUtil.writeFooter(out);\n      } finally {\n        IOUtils.close(out, postingsWriter, termsIndexWriter);\n        out = null;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d35e791a979f62bb7484ccd9f83fa833c1606e8","date":1412164445,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (out != null) {\n      try {\n        final long dirStart = out.getFilePointer();\n        \n        out.writeVInt(fields.size());\n        for(FieldMetaData field : fields) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n          out.writeVInt(field.longsSize);\n        }\n        writeTrailer(dirStart);\n        CodecUtil.writeFooter(out);\n      } finally {\n        IOUtils.close(out, postingsWriter, termsIndexWriter);\n        out = null;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (out != null) {\n      try {\n        final long dirStart = out.getFilePointer();\n        \n        out.writeVInt(fields.size());\n        for(FieldMetaData field : fields) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n          if (VERSION_CURRENT >= VERSION_META_ARRAY) {\n            out.writeVInt(field.longsSize);\n          }\n        }\n        writeTrailer(dirStart);\n        CodecUtil.writeFooter(out);\n      } finally {\n        IOUtils.close(out, postingsWriter, termsIndexWriter);\n        out = null;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (out != null) {\n      try {\n        final long dirStart = out.getFilePointer();\n        \n        out.writeVInt(fields.size());\n        for(FieldMetaData field : fields) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n          out.writeVInt(field.longsSize);\n        }\n        writeTrailer(dirStart);\n        CodecUtil.writeFooter(out);\n      } finally {\n        IOUtils.close(out, postingsWriter, termsIndexWriter);\n        out = null;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (out != null) {\n      try {\n        final long dirStart = out.getFilePointer();\n        \n        out.writeVInt(fields.size());\n        for(FieldMetaData field : fields) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n          if (VERSION_CURRENT >= VERSION_META_ARRAY) {\n            out.writeVInt(field.longsSize);\n          }\n        }\n        writeTrailer(dirStart);\n        CodecUtil.writeFooter(out);\n      } finally {\n        IOUtils.close(out, postingsWriter, termsIndexWriter);\n        out = null;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2bb2842e561df4e8e9ad89010605fc86ac265465","date":1414768208,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (out != null) {\n      try {\n        final long dirStart = out.getFilePointer();\n        \n        out.writeVInt(fields.size());\n        for(FieldMetaData field : fields) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n          out.writeVInt(field.longsSize);\n        }\n        writeTrailer(dirStart);\n        CodecUtil.writeFooter(out);\n      } finally {\n        IOUtils.close(out, postingsWriter, termsIndexWriter);\n        out = null;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (out != null) {\n      try {\n        final long dirStart = out.getFilePointer();\n        \n        out.writeVInt(fields.size());\n        for(FieldMetaData field : fields) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n          out.writeVInt(field.longsSize);\n        }\n        writeTrailer(dirStart);\n        CodecUtil.writeFooter(out);\n      } finally {\n        IOUtils.close(out, postingsWriter, termsIndexWriter);\n        out = null;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb77022ef17ff655c519a3f6ecd393747ac88bcf","date":1578579386,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (out != null) {\n      try {\n        final long dirStart = out.getFilePointer();\n        \n        out.writeVInt(fields.size());\n        for(FieldMetaData field : fields) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n        }\n        writeTrailer(dirStart);\n        CodecUtil.writeFooter(out);\n      } finally {\n        IOUtils.close(out, postingsWriter, termsIndexWriter);\n        out = null;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (out != null) {\n      try {\n        final long dirStart = out.getFilePointer();\n        \n        out.writeVInt(fields.size());\n        for(FieldMetaData field : fields) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n          out.writeVInt(field.longsSize);\n        }\n        writeTrailer(dirStart);\n        CodecUtil.writeFooter(out);\n      } finally {\n        IOUtils.close(out, postingsWriter, termsIndexWriter);\n        out = null;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06ab276a5660cb79daae8c5ede063531c700a03a","date":1578587874,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (out != null) {\n      try {\n        final long dirStart = out.getFilePointer();\n        \n        out.writeVInt(fields.size());\n        for(FieldMetaData field : fields) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n          out.writeVInt(field.longsSize);\n        }\n        writeTrailer(dirStart);\n        CodecUtil.writeFooter(out);\n      } finally {\n        IOUtils.close(out, postingsWriter, termsIndexWriter);\n        out = null;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (out != null) {\n      try {\n        final long dirStart = out.getFilePointer();\n        \n        out.writeVInt(fields.size());\n        for(FieldMetaData field : fields) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n        }\n        writeTrailer(dirStart);\n        CodecUtil.writeFooter(out);\n      } finally {\n        IOUtils.close(out, postingsWriter, termsIndexWriter);\n        out = null;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08a5168e06e037794c0aba7f94f76ff3c09704d2","date":1579264785,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (out != null) {\n      try {\n        final long dirStart = out.getFilePointer();\n        \n        out.writeVInt(fields.size());\n        for(FieldMetaData field : fields) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n        }\n        writeTrailer(dirStart);\n        CodecUtil.writeFooter(out);\n      } finally {\n        IOUtils.close(out, postingsWriter, termsIndexWriter);\n        out = null;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (out != null) {\n      try {\n        final long dirStart = out.getFilePointer();\n        \n        out.writeVInt(fields.size());\n        for(FieldMetaData field : fields) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (field.fieldInfo.getIndexOptions() != IndexOptions.DOCS) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n          out.writeVLong(field.sumDocFreq);\n          out.writeVInt(field.docCount);\n          out.writeVInt(field.longsSize);\n        }\n        writeTrailer(dirStart);\n        CodecUtil.writeFooter(out);\n      } finally {\n        IOUtils.close(out, postingsWriter, termsIndexWriter);\n        out = null;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["038e2a9b07e2f8ae58336613cea227bf8b973484","26867fa391352324254e5eafd1c2d63e3221f4fc"],"cb77022ef17ff655c519a3f6ecd393747ac88bcf":["2bb2842e561df4e8e9ad89010605fc86ac265465"],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"2bb2842e561df4e8e9ad89010605fc86ac265465":["9bb9a29a5e71a90295f175df8919802993142c9a"],"26867fa391352324254e5eafd1c2d63e3221f4fc":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"e3263230f04a1aa8d431d722fdfce583a9542c18":["1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98"],"7afb64ff3a701f68b2689cafff6c5bdeb4f67f63":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["26867fa391352324254e5eafd1c2d63e3221f4fc"],"8d35e791a979f62bb7484ccd9f83fa833c1606e8":["7afb64ff3a701f68b2689cafff6c5bdeb4f67f63"],"9bb9a29a5e71a90295f175df8919802993142c9a":["7afb64ff3a701f68b2689cafff6c5bdeb4f67f63","8d35e791a979f62bb7484ccd9f83fa833c1606e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"08a5168e06e037794c0aba7f94f76ff3c09704d2":["06ab276a5660cb79daae8c5ede063531c700a03a"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["26867fa391352324254e5eafd1c2d63e3221f4fc","e3263230f04a1aa8d431d722fdfce583a9542c18"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["08a5168e06e037794c0aba7f94f76ff3c09704d2"],"06ab276a5660cb79daae8c5ede063531c700a03a":["cb77022ef17ff655c519a3f6ecd393747ac88bcf"],"038e2a9b07e2f8ae58336613cea227bf8b973484":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","7afb64ff3a701f68b2689cafff6c5bdeb4f67f63"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"cb77022ef17ff655c519a3f6ecd393747ac88bcf":["06ab276a5660cb79daae8c5ede063531c700a03a"],"2bb2842e561df4e8e9ad89010605fc86ac265465":["cb77022ef17ff655c519a3f6ecd393747ac88bcf"],"26867fa391352324254e5eafd1c2d63e3221f4fc":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98","2f948dd442d23baa6cbb28daf77c8db78b351329"],"e3263230f04a1aa8d431d722fdfce583a9542c18":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"7afb64ff3a701f68b2689cafff6c5bdeb4f67f63":["8d35e791a979f62bb7484ccd9f83fa833c1606e8","9bb9a29a5e71a90295f175df8919802993142c9a"],"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["e3263230f04a1aa8d431d722fdfce583a9542c18"],"8d35e791a979f62bb7484ccd9f83fa833c1606e8":["9bb9a29a5e71a90295f175df8919802993142c9a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["2bb2842e561df4e8e9ad89010605fc86ac265465"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"08a5168e06e037794c0aba7f94f76ff3c09704d2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"038e2a9b07e2f8ae58336613cea227bf8b973484":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","26867fa391352324254e5eafd1c2d63e3221f4fc"],"06ab276a5660cb79daae8c5ede063531c700a03a":["08a5168e06e037794c0aba7f94f76ff3c09704d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","db4fdbf3d262768eabc027cd8321edca0cd11fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}