{"path":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/servlet/handler/TestRequestAuthenticator#testGetTokenFromRequest().mjava","commits":[{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/servlet/handler/TestRequestAuthenticator#testGetTokenFromRequest().mjava","pathOld":"contrib/gdata-server/src/test/org/apache/lucene/gdata/servlet/handler/TestRequestAuthenticator#testGetTokenFromRequest().mjava","sourceNew":"    /*\n     * Test method for 'org.apache.lucene.gdata.servlet.handler.RequestAuthenticator.authenticateAccount(GDataRequest, AccountRole)'\n     */\n    public void testGetTokenFromRequest() {\n        // test token present\n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), this.tokenHeader);\n        this.requestMock.replay();\n        assertEquals(this.token,this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n        \n        // test token null / cookie present\n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), null);\n        this.requestMock.expectAndDefaultReturn(this.request.getCookies(), new Cookie[]{this.authCookie});\n        this.requestMock.replay();\n        assertEquals(this.token,this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n        \n        // test token null / cookie not present\n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), null);\n        this.requestMock.expectAndDefaultReturn(this.request.getCookies(), new Cookie[]{new Cookie(\"somekey\",\"someValue\")});\n        this.requestMock.replay();\n        assertNull(this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n        \n//      test token null / cookie array emtpy \n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), null);\n        this.requestMock.expectAndDefaultReturn(this.request.getCookies(), new Cookie[]{});\n        this.requestMock.replay();\n        assertNull(this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n        \n//      test token null / cookie array null\n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), null);\n        this.requestMock.expectAndDefaultReturn(this.request.getCookies(), null);\n        this.requestMock.replay();\n        assertNull(this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n    }\n\n","sourceOld":"    /*\n     * Test method for 'org.apache.lucene.gdata.servlet.handler.RequestAuthenticator.authenticateAccount(GDataRequest, AccountRole)'\n     */\n    public void testGetTokenFromRequest() {\n        // test token present\n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), this.tokenHeader);\n        this.requestMock.replay();\n        assertEquals(this.token,this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n        \n        // test token null / cookie present\n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), null);\n        this.requestMock.expectAndDefaultReturn(this.request.getCookies(), new Cookie[]{this.authCookie});\n        this.requestMock.replay();\n        assertEquals(this.token,this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n        \n        // test token null / cookie not present\n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), null);\n        this.requestMock.expectAndDefaultReturn(this.request.getCookies(), new Cookie[]{new Cookie(\"somekey\",\"someValue\")});\n        this.requestMock.replay();\n        assertNull(this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n        \n//      test token null / cookie array emtpy \n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), null);\n        this.requestMock.expectAndDefaultReturn(this.request.getCookies(), new Cookie[]{});\n        this.requestMock.replay();\n        assertNull(this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n        \n//      test token null / cookie array null\n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), null);\n        this.requestMock.expectAndDefaultReturn(this.request.getCookies(), null);\n        this.requestMock.replay();\n        assertNull(this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/servlet/handler/TestRequestAuthenticator#testGetTokenFromRequest().mjava","pathOld":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/servlet/handler/TestRequestAuthenticator#testGetTokenFromRequest().mjava","sourceNew":"    /*\n     * Test method for 'org.apache.lucene.gdata.servlet.handler.RequestAuthenticator.authenticateAccount(GDataRequest, AccountRole)'\n     */\n    public void testGetTokenFromRequest() {\n        // test token present\n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), this.tokenHeader);\n        this.requestMock.replay();\n        assertEquals(this.token,this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n        \n        // test token null / cookie present\n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), null);\n        this.requestMock.expectAndDefaultReturn(this.request.getCookies(), new Cookie[]{this.authCookie});\n        this.requestMock.replay();\n        assertEquals(this.token,this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n        \n        // test token null / cookie not present\n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), null);\n        this.requestMock.expectAndDefaultReturn(this.request.getCookies(), new Cookie[]{new Cookie(\"somekey\",\"someValue\")});\n        this.requestMock.replay();\n        assertNull(this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n        \n//      test token null / cookie array emtpy \n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), null);\n        this.requestMock.expectAndDefaultReturn(this.request.getCookies(), new Cookie[]{});\n        this.requestMock.replay();\n        assertNull(this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n        \n//      test token null / cookie array null\n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), null);\n        this.requestMock.expectAndDefaultReturn(this.request.getCookies(), null);\n        this.requestMock.replay();\n        assertNull(this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n    }\n\n","sourceOld":"    /*\n     * Test method for 'org.apache.lucene.gdata.servlet.handler.RequestAuthenticator.authenticateAccount(GDataRequest, AccountRole)'\n     */\n    public void testGetTokenFromRequest() {\n        // test token present\n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), this.tokenHeader);\n        this.requestMock.replay();\n        assertEquals(this.token,this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n        \n        // test token null / cookie present\n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), null);\n        this.requestMock.expectAndDefaultReturn(this.request.getCookies(), new Cookie[]{this.authCookie});\n        this.requestMock.replay();\n        assertEquals(this.token,this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n        \n        // test token null / cookie not present\n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), null);\n        this.requestMock.expectAndDefaultReturn(this.request.getCookies(), new Cookie[]{new Cookie(\"somekey\",\"someValue\")});\n        this.requestMock.replay();\n        assertNull(this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n        \n//      test token null / cookie array emtpy \n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), null);\n        this.requestMock.expectAndDefaultReturn(this.request.getCookies(), new Cookie[]{});\n        this.requestMock.replay();\n        assertNull(this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n        \n//      test token null / cookie array null\n        this.requestMock.expectAndDefaultReturn(this.request.getHeader(AuthenticationController.AUTHORIZATION_HEADER), null);\n        this.requestMock.expectAndDefaultReturn(this.request.getCookies(), null);\n        this.requestMock.replay();\n        assertNull(this.authenticator.getTokenFromRequest(this.request));\n        this.requestMock.verify();\n        this.requestMock.reset();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}