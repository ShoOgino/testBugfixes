{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/CountingFacetsCollector#countParents(int[]).mjava","commits":[{"id":"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d","date":1358784296,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/CountingFacetsCollector#countParents(int[]).mjava","pathOld":"/dev/null","sourceNew":"  private void countParents(int[] parents) {\n    // counts[0] is the count of ROOT, which we don't care about and counts[1]\n    // can only update counts[0], so we don't bother to visit it too. also,\n    // since parents always have lower ordinals than their children, we traverse\n    // the array backwards. this also allows us to update just the immediate\n    // parent's count (actually, otherwise it would be a mistake).\n    for (int i = counts.length - 1; i > 1; i--) {\n      int count = counts[i];\n      if (count > 0) {\n        int parent = parents[i];\n        if (parent != 0) {\n          counts[parent] += count;\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/CountingFacetsCollector#countParents(int[]).mjava","pathOld":"/dev/null","sourceNew":"  private void countParents(int[] parents) {\n    // counts[0] is the count of ROOT, which we don't care about and counts[1]\n    // can only update counts[0], so we don't bother to visit it too. also,\n    // since parents always have lower ordinals than their children, we traverse\n    // the array backwards. this also allows us to update just the immediate\n    // parent's count (actually, otherwise it would be a mistake).\n    for (int i = counts.length - 1; i > 1; i--) {\n      int count = counts[i];\n      if (count > 0) {\n        int parent = parents[i];\n        if (parent != 0) {\n          counts[parent] += count;\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"239f79ed06f0979cfe1911ec5fba32b94fda43c1","date":1359553898,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/CountingFacetsCollector#countParents(int[]).mjava","sourceNew":null,"sourceOld":"  private void countParents(int[] parents) {\n    // counts[0] is the count of ROOT, which we don't care about and counts[1]\n    // can only update counts[0], so we don't bother to visit it too. also,\n    // since parents always have lower ordinals than their children, we traverse\n    // the array backwards. this also allows us to update just the immediate\n    // parent's count (actually, otherwise it would be a mistake).\n    for (int i = counts.length - 1; i > 1; i--) {\n      int count = counts[i];\n      if (count > 0) {\n        int parent = parents[i];\n        if (parent != 0) {\n          counts[parent] += count;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61d5f95d14e5b9b046998c51e16709a398c15226","date":1359603451,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/CountingFacetsCollector#countParents(int[]).mjava","sourceNew":null,"sourceOld":"  private void countParents(int[] parents) {\n    // counts[0] is the count of ROOT, which we don't care about and counts[1]\n    // can only update counts[0], so we don't bother to visit it too. also,\n    // since parents always have lower ordinals than their children, we traverse\n    // the array backwards. this also allows us to update just the immediate\n    // parent's count (actually, otherwise it would be a mistake).\n    for (int i = counts.length - 1; i > 1; i--) {\n      int count = counts[i];\n      if (count > 0) {\n        int parent = parents[i];\n        if (parent != 0) {\n          counts[parent] += count;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"61d5f95d14e5b9b046998c51e16709a398c15226":["07155cdd910937cdf6877e48884d5782845c8b8b","239f79ed06f0979cfe1911ec5fba32b94fda43c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"239f79ed06f0979cfe1911ec5fba32b94fda43c1":["f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d"],"07155cdd910937cdf6877e48884d5782845c8b8b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["239f79ed06f0979cfe1911ec5fba32b94fda43c1"]},"commit2Childs":{"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d":["239f79ed06f0979cfe1911ec5fba32b94fda43c1","07155cdd910937cdf6877e48884d5782845c8b8b"],"61d5f95d14e5b9b046998c51e16709a398c15226":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d","07155cdd910937cdf6877e48884d5782845c8b8b"],"239f79ed06f0979cfe1911ec5fba32b94fda43c1":["61d5f95d14e5b9b046998c51e16709a398c15226","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"07155cdd910937cdf6877e48884d5782845c8b8b":["61d5f95d14e5b9b046998c51e16709a398c15226"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["61d5f95d14e5b9b046998c51e16709a398c15226","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}