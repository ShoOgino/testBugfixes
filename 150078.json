{"path":"lucene/core/src/test/org/apache/lucene/search/spans/TestNearSpansOrdered#testNestedGaps().mjava","commits":[{"id":"c2cfb0b360718451132d52853b93d52c450b6054","date":1463647723,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestNearSpansOrdered#testNestedGaps().mjava","pathOld":"/dev/null","sourceNew":"  public void testNestedGaps() throws Exception {\n    SpanQuery q = SpanNearQuery.newOrderedNearQuery(FIELD)\n        .addClause(new SpanOrQuery(\n            new SpanTermQuery(new Term(FIELD, \"open\")),\n            SpanNearQuery.newOrderedNearQuery(FIELD)\n                .addClause(new SpanTermQuery(new Term(FIELD, \"go\")))\n                .addGap(1)\n                .build()\n        ))\n        .addClause(new SpanTermQuery(new Term(FIELD, \"webpage\")))\n        .build();\n\n    TopDocs topDocs = searcher.search(q, 1);\n    assertEquals(6, topDocs.scoreDocs[0].doc);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eb10453c4217aa50392c51e3e89deb8b779bd51","date":1463648949,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestNearSpansOrdered#testNestedGaps().mjava","pathOld":"/dev/null","sourceNew":"  public void testNestedGaps() throws Exception {\n    SpanQuery q = SpanNearQuery.newOrderedNearQuery(FIELD)\n        .addClause(new SpanOrQuery(\n            new SpanTermQuery(new Term(FIELD, \"open\")),\n            SpanNearQuery.newOrderedNearQuery(FIELD)\n                .addClause(new SpanTermQuery(new Term(FIELD, \"go\")))\n                .addGap(1)\n                .build()\n        ))\n        .addClause(new SpanTermQuery(new Term(FIELD, \"webpage\")))\n        .build();\n\n    TopDocs topDocs = searcher.search(q, 1);\n    assertEquals(6, topDocs.scoreDocs[0].doc);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestNearSpansOrdered#testNestedGaps().mjava","pathOld":"/dev/null","sourceNew":"  public void testNestedGaps() throws Exception {\n    SpanQuery q = SpanNearQuery.newOrderedNearQuery(FIELD)\n        .addClause(new SpanOrQuery(\n            new SpanTermQuery(new Term(FIELD, \"open\")),\n            SpanNearQuery.newOrderedNearQuery(FIELD)\n                .addClause(new SpanTermQuery(new Term(FIELD, \"go\")))\n                .addGap(1)\n                .build()\n        ))\n        .addClause(new SpanTermQuery(new Term(FIELD, \"webpage\")))\n        .build();\n\n    TopDocs topDocs = searcher.search(q, 1);\n    assertEquals(6, topDocs.scoreDocs[0].doc);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestNearSpansOrdered#testNestedGaps().mjava","pathOld":"/dev/null","sourceNew":"  public void testNestedGaps() throws Exception {\n    SpanQuery q = SpanNearQuery.newOrderedNearQuery(FIELD)\n        .addClause(new SpanOrQuery(\n            new SpanTermQuery(new Term(FIELD, \"open\")),\n            SpanNearQuery.newOrderedNearQuery(FIELD)\n                .addClause(new SpanTermQuery(new Term(FIELD, \"go\")))\n                .addGap(1)\n                .build()\n        ))\n        .addClause(new SpanTermQuery(new Term(FIELD, \"webpage\")))\n        .build();\n\n    TopDocs topDocs = searcher.search(q, 1);\n    assertEquals(6, topDocs.scoreDocs[0].doc);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1eb10453c4217aa50392c51e3e89deb8b779bd51":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c2cfb0b360718451132d52853b93d52c450b6054"],"c2cfb0b360718451132d52853b93d52c450b6054":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1eb10453c4217aa50392c51e3e89deb8b779bd51"]},"commit2Childs":{"1eb10453c4217aa50392c51e3e89deb8b779bd51":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"c2cfb0b360718451132d52853b93d52c450b6054":["1eb10453c4217aa50392c51e3e89deb8b779bd51"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1eb10453c4217aa50392c51e3e89deb8b779bd51","c2cfb0b360718451132d52853b93d52c450b6054","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}