{"path":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery#equals(Object).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery#equals(Object).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/BoostedQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (getClass() != o.getClass()) return false;\n    BoostedQuery other = (BoostedQuery)o;\n    return this.getBoost() == other.getBoost()\n           && this.q.equals(other.q)\n           && this.boostVal.equals(other.boostVal);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (getClass() != o.getClass()) return false;\n    BoostedQuery other = (BoostedQuery)o;\n    return this.getBoost() == other.getBoost()\n           && this.q.equals(other.q)\n           && this.boostVal.equals(other.boostVal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c58863d680ae57b0fd0570d8b452842654fb073b","date":1337449658,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n  if (!super.equals(o)) return false;\n    BoostedQuery other = (BoostedQuery)o;\n    return this.q.equals(other.q)\n           && this.boostVal.equals(other.boostVal);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (getClass() != o.getClass()) return false;\n    BoostedQuery other = (BoostedQuery)o;\n    return this.getBoost() == other.getBoost()\n           && this.q.equals(other.q)\n           && this.boostVal.equals(other.boostVal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n  if (!super.equals(o)) return false;\n    BoostedQuery other = (BoostedQuery)o;\n    return this.q.equals(other.q)\n           && this.boostVal.equals(other.boostVal);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (getClass() != o.getClass()) return false;\n    BoostedQuery other = (BoostedQuery)o;\n    return this.getBoost() == other.getBoost()\n           && this.q.equals(other.q)\n           && this.boostVal.equals(other.boostVal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n  if (!super.equals(o)) return false;\n    BoostedQuery other = (BoostedQuery)o;\n    return this.q.equals(other.q)\n           && this.boostVal.equals(other.boostVal);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n  if (!super.equals(o)) return false;\n    BoostedQuery other = (BoostedQuery)o;\n    return this.q.equals(other.q)\n           && this.boostVal.equals(other.boostVal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n  if (!super.equals(o)) return false;\n    BoostedQuery other = (BoostedQuery)o;\n    return this.q.equals(other.q)\n           && this.boostVal.equals(other.boostVal);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n  if (!super.equals(o)) return false;\n    BoostedQuery other = (BoostedQuery)o;\n    return this.q.equals(other.q)\n           && this.boostVal.equals(other.boostVal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n  if (!super.equals(o)) return false;\n    BoostedQuery other = (BoostedQuery)o;\n    return this.q.equals(other.q)\n           && this.boostVal.equals(other.boostVal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n  if (!super.equals(o)) return false;\n    BoostedQuery other = (BoostedQuery)o;\n    return this.q.equals(other.q)\n           && this.boostVal.equals(other.boostVal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a82662cae660e76ded4de1e9b451633e523d83e1","date":1513619223,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery#equals(Object).mjava","sourceNew":null,"sourceOld":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c58863d680ae57b0fd0570d8b452842654fb073b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a82662cae660e76ded4de1e9b451633e523d83e1":["0e7bc21595222ae4f75509300fbb7726691f387f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["c58863d680ae57b0fd0570d8b452842654fb073b"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["c58863d680ae57b0fd0570d8b452842654fb073b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["19275ba31e621f6da1b83bf13af75233876fd3d4","0e7bc21595222ae4f75509300fbb7726691f387f"],"ef0d8a69209261514c5739c770bba706c2308450":["b89678825b68eccaf09e6ab71675fc0b0af1e099","c58863d680ae57b0fd0570d8b452842654fb073b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a82662cae660e76ded4de1e9b451633e523d83e1"]},"commit2Childs":{"c58863d680ae57b0fd0570d8b452842654fb073b":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4","ef0d8a69209261514c5739c770bba706c2308450"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c58863d680ae57b0fd0570d8b452842654fb073b","ef0d8a69209261514c5739c770bba706c2308450"],"a82662cae660e76ded4de1e9b451633e523d83e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"0e7bc21595222ae4f75509300fbb7726691f387f":["a82662cae660e76ded4de1e9b451633e523d83e1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"ef0d8a69209261514c5739c770bba706c2308450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}