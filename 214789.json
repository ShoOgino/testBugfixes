{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchStemmer#substitute(StringBuffer).mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchStemmer#substitute(StringBuffer).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer#substitute(StringBuffer).mjava","sourceNew":"  /**\n   * Substitute ä, ë, ï, ö, ü, á , é, í, ó, ú\n   */\n  private void substitute(StringBuffer buffer) {\n    for (int i = 0; i < buffer.length(); i++) {\n      switch (buffer.charAt(i)) {\n        case 'ä':\n        case 'á':\n          {\n            buffer.setCharAt(i, 'a');\n            break;\n          }\n        case 'ë':\n        case 'é':\n          {\n            buffer.setCharAt(i, 'e');\n            break;\n          }\n        case 'ü':\n        case 'ú':\n          {\n            buffer.setCharAt(i, 'u');\n            break;\n          }\n        case 'ï':\n        case 'i':\n          {\n            buffer.setCharAt(i, 'i');\n            break;\n          }\n        case 'ö':\n        case 'ó':\n          {\n            buffer.setCharAt(i, 'o');\n            break;\n          }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Substitute ä, ë, ï, ö, ü, á , é, í, ó, ú\n   */\n  private void substitute(StringBuffer buffer) {\n    for (int i = 0; i < buffer.length(); i++) {\n      switch (buffer.charAt(i)) {\n        case 'ä':\n        case 'á':\n          {\n            buffer.setCharAt(i, 'a');\n            break;\n          }\n        case 'ë':\n        case 'é':\n          {\n            buffer.setCharAt(i, 'e');\n            break;\n          }\n        case 'ü':\n        case 'ú':\n          {\n            buffer.setCharAt(i, 'u');\n            break;\n          }\n        case 'ï':\n        case 'i':\n          {\n            buffer.setCharAt(i, 'i');\n            break;\n          }\n        case 'ö':\n        case 'ó':\n          {\n            buffer.setCharAt(i, 'o');\n            break;\n          }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c","date":1254521470,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchStemmer#substitute(StringBuilder).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchStemmer#substitute(StringBuffer).mjava","sourceNew":"  /**\n   * Substitute ä, ë, ï, ö, ü, á , é, í, ó, ú\n   */\n  private void substitute(StringBuilder buffer) {\n    for (int i = 0; i < buffer.length(); i++) {\n      switch (buffer.charAt(i)) {\n        case 'ä':\n        case 'á':\n          {\n            buffer.setCharAt(i, 'a');\n            break;\n          }\n        case 'ë':\n        case 'é':\n          {\n            buffer.setCharAt(i, 'e');\n            break;\n          }\n        case 'ü':\n        case 'ú':\n          {\n            buffer.setCharAt(i, 'u');\n            break;\n          }\n        case 'ï':\n        case 'i':\n          {\n            buffer.setCharAt(i, 'i');\n            break;\n          }\n        case 'ö':\n        case 'ó':\n          {\n            buffer.setCharAt(i, 'o');\n            break;\n          }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Substitute ä, ë, ï, ö, ü, á , é, í, ó, ú\n   */\n  private void substitute(StringBuffer buffer) {\n    for (int i = 0; i < buffer.length(); i++) {\n      switch (buffer.charAt(i)) {\n        case 'ä':\n        case 'á':\n          {\n            buffer.setCharAt(i, 'a');\n            break;\n          }\n        case 'ë':\n        case 'é':\n          {\n            buffer.setCharAt(i, 'e');\n            break;\n          }\n        case 'ü':\n        case 'ú':\n          {\n            buffer.setCharAt(i, 'u');\n            break;\n          }\n        case 'ï':\n        case 'i':\n          {\n            buffer.setCharAt(i, 'i');\n            break;\n          }\n        case 'ö':\n        case 'ó':\n          {\n            buffer.setCharAt(i, 'o');\n            break;\n          }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}