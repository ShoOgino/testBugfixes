{"path":"lucene/core/src/java/org/apache/lucene/util/BitSet#leapFrog(DocIdSetIterator,LeapFrogCallBack).mjava","commits":[{"id":"22aee0e0ecb0d10ebe6ce415b293e64ccf1c0e4b","date":1414400081,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BitSet#leapFrog(DocIdSetIterator,LeapFrogCallBack).mjava","pathOld":"/dev/null","sourceNew":"  /** Performs a leap frog between this and the provided iterator in order to find common documents. */\n  private void leapFrog(DocIdSetIterator iter, LeapFrogCallBack callback) throws IOException {\n    final int length = length();\n    int bitSetDoc = -1;\n    int disiDoc = iter.nextDoc();\n    while (true) {\n      // invariant: bitSetDoc <= disiDoc\n      assert bitSetDoc <= disiDoc;\n      if (disiDoc >= length) {\n        callback.finish();\n        return;\n      }\n      if (bitSetDoc < disiDoc) {\n        bitSetDoc = nextSetBit(disiDoc);\n      }\n      if (bitSetDoc == disiDoc) {\n        callback.onMatch(bitSetDoc);\n        disiDoc = iter.nextDoc();\n      } else {\n        disiDoc = iter.advance(bitSetDoc);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"099c774ddd27f4ad437ca5df14d153bab0a3affe","date":1424527689,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/BitSet#leapFrog(DocIdSetIterator,LeapFrogCallBack).mjava","sourceNew":null,"sourceOld":"  /** Performs a leap frog between this and the provided iterator in order to find common documents. */\n  private void leapFrog(DocIdSetIterator iter, LeapFrogCallBack callback) throws IOException {\n    final int length = length();\n    int bitSetDoc = -1;\n    int disiDoc = iter.nextDoc();\n    while (true) {\n      // invariant: bitSetDoc <= disiDoc\n      assert bitSetDoc <= disiDoc;\n      if (disiDoc >= length) {\n        callback.finish();\n        return;\n      }\n      if (bitSetDoc < disiDoc) {\n        bitSetDoc = nextSetBit(disiDoc);\n      }\n      if (bitSetDoc == disiDoc) {\n        callback.onMatch(bitSetDoc);\n        disiDoc = iter.nextDoc();\n      } else {\n        disiDoc = iter.advance(bitSetDoc);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"099c774ddd27f4ad437ca5df14d153bab0a3affe":["22aee0e0ecb0d10ebe6ce415b293e64ccf1c0e4b"],"22aee0e0ecb0d10ebe6ce415b293e64ccf1c0e4b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["099c774ddd27f4ad437ca5df14d153bab0a3affe"]},"commit2Childs":{"099c774ddd27f4ad437ca5df14d153bab0a3affe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"22aee0e0ecb0d10ebe6ce415b293e64ccf1c0e4b":["099c774ddd27f4ad437ca5df14d153bab0a3affe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22aee0e0ecb0d10ebe6ce415b293e64ccf1c0e4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}