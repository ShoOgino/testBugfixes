{"path":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#checkStddevs(ArrayList[Double],ArrayList[Double]).mjava","commits":[{"id":"ff403346522eaa9de75403763e297e83a3ea585c","date":1384904731,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#checkStddevs(ArrayList[Double],ArrayList[Double]).mjava","pathOld":"/dev/null","sourceNew":"  private boolean checkStddevs(ArrayList<Double> list1, ArrayList<Double> list2) {\n    boolean b = true;\n    for (int i = 0; i<list1.size() && b; i++) {\n      b = b && (Math.abs(list1.get(i)-list2.get(i))<.00000000001);\n    }\n    return b;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad2513ee0db0cc50a31af45e8acb305599d51de8","date":1385433738,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#checkStddevs(ArrayList[Double],ArrayList[Double]).mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#checkStddevs(ArrayList[Double],ArrayList[Double]).mjava","sourceNew":"  private boolean checkStddevs(ArrayList<Double> list1, ArrayList<Double> list2) {\n    for (int i = 0; i<list1.size(); i++) {\n      if ((Math.abs(list1.get(i)-list2.get(i))<.00000000001) == false) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  private boolean checkStddevs(ArrayList<Double> list1, ArrayList<Double> list2) {\n    boolean b = true;\n    for (int i = 0; i<list1.size() && b; i++) {\n      b = b && (Math.abs(list1.get(i)-list2.get(i))<.00000000001);\n    }\n    return b;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c0586e0570de2261142e339891d57c0f36f45c6","date":1385565864,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#checkStddevs(ArrayList[Double],ArrayList[Double]).mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#checkStddevs(ArrayList[Double],ArrayList[Double]).mjava","sourceNew":"  private void checkStddevs(ArrayList<Double> list1, ArrayList<Double> list2) {\n    for (int i = 0; i<list1.size(); i++) {\n      if ((Math.abs(list1.get(i)-list2.get(i))<.00000000001) == false) {\n        assertEquals(getRawResponse(), list1.get(i), list2.get(i), 0.00000000001);\n      }\n    }\n  }\n\n","sourceOld":"  private boolean checkStddevs(ArrayList<Double> list1, ArrayList<Double> list2) {\n    for (int i = 0; i<list1.size(); i++) {\n      if ((Math.abs(list1.get(i)-list2.get(i))<.00000000001) == false) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":["645e9dc687d04dbe961b35c0f3a305c48e892615"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#checkStddevs(ArrayList[Double],ArrayList[Double]).mjava","pathOld":"/dev/null","sourceNew":"  private void checkStddevs(ArrayList<Double> list1, ArrayList<Double> list2) {\n    for (int i = 0; i<list1.size(); i++) {\n      if ((Math.abs(list1.get(i)-list2.get(i))<.00000000001) == false) {\n        assertEquals(getRawResponse(), list1.get(i), list2.get(i), 0.00000000001);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"645e9dc687d04dbe961b35c0f3a305c48e892615","date":1396352607,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#checkStddevs(ArrayList[Double],ArrayList[Double]).mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#checkStddevs(ArrayList[Double],ArrayList[Double]).mjava","sourceNew":"  private void checkStddevs(ArrayList<Double> list1, ArrayList<Double> list2) {\n    Collections.sort(list1);\n    Collections.sort(list2);\n    for (int i = 0; i<list1.size(); i++) {\n      if ((Math.abs(list1.get(i)-list2.get(i))<.00000000001) == false) {\n        Assert.assertEquals(getRawResponse(), list1.get(i), list2.get(i), 0.00000000001);\n      }\n    }\n  }\n\n","sourceOld":"  private void checkStddevs(ArrayList<Double> list1, ArrayList<Double> list2) {\n    for (int i = 0; i<list1.size(); i++) {\n      if ((Math.abs(list1.get(i)-list2.get(i))<.00000000001) == false) {\n        assertEquals(getRawResponse(), list1.get(i), list2.get(i), 0.00000000001);\n      }\n    }\n  }\n\n","bugFix":["1c0586e0570de2261142e339891d57c0f36f45c6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#checkStddevs(ArrayList[Double],ArrayList[Double]).mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#checkStddevs(ArrayList[Double],ArrayList[Double]).mjava","sourceNew":"  private void checkStddevs(ArrayList<Double> list1, ArrayList<Double> list2) {\n    Collections.sort(list1);\n    Collections.sort(list2);\n    for (int i = 0; i<list1.size(); i++) {\n      if ((Math.abs(list1.get(i)-list2.get(i))<.00000000001) == false) {\n        Assert.assertEquals(getRawResponse(), list1.get(i), list2.get(i), 0.00000000001);\n      }\n    }\n  }\n\n","sourceOld":"  private void checkStddevs(ArrayList<Double> list1, ArrayList<Double> list2) {\n    for (int i = 0; i<list1.size(); i++) {\n      if ((Math.abs(list1.get(i)-list2.get(i))<.00000000001) == false) {\n        assertEquals(getRawResponse(), list1.get(i), list2.get(i), 0.00000000001);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f719faa74f7213d4a395510dbc1f1b7cb178484","date":1410881394,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/FieldFacetTest#checkStddevs(ArrayList[Double],ArrayList[Double]).mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#checkStddevs(ArrayList[Double],ArrayList[Double]).mjava","sourceNew":"  private void checkStddevs(ArrayList<Double> list1, ArrayList<Double> list2) {\n    Collections.sort(list1);\n    Collections.sort(list2);\n    for (int i = 0; i<list1.size(); i++) {\n      if ((Math.abs(list1.get(i)-list2.get(i))<.00000000001) == false) {\n        Assert.assertEquals(getRawResponse(), list1.get(i), list2.get(i), 0.00000000001);\n      }\n    }\n  }\n\n","sourceOld":"  private void checkStddevs(ArrayList<Double> list1, ArrayList<Double> list2) {\n    Collections.sort(list1);\n    Collections.sort(list2);\n    for (int i = 0; i<list1.size(); i++) {\n      if ((Math.abs(list1.get(i)-list2.get(i))<.00000000001) == false) {\n        Assert.assertEquals(getRawResponse(), list1.get(i), list2.get(i), 0.00000000001);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["1c0586e0570de2261142e339891d57c0f36f45c6","645e9dc687d04dbe961b35c0f3a305c48e892615"],"ad2513ee0db0cc50a31af45e8acb305599d51de8":["ff403346522eaa9de75403763e297e83a3ea585c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1c0586e0570de2261142e339891d57c0f36f45c6"],"645e9dc687d04dbe961b35c0f3a305c48e892615":["1c0586e0570de2261142e339891d57c0f36f45c6"],"ff403346522eaa9de75403763e297e83a3ea585c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["645e9dc687d04dbe961b35c0f3a305c48e892615"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f719faa74f7213d4a395510dbc1f1b7cb178484"],"1c0586e0570de2261142e339891d57c0f36f45c6":["ad2513ee0db0cc50a31af45e8acb305599d51de8"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"ad2513ee0db0cc50a31af45e8acb305599d51de8":["1c0586e0570de2261142e339891d57c0f36f45c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","ff403346522eaa9de75403763e297e83a3ea585c"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"645e9dc687d04dbe961b35c0f3a305c48e892615":["5eb2511ababf862ea11e10761c70ee560cd84510","0f719faa74f7213d4a395510dbc1f1b7cb178484"],"ff403346522eaa9de75403763e297e83a3ea585c":["ad2513ee0db0cc50a31af45e8acb305599d51de8"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1c0586e0570de2261142e339891d57c0f36f45c6":["5eb2511ababf862ea11e10761c70ee560cd84510","74f45af4339b0daf7a95c820ab88c1aea74fbce0","645e9dc687d04dbe961b35c0f3a305c48e892615"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}