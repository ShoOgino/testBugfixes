{"path":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,TermContext).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,TermContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,TermContext).mjava","sourceNew":"    public TermWeight(IndexSearcher searcher, TermContext termStates)\n      throws IOException {\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarity();\n      this.stats = similarity.computeWeight(\n          getBoost(), \n          searcher.collectionStatistics(term.field()), \n          searcher.termStatistics(term, termStates));\n    }\n\n","sourceOld":"    public TermWeight(IndexSearcher searcher, TermContext termStates)\n      throws IOException {\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarity();\n      this.stats = similarity.computeWeight(\n          getBoost(), \n          searcher.collectionStatistics(term.field()), \n          searcher.termStatistics(term, termStates));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,TermContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,TermContext).mjava","sourceNew":"    public TermWeight(IndexSearcher searcher, TermContext termStates)\n        throws IOException {\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarity();\n      this.stats = similarity.computeWeight(getBoost(),\n          searcher.collectionStatistics(term.field()),\n          searcher.termStatistics(term, termStates));\n    }\n\n","sourceOld":"    public TermWeight(IndexSearcher searcher, TermContext termStates)\n      throws IOException {\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarity();\n      this.stats = similarity.computeWeight(\n          getBoost(), \n          searcher.collectionStatistics(term.field()), \n          searcher.termStatistics(term, termStates));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,boolean,TermContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,TermContext).mjava","sourceNew":"    public TermWeight(IndexSearcher searcher, boolean needsScores, TermContext termStates)\n        throws IOException {\n      super(TermQuery.this);\n      this.needsScores = needsScores;\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarity();\n      this.stats = similarity.computeWeight(getBoost(),\n          searcher.collectionStatistics(term.field()),\n          searcher.termStatistics(term, termStates));\n    }\n\n","sourceOld":"    public TermWeight(IndexSearcher searcher, TermContext termStates)\n        throws IOException {\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarity();\n      this.stats = similarity.computeWeight(getBoost(),\n          searcher.collectionStatistics(term.field()),\n          searcher.termStatistics(term, termStates));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb17639909a369c1e64866842e5c213440acc17e":["51f5280f31484820499077f41fcdfe92d527d9dc"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"51f5280f31484820499077f41fcdfe92d527d9dc":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb17639909a369c1e64866842e5c213440acc17e"]},"commit2Childs":{"fb17639909a369c1e64866842e5c213440acc17e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["51f5280f31484820499077f41fcdfe92d527d9dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"51f5280f31484820499077f41fcdfe92d527d9dc":["fb17639909a369c1e64866842e5c213440acc17e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}