{"path":"solr/core/src/test/org/apache/solr/cloud/TestTolerantUpdateProcessorCloud#assertUpdateTolerantAddErrors(String,UpdateResponse,String...).mjava","commits":[{"id":"f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef","date":1458928975,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTolerantUpdateProcessorCloud#assertUpdateTolerantAddErrors(String,UpdateResponse,String...).mjava","pathOld":"/dev/null","sourceNew":"  /** convinience method when the only type of errors you expect are 'add' errors */\n  public static void assertUpdateTolerantAddErrors(String assertionMsgPrefix,\n                                                   UpdateResponse response,\n                                                   String... errorIdsExpected) {\n    ExpectedErr[] expected = new ExpectedErr[errorIdsExpected.length];\n    for (int i = 0; i < expected.length; i++) {\n      expected[i] = addErr(errorIdsExpected[i]);\n    }\n    assertUpdateTolerantErrors(assertionMsgPrefix, response, expected);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef"],"f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}