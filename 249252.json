{"path":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","commits":[{"id":"c750c9942b5f894af0f235b503bec55f2db8d1d3","date":1329857574,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","pathOld":"/dev/null","sourceNew":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","pathOld":"/dev/null","sourceNew":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","sourceNew":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3802d95c3a31be21ea2971945049b711d95ef8d5","date":1455055616,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","sourceNew":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"\n        };\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"\n          };\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null || \"uif\".equals(method)) {// there is no support \n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["550bbe5ffcdb614551686767f4d5a6ee38ef3e85"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3c64189697927b548f74ba66dfa5051548662938","date":1455059336,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","sourceNew":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"\n        };\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"\n          };\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null || \"uif\".equals(method)) {// there is no support \n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"550bbe5ffcdb614551686767f4d5a6ee38ef3e85","date":1457221653,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","sourceNew":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"\n        };\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"\n          };\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"\n        };\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"\n          };\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null || \"uif\".equals(method)) {// there is no support \n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","bugFix":["3802d95c3a31be21ea2971945049b711d95ef8d5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39342cb658ac11dfcbf4459807fb00eb9ada0218","date":1472876688,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","sourceNew":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"\n        };\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"\n          };\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc8f206328a706450934717bec7ccc22ad166fc0","date":1473142172,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","sourceNew":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"\n        };\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"\n          };\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89424def13674ea17829b41c5883c54ecc31a132","date":1473767373,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","sourceNew":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"\n        };\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"\n          };\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","sourceNew":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"\n        };\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"\n          };\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","sourceNew":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"\n        };\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"\n          };\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"351efe6fdecf9af62134d37ec2582e4a0331a4dc","date":1498149096,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","sourceNew":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"facet.mincount\",\"1\",\"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","sourceNew":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"facet.mincount\",\"1\",\"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","sourceNew":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"facet.mincount\",\"1\",\"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3714bcf66a68a1600e9dd11442fc1b33b62ef088","date":1556832005,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","sourceNew":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) fromJSONString(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"facet.mincount\",\"1\",\"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"facet.mincount\",\"1\",\"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doEmptyFacetCounts(String,String[]).mjava","sourceNew":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    @SuppressWarnings({\"rawtypes\"})\n    Map rsp = (Map) fromJSONString(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"facet.mincount\",\"1\",\"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  static void doEmptyFacetCounts(String field, String[] prefixes) throws Exception {\n    SchemaField sf = h.getCore().getLatestSchema().getField(field);\n\n    String response = JQ(req(\"q\", \"*:*\"));\n    Map rsp = (Map) fromJSONString(response);\n    Long numFound  = (Long)(((Map)rsp.get(\"response\")).get(\"numFound\"));\n\n    ModifiableSolrParams params = params(\"q\",\"*:*\", \"facet.mincount\",\"1\",\"rows\",\"0\", \"facet\",\"true\", \"facet.field\",\"{!key=myalias}\"+field);\n    \n    String[] methods = {null, \"fc\",\"enum\",\"fcs\", \"uif\"};\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      methods = new String[]{null, \"fc\",\"enum\", \"uif\"};\n    }\n\n    prefixes = prefixes==null ? new String[]{null} : prefixes;\n\n\n    for (String method : methods) {\n      if (method == null) {\n        params.remove(\"facet.method\");\n      } else {\n        params.set(\"facet.method\", method);\n      }\n      for (String prefix : prefixes) {\n        if (prefix == null) {\n          params.remove(\"facet.prefix\");\n        } else {\n          params.set(\"facet.prefix\", prefix);\n        }\n\n        for (String missing : new String[] {null, \"true\"}) {\n          if (missing == null) {\n            params.remove(\"facet.missing\");\n          } else {\n            params.set(\"facet.missing\", missing);\n          }\n          \n          String expected = missing==null ? \"[]\" : \"[null,\" + numFound + \"]\";\n          \n          assertJQ(req(params),\n              \"/facet_counts/facet_fields/myalias==\" + expected);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"351efe6fdecf9af62134d37ec2582e4a0331a4dc":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c750c9942b5f894af0f235b503bec55f2db8d1d3"],"3714bcf66a68a1600e9dd11442fc1b33b62ef088":["28288370235ed02234a64753cdbf0c6ec096304a"],"3c64189697927b548f74ba66dfa5051548662938":["08970e5b8411182a29412c177eff67ec1110095b","3802d95c3a31be21ea2971945049b711d95ef8d5"],"bc8f206328a706450934717bec7ccc22ad166fc0":["550bbe5ffcdb614551686767f4d5a6ee38ef3e85","39342cb658ac11dfcbf4459807fb00eb9ada0218"],"39342cb658ac11dfcbf4459807fb00eb9ada0218":["550bbe5ffcdb614551686767f4d5a6ee38ef3e85"],"550bbe5ffcdb614551686767f4d5a6ee38ef3e85":["3c64189697927b548f74ba66dfa5051548662938"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","351efe6fdecf9af62134d37ec2582e4a0331a4dc"],"28288370235ed02234a64753cdbf0c6ec096304a":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","351efe6fdecf9af62134d37ec2582e4a0331a4dc"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["550bbe5ffcdb614551686767f4d5a6ee38ef3e85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"08970e5b8411182a29412c177eff67ec1110095b":["c750c9942b5f894af0f235b503bec55f2db8d1d3"],"89424def13674ea17829b41c5883c54ecc31a132":["550bbe5ffcdb614551686767f4d5a6ee38ef3e85","bc8f206328a706450934717bec7ccc22ad166fc0"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["3714bcf66a68a1600e9dd11442fc1b33b62ef088"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["550bbe5ffcdb614551686767f4d5a6ee38ef3e85","89424def13674ea17829b41c5883c54ecc31a132"],"c750c9942b5f894af0f235b503bec55f2db8d1d3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"3802d95c3a31be21ea2971945049b711d95ef8d5":["08970e5b8411182a29412c177eff67ec1110095b"]},"commit2Childs":{"351efe6fdecf9af62134d37ec2582e4a0331a4dc":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"3714bcf66a68a1600e9dd11442fc1b33b62ef088":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"3c64189697927b548f74ba66dfa5051548662938":["550bbe5ffcdb614551686767f4d5a6ee38ef3e85"],"bc8f206328a706450934717bec7ccc22ad166fc0":["89424def13674ea17829b41c5883c54ecc31a132"],"39342cb658ac11dfcbf4459807fb00eb9ada0218":["bc8f206328a706450934717bec7ccc22ad166fc0"],"550bbe5ffcdb614551686767f4d5a6ee38ef3e85":["bc8f206328a706450934717bec7ccc22ad166fc0","39342cb658ac11dfcbf4459807fb00eb9ada0218","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","89424def13674ea17829b41c5883c54ecc31a132","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["3714bcf66a68a1600e9dd11442fc1b33b62ef088"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"08970e5b8411182a29412c177eff67ec1110095b":["3c64189697927b548f74ba66dfa5051548662938","3802d95c3a31be21ea2971945049b711d95ef8d5"],"89424def13674ea17829b41c5883c54ecc31a132":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["351efe6fdecf9af62134d37ec2582e4a0331a4dc","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","c750c9942b5f894af0f235b503bec55f2db8d1d3"],"c750c9942b5f894af0f235b503bec55f2db8d1d3":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","08970e5b8411182a29412c177eff67ec1110095b"],"3802d95c3a31be21ea2971945049b711d95ef8d5":["3c64189697927b548f74ba66dfa5051548662938"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}