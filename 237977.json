{"path":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/WordlistLoader#getWordtable(File).mjava","commits":[{"id":"7c9cc1cf78edc774cdf339bab3ae62f077929607","date":1072205195,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/WordlistLoader#getWordtable(File).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * @param wordfile  File containing the wordlist.\n\t */\n\tpublic static Hashtable getWordtable( File wordfile ) {\n\t\tif ( wordfile == null ) {\n\t\t\treturn new Hashtable();\n\t\t}\n\t\tHashtable result = null;\n\t\ttry {\n\t\t\tLineNumberReader lnr = new LineNumberReader( new FileReader( wordfile ) );\n\t\t\tString word = null;\n\t\t\tString[] stopwords = new String[100];\n\t\t\tint wordcount = 0;\n\t\t\twhile ( ( word = lnr.readLine() ) != null ) {\n\t\t\t\twordcount++;\n\t\t\t\tif ( wordcount == stopwords.length ) {\n\t\t\t\t\tString[] tmp = new String[stopwords.length + 50];\n\t\t\t\t\tSystem.arraycopy( stopwords, 0, tmp, 0, wordcount );\n\t\t\t\t\tstopwords = tmp;\n\t\t\t\t}\n\t\t\t\tstopwords[wordcount] = word;\n\t\t\t}\n\t\t\tresult = makeWordTable( stopwords, wordcount );\n\t\t}\n\t\t// On error, use an empty table.\n\t\tcatch ( IOException e ) {\n\t\t\tresult = new Hashtable();\n\t\t}\n\t\treturn result;\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f66d9f3ba7794c3d51c29be7ec77f359f7383bf","date":1074547218,"type":4,"author":"Erik Hatcher","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/WordlistLoader#getWordtable(File).mjava","sourceNew":null,"sourceOld":"\t/**\n\t * @param wordfile  File containing the wordlist.\n\t */\n\tpublic static Hashtable getWordtable( File wordfile ) {\n\t\tif ( wordfile == null ) {\n\t\t\treturn new Hashtable();\n\t\t}\n\t\tHashtable result = null;\n\t\ttry {\n\t\t\tLineNumberReader lnr = new LineNumberReader( new FileReader( wordfile ) );\n\t\t\tString word = null;\n\t\t\tString[] stopwords = new String[100];\n\t\t\tint wordcount = 0;\n\t\t\twhile ( ( word = lnr.readLine() ) != null ) {\n\t\t\t\twordcount++;\n\t\t\t\tif ( wordcount == stopwords.length ) {\n\t\t\t\t\tString[] tmp = new String[stopwords.length + 50];\n\t\t\t\t\tSystem.arraycopy( stopwords, 0, tmp, 0, wordcount );\n\t\t\t\t\tstopwords = tmp;\n\t\t\t\t}\n\t\t\t\tstopwords[wordcount] = word;\n\t\t\t}\n\t\t\tresult = makeWordTable( stopwords, wordcount );\n\t\t}\n\t\t// On error, use an empty table.\n\t\tcatch ( IOException e ) {\n\t\t\tresult = new Hashtable();\n\t\t}\n\t\treturn result;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6f66d9f3ba7794c3d51c29be7ec77f359f7383bf":["7c9cc1cf78edc774cdf339bab3ae62f077929607"],"7c9cc1cf78edc774cdf339bab3ae62f077929607":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6f66d9f3ba7794c3d51c29be7ec77f359f7383bf"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c9cc1cf78edc774cdf339bab3ae62f077929607"],"6f66d9f3ba7794c3d51c29be7ec77f359f7383bf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c9cc1cf78edc774cdf339bab3ae62f077929607":["6f66d9f3ba7794c3d51c29be7ec77f359f7383bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}