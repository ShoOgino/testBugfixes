{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/SuggestField#buildSuggestPayload(BytesRef,long,char).mjava","commits":[{"id":"07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a","date":1427495869,"type":0,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/SuggestField#buildSuggestPayload(BytesRef,long,char).mjava","pathOld":"/dev/null","sourceNew":"  private BytesRef buildSuggestPayload(BytesRef surfaceForm, long weight, char sepLabel) throws IOException {\n    for (int i = 0; i < surfaceForm.length; i++) {\n      if (surfaceForm.bytes[i] == sepLabel) {\n        assert sepLabel == '\\u001f';\n        throw new IllegalArgumentException(\n            \"surface form cannot contain unit separator character U+001F; this character is reserved\");\n      }\n    }\n    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n    try (OutputStreamDataOutput output = new OutputStreamDataOutput(byteArrayOutputStream)) {\n      output.writeVInt(surfaceForm.length);\n      output.writeBytes(surfaceForm.bytes, surfaceForm.offset, surfaceForm.length);\n      output.writeVLong(weight + 1);\n    }\n    return new BytesRef(byteArrayOutputStream.toByteArray());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/SuggestField#buildSuggestPayload(BytesRef,long,char).mjava","pathOld":"/dev/null","sourceNew":"  private BytesRef buildSuggestPayload(BytesRef surfaceForm, long weight, char sepLabel) throws IOException {\n    for (int i = 0; i < surfaceForm.length; i++) {\n      if (surfaceForm.bytes[i] == sepLabel) {\n        assert sepLabel == '\\u001f';\n        throw new IllegalArgumentException(\n            \"surface form cannot contain unit separator character U+001F; this character is reserved\");\n      }\n    }\n    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n    try (OutputStreamDataOutput output = new OutputStreamDataOutput(byteArrayOutputStream)) {\n      output.writeVInt(surfaceForm.length);\n      output.writeBytes(surfaceForm.bytes, surfaceForm.offset, surfaceForm.length);\n      output.writeVLong(weight + 1);\n    }\n    return new BytesRef(byteArrayOutputStream.toByteArray());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c33f6677a2078739058f81eca1df69d12cd62b0","date":1432799589,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/SuggestField#buildSuggestPayload().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/SuggestField#buildSuggestPayload(BytesRef,long,char).mjava","sourceNew":"  private BytesRef buildSuggestPayload() throws IOException {\n    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n    try (OutputStreamDataOutput output = new OutputStreamDataOutput(byteArrayOutputStream)) {\n      output.writeVInt(surfaceForm.length);\n      output.writeBytes(surfaceForm.bytes, surfaceForm.offset, surfaceForm.length);\n      output.writeVInt(weight + 1);\n      output.writeByte(type());\n    }\n    return new BytesRef(byteArrayOutputStream.toByteArray());\n  }\n\n","sourceOld":"  private BytesRef buildSuggestPayload(BytesRef surfaceForm, long weight, char sepLabel) throws IOException {\n    for (int i = 0; i < surfaceForm.length; i++) {\n      if (surfaceForm.bytes[i] == sepLabel) {\n        assert sepLabel == '\\u001f';\n        throw new IllegalArgumentException(\n            \"surface form cannot contain unit separator character U+001F; this character is reserved\");\n      }\n    }\n    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n    try (OutputStreamDataOutput output = new OutputStreamDataOutput(byteArrayOutputStream)) {\n      output.writeVInt(surfaceForm.length);\n      output.writeBytes(surfaceForm.bytes, surfaceForm.offset, surfaceForm.length);\n      output.writeVLong(weight + 1);\n    }\n    return new BytesRef(byteArrayOutputStream.toByteArray());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a"],"07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8c33f6677a2078739058f81eca1df69d12cd62b0":["07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8c33f6677a2078739058f81eca1df69d12cd62b0"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","8c33f6677a2078739058f81eca1df69d12cd62b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}