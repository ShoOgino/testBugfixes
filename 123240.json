{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoUtils#normalizeLon(double).mjava","commits":[{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoUtils#normalizeLon(double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/util/GeoUtils#normalizeLon(double).mjava","sourceNew":"  /** Puts longitude in range of -180 to +180. */\n  public static double normalizeLon(double lon_deg) {\n    if (lon_deg >= -180 && lon_deg <= 180) {\n      return lon_deg; //common case, and avoids slight double precision shifting\n    }\n    double off = (lon_deg + 180) % 360;\n    if (off < 0) {\n      return 180 + off;\n    } else if (off == 0 && lon_deg > 0) {\n      return 180;\n    } else {\n      return -180 + off;\n    }\n  }\n\n","sourceOld":"  /**\n   * Puts longitude in range of -180 to +180.\n   */\n  public static double normalizeLon(double lon_deg) {\n    if (lon_deg >= -180 && lon_deg <= 180) {\n      return lon_deg; //common case, and avoids slight double precision shifting\n    }\n    double off = (lon_deg + 180) % 360;\n    if (off < 0) {\n      return 180 + off;\n    } else if (off == 0 && lon_deg > 0) {\n      return 180;\n    } else {\n      return -180 + off;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoUtils#normalizeLon(double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/util/GeoUtils#normalizeLon(double).mjava","sourceNew":"  /** Puts longitude in range of -180 to +180. */\n  public static double normalizeLon(double lon_deg) {\n    if (lon_deg >= -180 && lon_deg <= 180) {\n      return lon_deg; //common case, and avoids slight double precision shifting\n    }\n    double off = (lon_deg + 180) % 360;\n    if (off < 0) {\n      return 180 + off;\n    } else if (off == 0 && lon_deg > 0) {\n      return 180;\n    } else {\n      return -180 + off;\n    }\n  }\n\n","sourceOld":"  /**\n   * Puts longitude in range of -180 to +180.\n   */\n  public static double normalizeLon(double lon_deg) {\n    if (lon_deg >= -180 && lon_deg <= 180) {\n      return lon_deg; //common case, and avoids slight double precision shifting\n    }\n    double off = (lon_deg + 180) % 360;\n    if (off < 0) {\n      return 180 + off;\n    } else if (off == 0 && lon_deg > 0) {\n      return 180;\n    } else {\n      return -180 + off;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca8abb1a4010d2a9e71b0162d3600e898a8a4f56","date":1458685284,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#normalizeLon(double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoUtils#normalizeLon(double).mjava","sourceNew":"  /** Puts longitude in range of -180 to +180. */\n  public static double normalizeLon(double lon_deg) {\n    if (lon_deg >= -180 && lon_deg <= 180) {\n      return lon_deg; //common case, and avoids slight double precision shifting\n    }\n    double off = (lon_deg + 180) % 360;\n    if (off < 0) {\n      return 180 + off;\n    } else if (off == 0 && lon_deg > 0) {\n      return 180;\n    } else {\n      return -180 + off;\n    }\n  }\n\n","sourceOld":"  /** Puts longitude in range of -180 to +180. */\n  public static double normalizeLon(double lon_deg) {\n    if (lon_deg >= -180 && lon_deg <= 180) {\n      return lon_deg; //common case, and avoids slight double precision shifting\n    }\n    double off = (lon_deg + 180) % 360;\n    if (off < 0) {\n      return 180 + off;\n    } else if (off == 0 && lon_deg > 0) {\n      return 180;\n    } else {\n      return -180 + off;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ca8abb1a4010d2a9e71b0162d3600e898a8a4f56":["937923083e4d137932336fc80f3d78758ff698a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","937923083e4d137932336fc80f3d78758ff698a6"],"937923083e4d137932336fc80f3d78758ff698a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ca8abb1a4010d2a9e71b0162d3600e898a8a4f56"]},"commit2Childs":{"ca8abb1a4010d2a9e71b0162d3600e898a8a4f56":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","937923083e4d137932336fc80f3d78758ff698a6"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"937923083e4d137932336fc80f3d78758ff698a6":["ca8abb1a4010d2a9e71b0162d3600e898a8a4f56","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}