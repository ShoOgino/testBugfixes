{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","commits":[{"id":"687e86054415a85f912c6eaa38f995038e5c1cd8","date":1336447427,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/BaseTokenStreamFactory#getWordSet(ResourceLoader,String,boolean).mjava","sourceNew":"  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion,\n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = loader.getLines(file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","sourceOld":"  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = StrUtils.splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion, \n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = loader.getLines(file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de6b1e414481e1c25c32f310b02a6d192f7f9faa","date":1343310208,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","sourceNew":"  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion,\n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","sourceOld":"  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion,\n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = loader.getLines(file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","sourceNew":"  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion,\n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","sourceOld":"  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion,\n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = loader.getLines(file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","sourceNew":"  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion,\n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","sourceOld":"  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion,\n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = loader.getLines(file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9a3ed419c1884f0e54e360fb84804e574c21ac","date":1346127290,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","sourceNew":"  /**\n   * Returns as {@link CharArraySet} from wordFiles, which\n   * can be a comma-separated list of filenames\n   */\n  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion,\n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","sourceOld":"  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion,\n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","sourceNew":"  /**\n   * Returns as {@link CharArraySet} from wordFiles, which\n   * can be a comma-separated list of filenames\n   */\n  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion,\n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","sourceOld":"  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion,\n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","sourceNew":"  /**\n   * Returns as {@link CharArraySet} from wordFiles, which\n   * can be a comma-separated list of filenames\n   */\n  protected final CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion,\n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","sourceOld":"  /**\n   * Returns as {@link CharArraySet} from wordFiles, which\n   * can be a comma-separated list of filenames\n   */\n  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion,\n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","sourceNew":"  /**\n   * Returns as {@link CharArraySet} from wordFiles, which\n   * can be a comma-separated list of filenames\n   */\n  protected final CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(wlist, ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","sourceOld":"  /**\n   * Returns as {@link CharArraySet} from wordFiles, which\n   * can be a comma-separated list of filenames\n   */\n  protected final CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion,\n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","sourceNew":"  /**\n   * Returns as {@link CharArraySet} from wordFiles, which\n   * can be a comma-separated list of filenames\n   */\n  protected final CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion,\n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","sourceOld":"  /**\n   * Returns as {@link CharArraySet} from wordFiles, which\n   * can be a comma-separated list of filenames\n   */\n  protected final CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(wlist, ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","sourceNew":"  /**\n   * Returns as {@link CharArraySet} from wordFiles, which\n   * can be a comma-separated list of filenames\n   */\n  protected final CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(wlist, ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","sourceOld":"  /**\n   * Returns as {@link CharArraySet} from wordFiles, which\n   * can be a comma-separated list of filenames\n   */\n  protected final CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion,\n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"623b5245fbd9d5af9f458826ba9ed3d6212db24d","date":1421078865,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","sourceNew":"  /**\n   * Returns as {@link CharArraySet} from wordFiles, which\n   * can be a comma-separated list of filenames\n   */\n  protected final CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(wlist, ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","sourceOld":"  /**\n   * Returns as {@link CharArraySet} from wordFiles, which\n   * can be a comma-separated list of filenames\n   */\n  protected final CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(wlist, ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","bugFix":["9c8b12bda3f5864b27e3e04df1be4f6736ec067a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"313c36388b6cae6118f75a1860ad0ba0af7e1344","date":1601279368,"type":5,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getWordSet(ResourceLoader,String,boolean).mjava","sourceNew":"  /**\n   * Returns as {@link CharArraySet} from wordFiles, which\n   * can be a comma-separated list of filenames\n   */\n  protected final CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(wlist, ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","sourceOld":"  /**\n   * Returns as {@link CharArraySet} from wordFiles, which\n   * can be a comma-separated list of filenames\n   */\n  protected final CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    List<String> files = splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = getLines(loader, file.trim());\n        words.addAll(StopFilter.makeStopSet(wlist, ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"623b5245fbd9d5af9f458826ba9ed3d6212db24d":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"ff9a3ed419c1884f0e54e360fb84804e574c21ac":["de6b1e414481e1c25c32f310b02a6d192f7f9faa"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["ff9a3ed419c1884f0e54e360fb84804e574c21ac"],"de6b1e414481e1c25c32f310b02a6d192f7f9faa":["687e86054415a85f912c6eaa38f995038e5c1cd8"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["aba371508186796cc6151d8223a5b4e16d02e26e","ff9a3ed419c1884f0e54e360fb84804e574c21ac"],"aba371508186796cc6151d8223a5b4e16d02e26e":["687e86054415a85f912c6eaa38f995038e5c1cd8","de6b1e414481e1c25c32f310b02a6d192f7f9faa"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["623b5245fbd9d5af9f458826ba9ed3d6212db24d"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"687e86054415a85f912c6eaa38f995038e5c1cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["687e86054415a85f912c6eaa38f995038e5c1cd8","de6b1e414481e1c25c32f310b02a6d192f7f9faa"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["313c36388b6cae6118f75a1860ad0ba0af7e1344"]},"commit2Childs":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"623b5245fbd9d5af9f458826ba9ed3d6212db24d":["313c36388b6cae6118f75a1860ad0ba0af7e1344"],"ff9a3ed419c1884f0e54e360fb84804e574c21ac":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd","05a14b2611ead08655a2b2bdc61632eb31316e57"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"de6b1e414481e1c25c32f310b02a6d192f7f9faa":["ff9a3ed419c1884f0e54e360fb84804e574c21ac","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"aba371508186796cc6151d8223a5b4e16d02e26e":["05a14b2611ead08655a2b2bdc61632eb31316e57"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["623b5245fbd9d5af9f458826ba9ed3d6212db24d"],"687e86054415a85f912c6eaa38f995038e5c1cd8":["de6b1e414481e1c25c32f310b02a6d192f7f9faa","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["687e86054415a85f912c6eaa38f995038e5c1cd8"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["05a14b2611ead08655a2b2bdc61632eb31316e57","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}