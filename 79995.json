{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/QualityQueriesFinder#main(String[]).mjava","commits":[{"id":"df2d68685a69bd82bf79243e28623c0775eb7bd8","date":1185567892,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/QualityQueriesFinder#main(String[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param args {index-dir}\n   * @throws IOException  if cannot access the index.\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length<1) {\n      System.err.println(\"Usage: java QualityQueriesFinder <index-dir>\");\n      System.exit(1);\n    }\n    QualityQueriesFinder qqf = new QualityQueriesFinder(FSDirectory.getDirectory(new File(args[0])));\n    String q[] = qqf.bestQueries(\"body\",20);\n    for (int i=0; i<q.length; i++) {\n      System.out.println(newline+formatQueryAsTrecTopic(i,q[i],null,null));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba712167ee848727018d8b77aa0c273839fbe15c","date":1244411561,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/QualityQueriesFinder#main(String[]).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/QualityQueriesFinder#main(String[]).mjava","sourceNew":"  /**\n   * @param args {index-dir}\n   * @throws IOException  if cannot access the index.\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length<1) {\n      System.err.println(\"Usage: java QualityQueriesFinder <index-dir>\");\n      System.exit(1);\n    }\n    QualityQueriesFinder qqf = new QualityQueriesFinder(FSDirectory.open(new File(args[0])));\n    String q[] = qqf.bestQueries(\"body\",20);\n    for (int i=0; i<q.length; i++) {\n      System.out.println(newline+formatQueryAsTrecTopic(i,q[i],null,null));\n    }\n  }\n\n","sourceOld":"  /**\n   * @param args {index-dir}\n   * @throws IOException  if cannot access the index.\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length<1) {\n      System.err.println(\"Usage: java QualityQueriesFinder <index-dir>\");\n      System.exit(1);\n    }\n    QualityQueriesFinder qqf = new QualityQueriesFinder(FSDirectory.getDirectory(new File(args[0])));\n    String q[] = qqf.bestQueries(\"body\",20);\n    for (int i=0; i<q.length; i++) {\n      System.out.println(newline+formatQueryAsTrecTopic(i,q[i],null,null));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/QualityQueriesFinder#main(String[]).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/QualityQueriesFinder#main(String[]).mjava","sourceNew":"  /**\n   * @param args {index-dir}\n   * @throws IOException  if cannot access the index.\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length<1) {\n      System.err.println(\"Usage: java QualityQueriesFinder <index-dir>\");\n      System.exit(1);\n    }\n    QualityQueriesFinder qqf = new QualityQueriesFinder(FSDirectory.open(new File(args[0])));\n    String q[] = qqf.bestQueries(\"body\",20);\n    for (int i=0; i<q.length; i++) {\n      System.out.println(newline+formatQueryAsTrecTopic(i,q[i],null,null));\n    }\n  }\n\n","sourceOld":"  /**\n   * @param args {index-dir}\n   * @throws IOException  if cannot access the index.\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length<1) {\n      System.err.println(\"Usage: java QualityQueriesFinder <index-dir>\");\n      System.exit(1);\n    }\n    QualityQueriesFinder qqf = new QualityQueriesFinder(FSDirectory.open(new File(args[0])));\n    String q[] = qqf.bestQueries(\"body\",20);\n    for (int i=0; i<q.length; i++) {\n      System.out.println(newline+formatQueryAsTrecTopic(i,q[i],null,null));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"df2d68685a69bd82bf79243e28623c0775eb7bd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ba712167ee848727018d8b77aa0c273839fbe15c"],"ba712167ee848727018d8b77aa0c273839fbe15c":["df2d68685a69bd82bf79243e28623c0775eb7bd8"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["df2d68685a69bd82bf79243e28623c0775eb7bd8"],"df2d68685a69bd82bf79243e28623c0775eb7bd8":["ba712167ee848727018d8b77aa0c273839fbe15c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ba712167ee848727018d8b77aa0c273839fbe15c":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}