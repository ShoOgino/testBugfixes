{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonWithHole().mjava","commits":[{"id":"961aa3f803841184bcbd8a9d0533743be1323d63","date":1521994841,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonWithHole().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPolygonWithHole() {\n    ArrayList<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, -1.1, -1.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 1.0, -1.6));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 1.1, -1.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 1.0, -1.4));\n    ArrayList<GeoPoint> hole_points = new ArrayList<>();\n    hole_points.add(new GeoPoint(PlanetModel.SPHERE, -0.1, -0.5));\n    hole_points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.6));\n    hole_points.add(new GeoPoint(PlanetModel.SPHERE, 0.1, -0.5));\n    hole_points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.4));\n    \n    GeoPolygonFactory.PolygonDescription holeDescription = new GeoPolygonFactory.PolygonDescription(hole_points);\n    List<GeoPolygonFactory.PolygonDescription> holes = new ArrayList<>(1);\n    holes.add(holeDescription);\n    GeoPolygonFactory.PolygonDescription polygonDescription = new GeoPolygonFactory.PolygonDescription(points, holes);\n    \n    // Create two polygons -- one simple, the other complex.  Both have holes.  Compare their behavior.\n    GeoPolygon holeSimplePolygon = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE,polygonDescription);\n    List<GeoPolygonFactory.PolygonDescription> polys = new ArrayList<>(1);\n    polys.add(polygonDescription);\n    GeoPolygon holeComplexPolygon = GeoPolygonFactory.makeLargeGeoPolygon(PlanetModel.SPHERE,polys);\n\n    // Sample some nearby points outside\n    GeoPoint gp;\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.65);\n    assertEquals(holeSimplePolygon.isWithin(gp), holeComplexPolygon.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.35);\n    assertEquals(holeSimplePolygon.isWithin(gp), holeComplexPolygon.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, -0.15, -0.5);\n    assertEquals(holeSimplePolygon.isWithin(gp), holeComplexPolygon.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.15, -0.5);\n    assertEquals(holeSimplePolygon.isWithin(gp), holeComplexPolygon.isWithin(gp));\n    // Random points outside\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, 0.0);\n    assertEquals(holeSimplePolygon.isWithin(gp), holeComplexPolygon.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, Math.PI * 0.5, 0.0);\n    assertEquals(holeSimplePolygon.isWithin(gp), holeComplexPolygon.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, Math.PI);\n    assertEquals(holeSimplePolygon.isWithin(gp), holeComplexPolygon.isWithin(gp));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"961aa3f803841184bcbd8a9d0533743be1323d63":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["961aa3f803841184bcbd8a9d0533743be1323d63"]},"commit2Childs":{"961aa3f803841184bcbd8a9d0533743be1323d63":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["961aa3f803841184bcbd8a9d0533743be1323d63"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}