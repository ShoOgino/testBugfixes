{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSegmentsWithoutCategoriesOrResults().mjava","commits":[{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSegmentsWithoutCategoriesOrResults().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testSegmentsWithoutCategoriesOrResults().mjava","sourceNew":"  public void testSegmentsWithoutCategoriesOrResults() throws Exception {\n    // tests the accumulator when there are segments with no results\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES); // prevent merges\n    IndexWriter indexWriter = new IndexWriter(indexDir, iwc);\n\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetsConfig config = new FacetsConfig();\n    indexTwoDocs(taxoWriter, indexWriter, config, false); // 1st segment, no content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 2nd segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 3rd segment ok\n    indexTwoDocs(taxoWriter, indexWriter, null, false);        // 4th segment, no content, or categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 5th segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 6th segment, with content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 7th segment, with content, no categories\n    IOUtils.close(indexWriter, taxoWriter);\n\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher indexSearcher = newSearcher(indexReader);\n    \n    // search for \"f:a\", only segments 1 and 3 should match results\n    Query q = new TermQuery(new Term(\"f\", \"a\"));\n    FacetsCollector sfc = new FacetsCollector();\n    indexSearcher.search(q, sfc);\n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    FacetResult result = facets.getTopChildren(10, \"A\");\n    assertEquals(\"wrong number of children\", 2, result.labelValues.length);\n    for (LabelAndValue labelValue : result.labelValues) {\n      assertEquals(\"wrong weight for child \" + labelValue.label, 2, labelValue.value.intValue());\n    }\n\n    IOUtils.close(indexReader, taxoReader, indexDir, taxoDir);\n  }\n\n","sourceOld":"  public void testSegmentsWithoutCategoriesOrResults() throws Exception {\n    // tests the accumulator when there are segments with no results\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES); // prevent merges\n    IndexWriter indexWriter = new IndexWriter(indexDir, iwc);\n\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetsConfig config = new FacetsConfig();\n    indexTwoDocs(taxoWriter, indexWriter, config, false); // 1st segment, no content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 2nd segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 3rd segment ok\n    indexTwoDocs(taxoWriter, indexWriter, null, false);        // 4th segment, no content, or categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 5th segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 6th segment, with content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 7th segment, with content, no categories\n    IOUtils.close(indexWriter, taxoWriter);\n\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher indexSearcher = newSearcher(indexReader);\n    \n    // search for \"f:a\", only segments 1 and 3 should match results\n    Query q = new TermQuery(new Term(\"f\", \"a\"));\n    FacetsCollector sfc = new FacetsCollector();\n    indexSearcher.search(q, sfc);\n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    FacetResult result = facets.getTopChildren(10, \"A\");\n    assertEquals(\"wrong number of children\", 2, result.labelValues.length);\n    for (LabelAndValue labelValue : result.labelValues) {\n      assertEquals(\"wrong weight for child \" + labelValue.label, 2, labelValue.value.intValue());\n    }\n\n    IOUtils.close(indexReader, taxoReader, indexDir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSegmentsWithoutCategoriesOrResults().mjava","pathOld":"/dev/null","sourceNew":"  public void testSegmentsWithoutCategoriesOrResults() throws Exception {\n    // tests the accumulator when there are segments with no results\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES); // prevent merges\n    IndexWriter indexWriter = new IndexWriter(indexDir, iwc);\n\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetsConfig config = new FacetsConfig();\n    indexTwoDocs(taxoWriter, indexWriter, config, false); // 1st segment, no content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 2nd segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 3rd segment ok\n    indexTwoDocs(taxoWriter, indexWriter, null, false);        // 4th segment, no content, or categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 5th segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 6th segment, with content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 7th segment, with content, no categories\n    IOUtils.close(indexWriter, taxoWriter);\n\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher indexSearcher = newSearcher(indexReader);\n    \n    // search for \"f:a\", only segments 1 and 3 should match results\n    Query q = new TermQuery(new Term(\"f\", \"a\"));\n    FacetsCollector sfc = new FacetsCollector();\n    indexSearcher.search(q, sfc);\n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    FacetResult result = facets.getTopChildren(10, \"A\");\n    assertEquals(\"wrong number of children\", 2, result.labelValues.length);\n    for (LabelAndValue labelValue : result.labelValues) {\n      assertEquals(\"wrong weight for child \" + labelValue.label, 2, labelValue.value.intValue());\n    }\n\n    IOUtils.close(indexReader, taxoReader, indexDir, taxoDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSegmentsWithoutCategoriesOrResults().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSegmentsWithoutCategoriesOrResults().mjava","sourceNew":"  public void testSegmentsWithoutCategoriesOrResults() throws Exception {\n    // tests the accumulator when there are segments with no results\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES); // prevent merges\n    IndexWriter indexWriter = new IndexWriter(indexDir, iwc);\n\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetsConfig config = new FacetsConfig();\n    indexTwoDocs(taxoWriter, indexWriter, config, false); // 1st segment, no content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 2nd segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 3rd segment ok\n    indexTwoDocs(taxoWriter, indexWriter, null, false);        // 4th segment, no content, or categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 5th segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 6th segment, with content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 7th segment, with content, no categories\n    indexWriter.shutdown();\n    IOUtils.close(taxoWriter);\n\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher indexSearcher = newSearcher(indexReader);\n    \n    // search for \"f:a\", only segments 1 and 3 should match results\n    Query q = new TermQuery(new Term(\"f\", \"a\"));\n    FacetsCollector sfc = new FacetsCollector();\n    indexSearcher.search(q, sfc);\n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    FacetResult result = facets.getTopChildren(10, \"A\");\n    assertEquals(\"wrong number of children\", 2, result.labelValues.length);\n    for (LabelAndValue labelValue : result.labelValues) {\n      assertEquals(\"wrong weight for child \" + labelValue.label, 2, labelValue.value.intValue());\n    }\n\n    IOUtils.close(indexReader, taxoReader, indexDir, taxoDir);\n  }\n\n","sourceOld":"  public void testSegmentsWithoutCategoriesOrResults() throws Exception {\n    // tests the accumulator when there are segments with no results\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES); // prevent merges\n    IndexWriter indexWriter = new IndexWriter(indexDir, iwc);\n\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetsConfig config = new FacetsConfig();\n    indexTwoDocs(taxoWriter, indexWriter, config, false); // 1st segment, no content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 2nd segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 3rd segment ok\n    indexTwoDocs(taxoWriter, indexWriter, null, false);        // 4th segment, no content, or categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 5th segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 6th segment, with content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 7th segment, with content, no categories\n    IOUtils.close(indexWriter, taxoWriter);\n\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher indexSearcher = newSearcher(indexReader);\n    \n    // search for \"f:a\", only segments 1 and 3 should match results\n    Query q = new TermQuery(new Term(\"f\", \"a\"));\n    FacetsCollector sfc = new FacetsCollector();\n    indexSearcher.search(q, sfc);\n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    FacetResult result = facets.getTopChildren(10, \"A\");\n    assertEquals(\"wrong number of children\", 2, result.labelValues.length);\n    for (LabelAndValue labelValue : result.labelValues) {\n      assertEquals(\"wrong weight for child \" + labelValue.label, 2, labelValue.value.intValue());\n    }\n\n    IOUtils.close(indexReader, taxoReader, indexDir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2fb55c0777755badd3b46d8140f3d4301febed","date":1398881584,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSegmentsWithoutCategoriesOrResults().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSegmentsWithoutCategoriesOrResults().mjava","sourceNew":"  public void testSegmentsWithoutCategoriesOrResults() throws Exception {\n    // tests the accumulator when there are segments with no results\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE); // prevent merges\n    IndexWriter indexWriter = new IndexWriter(indexDir, iwc);\n\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetsConfig config = new FacetsConfig();\n    indexTwoDocs(taxoWriter, indexWriter, config, false); // 1st segment, no content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 2nd segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 3rd segment ok\n    indexTwoDocs(taxoWriter, indexWriter, null, false);        // 4th segment, no content, or categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 5th segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 6th segment, with content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 7th segment, with content, no categories\n    indexWriter.shutdown();\n    IOUtils.close(taxoWriter);\n\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher indexSearcher = newSearcher(indexReader);\n    \n    // search for \"f:a\", only segments 1 and 3 should match results\n    Query q = new TermQuery(new Term(\"f\", \"a\"));\n    FacetsCollector sfc = new FacetsCollector();\n    indexSearcher.search(q, sfc);\n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    FacetResult result = facets.getTopChildren(10, \"A\");\n    assertEquals(\"wrong number of children\", 2, result.labelValues.length);\n    for (LabelAndValue labelValue : result.labelValues) {\n      assertEquals(\"wrong weight for child \" + labelValue.label, 2, labelValue.value.intValue());\n    }\n\n    IOUtils.close(indexReader, taxoReader, indexDir, taxoDir);\n  }\n\n","sourceOld":"  public void testSegmentsWithoutCategoriesOrResults() throws Exception {\n    // tests the accumulator when there are segments with no results\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES); // prevent merges\n    IndexWriter indexWriter = new IndexWriter(indexDir, iwc);\n\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetsConfig config = new FacetsConfig();\n    indexTwoDocs(taxoWriter, indexWriter, config, false); // 1st segment, no content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 2nd segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 3rd segment ok\n    indexTwoDocs(taxoWriter, indexWriter, null, false);        // 4th segment, no content, or categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 5th segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 6th segment, with content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 7th segment, with content, no categories\n    indexWriter.shutdown();\n    IOUtils.close(taxoWriter);\n\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher indexSearcher = newSearcher(indexReader);\n    \n    // search for \"f:a\", only segments 1 and 3 should match results\n    Query q = new TermQuery(new Term(\"f\", \"a\"));\n    FacetsCollector sfc = new FacetsCollector();\n    indexSearcher.search(q, sfc);\n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    FacetResult result = facets.getTopChildren(10, \"A\");\n    assertEquals(\"wrong number of children\", 2, result.labelValues.length);\n    for (LabelAndValue labelValue : result.labelValues) {\n      assertEquals(\"wrong weight for child \" + labelValue.label, 2, labelValue.value.intValue());\n    }\n\n    IOUtils.close(indexReader, taxoReader, indexDir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSegmentsWithoutCategoriesOrResults().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSegmentsWithoutCategoriesOrResults().mjava","sourceNew":"  public void testSegmentsWithoutCategoriesOrResults() throws Exception {\n    // tests the accumulator when there are segments with no results\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE); // prevent merges\n    IndexWriter indexWriter = new IndexWriter(indexDir, iwc);\n\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetsConfig config = new FacetsConfig();\n    indexTwoDocs(taxoWriter, indexWriter, config, false); // 1st segment, no content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 2nd segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 3rd segment ok\n    indexTwoDocs(taxoWriter, indexWriter, null, false);        // 4th segment, no content, or categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 5th segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 6th segment, with content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 7th segment, with content, no categories\n    indexWriter.shutdown();\n    IOUtils.close(taxoWriter);\n\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher indexSearcher = newSearcher(indexReader);\n    \n    // search for \"f:a\", only segments 1 and 3 should match results\n    Query q = new TermQuery(new Term(\"f\", \"a\"));\n    FacetsCollector sfc = new FacetsCollector();\n    indexSearcher.search(q, sfc);\n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    FacetResult result = facets.getTopChildren(10, \"A\");\n    assertEquals(\"wrong number of children\", 2, result.labelValues.length);\n    for (LabelAndValue labelValue : result.labelValues) {\n      assertEquals(\"wrong weight for child \" + labelValue.label, 2, labelValue.value.intValue());\n    }\n\n    IOUtils.close(indexReader, taxoReader, indexDir, taxoDir);\n  }\n\n","sourceOld":"  public void testSegmentsWithoutCategoriesOrResults() throws Exception {\n    // tests the accumulator when there are segments with no results\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE); // prevent merges\n    IndexWriter indexWriter = new IndexWriter(indexDir, iwc);\n\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetsConfig config = new FacetsConfig();\n    indexTwoDocs(taxoWriter, indexWriter, config, false); // 1st segment, no content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 2nd segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 3rd segment ok\n    indexTwoDocs(taxoWriter, indexWriter, null, false);        // 4th segment, no content, or categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 5th segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 6th segment, with content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 7th segment, with content, no categories\n    indexWriter.shutdown();\n    IOUtils.close(taxoWriter);\n\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher indexSearcher = newSearcher(indexReader);\n    \n    // search for \"f:a\", only segments 1 and 3 should match results\n    Query q = new TermQuery(new Term(\"f\", \"a\"));\n    FacetsCollector sfc = new FacetsCollector();\n    indexSearcher.search(q, sfc);\n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    FacetResult result = facets.getTopChildren(10, \"A\");\n    assertEquals(\"wrong number of children\", 2, result.labelValues.length);\n    for (LabelAndValue labelValue : result.labelValues) {\n      assertEquals(\"wrong weight for child \" + labelValue.label, 2, labelValue.value.intValue());\n    }\n\n    IOUtils.close(indexReader, taxoReader, indexDir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSegmentsWithoutCategoriesOrResults().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSegmentsWithoutCategoriesOrResults().mjava","sourceNew":"  public void testSegmentsWithoutCategoriesOrResults() throws Exception {\n    // tests the accumulator when there are segments with no results\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE); // prevent merges\n    IndexWriter indexWriter = new IndexWriter(indexDir, iwc);\n\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetsConfig config = new FacetsConfig();\n    indexTwoDocs(taxoWriter, indexWriter, config, false); // 1st segment, no content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 2nd segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 3rd segment ok\n    indexTwoDocs(taxoWriter, indexWriter, null, false);        // 4th segment, no content, or categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 5th segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 6th segment, with content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 7th segment, with content, no categories\n    indexWriter.close();\n    IOUtils.close(taxoWriter);\n\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher indexSearcher = newSearcher(indexReader);\n    \n    // search for \"f:a\", only segments 1 and 3 should match results\n    Query q = new TermQuery(new Term(\"f\", \"a\"));\n    FacetsCollector sfc = new FacetsCollector();\n    indexSearcher.search(q, sfc);\n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    FacetResult result = facets.getTopChildren(10, \"A\");\n    assertEquals(\"wrong number of children\", 2, result.labelValues.length);\n    for (LabelAndValue labelValue : result.labelValues) {\n      assertEquals(\"wrong weight for child \" + labelValue.label, 2, labelValue.value.intValue());\n    }\n\n    IOUtils.close(indexReader, taxoReader, indexDir, taxoDir);\n  }\n\n","sourceOld":"  public void testSegmentsWithoutCategoriesOrResults() throws Exception {\n    // tests the accumulator when there are segments with no results\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE); // prevent merges\n    IndexWriter indexWriter = new IndexWriter(indexDir, iwc);\n\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetsConfig config = new FacetsConfig();\n    indexTwoDocs(taxoWriter, indexWriter, config, false); // 1st segment, no content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 2nd segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 3rd segment ok\n    indexTwoDocs(taxoWriter, indexWriter, null, false);        // 4th segment, no content, or categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 5th segment, with content, no categories\n    indexTwoDocs(taxoWriter, indexWriter, config, true);  // 6th segment, with content, with categories\n    indexTwoDocs(taxoWriter, indexWriter, null, true);         // 7th segment, with content, no categories\n    indexWriter.shutdown();\n    IOUtils.close(taxoWriter);\n\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher indexSearcher = newSearcher(indexReader);\n    \n    // search for \"f:a\", only segments 1 and 3 should match results\n    Query q = new TermQuery(new Term(\"f\", \"a\"));\n    FacetsCollector sfc = new FacetsCollector();\n    indexSearcher.search(q, sfc);\n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    FacetResult result = facets.getTopChildren(10, \"A\");\n    assertEquals(\"wrong number of children\", 2, result.labelValues.length);\n    for (LabelAndValue labelValue : result.labelValues) {\n      assertEquals(\"wrong weight for child \" + labelValue.label, 2, labelValue.value.intValue());\n    }\n\n    IOUtils.close(indexReader, taxoReader, indexDir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2fb55c0777755badd3b46d8140f3d4301febed":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["7e2fb55c0777755badd3b46d8140f3d4301febed"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4edc984f0f4ac77c37e48ace2932f780f888453c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"7e2fb55c0777755badd3b46d8140f3d4301febed":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4edc984f0f4ac77c37e48ace2932f780f888453c","3cc728b07df73b197e6d940d27f9b08b63918f13"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["7e2fb55c0777755badd3b46d8140f3d4301febed"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}