{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#assertNoActiveDWPT().mjava","commits":[{"id":"6a8a3c395573f31971a415972824d76a5c772cd8","date":1306706129,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#assertNoActiveDWPT().mjava","pathOld":"/dev/null","sourceNew":"  // use by IW during close to assert all DWPT are inactive after final flush\n  boolean assertNoActiveDWPT() {\n    Iterator<ThreadState> activePerThreadsIterator = perThreadPool.getAllPerThreadsIterator();\n    while(activePerThreadsIterator.hasNext()) {\n      ThreadState next = activePerThreadsIterator.next();\n      next.lock();\n      try {\n        assert !next.isActive();\n      } finally  {\n        next.unlock();\n      }\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c00afe74a80796ed1f30a9509b150ff104746a1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#assertNoActiveDWPT().mjava","pathOld":"/dev/null","sourceNew":"  // use by IW during close to assert all DWPT are inactive after final flush\n  boolean assertNoActiveDWPT() {\n    Iterator<ThreadState> activePerThreadsIterator = perThreadPool.getAllPerThreadsIterator();\n    while(activePerThreadsIterator.hasNext()) {\n      ThreadState next = activePerThreadsIterator.next();\n      next.lock();\n      try {\n        assert !next.isActive();\n      } finally  {\n        next.unlock();\n      }\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#assertNoActiveDWPT().mjava","pathOld":"/dev/null","sourceNew":"  // use by IW during close to assert all DWPT are inactive after final flush\n  boolean assertNoActiveDWPT() {\n    Iterator<ThreadState> activePerThreadsIterator = perThreadPool.getAllPerThreadsIterator();\n    while(activePerThreadsIterator.hasNext()) {\n      ThreadState next = activePerThreadsIterator.next();\n      next.lock();\n      try {\n        assert !next.isActive();\n      } finally  {\n        next.unlock();\n      }\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c00afe74a80796ed1f30a9509b150ff104746a1f","date":1312881735,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#assertNoActiveDWPT().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#assertNoActiveDWPT().mjava","sourceNew":"  // use by IW during close to assert all DWPT are inactive after final flush\n  boolean assertNoActiveDWPT() {\n    Iterator<ThreadState> activePerThreadsIterator = perThreadPool.getAllPerThreadsIterator();\n    while(activePerThreadsIterator.hasNext()) {\n      ThreadState next = activePerThreadsIterator.next();\n      next.lock();\n      try {\n        assert !next.isActive();\n      } finally {\n        next.unlock();\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  // use by IW during close to assert all DWPT are inactive after final flush\n  boolean assertNoActiveDWPT() {\n    Iterator<ThreadState> activePerThreadsIterator = perThreadPool.getAllPerThreadsIterator();\n    while(activePerThreadsIterator.hasNext()) {\n      ThreadState next = activePerThreadsIterator.next();\n      next.lock();\n      try {\n        assert !next.isActive();\n      } finally  {\n        next.unlock();\n      }\n    }\n    return true;\n  }\n\n","bugFix":["6a8a3c395573f31971a415972824d76a5c772cd8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#assertNoActiveDWPT().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#assertNoActiveDWPT().mjava","sourceNew":"  // use by IW during close to assert all DWPT are inactive after final flush\n  boolean assertNoActiveDWPT() {\n    Iterator<ThreadState> activePerThreadsIterator = perThreadPool.getAllPerThreadsIterator();\n    while(activePerThreadsIterator.hasNext()) {\n      ThreadState next = activePerThreadsIterator.next();\n      next.lock();\n      try {\n        assert !next.isActive();\n      } finally {\n        next.unlock();\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  // use by IW during close to assert all DWPT are inactive after final flush\n  boolean assertNoActiveDWPT() {\n    Iterator<ThreadState> activePerThreadsIterator = perThreadPool.getAllPerThreadsIterator();\n    while(activePerThreadsIterator.hasNext()) {\n      ThreadState next = activePerThreadsIterator.next();\n      next.lock();\n      try {\n        assert !next.isActive();\n      } finally {\n        next.unlock();\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6a8a3c395573f31971a415972824d76a5c772cd8"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c00afe74a80796ed1f30a9509b150ff104746a1f"],"6a8a3c395573f31971a415972824d76a5c772cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c00afe74a80796ed1f30a9509b150ff104746a1f":["6a8a3c395573f31971a415972824d76a5c772cd8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6a8a3c395573f31971a415972824d76a5c772cd8"]},"commit2Childs":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"6a8a3c395573f31971a415972824d76a5c772cd8":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c00afe74a80796ed1f30a9509b150ff104746a1f","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","6a8a3c395573f31971a415972824d76a5c772cd8","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"c00afe74a80796ed1f30a9509b150ff104746a1f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}