{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#safeCheckCollectionExists(String,String).mjava","commits":[{"id":"209c0259a9b7087b2111411ec790d6557ef86307","date":1419393649,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#safeCheckCollectionExists(String,String).mjava","pathOld":"/dev/null","sourceNew":"    protected boolean safeCheckCollectionExists(String url, String collection) {\n      boolean exists = false;\n      try {\n        Map<String,Object> existsCheckResult = getJson(url);\n        List<String> collections = (List<String>) existsCheckResult.get(\"collections\");\n        exists = collections != null && collections.contains(collection);\n      } catch (Exception exc) {\n        // just ignore it since we're only interested in a positive result here\n      }\n      return exists;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"547b9bdc942b65ebcd943738bb12c2a222fcf566","date":1432317527,"type":4,"author":"Timothy Potter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#safeCheckCollectionExists(String,String).mjava","sourceNew":null,"sourceOld":"    protected boolean safeCheckCollectionExists(String url, String collection) {\n      boolean exists = false;\n      try {\n        Map<String,Object> existsCheckResult = getJson(url);\n        List<String> collections = (List<String>) existsCheckResult.get(\"collections\");\n        exists = collections != null && collections.contains(collection);\n      } catch (Exception exc) {\n        // just ignore it since we're only interested in a positive result here\n      }\n      return exists;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e2df0ef4d31d965ccc4afc2ec6349c06c3cccf","date":1432317730,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#safeCheckCollectionExists(String,String).mjava","pathOld":"/dev/null","sourceNew":"    protected boolean safeCheckCollectionExists(String url, String collection) {\n      boolean exists = false;\n      try {\n        Map<String,Object> existsCheckResult = getJson(url);\n        List<String> collections = (List<String>) existsCheckResult.get(\"collections\");\n        exists = collections != null && collections.contains(collection);\n      } catch (Exception exc) {\n        // just ignore it since we're only interested in a positive result here\n      }\n      return exists;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"919a9ff0212f46eb240b8716a6d189b06659d3f2","date":1432317985,"type":4,"author":"Timothy Potter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#safeCheckCollectionExists(String,String).mjava","sourceNew":null,"sourceOld":"    protected boolean safeCheckCollectionExists(String url, String collection) {\n      boolean exists = false;\n      try {\n        Map<String,Object> existsCheckResult = getJson(url);\n        List<String> collections = (List<String>) existsCheckResult.get(\"collections\");\n        exists = collections != null && collections.contains(collection);\n      } catch (Exception exc) {\n        // just ignore it since we're only interested in a positive result here\n      }\n      return exists;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"547b9bdc942b65ebcd943738bb12c2a222fcf566":["209c0259a9b7087b2111411ec790d6557ef86307"],"209c0259a9b7087b2111411ec790d6557ef86307":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"919a9ff0212f46eb240b8716a6d189b06659d3f2":["b3e2df0ef4d31d965ccc4afc2ec6349c06c3cccf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["919a9ff0212f46eb240b8716a6d189b06659d3f2"],"b3e2df0ef4d31d965ccc4afc2ec6349c06c3cccf":["547b9bdc942b65ebcd943738bb12c2a222fcf566"]},"commit2Childs":{"547b9bdc942b65ebcd943738bb12c2a222fcf566":["b3e2df0ef4d31d965ccc4afc2ec6349c06c3cccf"],"209c0259a9b7087b2111411ec790d6557ef86307":["547b9bdc942b65ebcd943738bb12c2a222fcf566"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["209c0259a9b7087b2111411ec790d6557ef86307"],"919a9ff0212f46eb240b8716a6d189b06659d3f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b3e2df0ef4d31d965ccc4afc2ec6349c06c3cccf":["919a9ff0212f46eb240b8716a6d189b06659d3f2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}