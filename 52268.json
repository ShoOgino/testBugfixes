{"path":"sandbox/contributions/searchbean/src/java/org/apache/lucene/beans/HitsIterator#sortByField(String).mjava","commits":[{"id":"e29bbd6c1ba50c2a642f1548173d0efda3c1c1c5","date":1022114709,"type":0,"author":"Peter Carlson","isMerge":false,"pathNew":"sandbox/contributions/searchbean/src/java/org/apache/lucene/beans/HitsIterator#sortByField(String).mjava","pathOld":"/dev/null","sourceNew":"    /** sorts hits by the given sort flag\n     * fills an interal array\n     * @param sortFlag field to sort results on\n     */\n    private void sortByField(String fieldName) throws IOException{\n        long start = System.currentTimeMillis();\n        Comparator c = null;\n        if (fieldName == null){\n            //logger.error(\"sort field is null\");\n            return;\n        }\n        \n        SortedField sf = SortedField.getSortedField(fieldName);\n        if (sf !=null){\n            c = (Comparator) new CompareDocumentsByField();\n        } else {\n            //logger.error(\"Sort field not found\");\n            arrayOfIndividualHits = null;\n            return;\n        }\n        arrayOfIndividualHits = new Object[hitsCollection.length()];\n        long first = System.currentTimeMillis();\n        for (int i=0; i<hitsCollection.length(); i++) {\n            int id = hitsCollection.id(i);\n            arrayOfIndividualHits[i] = new IndividualHit(i, sf.getFieldValue(id), hitsCollection.score(i));\n        }\n        long second = System.currentTimeMillis();\n        //logger.debug(\"HitsIterator.sortByField(): filling Obj[] took \"+(second-first));\n        \n        Arrays.sort(arrayOfIndividualHits, c);\n        //logger.debug(\"HitsIterator.sortByField(): sort took \"+(System.currentTimeMillis()-second));\n        \n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6acd01d27d045ad3085f30ad6ff30f74cad9c390","date":1031360447,"type":3,"author":"Peter Carlson","isMerge":false,"pathNew":"sandbox/contributions/searchbean/src/java/org/apache/lucene/beans/HitsIterator#sortByField(String).mjava","pathOld":"sandbox/contributions/searchbean/src/java/org/apache/lucene/beans/HitsIterator#sortByField(String).mjava","sourceNew":"    /** sorts hits by the given sort flag\n     * fills an interal array\n     * @param sortFlag field to sort results on\n     */\n    private void sortByField(String fieldName) throws IOException{\n        long start = System.currentTimeMillis();\n        Comparator c = null;\n        if (fieldName == null){\n            //logger.error(\"sort field is null\");\n            return;\n        }\n        \n        SortedField sf = SortedField.getSortedField(fieldName);\n        if (sf !=null){\n            c = (Comparator) new CompareDocumentsByField();\n        } else {\n            //logger.error(\"Sort field not found\"); \n            // use default sort of Lucene -- Relevance\n            // Should I throw an exception here?\n            arrayOfIndividualHits = null;\n            return;\n        }\n        arrayOfIndividualHits = new Object[hitsCollection.length()];\n        long first = System.currentTimeMillis();\n        for (int i=0; i<hitsCollection.length(); i++) {\n            int id = hitsCollection.id(i);\n            arrayOfIndividualHits[i] = new IndividualHit(i, sf.getFieldValue(id), hitsCollection.score(i));\n        }\n        long second = System.currentTimeMillis();\n        //logger.debug(\"HitsIterator.sortByField(): filling Obj[] took \"+(second-first));\n        \n        Arrays.sort(arrayOfIndividualHits, c);\n        //logger.debug(\"HitsIterator.sortByField(): sort took \"+(System.currentTimeMillis()-second));\n        \n    }\n\n","sourceOld":"    /** sorts hits by the given sort flag\n     * fills an interal array\n     * @param sortFlag field to sort results on\n     */\n    private void sortByField(String fieldName) throws IOException{\n        long start = System.currentTimeMillis();\n        Comparator c = null;\n        if (fieldName == null){\n            //logger.error(\"sort field is null\");\n            return;\n        }\n        \n        SortedField sf = SortedField.getSortedField(fieldName);\n        if (sf !=null){\n            c = (Comparator) new CompareDocumentsByField();\n        } else {\n            //logger.error(\"Sort field not found\");\n            arrayOfIndividualHits = null;\n            return;\n        }\n        arrayOfIndividualHits = new Object[hitsCollection.length()];\n        long first = System.currentTimeMillis();\n        for (int i=0; i<hitsCollection.length(); i++) {\n            int id = hitsCollection.id(i);\n            arrayOfIndividualHits[i] = new IndividualHit(i, sf.getFieldValue(id), hitsCollection.score(i));\n        }\n        long second = System.currentTimeMillis();\n        //logger.debug(\"HitsIterator.sortByField(): filling Obj[] took \"+(second-first));\n        \n        Arrays.sort(arrayOfIndividualHits, c);\n        //logger.debug(\"HitsIterator.sortByField(): sort took \"+(System.currentTimeMillis()-second));\n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a074c970af888c2770114fc8712f03e19678ef0","date":1052749943,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/searchbean/src/java/org/apache/lucene/beans/HitsIterator#sortByField(String).mjava","pathOld":"sandbox/contributions/searchbean/src/java/org/apache/lucene/beans/HitsIterator#sortByField(String).mjava","sourceNew":"    /** sorts hits by the given sort flag\n     * fills an interal array\n     * @param sortFlag field to sort results on\n     */\n    private void sortByField(String fieldName) throws IOException{\n        long start = System.currentTimeMillis();\n        Comparator c = null;\n        if (fieldName == null){\n            //logger.error(\"sort field is null\");\n            return;\n        }\n\n        SortedField sf = SortedField.getSortedField(fieldName);\n        if (sf !=null){\n            c = (Comparator) new CompareDocumentsByField();\n        } else {\n            //logger.error(\"Sort field not found\");\n            // use default sort of Lucene -- Relevance\n            // Should I throw an exception here?\n            arrayOfIndividualHits = null;\n            return;\n        }\n        arrayOfIndividualHits = new Object[hitsCollection.length()];\n        long first = System.currentTimeMillis();\n        for (int i=0; i<hitsCollection.length(); i++) {\n            int id = hitsCollection.id(i);\n            arrayOfIndividualHits[i] = new IndividualHit(i, sf.getFieldValue(id), hitsCollection.score(i));\n        }\n        long second = System.currentTimeMillis();\n        //logger.debug(\"HitsIterator.sortByField(): filling Obj[] took \"+(second-first));\n\n        Arrays.sort(arrayOfIndividualHits, c);\n        //logger.debug(\"HitsIterator.sortByField(): sort took \"+(System.currentTimeMillis()-second));\n\n    }\n\n","sourceOld":"    /** sorts hits by the given sort flag\n     * fills an interal array\n     * @param sortFlag field to sort results on\n     */\n    private void sortByField(String fieldName) throws IOException{\n        long start = System.currentTimeMillis();\n        Comparator c = null;\n        if (fieldName == null){\n            //logger.error(\"sort field is null\");\n            return;\n        }\n        \n        SortedField sf = SortedField.getSortedField(fieldName);\n        if (sf !=null){\n            c = (Comparator) new CompareDocumentsByField();\n        } else {\n            //logger.error(\"Sort field not found\"); \n            // use default sort of Lucene -- Relevance\n            // Should I throw an exception here?\n            arrayOfIndividualHits = null;\n            return;\n        }\n        arrayOfIndividualHits = new Object[hitsCollection.length()];\n        long first = System.currentTimeMillis();\n        for (int i=0; i<hitsCollection.length(); i++) {\n            int id = hitsCollection.id(i);\n            arrayOfIndividualHits[i] = new IndividualHit(i, sf.getFieldValue(id), hitsCollection.score(i));\n        }\n        long second = System.currentTimeMillis();\n        //logger.debug(\"HitsIterator.sortByField(): filling Obj[] took \"+(second-first));\n        \n        Arrays.sort(arrayOfIndividualHits, c);\n        //logger.debug(\"HitsIterator.sortByField(): sort took \"+(System.currentTimeMillis()-second));\n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81002862d80ac0d5cf5a9a6d7fb0fc5927bba516","date":1108145240,"type":4,"author":"Erik Hatcher","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/searchbean/src/java/org/apache/lucene/beans/HitsIterator#sortByField(String).mjava","sourceNew":null,"sourceOld":"    /** sorts hits by the given sort flag\n     * fills an interal array\n     * @param sortFlag field to sort results on\n     */\n    private void sortByField(String fieldName) throws IOException{\n        long start = System.currentTimeMillis();\n        Comparator c = null;\n        if (fieldName == null){\n            //logger.error(\"sort field is null\");\n            return;\n        }\n\n        SortedField sf = SortedField.getSortedField(fieldName);\n        if (sf !=null){\n            c = (Comparator) new CompareDocumentsByField();\n        } else {\n            //logger.error(\"Sort field not found\");\n            // use default sort of Lucene -- Relevance\n            // Should I throw an exception here?\n            arrayOfIndividualHits = null;\n            return;\n        }\n        arrayOfIndividualHits = new Object[hitsCollection.length()];\n        long first = System.currentTimeMillis();\n        for (int i=0; i<hitsCollection.length(); i++) {\n            int id = hitsCollection.id(i);\n            arrayOfIndividualHits[i] = new IndividualHit(i, sf.getFieldValue(id), hitsCollection.score(i));\n        }\n        long second = System.currentTimeMillis();\n        //logger.debug(\"HitsIterator.sortByField(): filling Obj[] took \"+(second-first));\n\n        Arrays.sort(arrayOfIndividualHits, c);\n        //logger.debug(\"HitsIterator.sortByField(): sort took \"+(System.currentTimeMillis()-second));\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a074c970af888c2770114fc8712f03e19678ef0":["6acd01d27d045ad3085f30ad6ff30f74cad9c390"],"e29bbd6c1ba50c2a642f1548173d0efda3c1c1c5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6acd01d27d045ad3085f30ad6ff30f74cad9c390":["e29bbd6c1ba50c2a642f1548173d0efda3c1c1c5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["81002862d80ac0d5cf5a9a6d7fb0fc5927bba516"],"81002862d80ac0d5cf5a9a6d7fb0fc5927bba516":["3a074c970af888c2770114fc8712f03e19678ef0"]},"commit2Childs":{"3a074c970af888c2770114fc8712f03e19678ef0":["81002862d80ac0d5cf5a9a6d7fb0fc5927bba516"],"e29bbd6c1ba50c2a642f1548173d0efda3c1c1c5":["6acd01d27d045ad3085f30ad6ff30f74cad9c390"],"6acd01d27d045ad3085f30ad6ff30f74cad9c390":["3a074c970af888c2770114fc8712f03e19678ef0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e29bbd6c1ba50c2a642f1548173d0efda3c1c1c5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"81002862d80ac0d5cf5a9a6d7fb0fc5927bba516":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}