{"path":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestSimpleFacetsExample#testDrillDown().mjava","commits":[{"id":"31703f98041a9e7086254ed134d8f91c22ac933f","date":1360500940,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestSimpleFacetsExample#testDrillDown().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDrillDown() throws Exception {\n    List<FacetResult> facetResults = new SimpleFacetsExample().runDrillDown();\n    assertEquals(1, facetResults.size());\n    assertExpectedCounts(facetResults, expectedCountsDrillDown);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d899affd3c008feba40d1405b7a38972ce2005b4","date":1385469973,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestSimpleFacetsExample#testDrillDown().mjava","pathOld":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestSimpleFacetsExample#testDrillDown().mjava","sourceNew":"  @Test\n  public void testDrillDown() throws Exception {\n    SimpleFacetResult result = new SimpleFacetsExample().runDrillDown();\n    assertEquals(\"value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", result.toString());\n  }\n\n","sourceOld":"  @Test\n  public void testDrillDown() throws Exception {\n    List<FacetResult> facetResults = new SimpleFacetsExample().runDrillDown();\n    assertEquals(1, facetResults.size());\n    assertExpectedCounts(facetResults, expectedCountsDrillDown);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestSimpleFacetsExample#testDrillDown().mjava","pathOld":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestSimpleFacetsExample#testDrillDown().mjava","sourceNew":"  @Test\n  public void testDrillDown() throws Exception {\n    FacetResult result = new SimpleFacetsExample().runDrillDown();\n    assertEquals(\"value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", result.toString());\n  }\n\n","sourceOld":"  @Test\n  public void testDrillDown() throws Exception {\n    SimpleFacetResult result = new SimpleFacetsExample().runDrillDown();\n    assertEquals(\"value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", result.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56d44586f4c409c6c6c5942b9f0227df806b7300","date":1386027853,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestSimpleFacetsExample#testDrillDown().mjava","pathOld":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestSimpleFacetsExample#testDrillDown().mjava","sourceNew":"  @Test\n  public void testDrillDown() throws Exception {\n    FacetResult result = new SimpleFacetsExample().runDrillDown();\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", result.toString());\n  }\n\n","sourceOld":"  @Test\n  public void testDrillDown() throws Exception {\n    FacetResult result = new SimpleFacetsExample().runDrillDown();\n    assertEquals(\"value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", result.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestSimpleFacetsExample#testDrillDown().mjava","pathOld":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestSimpleFacetsExample#testDrillDown().mjava","sourceNew":"  @Test\n  public void testDrillDown() throws Exception {\n    FacetResult result = new SimpleFacetsExample().runDrillDown();\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", result.toString());\n  }\n\n","sourceOld":"  @Test\n  public void testDrillDown() throws Exception {\n    List<FacetResult> facetResults = new SimpleFacetsExample().runDrillDown();\n    assertEquals(1, facetResults.size());\n    assertExpectedCounts(facetResults, expectedCountsDrillDown);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56d44586f4c409c6c6c5942b9f0227df806b7300":["21d36d0db865f7b84026b447bec653469a6e66df"],"31703f98041a9e7086254ed134d8f91c22ac933f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["d899affd3c008feba40d1405b7a38972ce2005b4"],"d899affd3c008feba40d1405b7a38972ce2005b4":["31703f98041a9e7086254ed134d8f91c22ac933f"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["31703f98041a9e7086254ed134d8f91c22ac933f","56d44586f4c409c6c6c5942b9f0227df806b7300"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"56d44586f4c409c6c6c5942b9f0227df806b7300":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"31703f98041a9e7086254ed134d8f91c22ac933f":["d899affd3c008feba40d1405b7a38972ce2005b4","3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["31703f98041a9e7086254ed134d8f91c22ac933f"],"21d36d0db865f7b84026b447bec653469a6e66df":["56d44586f4c409c6c6c5942b9f0227df806b7300"],"d899affd3c008feba40d1405b7a38972ce2005b4":["21d36d0db865f7b84026b447bec653469a6e66df"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}