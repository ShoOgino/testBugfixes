{"path":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadSpans#getSearcher().mjava","commits":[{"id":"c4f600f812447b5512daeaf8e5c9df5dbcc4a254","date":1428874774,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadSpans#getSearcher().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSearcher().mjava","sourceNew":"  private IndexSearcher getSearcher() throws Exception {\n    directory = newDirectory();\n    String[] docs = new String[]{\"xx rr yy mm  pp\",\"xx yy mm rr pp\", \"nopayload qq ss pp np\", \"one two three four five six seven eight nine ten eleven\", \"nine one two three four five six seven eight eleven ten\"};\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n                                                     newIndexWriterConfig(new PayloadAnalyzer()).setSimilarity(similarity));\n\n    Document doc = null;\n    for(int i = 0; i < docs.length; i++) {\n      doc = new Document();\n      String docText = docs[i];\n      doc.add(newTextField(PayloadHelper.FIELD, docText, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n\n    closeIndexReader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(closeIndexReader);\n    return searcher;\n  }\n\n","sourceOld":"  private IndexSearcher getSearcher() throws Exception {\n    directory = newDirectory();\n    String[] docs = new String[]{\"xx rr yy mm  pp\",\"xx yy mm rr pp\", \"nopayload qq ss pp np\", \"one two three four five six seven eight nine ten eleven\", \"nine one two three four five six seven eight eleven ten\"};\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n                                                     newIndexWriterConfig(new PayloadAnalyzer()).setSimilarity(similarity));\n\n    Document doc = null;\n    for(int i = 0; i < docs.length; i++) {\n      doc = new Document();\n      String docText = docs[i];\n      doc.add(newTextField(PayloadHelper.FIELD, docText, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n\n    closeIndexReader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(closeIndexReader);\n    return searcher;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4","date":1442407411,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadSpans#getSearcher().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadSpans#getSearcher().mjava","sourceNew":"  private IndexSearcher getSearcher() throws Exception {\n    directory = newDirectory();\n    String[] docs = new String[]{\"xx rr yy mm  pp\",\"xx yy mm rr pp\", \"nopayload qq ss pp np\", \"one two three four five six seven eight nine ten eleven\", \"nine one two three four five six seven eight eleven ten\"};\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n                                                     newIndexWriterConfig(new PayloadAnalyzer()).setSimilarity(similarity));\n\n    Document doc = null;\n    for(int i = 0; i < docs.length; i++) {\n      doc = new Document();\n      String docText = docs[i];\n      doc.add(newTextField(PayloadHelper.FIELD, docText, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n\n    closeIndexReader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(closeIndexReader);\n    return searcher;\n  }\n\n","sourceOld":"  private IndexSearcher getSearcher() throws Exception {\n    directory = newDirectory();\n    String[] docs = new String[]{\"xx rr yy mm  pp\",\"xx yy mm rr pp\", \"nopayload qq ss pp np\", \"one two three four five six seven eight nine ten eleven\", \"nine one two three four five six seven eight eleven ten\"};\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n                                                     newIndexWriterConfig(new PayloadAnalyzer()).setSimilarity(similarity));\n\n    Document doc = null;\n    for(int i = 0; i < docs.length; i++) {\n      doc = new Document();\n      String docText = docs[i];\n      doc.add(newTextField(PayloadHelper.FIELD, docText, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n\n    closeIndexReader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(closeIndexReader);\n    return searcher;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["c4f600f812447b5512daeaf8e5c9df5dbcc4a254"],"c4f600f812447b5512daeaf8e5c9df5dbcc4a254":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"]},"commit2Childs":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c4f600f812447b5512daeaf8e5c9df5dbcc4a254":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c4f600f812447b5512daeaf8e5c9df5dbcc4a254"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}