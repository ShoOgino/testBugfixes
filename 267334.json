{"path":"lucene/src/java/org/apache/lucene/util/MultiBits#get(int).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/MultiBits#get(int).mjava","pathOld":"/dev/null","sourceNew":"  public boolean get(int doc) {\n    final int reader = ReaderUtil.subIndex(doc, starts);\n    assert reader != -1;\n    final Bits bits = subs[reader];\n    if (bits == null) {\n      return false;\n    } else {\n      assert checkLength(reader, doc);\n      return bits.get(doc-starts[reader]);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/MultiBits#get(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/MultiBits#get(int).mjava","sourceNew":"  public boolean get(int doc) {\n    final int reader = ReaderUtil.subIndex(doc, starts);\n    assert reader != -1;\n    final Bits bits = subs[reader];\n    if (bits == null) {\n      return defaultValue;\n    } else {\n      assert checkLength(reader, doc);\n      return bits.get(doc-starts[reader]);\n    }\n  }\n\n","sourceOld":"  public boolean get(int doc) {\n    final int reader = ReaderUtil.subIndex(doc, starts);\n    assert reader != -1;\n    final Bits bits = subs[reader];\n    if (bits == null) {\n      return false;\n    } else {\n      assert checkLength(reader, doc);\n      return bits.get(doc-starts[reader]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/MultiBits#get(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/MultiBits#get(int).mjava","sourceNew":"  public boolean get(int doc) {\n    final int reader = ReaderUtil.subIndex(doc, starts);\n    assert reader != -1;\n    final Bits bits = subs[reader];\n    if (bits == null) {\n      return defaultValue;\n    } else {\n      assert checkLength(reader, doc);\n      return bits.get(doc-starts[reader]);\n    }\n  }\n\n","sourceOld":"  public boolean get(int doc) {\n    final int reader = ReaderUtil.subIndex(doc, starts);\n    assert reader != -1;\n    final Bits bits = subs[reader];\n    if (bits == null) {\n      return false;\n    } else {\n      assert checkLength(reader, doc);\n      return bits.get(doc-starts[reader]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/MultiBits#get(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/MultiBits#get(int).mjava","sourceNew":"  public boolean get(int doc) {\n    final int reader = ReaderUtil.subIndex(doc, starts);\n    assert reader != -1;\n    final Bits bits = subs[reader];\n    if (bits == null) {\n      return defaultValue;\n    } else {\n      assert checkLength(reader, doc);\n      return bits.get(doc-starts[reader]);\n    }\n  }\n\n","sourceOld":"  public boolean get(int doc) {\n    final int reader = ReaderUtil.subIndex(doc, starts);\n    assert reader != -1;\n    final Bits bits = subs[reader];\n    if (bits == null) {\n      return false;\n    } else {\n      assert checkLength(reader, doc);\n      return bits.get(doc-starts[reader]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/MultiBits#get(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/MultiBits#get(int).mjava","sourceNew":"  public boolean get(int doc) {\n    final int reader = ReaderUtil.subIndex(doc, starts);\n    assert reader != -1;\n    final Bits bits = subs[reader];\n    if (bits == null) {\n      return defaultValue;\n    } else {\n      assert checkLength(reader, doc);\n      return bits.get(doc-starts[reader]);\n    }\n  }\n\n","sourceOld":"  public boolean get(int doc) {\n    final int reader = ReaderUtil.subIndex(doc, starts);\n    assert reader != -1;\n    final Bits bits = subs[reader];\n    if (bits == null) {\n      return defaultValue;\n    } else {\n      assert checkLength(reader, doc);\n      return bits.get(doc-starts[reader]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}