{"path":"lucene/test-framework/src/java/org/apache/lucene/search/CheckHits#checkExplanations(Query,String,IndexSearcher,boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/CheckHits#checkExplanations(Query,String,IndexSearcher,boolean).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/search/CheckHits#checkExplanations(Query,String,IndexSearcher,boolean).mjava","sourceNew":"  /**\n   * Asserts that the explanation value for every document matching a\n   * query corresponds with the true score.  Optionally does \"deep\" \n   * testing of the explanation details.\n   *\n   * @see ExplanationAsserter\n   * @param query the query to test\n   * @param searcher the searcher to test the query against\n   * @param defaultFieldName used for displaing the query in assertion messages\n   * @param deep indicates whether a deep comparison of sub-Explanation details should be executed\n   */\n  public static void checkExplanations(Query query,\n                                       String defaultFieldName,\n                                       IndexSearcher searcher, \n                                       boolean deep) throws IOException {\n\n    searcher.search(query,\n                    new ExplanationAsserter\n                    (query, defaultFieldName, searcher, deep));\n\n  }\n\n","sourceOld":"  /**\n   * Asserts that the explanation value for every document matching a\n   * query corresponds with the true score.  Optionally does \"deep\" \n   * testing of the explanation details.\n   *\n   * @see ExplanationAsserter\n   * @param query the query to test\n   * @param searcher the searcher to test the query against\n   * @param defaultFieldName used for displaing the query in assertion messages\n   * @param deep indicates whether a deep comparison of sub-Explanation details should be executed\n   */\n  public static void checkExplanations(Query query,\n                                       String defaultFieldName,\n                                       IndexSearcher searcher, \n                                       boolean deep) throws IOException {\n\n    searcher.search(query,\n                    new ExplanationAsserter\n                    (query, defaultFieldName, searcher, deep));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}