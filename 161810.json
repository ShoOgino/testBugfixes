{"path":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#scope().mjava","commits":[{"id":"bb3e075eaa5788b2762ec235bf72b069cefe3f50","date":1548244981,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#scope().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void scope() {\n    testConfig.put(\"scope\", \"solr:read solr:admin\");\n    plugin.init(testConfig);\n    JWTAuthPlugin.JWTAuthenticationResponse resp = plugin.authenticate(testHeader);\n    assertTrue(resp.isAuthenticated());\n\n    Principal principal = resp.getPrincipal();\n    assertTrue(principal instanceof VerifiedUserRoles);\n    Set<String> roles = ((VerifiedUserRoles)principal).getVerifiedRoles();\n    assertEquals(1, roles.size());\n    assertTrue(roles.contains(\"solr:read\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2682a1cd25864ccdc1b44bf047bd08700f28ba06","date":1548321910,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#scope().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void scope() {\n    testConfig.put(\"scope\", \"solr:read solr:admin\");\n    plugin.init(testConfig);\n    JWTAuthPlugin.JWTAuthenticationResponse resp = plugin.authenticate(testHeader);\n    assertTrue(resp.isAuthenticated());\n\n    Principal principal = resp.getPrincipal();\n    assertTrue(principal instanceof VerifiedUserRoles);\n    Set<String> roles = ((VerifiedUserRoles)principal).getVerifiedRoles();\n    assertEquals(1, roles.size());\n    assertTrue(roles.contains(\"solr:read\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ac780c217504f0ca673ac5dcb98768984267c60","date":1568879420,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#scope().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#scope().mjava","sourceNew":"  @Test\n  public void scope() {\n    testConfig.put(\"scope\", \"solr:read solr:admin\");\n    plugin.init(testConfig);\n    JWTAuthPlugin.JWTAuthenticationResponse resp = plugin.authenticate(testHeader);\n    assertTrue(resp.getErrorMessage(), resp.isAuthenticated());\n\n    Principal principal = resp.getPrincipal();\n    assertTrue(principal instanceof VerifiedUserRoles);\n    Set<String> roles = ((VerifiedUserRoles)principal).getVerifiedRoles();\n    assertEquals(1, roles.size());\n    assertTrue(roles.contains(\"solr:read\"));\n  }\n\n","sourceOld":"  @Test\n  public void scope() {\n    testConfig.put(\"scope\", \"solr:read solr:admin\");\n    plugin.init(testConfig);\n    JWTAuthPlugin.JWTAuthenticationResponse resp = plugin.authenticate(testHeader);\n    assertTrue(resp.isAuthenticated());\n\n    Principal principal = resp.getPrincipal();\n    assertTrue(principal instanceof VerifiedUserRoles);\n    Set<String> roles = ((VerifiedUserRoles)principal).getVerifiedRoles();\n    assertEquals(1, roles.size());\n    assertTrue(roles.contains(\"solr:read\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8076096f334b0665d0a69a63ee98ac09baad402b","date":1589405373,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#scope().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#scope().mjava","sourceNew":"  @Test\n  public void scope() {\n    testConfig.put(\"scope\", \"solr:read solr:admin\");\n    plugin.init(testConfig);\n    JWTAuthPlugin.JWTAuthenticationResponse resp = plugin.authenticate(testHeader);\n    assertTrue(resp.getErrorMessage(), resp.isAuthenticated());\n\n    // When 'rolesClaim' is not defined in config, then all scopes are registered as roles\n    Principal principal = resp.getPrincipal();\n    assertTrue(principal instanceof VerifiedUserRoles);\n    Set<String> roles = ((VerifiedUserRoles)principal).getVerifiedRoles();\n    assertEquals(1, roles.size());\n    assertTrue(roles.contains(\"solr:read\"));\n  }\n\n","sourceOld":"  @Test\n  public void scope() {\n    testConfig.put(\"scope\", \"solr:read solr:admin\");\n    plugin.init(testConfig);\n    JWTAuthPlugin.JWTAuthenticationResponse resp = plugin.authenticate(testHeader);\n    assertTrue(resp.getErrorMessage(), resp.isAuthenticated());\n\n    Principal principal = resp.getPrincipal();\n    assertTrue(principal instanceof VerifiedUserRoles);\n    Set<String> roles = ((VerifiedUserRoles)principal).getVerifiedRoles();\n    assertEquals(1, roles.size());\n    assertTrue(roles.contains(\"solr:read\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8076096f334b0665d0a69a63ee98ac09baad402b":["1ac780c217504f0ca673ac5dcb98768984267c60"],"1ac780c217504f0ca673ac5dcb98768984267c60":["bb3e075eaa5788b2762ec235bf72b069cefe3f50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8076096f334b0665d0a69a63ee98ac09baad402b"],"bb3e075eaa5788b2762ec235bf72b069cefe3f50":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bb3e075eaa5788b2762ec235bf72b069cefe3f50"]},"commit2Childs":{"8076096f334b0665d0a69a63ee98ac09baad402b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1ac780c217504f0ca673ac5dcb98768984267c60":["8076096f334b0665d0a69a63ee98ac09baad402b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb3e075eaa5788b2762ec235bf72b069cefe3f50","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"bb3e075eaa5788b2762ec235bf72b069cefe3f50":["1ac780c217504f0ca673ac5dcb98768984267c60","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}