{"path":"src/java/org/apache/solr/util/SolrPluginUtils#setReturnFields(String,SolrQueryResponse).mjava","commits":[{"id":"e4b5867a57b32674ce740e66e6a7da8db3d4dd33","date":1148163441,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/SolrPluginUtils#setReturnFields(String,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Given a space seperated list of field names, sets the field list on the\n   * SolrQueryResponse.\n   */\n  public static void setReturnFields(String fl,\n                                     SolrQueryResponse res) {\n\n    if (fl != null) {\n      // TODO - this could become more efficient if widely used.\n      // TODO - should field order be maintained?\n      String[] flst = splitList.split(fl.trim(),0);\n      if (flst.length > 0 && !(flst.length==1 && flst[0].length()==0)) {\n        Set<String> set = new HashSet<String>();\n        for (String fname : flst) set.add(fname);\n        res.setReturnFields(set);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0452863ee588101738d341e6e97eb87eb010052a","date":1152814944,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/SolrPluginUtils#setReturnFields(String,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/util/SolrPluginUtils#setReturnFields(String,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Given a space seperated list of field names, sets the field list on the\n   * SolrQueryResponse.\n   *\n   * @return bitfield of SolrIndexSearcher flags that need to be set\n   */\n  public static int setReturnFields(String fl,\n                                    SolrQueryResponse res) {\n    int flags = 0;\n    if (fl != null) {\n      // TODO - this could become more efficient if widely used.\n      // TODO - should field order be maintained?\n      String[] flst = splitList.split(fl.trim(),0);\n      if (flst.length > 0 && !(flst.length==1 && flst[0].length()==0)) {\n        Set<String> set = new HashSet<String>();\n        for (String fname : flst) {\n          if(\"score\".equalsIgnoreCase(fname))\n            flags |= SolrIndexSearcher.GET_SCORES;\n          set.add(fname);\n        }\n        res.setReturnFields(set);\n      }\n    }\n    return flags;\n  }\n\n","sourceOld":"  /**\n   * Given a space seperated list of field names, sets the field list on the\n   * SolrQueryResponse.\n   */\n  public static void setReturnFields(String fl,\n                                     SolrQueryResponse res) {\n\n    if (fl != null) {\n      // TODO - this could become more efficient if widely used.\n      // TODO - should field order be maintained?\n      String[] flst = splitList.split(fl.trim(),0);\n      if (flst.length > 0 && !(flst.length==1 && flst[0].length()==0)) {\n        Set<String> set = new HashSet<String>();\n        for (String fname : flst) set.add(fname);\n        res.setReturnFields(set);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af09a11446184597ca824554260a98704507f8a7","date":1157138567,"type":3,"author":"Mike Klaas","isMerge":false,"pathNew":"src/java/org/apache/solr/util/SolrPluginUtils#setReturnFields(String,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/util/SolrPluginUtils#setReturnFields(String,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Given a space seperated list of field names, sets the field list on the\n   * SolrQueryResponse.\n   *\n   * @return bitfield of SolrIndexSearcher flags that need to be set\n   */\n  public static int setReturnFields(String fl,\n                                    SolrQueryResponse res) {\n    int flags = 0;\n    if (fl != null) {\n      // TODO - this could become more efficient if widely used.\n      // TODO - should field order be maintained?\n      String[] flst = split(fl);\n      if (flst.length > 0 && !(flst.length==1 && flst[0].length()==0)) {\n        Set<String> set = new HashSet<String>();\n        for (String fname : flst) {\n          if(\"score\".equalsIgnoreCase(fname))\n            flags |= SolrIndexSearcher.GET_SCORES;\n          set.add(fname);\n        }\n        res.setReturnFields(set);\n      }\n    }\n    return flags;\n  }\n\n","sourceOld":"  /**\n   * Given a space seperated list of field names, sets the field list on the\n   * SolrQueryResponse.\n   *\n   * @return bitfield of SolrIndexSearcher flags that need to be set\n   */\n  public static int setReturnFields(String fl,\n                                    SolrQueryResponse res) {\n    int flags = 0;\n    if (fl != null) {\n      // TODO - this could become more efficient if widely used.\n      // TODO - should field order be maintained?\n      String[] flst = splitList.split(fl.trim(),0);\n      if (flst.length > 0 && !(flst.length==1 && flst[0].length()==0)) {\n        Set<String> set = new HashSet<String>();\n        for (String fname : flst) {\n          if(\"score\".equalsIgnoreCase(fname))\n            flags |= SolrIndexSearcher.GET_SCORES;\n          set.add(fname);\n        }\n        res.setReturnFields(set);\n      }\n    }\n    return flags;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#setReturnFields(String,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/util/SolrPluginUtils#setReturnFields(String,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Given a space seperated list of field names, sets the field list on the\n   * SolrQueryResponse.\n   *\n   * @return bitfield of SolrIndexSearcher flags that need to be set\n   */\n  public static int setReturnFields(String fl,\n                                    SolrQueryResponse res) {\n    int flags = 0;\n    if (fl != null) {\n      // TODO - this could become more efficient if widely used.\n      // TODO - should field order be maintained?\n      String[] flst = split(fl);\n      if (flst.length > 0 && !(flst.length==1 && flst[0].length()==0)) {\n        Set<String> set = new HashSet<String>();\n        for (String fname : flst) {\n          if(\"score\".equalsIgnoreCase(fname))\n            flags |= SolrIndexSearcher.GET_SCORES;\n          set.add(fname);\n        }\n        res.setReturnFields(set);\n      }\n    }\n    return flags;\n  }\n\n","sourceOld":"  /**\n   * Given a space seperated list of field names, sets the field list on the\n   * SolrQueryResponse.\n   *\n   * @return bitfield of SolrIndexSearcher flags that need to be set\n   */\n  public static int setReturnFields(String fl,\n                                    SolrQueryResponse res) {\n    int flags = 0;\n    if (fl != null) {\n      // TODO - this could become more efficient if widely used.\n      // TODO - should field order be maintained?\n      String[] flst = split(fl);\n      if (flst.length > 0 && !(flst.length==1 && flst[0].length()==0)) {\n        Set<String> set = new HashSet<String>();\n        for (String fname : flst) {\n          if(\"score\".equalsIgnoreCase(fname))\n            flags |= SolrIndexSearcher.GET_SCORES;\n          set.add(fname);\n        }\n        res.setReturnFields(set);\n      }\n    }\n    return flags;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e4b5867a57b32674ce740e66e6a7da8db3d4dd33":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"0452863ee588101738d341e6e97eb87eb010052a":["e4b5867a57b32674ce740e66e6a7da8db3d4dd33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"af09a11446184597ca824554260a98704507f8a7":["0452863ee588101738d341e6e97eb87eb010052a"],"ad94625fb8d088209f46650c8097196fec67f00c":["af09a11446184597ca824554260a98704507f8a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e4b5867a57b32674ce740e66e6a7da8db3d4dd33":["0452863ee588101738d341e6e97eb87eb010052a"],"0452863ee588101738d341e6e97eb87eb010052a":["af09a11446184597ca824554260a98704507f8a7"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e4b5867a57b32674ce740e66e6a7da8db3d4dd33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"af09a11446184597ca824554260a98704507f8a7":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}