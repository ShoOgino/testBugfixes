{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testReaderFreshness().mjava","commits":[{"id":"b52ea8b7f80d4a0600efc9765dc896387008ebd4","date":1340109038,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testReaderFreshness().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testReaderFreshness() throws Exception {\n    // ensures that the internal index reader is always kept fresh. Previously,\n    // this simple scenario failed, if the cache just evicted the category that\n    // is being added.\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n    int o1 = taxoWriter.addCategory(new CategoryPath(\"a\"));\n    int o2 = taxoWriter.addCategory(new CategoryPath(\"a\"));\n    assertTrue(\"ordinal for same category that is added twice should be the same !\", o1 == o2);\n    taxoWriter.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testReaderFreshness().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testReaderFreshness().mjava","sourceNew":"  @Test\n  public void testReaderFreshness() throws Exception {\n    // ensures that the internal index reader is always kept fresh. Previously,\n    // this simple scenario failed, if the cache just evicted the category that\n    // is being added.\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n    int o1 = taxoWriter.addCategory(new FacetLabel(\"a\"));\n    int o2 = taxoWriter.addCategory(new FacetLabel(\"a\"));\n    assertTrue(\"ordinal for same category that is added twice should be the same !\", o1 == o2);\n    taxoWriter.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReaderFreshness() throws Exception {\n    // ensures that the internal index reader is always kept fresh. Previously,\n    // this simple scenario failed, if the cache just evicted the category that\n    // is being added.\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n    int o1 = taxoWriter.addCategory(new CategoryPath(\"a\"));\n    int o2 = taxoWriter.addCategory(new CategoryPath(\"a\"));\n    assertTrue(\"ordinal for same category that is added twice should be the same !\", o1 == o2);\n    taxoWriter.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testReaderFreshness().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testReaderFreshness().mjava","sourceNew":"  @Test\n  public void testReaderFreshness() throws Exception {\n    // ensures that the internal index reader is always kept fresh. Previously,\n    // this simple scenario failed, if the cache just evicted the category that\n    // is being added.\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n    int o1 = taxoWriter.addCategory(new FacetLabel(\"a\"));\n    int o2 = taxoWriter.addCategory(new FacetLabel(\"a\"));\n    assertTrue(\"ordinal for same category that is added twice should be the same !\", o1 == o2);\n    taxoWriter.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReaderFreshness() throws Exception {\n    // ensures that the internal index reader is always kept fresh. Previously,\n    // this simple scenario failed, if the cache just evicted the category that\n    // is being added.\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n    int o1 = taxoWriter.addCategory(new CategoryPath(\"a\"));\n    int o2 = taxoWriter.addCategory(new CategoryPath(\"a\"));\n    assertTrue(\"ordinal for same category that is added twice should be the same !\", o1 == o2);\n    taxoWriter.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b52ea8b7f80d4a0600efc9765dc896387008ebd4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["b52ea8b7f80d4a0600efc9765dc896387008ebd4","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["b52ea8b7f80d4a0600efc9765dc896387008ebd4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b52ea8b7f80d4a0600efc9765dc896387008ebd4"],"b52ea8b7f80d4a0600efc9765dc896387008ebd4":["3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}