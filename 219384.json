{"path":"solr/core/src/test/org/apache/solr/security/hadoop/TestDelegationWithHadoopAuth#testDelegationTokenCancelFail().mjava","commits":[{"id":"29887daf839649150d96855b142b76f5c45d60d2","date":1482160504,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/hadoop/TestDelegationWithHadoopAuth#testDelegationTokenCancelFail().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDelegationTokenCancelFail() throws Exception {\n    // cancel a bogus token\n    cancelDelegationToken(\"BOGUS\", ErrorCode.NOT_FOUND.code, primarySolrClient);\n\n    {\n      // cancel twice, first on same server\n      String token = getDelegationToken(null, USER_1, primarySolrClient);\n      assertNotNull(token);\n      cancelDelegationToken(token, HttpStatus.SC_OK, primarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, primarySolrClient);\n    }\n\n    {\n      // cancel twice, first on other server\n      String token = getDelegationToken(null, USER_1, primarySolrClient);\n      assertNotNull(token);\n      cancelDelegationToken(token, HttpStatus.SC_OK, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, primarySolrClient);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/security/hadoop/TestDelegationWithHadoopAuth#testDelegationTokenCancelFail().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDelegationTokenCancelFail() throws Exception {\n    // cancel a bogus token\n    cancelDelegationToken(\"BOGUS\", ErrorCode.NOT_FOUND.code, primarySolrClient);\n\n    {\n      // cancel twice, first on same server\n      String token = getDelegationToken(null, USER_1, primarySolrClient);\n      assertNotNull(token);\n      cancelDelegationToken(token, HttpStatus.SC_OK, primarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, primarySolrClient);\n    }\n\n    {\n      // cancel twice, first on other server\n      String token = getDelegationToken(null, USER_1, primarySolrClient);\n      assertNotNull(token);\n      cancelDelegationToken(token, HttpStatus.SC_OK, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, primarySolrClient);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48eb13cf7087229979b192cb36da254bf98a9055","date":1485970198,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/hadoop/TestDelegationWithHadoopAuth#testDelegationTokenCancelFail().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/hadoop/TestDelegationWithHadoopAuth#testDelegationTokenCancelFail().mjava","sourceNew":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/HADOOP-14044\")\n  public void testDelegationTokenCancelFail() throws Exception {\n    // cancel a bogus token\n    cancelDelegationToken(\"BOGUS\", ErrorCode.NOT_FOUND.code, primarySolrClient);\n\n    {\n      // cancel twice, first on same server\n      String token = getDelegationToken(null, USER_1, primarySolrClient);\n      assertNotNull(token);\n      cancelDelegationToken(token, HttpStatus.SC_OK, primarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, primarySolrClient);\n    }\n\n    {\n      // cancel twice, first on other server\n      String token = getDelegationToken(null, USER_1, primarySolrClient);\n      assertNotNull(token);\n      cancelDelegationToken(token, HttpStatus.SC_OK, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, primarySolrClient);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDelegationTokenCancelFail() throws Exception {\n    // cancel a bogus token\n    cancelDelegationToken(\"BOGUS\", ErrorCode.NOT_FOUND.code, primarySolrClient);\n\n    {\n      // cancel twice, first on same server\n      String token = getDelegationToken(null, USER_1, primarySolrClient);\n      assertNotNull(token);\n      cancelDelegationToken(token, HttpStatus.SC_OK, primarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, primarySolrClient);\n    }\n\n    {\n      // cancel twice, first on other server\n      String token = getDelegationToken(null, USER_1, primarySolrClient);\n      assertNotNull(token);\n      cancelDelegationToken(token, HttpStatus.SC_OK, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, primarySolrClient);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4624ee88a6e7d17a5e20658636e85fe945ca9968","date":1519418966,"type":3,"author":"Erick","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/hadoop/TestDelegationWithHadoopAuth#testDelegationTokenCancelFail().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/hadoop/TestDelegationWithHadoopAuth#testDelegationTokenCancelFail().mjava","sourceNew":"  @Test\n  // Commented out 22-Feb-2018\n  // @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/HADOOP-14044\")\n  public void testDelegationTokenCancelFail() throws Exception {\n    // cancel a bogus token\n    cancelDelegationToken(\"BOGUS\", ErrorCode.NOT_FOUND.code, primarySolrClient);\n\n    {\n      // cancel twice, first on same server\n      String token = getDelegationToken(null, USER_1, primarySolrClient);\n      assertNotNull(token);\n      cancelDelegationToken(token, HttpStatus.SC_OK, primarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, primarySolrClient);\n    }\n\n    {\n      // cancel twice, first on other server\n      String token = getDelegationToken(null, USER_1, primarySolrClient);\n      assertNotNull(token);\n      cancelDelegationToken(token, HttpStatus.SC_OK, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, primarySolrClient);\n    }\n  }\n\n","sourceOld":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/HADOOP-14044\")\n  public void testDelegationTokenCancelFail() throws Exception {\n    // cancel a bogus token\n    cancelDelegationToken(\"BOGUS\", ErrorCode.NOT_FOUND.code, primarySolrClient);\n\n    {\n      // cancel twice, first on same server\n      String token = getDelegationToken(null, USER_1, primarySolrClient);\n      assertNotNull(token);\n      cancelDelegationToken(token, HttpStatus.SC_OK, primarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, primarySolrClient);\n    }\n\n    {\n      // cancel twice, first on other server\n      String token = getDelegationToken(null, USER_1, primarySolrClient);\n      assertNotNull(token);\n      cancelDelegationToken(token, HttpStatus.SC_OK, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, primarySolrClient);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bedc8e5595055009e34aaa41f94d3645ba103d98","date":1520708295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/hadoop/TestDelegationWithHadoopAuth#testDelegationTokenCancelFail().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/hadoop/TestDelegationWithHadoopAuth#testDelegationTokenCancelFail().mjava","sourceNew":"  @Test\n  public void testDelegationTokenCancelFail() throws Exception {\n    // cancel a bogus token\n    cancelDelegationToken(\"BOGUS\", ErrorCode.NOT_FOUND.code, primarySolrClient);\n\n    {\n      // cancel twice, first on same server\n      String token = getDelegationToken(null, USER_1, primarySolrClient);\n      assertNotNull(token);\n      cancelDelegationToken(token, HttpStatus.SC_OK, primarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, primarySolrClient);\n    }\n\n    {\n      // cancel twice, first on other server\n      String token = getDelegationToken(null, USER_1, primarySolrClient);\n      assertNotNull(token);\n      cancelDelegationToken(token, HttpStatus.SC_OK, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, primarySolrClient);\n    }\n  }\n\n","sourceOld":"  @Test\n  // Commented out 22-Feb-2018\n  // @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/HADOOP-14044\")\n  public void testDelegationTokenCancelFail() throws Exception {\n    // cancel a bogus token\n    cancelDelegationToken(\"BOGUS\", ErrorCode.NOT_FOUND.code, primarySolrClient);\n\n    {\n      // cancel twice, first on same server\n      String token = getDelegationToken(null, USER_1, primarySolrClient);\n      assertNotNull(token);\n      cancelDelegationToken(token, HttpStatus.SC_OK, primarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, primarySolrClient);\n    }\n\n    {\n      // cancel twice, first on other server\n      String token = getDelegationToken(null, USER_1, primarySolrClient);\n      assertNotNull(token);\n      cancelDelegationToken(token, HttpStatus.SC_OK, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, secondarySolrClient);\n      cancelDelegationToken(token, ErrorCode.NOT_FOUND.code, primarySolrClient);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29887daf839649150d96855b142b76f5c45d60d2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","29887daf839649150d96855b142b76f5c45d60d2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bedc8e5595055009e34aaa41f94d3645ba103d98":["4624ee88a6e7d17a5e20658636e85fe945ca9968"],"4624ee88a6e7d17a5e20658636e85fe945ca9968":["48eb13cf7087229979b192cb36da254bf98a9055"],"48eb13cf7087229979b192cb36da254bf98a9055":["29887daf839649150d96855b142b76f5c45d60d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bedc8e5595055009e34aaa41f94d3645ba103d98"]},"commit2Childs":{"29887daf839649150d96855b142b76f5c45d60d2":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","48eb13cf7087229979b192cb36da254bf98a9055"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29887daf839649150d96855b142b76f5c45d60d2","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"bedc8e5595055009e34aaa41f94d3645ba103d98":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4624ee88a6e7d17a5e20658636e85fe945ca9968":["bedc8e5595055009e34aaa41f94d3645ba103d98"],"48eb13cf7087229979b192cb36da254bf98a9055":["4624ee88a6e7d17a5e20658636e85fe945ca9968"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}