{"path":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl.DocTermsIndexEnum#seek(long).mjava","commits":[{"id":"e9069c2e665572658f846820b6cb8ad53de19df0","date":1276611358,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl.DocTermsIndexEnum#seek(long).mjava","pathOld":"/dev/null","sourceNew":"      @Override\n      public SeekStatus seek(long ord) throws IOException {\n        assert(ord >= 0 && ord <= numOrd);\n        // TODO: if gap is small, could iterate from current position?  Or let user decide that?\n        currentBlockNumber = bytes.fillUsingLengthPrefix2(term, termOrdToBytesOffset.get((int)ord));\n        end = blockEnds[currentBlockNumber];\n        currentOrd = (int)ord;\n        return SeekStatus.FOUND;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl.DocTermsIndexEnum#seek(long).mjava","pathOld":"/dev/null","sourceNew":"      @Override\n      public SeekStatus seek(long ord) throws IOException {\n        assert(ord >= 0 && ord <= numOrd);\n        // TODO: if gap is small, could iterate from current position?  Or let user decide that?\n        currentBlockNumber = bytes.fillUsingLengthPrefix2(term, termOrdToBytesOffset.get((int)ord));\n        end = blockEnds[currentBlockNumber];\n        currentOrd = (int)ord;\n        return SeekStatus.FOUND;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eee9156bf08d7eaae5e8d8ab5f855ba61012e257","date":1285443157,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/cache/DocTermsIndexCreator.DocTermsIndexImpl.DocTermsIndexEnum#seek(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl.DocTermsIndexEnum#seek(long).mjava","sourceNew":"      @Override\r\n      public SeekStatus seek(long ord) throws IOException {\r\n        assert(ord >= 0 && ord <= numOrd);\r\n        // TODO: if gap is small, could iterate from current position?  Or let user decide that?\r\n        currentBlockNumber = bytes.fillUsingLengthPrefix2(term, termOrdToBytesOffset.get((int)ord));\r\n        end = blockEnds[currentBlockNumber];\r\n        currentOrd = (int)ord;\r\n        return SeekStatus.FOUND;\r\n      }\r\n\n","sourceOld":"      @Override\n      public SeekStatus seek(long ord) throws IOException {\n        assert(ord >= 0 && ord <= numOrd);\n        // TODO: if gap is small, could iterate from current position?  Or let user decide that?\n        currentBlockNumber = bytes.fillUsingLengthPrefix2(term, termOrdToBytesOffset.get((int)ord));\n        end = blockEnds[currentBlockNumber];\n        currentOrd = (int)ord;\n        return SeekStatus.FOUND;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl.DocTermsIndexEnum#seek(long).mjava","sourceNew":null,"sourceOld":"      @Override\n      public SeekStatus seek(long ord) throws IOException {\n        assert(ord >= 0 && ord <= numOrd);\n        // TODO: if gap is small, could iterate from current position?  Or let user decide that?\n        currentBlockNumber = bytes.fillUsingLengthPrefix2(term, termOrdToBytesOffset.get((int)ord));\n        end = blockEnds[currentBlockNumber];\n        currentOrd = (int)ord;\n        return SeekStatus.FOUND;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eee9156bf08d7eaae5e8d8ab5f855ba61012e257":["e9069c2e665572658f846820b6cb8ad53de19df0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e9069c2e665572658f846820b6cb8ad53de19df0"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","eee9156bf08d7eaae5e8d8ab5f855ba61012e257"],"e9069c2e665572658f846820b6cb8ad53de19df0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eee9156bf08d7eaae5e8d8ab5f855ba61012e257"]},"commit2Childs":{"eee9156bf08d7eaae5e8d8ab5f855ba61012e257":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f4e87790277826a2aea119328600dfb07761f32","e9069c2e665572658f846820b6cb8ad53de19df0"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"e9069c2e665572658f846820b6cb8ad53de19df0":["eee9156bf08d7eaae5e8d8ab5f855ba61012e257","5f4e87790277826a2aea119328600dfb07761f32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}