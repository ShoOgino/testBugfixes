{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsStoredFields().mjava","commits":[{"id":"d34e4245b24e95dc1dcb51bbb50bcc39d9b6acca","date":1359416803,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsStoredFields().mjava","pathOld":"/dev/null","sourceNew":"  public void testSortedFixedLengthVsStoredFields() throws Exception {\n    int fixedLength = _TestUtil.nextInt(random(), 1, 10);\n    doTestSortedVsStoredFields(fixedLength, fixedLength);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e646e9343aa8a12e584d72d433ce6574f2dc514","date":1359689610,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsStoredFields().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsStoredFields().mjava","sourceNew":"  public void testSortedFixedLengthVsStoredFields() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = _TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsStoredFields(fixedLength, fixedLength);\n    }\n  }\n\n","sourceOld":"  public void testSortedFixedLengthVsStoredFields() throws Exception {\n    int fixedLength = _TestUtil.nextInt(random(), 1, 10);\n    doTestSortedVsStoredFields(fixedLength, fixedLength);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsStoredFields().mjava","pathOld":"/dev/null","sourceNew":"  public void testSortedFixedLengthVsStoredFields() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = _TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsStoredFields(fixedLength, fixedLength);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsStoredFields().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsStoredFields().mjava","sourceNew":"  public void testSortedFixedLengthVsStoredFields() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsStoredFields(fixedLength, fixedLength);\n    }\n  }\n\n","sourceOld":"  public void testSortedFixedLengthVsStoredFields() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = _TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsStoredFields(fixedLength, fixedLength);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793","date":1408030244,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsStoredFields().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsStoredFields().mjava","sourceNew":"  public void testSortedFixedLengthVsStoredFields() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsStoredFields(atLeast(300), fixedLength, fixedLength);\n    }\n  }\n\n","sourceOld":"  public void testSortedFixedLengthVsStoredFields() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsStoredFields(fixedLength, fixedLength);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11134e449dabe11d6d0ff6a564d84b82cbe93722","date":1477299083,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsStoredFields().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsStoredFields().mjava","sourceNew":"  public void testSortedFixedLengthVsStoredFields() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsStoredFields(atLeast(300), 1, fixedLength, fixedLength);\n    }\n  }\n\n","sourceOld":"  public void testSortedFixedLengthVsStoredFields() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsStoredFields(atLeast(300), fixedLength, fixedLength);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2714c85633b642b29871cf5ff8d17d3ba7bfd76","date":1477307753,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsStoredFields().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsStoredFields().mjava","sourceNew":"  public void testSortedFixedLengthVsStoredFields() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsStoredFields(atLeast(300), 1, fixedLength, fixedLength);\n    }\n  }\n\n","sourceOld":"  public void testSortedFixedLengthVsStoredFields() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsStoredFields(atLeast(300), fixedLength, fixedLength);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsStoredFields().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsStoredFields().mjava","sourceNew":"  public void testSortedFixedLengthVsStoredFields() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsStoredFields(atLeast(300), 1, fixedLength, fixedLength);\n    }\n  }\n\n","sourceOld":"  public void testSortedFixedLengthVsStoredFields() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsStoredFields(atLeast(300), fixedLength, fixedLength);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4e646e9343aa8a12e584d72d433ce6574f2dc514"],"6613659748fe4411a7dcf85266e55db1f95f7315":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"11134e449dabe11d6d0ff6a564d84b82cbe93722":["0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793","d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"d34e4245b24e95dc1dcb51bbb50bcc39d9b6acca":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793":["6613659748fe4411a7dcf85266e55db1f95f7315"],"d2714c85633b642b29871cf5ff8d17d3ba7bfd76":["0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793","11134e449dabe11d6d0ff6a564d84b82cbe93722"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"4e646e9343aa8a12e584d72d433ce6574f2dc514":["d34e4245b24e95dc1dcb51bbb50bcc39d9b6acca"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["6613659748fe4411a7dcf85266e55db1f95f7315"],"6613659748fe4411a7dcf85266e55db1f95f7315":["0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793"],"11134e449dabe11d6d0ff6a564d84b82cbe93722":["d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","d34e4245b24e95dc1dcb51bbb50bcc39d9b6acca"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"d34e4245b24e95dc1dcb51bbb50bcc39d9b6acca":["4e646e9343aa8a12e584d72d433ce6574f2dc514"],"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793":["11134e449dabe11d6d0ff6a564d84b82cbe93722","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"d2714c85633b642b29871cf5ff8d17d3ba7bfd76":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e646e9343aa8a12e584d72d433ce6574f2dc514":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}