{"path":"src/java/org/apache/lucene/store/RAMInputStream#RAMInputStream(RAMFile).mjava","commits":[{"id":"15c469602973ef1a33c9a07367a380d278ffab20","date":1074206555,"type":1,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMInputStream#RAMInputStream(RAMFile).mjava","pathOld":"src/java/org/apache/lucene/store/RAMInputStream[RAMDirectory]#RAMInputStream(RAMFile).mjava","sourceNew":"  public RAMInputStream(RAMFile f) {\n    file = f;\n    length = file.length;\n  }\n\n","sourceOld":"  public RAMInputStream(RAMFile f) {\n    file = f;\n    length = file.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d568d474b2c3c00dd89047135bcb6ff8bfa7b559","date":1176840521,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMInputStream#RAMInputStream(RAMFile).mjava","pathOld":"src/java/org/apache/lucene/store/RAMInputStream#RAMInputStream(RAMFile).mjava","sourceNew":"  public RAMInputStream(RAMFile f) {\n    file = f;\n    length = file.length;\n\n    // make sure that we switch to the\n    // first needed buffer lazily\n    currentBufferIndex = -1;\n    currentBuffer = null;\n  }\n\n","sourceOld":"  public RAMInputStream(RAMFile f) {\n    file = f;\n    length = file.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1acc0d4d75fc7ad1dae131d00a9ffa438b257ebe","date":1184862468,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMInputStream#RAMInputStream(RAMFile).mjava","pathOld":"src/java/org/apache/lucene/store/RAMInputStream#RAMInputStream(RAMFile).mjava","sourceNew":"  RAMInputStream(RAMFile f) throws IOException {\n    file = f;\n    length = file.length;\n    if (length/BUFFER_SIZE >= Integer.MAX_VALUE) {\n      throw new IOException(\"Too large RAMFile! \"+length); \n    }\n\n    // make sure that we switch to the\n    // first needed buffer lazily\n    currentBufferIndex = -1;\n    currentBuffer = null;\n  }\n\n","sourceOld":"  public RAMInputStream(RAMFile f) {\n    file = f;\n    length = file.length;\n\n    // make sure that we switch to the\n    // first needed buffer lazily\n    currentBufferIndex = -1;\n    currentBuffer = null;\n  }\n\n","bugFix":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMInputStream#RAMInputStream(RAMFile).mjava","pathOld":"src/java/org/apache/lucene/store/RAMInputStream#RAMInputStream(RAMFile).mjava","sourceNew":"  RAMInputStream(RAMFile f) throws IOException {\n    file = f;\n    length = file.length;\n    if (length/BUFFER_SIZE >= Integer.MAX_VALUE) {\n      throw new IOException(\"Too large RAMFile! \"+length); \n    }\n\n    // make sure that we switch to the\n    // first needed buffer lazily\n    currentBufferIndex = -1;\n    currentBuffer = null;\n  }\n\n","sourceOld":"  RAMInputStream(RAMFile f) throws IOException {\n    file = f;\n    length = file.length;\n    if (length/BUFFER_SIZE >= Integer.MAX_VALUE) {\n      throw new IOException(\"Too large RAMFile! \"+length); \n    }\n\n    // make sure that we switch to the\n    // first needed buffer lazily\n    currentBufferIndex = -1;\n    currentBuffer = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d568d474b2c3c00dd89047135bcb6ff8bfa7b559":["15c469602973ef1a33c9a07367a380d278ffab20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1acc0d4d75fc7ad1dae131d00a9ffa438b257ebe":["d568d474b2c3c00dd89047135bcb6ff8bfa7b559"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1acc0d4d75fc7ad1dae131d00a9ffa438b257ebe"],"15c469602973ef1a33c9a07367a380d278ffab20":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d568d474b2c3c00dd89047135bcb6ff8bfa7b559":["1acc0d4d75fc7ad1dae131d00a9ffa438b257ebe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["15c469602973ef1a33c9a07367a380d278ffab20"],"1acc0d4d75fc7ad1dae131d00a9ffa438b257ebe":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"15c469602973ef1a33c9a07367a380d278ffab20":["d568d474b2c3c00dd89047135bcb6ff8bfa7b559"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}