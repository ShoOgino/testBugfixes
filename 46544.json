{"path":"src/java/org/apache/solr/request/SimpleFacets#rangeCount(String,String,String,boolean,boolean).mjava","commits":[{"id":"487bcb36f5ba67741dd4dc6ebea3dc32420c4fb1","date":1185690521,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/request/SimpleFacets#rangeCount(String,String,String,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Macro for getting the numDocs of a ConstantScoreRangeQuery over docs\n   * @see docs\n   * @see SolrIndexSearcher#numDocs\n   * @see ConstantScoreRangeQuery\n   */\n  protected int rangeCount(String field, String low, String high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    return searcher.numDocs(new ConstantScoreRangeQuery(field,low,high,\n                                                        iHigh,iLow),\n                            docs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7ce2116ab68bc8c79e2b039be74d09f1861c30c","date":1186551066,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/request/SimpleFacets#rangeCount(String,String,String,boolean,boolean).mjava","pathOld":"src/java/org/apache/solr/request/SimpleFacets#rangeCount(String,String,String,boolean,boolean).mjava","sourceNew":"  /**\n   * Macro for getting the numDocs of a ConstantScoreRangeQuery over docs\n   * @see docs\n   * @see SolrIndexSearcher#numDocs\n   * @see ConstantScoreRangeQuery\n   */\n  protected int rangeCount(String field, String low, String high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    return searcher.numDocs(new ConstantScoreRangeQuery(field,low,high,\n                                                        iLow,iHigh),\n                            docs);\n  }\n\n","sourceOld":"  /**\n   * Macro for getting the numDocs of a ConstantScoreRangeQuery over docs\n   * @see docs\n   * @see SolrIndexSearcher#numDocs\n   * @see ConstantScoreRangeQuery\n   */\n  protected int rangeCount(String field, String low, String high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    return searcher.numDocs(new ConstantScoreRangeQuery(field,low,high,\n                                                        iHigh,iLow),\n                            docs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b6124b1a8da43c086b34ee5005d89e20f4f0764","date":1189219182,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/SimpleFacets#rangeCount(String,String,String,boolean,boolean).mjava","pathOld":"src/java/org/apache/solr/request/SimpleFacets#rangeCount(String,String,String,boolean,boolean).mjava","sourceNew":"  /**\n   * Macro for getting the numDocs of a ConstantScoreRangeQuery over docs\n   * @see SolrIndexSearcher#numDocs\n   * @see ConstantScoreRangeQuery\n   */\n  protected int rangeCount(String field, String low, String high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    return searcher.numDocs(new ConstantScoreRangeQuery(field,low,high,\n                                                        iLow,iHigh),\n                            docs);\n  }\n\n","sourceOld":"  /**\n   * Macro for getting the numDocs of a ConstantScoreRangeQuery over docs\n   * @see docs\n   * @see SolrIndexSearcher#numDocs\n   * @see ConstantScoreRangeQuery\n   */\n  protected int rangeCount(String field, String low, String high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    return searcher.numDocs(new ConstantScoreRangeQuery(field,low,high,\n                                                        iLow,iHigh),\n                            docs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9cb179b2fab2183d2f6041e450ff8022c592ecf0","date":1229553695,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/SimpleFacets#rangeCount(String,String,String,boolean,boolean).mjava","pathOld":"src/java/org/apache/solr/request/SimpleFacets#rangeCount(String,String,String,boolean,boolean).mjava","sourceNew":"  /**\n   * Macro for getting the numDocs of a ConstantScoreRangeQuery over docs\n   * @see SolrIndexSearcher#numDocs\n   * @see ConstantScoreRangeQuery\n   */\n  protected int rangeCount(String field, String low, String high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    return searcher.numDocs(new ConstantScoreRangeQuery(field,low,high,\n                                                        iLow,iHigh),\n                            base);\n  }\n\n","sourceOld":"  /**\n   * Macro for getting the numDocs of a ConstantScoreRangeQuery over docs\n   * @see SolrIndexSearcher#numDocs\n   * @see ConstantScoreRangeQuery\n   */\n  protected int rangeCount(String field, String low, String high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    return searcher.numDocs(new ConstantScoreRangeQuery(field,low,high,\n                                                        iLow,iHigh),\n                            docs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e77721aaf23393f6ea7926045ae6f8efea0ce8e","date":1247678464,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/request/SimpleFacets#rangeCount(String,String,String,boolean,boolean).mjava","pathOld":"src/java/org/apache/solr/request/SimpleFacets#rangeCount(String,String,String,boolean,boolean).mjava","sourceNew":"  /**\n   * Macro for getting the numDocs of a TermRangeQuery over docs\n   * @see SolrIndexSearcher#numDocs\n   * @see TermRangeQuery\n   */\n  protected int rangeCount(String field, String low, String high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    return searcher.numDocs(new TermRangeQuery(field,low,high,iLow,iHigh),\n                            base);\n  }\n\n","sourceOld":"  /**\n   * Macro for getting the numDocs of a ConstantScoreRangeQuery over docs\n   * @see SolrIndexSearcher#numDocs\n   * @see ConstantScoreRangeQuery\n   */\n  protected int rangeCount(String field, String low, String high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    return searcher.numDocs(new ConstantScoreRangeQuery(field,low,high,\n                                                        iLow,iHigh),\n                            base);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbc0ca7104fa6f1d7cc24b05ed50b39ddb7cfa8c","date":1249333745,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/SimpleFacets#rangeCount(SchemaField,String,String,boolean,boolean).mjava","pathOld":"src/java/org/apache/solr/request/SimpleFacets#rangeCount(String,String,String,boolean,boolean).mjava","sourceNew":"  /**\n   * Macro for getting the numDocs of range over docs\n   * @see SolrIndexSearcher#numDocs\n   * @see TermRangeQuery\n   */\n  protected int rangeCount(SchemaField sf, String low, String high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    Query rangeQ = sf.getType().getRangeQuery(null, sf,low,high,iLow,iHigh);\n    return searcher.numDocs(rangeQ ,base);\n  }\n\n","sourceOld":"  /**\n   * Macro for getting the numDocs of a TermRangeQuery over docs\n   * @see SolrIndexSearcher#numDocs\n   * @see TermRangeQuery\n   */\n  protected int rangeCount(String field, String low, String high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    return searcher.numDocs(new TermRangeQuery(field,low,high,iLow,iHigh),\n                            base);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"487bcb36f5ba67741dd4dc6ebea3dc32420c4fb1":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"1e77721aaf23393f6ea7926045ae6f8efea0ce8e":["9cb179b2fab2183d2f6041e450ff8022c592ecf0"],"c7ce2116ab68bc8c79e2b039be74d09f1861c30c":["487bcb36f5ba67741dd4dc6ebea3dc32420c4fb1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"dbc0ca7104fa6f1d7cc24b05ed50b39ddb7cfa8c":["1e77721aaf23393f6ea7926045ae6f8efea0ce8e"],"9cb179b2fab2183d2f6041e450ff8022c592ecf0":["4b6124b1a8da43c086b34ee5005d89e20f4f0764"],"4b6124b1a8da43c086b34ee5005d89e20f4f0764":["c7ce2116ab68bc8c79e2b039be74d09f1861c30c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"487bcb36f5ba67741dd4dc6ebea3dc32420c4fb1":["c7ce2116ab68bc8c79e2b039be74d09f1861c30c"],"1e77721aaf23393f6ea7926045ae6f8efea0ce8e":["dbc0ca7104fa6f1d7cc24b05ed50b39ddb7cfa8c"],"c7ce2116ab68bc8c79e2b039be74d09f1861c30c":["4b6124b1a8da43c086b34ee5005d89e20f4f0764"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["487bcb36f5ba67741dd4dc6ebea3dc32420c4fb1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9cb179b2fab2183d2f6041e450ff8022c592ecf0":["1e77721aaf23393f6ea7926045ae6f8efea0ce8e"],"dbc0ca7104fa6f1d7cc24b05ed50b39ddb7cfa8c":[],"4b6124b1a8da43c086b34ee5005d89e20f4f0764":["9cb179b2fab2183d2f6041e450ff8022c592ecf0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["dbc0ca7104fa6f1d7cc24b05ed50b39ddb7cfa8c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}