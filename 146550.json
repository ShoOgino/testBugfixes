{"path":"lucene/demo/src/java/org/apache/lucene/demo/IndexFiles#indexDocs(IndexWriter,Path).mjava","commits":[{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/IndexFiles#indexDocs(IndexWriter,Path).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Indexes the given file using the given writer, or if a directory is given,\n   * recurses over files and directories found under the given directory.\n   * \n   * NOTE: This method indexes one document per input file.  This is slow.  For good\n   * throughput, put multiple documents into your input file(s).  An example of this is\n   * in the benchmark module, which can create \"line doc\" files, one document per line,\n   * using the\n   * <a href=\"../../../../../contrib-benchmark/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask.html\"\n   * >WriteLineDocTask</a>.\n   *  \n   * @param writer Writer to the index where the given file/dir info will be stored\n   * @param path The file to index, or the directory to recurse into to find files to index\n   * @throws IOException If there is a low-level I/O error\n   */\n  static void indexDocs(final IndexWriter writer, Path path) throws IOException {\n    if (Files.isDirectory(path)) {\n      Files.walkFileTree(path, new SimpleFileVisitor<Path>() {\n        @Override\n        public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {\n          try {\n            indexDoc(writer, file, attrs.lastModifiedTime().toMillis());\n          } catch (IOException ignore) {\n            // don't index files that can't be read.\n          }\n          return FileVisitResult.CONTINUE;\n        }\n      });\n    } else {\n      indexDoc(writer, path, Files.getLastModifiedTime(path).toMillis());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}