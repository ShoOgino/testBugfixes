{"path":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/FilteredIntervalsSource#matches(String,LeafReaderContext,int).mjava","commits":[{"id":"ff275d3941a30f2db7c9278444015f412b835254","date":1544435249,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/FilteredIntervalsSource#matches(String,LeafReaderContext,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/LowpassIntervalsSource#matches(String,LeafReaderContext,int).mjava","sourceNew":"  @Override\n  public MatchesIterator matches(String field, LeafReaderContext ctx, int doc) throws IOException {\n    MatchesIterator mi = in.matches(field, ctx, doc);\n    if (mi == null) {\n      return null;\n    }\n    IntervalIterator filtered = new IntervalFilter(IntervalMatches.wrapMatches(mi, doc)) {\n      @Override\n      protected boolean accept() {\n        return FilteredIntervalsSource.this.accept(in);\n      }\n    };\n    return IntervalMatches.asMatches(filtered, mi, doc);\n  }\n\n","sourceOld":"  @Override\n  public MatchesIterator matches(String field, LeafReaderContext ctx, int doc) throws IOException {\n    MatchesIterator mi = in.matches(field, ctx, doc);\n    if (mi == null) {\n      return null;\n    }\n    IntervalIterator filtered = new IntervalFilter(IntervalMatches.wrapMatches(mi, doc)) {\n      @Override\n      protected boolean accept() {\n        return (this.in.end() - this.in.start()) + 1 <= maxWidth;\n      }\n    };\n    return IntervalMatches.asMatches(filtered, mi, doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/intervals/FilteredIntervalsSource#matches(String,LeafReaderContext,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/FilteredIntervalsSource#matches(String,LeafReaderContext,int).mjava","sourceNew":"  @Override\n  public MatchesIterator matches(String field, LeafReaderContext ctx, int doc) throws IOException {\n    MatchesIterator mi = in.matches(field, ctx, doc);\n    if (mi == null) {\n      return null;\n    }\n    IntervalIterator filtered = new IntervalFilter(IntervalMatches.wrapMatches(mi, doc)) {\n      @Override\n      protected boolean accept() {\n        return FilteredIntervalsSource.this.accept(in);\n      }\n    };\n    return IntervalMatches.asMatches(filtered, mi, doc);\n  }\n\n","sourceOld":"  @Override\n  public MatchesIterator matches(String field, LeafReaderContext ctx, int doc) throws IOException {\n    MatchesIterator mi = in.matches(field, ctx, doc);\n    if (mi == null) {\n      return null;\n    }\n    IntervalIterator filtered = new IntervalFilter(IntervalMatches.wrapMatches(mi, doc)) {\n      @Override\n      protected boolean accept() {\n        return FilteredIntervalsSource.this.accept(in);\n      }\n    };\n    return IntervalMatches.asMatches(filtered, mi, doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["ff275d3941a30f2db7c9278444015f412b835254"],"ff275d3941a30f2db7c9278444015f412b835254":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ff275d3941a30f2db7c9278444015f412b835254":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ff275d3941a30f2db7c9278444015f412b835254"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}