{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/DoubleRangeFactory#getRange(double,DoubleRange).mjava","commits":[{"id":"dffda660acf5e107fac9ecaf9a798597f35c3f05","date":1589214841,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/DoubleRangeFactory#getRange(double,DoubleRange).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Finds the DoubleRange that a value should be grouped into\n   * @param value the value to group\n   * @param reuse an existing DoubleRange object to reuse\n   */\n  public DoubleRange getRange(double value, DoubleRange reuse) {\n    if (reuse == null)\n      reuse = new DoubleRange(Double.MIN_VALUE, Double.MAX_VALUE);\n    if (value < min) {\n      reuse.max = min;\n      reuse.min = Double.MIN_VALUE;\n      return reuse;\n    }\n    if (value >= max) {\n      reuse.min = max;\n      reuse.max = Double.MAX_VALUE;\n      return reuse;\n    }\n    double bucket = Math.floor((value - min) / width);\n    reuse.min = min + (bucket * width);\n    reuse.max = reuse.min + width;\n    return reuse;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dffda660acf5e107fac9ecaf9a798597f35c3f05":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dffda660acf5e107fac9ecaf9a798597f35c3f05"]},"commit2Childs":{"dffda660acf5e107fac9ecaf9a798597f35c3f05":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dffda660acf5e107fac9ecaf9a798597f35c3f05"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}