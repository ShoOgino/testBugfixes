{"path":"solr/core/src/test/org/apache/solr/cloud/ConfigSetsAPITest#testSharedSchema().mjava","commits":[{"id":"3e4fb176991e13ab85dfe62dceeb287dde115745","date":1579630717,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ConfigSetsAPITest#testSharedSchema().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSharedSchema() throws Exception {\n    CollectionAdminRequest.createCollection(\"col1\", \"cShare\", 1, 1)\n        .processAndWait(cluster.getSolrClient(), DEFAULT_TIMEOUT);\n    CollectionAdminRequest.createCollection(\"col2\", \"cShare\", 1, 1)\n        .processAndWait(cluster.getSolrClient(), DEFAULT_TIMEOUT);\n    CollectionAdminRequest.createCollection(\"col3\", \"conf1\", 1, 1)\n        .processAndWait(cluster.getSolrClient(), DEFAULT_TIMEOUT);\n\n    CoreContainer coreContainer = cluster.getJettySolrRunner(0).getCoreContainer();\n\n    try (SolrCore coreCol1 = coreContainer.getCore(\"col1_shard1_replica_n1\");\n         SolrCore coreCol2 = coreContainer.getCore(\"col2_shard1_replica_n1\");\n         SolrCore coreCol3 = coreContainer.getCore(\"col3_shard1_replica_n1\")) {\n      assertSame(coreCol1.getLatestSchema(), coreCol2.getLatestSchema());\n      assertNotSame(coreCol1.getLatestSchema(), coreCol3.getLatestSchema());\n    }\n\n    // change col1's configSet\n    CollectionAdminRequest.modifyCollection(\"col1\",\n      map(\"collection.configName\", \"conf1\")  // from cShare\n    ).processAndWait(cluster.getSolrClient(), DEFAULT_TIMEOUT);\n\n    try (SolrCore coreCol1 = coreContainer.getCore(\"col1_shard1_replica_n1\");\n         SolrCore coreCol2 = coreContainer.getCore(\"col2_shard1_replica_n1\")) {\n      assertNotSame(coreCol1.getLatestSchema(), coreCol2.getLatestSchema());\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ConfigSetsAPITest#testSharedSchema().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ConfigSetsAPITest#testSharedSchema().mjava","sourceNew":"  @Test\n  @SuppressWarnings({\"unchecked\"})\n  public void testSharedSchema() throws Exception {\n    CollectionAdminRequest.createCollection(\"col1\", \"cShare\", 1, 1)\n        .processAndWait(cluster.getSolrClient(), DEFAULT_TIMEOUT);\n    CollectionAdminRequest.createCollection(\"col2\", \"cShare\", 1, 1)\n        .processAndWait(cluster.getSolrClient(), DEFAULT_TIMEOUT);\n    CollectionAdminRequest.createCollection(\"col3\", \"conf1\", 1, 1)\n        .processAndWait(cluster.getSolrClient(), DEFAULT_TIMEOUT);\n\n    CoreContainer coreContainer = cluster.getJettySolrRunner(0).getCoreContainer();\n\n    try (SolrCore coreCol1 = coreContainer.getCore(\"col1_shard1_replica_n1\");\n         SolrCore coreCol2 = coreContainer.getCore(\"col2_shard1_replica_n1\");\n         SolrCore coreCol3 = coreContainer.getCore(\"col3_shard1_replica_n1\")) {\n      assertSame(coreCol1.getLatestSchema(), coreCol2.getLatestSchema());\n      assertNotSame(coreCol1.getLatestSchema(), coreCol3.getLatestSchema());\n    }\n\n    // change col1's configSet\n    CollectionAdminRequest.modifyCollection(\"col1\",\n      map(\"collection.configName\", \"conf1\")  // from cShare\n    ).processAndWait(cluster.getSolrClient(), DEFAULT_TIMEOUT);\n\n    try (SolrCore coreCol1 = coreContainer.getCore(\"col1_shard1_replica_n1\");\n         SolrCore coreCol2 = coreContainer.getCore(\"col2_shard1_replica_n1\")) {\n      assertNotSame(coreCol1.getLatestSchema(), coreCol2.getLatestSchema());\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testSharedSchema() throws Exception {\n    CollectionAdminRequest.createCollection(\"col1\", \"cShare\", 1, 1)\n        .processAndWait(cluster.getSolrClient(), DEFAULT_TIMEOUT);\n    CollectionAdminRequest.createCollection(\"col2\", \"cShare\", 1, 1)\n        .processAndWait(cluster.getSolrClient(), DEFAULT_TIMEOUT);\n    CollectionAdminRequest.createCollection(\"col3\", \"conf1\", 1, 1)\n        .processAndWait(cluster.getSolrClient(), DEFAULT_TIMEOUT);\n\n    CoreContainer coreContainer = cluster.getJettySolrRunner(0).getCoreContainer();\n\n    try (SolrCore coreCol1 = coreContainer.getCore(\"col1_shard1_replica_n1\");\n         SolrCore coreCol2 = coreContainer.getCore(\"col2_shard1_replica_n1\");\n         SolrCore coreCol3 = coreContainer.getCore(\"col3_shard1_replica_n1\")) {\n      assertSame(coreCol1.getLatestSchema(), coreCol2.getLatestSchema());\n      assertNotSame(coreCol1.getLatestSchema(), coreCol3.getLatestSchema());\n    }\n\n    // change col1's configSet\n    CollectionAdminRequest.modifyCollection(\"col1\",\n      map(\"collection.configName\", \"conf1\")  // from cShare\n    ).processAndWait(cluster.getSolrClient(), DEFAULT_TIMEOUT);\n\n    try (SolrCore coreCol1 = coreContainer.getCore(\"col1_shard1_replica_n1\");\n         SolrCore coreCol2 = coreContainer.getCore(\"col2_shard1_replica_n1\")) {\n      assertNotSame(coreCol1.getLatestSchema(), coreCol2.getLatestSchema());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e4fb176991e13ab85dfe62dceeb287dde115745":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["3e4fb176991e13ab85dfe62dceeb287dde115745"]},"commit2Childs":{"3e4fb176991e13ab85dfe62dceeb287dde115745":["e98520789adb1d5ad05afb4956eca0944a929688"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e4fb176991e13ab85dfe62dceeb287dde115745"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}