{"path":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyPropertiesCAR().mjava","commits":[{"id":"6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767","date":1520865397,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyPropertiesCAR().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyMetadataCAR().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testModifyPropertiesCAR() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n    ZkStateReader zkStateReader = createColectionsAndAlias(aliasName);\n    CollectionAdminRequest.SetAliasProperty setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"baz\");\n    setAliasProperty.addProperty(\"bar\",\"bam\");\n    setAliasProperty.process(cluster.getSolrClient());\n    checkFooAndBarMeta(aliasName, zkStateReader);\n\n    // now verify we can delete\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"\");\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"bar\",null);\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n\n    // whitespace value\n    setAliasProperty.addProperty(\"foo\",\" \");\n    setAliasProperty.process(cluster.getSolrClient());\n\n\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testModifyMetadataCAR() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n    ZkStateReader zkStateReader = createColectionsAndAlias(aliasName);\n    CollectionAdminRequest.ModifyAlias modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n    modifyAlias.addMetadata(\"foo\",\"baz\");\n    modifyAlias.addMetadata(\"bar\",\"bam\");\n    modifyAlias.process(cluster.getSolrClient());\n    checkFooAndBarMeta(aliasName, zkStateReader);\n\n    // now verify we can delete\n    modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n    modifyAlias.addMetadata(\"foo\",\"\");\n    modifyAlias.process(cluster.getSolrClient());\n    modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n    modifyAlias.addMetadata(\"bar\",null);\n    modifyAlias.process(cluster.getSolrClient());\n    modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n\n    // whitespace value\n    modifyAlias.addMetadata(\"foo\",\" \");\n    modifyAlias.process(cluster.getSolrClient());\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a980795a56f2fcbc94caeb3233071312d5684d59","date":1524255736,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyPropertiesCAR().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyPropertiesCAR().mjava","sourceNew":"  @Test\n  //@BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testModifyPropertiesCAR() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n    ZkStateReader zkStateReader = createColectionsAndAlias(aliasName);\n    CollectionAdminRequest.SetAliasProperty setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"baz\");\n    setAliasProperty.addProperty(\"bar\",\"bam\");\n    setAliasProperty.process(cluster.getSolrClient());\n    checkFooAndBarMeta(aliasName, zkStateReader);\n\n    // now verify we can delete\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"\");\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"bar\",null);\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n\n    // whitespace value\n    setAliasProperty.addProperty(\"foo\",\" \");\n    setAliasProperty.process(cluster.getSolrClient());\n\n\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testModifyPropertiesCAR() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n    ZkStateReader zkStateReader = createColectionsAndAlias(aliasName);\n    CollectionAdminRequest.SetAliasProperty setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"baz\");\n    setAliasProperty.addProperty(\"bar\",\"bam\");\n    setAliasProperty.process(cluster.getSolrClient());\n    checkFooAndBarMeta(aliasName, zkStateReader);\n\n    // now verify we can delete\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"\");\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"bar\",null);\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n\n    // whitespace value\n    setAliasProperty.addProperty(\"foo\",\" \");\n    setAliasProperty.process(cluster.getSolrClient());\n\n\n  }\n\n","bugFix":["6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7a7544ad4b63d1b5f556c3da8f9c63d332aa034e","date":1529622176,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyPropertiesCAR().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyPropertiesCAR().mjava","sourceNew":"  @Test\n  public void testModifyPropertiesCAR() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n    ZkStateReader zkStateReader = createColectionsAndAlias(aliasName);\n    CollectionAdminRequest.SetAliasProperty setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"baz\");\n    setAliasProperty.addProperty(\"bar\",\"bam\");\n    setAliasProperty.process(cluster.getSolrClient());\n    checkFooAndBarMeta(aliasName, zkStateReader);\n\n    // now verify we can delete\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"\");\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"bar\",null);\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n\n    // whitespace value\n    setAliasProperty.addProperty(\"foo\",\" \");\n    setAliasProperty.process(cluster.getSolrClient());\n\n\n  }\n\n","sourceOld":"  @Test\n  //@BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testModifyPropertiesCAR() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n    ZkStateReader zkStateReader = createColectionsAndAlias(aliasName);\n    CollectionAdminRequest.SetAliasProperty setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"baz\");\n    setAliasProperty.addProperty(\"bar\",\"bam\");\n    setAliasProperty.process(cluster.getSolrClient());\n    checkFooAndBarMeta(aliasName, zkStateReader);\n\n    // now verify we can delete\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"\");\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"bar\",null);\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n\n    // whitespace value\n    setAliasProperty.addProperty(\"foo\",\" \");\n    setAliasProperty.process(cluster.getSolrClient());\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyPropertiesCAR().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyPropertiesCAR().mjava","sourceNew":"  @Test\n  public void testModifyPropertiesCAR() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n    ZkStateReader zkStateReader = createColectionsAndAlias(aliasName);\n    CollectionAdminRequest.SetAliasProperty setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"baz\");\n    setAliasProperty.addProperty(\"bar\",\"bam\");\n    setAliasProperty.process(cluster.getSolrClient());\n    checkFooAndBarMeta(aliasName, zkStateReader);\n\n    // now verify we can delete\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"\");\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"bar\",null);\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n\n    // whitespace value\n    setAliasProperty.addProperty(\"foo\",\" \");\n    setAliasProperty.process(cluster.getSolrClient());\n\n\n  }\n\n","sourceOld":"  @Test\n  //@BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testModifyPropertiesCAR() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n    ZkStateReader zkStateReader = createColectionsAndAlias(aliasName);\n    CollectionAdminRequest.SetAliasProperty setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"baz\");\n    setAliasProperty.addProperty(\"bar\",\"bam\");\n    setAliasProperty.process(cluster.getSolrClient());\n    checkFooAndBarMeta(aliasName, zkStateReader);\n\n    // now verify we can delete\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"\");\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"bar\",null);\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n\n    // whitespace value\n    setAliasProperty.addProperty(\"foo\",\" \");\n    setAliasProperty.process(cluster.getSolrClient());\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyPropertiesCAR().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyPropertiesCAR().mjava","sourceNew":"  @Test\n  public void testModifyPropertiesCAR() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n    ZkStateReader zkStateReader = createColectionsAndAlias(aliasName);\n    CollectionAdminRequest.SetAliasProperty setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"baz\");\n    setAliasProperty.addProperty(\"bar\",\"bam\");\n    setAliasProperty.process(cluster.getSolrClient());\n    checkFooAndBarMeta(aliasName, zkStateReader);\n\n    // now verify we can delete\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"\");\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"bar\",null);\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n\n    // whitespace value\n    setAliasProperty.addProperty(\"foo\",\" \");\n    setAliasProperty.process(cluster.getSolrClient());\n\n\n  }\n\n","sourceOld":"  @Test\n  //@BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testModifyPropertiesCAR() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n    ZkStateReader zkStateReader = createColectionsAndAlias(aliasName);\n    CollectionAdminRequest.SetAliasProperty setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"baz\");\n    setAliasProperty.addProperty(\"bar\",\"bam\");\n    setAliasProperty.process(cluster.getSolrClient());\n    checkFooAndBarMeta(aliasName, zkStateReader);\n\n    // now verify we can delete\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"\");\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"bar\",null);\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n\n    // whitespace value\n    setAliasProperty.addProperty(\"foo\",\" \");\n    setAliasProperty.process(cluster.getSolrClient());\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyPropertiesCAR().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyPropertiesCAR().mjava","sourceNew":"  @Test\n  public void testModifyPropertiesCAR() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getSaferTestName();\n    ZkStateReader zkStateReader = createColectionsAndAlias(aliasName);\n    CollectionAdminRequest.SetAliasProperty setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"baz\");\n    setAliasProperty.addProperty(\"bar\",\"bam\");\n    setAliasProperty.process(cluster.getSolrClient());\n    checkFooAndBarMeta(aliasName, zkStateReader);\n\n    // now verify we can delete\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"\");\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"bar\",null);\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n\n    // whitespace value\n    setAliasProperty.addProperty(\"foo\",\" \");\n    setAliasProperty.process(cluster.getSolrClient());\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testModifyPropertiesCAR() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n    ZkStateReader zkStateReader = createColectionsAndAlias(aliasName);\n    CollectionAdminRequest.SetAliasProperty setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"baz\");\n    setAliasProperty.addProperty(\"bar\",\"bam\");\n    setAliasProperty.process(cluster.getSolrClient());\n    checkFooAndBarMeta(aliasName, zkStateReader);\n\n    // now verify we can delete\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"\");\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"bar\",null);\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n\n    // whitespace value\n    setAliasProperty.addProperty(\"foo\",\" \");\n    setAliasProperty.process(cluster.getSolrClient());\n\n\n  }\n\n","bugFix":["6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a980795a56f2fcbc94caeb3233071312d5684d59":["6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767"],"6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a980795a56f2fcbc94caeb3233071312d5684d59","7a7544ad4b63d1b5f556c3da8f9c63d332aa034e"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["7a7544ad4b63d1b5f556c3da8f9c63d332aa034e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7a7544ad4b63d1b5f556c3da8f9c63d332aa034e":["a980795a56f2fcbc94caeb3233071312d5684d59"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a980795a56f2fcbc94caeb3233071312d5684d59","7a7544ad4b63d1b5f556c3da8f9c63d332aa034e"]},"commit2Childs":{"a980795a56f2fcbc94caeb3233071312d5684d59":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7a7544ad4b63d1b5f556c3da8f9c63d332aa034e","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767":["a980795a56f2fcbc94caeb3233071312d5684d59"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767"],"7a7544ad4b63d1b5f556c3da8f9c63d332aa034e":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","bb222a3f9d9421d5c95afce73013fbd8de07ea1f","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}