{"path":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens#testDelegationTokenSolrClientWithUpdateRequests().mjava","commits":[{"id":"d2ea5b19328a5a1b04e714b1406d740794da8419","date":1573661505,"type":0,"author":"Istvan Farkas","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens#testDelegationTokenSolrClientWithUpdateRequests().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test HttpSolrServer's delegation token support for Update Requests\n   */\n  @Test\n  public void testDelegationTokenSolrClientWithUpdateRequests() throws Exception {\n    String collectionName = \"testDelegationTokensWithUpdate\";\n\n    // Get token\n    String token = getDelegationToken(null, \"bar\", solrClientPrimary);\n    assertNotNull(token);\n\n    // Tests with update request.\n    // Before SOLR-13921, the request without commit will fail with a NullpointerException in DelegationTokenHttpSolrClient.createMethod\n    // due to a missing null check in the createMethod. (When requesting a commit, the setAction method will call setParams on the\n    // request so there is no NPE in the createMethod.)\n    final HttpSolrClient scUpdateWToken = new HttpSolrClient.Builder(solrClientPrimary.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(solrClientPrimary.getParser())\n        .build();\n\n    // Create collection\n    CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection(collectionName, 1, 1);\n    create.process(scUpdateWToken);\n\n    try {\n      // test update request with token via property and commit=true\n      SolrRequest request = getUpdateRequest(true);\n      doSolrRequest(scUpdateWToken, request, collectionName, HttpStatus.SC_OK);\n\n      // test update request with token via property and commit=false\n      request = getUpdateRequest(false);\n      doSolrRequest(scUpdateWToken, request, collectionName, HttpStatus.SC_OK);\n\n    } finally {\n      scUpdateWToken.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens#testDelegationTokenSolrClientWithUpdateRequests().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens#testDelegationTokenSolrClientWithUpdateRequests().mjava","sourceNew":"  /**\n   * Test HttpSolrServer's delegation token support for Update Requests\n   */\n  @Test\n  public void testDelegationTokenSolrClientWithUpdateRequests() throws Exception {\n    String collectionName = \"testDelegationTokensWithUpdate\";\n\n    // Get token\n    String token = getDelegationToken(null, \"bar\", solrClientPrimary);\n    assertNotNull(token);\n\n    // Tests with update request.\n    // Before SOLR-13921, the request without commit will fail with a NullpointerException in DelegationTokenHttpSolrClient.createMethod\n    // due to a missing null check in the createMethod. (When requesting a commit, the setAction method will call setParams on the\n    // request so there is no NPE in the createMethod.)\n    final HttpSolrClient scUpdateWToken = new HttpSolrClient.Builder(solrClientPrimary.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(solrClientPrimary.getParser())\n        .build();\n\n    // Create collection\n    CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection(collectionName, 1, 1);\n    create.process(scUpdateWToken);\n\n    try {\n      // test update request with token via property and commit=true\n      @SuppressWarnings({\"rawtypes\"})\n      SolrRequest request = getUpdateRequest(true);\n      doSolrRequest(scUpdateWToken, request, collectionName, HttpStatus.SC_OK);\n\n      // test update request with token via property and commit=false\n      request = getUpdateRequest(false);\n      doSolrRequest(scUpdateWToken, request, collectionName, HttpStatus.SC_OK);\n\n    } finally {\n      scUpdateWToken.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Test HttpSolrServer's delegation token support for Update Requests\n   */\n  @Test\n  public void testDelegationTokenSolrClientWithUpdateRequests() throws Exception {\n    String collectionName = \"testDelegationTokensWithUpdate\";\n\n    // Get token\n    String token = getDelegationToken(null, \"bar\", solrClientPrimary);\n    assertNotNull(token);\n\n    // Tests with update request.\n    // Before SOLR-13921, the request without commit will fail with a NullpointerException in DelegationTokenHttpSolrClient.createMethod\n    // due to a missing null check in the createMethod. (When requesting a commit, the setAction method will call setParams on the\n    // request so there is no NPE in the createMethod.)\n    final HttpSolrClient scUpdateWToken = new HttpSolrClient.Builder(solrClientPrimary.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(solrClientPrimary.getParser())\n        .build();\n\n    // Create collection\n    CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection(collectionName, 1, 1);\n    create.process(scUpdateWToken);\n\n    try {\n      // test update request with token via property and commit=true\n      SolrRequest request = getUpdateRequest(true);\n      doSolrRequest(scUpdateWToken, request, collectionName, HttpStatus.SC_OK);\n\n      // test update request with token via property and commit=false\n      request = getUpdateRequest(false);\n      doSolrRequest(scUpdateWToken, request, collectionName, HttpStatus.SC_OK);\n\n    } finally {\n      scUpdateWToken.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["d2ea5b19328a5a1b04e714b1406d740794da8419"],"d2ea5b19328a5a1b04e714b1406d740794da8419":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"]},"commit2Childs":{"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d2ea5b19328a5a1b04e714b1406d740794da8419":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2ea5b19328a5a1b04e714b1406d740794da8419"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}