{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/lv/TestLatvianStemmer#testAdjectives().mjava","commits":[{"id":"09c24344d8c547da8d804ff8a4cdb9ef0decf980","date":1302800830,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/lv/TestLatvianStemmer#testAdjectives().mjava","pathOld":"/dev/null","sourceNew":"  public void testAdjectives() throws IOException {\n    checkOneTerm(a, \"zils\",     \"zil\"); // indef. nom. masc. sing.\n    checkOneTerm(a, \"zilais\",   \"zil\"); // def. nom. masc. sing.\n    checkOneTerm(a, \"zili\",     \"zil\"); // indef. nom. masc. pl.\n    checkOneTerm(a, \"zilie\",    \"zil\"); // def. nom. masc. pl.\n    checkOneTerm(a, \"zila\",     \"zil\"); // indef. nom. fem. sing.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // def. nom. fem. sing.\n    checkOneTerm(a, \"zilas\",    \"zil\"); // indef. nom. fem. pl.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // def. nom. fem. pl.\n    checkOneTerm(a, \"zila\",     \"zil\"); // indef. gen. masc. sing.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // def. gen. masc. sing.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. gen. masc. pl.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. gen. masc. pl.\n    checkOneTerm(a, \"zilas\",    \"zil\"); // indef. gen. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // def. gen. fem. sing.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. gen. fem. pl.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. gen. fem. pl.\n    checkOneTerm(a, \"zilam\",    \"zil\"); // indef. dat. masc. sing.\n    checkOneTerm(a, \"zilajam\",  \"zil\"); // def. dat. masc. sing.\n    checkOneTerm(a, \"ziliem\",   \"zil\"); // indef. dat. masc. pl.\n    checkOneTerm(a, \"zilajiem\", \"zil\"); // def. dat. masc. pl.\n    checkOneTerm(a, \"zilai\",    \"zil\"); // indef. dat. fem. sing.\n    checkOneTerm(a, \"zilajai\",  \"zil\"); // def. dat. fem. sing.\n    checkOneTerm(a, \"zilām\",    \"zil\"); // indef. dat. fem. pl.\n    checkOneTerm(a, \"zilajām\",  \"zil\"); // def. dat. fem. pl.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. acc. masc. sing.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. acc. masc. sing.\n    checkOneTerm(a, \"zilus\",    \"zil\"); // indef. acc. masc. pl.\n    checkOneTerm(a, \"zilos\",    \"zil\"); // def. acc. masc. pl.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. acc. fem. sing.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. acc. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // indef. acc. fem. pl.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // def. acc. fem. pl.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // indef. loc. masc. sing.\n    checkOneTerm(a, \"zilajā\",   \"zil\"); // def. loc. masc. sing.\n    checkOneTerm(a, \"zilos\",    \"zil\"); // indef. loc. masc. pl.\n    checkOneTerm(a, \"zilajos\",  \"zil\"); // def. loc. masc. pl.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // indef. loc. fem. sing.\n    checkOneTerm(a, \"zilajā\",   \"zil\"); // def. loc. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // indef. loc. fem. pl.\n    checkOneTerm(a, \"zilajās\",  \"zil\"); // def. loc. fem. pl.\n    checkOneTerm(a, \"zilais\",   \"zil\"); // voc. masc. sing.\n    checkOneTerm(a, \"zilie\",    \"zil\"); // voc. masc. pl.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // voc. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // voc. fem. pl.\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eb46686a27187e42311e77666a2c7026f461ebc","date":1302858020,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/lv/TestLatvianStemmer#testAdjectives().mjava","pathOld":"/dev/null","sourceNew":"  public void testAdjectives() throws IOException {\n    checkOneTerm(a, \"zils\",     \"zil\"); // indef. nom. masc. sing.\n    checkOneTerm(a, \"zilais\",   \"zil\"); // def. nom. masc. sing.\n    checkOneTerm(a, \"zili\",     \"zil\"); // indef. nom. masc. pl.\n    checkOneTerm(a, \"zilie\",    \"zil\"); // def. nom. masc. pl.\n    checkOneTerm(a, \"zila\",     \"zil\"); // indef. nom. fem. sing.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // def. nom. fem. sing.\n    checkOneTerm(a, \"zilas\",    \"zil\"); // indef. nom. fem. pl.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // def. nom. fem. pl.\n    checkOneTerm(a, \"zila\",     \"zil\"); // indef. gen. masc. sing.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // def. gen. masc. sing.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. gen. masc. pl.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. gen. masc. pl.\n    checkOneTerm(a, \"zilas\",    \"zil\"); // indef. gen. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // def. gen. fem. sing.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. gen. fem. pl.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. gen. fem. pl.\n    checkOneTerm(a, \"zilam\",    \"zil\"); // indef. dat. masc. sing.\n    checkOneTerm(a, \"zilajam\",  \"zil\"); // def. dat. masc. sing.\n    checkOneTerm(a, \"ziliem\",   \"zil\"); // indef. dat. masc. pl.\n    checkOneTerm(a, \"zilajiem\", \"zil\"); // def. dat. masc. pl.\n    checkOneTerm(a, \"zilai\",    \"zil\"); // indef. dat. fem. sing.\n    checkOneTerm(a, \"zilajai\",  \"zil\"); // def. dat. fem. sing.\n    checkOneTerm(a, \"zilām\",    \"zil\"); // indef. dat. fem. pl.\n    checkOneTerm(a, \"zilajām\",  \"zil\"); // def. dat. fem. pl.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. acc. masc. sing.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. acc. masc. sing.\n    checkOneTerm(a, \"zilus\",    \"zil\"); // indef. acc. masc. pl.\n    checkOneTerm(a, \"zilos\",    \"zil\"); // def. acc. masc. pl.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. acc. fem. sing.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. acc. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // indef. acc. fem. pl.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // def. acc. fem. pl.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // indef. loc. masc. sing.\n    checkOneTerm(a, \"zilajā\",   \"zil\"); // def. loc. masc. sing.\n    checkOneTerm(a, \"zilos\",    \"zil\"); // indef. loc. masc. pl.\n    checkOneTerm(a, \"zilajos\",  \"zil\"); // def. loc. masc. pl.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // indef. loc. fem. sing.\n    checkOneTerm(a, \"zilajā\",   \"zil\"); // def. loc. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // indef. loc. fem. pl.\n    checkOneTerm(a, \"zilajās\",  \"zil\"); // def. loc. fem. pl.\n    checkOneTerm(a, \"zilais\",   \"zil\"); // voc. masc. sing.\n    checkOneTerm(a, \"zilie\",    \"zil\"); // voc. masc. pl.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // voc. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // voc. fem. pl.\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/lv/TestLatvianStemmer#testAdjectives().mjava","pathOld":"/dev/null","sourceNew":"  public void testAdjectives() throws IOException {\n    checkOneTerm(a, \"zils\",     \"zil\"); // indef. nom. masc. sing.\n    checkOneTerm(a, \"zilais\",   \"zil\"); // def. nom. masc. sing.\n    checkOneTerm(a, \"zili\",     \"zil\"); // indef. nom. masc. pl.\n    checkOneTerm(a, \"zilie\",    \"zil\"); // def. nom. masc. pl.\n    checkOneTerm(a, \"zila\",     \"zil\"); // indef. nom. fem. sing.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // def. nom. fem. sing.\n    checkOneTerm(a, \"zilas\",    \"zil\"); // indef. nom. fem. pl.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // def. nom. fem. pl.\n    checkOneTerm(a, \"zila\",     \"zil\"); // indef. gen. masc. sing.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // def. gen. masc. sing.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. gen. masc. pl.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. gen. masc. pl.\n    checkOneTerm(a, \"zilas\",    \"zil\"); // indef. gen. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // def. gen. fem. sing.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. gen. fem. pl.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. gen. fem. pl.\n    checkOneTerm(a, \"zilam\",    \"zil\"); // indef. dat. masc. sing.\n    checkOneTerm(a, \"zilajam\",  \"zil\"); // def. dat. masc. sing.\n    checkOneTerm(a, \"ziliem\",   \"zil\"); // indef. dat. masc. pl.\n    checkOneTerm(a, \"zilajiem\", \"zil\"); // def. dat. masc. pl.\n    checkOneTerm(a, \"zilai\",    \"zil\"); // indef. dat. fem. sing.\n    checkOneTerm(a, \"zilajai\",  \"zil\"); // def. dat. fem. sing.\n    checkOneTerm(a, \"zilām\",    \"zil\"); // indef. dat. fem. pl.\n    checkOneTerm(a, \"zilajām\",  \"zil\"); // def. dat. fem. pl.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. acc. masc. sing.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. acc. masc. sing.\n    checkOneTerm(a, \"zilus\",    \"zil\"); // indef. acc. masc. pl.\n    checkOneTerm(a, \"zilos\",    \"zil\"); // def. acc. masc. pl.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. acc. fem. sing.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. acc. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // indef. acc. fem. pl.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // def. acc. fem. pl.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // indef. loc. masc. sing.\n    checkOneTerm(a, \"zilajā\",   \"zil\"); // def. loc. masc. sing.\n    checkOneTerm(a, \"zilos\",    \"zil\"); // indef. loc. masc. pl.\n    checkOneTerm(a, \"zilajos\",  \"zil\"); // def. loc. masc. pl.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // indef. loc. fem. sing.\n    checkOneTerm(a, \"zilajā\",   \"zil\"); // def. loc. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // indef. loc. fem. pl.\n    checkOneTerm(a, \"zilajās\",  \"zil\"); // def. loc. fem. pl.\n    checkOneTerm(a, \"zilais\",   \"zil\"); // voc. masc. sing.\n    checkOneTerm(a, \"zilie\",    \"zil\"); // voc. masc. pl.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // voc. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // voc. fem. pl.\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/lv/TestLatvianStemmer#testAdjectives().mjava","pathOld":"/dev/null","sourceNew":"  public void testAdjectives() throws IOException {\n    checkOneTerm(a, \"zils\",     \"zil\"); // indef. nom. masc. sing.\n    checkOneTerm(a, \"zilais\",   \"zil\"); // def. nom. masc. sing.\n    checkOneTerm(a, \"zili\",     \"zil\"); // indef. nom. masc. pl.\n    checkOneTerm(a, \"zilie\",    \"zil\"); // def. nom. masc. pl.\n    checkOneTerm(a, \"zila\",     \"zil\"); // indef. nom. fem. sing.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // def. nom. fem. sing.\n    checkOneTerm(a, \"zilas\",    \"zil\"); // indef. nom. fem. pl.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // def. nom. fem. pl.\n    checkOneTerm(a, \"zila\",     \"zil\"); // indef. gen. masc. sing.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // def. gen. masc. sing.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. gen. masc. pl.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. gen. masc. pl.\n    checkOneTerm(a, \"zilas\",    \"zil\"); // indef. gen. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // def. gen. fem. sing.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. gen. fem. pl.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. gen. fem. pl.\n    checkOneTerm(a, \"zilam\",    \"zil\"); // indef. dat. masc. sing.\n    checkOneTerm(a, \"zilajam\",  \"zil\"); // def. dat. masc. sing.\n    checkOneTerm(a, \"ziliem\",   \"zil\"); // indef. dat. masc. pl.\n    checkOneTerm(a, \"zilajiem\", \"zil\"); // def. dat. masc. pl.\n    checkOneTerm(a, \"zilai\",    \"zil\"); // indef. dat. fem. sing.\n    checkOneTerm(a, \"zilajai\",  \"zil\"); // def. dat. fem. sing.\n    checkOneTerm(a, \"zilām\",    \"zil\"); // indef. dat. fem. pl.\n    checkOneTerm(a, \"zilajām\",  \"zil\"); // def. dat. fem. pl.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. acc. masc. sing.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. acc. masc. sing.\n    checkOneTerm(a, \"zilus\",    \"zil\"); // indef. acc. masc. pl.\n    checkOneTerm(a, \"zilos\",    \"zil\"); // def. acc. masc. pl.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. acc. fem. sing.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. acc. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // indef. acc. fem. pl.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // def. acc. fem. pl.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // indef. loc. masc. sing.\n    checkOneTerm(a, \"zilajā\",   \"zil\"); // def. loc. masc. sing.\n    checkOneTerm(a, \"zilos\",    \"zil\"); // indef. loc. masc. pl.\n    checkOneTerm(a, \"zilajos\",  \"zil\"); // def. loc. masc. pl.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // indef. loc. fem. sing.\n    checkOneTerm(a, \"zilajā\",   \"zil\"); // def. loc. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // indef. loc. fem. pl.\n    checkOneTerm(a, \"zilajās\",  \"zil\"); // def. loc. fem. pl.\n    checkOneTerm(a, \"zilais\",   \"zil\"); // voc. masc. sing.\n    checkOneTerm(a, \"zilie\",    \"zil\"); // voc. masc. pl.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // voc. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // voc. fem. pl.\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/lv/TestLatvianStemmer#testAdjectives().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/lv/TestLatvianStemmer#testAdjectives().mjava","sourceNew":"  public void testAdjectives() throws IOException {\n    checkOneTerm(a, \"zils\",     \"zil\"); // indef. nom. masc. sing.\n    checkOneTerm(a, \"zilais\",   \"zil\"); // def. nom. masc. sing.\n    checkOneTerm(a, \"zili\",     \"zil\"); // indef. nom. masc. pl.\n    checkOneTerm(a, \"zilie\",    \"zil\"); // def. nom. masc. pl.\n    checkOneTerm(a, \"zila\",     \"zil\"); // indef. nom. fem. sing.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // def. nom. fem. sing.\n    checkOneTerm(a, \"zilas\",    \"zil\"); // indef. nom. fem. pl.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // def. nom. fem. pl.\n    checkOneTerm(a, \"zila\",     \"zil\"); // indef. gen. masc. sing.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // def. gen. masc. sing.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. gen. masc. pl.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. gen. masc. pl.\n    checkOneTerm(a, \"zilas\",    \"zil\"); // indef. gen. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // def. gen. fem. sing.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. gen. fem. pl.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. gen. fem. pl.\n    checkOneTerm(a, \"zilam\",    \"zil\"); // indef. dat. masc. sing.\n    checkOneTerm(a, \"zilajam\",  \"zil\"); // def. dat. masc. sing.\n    checkOneTerm(a, \"ziliem\",   \"zil\"); // indef. dat. masc. pl.\n    checkOneTerm(a, \"zilajiem\", \"zil\"); // def. dat. masc. pl.\n    checkOneTerm(a, \"zilai\",    \"zil\"); // indef. dat. fem. sing.\n    checkOneTerm(a, \"zilajai\",  \"zil\"); // def. dat. fem. sing.\n    checkOneTerm(a, \"zilām\",    \"zil\"); // indef. dat. fem. pl.\n    checkOneTerm(a, \"zilajām\",  \"zil\"); // def. dat. fem. pl.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. acc. masc. sing.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. acc. masc. sing.\n    checkOneTerm(a, \"zilus\",    \"zil\"); // indef. acc. masc. pl.\n    checkOneTerm(a, \"zilos\",    \"zil\"); // def. acc. masc. pl.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. acc. fem. sing.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. acc. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // indef. acc. fem. pl.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // def. acc. fem. pl.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // indef. loc. masc. sing.\n    checkOneTerm(a, \"zilajā\",   \"zil\"); // def. loc. masc. sing.\n    checkOneTerm(a, \"zilos\",    \"zil\"); // indef. loc. masc. pl.\n    checkOneTerm(a, \"zilajos\",  \"zil\"); // def. loc. masc. pl.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // indef. loc. fem. sing.\n    checkOneTerm(a, \"zilajā\",   \"zil\"); // def. loc. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // indef. loc. fem. pl.\n    checkOneTerm(a, \"zilajās\",  \"zil\"); // def. loc. fem. pl.\n    checkOneTerm(a, \"zilais\",   \"zil\"); // voc. masc. sing.\n    checkOneTerm(a, \"zilie\",    \"zil\"); // voc. masc. pl.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // voc. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // voc. fem. pl.\n  }\n\n","sourceOld":"  public void testAdjectives() throws IOException {\n    checkOneTerm(a, \"zils\",     \"zil\"); // indef. nom. masc. sing.\n    checkOneTerm(a, \"zilais\",   \"zil\"); // def. nom. masc. sing.\n    checkOneTerm(a, \"zili\",     \"zil\"); // indef. nom. masc. pl.\n    checkOneTerm(a, \"zilie\",    \"zil\"); // def. nom. masc. pl.\n    checkOneTerm(a, \"zila\",     \"zil\"); // indef. nom. fem. sing.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // def. nom. fem. sing.\n    checkOneTerm(a, \"zilas\",    \"zil\"); // indef. nom. fem. pl.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // def. nom. fem. pl.\n    checkOneTerm(a, \"zila\",     \"zil\"); // indef. gen. masc. sing.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // def. gen. masc. sing.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. gen. masc. pl.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. gen. masc. pl.\n    checkOneTerm(a, \"zilas\",    \"zil\"); // indef. gen. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // def. gen. fem. sing.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. gen. fem. pl.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. gen. fem. pl.\n    checkOneTerm(a, \"zilam\",    \"zil\"); // indef. dat. masc. sing.\n    checkOneTerm(a, \"zilajam\",  \"zil\"); // def. dat. masc. sing.\n    checkOneTerm(a, \"ziliem\",   \"zil\"); // indef. dat. masc. pl.\n    checkOneTerm(a, \"zilajiem\", \"zil\"); // def. dat. masc. pl.\n    checkOneTerm(a, \"zilai\",    \"zil\"); // indef. dat. fem. sing.\n    checkOneTerm(a, \"zilajai\",  \"zil\"); // def. dat. fem. sing.\n    checkOneTerm(a, \"zilām\",    \"zil\"); // indef. dat. fem. pl.\n    checkOneTerm(a, \"zilajām\",  \"zil\"); // def. dat. fem. pl.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. acc. masc. sing.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. acc. masc. sing.\n    checkOneTerm(a, \"zilus\",    \"zil\"); // indef. acc. masc. pl.\n    checkOneTerm(a, \"zilos\",    \"zil\"); // def. acc. masc. pl.\n    checkOneTerm(a, \"zilu\",     \"zil\"); // indef. acc. fem. sing.\n    checkOneTerm(a, \"zilo\",     \"zil\"); // def. acc. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // indef. acc. fem. pl.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // def. acc. fem. pl.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // indef. loc. masc. sing.\n    checkOneTerm(a, \"zilajā\",   \"zil\"); // def. loc. masc. sing.\n    checkOneTerm(a, \"zilos\",    \"zil\"); // indef. loc. masc. pl.\n    checkOneTerm(a, \"zilajos\",  \"zil\"); // def. loc. masc. pl.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // indef. loc. fem. sing.\n    checkOneTerm(a, \"zilajā\",   \"zil\"); // def. loc. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // indef. loc. fem. pl.\n    checkOneTerm(a, \"zilajās\",  \"zil\"); // def. loc. fem. pl.\n    checkOneTerm(a, \"zilais\",   \"zil\"); // voc. masc. sing.\n    checkOneTerm(a, \"zilie\",    \"zil\"); // voc. masc. pl.\n    checkOneTerm(a, \"zilā\",     \"zil\"); // voc. fem. sing.\n    checkOneTerm(a, \"zilās\",    \"zil\"); // voc. fem. pl.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["09c24344d8c547da8d804ff8a4cdb9ef0decf980"],"09c24344d8c547da8d804ff8a4cdb9ef0decf980":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1eb46686a27187e42311e77666a2c7026f461ebc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","09c24344d8c547da8d804ff8a4cdb9ef0decf980"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","09c24344d8c547da8d804ff8a4cdb9ef0decf980"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","09c24344d8c547da8d804ff8a4cdb9ef0decf980"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"09c24344d8c547da8d804ff8a4cdb9ef0decf980":["b89678825b68eccaf09e6ab71675fc0b0af1e099","1eb46686a27187e42311e77666a2c7026f461ebc","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"1eb46686a27187e42311e77666a2c7026f461ebc":[],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09c24344d8c547da8d804ff8a4cdb9ef0decf980","1eb46686a27187e42311e77666a2c7026f461ebc","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1eb46686a27187e42311e77666a2c7026f461ebc","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}