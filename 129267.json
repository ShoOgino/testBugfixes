{"path":"lucene/core/src/test/org/apache/lucene/index/TestMergePolicy#testTimeout().mjava","commits":[{"id":"af4f318fc7955d8e4e40cdf4a8a93931004fe7c0","date":1592426892,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMergePolicy#testTimeout().mjava","pathOld":"/dev/null","sourceNew":"  public void testTimeout() throws IOException, InterruptedException {\n    try (Directory dir = newDirectory()) {\n      MergePolicy.MergeSpecification ms = createRandomMergeSpecification(dir, 3);\n      for (MergePolicy.OneMerge m : ms.merges) {\n        assertFalse(m.hasCompletedSuccessfully().isPresent());\n      }\n      Thread t = new Thread(() -> {\n        try {\n          ms.merges.get(0).mergeFinished(true);\n        } catch (IOException e) {\n          throw new AssertionError(e);\n        }\n      });\n      t.start();\n      assertFalse(ms.await(10, TimeUnit.MILLISECONDS));\n      assertFalse(ms.merges.get(1).hasCompletedSuccessfully().isPresent());\n      t.join();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2a23476693f2bd9a4b44cc3187c429a2e21dac2","date":1593289545,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMergePolicy#testTimeout().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestMergePolicy#testTimeout().mjava","sourceNew":"  public void testTimeout() throws IOException, InterruptedException {\n    try (Directory dir = newDirectory()) {\n      MergePolicy.MergeSpecification ms = createRandomMergeSpecification(dir, 3);\n      for (MergePolicy.OneMerge m : ms.merges) {\n        assertFalse(m.hasCompletedSuccessfully().isPresent());\n      }\n      Thread t = new Thread(() -> {\n        try {\n          ms.merges.get(0).close(true, false,  mr -> {});\n        } catch (IOException e) {\n          throw new AssertionError(e);\n        }\n      });\n      t.start();\n      assertFalse(ms.await(10, TimeUnit.MILLISECONDS));\n      assertFalse(ms.merges.get(1).hasCompletedSuccessfully().isPresent());\n      t.join();\n    }\n  }\n\n","sourceOld":"  public void testTimeout() throws IOException, InterruptedException {\n    try (Directory dir = newDirectory()) {\n      MergePolicy.MergeSpecification ms = createRandomMergeSpecification(dir, 3);\n      for (MergePolicy.OneMerge m : ms.merges) {\n        assertFalse(m.hasCompletedSuccessfully().isPresent());\n      }\n      Thread t = new Thread(() -> {\n        try {\n          ms.merges.get(0).mergeFinished(true);\n        } catch (IOException e) {\n          throw new AssertionError(e);\n        }\n      });\n      t.start();\n      assertFalse(ms.await(10, TimeUnit.MILLISECONDS));\n      assertFalse(ms.merges.get(1).hasCompletedSuccessfully().isPresent());\n      t.join();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af4f318fc7955d8e4e40cdf4a8a93931004fe7c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c2a23476693f2bd9a4b44cc3187c429a2e21dac2":["af4f318fc7955d8e4e40cdf4a8a93931004fe7c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2a23476693f2bd9a4b44cc3187c429a2e21dac2"]},"commit2Childs":{"af4f318fc7955d8e4e40cdf4a8a93931004fe7c0":["c2a23476693f2bd9a4b44cc3187c429a2e21dac2"],"c2a23476693f2bd9a4b44cc3187c429a2e21dac2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af4f318fc7955d8e4e40cdf4a8a93931004fe7c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}