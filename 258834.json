{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene80/Lucene80Codec#getDocValuesFormatForField(String).mjava","commits":[{"id":"6930fc653c2b86e857fce0af7ec99993593d0d89","date":1535014305,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene80/Lucene80Codec#getDocValuesFormatForField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70Codec#getDocValuesFormatForField(String).mjava","sourceNew":"  /** Returns the docvalues format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene70\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public DocValuesFormat getDocValuesFormatForField(String field) {\n    return defaultDVFormat;\n  }\n\n","sourceOld":"  /** Returns the docvalues format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene70\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public DocValuesFormat getDocValuesFormatForField(String field) {\n    return defaultDVFormat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03e17b020972a0d6e8d6823f545571a66646a167","date":1547847724,"type":3,"author":"Toke Eskildsen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene80/Lucene80Codec#getDocValuesFormatForField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene80/Lucene80Codec#getDocValuesFormatForField(String).mjava","sourceNew":"  /** Returns the docvalues format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene80\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public DocValuesFormat getDocValuesFormatForField(String field) {\n    return defaultDVFormat;\n  }\n\n","sourceOld":"  /** Returns the docvalues format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene70\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public DocValuesFormat getDocValuesFormatForField(String field) {\n    return defaultDVFormat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c89f1ef80a9432f4eabaeda9a1e135cd72e60836","date":1547972642,"type":3,"author":"Tommaso Teofili","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene80/Lucene80Codec#getDocValuesFormatForField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene80/Lucene80Codec#getDocValuesFormatForField(String).mjava","sourceNew":"  /** Returns the docvalues format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene80\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public DocValuesFormat getDocValuesFormatForField(String field) {\n    return defaultDVFormat;\n  }\n\n","sourceOld":"  /** Returns the docvalues format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene70\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public DocValuesFormat getDocValuesFormatForField(String field) {\n    return defaultDVFormat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a0cc86697753659ac5e7f55243ccdcbf44d8a36","date":1574100512,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene84/Lucene84Codec#getDocValuesFormatForField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene80/Lucene80Codec#getDocValuesFormatForField(String).mjava","sourceNew":"  /** Returns the docvalues format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene80\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public DocValuesFormat getDocValuesFormatForField(String field) {\n    return defaultDVFormat;\n  }\n\n","sourceOld":"  /** Returns the docvalues format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene80\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public DocValuesFormat getDocValuesFormatForField(String field) {\n    return defaultDVFormat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"03e17b020972a0d6e8d6823f545571a66646a167":["6930fc653c2b86e857fce0af7ec99993593d0d89"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":["6930fc653c2b86e857fce0af7ec99993593d0d89","03e17b020972a0d6e8d6823f545571a66646a167"],"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["03e17b020972a0d6e8d6823f545571a66646a167"],"6930fc653c2b86e857fce0af7ec99993593d0d89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"]},"commit2Childs":{"03e17b020972a0d6e8d6823f545571a66646a167":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","9a0cc86697753659ac5e7f55243ccdcbf44d8a36"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":[],"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6930fc653c2b86e857fce0af7ec99993593d0d89":["03e17b020972a0d6e8d6823f545571a66646a167","c89f1ef80a9432f4eabaeda9a1e135cd72e60836"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6930fc653c2b86e857fce0af7ec99993593d0d89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}