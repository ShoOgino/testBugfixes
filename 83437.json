{"path":"solr/core/src/java/org/apache/solr/analytics/request/AnalyticsRequestFactory#addQueryFacet(List[QueryFacetRequest],QueryFacetRequest).mjava","commits":[{"id":"ff403346522eaa9de75403763e297e83a3ea585c","date":1384904731,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analytics/request/AnalyticsRequestFactory#addQueryFacet(List[QueryFacetRequest],QueryFacetRequest).mjava","pathOld":"/dev/null","sourceNew":"  private static void addQueryFacet(List<QueryFacetRequest> currentList, QueryFacetRequest queryFacet) {\n    Set<String> depends = queryFacet.getDependencies();\n    int place = 0;\n    for (QueryFacetRequest qfr : currentList) {\n      if (qfr.getDependencies().remove(queryFacet)) {\n        break;\n      }\n      place++;\n      depends.remove(qfr.getName());\n    }\n    currentList.add(place,queryFacet);\n    for (int count = place+1; count < currentList.size(); count++) {\n      currentList.get(count).getDependencies().remove(queryFacet.getName());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e76d8b6aa3c9ec9f772ef5296a9d0512e066c4de","date":1385313125,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analytics/request/AnalyticsRequestFactory#addQueryFacet(List[QueryFacetRequest],QueryFacetRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/analytics/request/AnalyticsRequestFactory#addQueryFacet(List[QueryFacetRequest],QueryFacetRequest).mjava","sourceNew":"  private static void addQueryFacet(List<QueryFacetRequest> currentList, QueryFacetRequest queryFacet) {\n    Set<String> depends = queryFacet.getDependencies();\n    int place = 0;\n    for (QueryFacetRequest qfr : currentList) {\n      if (qfr.getDependencies().remove(queryFacet.getName())) {\n        break;\n      }\n      place++;\n      depends.remove(qfr.getName());\n    }\n    currentList.add(place,queryFacet);\n    for (int count = place+1; count < currentList.size(); count++) {\n      currentList.get(count).getDependencies().remove(queryFacet.getName());\n    }\n  }\n\n","sourceOld":"  private static void addQueryFacet(List<QueryFacetRequest> currentList, QueryFacetRequest queryFacet) {\n    Set<String> depends = queryFacet.getDependencies();\n    int place = 0;\n    for (QueryFacetRequest qfr : currentList) {\n      if (qfr.getDependencies().remove(queryFacet)) {\n        break;\n      }\n      place++;\n      depends.remove(qfr.getName());\n    }\n    currentList.add(place,queryFacet);\n    for (int count = place+1; count < currentList.size(); count++) {\n      currentList.get(count).getDependencies().remove(queryFacet.getName());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/analytics/request/AnalyticsRequestFactory#addQueryFacet(List[QueryFacetRequest],QueryFacetRequest).mjava","pathOld":"/dev/null","sourceNew":"  private static void addQueryFacet(List<QueryFacetRequest> currentList, QueryFacetRequest queryFacet) {\n    Set<String> depends = queryFacet.getDependencies();\n    int place = 0;\n    for (QueryFacetRequest qfr : currentList) {\n      if (qfr.getDependencies().remove(queryFacet.getName())) {\n        break;\n      }\n      place++;\n      depends.remove(qfr.getName());\n    }\n    currentList.add(place,queryFacet);\n    for (int count = place+1; count < currentList.size(); count++) {\n      currentList.get(count).getDependencies().remove(queryFacet.getName());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f719faa74f7213d4a395510dbc1f1b7cb178484","date":1410881394,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/analytics/src/java/org/apache/solr/analytics/request/AnalyticsRequestFactory#addQueryFacet(List[QueryFacetRequest],QueryFacetRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/analytics/request/AnalyticsRequestFactory#addQueryFacet(List[QueryFacetRequest],QueryFacetRequest).mjava","sourceNew":"  private static void addQueryFacet(List<QueryFacetRequest> currentList, QueryFacetRequest queryFacet) {\n    Set<String> depends = queryFacet.getDependencies();\n    int place = 0;\n    for (QueryFacetRequest qfr : currentList) {\n      if (qfr.getDependencies().remove(queryFacet.getName())) {\n        break;\n      }\n      place++;\n      depends.remove(qfr.getName());\n    }\n    currentList.add(place,queryFacet);\n    for (int count = place+1; count < currentList.size(); count++) {\n      currentList.get(count).getDependencies().remove(queryFacet.getName());\n    }\n  }\n\n","sourceOld":"  private static void addQueryFacet(List<QueryFacetRequest> currentList, QueryFacetRequest queryFacet) {\n    Set<String> depends = queryFacet.getDependencies();\n    int place = 0;\n    for (QueryFacetRequest qfr : currentList) {\n      if (qfr.getDependencies().remove(queryFacet.getName())) {\n        break;\n      }\n      place++;\n      depends.remove(qfr.getName());\n    }\n    currentList.add(place,queryFacet);\n    for (int count = place+1; count < currentList.size(); count++) {\n      currentList.get(count).getDependencies().remove(queryFacet.getName());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e76d8b6aa3c9ec9f772ef5296a9d0512e066c4de":["ff403346522eaa9de75403763e297e83a3ea585c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e76d8b6aa3c9ec9f772ef5296a9d0512e066c4de"],"ff403346522eaa9de75403763e297e83a3ea585c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["e76d8b6aa3c9ec9f772ef5296a9d0512e066c4de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f719faa74f7213d4a395510dbc1f1b7cb178484"]},"commit2Childs":{"e76d8b6aa3c9ec9f772ef5296a9d0512e066c4de":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","0f719faa74f7213d4a395510dbc1f1b7cb178484"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","ff403346522eaa9de75403763e297e83a3ea585c"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"ff403346522eaa9de75403763e297e83a3ea585c":["e76d8b6aa3c9ec9f772ef5296a9d0512e066c4de"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}