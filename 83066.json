{"path":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#retrieveChecksum(IndexInput,long).mjava","commits":[{"id":"a42ec09a7fba21c060922e499bb1ee9f741b6dfc","date":1592301881,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#retrieveChecksum(IndexInput,long).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Returns (but does not validate) the checksum previously written by {@link #checkFooter}.\n   * @return actual checksum value\n   * @throws IOException if the footer is invalid\n   */\n  public static long retrieveChecksum(IndexInput in, long expectedLength) throws IOException {\n    if (expectedLength < footerLength()) {\n      throw new IllegalArgumentException(\"expectedLength cannot be less than the footer length\");\n    }\n    if (in.length() < expectedLength) {\n      throw new CorruptIndexException(\"truncated file: length=\" + in.length() + \" but expectedLength==\" + expectedLength, in);\n    } else if (in.length() > expectedLength) {\n      throw new CorruptIndexException(\"file too long: length=\" + in.length() + \" but expectedLength==\" + expectedLength, in);\n    }\n\n    return retrieveChecksum(in);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a42ec09a7fba21c060922e499bb1ee9f741b6dfc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a42ec09a7fba21c060922e499bb1ee9f741b6dfc"]},"commit2Childs":{"a42ec09a7fba21c060922e499bb1ee9f741b6dfc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a42ec09a7fba21c060922e499bb1ee9f741b6dfc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}