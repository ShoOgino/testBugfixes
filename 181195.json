{"path":"src/java/org/apache/solr/request/NumberedTermEnum[UnInvertedField]#skipTo(int).mjava","commits":[{"id":"9a70797e2ad3b67325d3043155af4baf6445fdd9","date":1227585729,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/NumberedTermEnum[UnInvertedField]#skipTo(int).mjava","pathOld":"/dev/null","sourceNew":"  public boolean skipTo(int termNumber) throws IOException {\n    int delta = termNumber - pos;\n    if (delta < 0 || delta > tindex.interval || tenum==null) {\n      int idx = termNumber >>> tindex.intervalBits;\n      String base = tindex.index[idx];\n      pos = idx << tindex.intervalBits;\n      delta = termNumber - pos;\n      tenum = reader.terms(tindex.createTerm(base));\n    }\n    while (--delta >= 0) {\n      boolean b = tenum.next();\n      if (b==false) {\n        t = null;\n        return false;\n      }\n      ++pos;\n    }\n    return setTerm();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa89a35683d73665c61d7af1d16f41649c25e5a7","date":1228684315,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/NumberedTermEnum[UnInvertedField]#skipTo(int).mjava","pathOld":"src/java/org/apache/solr/request/NumberedTermEnum[UnInvertedField]#skipTo(int).mjava","sourceNew":"  public boolean skipTo(int termNumber) throws IOException {\n    int delta = termNumber - pos;\n    if (delta < 0 || delta > tindex.interval || tenum==null) {\n      int idx = termNumber >>> tindex.intervalBits;\n      String base = tindex.index[idx];\n      pos = idx << tindex.intervalBits;\n      delta = termNumber - pos;\n      if (tenum != null) tenum.close();\n      tenum = reader.terms(tindex.createTerm(base));\n    }\n    while (--delta >= 0) {\n      boolean b = tenum.next();\n      if (b==false) {\n        t = null;\n        return false;\n      }\n      ++pos;\n    }\n    return setTerm();\n  }\n\n","sourceOld":"  public boolean skipTo(int termNumber) throws IOException {\n    int delta = termNumber - pos;\n    if (delta < 0 || delta > tindex.interval || tenum==null) {\n      int idx = termNumber >>> tindex.intervalBits;\n      String base = tindex.index[idx];\n      pos = idx << tindex.intervalBits;\n      delta = termNumber - pos;\n      tenum = reader.terms(tindex.createTerm(base));\n    }\n    while (--delta >= 0) {\n      boolean b = tenum.next();\n      if (b==false) {\n        t = null;\n        return false;\n      }\n      ++pos;\n    }\n    return setTerm();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/request/NumberedTermEnum[UnInvertedField]#skipTo(int).mjava","pathOld":"src/java/org/apache/solr/request/NumberedTermEnum[UnInvertedField]#skipTo(int).mjava","sourceNew":"  public boolean skipTo(int termNumber) throws IOException {\n    int delta = termNumber - pos;\n    if (delta < 0 || delta > tindex.interval || tenum==null) {\n      int idx = termNumber >>> tindex.intervalBits;\n      String base = tindex.index[idx];\n      pos = idx << tindex.intervalBits;\n      delta = termNumber - pos;\n      if (tenum != null) tenum.close();\n      tenum = reader.terms(tindex.createTerm(base));\n    }\n    while (--delta >= 0) {\n      boolean b = tenum.next();\n      if (b==false) {\n        t = null;\n        return false;\n      }\n      ++pos;\n    }\n    return setTerm();\n  }\n\n","sourceOld":"  public boolean skipTo(int termNumber) throws IOException {\n    int delta = termNumber - pos;\n    if (delta < 0 || delta > tindex.interval || tenum==null) {\n      int idx = termNumber >>> tindex.intervalBits;\n      String base = tindex.index[idx];\n      pos = idx << tindex.intervalBits;\n      delta = termNumber - pos;\n      if (tenum != null) tenum.close();\n      tenum = reader.terms(tindex.createTerm(base));\n    }\n    while (--delta >= 0) {\n      boolean b = tenum.next();\n      if (b==false) {\n        t = null;\n        return false;\n      }\n      ++pos;\n    }\n    return setTerm();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fa89a35683d73665c61d7af1d16f41649c25e5a7":["9a70797e2ad3b67325d3043155af4baf6445fdd9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["fa89a35683d73665c61d7af1d16f41649c25e5a7"],"9a70797e2ad3b67325d3043155af4baf6445fdd9":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"fa89a35683d73665c61d7af1d16f41649c25e5a7":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["9a70797e2ad3b67325d3043155af4baf6445fdd9"],"9a70797e2ad3b67325d3043155af4baf6445fdd9":["fa89a35683d73665c61d7af1d16f41649c25e5a7"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}