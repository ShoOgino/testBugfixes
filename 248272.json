{"path":"lucene/core/src/test/org/apache/lucene/analysis/TestLookaheadTokenFilter#testMissedFirstToken().mjava","commits":[{"id":"ac6677ee7ef24b19d2ec432727d6957ba6110b14","date":1378744135,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestLookaheadTokenFilter#testMissedFirstToken().mjava","pathOld":"/dev/null","sourceNew":"  public void testMissedFirstToken() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName,\n                                                       Reader reader) {\n        Tokenizer source = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        TrivialLookaheadFilter filter = new TrivialLookaheadFilter(source);\n        return new TokenStreamComponents(source, filter);\n     }\n    };\n\n    assertAnalyzesTo(analyzer,\n        \"Only he who is running knows .\",\n        new String[]{\n            \"Only\",\n            \"Only-huh?\",\n            \"he\",\n            \"he-huh?\",\n            \"who\",\n            \"who-huh?\",\n            \"is\",\n            \"is-huh?\",\n            \"running\",\n            \"running-huh?\",\n            \"knows\",\n            \"knows-huh?\",\n            \".\",\n            \".-huh?\"\n        });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestLookaheadTokenFilter#testMissedFirstToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestLookaheadTokenFilter#testMissedFirstToken().mjava","sourceNew":"  public void testMissedFirstToken() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer source = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        TrivialLookaheadFilter filter = new TrivialLookaheadFilter(source);\n        return new TokenStreamComponents(source, filter);\n     }\n    };\n\n    assertAnalyzesTo(analyzer,\n        \"Only he who is running knows .\",\n        new String[]{\n            \"Only\",\n            \"Only-huh?\",\n            \"he\",\n            \"he-huh?\",\n            \"who\",\n            \"who-huh?\",\n            \"is\",\n            \"is-huh?\",\n            \"running\",\n            \"running-huh?\",\n            \"knows\",\n            \"knows-huh?\",\n            \".\",\n            \".-huh?\"\n        });\n  }\n\n","sourceOld":"  public void testMissedFirstToken() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName,\n                                                       Reader reader) {\n        Tokenizer source = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        TrivialLookaheadFilter filter = new TrivialLookaheadFilter(source);\n        return new TokenStreamComponents(source, filter);\n     }\n    };\n\n    assertAnalyzesTo(analyzer,\n        \"Only he who is running knows .\",\n        new String[]{\n            \"Only\",\n            \"Only-huh?\",\n            \"he\",\n            \"he-huh?\",\n            \"who\",\n            \"who-huh?\",\n            \"is\",\n            \"is-huh?\",\n            \"running\",\n            \"running-huh?\",\n            \"knows\",\n            \"knows-huh?\",\n            \".\",\n            \".-huh?\"\n        });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestLookaheadTokenFilter#testMissedFirstToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestLookaheadTokenFilter#testMissedFirstToken().mjava","sourceNew":"  public void testMissedFirstToken() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer source = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        TrivialLookaheadFilter filter = new TrivialLookaheadFilter(source);\n        return new TokenStreamComponents(source, filter);\n     }\n    };\n\n    assertAnalyzesTo(analyzer,\n        \"Only he who is running knows .\",\n        new String[]{\n            \"Only\",\n            \"Only-huh?\",\n            \"he\",\n            \"he-huh?\",\n            \"who\",\n            \"who-huh?\",\n            \"is\",\n            \"is-huh?\",\n            \"running\",\n            \"running-huh?\",\n            \"knows\",\n            \"knows-huh?\",\n            \".\",\n            \".-huh?\"\n        });\n  }\n\n","sourceOld":"  public void testMissedFirstToken() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer source = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        TrivialLookaheadFilter filter = new TrivialLookaheadFilter(source);\n        return new TokenStreamComponents(source, filter);\n     }\n    };\n\n    assertAnalyzesTo(analyzer,\n        \"Only he who is running knows .\",\n        new String[]{\n            \"Only\",\n            \"Only-huh?\",\n            \"he\",\n            \"he-huh?\",\n            \"who\",\n            \"who-huh?\",\n            \"is\",\n            \"is-huh?\",\n            \"running\",\n            \"running-huh?\",\n            \"knows\",\n            \"knows-huh?\",\n            \".\",\n            \".-huh?\"\n        });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["ac6677ee7ef24b19d2ec432727d6957ba6110b14"],"ac6677ee7ef24b19d2ec432727d6957ba6110b14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"ac6677ee7ef24b19d2ec432727d6957ba6110b14":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac6677ee7ef24b19d2ec432727d6957ba6110b14"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}