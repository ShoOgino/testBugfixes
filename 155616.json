{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testEmptyTerm().mjava","commits":[{"id":"c02a88c5281d230b9318dc19e6971dfd21778227","date":1332718844,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testEmptyTerm().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmptyTerm() throws IOException {\n    String langs[] = { \n        \"Armenian\", \"Basque\", \"Catalan\", \"Danish\", \"Dutch\", \"English\",\n        \"Finnish\", \"French\", \"German2\", \"German\", \"Hungarian\", \"Irish\",\n        \"Italian\", \"Kp\", \"Lovins\", \"Norwegian\", \"Porter\", \"Portuguese\",\n        \"Romanian\", \"Russian\", \"Spanish\", \"Swedish\", \"Turkish\"\n    };\n    for (final String lang : langs) {\n      Analyzer a = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new KeywordTokenizer(reader);\n          return new TokenStreamComponents(tokenizer, new SnowballFilter(tokenizer, lang));\n        }\n      };\n      checkOneTermReuse(a, \"\", \"\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5a92b21feea3b1b4d7ad5a06439333c4f757318f","date":1333977928,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testEmptyTerm().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testEmptyTerm().mjava","sourceNew":"  public void testEmptyTerm() throws IOException {\n    for (final String lang : SNOWBALL_LANGS) {\n      Analyzer a = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new KeywordTokenizer(reader);\n          return new TokenStreamComponents(tokenizer, new SnowballFilter(tokenizer, lang));\n        }\n      };\n      checkOneTermReuse(a, \"\", \"\");\n    }\n  }\n\n","sourceOld":"  public void testEmptyTerm() throws IOException {\n    String langs[] = { \n        \"Armenian\", \"Basque\", \"Catalan\", \"Danish\", \"Dutch\", \"English\",\n        \"Finnish\", \"French\", \"German2\", \"German\", \"Hungarian\", \"Irish\",\n        \"Italian\", \"Kp\", \"Lovins\", \"Norwegian\", \"Porter\", \"Portuguese\",\n        \"Romanian\", \"Russian\", \"Spanish\", \"Swedish\", \"Turkish\"\n    };\n    for (final String lang : langs) {\n      Analyzer a = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new KeywordTokenizer(reader);\n          return new TokenStreamComponents(tokenizer, new SnowballFilter(tokenizer, lang));\n        }\n      };\n      checkOneTermReuse(a, \"\", \"\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e","date":1334174049,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testEmptyTerm().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testEmptyTerm().mjava","sourceNew":"  public void testEmptyTerm() throws IOException {\n    for (final String lang : SNOWBALL_LANGS) {\n      Analyzer a = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new KeywordTokenizer(reader);\n          return new TokenStreamComponents(tokenizer, new SnowballFilter(tokenizer, lang));\n        }\n      };\n      checkOneTermReuse(a, \"\", \"\");\n    }\n  }\n\n","sourceOld":"  public void testEmptyTerm() throws IOException {\n    String langs[] = { \n        \"Armenian\", \"Basque\", \"Catalan\", \"Danish\", \"Dutch\", \"English\",\n        \"Finnish\", \"French\", \"German2\", \"German\", \"Hungarian\", \"Irish\",\n        \"Italian\", \"Kp\", \"Lovins\", \"Norwegian\", \"Porter\", \"Portuguese\",\n        \"Romanian\", \"Russian\", \"Spanish\", \"Swedish\", \"Turkish\"\n    };\n    for (final String lang : langs) {\n      Analyzer a = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new KeywordTokenizer(reader);\n          return new TokenStreamComponents(tokenizer, new SnowballFilter(tokenizer, lang));\n        }\n      };\n      checkOneTermReuse(a, \"\", \"\");\n    }\n  }\n\n","bugFix":["c02a88c5281d230b9318dc19e6971dfd21778227"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testEmptyTerm().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testEmptyTerm().mjava","sourceNew":"  public void testEmptyTerm() throws IOException {\n    for (final String lang : SNOWBALL_LANGS) {\n      Analyzer a = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new KeywordTokenizer(reader);\n          return new TokenStreamComponents(tokenizer, new SnowballFilter(tokenizer, lang));\n        }\n      };\n      checkOneTermReuse(a, \"\", \"\");\n    }\n  }\n\n","sourceOld":"  public void testEmptyTerm() throws IOException {\n    for (final String lang : SNOWBALL_LANGS) {\n      Analyzer a = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new KeywordTokenizer(reader);\n          return new TokenStreamComponents(tokenizer, new SnowballFilter(tokenizer, lang));\n        }\n      };\n      checkOneTermReuse(a, \"\", \"\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e":["c02a88c5281d230b9318dc19e6971dfd21778227","5a92b21feea3b1b4d7ad5a06439333c4f757318f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c02a88c5281d230b9318dc19e6971dfd21778227":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a92b21feea3b1b4d7ad5a06439333c4f757318f":["c02a88c5281d230b9318dc19e6971dfd21778227"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c02a88c5281d230b9318dc19e6971dfd21778227"],"c02a88c5281d230b9318dc19e6971dfd21778227":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e","5a92b21feea3b1b4d7ad5a06439333c4f757318f"],"5a92b21feea3b1b4d7ad5a06439333c4f757318f":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}