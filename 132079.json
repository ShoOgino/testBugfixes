{"path":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","commits":[{"id":"6aedf81f068e430dec27d94310415cc6ff52731c","date":1301070261,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","pathOld":"/dev/null","sourceNew":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n     \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\", 1.0f );\n    doc.addField( \"name\", \"doc1\", 1.0f );\n    doc.addField( \"price\", 10 );\n    server.add( doc );\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\", 1.0f );\n    server.add( doc );\n    server.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = server.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","pathOld":"/dev/null","sourceNew":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n     \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\", 1.0f );\n    doc.addField( \"name\", \"doc1\", 1.0f );\n    doc.addField( \"price\", 10 );\n    server.add( doc );\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\", 1.0f );\n    server.add( doc );\n    server.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = server.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","pathOld":"/dev/null","sourceNew":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n     \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\", 1.0f );\n    doc.addField( \"name\", \"doc1\", 1.0f );\n    doc.addField( \"price\", 10 );\n    server.add( doc );\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\", 1.0f );\n    server.add( doc );\n    server.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = server.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","sourceNew":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n     \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\", 1.0f );\n    doc.addField( \"name\", \"doc1\", 1.0f );\n    doc.addField( \"price\", 10 );\n    server.add( doc );\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\", 1.0f );\n    server.add( doc );\n    server.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = server.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","sourceOld":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n     \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\", 1.0f );\n    doc.addField( \"name\", \"doc1\", 1.0f );\n    doc.addField( \"price\", 10 );\n    server.add( doc );\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\", 1.0f );\n    server.add( doc );\n    server.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = server.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","sourceNew":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n     \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\", 1.0f );\n    doc.addField( \"name\", \"doc1\", 1.0f );\n    doc.addField( \"price\", 10 );\n    server.add( doc );\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\", 1.0f );\n    server.add( doc );\n    server.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = server.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","sourceOld":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n     \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\", 1.0f );\n    doc.addField( \"name\", \"doc1\", 1.0f );\n    doc.addField( \"price\", 10 );\n    server.add( doc );\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\", 1.0f );\n    server.add( doc );\n    server.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = server.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","sourceNew":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n     \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\", 1.0f );\n    doc.addField( \"name\", \"doc1\", 1.0f );\n    doc.addField( \"price\", 10 );\n    server.add( doc );\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\", 1.0f );\n    server.add( doc );\n    server.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = server.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","sourceOld":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n     \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\", 1.0f );\n    doc.addField( \"name\", \"doc1\", 1.0f );\n    doc.addField( \"price\", 10 );\n    server.add( doc );\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\", 1.0f );\n    server.add( doc );\n    server.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = server.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6aedf81f068e430dec27d94310415cc6ff52731c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["6aedf81f068e430dec27d94310415cc6ff52731c"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6aedf81f068e430dec27d94310415cc6ff52731c"],"c26f00b574427b55127e869b935845554afde1fa":["6aedf81f068e430dec27d94310415cc6ff52731c","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["6aedf81f068e430dec27d94310415cc6ff52731c"],"6aedf81f068e430dec27d94310415cc6ff52731c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","6aedf81f068e430dec27d94310415cc6ff52731c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"6aedf81f068e430dec27d94310415cc6ff52731c":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","c903c3d15906a3da96b8c0c2fb704491005fdbdb","d619839baa8ce5503e496b94a9e42ad6f079293f","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}