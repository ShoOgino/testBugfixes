{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/FieldFacetExtrasCloudTest#beforeClass().mjava","commits":[{"id":"c495edcca4d0bc51bf62d9be3527c87bf9b44ded","date":1498673617,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/FieldFacetExtrasCloudTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    setupCluster();\n\n    //INT\n    intLongTestStart = new ArrayList<>();\n    intFloatTestStart = new ArrayList<>();\n    intDoubleTestStart = new ArrayList<>();\n    intStringTestStart = new ArrayList<>();\n\n    UpdateRequest req = new UpdateRequest();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      \n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      fields.add(\"int_id\"); fields.add(\"\" + i);\n      fields.add(\"long_ld\"); fields.add(\"\" + l);\n      fields.add(\"float_fd\"); fields.add(\"\" + f);\n      fields.add(\"double_dd\"); fields.add(\"\" + d);\n      fields.add(\"date_dtd\"); fields.add((1800+dt) + \"-12-31T23:59:59.999Z\");\n      fields.add(\"string_sd\"); fields.add(\"abc\" + s);\n      req.add(fields.toArray(new String[0]));\n      \n      //Long\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n      }\n      //String\n      if (j-FLOAT<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intFloatTestStart.add(list1);\n      } else {\n        intFloatTestStart.get((int)f).add(i);\n      }\n      //String\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n      }\n      //String\n      if (j-STRING<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intStringTestStart.add(list1);\n      } else {\n        intStringTestStart.get(s).add(i);\n      }\n    }\n\n    req.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/FieldFacetExtrasCloudTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    setupCluster();\n\n    //INT\n    intLongTestStart = new ArrayList<>();\n    intFloatTestStart = new ArrayList<>();\n    intDoubleTestStart = new ArrayList<>();\n    intStringTestStart = new ArrayList<>();\n\n    UpdateRequest req = new UpdateRequest();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      \n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      fields.add(\"int_id\"); fields.add(\"\" + i);\n      fields.add(\"long_ld\"); fields.add(\"\" + l);\n      fields.add(\"float_fd\"); fields.add(\"\" + f);\n      fields.add(\"double_dd\"); fields.add(\"\" + d);\n      fields.add(\"date_dtd\"); fields.add((1800+dt) + \"-12-31T23:59:59.999Z\");\n      fields.add(\"string_sd\"); fields.add(\"abc\" + s);\n      req.add(fields.toArray(new String[0]));\n      \n      //Long\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n      }\n      //String\n      if (j-FLOAT<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intFloatTestStart.add(list1);\n      } else {\n        intFloatTestStart.get((int)f).add(i);\n      }\n      //String\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n      }\n      //String\n      if (j-STRING<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intStringTestStart.add(list1);\n      } else {\n        intStringTestStart.get(s).add(i);\n      }\n    }\n\n    req.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/FieldFacetExtrasCloudTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    setupCluster();\n\n    //INT\n    intLongTestStart = new ArrayList<>();\n    intFloatTestStart = new ArrayList<>();\n    intDoubleTestStart = new ArrayList<>();\n    intStringTestStart = new ArrayList<>();\n\n    UpdateRequest req = new UpdateRequest();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      \n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      fields.add(\"int_id\"); fields.add(\"\" + i);\n      fields.add(\"long_ld\"); fields.add(\"\" + l);\n      fields.add(\"float_fd\"); fields.add(\"\" + f);\n      fields.add(\"double_dd\"); fields.add(\"\" + d);\n      fields.add(\"date_dtd\"); fields.add((1800+dt) + \"-12-31T23:59:59.999Z\");\n      fields.add(\"string_sd\"); fields.add(\"abc\" + s);\n      req.add(fields.toArray(new String[0]));\n      \n      //Long\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n      }\n      //String\n      if (j-FLOAT<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intFloatTestStart.add(list1);\n      } else {\n        intFloatTestStart.get((int)f).add(i);\n      }\n      //String\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n      }\n      //String\n      if (j-STRING<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intStringTestStart.add(list1);\n      } else {\n        intStringTestStart.get(s).add(i);\n      }\n    }\n\n    req.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bd4c6955956e76c96eb12dfe64108ed03522983","date":1508262722,"type":4,"author":"Houston Putman","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/FieldFacetExtrasCloudTest#beforeClass().mjava","sourceNew":null,"sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    setupCluster();\n\n    //INT\n    intLongTestStart = new ArrayList<>();\n    intFloatTestStart = new ArrayList<>();\n    intDoubleTestStart = new ArrayList<>();\n    intStringTestStart = new ArrayList<>();\n\n    UpdateRequest req = new UpdateRequest();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      \n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      fields.add(\"int_id\"); fields.add(\"\" + i);\n      fields.add(\"long_ld\"); fields.add(\"\" + l);\n      fields.add(\"float_fd\"); fields.add(\"\" + f);\n      fields.add(\"double_dd\"); fields.add(\"\" + d);\n      fields.add(\"date_dtd\"); fields.add((1800+dt) + \"-12-31T23:59:59.999Z\");\n      fields.add(\"string_sd\"); fields.add(\"abc\" + s);\n      req.add(fields.toArray(new String[0]));\n      \n      //Long\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n      }\n      //String\n      if (j-FLOAT<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intFloatTestStart.add(list1);\n      } else {\n        intFloatTestStart.get((int)f).add(i);\n      }\n      //String\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n      }\n      //String\n      if (j-STRING<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intStringTestStart.add(list1);\n      } else {\n        intStringTestStart.get(s).add(i);\n      }\n    }\n\n    req.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","28288370235ed02234a64753cdbf0c6ec096304a"],"c495edcca4d0bc51bf62d9be3527c87bf9b44ded":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c495edcca4d0bc51bf62d9be3527c87bf9b44ded"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"3bd4c6955956e76c96eb12dfe64108ed03522983":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30c8e5574b55d57947e989443dfde611646530ee","c495edcca4d0bc51bf62d9be3527c87bf9b44ded","28288370235ed02234a64753cdbf0c6ec096304a"],"30c8e5574b55d57947e989443dfde611646530ee":[],"c495edcca4d0bc51bf62d9be3527c87bf9b44ded":["28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","3bd4c6955956e76c96eb12dfe64108ed03522983"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"3bd4c6955956e76c96eb12dfe64108ed03522983":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}