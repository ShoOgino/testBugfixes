{"path":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/storage/db4o/DB4oStorage#storeAccount(GDataAccount).mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/storage/db4o/DB4oStorage#storeAccount(GDataAccount).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/db4o/DB4oStorage#storeAccount(GDataAccount).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.storage.Storage#storeAccount(org.apache.lucene.gdata.data.GDataAccount)\n     */\n    public void storeAccount(GDataAccount account) throws StorageException {\n        if (account == null)\n            throw new StorageException(\"can not store account -- is null\");\n        if (account.getName() == null)\n            throw new StorageException(\"can not store account -- name is null\");\n        if (account.getPassword() == null)\n            throw new StorageException(\n                    \"can not store account -- password is null\");\n        try {\n            getAccount(account.getName());\n            throw new IllegalStateException(\"account with accountname: \"\n                    + account.getName() + \" already exists\");\n        } catch (IllegalStateException e) {\n            throw new StorageException(\"Account already exists\");\n        } catch (StorageException e) {\n            if (LOG.isDebugEnabled())\n                LOG\n                        .debug(\"checked account for existence -- does not exist -- store account\");\n        }\n        try {\n            this.container.set(account);\n            this.container.commit();\n        } catch (Exception e) {\n            LOG\n                    .error(\"Error occured on persisting changes -- rollback changes\");\n            this.container.rollback();\n            throw new StorageException(\"Can not persist changes -- \"\n                    + e.getMessage(), e);\n        }\n        if (LOG.isInfoEnabled())\n            LOG.info(\"Stored account: \" + account);\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.storage.Storage#storeAccount(org.apache.lucene.gdata.data.GDataAccount)\n     */\n    public void storeAccount(GDataAccount account) throws StorageException {\n        if (account == null)\n            throw new StorageException(\"can not store account -- is null\");\n        if (account.getName() == null)\n            throw new StorageException(\"can not store account -- name is null\");\n        if (account.getPassword() == null)\n            throw new StorageException(\n                    \"can not store account -- password is null\");\n        try {\n            getAccount(account.getName());\n            throw new IllegalStateException(\"account with accountname: \"\n                    + account.getName() + \" already exists\");\n        } catch (IllegalStateException e) {\n            throw new StorageException(\"Account already exists\");\n        } catch (StorageException e) {\n            if (LOG.isDebugEnabled())\n                LOG\n                        .debug(\"checked account for existence -- does not exist -- store account\");\n        }\n        try {\n            this.container.set(account);\n            this.container.commit();\n        } catch (Exception e) {\n            LOG\n                    .error(\"Error occured on persisting changes -- rollback changes\");\n            this.container.rollback();\n            throw new StorageException(\"Can not persist changes -- \"\n                    + e.getMessage(), e);\n        }\n        if (LOG.isInfoEnabled())\n            LOG.info(\"Stored account: \" + account);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/storage/db4o/DB4oStorage#storeAccount(GDataAccount).mjava","sourceNew":null,"sourceOld":"    /**\n     * @see org.apache.lucene.gdata.storage.Storage#storeAccount(org.apache.lucene.gdata.data.GDataAccount)\n     */\n    public void storeAccount(GDataAccount account) throws StorageException {\n        if (account == null)\n            throw new StorageException(\"can not store account -- is null\");\n        if (account.getName() == null)\n            throw new StorageException(\"can not store account -- name is null\");\n        if (account.getPassword() == null)\n            throw new StorageException(\n                    \"can not store account -- password is null\");\n        try {\n            getAccount(account.getName());\n            throw new IllegalStateException(\"account with accountname: \"\n                    + account.getName() + \" already exists\");\n        } catch (IllegalStateException e) {\n            throw new StorageException(\"Account already exists\");\n        } catch (StorageException e) {\n            if (LOG.isDebugEnabled())\n                LOG\n                        .debug(\"checked account for existence -- does not exist -- store account\");\n        }\n        try {\n            this.container.set(account);\n            this.container.commit();\n        } catch (Exception e) {\n            LOG\n                    .error(\"Error occured on persisting changes -- rollback changes\");\n            this.container.rollback();\n            throw new StorageException(\"Can not persist changes -- \"\n                    + e.getMessage(), e);\n        }\n        if (LOG.isInfoEnabled())\n            LOG.info(\"Stored account: \" + account);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}