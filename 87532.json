{"path":"lucene/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#createFirstPassCollector(String,Sort,int,FirstPassGroupingCollector[#]).mjava","commits":[{"id":"20e94e61fe5291647346b70437617e6b6c370408","date":1483783127,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#createFirstPassCollector(String,Sort,int,FirstPassGroupingCollector[#]).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#createFirstPassCollector(String,Sort,int,AbstractFirstPassGroupingCollector[#]).mjava","sourceNew":"  private FirstPassGroupingCollector<?> createFirstPassCollector(String groupField, Sort groupSort, int topDocs, FirstPassGroupingCollector<?> firstPassGroupingCollector) throws IOException {\n    if (TermFirstPassGroupingCollector.class.isAssignableFrom(firstPassGroupingCollector.getClass())) {\n      ValueSource vs = new BytesRefFieldSource(groupField);\n      return new FunctionFirstPassGroupingCollector(vs, new HashMap<>(), groupSort, topDocs);\n    } else {\n      return new TermFirstPassGroupingCollector(groupField, groupSort, topDocs);\n    }\n  }\n\n","sourceOld":"  private AbstractFirstPassGroupingCollector<?> createFirstPassCollector(String groupField, Sort groupSort, int topDocs, AbstractFirstPassGroupingCollector<?> firstPassGroupingCollector) throws IOException {\n    if (TermFirstPassGroupingCollector.class.isAssignableFrom(firstPassGroupingCollector.getClass())) {\n      ValueSource vs = new BytesRefFieldSource(groupField);\n      return new FunctionFirstPassGroupingCollector(vs, new HashMap<>(), groupSort, topDocs);\n    } else {\n      return new TermFirstPassGroupingCollector(groupField, groupSort, topDocs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#createFirstPassCollector(String,Sort,int,FirstPassGroupingCollector[#]).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#createFirstPassCollector(String,Sort,int,AbstractFirstPassGroupingCollector[#]).mjava","sourceNew":"  private FirstPassGroupingCollector<?> createFirstPassCollector(String groupField, Sort groupSort, int topDocs, FirstPassGroupingCollector<?> firstPassGroupingCollector) throws IOException {\n    if (TermFirstPassGroupingCollector.class.isAssignableFrom(firstPassGroupingCollector.getClass())) {\n      ValueSource vs = new BytesRefFieldSource(groupField);\n      return new FunctionFirstPassGroupingCollector(vs, new HashMap<>(), groupSort, topDocs);\n    } else {\n      return new TermFirstPassGroupingCollector(groupField, groupSort, topDocs);\n    }\n  }\n\n","sourceOld":"  private AbstractFirstPassGroupingCollector<?> createFirstPassCollector(String groupField, Sort groupSort, int topDocs, AbstractFirstPassGroupingCollector<?> firstPassGroupingCollector) throws IOException {\n    if (TermFirstPassGroupingCollector.class.isAssignableFrom(firstPassGroupingCollector.getClass())) {\n      ValueSource vs = new BytesRefFieldSource(groupField);\n      return new FunctionFirstPassGroupingCollector(vs, new HashMap<>(), groupSort, topDocs);\n    } else {\n      return new TermFirstPassGroupingCollector(groupField, groupSort, topDocs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ae958a739da1866696f442384393ba2f13e33e5","date":1491819018,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#createFirstPassCollector(String,Sort,int,FirstPassGroupingCollector[#]).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#createFirstPassCollector(String,Sort,int,FirstPassGroupingCollector[#]).mjava","sourceNew":"  private FirstPassGroupingCollector<?> createFirstPassCollector(String groupField, Sort groupSort, int topDocs, FirstPassGroupingCollector<?> firstPassGroupingCollector) throws IOException {\n    GroupSelector<?> selector = firstPassGroupingCollector.getGroupSelector();\n    if (TermGroupSelector.class.isAssignableFrom(selector.getClass())) {\n      ValueSource vs = new BytesRefFieldSource(groupField);\n      return new FirstPassGroupingCollector<>(new ValueSourceGroupSelector(vs, new HashMap<>()), groupSort, topDocs);\n    } else {\n      return new FirstPassGroupingCollector<>(new TermGroupSelector(groupField), groupSort, topDocs);\n    }\n  }\n\n","sourceOld":"  private FirstPassGroupingCollector<?> createFirstPassCollector(String groupField, Sort groupSort, int topDocs, FirstPassGroupingCollector<?> firstPassGroupingCollector) throws IOException {\n    if (TermFirstPassGroupingCollector.class.isAssignableFrom(firstPassGroupingCollector.getClass())) {\n      ValueSource vs = new BytesRefFieldSource(groupField);\n      return new FunctionFirstPassGroupingCollector(vs, new HashMap<>(), groupSort, topDocs);\n    } else {\n      return new TermFirstPassGroupingCollector(groupField, groupSort, topDocs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#createFirstPassCollector(String,Sort,int,FirstPassGroupingCollector[#]).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#createFirstPassCollector(String,Sort,int,FirstPassGroupingCollector[#]).mjava","sourceNew":"  private FirstPassGroupingCollector<?> createFirstPassCollector(String groupField, Sort groupSort, int topDocs, FirstPassGroupingCollector<?> firstPassGroupingCollector) throws IOException {\n    GroupSelector<?> selector = firstPassGroupingCollector.getGroupSelector();\n    if (TermGroupSelector.class.isAssignableFrom(selector.getClass())) {\n      ValueSource vs = new BytesRefFieldSource(groupField);\n      return new FirstPassGroupingCollector<>(new ValueSourceGroupSelector(vs, new HashMap<>()), groupSort, topDocs);\n    } else {\n      return new FirstPassGroupingCollector<>(new TermGroupSelector(groupField), groupSort, topDocs);\n    }\n  }\n\n","sourceOld":"  private FirstPassGroupingCollector<?> createFirstPassCollector(String groupField, Sort groupSort, int topDocs, FirstPassGroupingCollector<?> firstPassGroupingCollector) throws IOException {\n    if (TermFirstPassGroupingCollector.class.isAssignableFrom(firstPassGroupingCollector.getClass())) {\n      ValueSource vs = new BytesRefFieldSource(groupField);\n      return new FunctionFirstPassGroupingCollector(vs, new HashMap<>(), groupSort, topDocs);\n    } else {\n      return new TermFirstPassGroupingCollector(groupField, groupSort, topDocs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["20e94e61fe5291647346b70437617e6b6c370408"],"20e94e61fe5291647346b70437617e6b6c370408":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","20e94e61fe5291647346b70437617e6b6c370408"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ae958a739da1866696f442384393ba2f13e33e5"],"7ae958a739da1866696f442384393ba2f13e33e5":["20e94e61fe5291647346b70437617e6b6c370408"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"20e94e61fe5291647346b70437617e6b6c370408":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","7ae958a739da1866696f442384393ba2f13e33e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["20e94e61fe5291647346b70437617e6b6c370408","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7ae958a739da1866696f442384393ba2f13e33e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}