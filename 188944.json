{"path":"solr/core/src/java/org/apache/solr/core/SolrCore#runAsync(Runnable).mjava","commits":[{"id":"11b67e7dc6d14dd8535564a49ca9c12ec5e8b2b6","date":1547236077,"type":0,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#runAsync(Runnable).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Run an arbitrary task in it's own thread. This is an expert option and is\n   * a method you should use with great care. It would be bad to run something that never stopped\n   * or run something that took a very long time. Typically this is intended for actions that take\n   * a few seconds, and therefore would be bad to wait for within a request, but but would not pose\n   * a significant hindrance to server shut down times. It is not intended for long running tasks\n   * and if you are using a Runnable with a loop in it, you are almost certainly doing it wrong.\n   * <p>\n   * WARNING: Solr wil not be able to shut down gracefully until this task completes!\n   * <p>\n   * A significant upside of using this method vs creating your own ExecutorService is that your code\n   * does not have to properly shutdown executors which typically is risky from a unit testing\n   * perspective since the test framework will complain if you don't carefully ensure the executor\n   * shuts down before the end of the test. Also the threads running this task are sure to have\n   * a proper MDC for logging.\n   *\n   * @param r the task to run\n   */\n  public void runAsync(Runnable r) {\n    coreAsyncTaskExecutor.submit(r);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"11b67e7dc6d14dd8535564a49ca9c12ec5e8b2b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["11b67e7dc6d14dd8535564a49ca9c12ec5e8b2b6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["11b67e7dc6d14dd8535564a49ca9c12ec5e8b2b6"],"11b67e7dc6d14dd8535564a49ca9c12ec5e8b2b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}