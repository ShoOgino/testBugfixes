{"path":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#advance(int).mjava","commits":[{"id":"01f60198ece724a6e96cd0b45f289cf42ff83d4f","date":1286864103,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#advance(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int advance(int target) throws IOException {\n      if (target >= maxDoc)\n        return pos = NO_MORE_DOCS;\n      final long val = ints.advance(target);\n      ref.ints[0] = val == defaultValue? 0:minValue + val;\n      ref.offset = 0; // can we skip this?\n      return pos = target;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d84736c4614acce6720851cbd2c823d7cd516e4","date":1290551630,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#advance(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#advance(int).mjava","sourceNew":"    @Override\n    public int advance(int target) throws IOException {\n      if (target >= maxDoc) {\n        return pos = NO_MORE_DOCS;\n      }\n      long val = ints.advance(target);\n      while (val == defaultValue) {\n        if (++target >= maxDoc) {\n          return pos = NO_MORE_DOCS;\n        }\n        val = ints.advance(target);\n      }\n      ref.ints[0] = minValue + val;\n      ref.offset = 0; // can we skip this?\n      return pos = target;\n    }\n\n","sourceOld":"    @Override\n    public int advance(int target) throws IOException {\n      if (target >= maxDoc)\n        return pos = NO_MORE_DOCS;\n      final long val = ints.advance(target);\n      ref.ints[0] = val == defaultValue? 0:minValue + val;\n      ref.offset = 0; // can we skip this?\n      return pos = target;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#advance(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#advance(int).mjava","sourceNew":"    @Override\n    public int advance(int target) throws IOException {\n      if (target >= maxDoc) {\n        return pos = NO_MORE_DOCS;\n      }\n      long val = ints.advance(target);\n      while (val == defaultValue) {\n        if (++target >= maxDoc) {\n          return pos = NO_MORE_DOCS;\n        }\n        val = ints.advance(target);\n      }\n      intsRef.ints[0] = minValue + val;\n      intsRef.offset = 0; // can we skip this?\n      return pos = target;\n    }\n\n","sourceOld":"    @Override\n    public int advance(int target) throws IOException {\n      if (target >= maxDoc) {\n        return pos = NO_MORE_DOCS;\n      }\n      long val = ints.advance(target);\n      while (val == defaultValue) {\n        if (++target >= maxDoc) {\n          return pos = NO_MORE_DOCS;\n        }\n        val = ints.advance(target);\n      }\n      ref.ints[0] = minValue + val;\n      ref.offset = 0; // can we skip this?\n      return pos = target;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4034ca0f8f74fdf56e25be73822f2441fc1c1b46","date":1307111599,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.FixedIntsEnumImpl#advance(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#advance(int).mjava","sourceNew":"    @Override\n    public int advance(int target) throws IOException {\n      if (target >= maxDoc) {\n        return pos = NO_MORE_DOCS;\n      }\n      assert target > pos;\n      if (target > pos+1) {\n        dataIn.seek(dataIn.getFilePointer() + ((target - pos - 1) * 8));\n      }\n      intsRef.ints[intsRef.offset] = dataIn.readLong();\n      return pos = target;\n    }\n\n","sourceOld":"    @Override\n    public int advance(int target) throws IOException {\n      if (target >= maxDoc) {\n        return pos = NO_MORE_DOCS;\n      }\n      long val = ints.advance(target);\n      while (val == defaultValue) {\n        if (++target >= maxDoc) {\n          return pos = NO_MORE_DOCS;\n        }\n        val = ints.advance(target);\n      }\n      intsRef.ints[0] = minValue + val;\n      intsRef.offset = 0; // can we skip this?\n      return pos = target;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4034ca0f8f74fdf56e25be73822f2441fc1c1b46","date":1307111599,"type":6,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.PackedIntsEnumImpl#advance(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#advance(int).mjava","sourceNew":"    @Override\n    public int advance(int target) throws IOException {\n      if (target >= maxDoc) {\n        return pos = NO_MORE_DOCS;\n      }\n      final long val = ints.advance(target);\n      intsRef.ints[intsRef.offset] = val == defaultValue ? 0 : minValue + val;\n      return pos = target;\n    }\n\n","sourceOld":"    @Override\n    public int advance(int target) throws IOException {\n      if (target >= maxDoc) {\n        return pos = NO_MORE_DOCS;\n      }\n      long val = ints.advance(target);\n      while (val == defaultValue) {\n        if (++target >= maxDoc) {\n          return pos = NO_MORE_DOCS;\n        }\n        val = ints.advance(target);\n      }\n      intsRef.ints[0] = minValue + val;\n      intsRef.offset = 0; // can we skip this?\n      return pos = target;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2d84736c4614acce6720851cbd2c823d7cd516e4":["01f60198ece724a6e96cd0b45f289cf42ff83d4f"],"4034ca0f8f74fdf56e25be73822f2441fc1c1b46":["3bb13258feba31ab676502787ab2e1779f129b7a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3bb13258feba31ab676502787ab2e1779f129b7a":["2d84736c4614acce6720851cbd2c823d7cd516e4","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"2d84736c4614acce6720851cbd2c823d7cd516e4":["3bb13258feba31ab676502787ab2e1779f129b7a"],"4034ca0f8f74fdf56e25be73822f2441fc1c1b46":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["01f60198ece724a6e96cd0b45f289cf42ff83d4f","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["2d84736c4614acce6720851cbd2c823d7cd516e4"],"3bb13258feba31ab676502787ab2e1779f129b7a":["4034ca0f8f74fdf56e25be73822f2441fc1c1b46"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4034ca0f8f74fdf56e25be73822f2441fc1c1b46","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}