{"path":"solr/core/src/java/org/apache/solr/util/CommandOperation#getMapVal(String).mjava","commits":[{"id":"cb9af919a17be70cfc512901fc70f1beaf840ca1","date":1413208885,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/CommandOperation#getMapVal(String).mjava","pathOld":"/dev/null","sourceNew":"  private Object getMapVal(String key) {\n    if (commandData instanceof Map) {\n      Map metaData = (Map) commandData;\n      return metaData.get(key);\n    } else {\n      String msg= \" value has to be an object for operation :\"+name;\n      if(!errors.contains(msg)) errors.add(msg);\n      return null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/CommandOperation#getMapVal(String).mjava","pathOld":"/dev/null","sourceNew":"  private Object getMapVal(String key) {\n    if (commandData instanceof Map) {\n      Map metaData = (Map) commandData;\n      return metaData.get(key);\n    } else {\n      String msg= \" value has to be an object for operation :\"+name;\n      if(!errors.contains(msg)) errors.add(msg);\n      return null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be214850f18c80408bcfafd463ec155ab0515aee","date":1423651203,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/CommandOperation#getMapVal(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/CommandOperation#getMapVal(String).mjava","sourceNew":"  private Object getMapVal(String key) {\n    if (commandData instanceof Map) {\n      Map metaData = (Map) commandData;\n      return metaData.get(key);\n    } else {\n      String msg = \" value has to be an object for operation :\" + name;\n      if (!errors.contains(msg)) errors.add(msg);\n      return null;\n    }\n  }\n\n","sourceOld":"  private Object getMapVal(String key) {\n    if (commandData instanceof Map) {\n      Map metaData = (Map) commandData;\n      return metaData.get(key);\n    } else {\n      String msg= \" value has to be an object for operation :\"+name;\n      if(!errors.contains(msg)) errors.add(msg);\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85784a21c6101aadd8d5b3d9dfed51279fbd43d9","date":1458237890,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/CommandOperation#getMapVal(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/CommandOperation#getMapVal(String).mjava","sourceNew":"  private Object getMapVal(String key) {\n    if(\"\".equals(key)){\n      if (commandData instanceof Map) {\n        addError(\"value of the command is an object should be primitive\");\n      }\n      return commandData;\n    }\n    if (commandData instanceof Map) {\n      Map metaData = (Map) commandData;\n      return metaData.get(key);\n    } else {\n      String msg = \" value has to be an object for operation :\" + name;\n      if (!errors.contains(msg)) errors.add(msg);\n      return null;\n    }\n  }\n\n","sourceOld":"  private Object getMapVal(String key) {\n    if (commandData instanceof Map) {\n      Map metaData = (Map) commandData;\n      return metaData.get(key);\n    } else {\n      String msg = \" value has to be an object for operation :\" + name;\n      if (!errors.contains(msg)) errors.add(msg);\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d21112928e2aedcec0c17025bc0e91f8fcfcf30","date":1494423367,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getMapVal(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/CommandOperation#getMapVal(String).mjava","sourceNew":"  private Object getMapVal(String key) {\n    if(\"\".equals(key)){\n      if (commandData instanceof Map) {\n        addError(\"value of the command is an object should be primitive\");\n      }\n      return commandData;\n    }\n    if (commandData instanceof Map) {\n      Map metaData = (Map) commandData;\n      return metaData.get(key);\n    } else {\n      String msg = \" value has to be an object for operation :\" + name;\n      if (!errors.contains(msg)) errors.add(msg);\n      return null;\n    }\n  }\n\n","sourceOld":"  private Object getMapVal(String key) {\n    if(\"\".equals(key)){\n      if (commandData instanceof Map) {\n        addError(\"value of the command is an object should be primitive\");\n      }\n      return commandData;\n    }\n    if (commandData instanceof Map) {\n      Map metaData = (Map) commandData;\n      return metaData.get(key);\n    } else {\n      String msg = \" value has to be an object for operation :\" + name;\n      if (!errors.contains(msg)) errors.add(msg);\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/CommandOperation#getMapVal(String).mjava","sourceNew":null,"sourceOld":"  private Object getMapVal(String key) {\n    if(\"\".equals(key)){\n      if (commandData instanceof Map) {\n        addError(\"value of the command is an object should be primitive\");\n      }\n      return commandData;\n    }\n    if (commandData instanceof Map) {\n      Map metaData = (Map) commandData;\n      return metaData.get(key);\n    } else {\n      String msg = \" value has to be an object for operation :\" + name;\n      if (!errors.contains(msg)) errors.add(msg);\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2d21112928e2aedcec0c17025bc0e91f8fcfcf30":["85784a21c6101aadd8d5b3d9dfed51279fbd43d9"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["85784a21c6101aadd8d5b3d9dfed51279fbd43d9","2d21112928e2aedcec0c17025bc0e91f8fcfcf30"],"55980207f1977bd1463465de1659b821347e2fa8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cb9af919a17be70cfc512901fc70f1beaf840ca1"],"85784a21c6101aadd8d5b3d9dfed51279fbd43d9":["be214850f18c80408bcfafd463ec155ab0515aee"],"cb9af919a17be70cfc512901fc70f1beaf840ca1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be214850f18c80408bcfafd463ec155ab0515aee":["cb9af919a17be70cfc512901fc70f1beaf840ca1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2d21112928e2aedcec0c17025bc0e91f8fcfcf30"]},"commit2Childs":{"2d21112928e2aedcec0c17025bc0e91f8fcfcf30":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"55980207f1977bd1463465de1659b821347e2fa8":[],"85784a21c6101aadd8d5b3d9dfed51279fbd43d9":["2d21112928e2aedcec0c17025bc0e91f8fcfcf30","e9017cf144952056066919f1ebc7897ff9bd71b1"],"cb9af919a17be70cfc512901fc70f1beaf840ca1":["55980207f1977bd1463465de1659b821347e2fa8","be214850f18c80408bcfafd463ec155ab0515aee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["55980207f1977bd1463465de1659b821347e2fa8","cb9af919a17be70cfc512901fc70f1beaf840ca1"],"be214850f18c80408bcfafd463ec155ab0515aee":["85784a21c6101aadd8d5b3d9dfed51279fbd43d9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}