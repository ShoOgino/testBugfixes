{"path":"src/java/org/apache/lucene/search/DisjunctionMaxScorer#heapify().mjava","commits":[{"id":"ca9e1c07be7f899d56eb37b44a2e4ca252744a52","date":1134440386,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DisjunctionMaxScorer#heapify().mjava","pathOld":"/dev/null","sourceNew":"    // Organize subScorers into a min heap with scorers generating the earlest document on top.\r\n    private void heapify() {\r\n        int size = subScorers.size();\r\n        for (int i=(size>>1)-1; i>=0; i--)\r\n            heapAdjust(i);\r\n    }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2123bddbd65dea198cac380540636ce43a880403","date":1211269254,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DisjunctionMaxScorer#heapify().mjava","pathOld":"src/java/org/apache/lucene/search/DisjunctionMaxScorer#heapify().mjava","sourceNew":"    // Organize subScorers into a min heap with scorers generating the earlest document on top.\n    private void heapify() {\n        int size = subScorers.size();\n        for (int i=(size>>1)-1; i>=0; i--)\n            heapAdjust(i);\n    }\n\n","sourceOld":"    // Organize subScorers into a min heap with scorers generating the earlest document on top.\r\n    private void heapify() {\r\n        int size = subScorers.size();\r\n        for (int i=(size>>1)-1; i>=0; i--)\r\n            heapAdjust(i);\r\n    }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30a558487f2298c2c19ceca9103c1b6865d64708","date":1244393921,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DisjunctionMaxScorer#heapify().mjava","pathOld":"src/java/org/apache/lucene/search/DisjunctionMaxScorer#heapify().mjava","sourceNew":"  // Organize subScorers into a min heap with scorers generating the earliest document on top.\n  private void heapify() {\n    for (int i = (numScorers >> 1) - 1; i >= 0; i--) {\n      heapAdjust(i);\n    }\n  }\n\n","sourceOld":"    // Organize subScorers into a min heap with scorers generating the earlest document on top.\n    private void heapify() {\n        int size = subScorers.size();\n        for (int i=(size>>1)-1; i>=0; i--)\n            heapAdjust(i);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/DisjunctionMaxScorer#heapify().mjava","pathOld":"src/java/org/apache/lucene/search/DisjunctionMaxScorer#heapify().mjava","sourceNew":"  // Organize subScorers into a min heap with scorers generating the earliest document on top.\n  private void heapify() {\n    for (int i = (numScorers >> 1) - 1; i >= 0; i--) {\n      heapAdjust(i);\n    }\n  }\n\n","sourceOld":"  // Organize subScorers into a min heap with scorers generating the earliest document on top.\n  private void heapify() {\n    for (int i = (numScorers >> 1) - 1; i >= 0; i--) {\n      heapAdjust(i);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"30a558487f2298c2c19ceca9103c1b6865d64708":["2123bddbd65dea198cac380540636ce43a880403"],"ca9e1c07be7f899d56eb37b44a2e4ca252744a52":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2123bddbd65dea198cac380540636ce43a880403":["ca9e1c07be7f899d56eb37b44a2e4ca252744a52"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["30a558487f2298c2c19ceca9103c1b6865d64708"]},"commit2Childs":{"30a558487f2298c2c19ceca9103c1b6865d64708":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ca9e1c07be7f899d56eb37b44a2e4ca252744a52":["2123bddbd65dea198cac380540636ce43a880403"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ca9e1c07be7f899d56eb37b44a2e4ca252744a52"],"2123bddbd65dea198cac380540636ce43a880403":["30a558487f2298c2c19ceca9103c1b6865d64708"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}