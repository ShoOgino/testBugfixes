{"path":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndexReaderFactory().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndexReaderFactory().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initIndexReaderFactory().mjava","sourceNew":"  private void initIndexReaderFactory() {\n    IndexReaderFactory indexReaderFactory;\n    PluginInfo info = solrConfig.getPluginInfo(IndexReaderFactory.class.getName());\n    if (info != null) {\n      indexReaderFactory = (IndexReaderFactory) resourceLoader.newInstance(info.className);\n      indexReaderFactory.init(info.initArgs);\n    } else {\n      indexReaderFactory = new StandardIndexReaderFactory();\n    } \n    this.indexReaderFactory = indexReaderFactory;\n    this.indexReaderFactory.setCodecProvider(codecProvider);\n  }\n\n","sourceOld":"  private void initIndexReaderFactory() {\n    IndexReaderFactory indexReaderFactory;\n    PluginInfo info = solrConfig.getPluginInfo(IndexReaderFactory.class.getName());\n    if (info != null) {\n      indexReaderFactory = (IndexReaderFactory) resourceLoader.newInstance(info.className);\n      indexReaderFactory.init(info.initArgs);\n    } else {\n      indexReaderFactory = new StandardIndexReaderFactory();\n    } \n    this.indexReaderFactory = indexReaderFactory;\n    this.indexReaderFactory.setCodecProvider(codecProvider);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndexReaderFactory().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initIndexReaderFactory().mjava","sourceNew":"  private void initIndexReaderFactory() {\n    IndexReaderFactory indexReaderFactory;\n    PluginInfo info = solrConfig.getPluginInfo(IndexReaderFactory.class.getName());\n    if (info != null) {\n      indexReaderFactory = (IndexReaderFactory) resourceLoader.newInstance(info.className);\n      indexReaderFactory.init(info.initArgs);\n    } else {\n      indexReaderFactory = new StandardIndexReaderFactory();\n    } \n    this.indexReaderFactory = indexReaderFactory;\n    this.indexReaderFactory.setCodecProvider(codecProvider);\n  }\n\n","sourceOld":"  private void initIndexReaderFactory() {\n    IndexReaderFactory indexReaderFactory;\n    PluginInfo info = solrConfig.getPluginInfo(IndexReaderFactory.class.getName());\n    if (info != null) {\n      indexReaderFactory = (IndexReaderFactory) resourceLoader.newInstance(info.className);\n      indexReaderFactory.init(info.initArgs);\n    } else {\n      indexReaderFactory = new StandardIndexReaderFactory();\n    } \n    this.indexReaderFactory = indexReaderFactory;\n    this.indexReaderFactory.setCodecProvider(codecProvider);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndexReaderFactory().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initIndexReaderFactory().mjava","sourceNew":"  private void initIndexReaderFactory() {\n    IndexReaderFactory indexReaderFactory;\n    PluginInfo info = solrConfig.getPluginInfo(IndexReaderFactory.class.getName());\n    if (info != null) {\n      indexReaderFactory = (IndexReaderFactory) resourceLoader.newInstance(info.className);\n      indexReaderFactory.init(info.initArgs);\n    } else {\n      indexReaderFactory = new StandardIndexReaderFactory();\n    } \n    this.indexReaderFactory = indexReaderFactory;\n    this.indexReaderFactory.setCodecProvider(codecProvider);\n  }\n\n","sourceOld":"  private void initIndexReaderFactory() {\n    IndexReaderFactory indexReaderFactory;\n    PluginInfo info = solrConfig.getPluginInfo(IndexReaderFactory.class.getName());\n    if (info != null) {\n      indexReaderFactory = (IndexReaderFactory) resourceLoader.newInstance(info.className);\n      indexReaderFactory.init(info.initArgs);\n    } else {\n      indexReaderFactory = new StandardIndexReaderFactory();\n    } \n    this.indexReaderFactory = indexReaderFactory;\n    this.indexReaderFactory.setCodecProvider(codecProvider);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndexReaderFactory().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndexReaderFactory().mjava","sourceNew":"  private void initIndexReaderFactory() {\n    IndexReaderFactory indexReaderFactory;\n    PluginInfo info = solrConfig.getPluginInfo(IndexReaderFactory.class.getName());\n    if (info != null) {\n      indexReaderFactory = (IndexReaderFactory) resourceLoader.newInstance(info.className);\n      indexReaderFactory.init(info.initArgs);\n    } else {\n      indexReaderFactory = new StandardIndexReaderFactory();\n    } \n    this.indexReaderFactory = indexReaderFactory;\n  }\n\n","sourceOld":"  private void initIndexReaderFactory() {\n    IndexReaderFactory indexReaderFactory;\n    PluginInfo info = solrConfig.getPluginInfo(IndexReaderFactory.class.getName());\n    if (info != null) {\n      indexReaderFactory = (IndexReaderFactory) resourceLoader.newInstance(info.className);\n      indexReaderFactory.init(info.initArgs);\n    } else {\n      indexReaderFactory = new StandardIndexReaderFactory();\n    } \n    this.indexReaderFactory = indexReaderFactory;\n    this.indexReaderFactory.setCodecProvider(codecProvider);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41","date":1334628185,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndexReaderFactory().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndexReaderFactory().mjava","sourceNew":"  private void initIndexReaderFactory() {\n    IndexReaderFactory indexReaderFactory;\n    PluginInfo info = solrConfig.getPluginInfo(IndexReaderFactory.class.getName());\n    if (info != null) {\n      indexReaderFactory = resourceLoader.newInstance(info.className, IndexReaderFactory.class);\n      indexReaderFactory.init(info.initArgs);\n    } else {\n      indexReaderFactory = new StandardIndexReaderFactory();\n    } \n    this.indexReaderFactory = indexReaderFactory;\n  }\n\n","sourceOld":"  private void initIndexReaderFactory() {\n    IndexReaderFactory indexReaderFactory;\n    PluginInfo info = solrConfig.getPluginInfo(IndexReaderFactory.class.getName());\n    if (info != null) {\n      indexReaderFactory = (IndexReaderFactory) resourceLoader.newInstance(info.className);\n      indexReaderFactory.init(info.initArgs);\n    } else {\n      indexReaderFactory = new StandardIndexReaderFactory();\n    } \n    this.indexReaderFactory = indexReaderFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9aea0485ecacb6734c17da2d02569816c23a69c1","date":1425707735,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndexReaderFactory().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndexReaderFactory().mjava","sourceNew":"  private void initIndexReaderFactory() {\n    IndexReaderFactory indexReaderFactory;\n    PluginInfo info = solrConfig.getPluginInfo(IndexReaderFactory.class.getName());\n    if (info != null) {\n      indexReaderFactory = resourceLoader.newInstance(info.className, IndexReaderFactory.class);\n      indexReaderFactory.init(info.initArgs);\n    } else {\n      indexReaderFactory = new StandardIndexReaderFactory();\n    }\n    this.indexReaderFactory = indexReaderFactory;\n  }\n\n","sourceOld":"  private void initIndexReaderFactory() {\n    IndexReaderFactory indexReaderFactory;\n    PluginInfo info = solrConfig.getPluginInfo(IndexReaderFactory.class.getName());\n    if (info != null) {\n      indexReaderFactory = resourceLoader.newInstance(info.className, IndexReaderFactory.class);\n      indexReaderFactory.init(info.initArgs);\n    } else {\n      indexReaderFactory = new StandardIndexReaderFactory();\n    } \n    this.indexReaderFactory = indexReaderFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndexReaderFactory().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndexReaderFactory().mjava","sourceNew":"  private void initIndexReaderFactory() {\n    IndexReaderFactory indexReaderFactory;\n    PluginInfo info = solrConfig.getPluginInfo(IndexReaderFactory.class.getName());\n    if (info != null) {\n      indexReaderFactory = resourceLoader.newInstance(info.className, IndexReaderFactory.class);\n      indexReaderFactory.init(info.initArgs);\n    } else {\n      indexReaderFactory = new StandardIndexReaderFactory();\n    }\n    this.indexReaderFactory = indexReaderFactory;\n  }\n\n","sourceOld":"  private void initIndexReaderFactory() {\n    IndexReaderFactory indexReaderFactory;\n    PluginInfo info = solrConfig.getPluginInfo(IndexReaderFactory.class.getName());\n    if (info != null) {\n      indexReaderFactory = resourceLoader.newInstance(info.className, IndexReaderFactory.class);\n      indexReaderFactory.init(info.initArgs);\n    } else {\n      indexReaderFactory = new StandardIndexReaderFactory();\n    } \n    this.indexReaderFactory = indexReaderFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["c26f00b574427b55127e869b935845554afde1fa"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41","9aea0485ecacb6734c17da2d02569816c23a69c1"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41":["7b91922b55d15444d554721b352861d028eb8278"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9aea0485ecacb6734c17da2d02569816c23a69c1"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7b91922b55d15444d554721b352861d028eb8278"],"a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9aea0485ecacb6734c17da2d02569816c23a69c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"9aea0485ecacb6734c17da2d02569816c23a69c1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}