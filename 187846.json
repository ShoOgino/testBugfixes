{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(Document,int).mjava","commits":[{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(Document,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(StoredDocument,int).mjava","sourceNew":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(Document doc, int docId) {    \n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      return currentWeightValues.longVal(docId - starts[subIndex]);\n    }\n\n","sourceOld":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(StoredDocument doc, int docId) {    \n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      return currentWeightValues.longVal(docId - starts[subIndex]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(Document,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(Document,int).mjava","sourceNew":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(Document doc, int docId) {\n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      try {\n        return currentWeightValues.longVal(docId - starts[subIndex]);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(Document doc, int docId) {    \n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      return currentWeightValues.longVal(docId - starts[subIndex]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(Document,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(Document,int).mjava","sourceNew":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(Document doc, int docId) {\n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      try {\n        return currentWeightValues.longVal(docId - starts[subIndex]);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(Document doc, int docId) {    \n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      return currentWeightValues.longVal(docId - starts[subIndex]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(Document,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(Document,int).mjava","sourceNew":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(Document doc, int docId) {\n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      try {\n        return currentWeightValues.longVal(docId - starts[subIndex]);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(Document doc, int docId) {    \n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      return currentWeightValues.longVal(docId - starts[subIndex]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7abbd4266bb36de7f2181eb6d9f3df3ea45ff382","date":1483789945,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(Document,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(Document,int).mjava","sourceNew":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(Document doc, int docId) {\n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(leaves.get(currentLeafIndex), null);\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      try {\n        if (currentWeightValues.advanceExact(docId - starts[subIndex]))\n          return currentWeightValues.longValue();\n        else\n          return 0;\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(Document doc, int docId) {\n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      try {\n        return currentWeightValues.longVal(docId - starts[subIndex]);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c68d790eb3dea3a0c4ea47da710305854ae8e96","date":1483805189,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(Document,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(Document,int).mjava","sourceNew":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(Document doc, int docId) throws IOException {\n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        currentWeightValues = weightsValueSource.getValues(leaves.get(currentLeafIndex), null);\n      }\n      if (currentWeightValues.advanceExact(docId - starts[subIndex]))\n        return currentWeightValues.longValue();\n      else\n        return 0;\n\n    }\n\n","sourceOld":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(Document doc, int docId) {\n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(leaves.get(currentLeafIndex), null);\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      try {\n        if (currentWeightValues.advanceExact(docId - starts[subIndex]))\n          return currentWeightValues.longValue();\n        else\n          return 0;\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(Document,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(Document,int).mjava","sourceNew":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(Document doc, int docId) throws IOException {\n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        currentWeightValues = weightsValueSource.getValues(leaves.get(currentLeafIndex), null);\n      }\n      if (currentWeightValues.advanceExact(docId - starts[subIndex]))\n        return currentWeightValues.longValue();\n      else\n        return 0;\n\n    }\n\n","sourceOld":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(Document doc, int docId) {\n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      try {\n        return currentWeightValues.longVal(docId - starts[subIndex]);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"9c68d790eb3dea3a0c4ea47da710305854ae8e96":["7abbd4266bb36de7f2181eb6d9f3df3ea45ff382"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","9c68d790eb3dea3a0c4ea47da710305854ae8e96"],"7abbd4266bb36de7f2181eb6d9f3df3ea45ff382":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9c68d790eb3dea3a0c4ea47da710305854ae8e96"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["7abbd4266bb36de7f2181eb6d9f3df3ea45ff382","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"9c68d790eb3dea3a0c4ea47da710305854ae8e96":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"7abbd4266bb36de7f2181eb6d9f3df3ea45ff382":["9c68d790eb3dea3a0c4ea47da710305854ae8e96"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}