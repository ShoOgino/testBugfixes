{"path":"solr/core/src/java/org/apache/solr/request/SimpleFacets#rangeCount(SchemaField,Date,Date,boolean,boolean).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#rangeCount(SchemaField,Date,Date,boolean,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/request/SimpleFacets#rangeCount(SchemaField,Date,Date,boolean,boolean).mjava","sourceNew":"  /**\n   * @deprecated Use rangeCount(SchemaField,String,String,boolean,boolean) which is more generalized\n   */\n  @Deprecated\n  protected int rangeCount(SchemaField sf, Date low, Date high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    Query rangeQ = ((DateField)(sf.getType())).getRangeQuery(null, sf,low,high,iLow,iHigh);\n    return searcher.numDocs(rangeQ ,base);\n  }\n\n","sourceOld":"  /**\n   * @deprecated Use rangeCount(SchemaField,String,String,boolean,boolean) which is more generalized\n   */\n  @Deprecated\n  protected int rangeCount(SchemaField sf, Date low, Date high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    Query rangeQ = ((DateField)(sf.getType())).getRangeQuery(null, sf,low,high,iLow,iHigh);\n    return searcher.numDocs(rangeQ ,base);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#rangeCount(SchemaField,Date,Date,boolean,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/request/SimpleFacets#rangeCount(SchemaField,Date,Date,boolean,boolean).mjava","sourceNew":"  /**\n   * @deprecated Use rangeCount(SchemaField,String,String,boolean,boolean) which is more generalized\n   */\n  @Deprecated\n  protected int rangeCount(SchemaField sf, Date low, Date high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    Query rangeQ = ((DateField)(sf.getType())).getRangeQuery(null, sf,low,high,iLow,iHigh);\n    return searcher.numDocs(rangeQ ,base);\n  }\n\n","sourceOld":"  /**\n   * @deprecated Use rangeCount(SchemaField,String,String,boolean,boolean) which is more generalized\n   */\n  @Deprecated\n  protected int rangeCount(SchemaField sf, Date low, Date high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    Query rangeQ = ((DateField)(sf.getType())).getRangeQuery(null, sf,low,high,iLow,iHigh);\n    return searcher.numDocs(rangeQ ,base);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#rangeCount(SchemaField,Date,Date,boolean,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/request/SimpleFacets#rangeCount(SchemaField,Date,Date,boolean,boolean).mjava","sourceNew":"  /**\n   * @deprecated Use rangeCount(SchemaField,String,String,boolean,boolean) which is more generalized\n   */\n  @Deprecated\n  protected int rangeCount(SchemaField sf, Date low, Date high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    Query rangeQ = ((DateField)(sf.getType())).getRangeQuery(null, sf,low,high,iLow,iHigh);\n    return searcher.numDocs(rangeQ ,base);\n  }\n\n","sourceOld":"  /**\n   * @deprecated Use rangeCount(SchemaField,String,String,boolean,boolean) which is more generalized\n   */\n  @Deprecated\n  protected int rangeCount(SchemaField sf, Date low, Date high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    Query rangeQ = ((DateField)(sf.getType())).getRangeQuery(null, sf,low,high,iLow,iHigh);\n    return searcher.numDocs(rangeQ ,base);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a2ba67a463f52915e77a5fd8714aa7d36faf59c","date":1348538193,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#rangeCount(SchemaField,Date,Date,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SimpleFacets#rangeCount(SchemaField,Date,Date,boolean,boolean).mjava","sourceNew":"  /**\n   * @deprecated Use rangeCount(SchemaField,String,String,boolean,boolean) which is more generalized\n   */\n  @Deprecated\n  protected int rangeCount(SchemaField sf, Date low, Date high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    Query rangeQ = ((DateField)(sf.getType())).getRangeQuery(null, sf,low,high,iLow,iHigh);\n    return searcher.numDocs(rangeQ , docs);\n  }\n\n","sourceOld":"  /**\n   * @deprecated Use rangeCount(SchemaField,String,String,boolean,boolean) which is more generalized\n   */\n  @Deprecated\n  protected int rangeCount(SchemaField sf, Date low, Date high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    Query rangeQ = ((DateField)(sf.getType())).getRangeQuery(null, sf,low,high,iLow,iHigh);\n    return searcher.numDocs(rangeQ ,base);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20495d37d0c28755f57920096796d2c8d85d17d1","date":1379342043,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#rangeCount(SchemaField,Date,Date,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SimpleFacets#rangeCount(SchemaField,Date,Date,boolean,boolean).mjava","sourceNew":"  /**\n   * @deprecated Use rangeCount(SchemaField,String,String,boolean,boolean) which is more generalized\n   */\n  @Deprecated\n  protected int rangeCount(SchemaField sf, Date low, Date high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    Query rangeQ = ((DateField)(sf.getType())).getRangeQuery(null, sf, low, high, iLow, iHigh);\n    return searcher.numDocs(rangeQ, docs);\n  }\n\n","sourceOld":"  /**\n   * @deprecated Use rangeCount(SchemaField,String,String,boolean,boolean) which is more generalized\n   */\n  @Deprecated\n  protected int rangeCount(SchemaField sf, Date low, Date high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    Query rangeQ = ((DateField)(sf.getType())).getRangeQuery(null, sf,low,high,iLow,iHigh);\n    return searcher.numDocs(rangeQ , docs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2106271e380c198349e0f6eac0395bb462913fab","date":1397072894,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#rangeCount(SchemaField,Date,Date,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SimpleFacets#rangeCount(SchemaField,Date,Date,boolean,boolean).mjava","sourceNew":"  /**\n   * @deprecated Use rangeCount(SchemaField,String,String,boolean,boolean) which is more generalized\n   */\n  @Deprecated\n  protected int rangeCount(SchemaField sf, Date low, Date high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    Query rangeQ = ((TrieDateField)(sf.getType())).getRangeQuery(null, sf, low, high, iLow, iHigh);\n    return searcher.numDocs(rangeQ, docs);\n  }\n\n","sourceOld":"  /**\n   * @deprecated Use rangeCount(SchemaField,String,String,boolean,boolean) which is more generalized\n   */\n  @Deprecated\n  protected int rangeCount(SchemaField sf, Date low, Date high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    Query rangeQ = ((DateField)(sf.getType())).getRangeQuery(null, sf, low, high, iLow, iHigh);\n    return searcher.numDocs(rangeQ, docs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa62c79a7afa4d7f22e1f71b883659f3213d7db1","date":1435334422,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#rangeCount(ParsedParams,SchemaField,Date,Date,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SimpleFacets#rangeCount(SchemaField,Date,Date,boolean,boolean).mjava","sourceNew":"  /**\n   * @deprecated Use rangeCount(SchemaField,String,String,boolean,boolean) which is more generalized\n   */\n  @Deprecated\n  protected int rangeCount(ParsedParams parsed, SchemaField sf, Date low, Date high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    Query rangeQ = ((TrieDateField)(sf.getType())).getRangeQuery(null, sf, low, high, iLow, iHigh);\n    return searcher.numDocs(rangeQ, parsed.docs);\n  }\n\n","sourceOld":"  /**\n   * @deprecated Use rangeCount(SchemaField,String,String,boolean,boolean) which is more generalized\n   */\n  @Deprecated\n  protected int rangeCount(SchemaField sf, Date low, Date high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    Query rangeQ = ((TrieDateField)(sf.getType())).getRangeQuery(null, sf, low, high, iLow, iHigh);\n    return searcher.numDocs(rangeQ, docs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"20495d37d0c28755f57920096796d2c8d85d17d1":["7a2ba67a463f52915e77a5fd8714aa7d36faf59c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2106271e380c198349e0f6eac0395bb462913fab":["20495d37d0c28755f57920096796d2c8d85d17d1"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7a2ba67a463f52915e77a5fd8714aa7d36faf59c":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aa62c79a7afa4d7f22e1f71b883659f3213d7db1":["2106271e380c198349e0f6eac0395bb462913fab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa62c79a7afa4d7f22e1f71b883659f3213d7db1"]},"commit2Childs":{"20495d37d0c28755f57920096796d2c8d85d17d1":["2106271e380c198349e0f6eac0395bb462913fab"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"2106271e380c198349e0f6eac0395bb462913fab":["aa62c79a7afa4d7f22e1f71b883659f3213d7db1"],"c26f00b574427b55127e869b935845554afde1fa":["7a2ba67a463f52915e77a5fd8714aa7d36faf59c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"7a2ba67a463f52915e77a5fd8714aa7d36faf59c":["20495d37d0c28755f57920096796d2c8d85d17d1"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"aa62c79a7afa4d7f22e1f71b883659f3213d7db1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}