{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","commits":[{"id":"3241e06e642196396b80bb293acd9c0814d079e0","date":1343094999,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr/collection1\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr/collection1\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80231a39fa20f6c8567eb4e3a3a0511630a97ac7","date":1343105908,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"test.dic\");\n    args.put(\"affix\", \"test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new ResourceAsStreamResourceLoader(getClass()));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr/collection1\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"test.dic\");\n    args.put(\"affix\", \"test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new ResourceAsStreamResourceLoader(getClass()));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr/collection1\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"/dev/null","sourceNew":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"test.dic\");\n    args.put(\"affix\", \"test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new ResourceAsStreamResourceLoader(getClass()));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e456307e9593d8518ec97cd724d8a7d3a109297b","date":1343503424,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"test.dic\");\n    args.put(\"affix\", \"test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new ClasspathResourceLoader(getClass()));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"test.dic\");\n    args.put(\"affix\", \"test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new ResourceAsStreamResourceLoader(getClass()));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"/dev/null","sourceNew":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"test.dic\");\n    args.put(\"affix\", \"test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new ClasspathResourceLoader(getClass()));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"test.dic\");\n    args.put(\"affix\", \"test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new ClasspathResourceLoader(getClass()));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"test.dic\");\n    args.put(\"affix\", \"test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new ResourceAsStreamResourceLoader(getClass()));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":"  public void testStemming() throws Exception {\n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    stream = tokenFilterFactory(\"HunspellStem\",\n        \"dictionary\", \"test.dic\",\n        \"affix\", \"test.aff\").create(stream);\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"test.dic\");\n    args.put(\"affix\", \"test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new ClasspathResourceLoader(getClass()));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":null,"bugIntro":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":"  public void testStemming() throws Exception {\n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"HunspellStem\",\n        \"dictionary\", \"test.dic\",\n        \"affix\", \"test.aff\").create(stream);\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":"  public void testStemming() throws Exception {\n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    stream = tokenFilterFactory(\"HunspellStem\",\n        \"dictionary\", \"test.dic\",\n        \"affix\", \"test.aff\").create(stream);\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e","date":1393532367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":"  public void testStemming() throws Exception {\n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"Hunspell2Stem\",\n        \"dictionary\", \"simple.dic\",\n        \"affix\", \"simple.aff\").create(stream);\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":"  public void testStemming() throws Exception {\n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"HunspellStem\",\n        \"dictionary\", \"test.dic\",\n        \"affix\", \"test.aff\").create(stream);\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"53aa45b5e9de71ecfd58a77dcfe744490e84287a","date":1393533575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":"  public void testStemming() throws Exception {\n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"HunspellStem\",\n        \"dictionary\", \"simple.dic\",\n        \"affix\", \"simple.aff\").create(stream);\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":"  public void testStemming() throws Exception {\n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"Hunspell2Stem\",\n        \"dictionary\", \"simple.dic\",\n        \"affix\", \"simple.aff\").create(stream);\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba791bce8103c79e38f957e9c5a53a75871bd918","date":1393539206,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":"  public void testStemming() throws Exception {\n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"HunspellStem\",\n        \"dictionary\", \"simple.dic\",\n        \"affix\", \"simple.aff\").create(stream);\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":"  public void testStemming() throws Exception {\n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"HunspellStem\",\n        \"dictionary\", \"test.dic\",\n        \"affix\", \"test.aff\").create(stream);\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["e456307e9593d8518ec97cd724d8a7d3a109297b"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","80231a39fa20f6c8567eb4e3a3a0511630a97ac7"],"80231a39fa20f6c8567eb4e3a3a0511630a97ac7":["3241e06e642196396b80bb293acd9c0814d079e0"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","53aa45b5e9de71ecfd58a77dcfe744490e84287a"],"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e456307e9593d8518ec97cd724d8a7d3a109297b"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["aba371508186796cc6151d8223a5b4e16d02e26e","e456307e9593d8518ec97cd724d8a7d3a109297b"],"e456307e9593d8518ec97cd724d8a7d3a109297b":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"53aa45b5e9de71ecfd58a77dcfe744490e84287a":["dc3f094cafa4a87b4066e1d6710fa4e6afe6260e"],"3241e06e642196396b80bb293acd9c0814d079e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba791bce8103c79e38f957e9c5a53a75871bd918"]},"commit2Childs":{"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["ba791bce8103c79e38f957e9c5a53a75871bd918","dc3f094cafa4a87b4066e1d6710fa4e6afe6260e"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","e456307e9593d8518ec97cd724d8a7d3a109297b"],"80231a39fa20f6c8567eb4e3a3a0511630a97ac7":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"aba371508186796cc6151d8223a5b4e16d02e26e":["d6f074e73200c07d54f242d3880a8da5a35ff97b"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":["53aa45b5e9de71ecfd58a77dcfe744490e84287a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a1a22b1ad88b436661458df567f3fdb446392a4","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","3241e06e642196396b80bb293acd9c0814d079e0"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"e456307e9593d8518ec97cd724d8a7d3a109297b":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"53aa45b5e9de71ecfd58a77dcfe744490e84287a":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"3241e06e642196396b80bb293acd9c0814d079e0":["80231a39fa20f6c8567eb4e3a3a0511630a97ac7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}