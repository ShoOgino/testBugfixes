{"path":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllDocsWeight#explain(AtomicReaderContext,int).mjava","commits":[{"id":"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","date":1294747166,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllDocsWeight#explain(AtomicReaderContext,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllDocsWeight#explain(ReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) {\n      // explain query weight\n      Explanation queryExpl = new ComplexExplanation\n        (true, getValue(), \"MatchAllDocsQuery, product of:\");\n      if (getBoost() != 1.0f) {\n        queryExpl.addDetail(new Explanation(getBoost(),\"boost\"));\n      }\n      queryExpl.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n\n      return queryExpl;\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(ReaderContext context, int doc) {\n      // explain query weight\n      Explanation queryExpl = new ComplexExplanation\n        (true, getValue(), \"MatchAllDocsQuery, product of:\");\n      if (getBoost() != 1.0f) {\n        queryExpl.addDetail(new Explanation(getBoost(),\"boost\"));\n      }\n      queryExpl.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n\n      return queryExpl;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllDocsWeight#explain(AtomicReaderContext,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) {\n      // explain query weight\n      Explanation queryExpl = new ComplexExplanation\n        (true, getValue(), \"MatchAllDocsQuery, product of:\");\n      if (getBoost() != 1.0f) {\n        queryExpl.addDetail(new Explanation(getBoost(),\"boost\"));\n      }\n      queryExpl.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n\n      return queryExpl;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllDocsWeight#explain(AtomicReaderContext,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) {\n      // explain query weight\n      Explanation queryExpl = new ComplexExplanation\n        (true, getValue(), \"MatchAllDocsQuery, product of:\");\n      if (getBoost() != 1.0f) {\n        queryExpl.addDetail(new Explanation(getBoost(),\"boost\"));\n      }\n      queryExpl.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n\n      return queryExpl;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f3cee3d20b0c786e6fca20539454262e29edcab","date":1310101685,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllDocsWeight#explain(AtomicReaderContext,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllDocsWeight#explain(AtomicReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) {\n      // explain query weight\n      Explanation queryExpl = new ComplexExplanation\n        (true, queryWeight, \"MatchAllDocsQuery, product of:\");\n      if (getBoost() != 1.0f) {\n        queryExpl.addDetail(new Explanation(getBoost(),\"boost\"));\n      }\n      queryExpl.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n\n      return queryExpl;\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) {\n      // explain query weight\n      Explanation queryExpl = new ComplexExplanation\n        (true, getValue(), \"MatchAllDocsQuery, product of:\");\n      if (getBoost() != 1.0f) {\n        queryExpl.addDetail(new Explanation(getBoost(),\"boost\"));\n      }\n      queryExpl.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n\n      return queryExpl;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllDocsWeight#explain(AtomicReaderContext,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllDocsWeight#explain(AtomicReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) {\n      // explain query weight\n      Explanation queryExpl = new ComplexExplanation\n        (true, queryWeight, \"MatchAllDocsQuery, product of:\");\n      if (getBoost() != 1.0f) {\n        queryExpl.addDetail(new Explanation(getBoost(),\"boost\"));\n      }\n      queryExpl.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n\n      return queryExpl;\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) {\n      // explain query weight\n      Explanation queryExpl = new ComplexExplanation\n        (true, getValue(), \"MatchAllDocsQuery, product of:\");\n      if (getBoost() != 1.0f) {\n        queryExpl.addDetail(new Explanation(getBoost(),\"boost\"));\n      }\n      queryExpl.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n\n      return queryExpl;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllDocsWeight#explain(AtomicReaderContext,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllDocsWeight#explain(AtomicReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) {\n      // explain query weight\n      Explanation queryExpl = new ComplexExplanation\n        (true, queryWeight, \"MatchAllDocsQuery, product of:\");\n      if (getBoost() != 1.0f) {\n        queryExpl.addDetail(new Explanation(getBoost(),\"boost\"));\n      }\n      queryExpl.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n\n      return queryExpl;\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) {\n      // explain query weight\n      Explanation queryExpl = new ComplexExplanation\n        (true, getValue(), \"MatchAllDocsQuery, product of:\");\n      if (getBoost() != 1.0f) {\n        queryExpl.addDetail(new Explanation(getBoost(),\"boost\"));\n      }\n      queryExpl.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n\n      return queryExpl;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllDocsWeight#explain(AtomicReaderContext,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllDocsWeight#explain(AtomicReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) {\n      // explain query weight\n      Explanation queryExpl = new ComplexExplanation\n        (true, queryWeight, \"MatchAllDocsQuery, product of:\");\n      if (getBoost() != 1.0f) {\n        queryExpl.addDetail(new Explanation(getBoost(),\"boost\"));\n      }\n      queryExpl.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n\n      return queryExpl;\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) {\n      // explain query weight\n      Explanation queryExpl = new ComplexExplanation\n        (true, queryWeight, \"MatchAllDocsQuery, product of:\");\n      if (getBoost() != 1.0f) {\n        queryExpl.addDetail(new Explanation(getBoost(),\"boost\"));\n      }\n      queryExpl.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n\n      return queryExpl;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1291e4568eb7d9463d751627596ef14baf4c1603":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","0f3cee3d20b0c786e6fca20539454262e29edcab"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","0f3cee3d20b0c786e6fca20539454262e29edcab"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["0f3cee3d20b0c786e6fca20539454262e29edcab"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"1291e4568eb7d9463d751627596ef14baf4c1603":[],"0f3cee3d20b0c786e6fca20539454262e29edcab":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["1291e4568eb7d9463d751627596ef14baf4c1603","0f3cee3d20b0c786e6fca20539454262e29edcab","f0b9507caf22f292ac0e5e59f62db4275adf4511","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}