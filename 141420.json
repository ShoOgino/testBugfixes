{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFlattenGraphFilter#testSimpleMock().mjava","commits":[{"id":"098528909bb70948871fd7ed865fafb87ed73964","date":1484667487,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFlattenGraphFilter#testSimpleMock().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestFlattenGraphFilter#testSimpleMock().mjava","sourceNew":"  public void testSimpleMock() throws Exception {\n    Analyzer a = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName) {\n          Tokenizer tokenizer = new MockTokenizer(MockTokenizer.SIMPLE, true);\n          TokenStream ts = new FlattenGraphFilter(tokenizer);\n          return new TokenStreamComponents(tokenizer, ts);\n        }\n      };\n\n    assertAnalyzesTo(a, \"wtf happened\",\n                     new String[] {\"wtf\", \"happened\"},\n                     new int[]    {    0,          4},\n                     new int[]    {    3,         12},\n                     null,\n                     new int[]    {    1,          1},\n                     new int[]    {    1,          1},\n                     true);\n  }\n\n","sourceOld":"  public void testSimpleMock() throws Exception {\n    Analyzer a = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName) {\n          Tokenizer tokenizer = new MockTokenizer(MockTokenizer.SIMPLE, true);\n          TokenStream ts = new FlattenGraphFilter(tokenizer);\n          return new TokenStreamComponents(tokenizer, ts);\n        }\n      };\n\n    assertAnalyzesTo(a, \"wtf happened\",\n                     new String[] {\"wtf\", \"happened\"},\n                     new int[]    {    0,          4},\n                     new int[]    {    3,         12},\n                     null,\n                     new int[]    {    1,          1},\n                     new int[]    {    1,          1},\n                     true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"302d34f2c66e8d489ee13078305c330cbf67b226","date":1484754357,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFlattenGraphFilter#testSimpleMock().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestFlattenGraphFilter#testSimpleMock().mjava","sourceNew":"  public void testSimpleMock() throws Exception {\n    Analyzer a = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName) {\n          Tokenizer tokenizer = new MockTokenizer(MockTokenizer.SIMPLE, true);\n          TokenStream ts = new FlattenGraphFilter(tokenizer);\n          return new TokenStreamComponents(tokenizer, ts);\n        }\n      };\n\n    assertAnalyzesTo(a, \"wtf happened\",\n                     new String[] {\"wtf\", \"happened\"},\n                     new int[]    {    0,          4},\n                     new int[]    {    3,         12},\n                     null,\n                     new int[]    {    1,          1},\n                     new int[]    {    1,          1},\n                     true);\n  }\n\n","sourceOld":"  public void testSimpleMock() throws Exception {\n    Analyzer a = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName) {\n          Tokenizer tokenizer = new MockTokenizer(MockTokenizer.SIMPLE, true);\n          TokenStream ts = new FlattenGraphFilter(tokenizer);\n          return new TokenStreamComponents(tokenizer, ts);\n        }\n      };\n\n    assertAnalyzesTo(a, \"wtf happened\",\n                     new String[] {\"wtf\", \"happened\"},\n                     new int[]    {    0,          4},\n                     new int[]    {    3,         12},\n                     null,\n                     new int[]    {    1,          1},\n                     new int[]    {    1,          1},\n                     true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"098528909bb70948871fd7ed865fafb87ed73964":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["098528909bb70948871fd7ed865fafb87ed73964"],"302d34f2c66e8d489ee13078305c330cbf67b226":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","098528909bb70948871fd7ed865fafb87ed73964"]},"commit2Childs":{"098528909bb70948871fd7ed865fafb87ed73964":["cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["098528909bb70948871fd7ed865fafb87ed73964","302d34f2c66e8d489ee13078305c330cbf67b226"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"302d34f2c66e8d489ee13078305c330cbf67b226":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}