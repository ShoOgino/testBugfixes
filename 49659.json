{"path":"solr/core/src/test/org/apache/solr/update/TestUpdate#testUpdateableDocs().mjava","commits":[{"id":"1bea3922196318026c4274f2013416acb60c691e","date":1336496433,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestUpdate#testUpdateableDocs().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testUpdateableDocs() throws Exception {\n    // The document may be retrieved from the index or from the transaction log.\n    // Test both by running the same test with and without commits\n\n    // do without commits\n    doUpdateTest(new Callable() {\n      @Override\n      public Object call() throws Exception {\n        return null;\n      }\n    });\n\n    // do with commits\n    doUpdateTest(new Callable() {\n      @Override\n      public Object call() throws Exception {\n        commit(\"softCommit\",\"false\");\n        return null;\n      }\n    });\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c9578f99a6012b38cadca42a29f0bc79cdd5f3c6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c9578f99a6012b38cadca42a29f0bc79cdd5f3c6","date":1345436530,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestUpdate#testUpdateableDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/TestUpdate#testUpdateableDocs().mjava","sourceNew":"  @Test\n  public void testUpdateableDocs() throws Exception {\n    // The document may be retrieved from the index or from the transaction log.\n    // Test both by running the same test with and without commits\n\n    // do without commits\n    doUpdateTest(new Callable() {\n      @Override\n      public Object call() throws Exception {\n        return null;\n      }\n    });\n\n    // do with commits\n    doUpdateTest(new Callable() {\n      @Override\n      public Object call() throws Exception {\n        assertU(commit(\"softCommit\",\"false\"));\n        return null;\n      }\n    });\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testUpdateableDocs() throws Exception {\n    // The document may be retrieved from the index or from the transaction log.\n    // Test both by running the same test with and without commits\n\n    // do without commits\n    doUpdateTest(new Callable() {\n      @Override\n      public Object call() throws Exception {\n        return null;\n      }\n    });\n\n    // do with commits\n    doUpdateTest(new Callable() {\n      @Override\n      public Object call() throws Exception {\n        commit(\"softCommit\",\"false\");\n        return null;\n      }\n    });\n\n\n  }\n\n","bugFix":["1bea3922196318026c4274f2013416acb60c691e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"67588aedbc6edbcce873bd0c3c7b4199fbf0987c","date":1345506207,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/TestUpdate#testUpdateableDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/TestUpdate#testUpdateableDocs().mjava","sourceNew":"  @Test\n  public void testUpdateableDocs() throws Exception {\n    // The document may be retrieved from the index or from the transaction log.\n    // Test both by running the same test with and without commits\n\n    // do without commits\n    doUpdateTest(new Callable() {\n      @Override\n      public Object call() throws Exception {\n        return null;\n      }\n    });\n\n    // do with commits\n    doUpdateTest(new Callable() {\n      @Override\n      public Object call() throws Exception {\n        assertU(commit(\"softCommit\",\"false\"));\n        return null;\n      }\n    });\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testUpdateableDocs() throws Exception {\n    // The document may be retrieved from the index or from the transaction log.\n    // Test both by running the same test with and without commits\n\n    // do without commits\n    doUpdateTest(new Callable() {\n      @Override\n      public Object call() throws Exception {\n        return null;\n      }\n    });\n\n    // do with commits\n    doUpdateTest(new Callable() {\n      @Override\n      public Object call() throws Exception {\n        commit(\"softCommit\",\"false\");\n        return null;\n      }\n    });\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/TestUpdate#testUpdateableDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/TestUpdate#testUpdateableDocs().mjava","sourceNew":"  @Test\n  public void testUpdateableDocs() throws Exception {\n    // The document may be retrieved from the index or from the transaction log.\n    // Test both by running the same test with and without commits\n\n    // do without commits\n    doUpdateTest(new Callable() {\n      @Override\n      public Object call() throws Exception {\n        return null;\n      }\n    });\n\n    // do with commits\n    doUpdateTest(new Callable() {\n      @Override\n      public Object call() throws Exception {\n        assertU(commit(\"softCommit\",\"false\"));\n        return null;\n      }\n    });\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testUpdateableDocs() throws Exception {\n    // The document may be retrieved from the index or from the transaction log.\n    // Test both by running the same test with and without commits\n\n    // do without commits\n    doUpdateTest(new Callable() {\n      @Override\n      public Object call() throws Exception {\n        return null;\n      }\n    });\n\n    // do with commits\n    doUpdateTest(new Callable() {\n      @Override\n      public Object call() throws Exception {\n        commit(\"softCommit\",\"false\");\n        return null;\n      }\n    });\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043df2e9a841864922c32756a44c939ed768cb89","date":1459876536,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestUpdate#testUpdateableDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/TestUpdate#testUpdateableDocs().mjava","sourceNew":"  @Test\n  public void testUpdateableDocs() throws Exception {\n    // The document may be retrieved from the index or from the transaction log.\n    // Test both by running the same test with and without commits\n\n    // do without commits\n    doUpdateTest(() -> null);\n\n    // do with commits\n    doUpdateTest(() -> {\n      assertU(commit(\"softCommit\",\"false\"));\n      return null;\n    });\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testUpdateableDocs() throws Exception {\n    // The document may be retrieved from the index or from the transaction log.\n    // Test both by running the same test with and without commits\n\n    // do without commits\n    doUpdateTest(new Callable() {\n      @Override\n      public Object call() throws Exception {\n        return null;\n      }\n    });\n\n    // do with commits\n    doUpdateTest(new Callable() {\n      @Override\n      public Object call() throws Exception {\n        assertU(commit(\"softCommit\",\"false\"));\n        return null;\n      }\n    });\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6284684320a9808c41a5e43de958b2da22f89bd","date":1459977490,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/TestUpdate#testUpdateableDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/TestUpdate#testUpdateableDocs().mjava","sourceNew":"  @Test\n  public void testUpdateableDocs() throws Exception {\n    // The document may be retrieved from the index or from the transaction log.\n    // Test both by running the same test with and without commits\n\n    // do without commits\n    doUpdateTest(() -> null);\n\n    // do with commits\n    doUpdateTest(() -> {\n      assertU(commit(\"softCommit\",\"false\"));\n      return null;\n    });\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testUpdateableDocs() throws Exception {\n    // The document may be retrieved from the index or from the transaction log.\n    // Test both by running the same test with and without commits\n\n    // do without commits\n    doUpdateTest(new Callable() {\n      @Override\n      public Object call() throws Exception {\n        return null;\n      }\n    });\n\n    // do with commits\n    doUpdateTest(new Callable() {\n      @Override\n      public Object call() throws Exception {\n        assertU(commit(\"softCommit\",\"false\"));\n        return null;\n      }\n    });\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"415bbbe7da8065dd3c477bdc3c703c6425622998","date":1485393793,"type":5,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestUpdate#testUpdatableDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/TestUpdate#testUpdateableDocs().mjava","sourceNew":"  @Test\n  public void testUpdatableDocs() throws Exception {\n    // The document may be retrieved from the index or from the transaction log.\n    // Test both by running the same test with and without commits\n\n    // do without commits\n    doUpdateTest(() -> null);\n\n    // do with commits\n    doUpdateTest(() -> {\n      assertU(commit(\"softCommit\",\"false\"));\n      return null;\n    });\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testUpdateableDocs() throws Exception {\n    // The document may be retrieved from the index or from the transaction log.\n    // Test both by running the same test with and without commits\n\n    // do without commits\n    doUpdateTest(() -> null);\n\n    // do with commits\n    doUpdateTest(() -> {\n      assertU(commit(\"softCommit\",\"false\"));\n      return null;\n    });\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"598b5d23aa7c9732bf473c21a9cd309c44599394","date":1485530378,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/TestUpdate#testUpdatableDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/TestUpdate#testUpdateableDocs().mjava","sourceNew":"  @Test\n  public void testUpdatableDocs() throws Exception {\n    // The document may be retrieved from the index or from the transaction log.\n    // Test both by running the same test with and without commits\n\n    // do without commits\n    doUpdateTest(() -> null);\n\n    // do with commits\n    doUpdateTest(() -> {\n      assertU(commit(\"softCommit\",\"false\"));\n      return null;\n    });\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testUpdateableDocs() throws Exception {\n    // The document may be retrieved from the index or from the transaction log.\n    // Test both by running the same test with and without commits\n\n    // do without commits\n    doUpdateTest(() -> null);\n\n    // do with commits\n    doUpdateTest(() -> {\n      assertU(commit(\"softCommit\",\"false\"));\n      return null;\n    });\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["b6284684320a9808c41a5e43de958b2da22f89bd"],"001b25b42373b22a52f399dbf072f1224632e8e6":["1bea3922196318026c4274f2013416acb60c691e","c9578f99a6012b38cadca42a29f0bc79cdd5f3c6"],"043df2e9a841864922c32756a44c939ed768cb89":["c9578f99a6012b38cadca42a29f0bc79cdd5f3c6"],"598b5d23aa7c9732bf473c21a9cd309c44599394":["b6284684320a9808c41a5e43de958b2da22f89bd","415bbbe7da8065dd3c477bdc3c703c6425622998"],"b6284684320a9808c41a5e43de958b2da22f89bd":["c9578f99a6012b38cadca42a29f0bc79cdd5f3c6","043df2e9a841864922c32756a44c939ed768cb89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"67588aedbc6edbcce873bd0c3c7b4199fbf0987c":["1bea3922196318026c4274f2013416acb60c691e","c9578f99a6012b38cadca42a29f0bc79cdd5f3c6"],"1bea3922196318026c4274f2013416acb60c691e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c9578f99a6012b38cadca42a29f0bc79cdd5f3c6":["1bea3922196318026c4274f2013416acb60c691e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["415bbbe7da8065dd3c477bdc3c703c6425622998"]},"commit2Childs":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"001b25b42373b22a52f399dbf072f1224632e8e6":[],"043df2e9a841864922c32756a44c939ed768cb89":["b6284684320a9808c41a5e43de958b2da22f89bd"],"598b5d23aa7c9732bf473c21a9cd309c44599394":[],"b6284684320a9808c41a5e43de958b2da22f89bd":["415bbbe7da8065dd3c477bdc3c703c6425622998","598b5d23aa7c9732bf473c21a9cd309c44599394"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1bea3922196318026c4274f2013416acb60c691e"],"67588aedbc6edbcce873bd0c3c7b4199fbf0987c":[],"1bea3922196318026c4274f2013416acb60c691e":["001b25b42373b22a52f399dbf072f1224632e8e6","67588aedbc6edbcce873bd0c3c7b4199fbf0987c","c9578f99a6012b38cadca42a29f0bc79cdd5f3c6"],"c9578f99a6012b38cadca42a29f0bc79cdd5f3c6":["001b25b42373b22a52f399dbf072f1224632e8e6","043df2e9a841864922c32756a44c939ed768cb89","b6284684320a9808c41a5e43de958b2da22f89bd","67588aedbc6edbcce873bd0c3c7b4199fbf0987c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","598b5d23aa7c9732bf473c21a9cd309c44599394","67588aedbc6edbcce873bd0c3c7b4199fbf0987c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}