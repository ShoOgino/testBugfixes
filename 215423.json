{"path":"lucene/src/java/org/apache/lucene/util/RecyclingByteBlockAllocator#freeBlocks(int).mjava","commits":[{"id":"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","date":1286023472,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/RecyclingByteBlockAllocator#freeBlocks(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Removes the given number of byte blocks from the buffer if possible.\n   * \n   * @param num\n   *          the number of byte blocks to remove\n   * @return the number of actually removed buffers\n   */\n  public synchronized int freeBlocks(int num) {\n    assert num >= 0;\n    final int stop;\n    final int count;\n    if (num > freeBlocks) {\n      stop = 0;\n      count = freeBlocks;\n    } else {\n      stop = freeBlocks - num;\n      count = num;\n    }\n    while (freeBlocks > stop) {\n      freeByteBlocks[--freeBlocks] = null;\n    }\n    bytesUsed.addAndGet(-count*blockSize);\n    assert bytesUsed.get() >= 0;\n    return count;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/RecyclingByteBlockAllocator#freeBlocks(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Removes the given number of byte blocks from the buffer if possible.\n   * \n   * @param num\n   *          the number of byte blocks to remove\n   * @return the number of actually removed buffers\n   */\n  public synchronized int freeBlocks(int num) {\n    assert num >= 0;\n    final int stop;\n    final int count;\n    if (num > freeBlocks) {\n      stop = 0;\n      count = freeBlocks;\n    } else {\n      stop = freeBlocks - num;\n      count = num;\n    }\n    while (freeBlocks > stop) {\n      freeByteBlocks[--freeBlocks] = null;\n    }\n    bytesUsed.addAndGet(-count*blockSize);\n    assert bytesUsed.get() >= 0;\n    return count;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/RecyclingByteBlockAllocator#freeBlocks(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/RecyclingByteBlockAllocator#freeBlocks(int).mjava","sourceNew":"  /**\n   * Removes the given number of byte blocks from the buffer if possible.\n   * \n   * @param num\n   *          the number of byte blocks to remove\n   * @return the number of actually removed buffers\n   */\n  public synchronized int freeBlocks(int num) {\n    assert num >= 0;\n    final int stop;\n    final int count;\n    if (num > freeBlocks) {\n      stop = 0;\n      count = freeBlocks;\n    } else {\n      stop = freeBlocks - num;\n      count = num;\n    }\n    while (freeBlocks > stop) {\n      freeByteBlocks[--freeBlocks] = null;\n    }\n    bytesUsed.addAndGet(-count*blockSize);\n    assert bytesUsed.get() >= 0;\n    return count;\n  }\n\n","sourceOld":"  /**\n   * Removes the given number of byte blocks from the buffer if possible.\n   * \n   * @param num\n   *          the number of byte blocks to remove\n   * @return the number of actually removed buffers\n   */\n  public synchronized int freeBlocks(int num) {\n    assert num >= 0;\n    final int stop;\n    final int count;\n    if (num > freeBlocks) {\n      stop = 0;\n      count = freeBlocks;\n    } else {\n      stop = freeBlocks - num;\n      count = num;\n    }\n    while (freeBlocks > stop) {\n      freeByteBlocks[--freeBlocks] = null;\n    }\n    bytesUsed.addAndGet(-count*blockSize);\n    assert bytesUsed.get() >= 0;\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}