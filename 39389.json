{"path":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random, 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, SEGMENT, fieldInfos, 10000, termIndexInterval, codec, null, newIOContext(random));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random, 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, SEGMENT, fieldInfos, 10000, termIndexInterval, codec, null, newIOContext(random));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08eba3d52b63561ebf936481ce73e6b6a14aa03","date":1333879759,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random, 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, SEGMENT, fieldInfos, 10000, termIndexInterval, codec, null, newIOContext(random));\n\n    final InvertedFieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random, 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, SEGMENT, fieldInfos, 10000, termIndexInterval, codec, null, newIOContext(random));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","date":1333892281,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random, 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, SEGMENT, fieldInfos, 10000, termIndexInterval, codec, null, newIOContext(random));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random, 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, SEGMENT, fieldInfos, 10000, termIndexInterval, codec, null, newIOContext(random));\n\n    final InvertedFieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, SEGMENT, fieldInfos, 10000, termIndexInterval, codec, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random, 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, SEGMENT, fieldInfos, 10000, termIndexInterval, codec, null, newIOContext(random));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"129c6e8ac0c0d9a110ba29e4b5f1889374f30076","date":1337725510,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, -1, SEGMENT, false, null, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, 10000, termIndexInterval, codec, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, SEGMENT, fieldInfos, 10000, termIndexInterval, codec, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0cadbbc3b8df99c8c7acd19da62f6b35eb126c85","date":1337798576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, -1, SEGMENT, false, null, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, 10000, termIndexInterval, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, -1, SEGMENT, false, null, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, 10000, termIndexInterval, codec, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16cbef32b882ec68df422af3f08845ec82620335","date":1337802266,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, -1, SEGMENT, false, null, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, termIndexInterval, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, -1, SEGMENT, false, null, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, 10000, termIndexInterval, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a917aca07a305ab70118a83e84d931503441271","date":1337826487,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, null, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, termIndexInterval, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, -1, SEGMENT, false, null, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, termIndexInterval, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"764b942fd30efcae6e532c19771f32eeeb0037b2","date":1337868546,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, termIndexInterval, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, null, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, termIndexInterval, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, termIndexInterval, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, SEGMENT, fieldInfos, 10000, termIndexInterval, codec, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57ae3024996ccdb3c36c42cb890e1efb37df4ce8","date":1338343651,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, termIndexInterval, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, termIndexInterval, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6a917aca07a305ab70118a83e84d931503441271":["16cbef32b882ec68df422af3f08845ec82620335"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"764b942fd30efcae6e532c19771f32eeeb0037b2":["6a917aca07a305ab70118a83e84d931503441271"],"16cbef32b882ec68df422af3f08845ec82620335":["0cadbbc3b8df99c8c7acd19da62f6b35eb126c85"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","764b942fd30efcae6e532c19771f32eeeb0037b2"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"0cadbbc3b8df99c8c7acd19da62f6b35eb126c85":["129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"]},"commit2Childs":{"6a917aca07a305ab70118a83e84d931503441271":["764b942fd30efcae6e532c19771f32eeeb0037b2"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"764b942fd30efcae6e532c19771f32eeeb0037b2":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"16cbef32b882ec68df422af3f08845ec82620335":["6a917aca07a305ab70118a83e84d931503441271"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["0cadbbc3b8df99c8c7acd19da62f6b35eb126c85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"0cadbbc3b8df99c8c7acd19da62f6b35eb126c85":["16cbef32b882ec68df422af3f08845ec82620335"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}