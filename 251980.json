{"path":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newFSDirectoryImpl(Class[#-extends-FSDirectory],File).mjava","commits":[{"id":"efb7a19703a037c29e30440260d393500febc1f4","date":1306648116,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newFSDirectoryImpl(Class[#-extends-FSDirectory],File).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newFSDirectoryImpl(Class[#-extends-FSDirectory],File,LockFactory).mjava","sourceNew":"  private static Directory newFSDirectoryImpl(\n      Class<? extends FSDirectory> clazz, File file)\n      throws IOException {\n    FSDirectory d = null;\n    try {\n      // Assuming every FSDirectory has a ctor(File), but not all may take a\n      // LockFactory too, so setting it afterwards.\n      Constructor<? extends FSDirectory> ctor = clazz.getConstructor(File.class);\n      d = ctor.newInstance(file);\n    } catch (Exception e) {\n      d = FSDirectory.open(file);\n    }\n    return d;\n  }\n\n","sourceOld":"  private static Directory newFSDirectoryImpl(\n      Class<? extends FSDirectory> clazz, File file, LockFactory lockFactory)\n      throws IOException {\n    FSDirectory d = null;\n    try {\n      // Assuming every FSDirectory has a ctor(File), but not all may take a\n      // LockFactory too, so setting it afterwards.\n      Constructor<? extends FSDirectory> ctor = clazz.getConstructor(File.class);\n      d = ctor.newInstance(file);\n    } catch (Exception e) {\n      d = FSDirectory.open(file);\n    }\n    if (lockFactory != null) {\n      d.setLockFactory(lockFactory);\n    }\n    return d;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newFSDirectoryImpl(Class[#-extends-FSDirectory],File).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newFSDirectoryImpl(Class[#-extends-FSDirectory],File,LockFactory).mjava","sourceNew":"  private static Directory newFSDirectoryImpl(\n      Class<? extends FSDirectory> clazz, File file)\n      throws IOException {\n    FSDirectory d = null;\n    try {\n      // Assuming every FSDirectory has a ctor(File), but not all may take a\n      // LockFactory too, so setting it afterwards.\n      Constructor<? extends FSDirectory> ctor = clazz.getConstructor(File.class);\n      d = ctor.newInstance(file);\n    } catch (Exception e) {\n      d = FSDirectory.open(file);\n    }\n    return d;\n  }\n\n","sourceOld":"  private static Directory newFSDirectoryImpl(\n      Class<? extends FSDirectory> clazz, File file, LockFactory lockFactory)\n      throws IOException {\n    FSDirectory d = null;\n    try {\n      // Assuming every FSDirectory has a ctor(File), but not all may take a\n      // LockFactory too, so setting it afterwards.\n      Constructor<? extends FSDirectory> ctor = clazz.getConstructor(File.class);\n      d = ctor.newInstance(file);\n    } catch (Exception e) {\n      d = FSDirectory.open(file);\n    }\n    if (lockFactory != null) {\n      d.setLockFactory(lockFactory);\n    }\n    return d;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newFSDirectoryImpl(Class[#-extends-FSDirectory],File).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newFSDirectoryImpl(Class[#-extends-FSDirectory],File,LockFactory).mjava","sourceNew":"  private static Directory newFSDirectoryImpl(\n      Class<? extends FSDirectory> clazz, File file)\n      throws IOException {\n    FSDirectory d = null;\n    try {\n      // Assuming every FSDirectory has a ctor(File), but not all may take a\n      // LockFactory too, so setting it afterwards.\n      Constructor<? extends FSDirectory> ctor = clazz.getConstructor(File.class);\n      d = ctor.newInstance(file);\n    } catch (Exception e) {\n      d = FSDirectory.open(file);\n    }\n    return d;\n  }\n\n","sourceOld":"  private static Directory newFSDirectoryImpl(\n      Class<? extends FSDirectory> clazz, File file, LockFactory lockFactory)\n      throws IOException {\n    FSDirectory d = null;\n    try {\n      // Assuming every FSDirectory has a ctor(File), but not all may take a\n      // LockFactory too, so setting it afterwards.\n      Constructor<? extends FSDirectory> ctor = clazz.getConstructor(File.class);\n      d = ctor.newInstance(file);\n    } catch (Exception e) {\n      d = FSDirectory.open(file);\n    }\n    if (lockFactory != null) {\n      d.setLockFactory(lockFactory);\n    }\n    return d;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newFSDirectoryImpl(Class[#-extends-FSDirectory],File).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newFSDirectoryImpl(Class[#-extends-FSDirectory],File).mjava","sourceNew":"  private static Directory newFSDirectoryImpl(\n      Class<? extends FSDirectory> clazz, File file)\n      throws IOException {\n    FSDirectory d = null;\n    try {\n      // Assuming every FSDirectory has a ctor(File), but not all may take a\n      // LockFactory too, so setting it afterwards.\n      Constructor<? extends FSDirectory> ctor = clazz.getConstructor(File.class);\n      d = ctor.newInstance(file);\n    } catch (Exception e) {\n      d = FSDirectory.open(file);\n    }\n    return d;\n  }\n\n","sourceOld":"  private static Directory newFSDirectoryImpl(\n      Class<? extends FSDirectory> clazz, File file)\n      throws IOException {\n    FSDirectory d = null;\n    try {\n      // Assuming every FSDirectory has a ctor(File), but not all may take a\n      // LockFactory too, so setting it afterwards.\n      Constructor<? extends FSDirectory> ctor = clazz.getConstructor(File.class);\n      d = ctor.newInstance(file);\n    } catch (Exception e) {\n      d = FSDirectory.open(file);\n    }\n    return d;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["efb7a19703a037c29e30440260d393500febc1f4"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","efb7a19703a037c29e30440260d393500febc1f4"],"efb7a19703a037c29e30440260d393500febc1f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","efb7a19703a037c29e30440260d393500febc1f4"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"efb7a19703a037c29e30440260d393500febc1f4":["7b91922b55d15444d554721b352861d028eb8278","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","efb7a19703a037c29e30440260d393500febc1f4","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}