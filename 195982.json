{"path":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#toLowercase(CharSequence).mjava","commits":[{"id":"da49a6f983059bd3fb6ce68ad058fb6258d8c5e9","date":1309339454,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#toLowercase(CharSequence).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Convert to lowercase in-place.\n   */\n  private CharSequence toLowercase(CharSequence chs) {\n    final int length = scratch.length = chs.length();\n    scratch.grow(length);\n\n    char buffer[] = scratch.chars;\n    for (int i = 0; i < length;) {\n      i += Character.toChars(\n          Character.toLowerCase(charUtils.codePointAt(chs, i)), buffer, i);      \n    }\n\n    return scratch;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9756567a078125be9a0791e46f79fa0ab190d5c1","date":1309341636,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#toLowercase(CharSequence).mjava","sourceNew":null,"sourceOld":"  /**\n   * Convert to lowercase in-place.\n   */\n  private CharSequence toLowercase(CharSequence chs) {\n    final int length = scratch.length = chs.length();\n    scratch.grow(length);\n\n    char buffer[] = scratch.chars;\n    for (int i = 0; i < length;) {\n      i += Character.toChars(\n          Character.toLowerCase(charUtils.codePointAt(chs, i)), buffer, i);      \n    }\n\n    return scratch;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9372469b09ed273740e18f76520c99aa075358b","date":1309461174,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#toLowercase(CharSequence).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Convert to lowercase in-place.\n   */\n  private CharSequence toLowercase(CharSequence chs) {\n    final int length = scratch.length = chs.length();\n    scratch.grow(length);\n\n    char buffer[] = scratch.chars;\n    for (int i = 0; i < length;) {\n      i += Character.toChars(\n          Character.toLowerCase(charUtils.codePointAt(chs, i)), buffer, i);      \n    }\n\n    return scratch;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#toLowercase(CharSequence).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Convert to lowercase in-place.\n   */\n  private CharSequence toLowercase(CharSequence chs) {\n    final int length = scratch.length = chs.length();\n    scratch.grow(length);\n\n    char buffer[] = scratch.chars;\n    for (int i = 0; i < length;) {\n      i += Character.toChars(\n          Character.toLowerCase(charUtils.codePointAt(chs, i)), buffer, i);      \n    }\n\n    return scratch;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#toLowercase(CharSequence).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Convert to lowercase in-place.\n   */\n  private CharSequence toLowercase(CharSequence chs) {\n    final int length = scratch.length = chs.length();\n    scratch.grow(length);\n\n    char buffer[] = scratch.chars;\n    for (int i = 0; i < length;) {\n      i += Character.toChars(\n          Character.toLowerCase(charUtils.codePointAt(chs, i)), buffer, i);      \n    }\n\n    return scratch;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#toLowercase(CharSequence).mjava","pathOld":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#toLowercase(CharSequence).mjava","sourceNew":"  /**\n   * Convert to lowercase in-place.\n   */\n  private CharSequence toLowercase(CharSequence chs) {\n    final int length = scratch.length = chs.length();\n    scratch.grow(length);\n\n    char buffer[] = scratch.chars;\n    for (int i = 0; i < length;) {\n      i += Character.toChars(\n          Character.toLowerCase(charUtils.codePointAt(chs, i)), buffer, i);      \n    }\n\n    return scratch;\n  }\n\n","sourceOld":"  /**\n   * Convert to lowercase in-place.\n   */\n  private CharSequence toLowercase(CharSequence chs) {\n    final int length = scratch.length = chs.length();\n    scratch.grow(length);\n\n    char buffer[] = scratch.chars;\n    for (int i = 0; i < length;) {\n      i += Character.toChars(\n          Character.toLowerCase(charUtils.codePointAt(chs, i)), buffer, i);      \n    }\n\n    return scratch;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c9372469b09ed273740e18f76520c99aa075358b"],"c9372469b09ed273740e18f76520c99aa075358b":["9756567a078125be9a0791e46f79fa0ab190d5c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"da49a6f983059bd3fb6ce68ad058fb6258d8c5e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c9372469b09ed273740e18f76520c99aa075358b"],"9756567a078125be9a0791e46f79fa0ab190d5c1":["da49a6f983059bd3fb6ce68ad058fb6258d8c5e9"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c9372469b09ed273740e18f76520c99aa075358b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9372469b09ed273740e18f76520c99aa075358b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["da49a6f983059bd3fb6ce68ad058fb6258d8c5e9","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"da49a6f983059bd3fb6ce68ad058fb6258d8c5e9":["9756567a078125be9a0791e46f79fa0ab190d5c1"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"9756567a078125be9a0791e46f79fa0ab190d5c1":["c9372469b09ed273740e18f76520c99aa075358b"],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}