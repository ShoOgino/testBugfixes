{"path":"lucene/sandbox/src/test/org/apache/lucene/document/TestXYMultiLineShapeQueries.MultiLineValidator#testLineQuery(Line2D,Object).mjava","commits":[{"id":"c286b0d8c507a88b289407e2fe161effa275c6b0","date":1562615977,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestXYMultiLineShapeQueries.MultiLineValidator#testLineQuery(Line2D,Object).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean testLineQuery(Line2D query, Object shape) {\n      XYLine[] lines = (XYLine[])shape;\n      for (XYLine l : lines) {\n        boolean b = LINEVALIDATOR.testLineQuery(query, l);\n        if (b == true && queryRelation == ShapeField.QueryRelation.INTERSECTS) {\n          return true;\n        } else if (b == false && queryRelation == ShapeField.QueryRelation.DISJOINT) {\n          return false;\n        } else if (b == false && queryRelation == ShapeField.QueryRelation.WITHIN) {\n          return false;\n        }\n      }\n      return queryRelation != ShapeField.QueryRelation.INTERSECTS;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","date":1571074565,"type":5,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestXYMultiLineShapeQueries.MultiLineValidator#testComponentQuery(Component2D,Object).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestXYMultiLineShapeQueries.MultiLineValidator#testLineQuery(Line2D,Object).mjava","sourceNew":"    @Override\n    public boolean testComponentQuery(Component2D query, Object shape) {\n      XYLine[] lines = (XYLine[])shape;\n      for (XYLine l : lines) {\n        boolean b = LINEVALIDATOR.testComponentQuery(query, l);\n        if (b == true && queryRelation == ShapeField.QueryRelation.INTERSECTS) {\n          return true;\n        } else if (b == false && queryRelation == ShapeField.QueryRelation.DISJOINT) {\n          return false;\n        } else if (b == false && queryRelation == ShapeField.QueryRelation.WITHIN) {\n          return false;\n        }\n      }\n      return queryRelation != ShapeField.QueryRelation.INTERSECTS;\n    }\n\n","sourceOld":"    @Override\n    public boolean testLineQuery(Line2D query, Object shape) {\n      XYLine[] lines = (XYLine[])shape;\n      for (XYLine l : lines) {\n        boolean b = LINEVALIDATOR.testLineQuery(query, l);\n        if (b == true && queryRelation == ShapeField.QueryRelation.INTERSECTS) {\n          return true;\n        } else if (b == false && queryRelation == ShapeField.QueryRelation.DISJOINT) {\n          return false;\n        } else if (b == false && queryRelation == ShapeField.QueryRelation.WITHIN) {\n          return false;\n        }\n      }\n      return queryRelation != ShapeField.QueryRelation.INTERSECTS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":4,"author":"jimczi","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestXYMultiLineShapeQueries.MultiLineValidator#testLineQuery(Line2D,Object).mjava","sourceNew":null,"sourceOld":"    @Override\n    public boolean testLineQuery(Line2D query, Object shape) {\n      XYLine[] lines = (XYLine[])shape;\n      for (XYLine l : lines) {\n        boolean b = LINEVALIDATOR.testLineQuery(query, l);\n        if (b == true && queryRelation == ShapeField.QueryRelation.INTERSECTS) {\n          return true;\n        } else if (b == false && queryRelation == ShapeField.QueryRelation.DISJOINT) {\n          return false;\n        } else if (b == false && queryRelation == ShapeField.QueryRelation.WITHIN) {\n          return false;\n        }\n      }\n      return queryRelation != ShapeField.QueryRelation.INTERSECTS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c286b0d8c507a88b289407e2fe161effa275c6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"],"b0b597c65628ca9e73913a07e81691f8229bae35":["c286b0d8c507a88b289407e2fe161effa275c6b0","b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"]},"commit2Childs":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"c286b0d8c507a88b289407e2fe161effa275c6b0":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}