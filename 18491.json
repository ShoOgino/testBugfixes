{"path":"solr/core/src/java/org/apache/solr/search/DocSetBase#intersectionSize(DocSet).mjava","commits":[{"id":"22e7d2e6a853c3178eccc356ffa07e7ebca55cdd","date":1332689453,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSetBase#intersectionSize(DocSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DocSetBase[DocSet]#intersectionSize(DocSet).mjava","sourceNew":"  public int intersectionSize(DocSet other) {\n    // intersection is overloaded in the smaller DocSets to be more\n    // efficient, so dispatch off of it instead.\n    if (!(other instanceof BitDocSet)) {\n      return other.intersectionSize(this);\n    }\n    // less efficient way: do the intersection then get it's size\n    return intersection(other).size();\n  }\n\n","sourceOld":"  public int intersectionSize(DocSet other) {\n    // intersection is overloaded in the smaller DocSets to be more\n    // efficient, so dispatch off of it instead.\n    if (!(other instanceof BitDocSet)) {\n      return other.intersectionSize(this);\n    }\n    // less efficient way: do the intersection then get it's size\n    return intersection(other).size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSetBase#intersectionSize(DocSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DocSetBase#intersectionSize(DocSet).mjava","sourceNew":"  @Override\n  public int intersectionSize(DocSet other) {\n    // intersection is overloaded in the smaller DocSets to be more\n    // efficient, so dispatch off of it instead.\n    if (!(other instanceof BitDocSet)) {\n      return other.intersectionSize(this);\n    }\n    // less efficient way: do the intersection then get it's size\n    return intersection(other).size();\n  }\n\n","sourceOld":"  public int intersectionSize(DocSet other) {\n    // intersection is overloaded in the smaller DocSets to be more\n    // efficient, so dispatch off of it instead.\n    if (!(other instanceof BitDocSet)) {\n      return other.intersectionSize(this);\n    }\n    // less efficient way: do the intersection then get it's size\n    return intersection(other).size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSetBase#intersectionSize(DocSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DocSetBase#intersectionSize(DocSet).mjava","sourceNew":"  @Override\n  public int intersectionSize(DocSet other) {\n    // intersection is overloaded in the smaller DocSets to be more\n    // efficient, so dispatch off of it instead.\n    if (!(other instanceof BitDocSet)) {\n      return other.intersectionSize(this);\n    }\n    // less efficient way: do the intersection then get it's size\n    return intersection(other).size();\n  }\n\n","sourceOld":"  public int intersectionSize(DocSet other) {\n    // intersection is overloaded in the smaller DocSets to be more\n    // efficient, so dispatch off of it instead.\n    if (!(other instanceof BitDocSet)) {\n      return other.intersectionSize(this);\n    }\n    // less efficient way: do the intersection then get it's size\n    return intersection(other).size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSetBase#intersectionSize(DocSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DocSetBase#intersectionSize(DocSet).mjava","sourceNew":"  @Override\n  public int intersectionSize(DocSet other) {\n    // intersection is overloaded in the smaller DocSets to be more\n    // efficient, so dispatch off of it instead.\n    if (!(other instanceof BitDocSet)) {\n      return other.intersectionSize(this);\n    }\n    // less efficient way: do the intersection then get its size\n    return intersection(other).size();\n  }\n\n","sourceOld":"  @Override\n  public int intersectionSize(DocSet other) {\n    // intersection is overloaded in the smaller DocSets to be more\n    // efficient, so dispatch off of it instead.\n    if (!(other instanceof BitDocSet)) {\n      return other.intersectionSize(this);\n    }\n    // less efficient way: do the intersection then get it's size\n    return intersection(other).size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90440a2155c2b9ce30bf8fc29b1c978c58dae1e7","date":1582642100,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/DocSetBase#intersectionSize(DocSet).mjava","sourceNew":null,"sourceOld":"  @Override\n  public int intersectionSize(DocSet other) {\n    // intersection is overloaded in the smaller DocSets to be more\n    // efficient, so dispatch off of it instead.\n    if (!(other instanceof BitDocSet)) {\n      return other.intersectionSize(this);\n    }\n    // less efficient way: do the intersection then get its size\n    return intersection(other).size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["22e7d2e6a853c3178eccc356ffa07e7ebca55cdd","7530de27b87b961b51f01bd1299b7004d46e8823"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22e7d2e6a853c3178eccc356ffa07e7ebca55cdd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"90440a2155c2b9ce30bf8fc29b1c978c58dae1e7":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"7530de27b87b961b51f01bd1299b7004d46e8823":["22e7d2e6a853c3178eccc356ffa07e7ebca55cdd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90440a2155c2b9ce30bf8fc29b1c978c58dae1e7"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["90440a2155c2b9ce30bf8fc29b1c978c58dae1e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22e7d2e6a853c3178eccc356ffa07e7ebca55cdd"],"22e7d2e6a853c3178eccc356ffa07e7ebca55cdd":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"90440a2155c2b9ce30bf8fc29b1c978c58dae1e7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}