{"path":"solr/core/src/java/org/apache/solr/util/PropertiesUtil#substituteProperty(String,Properties).mjava","commits":[{"id":"a837c064b67fa63a9394136e31218b908cdcf783","date":1362186072,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/PropertiesUtil#substituteProperty(String,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/DOMUtil#substituteProperty(String,Properties).mjava","sourceNew":"  /*\n  * This method borrowed from Ant's PropertyHelper.replaceProperties:\n  *   http://svn.apache.org/repos/asf/ant/core/trunk/src/main/org/apache/tools/ant/PropertyHelper.java\n  */\n  public static String substituteProperty(String value, Properties coreProperties) {\n    if (value == null || value.indexOf('$') == -1) {\n      return value;\n    }\n\n    List<String> fragments = new ArrayList<String>();\n    List<String> propertyRefs = new ArrayList<String>();\n    parsePropertyString(value, fragments, propertyRefs);\n\n    StringBuilder sb = new StringBuilder();\n    Iterator<String> i = fragments.iterator();\n    Iterator<String> j = propertyRefs.iterator();\n\n    while (i.hasNext()) {\n      String fragment = i.next();\n      if (fragment == null) {\n        String propertyName = j.next();\n        String defaultValue = null;\n        int colon_index = propertyName.indexOf(':');\n        if (colon_index > -1) {\n          defaultValue = propertyName.substring(colon_index + 1);\n          propertyName = propertyName.substring(0, colon_index);\n        }\n        if (coreProperties != null) {\n          fragment = coreProperties.getProperty(propertyName);\n        }\n        if (fragment == null) {\n          fragment = System.getProperty(propertyName, defaultValue);\n        }\n        if (fragment == null) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"No system property or default value specified for \" + propertyName + \" value:\" + value);\n        }\n      }\n      sb.append(fragment);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  /*\n   * This method borrowed from Ant's PropertyHelper.replaceProperties:\n   *   http://svn.apache.org/repos/asf/ant/core/trunk/src/main/org/apache/tools/ant/PropertyHelper.java\n   */\n  public static String substituteProperty(String value, Properties coreProperties) {\n    if (value == null || value.indexOf('$') == -1) {\n      return value;\n    }\n\n    List<String> fragments = new ArrayList<String>();\n    List<String> propertyRefs = new ArrayList<String>();\n    parsePropertyString(value, fragments, propertyRefs);\n\n    StringBuilder sb = new StringBuilder();\n    Iterator<String> i = fragments.iterator();\n    Iterator<String> j = propertyRefs.iterator();\n\n    while (i.hasNext()) {\n      String fragment = i.next();\n      if (fragment == null) {\n        String propertyName = j.next();\n        String defaultValue = null;\n        int colon_index = propertyName.indexOf(':');\n        if (colon_index > -1) {\n          defaultValue = propertyName.substring(colon_index + 1);\n          propertyName = propertyName.substring(0,colon_index);\n        }\n        if (coreProperties != null) {\n          fragment = coreProperties.getProperty(propertyName);\n        }\n        if (fragment == null) {\n          fragment = System.getProperty(propertyName, defaultValue);\n        }\n        if (fragment == null) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, \"No system property or default value specified for \" + propertyName + \" value:\" + value);\n        }\n      }\n      sb.append(fragment);\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/PropertiesUtil#substituteProperty(String,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/PropertiesUtil#substituteProperty(String,Properties).mjava","sourceNew":"  /*\n  * This method borrowed from Ant's PropertyHelper.replaceProperties:\n  *   http://svn.apache.org/repos/asf/ant/core/trunk/src/main/org/apache/tools/ant/PropertyHelper.java\n  */\n  public static String substituteProperty(String value, Properties coreProperties) {\n    if (value == null || value.indexOf('$') == -1) {\n      return value;\n    }\n\n    List<String> fragments = new ArrayList<>();\n    List<String> propertyRefs = new ArrayList<>();\n    parsePropertyString(value, fragments, propertyRefs);\n\n    StringBuilder sb = new StringBuilder();\n    Iterator<String> i = fragments.iterator();\n    Iterator<String> j = propertyRefs.iterator();\n\n    while (i.hasNext()) {\n      String fragment = i.next();\n      if (fragment == null) {\n        String propertyName = j.next();\n        String defaultValue = null;\n        int colon_index = propertyName.indexOf(':');\n        if (colon_index > -1) {\n          defaultValue = propertyName.substring(colon_index + 1);\n          propertyName = propertyName.substring(0, colon_index);\n        }\n        if (coreProperties != null) {\n          fragment = coreProperties.getProperty(propertyName);\n        }\n        if (fragment == null) {\n          fragment = System.getProperty(propertyName, defaultValue);\n        }\n        if (fragment == null) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"No system property or default value specified for \" + propertyName + \" value:\" + value);\n        }\n      }\n      sb.append(fragment);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  /*\n  * This method borrowed from Ant's PropertyHelper.replaceProperties:\n  *   http://svn.apache.org/repos/asf/ant/core/trunk/src/main/org/apache/tools/ant/PropertyHelper.java\n  */\n  public static String substituteProperty(String value, Properties coreProperties) {\n    if (value == null || value.indexOf('$') == -1) {\n      return value;\n    }\n\n    List<String> fragments = new ArrayList<String>();\n    List<String> propertyRefs = new ArrayList<String>();\n    parsePropertyString(value, fragments, propertyRefs);\n\n    StringBuilder sb = new StringBuilder();\n    Iterator<String> i = fragments.iterator();\n    Iterator<String> j = propertyRefs.iterator();\n\n    while (i.hasNext()) {\n      String fragment = i.next();\n      if (fragment == null) {\n        String propertyName = j.next();\n        String defaultValue = null;\n        int colon_index = propertyName.indexOf(':');\n        if (colon_index > -1) {\n          defaultValue = propertyName.substring(colon_index + 1);\n          propertyName = propertyName.substring(0, colon_index);\n        }\n        if (coreProperties != null) {\n          fragment = coreProperties.getProperty(propertyName);\n        }\n        if (fragment == null) {\n          fragment = System.getProperty(propertyName, defaultValue);\n        }\n        if (fragment == null) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"No system property or default value specified for \" + propertyName + \" value:\" + value);\n        }\n      }\n      sb.append(fragment);\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23a18981fcc2648fd6e83e9e84e8fa023eb0484b","date":1602334330,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/PropertiesUtil#substituteProperty(String,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/PropertiesUtil#substituteProperty(String,Properties).mjava","sourceNew":"  /*\n  * This method borrowed from Ant's PropertyHelper.replaceProperties:\n  *   http://svn.apache.org/repos/asf/ant/core/trunk/src/main/org/apache/tools/ant/PropertyHelper.java\n  */\n  public static String substituteProperty(String value, Properties coreProperties) {\n    if (value == null || value.indexOf('$') == -1) {\n      return value;\n    }\n\n    List<String> fragments = new ArrayList<>();\n    List<String> propertyRefs = new ArrayList<>();\n    parsePropertyString(value, fragments, propertyRefs);\n\n    StringBuilder sb = new StringBuilder();\n    Iterator<String> i = fragments.iterator();\n    Iterator<String> j = propertyRefs.iterator();\n\n    while (i.hasNext()) {\n      String fragment = i.next();\n      if (fragment == null) {\n        String propertyName = j.next();\n        String defaultValue = null;\n        int colon_index = propertyName.indexOf(':');\n        if (colon_index > -1) {\n          defaultValue = propertyName.substring(colon_index + 1);\n          propertyName = propertyName.substring(0, colon_index);\n        }\n        if (coreProperties != null) {\n          fragment = coreProperties.getProperty(propertyName);\n        }\n        if (fragment == null) {\n          fragment = System.getProperty(propertyName, defaultValue);\n        }\n        if (fragment == null) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"No system property or default value specified for \" + propertyName + \" value:\" + value);\n        }\n      }\n      sb.append(fragment);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  /*\n  * This method borrowed from Ant's PropertyHelper.replaceProperties:\n  *   http://svn.apache.org/repos/asf/ant/core/trunk/src/main/org/apache/tools/ant/PropertyHelper.java\n  */\n  public static String substituteProperty(String value, Properties coreProperties) {\n    if (value == null || value.indexOf('$') == -1) {\n      return value;\n    }\n\n    List<String> fragments = new ArrayList<>();\n    List<String> propertyRefs = new ArrayList<>();\n    parsePropertyString(value, fragments, propertyRefs);\n\n    StringBuilder sb = new StringBuilder();\n    Iterator<String> i = fragments.iterator();\n    Iterator<String> j = propertyRefs.iterator();\n\n    while (i.hasNext()) {\n      String fragment = i.next();\n      if (fragment == null) {\n        String propertyName = j.next();\n        String defaultValue = null;\n        int colon_index = propertyName.indexOf(':');\n        if (colon_index > -1) {\n          defaultValue = propertyName.substring(colon_index + 1);\n          propertyName = propertyName.substring(0, colon_index);\n        }\n        if (coreProperties != null) {\n          fragment = coreProperties.getProperty(propertyName);\n        }\n        if (fragment == null) {\n          fragment = System.getProperty(propertyName, defaultValue);\n        }\n        if (fragment == null) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"No system property or default value specified for \" + propertyName + \" value:\" + value);\n        }\n      }\n      sb.append(fragment);\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"23a18981fcc2648fd6e83e9e84e8fa023eb0484b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a837c064b67fa63a9394136e31218b908cdcf783"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a837c064b67fa63a9394136e31218b908cdcf783":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23a18981fcc2648fd6e83e9e84e8fa023eb0484b"]},"commit2Childs":{"23a18981fcc2648fd6e83e9e84e8fa023eb0484b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["23a18981fcc2648fd6e83e9e84e8fa023eb0484b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a837c064b67fa63a9394136e31218b908cdcf783"],"a837c064b67fa63a9394136e31218b908cdcf783":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}