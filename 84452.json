{"path":"lucene/src/java/org/apache/lucene/util/automaton/BasicAutomata#atMost(String,int).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/BasicAutomata#atMost(String,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Constructs sub-automaton corresponding to decimal numbers of value at most\n   * x.substring(n) and length x.substring(n).length().\n   */\n  private static State atMost(String x, int n) {\n    State s = new State();\n    if (x.length() == n) s.setAccept(true);\n    else {\n      char c = x.charAt(n);\n      s.addTransition(new Transition(c, atMost(x, (char) n + 1)));\n      if (c > '0') s.addTransition(new Transition('0', (char) (c - 1),\n          anyOfRightLength(x, n + 1)));\n    }\n    return s;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/BasicAutomata#atMost(String,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/BasicAutomata#atMost(String,int).mjava","sourceNew":"  /**\n   * Constructs sub-automaton corresponding to decimal numbers of value at most\n   * x.substring(n) and length x.substring(n).length().\n   */\n  private static State atMost(String x, int n) {\n    State s = new State();\n    if (x.length() == n) s.setAccept(true);\n    else {\n      char c = x.charAt(n);\n      s.addTransition(new Transition(c, atMost(x, (char) n + 1)));\n      if (c > '0') s.addTransition(new Transition('0', (char) (c - 1),\n          anyOfRightLength(x, n + 1)));\n    }\n    return s;\n  }\n\n","sourceOld":"  /**\n   * Constructs sub-automaton corresponding to decimal numbers of value at most\n   * x.substring(n) and length x.substring(n).length().\n   */\n  private static State atMost(String x, int n) {\n    State s = new State();\n    if (x.length() == n) s.setAccept(true);\n    else {\n      char c = x.charAt(n);\n      s.addTransition(new Transition(c, atMost(x, (char) n + 1)));\n      if (c > '0') s.addTransition(new Transition('0', (char) (c - 1),\n          anyOfRightLength(x, n + 1)));\n    }\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}