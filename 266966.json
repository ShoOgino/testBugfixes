{"path":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#isCurrent().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#isCurrent().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StandardDirectoryReader#isCurrent().mjava","sourceNew":"  @Override\n  public boolean isCurrent() throws CorruptIndexException, IOException {\n    ensureOpen();\n    if (writer == null || writer.isClosed()) {\n      // we loaded SegmentInfos from the directory\n      return SegmentInfos.readCurrentVersion(directory) == segmentInfos.getVersion();\n    } else {\n      return writer.nrtIsCurrent(segmentInfos);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean isCurrent() throws CorruptIndexException, IOException {\n    ensureOpen();\n    if (writer == null || writer.isClosed()) {\n      // we loaded SegmentInfos from the directory\n      return SegmentInfos.readCurrentVersion(directory) == segmentInfos.getVersion();\n    } else {\n      return writer.nrtIsCurrent(segmentInfos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"438e995b4e32916f631722aab36254146830fefb","date":1328903827,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#isCurrent().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#isCurrent().mjava","sourceNew":"  @Override\n  public boolean isCurrent() throws CorruptIndexException, IOException {\n    ensureOpen();\n    if (writer == null || writer.isClosed()) {\n      // Fully read the segments file: this ensures that it's\n      // completely written so that if\n      // IndexWriter.prepareCommit has been called (but not\n      // yet commit), then the reader will still see itself as\n      // current:\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(directory);\n\n      // we loaded SegmentInfos from the directory\n      return sis.getVersion() == segmentInfos.getVersion();\n    } else {\n      return writer.nrtIsCurrent(segmentInfos);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean isCurrent() throws CorruptIndexException, IOException {\n    ensureOpen();\n    if (writer == null || writer.isClosed()) {\n      // we loaded SegmentInfos from the directory\n      return SegmentInfos.readCurrentVersion(directory) == segmentInfos.getVersion();\n    } else {\n      return writer.nrtIsCurrent(segmentInfos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#isCurrent().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#isCurrent().mjava","sourceNew":"  @Override\n  public boolean isCurrent() throws IOException {\n    ensureOpen();\n    if (writer == null || writer.isClosed()) {\n      // Fully read the segments file: this ensures that it's\n      // completely written so that if\n      // IndexWriter.prepareCommit has been called (but not\n      // yet commit), then the reader will still see itself as\n      // current:\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(directory);\n\n      // we loaded SegmentInfos from the directory\n      return sis.getVersion() == segmentInfos.getVersion();\n    } else {\n      return writer.nrtIsCurrent(segmentInfos);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean isCurrent() throws CorruptIndexException, IOException {\n    ensureOpen();\n    if (writer == null || writer.isClosed()) {\n      // Fully read the segments file: this ensures that it's\n      // completely written so that if\n      // IndexWriter.prepareCommit has been called (but not\n      // yet commit), then the reader will still see itself as\n      // current:\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(directory);\n\n      // we loaded SegmentInfos from the directory\n      return sis.getVersion() == segmentInfos.getVersion();\n    } else {\n      return writer.nrtIsCurrent(segmentInfos);\n    }\n  }\n\n","bugFix":["d7bbf8cffd2321f26cf9f6487f1571d325f20bc3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#isCurrent().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#isCurrent().mjava","sourceNew":"  @Override\n  public boolean isCurrent() throws IOException {\n    ensureOpen();\n    if (writer == null || writer.isClosed()) {\n      // Fully read the segments file: this ensures that it's\n      // completely written so that if\n      // IndexWriter.prepareCommit has been called (but not\n      // yet commit), then the reader will still see itself as\n      // current:\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(directory);\n\n      // we loaded SegmentInfos from the directory\n      return sis.getVersion() == segmentInfos.getVersion();\n    } else {\n      return writer.nrtIsCurrent(segmentInfos);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean isCurrent() throws CorruptIndexException, IOException {\n    ensureOpen();\n    if (writer == null || writer.isClosed()) {\n      // Fully read the segments file: this ensures that it's\n      // completely written so that if\n      // IndexWriter.prepareCommit has been called (but not\n      // yet commit), then the reader will still see itself as\n      // current:\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(directory);\n\n      // we loaded SegmentInfos from the directory\n      return sis.getVersion() == segmentInfos.getVersion();\n    } else {\n      return writer.nrtIsCurrent(segmentInfos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3384e6013a93e4d11b7d75388693f8d0388602bf","date":1413951663,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#isCurrent().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#isCurrent().mjava","sourceNew":"  @Override\n  public boolean isCurrent() throws IOException {\n    ensureOpen();\n    if (writer == null || writer.isClosed()) {\n      // Fully read the segments file: this ensures that it's\n      // completely written so that if\n      // IndexWriter.prepareCommit has been called (but not\n      // yet commit), then the reader will still see itself as\n      // current:\n      SegmentInfos sis = SegmentInfos.readLatestCommit(directory);\n\n      // we loaded SegmentInfos from the directory\n      return sis.getVersion() == segmentInfos.getVersion();\n    } else {\n      return writer.nrtIsCurrent(segmentInfos);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean isCurrent() throws IOException {\n    ensureOpen();\n    if (writer == null || writer.isClosed()) {\n      // Fully read the segments file: this ensures that it's\n      // completely written so that if\n      // IndexWriter.prepareCommit has been called (but not\n      // yet commit), then the reader will still see itself as\n      // current:\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(directory);\n\n      // we loaded SegmentInfos from the directory\n      return sis.getVersion() == segmentInfos.getVersion();\n    } else {\n      return writer.nrtIsCurrent(segmentInfos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#isCurrent().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#isCurrent().mjava","sourceNew":"  @Override\n  public boolean isCurrent() throws IOException {\n    ensureOpen();\n    if (writer == null || writer.isClosed()) {\n      // Fully read the segments file: this ensures that it's\n      // completely written so that if\n      // IndexWriter.prepareCommit has been called (but not\n      // yet commit), then the reader will still see itself as\n      // current:\n      SegmentInfos sis = SegmentInfos.readLatestCommit(directory);\n\n      // we loaded SegmentInfos from the directory\n      return sis.getVersion() == segmentInfos.getVersion();\n    } else {\n      return writer.nrtIsCurrent(segmentInfos);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean isCurrent() throws IOException {\n    ensureOpen();\n    if (writer == null || writer.isClosed()) {\n      // Fully read the segments file: this ensures that it's\n      // completely written so that if\n      // IndexWriter.prepareCommit has been called (but not\n      // yet commit), then the reader will still see itself as\n      // current:\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(directory);\n\n      // we loaded SegmentInfos from the directory\n      return sis.getVersion() == segmentInfos.getVersion();\n    } else {\n      return writer.nrtIsCurrent(segmentInfos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["438e995b4e32916f631722aab36254146830fefb","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3384e6013a93e4d11b7d75388693f8d0388602bf":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","3384e6013a93e4d11b7d75388693f8d0388602bf"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["438e995b4e32916f631722aab36254146830fefb"],"438e995b4e32916f631722aab36254146830fefb":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["438e995b4e32916f631722aab36254146830fefb"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3384e6013a93e4d11b7d75388693f8d0388602bf":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","3384e6013a93e4d11b7d75388693f8d0388602bf","db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"438e995b4e32916f631722aab36254146830fefb":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}