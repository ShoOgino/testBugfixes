{"path":"src/java/org/apache/lucene/document/Field#toString().mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#toString().mjava","pathOld":"/dev/null","sourceNew":"  /** Prints a Field for human consumption. */\n  public final String toString() {\n    if (isStored && isIndexed && !isTokenized)\n      return \"Keyword<\" + name + \":\" + stringValue + \">\";\n    else if (isStored && !isIndexed && !isTokenized)\n      return \"Unindexed<\" + name + \":\" + stringValue + \">\";\n    else if (isStored && isIndexed && isTokenized && stringValue!=null)\n      return \"Text<\" + name + \":\" + stringValue + \">\";\n    else if (!isStored && isIndexed && isTokenized && readerValue!=null)\n      return \"Text<\" + name + \":\" + readerValue + \">\";\n    else\n      return super.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770281b8a8459cafcdd2354b6a06078fea2d83c9","date":1077308096,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#toString().mjava","pathOld":"src/java/org/apache/lucene/document/Field#toString().mjava","sourceNew":"  /** Prints a Field for human consumption. */\n  public final String toString() {\n    if (isStored && isIndexed && !isTokenized)\n      return \"Keyword<\" + name + \":\" + stringValue + \">\";\n    else if (isStored && !isIndexed && !isTokenized)\n      return \"Unindexed<\" + name + \":\" + stringValue + \">\";\n    else if (isStored && isIndexed && isTokenized && stringValue!=null)\n      return \"Text<\" + name + \":\" + stringValue + \">\";\n    else if (!isStored && isIndexed && isTokenized && readerValue!=null)\n      return \"Text<\" + name + \":\" + readerValue + \">\";\n    else if (!isStored && isIndexed && isTokenized)\n    {\n      return \"UnStored<\" + name + \">\";\n    }\n    else\n    {\n      return super.toString();\n    }\n  }\n\n","sourceOld":"  /** Prints a Field for human consumption. */\n  public final String toString() {\n    if (isStored && isIndexed && !isTokenized)\n      return \"Keyword<\" + name + \":\" + stringValue + \">\";\n    else if (isStored && !isIndexed && !isTokenized)\n      return \"Unindexed<\" + name + \":\" + stringValue + \">\";\n    else if (isStored && isIndexed && isTokenized && stringValue!=null)\n      return \"Text<\" + name + \":\" + stringValue + \">\";\n    else if (!isStored && isIndexed && isTokenized && readerValue!=null)\n      return \"Text<\" + name + \":\" + readerValue + \">\";\n    else\n      return super.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"339c945d763b2c41e8d5d404f3e5f5d8dcf6b563","date":1092173697,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#toString().mjava","pathOld":"src/java/org/apache/lucene/document/Field#toString().mjava","sourceNew":"  /** Prints a Field for human consumption. */\n  public final String toString() {\n\tStringBuffer result = new StringBuffer();\n\tif (isStored)\n\t  result.append(\"stored\");\n\tif (isIndexed) {\n\t  if (result.length() > 0)\n\t\tresult.append(\",\");\n\t  result.append(\"indexed\");\n\t}\n\tif (isTokenized) {\n\t  if (result.length() > 0)\n\t\tresult.append(\",\");\n\t  result.append(\"tokenized\");\n\t}\n\tif (storeTermVector) {\n\t  if (result.length() > 0)\n\t\tresult.append(\",\");\n\t  result.append(\"termVector\");\n\t}\n\tresult.append('<');\n\tresult.append(name);\n\tresult.append(':');\n\tif (readerValue != null) {\n\t  result.append(readerValue.toString());\n\t} else {\n\t  result.append(stringValue);\n\t}\n\tresult.append('>');\n\treturn result.toString();\n  }\n\n","sourceOld":"  /** Prints a Field for human consumption. */\n  public final String toString() {\n    if (isStored && isIndexed && !isTokenized)\n      return \"Keyword<\" + name + \":\" + stringValue + \">\";\n    else if (isStored && !isIndexed && !isTokenized)\n      return \"Unindexed<\" + name + \":\" + stringValue + \">\";\n    else if (isStored && isIndexed && isTokenized && stringValue!=null)\n      return \"Text<\" + name + \":\" + stringValue + \">\";\n    else if (!isStored && isIndexed && isTokenized && readerValue!=null)\n      return \"Text<\" + name + \":\" + readerValue + \">\";\n    else if (!isStored && isIndexed && isTokenized)\n    {\n      return \"UnStored<\" + name + \">\";\n    }\n    else\n    {\n      return super.toString();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2bb36c95e17befb65f171f435f79734253347cd1","date":1094070884,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#toString().mjava","pathOld":"src/java/org/apache/lucene/document/Field#toString().mjava","sourceNew":"  /** Prints a Field for human consumption. */\n  public final String toString() {\n    StringBuffer result = new StringBuffer();\n    if (isStored)\n      result.append(\"stored\");\n    if (isIndexed) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"indexed\");\n    }\n    if (isTokenized) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"tokenized\");\n    }\n    if (storeTermVector) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"termVector\");\n    }\n    result.append('<');\n    result.append(name);\n    result.append(':');\n    if (readerValue != null) {\n      result.append(readerValue.toString());\n    } else {\n      result.append(stringValue);\n    }\n    result.append('>');\n    return result.toString();\n  }\n\n","sourceOld":"  /** Prints a Field for human consumption. */\n  public final String toString() {\n\tStringBuffer result = new StringBuffer();\n\tif (isStored)\n\t  result.append(\"stored\");\n\tif (isIndexed) {\n\t  if (result.length() > 0)\n\t\tresult.append(\",\");\n\t  result.append(\"indexed\");\n\t}\n\tif (isTokenized) {\n\t  if (result.length() > 0)\n\t\tresult.append(\",\");\n\t  result.append(\"tokenized\");\n\t}\n\tif (storeTermVector) {\n\t  if (result.length() > 0)\n\t\tresult.append(\",\");\n\t  result.append(\"termVector\");\n\t}\n\tresult.append('<');\n\tresult.append(name);\n\tresult.append(':');\n\tif (readerValue != null) {\n\t  result.append(readerValue.toString());\n\t} else {\n\t  result.append(stringValue);\n\t}\n\tresult.append('>');\n\treturn result.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0eacdfc94f700086189bb44f7f73ed9cfd85c75","date":1095252623,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#toString().mjava","pathOld":"src/java/org/apache/lucene/document/Field#toString().mjava","sourceNew":"  /** Prints a Field for human consumption. */\n  public final String toString() {\n    StringBuffer result = new StringBuffer();\n    if (isStored)\n      result.append(\"stored\");\n    if (isIndexed) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"indexed\");\n    }\n    if (isTokenized) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"tokenized\");\n    }\n    if (storeTermVector) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"termVector\");\n    }\n    if (isBinary) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"binary\");\n    }\n    \n    result.append('<');\n    result.append(name);\n    result.append(':');\n    if (readerValue != null) {\n      result.append(readerValue.toString());\n    } else {\n      result.append(stringValue);\n    }\n    result.append('>');\n    return result.toString();\n  }\n\n","sourceOld":"  /** Prints a Field for human consumption. */\n  public final String toString() {\n    StringBuffer result = new StringBuffer();\n    if (isStored)\n      result.append(\"stored\");\n    if (isIndexed) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"indexed\");\n    }\n    if (isTokenized) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"tokenized\");\n    }\n    if (storeTermVector) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"termVector\");\n    }\n    result.append('<');\n    result.append(name);\n    result.append(':');\n    if (readerValue != null) {\n      result.append(readerValue.toString());\n    } else {\n      result.append(stringValue);\n    }\n    result.append('>');\n    return result.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3d038c41e70424a134ef69a524f3cc0fb40d854","date":1096548028,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#toString().mjava","pathOld":"src/java/org/apache/lucene/document/Field#toString().mjava","sourceNew":"  /** Prints a Field for human consumption. */\n  public final String toString() {\n    StringBuffer result = new StringBuffer();\n    if (isStored)\n      result.append(\"stored\");\n    if (isIndexed) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"indexed\");\n    }\n    if (isTokenized) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"tokenized\");\n    }\n    if (storeTermVector) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"termVector\");\n    }\n    if (isBinary) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"binary\");\n    }\n    \n    if (isCompressed) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"compressed\");\n    }\n    \n    result.append('<');\n    result.append(name);\n    result.append(':');\n    \n    if (fieldsData != null) {\n      result.append(fieldsData);\n    }\n    \n    result.append('>');\n    return result.toString();\n  }\n\n","sourceOld":"  /** Prints a Field for human consumption. */\n  public final String toString() {\n    StringBuffer result = new StringBuffer();\n    if (isStored)\n      result.append(\"stored\");\n    if (isIndexed) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"indexed\");\n    }\n    if (isTokenized) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"tokenized\");\n    }\n    if (storeTermVector) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"termVector\");\n    }\n    if (isBinary) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"binary\");\n    }\n    \n    result.append('<');\n    result.append(name);\n    result.append(':');\n    if (readerValue != null) {\n      result.append(readerValue.toString());\n    } else {\n      result.append(stringValue);\n    }\n    result.append('>');\n    return result.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0","date":1096997448,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#toString().mjava","pathOld":"src/java/org/apache/lucene/document/Field#toString().mjava","sourceNew":"  /** Prints a Field for human consumption. */\n  public final String toString() {\n    StringBuffer result = new StringBuffer();\n    if (isStored)\n      result.append(\"stored\");\n    if (isIndexed) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"indexed\");\n    }\n    if (isTokenized) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"tokenized\");\n    }\n    if (storeTermVector) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"termVector\");\n    }\n    if (storeOffsetWithTermVector) { \n      if (result.length() > 0) \n        result.append(\",\"); \n      result.append(\"termVectorOffsets\"); \n    } \n    if (storePositionWithTermVector) { \n      if (result.length() > 0) \n        result.append(\",\"); \n      result.append(\"termVectorPosition\"); \n    } \n    if (isBinary) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"binary\");\n    }\n    \n    if (isCompressed) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"compressed\");\n    }\n    \n    result.append('<');\n    result.append(name);\n    result.append(':');\n    \n    if (fieldsData != null) {\n      result.append(fieldsData);\n    }\n    \n    result.append('>');\n    return result.toString();\n  }\n\n","sourceOld":"  /** Prints a Field for human consumption. */\n  public final String toString() {\n    StringBuffer result = new StringBuffer();\n    if (isStored)\n      result.append(\"stored\");\n    if (isIndexed) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"indexed\");\n    }\n    if (isTokenized) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"tokenized\");\n    }\n    if (storeTermVector) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"termVector\");\n    }\n    if (isBinary) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"binary\");\n    }\n    \n    if (isCompressed) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"compressed\");\n    }\n    \n    result.append('<');\n    result.append(name);\n    result.append(':');\n    \n    if (fieldsData != null) {\n      result.append(fieldsData);\n    }\n    \n    result.append('>');\n    return result.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f66d10946f3158b4a78703ddf88ba74ff18d2f0f","date":1097093005,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#toString().mjava","pathOld":"src/java/org/apache/lucene/document/Field#toString().mjava","sourceNew":"  /** Prints a Field for human consumption. */\n  public final String toString() {\n    StringBuffer result = new StringBuffer();\n    if (isStored) {\n      result.append(\"stored\");\n      if (isCompressed)\n        result.append(\"/compressed\");\n      else\n        result.append(\"/uncompressed\");\n    }\n    if (isIndexed) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"indexed\");\n    }\n    if (isTokenized) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"tokenized\");\n    }\n    if (storeTermVector) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"termVector\");\n    }\n    if (storeOffsetWithTermVector) { \n      if (result.length() > 0) \n        result.append(\",\"); \n      result.append(\"termVectorOffsets\"); \n    } \n    if (storePositionWithTermVector) { \n      if (result.length() > 0) \n        result.append(\",\"); \n      result.append(\"termVectorPosition\"); \n    } \n    if (isBinary) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"binary\");\n    }\n    \n    result.append('<');\n    result.append(name);\n    result.append(':');\n    \n    if (fieldsData != null) {\n      result.append(fieldsData);\n    }\n    \n    result.append('>');\n    return result.toString();\n  }\n\n","sourceOld":"  /** Prints a Field for human consumption. */\n  public final String toString() {\n    StringBuffer result = new StringBuffer();\n    if (isStored)\n      result.append(\"stored\");\n    if (isIndexed) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"indexed\");\n    }\n    if (isTokenized) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"tokenized\");\n    }\n    if (storeTermVector) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"termVector\");\n    }\n    if (storeOffsetWithTermVector) { \n      if (result.length() > 0) \n        result.append(\",\"); \n      result.append(\"termVectorOffsets\"); \n    } \n    if (storePositionWithTermVector) { \n      if (result.length() > 0) \n        result.append(\",\"); \n      result.append(\"termVectorPosition\"); \n    } \n    if (isBinary) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"binary\");\n    }\n    \n    if (isCompressed) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"compressed\");\n    }\n    \n    result.append('<');\n    result.append(name);\n    result.append(':');\n    \n    if (fieldsData != null) {\n      result.append(fieldsData);\n    }\n    \n    result.append('>');\n    return result.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"950f3c7592cb559e2534e5089c78833250e156a3","date":1130557968,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#toString().mjava","pathOld":"src/java/org/apache/lucene/document/Field#toString().mjava","sourceNew":"  /** Prints a Field for human consumption. */\n  public final String toString() {\n    StringBuffer result = new StringBuffer();\n    if (isStored) {\n      result.append(\"stored\");\n      if (isCompressed)\n        result.append(\"/compressed\");\n      else\n        result.append(\"/uncompressed\");\n    }\n    if (isIndexed) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"indexed\");\n    }\n    if (isTokenized) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"tokenized\");\n    }\n    if (storeTermVector) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"termVector\");\n    }\n    if (storeOffsetWithTermVector) { \n      if (result.length() > 0) \n        result.append(\",\"); \n      result.append(\"termVectorOffsets\"); \n    } \n    if (storePositionWithTermVector) { \n      if (result.length() > 0) \n        result.append(\",\"); \n      result.append(\"termVectorPosition\"); \n    } \n    if (isBinary) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"binary\");\n    }\n    if (omitNorms) {\n      result.append(\",omitNorms\");\n    }\n    result.append('<');\n    result.append(name);\n    result.append(':');\n    \n    if (fieldsData != null) {\n      result.append(fieldsData);\n    }\n    \n    result.append('>');\n    return result.toString();\n  }\n\n","sourceOld":"  /** Prints a Field for human consumption. */\n  public final String toString() {\n    StringBuffer result = new StringBuffer();\n    if (isStored) {\n      result.append(\"stored\");\n      if (isCompressed)\n        result.append(\"/compressed\");\n      else\n        result.append(\"/uncompressed\");\n    }\n    if (isIndexed) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"indexed\");\n    }\n    if (isTokenized) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"tokenized\");\n    }\n    if (storeTermVector) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"termVector\");\n    }\n    if (storeOffsetWithTermVector) { \n      if (result.length() > 0) \n        result.append(\",\"); \n      result.append(\"termVectorOffsets\"); \n    } \n    if (storePositionWithTermVector) { \n      if (result.length() > 0) \n        result.append(\",\"); \n      result.append(\"termVectorPosition\"); \n    } \n    if (isBinary) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"binary\");\n    }\n    \n    result.append('<');\n    result.append(name);\n    result.append(':');\n    \n    if (fieldsData != null) {\n      result.append(fieldsData);\n    }\n    \n    result.append('>');\n    return result.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12d40284fd9481f79444bc63bc5d13847caddd3d","date":1149902602,"type":5,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/AbstractField#toString().mjava","pathOld":"src/java/org/apache/lucene/document/Field#toString().mjava","sourceNew":"  /** Prints a Field for human consumption. */\r\n  public final String toString() {\r\n    StringBuffer result = new StringBuffer();\r\n    if (isStored) {\r\n      result.append(\"stored\");\r\n      if (isCompressed)\r\n        result.append(\"/compressed\");\r\n      else\r\n        result.append(\"/uncompressed\");\r\n    }\r\n    if (isIndexed) {\r\n      if (result.length() > 0)\r\n        result.append(\",\");\r\n      result.append(\"indexed\");\r\n    }\r\n    if (isTokenized) {\r\n      if (result.length() > 0)\r\n        result.append(\",\");\r\n      result.append(\"tokenized\");\r\n    }\r\n    if (storeTermVector) {\r\n      if (result.length() > 0)\r\n        result.append(\",\");\r\n      result.append(\"termVector\");\r\n    }\r\n    if (storeOffsetWithTermVector) {\r\n      if (result.length() > 0)\r\n        result.append(\",\");\r\n      result.append(\"termVectorOffsets\");\r\n    }\r\n    if (storePositionWithTermVector) {\r\n      if (result.length() > 0)\r\n        result.append(\",\");\r\n      result.append(\"termVectorPosition\");\r\n    }\r\n    if (isBinary) {\r\n      if (result.length() > 0)\r\n        result.append(\",\");\r\n      result.append(\"binary\");\r\n    }\r\n    if (omitNorms) {\r\n      result.append(\",omitNorms\");\r\n    }\r\n    if (lazy){\r\n      result.append(\",lazy\");\r\n    }\r\n    result.append('<');\r\n    result.append(name);\r\n    result.append(':');\r\n\r\n    if (fieldsData != null && lazy == false) {\r\n      result.append(fieldsData);\r\n    }\r\n\r\n    result.append('>');\r\n    return result.toString();\r\n  }\r\n\n","sourceOld":"  /** Prints a Field for human consumption. */\n  public final String toString() {\n    StringBuffer result = new StringBuffer();\n    if (isStored) {\n      result.append(\"stored\");\n      if (isCompressed)\n        result.append(\"/compressed\");\n      else\n        result.append(\"/uncompressed\");\n    }\n    if (isIndexed) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"indexed\");\n    }\n    if (isTokenized) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"tokenized\");\n    }\n    if (storeTermVector) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"termVector\");\n    }\n    if (storeOffsetWithTermVector) { \n      if (result.length() > 0) \n        result.append(\",\"); \n      result.append(\"termVectorOffsets\"); \n    } \n    if (storePositionWithTermVector) { \n      if (result.length() > 0) \n        result.append(\",\"); \n      result.append(\"termVectorPosition\"); \n    } \n    if (isBinary) {\n      if (result.length() > 0)\n        result.append(\",\");\n      result.append(\"binary\");\n    }\n    if (omitNorms) {\n      result.append(\",omitNorms\");\n    }\n    result.append('<');\n    result.append(name);\n    result.append(':');\n    \n    if (fieldsData != null) {\n      result.append(fieldsData);\n    }\n    \n    result.append('>');\n    return result.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"950f3c7592cb559e2534e5089c78833250e156a3":["f66d10946f3158b4a78703ddf88ba74ff18d2f0f"],"f66d10946f3158b4a78703ddf88ba74ff18d2f0f":["6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e0eacdfc94f700086189bb44f7f73ed9cfd85c75":["2bb36c95e17befb65f171f435f79734253347cd1"],"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0":["b3d038c41e70424a134ef69a524f3cc0fb40d854"],"339c945d763b2c41e8d5d404f3e5f5d8dcf6b563":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"12d40284fd9481f79444bc63bc5d13847caddd3d":["950f3c7592cb559e2534e5089c78833250e156a3"],"b3d038c41e70424a134ef69a524f3cc0fb40d854":["e0eacdfc94f700086189bb44f7f73ed9cfd85c75"],"2bb36c95e17befb65f171f435f79734253347cd1":["339c945d763b2c41e8d5d404f3e5f5d8dcf6b563"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12d40284fd9481f79444bc63bc5d13847caddd3d"]},"commit2Childs":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["339c945d763b2c41e8d5d404f3e5f5d8dcf6b563"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"950f3c7592cb559e2534e5089c78833250e156a3":["12d40284fd9481f79444bc63bc5d13847caddd3d"],"f66d10946f3158b4a78703ddf88ba74ff18d2f0f":["950f3c7592cb559e2534e5089c78833250e156a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"e0eacdfc94f700086189bb44f7f73ed9cfd85c75":["b3d038c41e70424a134ef69a524f3cc0fb40d854"],"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0":["f66d10946f3158b4a78703ddf88ba74ff18d2f0f"],"339c945d763b2c41e8d5d404f3e5f5d8dcf6b563":["2bb36c95e17befb65f171f435f79734253347cd1"],"12d40284fd9481f79444bc63bc5d13847caddd3d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2bb36c95e17befb65f171f435f79734253347cd1":["e0eacdfc94f700086189bb44f7f73ed9cfd85c75"],"b3d038c41e70424a134ef69a524f3cc0fb40d854":["6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}