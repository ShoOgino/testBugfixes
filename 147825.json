{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/snowball/SnowballAnalyzer#tokenStream(String,Reader).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/snowball/SnowballAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/snowball/SnowballAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n      StandardFilter}, a {@link LowerCaseFilter}, a {@link StopFilter},\n      and a {@link SnowballFilter} */\n  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(matchVersion, reader);\n    result = new StandardFilter(result);\n    // Use a special lowercase filter for turkish, the stemmer expects it.\n    if (matchVersion.onOrAfter(Version.LUCENE_31) && name.equals(\"Turkish\"))\n      result = new TurkishLowerCaseFilter(result);\n    else\n      result = new LowerCaseFilter(matchVersion, result);\n    if (stopSet != null)\n      result = new StopFilter(matchVersion,\n                              result, stopSet);\n    result = new SnowballFilter(result, name);\n    return result;\n  }\n\n","sourceOld":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n      StandardFilter}, a {@link LowerCaseFilter}, a {@link StopFilter},\n      and a {@link SnowballFilter} */\n  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(matchVersion, reader);\n    result = new StandardFilter(result);\n    // Use a special lowercase filter for turkish, the stemmer expects it.\n    if (matchVersion.onOrAfter(Version.LUCENE_31) && name.equals(\"Turkish\"))\n      result = new TurkishLowerCaseFilter(result);\n    else\n      result = new LowerCaseFilter(matchVersion, result);\n    if (stopSet != null)\n      result = new StopFilter(matchVersion,\n                              result, stopSet);\n    result = new SnowballFilter(result, name);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballAnalyzer#tokenStream(String,Reader).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/snowball/SnowballAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n      StandardFilter}, a {@link LowerCaseFilter}, a {@link StopFilter},\n      and a {@link SnowballFilter} */\n  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(matchVersion, reader);\n    result = new StandardFilter(result);\n    // Use a special lowercase filter for turkish, the stemmer expects it.\n    if (matchVersion.onOrAfter(Version.LUCENE_31) && name.equals(\"Turkish\"))\n      result = new TurkishLowerCaseFilter(result);\n    else\n      result = new LowerCaseFilter(matchVersion, result);\n    if (stopSet != null)\n      result = new StopFilter(matchVersion,\n                              result, stopSet);\n    result = new SnowballFilter(result, name);\n    return result;\n  }\n\n","sourceOld":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n      StandardFilter}, a {@link LowerCaseFilter}, a {@link StopFilter},\n      and a {@link SnowballFilter} */\n  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(matchVersion, reader);\n    result = new StandardFilter(result);\n    // Use a special lowercase filter for turkish, the stemmer expects it.\n    if (matchVersion.onOrAfter(Version.LUCENE_31) && name.equals(\"Turkish\"))\n      result = new TurkishLowerCaseFilter(result);\n    else\n      result = new LowerCaseFilter(matchVersion, result);\n    if (stopSet != null)\n      result = new StopFilter(matchVersion,\n                              result, stopSet);\n    result = new SnowballFilter(result, name);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}