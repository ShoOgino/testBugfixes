{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter).mjava","commits":[{"id":"db6dfac30d1553e9356900c2b76b768139483a62","date":1230619368,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter,Map[String,String]).mjava","sourceNew":"  void runCmd(RequestParams reqParams, SolrWriter sw) {\n    String command = reqParams.command;\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock())\n      return;\n    try {\n      Date lastModified = sw.loadIndexStartTime();\n      setLastIndexTime(lastModified);\n      if (command.equals(\"full-import\")) {\n        doFullImport(sw, reqParams);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","sourceOld":"  void runCmd(RequestParams reqParams, SolrWriter sw, Map<String, String> variables) {\n    String command = reqParams.command;\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock())\n      return;\n    try {\n      Date lastModified = sw.loadIndexStartTime();\n      setLastIndexTime(lastModified);\n      if (command.equals(\"full-import\")) {\n        doFullImport(sw, reqParams, variables);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams, variables);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"935f19cbd541d598f7c68d6afbabff0abf2554dd","date":1242886621,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter).mjava","sourceNew":"  void runCmd(RequestParams reqParams, SolrWriter sw) {\n    String command = reqParams.command;\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock()){\n      LOG.warn(\"Import command failed . another import is running\");      \n      return;\n    }\n    try {\n      Date lastModified = sw.loadIndexStartTime();\n      setLastIndexTime(lastModified);\n      if (command.equals(\"full-import\")) {\n        doFullImport(sw, reqParams);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","sourceOld":"  void runCmd(RequestParams reqParams, SolrWriter sw) {\n    String command = reqParams.command;\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock())\n      return;\n    try {\n      Date lastModified = sw.loadIndexStartTime();\n      setLastIndexTime(lastModified);\n      if (command.equals(\"full-import\")) {\n        doFullImport(sw, reqParams);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6fea6ce6c239e69f659697effc59e8f74134464","date":1253983655,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter).mjava","sourceNew":"  void runCmd(RequestParams reqParams, SolrWriter sw) {\n    String command = reqParams.command;\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock()){\n      LOG.warn(\"Import command failed . another import is running\");      \n      return;\n    }\n    try {\n      Date lastModified = sw.loadIndexStartTime();\n      setLastIndexTime(lastModified);\n      if (FULL_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {\n        doFullImport(sw, reqParams);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","sourceOld":"  void runCmd(RequestParams reqParams, SolrWriter sw) {\n    String command = reqParams.command;\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock()){\n      LOG.warn(\"Import command failed . another import is running\");      \n      return;\n    }\n    try {\n      Date lastModified = sw.loadIndexStartTime();\n      setLastIndexTime(lastModified);\n      if (command.equals(\"full-import\")) {\n        doFullImport(sw, reqParams);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee2d03087a1d5477a3ee9ce02e08967f4a979766","date":1254306923,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter).mjava","sourceNew":"  void runCmd(RequestParams reqParams, SolrWriter sw) {\n    String command = reqParams.command;\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock()){\n      LOG.warn(\"Import command failed . another import is running\");      \n      return;\n    }\n    try {\n      if (FULL_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {\n        doFullImport(sw, reqParams);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","sourceOld":"  void runCmd(RequestParams reqParams, SolrWriter sw) {\n    String command = reqParams.command;\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock()){\n      LOG.warn(\"Import command failed . another import is running\");      \n      return;\n    }\n    try {\n      Date lastModified = sw.loadIndexStartTime();\n      setLastIndexTime(lastModified);\n      if (FULL_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {\n        doFullImport(sw, reqParams);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter).mjava","sourceNew":"  void runCmd(RequestParams reqParams, SolrWriter sw) {\n    String command = reqParams.command;\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock()){\n      LOG.warn(\"Import command failed . another import is running\");      \n      return;\n    }\n    try {\n      if (FULL_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {\n        doFullImport(sw, reqParams);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","sourceOld":"  void runCmd(RequestParams reqParams, SolrWriter sw) {\n    String command = reqParams.command;\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock()){\n      LOG.warn(\"Import command failed . another import is running\");      \n      return;\n    }\n    try {\n      if (FULL_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {\n        doFullImport(sw, reqParams);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee2d03087a1d5477a3ee9ce02e08967f4a979766":["d6fea6ce6c239e69f659697effc59e8f74134464"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"d6fea6ce6c239e69f659697effc59e8f74134464":["935f19cbd541d598f7c68d6afbabff0abf2554dd"],"ad94625fb8d088209f46650c8097196fec67f00c":["ee2d03087a1d5477a3ee9ce02e08967f4a979766"],"935f19cbd541d598f7c68d6afbabff0abf2554dd":["db6dfac30d1553e9356900c2b76b768139483a62"],"db6dfac30d1553e9356900c2b76b768139483a62":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ee2d03087a1d5477a3ee9ce02e08967f4a979766":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["db6dfac30d1553e9356900c2b76b768139483a62"],"d6fea6ce6c239e69f659697effc59e8f74134464":["ee2d03087a1d5477a3ee9ce02e08967f4a979766"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"935f19cbd541d598f7c68d6afbabff0abf2554dd":["d6fea6ce6c239e69f659697effc59e8f74134464"],"db6dfac30d1553e9356900c2b76b768139483a62":["935f19cbd541d598f7c68d6afbabff0abf2554dd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}