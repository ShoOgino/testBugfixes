{"path":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#setNormValueType(DocValuesType).mjava","commits":[{"id":"0837ab0472feecb3a54260729d845f839e1cbd72","date":1358283639,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#setNormValueType(DocValuesType).mjava","pathOld":"/dev/null","sourceNew":"  void setNormValueType(DocValuesType type) {\n    normType = type;\n    assert checkConsistency();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7649a7f5af3862074b213bfad955681cf4a14f1e","date":1358289993,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#setNormValueType(DocValuesType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#setNormValueType(DocValuesType).mjava","sourceNew":"  // nocommit type is always number?  should we remove this?\n  void setNormValueType(DocValuesType type) {\n    normType = type;\n    assert checkConsistency();\n  }\n\n","sourceOld":"  void setNormValueType(DocValuesType type) {\n    normType = type;\n    assert checkConsistency();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"552b8f2e274f44903adb7d9a00ef296674883ad2","date":1359422293,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#setNormValueType(DocValuesType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#setNormValueType(DocValuesType).mjava","sourceNew":"  // nocommit type is always number?  should we remove this?\n  void setNormValueType(DocValuesType type) {\n    if (normType != null && normType != type) {\n      throw new IllegalArgumentException(\"cannot change Norm type from \" + normType + \" to \" + type + \" for field \\\"\" + name + \"\\\"\");\n    }\n    normType = type;\n    assert checkConsistency();\n  }\n\n","sourceOld":"  // nocommit type is always number?  should we remove this?\n  void setNormValueType(DocValuesType type) {\n    normType = type;\n    assert checkConsistency();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d51b9496691c7108d6d92f2c239c5dbf55f08a5f","date":1360017711,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#setNormValueType(DocValuesType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#setNormValueType(DocValuesType).mjava","sourceNew":"  void setNormValueType(DocValuesType type) {\n    if (normType != null && normType != type) {\n      throw new IllegalArgumentException(\"cannot change Norm type from \" + normType + \" to \" + type + \" for field \\\"\" + name + \"\\\"\");\n    }\n    normType = type;\n    assert checkConsistency();\n  }\n\n","sourceOld":"  // nocommit type is always number?  should we remove this?\n  void setNormValueType(DocValuesType type) {\n    if (normType != null && normType != type) {\n      throw new IllegalArgumentException(\"cannot change Norm type from \" + normType + \" to \" + type + \" for field \\\"\" + name + \"\\\"\");\n    }\n    normType = type;\n    assert checkConsistency();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#setNormValueType(DocValuesType).mjava","pathOld":"/dev/null","sourceNew":"  void setNormValueType(DocValuesType type) {\n    if (normType != null && normType != type) {\n      throw new IllegalArgumentException(\"cannot change Norm type from \" + normType + \" to \" + type + \" for field \\\"\" + name + \"\\\"\");\n    }\n    normType = type;\n    assert checkConsistency();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05da2d758a6089e737cdfc230e57a51b472b94b6","date":1413392310,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#setNormValueType(DocValuesType).mjava","sourceNew":null,"sourceOld":"  void setNormValueType(DocValuesType type) {\n    if (normType != null && normType != type) {\n      throw new IllegalArgumentException(\"cannot change Norm type from \" + normType + \" to \" + type + \" for field \\\"\" + name + \"\\\"\");\n    }\n    normType = type;\n    assert checkConsistency();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","date":1413458798,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#setNormValueType(DocValuesType).mjava","sourceNew":null,"sourceOld":"  void setNormValueType(DocValuesType type) {\n    if (normType != null && normType != type) {\n      throw new IllegalArgumentException(\"cannot change Norm type from \" + normType + \" to \" + type + \" for field \\\"\" + name + \"\\\"\");\n    }\n    normType = type;\n    assert checkConsistency();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"05da2d758a6089e737cdfc230e57a51b472b94b6":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"552b8f2e274f44903adb7d9a00ef296674883ad2":["7649a7f5af3862074b213bfad955681cf4a14f1e"],"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84":["d4d69c535930b5cce125cff868d40f6373dc27d4","05da2d758a6089e737cdfc230e57a51b472b94b6"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d51b9496691c7108d6d92f2c239c5dbf55f08a5f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0837ab0472feecb3a54260729d845f839e1cbd72":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d51b9496691c7108d6d92f2c239c5dbf55f08a5f":["552b8f2e274f44903adb7d9a00ef296674883ad2"],"7649a7f5af3862074b213bfad955681cf4a14f1e":["0837ab0472feecb3a54260729d845f839e1cbd72"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05da2d758a6089e737cdfc230e57a51b472b94b6"]},"commit2Childs":{"05da2d758a6089e737cdfc230e57a51b472b94b6":["c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"552b8f2e274f44903adb7d9a00ef296674883ad2":["d51b9496691c7108d6d92f2c239c5dbf55f08a5f"],"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84":[],"d4d69c535930b5cce125cff868d40f6373dc27d4":["05da2d758a6089e737cdfc230e57a51b472b94b6","c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","0837ab0472feecb3a54260729d845f839e1cbd72"],"0837ab0472feecb3a54260729d845f839e1cbd72":["7649a7f5af3862074b213bfad955681cf4a14f1e"],"7649a7f5af3862074b213bfad955681cf4a14f1e":["552b8f2e274f44903adb7d9a00ef296674883ad2"],"d51b9496691c7108d6d92f2c239c5dbf55f08a5f":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}