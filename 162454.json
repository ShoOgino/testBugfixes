{"path":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    fieldsWriter.abort();\n    consumer.abort();\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    fieldsWriter.abort();\n    consumer.abort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c18273ea5b3974d2f30117f46f1ae416c28f727","date":1279708040,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    for(int i=0;i<fieldHash.length;i++) {\n      DocFieldProcessorPerField field = fieldHash[i];\n      while(field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        field.abort();\n        field = next;\n      }\n    }\n\n    fieldsWriter.abort();\n    consumer.abort();\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    fieldsWriter.abort();\n    consumer.abort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"833a7987bc1c94455fde83e3311f72bddedcfb93","date":1279951470,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    for(int i=0;i<fieldHash.length;i++) {\n      DocFieldProcessorPerField field = fieldHash[i];\n      while(field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        field.abort();\n        field = next;\n      }\n    }\n\n    try {\n      fieldsWriter.abort();\n    } finally {\n      consumer.abort();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    for(int i=0;i<fieldHash.length;i++) {\n      DocFieldProcessorPerField field = fieldHash[i];\n      while(field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        field.abort();\n        field = next;\n      }\n    }\n\n    fieldsWriter.abort();\n    consumer.abort();\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    for(int i=0;i<fieldHash.length;i++) {\n      DocFieldProcessorPerField field = fieldHash[i];\n      while(field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        field.abort();\n        field = next;\n      }\n    }\n\n    try {\n      fieldsWriter.abort();\n    } finally {\n      consumer.abort();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    fieldsWriter.abort();\n    consumer.abort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    for(int i=0;i<fieldHash.length;i++) {\n      DocFieldProcessorPerField field = fieldHash[i];\n      while(field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        field.abort();\n        field = next;\n      }\n    }\n    \n    for(PerDocConsumer consumer : perDocConsumers.values()) {\n      try {\n        consumer.close();  // TODO add abort to PerDocConsumer!\n      } catch (IOException e) {\n        // nocommit handle exce\n      }\n    }\n\n    try {\n      fieldsWriter.abort();\n    } finally {\n      consumer.abort();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    fieldsWriter.abort();\n    consumer.abort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dccd3bc12ba4203fd3b1cb4ff3285fdf5894f08d","date":1305547232,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    for(int i=0;i<fieldHash.length;i++) {\n      DocFieldProcessorPerField field = fieldHash[i];\n      while(field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        field.abort();\n        field = next;\n      }\n    }\n    \n    for(PerDocConsumer consumer : perDocConsumers.values()) {\n      try {\n        consumer.close();  // TODO add abort to PerDocConsumer!\n      } catch (IOException e) {\n        // ignore on abort!\n      }\n    }\n\n    try {\n      fieldsWriter.abort();\n    } finally {\n      consumer.abort();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    for(int i=0;i<fieldHash.length;i++) {\n      DocFieldProcessorPerField field = fieldHash[i];\n      while(field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        field.abort();\n        field = next;\n      }\n    }\n    \n    for(PerDocConsumer consumer : perDocConsumers.values()) {\n      try {\n        consumer.close();  // TODO add abort to PerDocConsumer!\n      } catch (IOException e) {\n        // nocommit handle exce\n      }\n    }\n\n    try {\n      fieldsWriter.abort();\n    } finally {\n      consumer.abort();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    for(int i=0;i<fieldHash.length;i++) {\n      DocFieldProcessorPerField field = fieldHash[i];\n      while(field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        field.abort();\n        field = next;\n      }\n    }\n\n    try {\n      fieldsWriter.abort();\n    } finally {\n      consumer.abort();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    fieldsWriter.abort();\n    consumer.abort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efb7a19703a037c29e30440260d393500febc1f4","date":1306648116,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    for(int i=0;i<fieldHash.length;i++) {\n      DocFieldProcessorPerField field = fieldHash[i];\n      while(field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        field.abort();\n        field = next;\n      }\n    }\n\n    try {\n      fieldsWriter.abort();\n    } finally {\n      consumer.abort();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    for(int i=0;i<fieldHash.length;i++) {\n      DocFieldProcessorPerField field = fieldHash[i];\n      while(field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        field.abort();\n        field = next;\n      }\n    }\n\n    try {\n      fieldsWriter.abort();\n    } finally {\n      consumer.abort();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    \n    for(PerDocConsumer consumer : perDocConsumers.values()) {\n      try {\n        consumer.close();  // TODO add abort to PerDocConsumer!\n      } catch (IOException e) {\n        // ignore on abort!\n      }\n    }\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    for(int i=0;i<fieldHash.length;i++) {\n      DocFieldProcessorPerField field = fieldHash[i];\n      while(field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        field.abort();\n        field = next;\n      }\n    }\n    \n    for(PerDocConsumer consumer : perDocConsumers.values()) {\n      try {\n        consumer.close();  // TODO add abort to PerDocConsumer!\n      } catch (IOException e) {\n        // ignore on abort!\n      }\n    }\n\n    try {\n      fieldsWriter.abort();\n    } finally {\n      consumer.abort();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    \n    for(PerDocConsumer consumer : perDocConsumers.values()) {\n      try {\n        consumer.close();  // TODO add abort to PerDocConsumer!\n      } catch (IOException e) {\n        // ignore on abort!\n      }\n    }\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    \n    for(PerDocConsumer consumer : perDocConsumers.values()) {\n      try {\n        consumer.close();  // TODO add abort to PerDocConsumer!\n      } catch (IOException e) {\n        // ignore on abort!\n      }\n    }\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac20cb1e3ba0b41998aab1b3e67bc87d07a5ed4f","date":1310126972,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    try {\n      IOUtils.closeSafely(true, perDocConsumers.values());\n      // TODO add abort to PerDocConsumer!\n    } catch (IOException e) {\n      // ignore on abort!\n    }\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    \n    for(PerDocConsumer consumer : perDocConsumers.values()) {\n      try {\n        consumer.close();  // TODO add abort to PerDocConsumer!\n      } catch (IOException e) {\n        // ignore on abort!\n      }\n    }\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    try {\n      IOUtils.closeSafely(true, perDocConsumers.values());\n      // TODO add abort to PerDocConsumer!\n    } catch (IOException e) {\n      // ignore on abort!\n    }\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    \n    for(PerDocConsumer consumer : perDocConsumers.values()) {\n      try {\n        consumer.close();  // TODO add abort to PerDocConsumer!\n      } catch (IOException e) {\n        // ignore on abort!\n      }\n    }\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24230fe54121f9be9d85f2c2067536296785e421","date":1314462346,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    try {\n      IOUtils.closeWhileHandlingException(perDocConsumers.values());\n      // TODO add abort to PerDocConsumer!\n    } catch (IOException e) {\n      // ignore on abort!\n    }\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    try {\n      IOUtils.closeSafely(true, perDocConsumers.values());\n      // TODO add abort to PerDocConsumer!\n    } catch (IOException e) {\n      // ignore on abort!\n    }\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9c5b735f3b39a5cdb52150bb4ff36a95e8c9407f","date":1321569152,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    IOUtils.closeWhileHandlingException(perDocConsumers.values());\n    // TODO add abort to PerDocConsumer!\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    try {\n      IOUtils.closeWhileHandlingException(perDocConsumers.values());\n      // TODO add abort to PerDocConsumer!\n    } catch (IOException e) {\n      // ignore on abort!\n    }\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":["fa0f44f887719e97183771e977cfc4bfb485b766","d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f6e3376a314fcc2b31bc46d399c2ff23552b78d6","date":1325780477,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    IOUtils.closeWhileHandlingException(perDocConsumers.values());\n    // TODO add abort to PerDocConsumer!\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      PerDocConsumer perDocConsumer = perDocConsumers.get(0);\n      if (perDocConsumer != null) {\n        perDocConsumer.abort();  \n      }\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    IOUtils.closeWhileHandlingException(perDocConsumers.values());\n    // TODO add abort to PerDocConsumer!\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":["fa0f44f887719e97183771e977cfc4bfb485b766","d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fa0f44f887719e97183771e977cfc4bfb485b766","date":1326668713,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    IOUtils.closeWhileHandlingException(perDocConsumer);\n    // TODO add abort to PerDocConsumer!\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      if (perDocConsumer != null) {\n        perDocConsumer.abort();  \n      }\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    IOUtils.closeWhileHandlingException(perDocConsumers.values());\n    // TODO add abort to PerDocConsumer!\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      PerDocConsumer perDocConsumer = perDocConsumers.get(0);\n      if (perDocConsumer != null) {\n        perDocConsumer.abort();  \n      }\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":["9c5b735f3b39a5cdb52150bb4ff36a95e8c9407f","f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    IOUtils.closeWhileHandlingException(perDocConsumer);\n    // TODO add abort to PerDocConsumer!\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      if (perDocConsumer != null) {\n        perDocConsumer.abort();  \n      }\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    Throwable th = null;\n    \n    for (DocFieldProcessorPerField field : fieldHash) {\n      while (field != null) {\n        final DocFieldProcessorPerField next = field.next;\n        try {\n          field.abort();\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          }\n        }\n        field = next;\n      }\n    }\n    IOUtils.closeWhileHandlingException(perDocConsumer);\n    // TODO add abort to PerDocConsumer!\n    \n    try {\n      fieldsWriter.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      consumer.abort();\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    try {\n      if (perDocConsumer != null) {\n        perDocConsumer.abort();  \n      }\n    } catch (Throwable t) {\n      if (th == null) {\n        th = t;\n      }\n    }\n    \n    // If any errors occured, throw it.\n    if (th != null) {\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      // defensive code - we should not hit unchecked exceptions\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"24230fe54121f9be9d85f2c2067536296785e421":["ac20cb1e3ba0b41998aab1b3e67bc87d07a5ed4f"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e8d7ba2175f47e280231533f7d3016249cea88b"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fa0f44f887719e97183771e977cfc4bfb485b766"],"efb7a19703a037c29e30440260d393500febc1f4":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["9454a6510e2db155fb01faa5c049b06ece95fab9","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["9454a6510e2db155fb01faa5c049b06ece95fab9","833a7987bc1c94455fde83e3311f72bddedcfb93"],"9c5b735f3b39a5cdb52150bb4ff36a95e8c9407f":["24230fe54121f9be9d85f2c2067536296785e421"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["efb7a19703a037c29e30440260d393500febc1f4","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","efb7a19703a037c29e30440260d393500febc1f4"],"a3776dccca01c11e7046323cfad46a3b4a471233":["9454a6510e2db155fb01faa5c049b06ece95fab9","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa0f44f887719e97183771e977cfc4bfb485b766":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","ac20cb1e3ba0b41998aab1b3e67bc87d07a5ed4f"],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["9c5b735f3b39a5cdb52150bb4ff36a95e8c9407f"],"dccd3bc12ba4203fd3b1cb4ff3285fdf5894f08d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"ac20cb1e3ba0b41998aab1b3e67bc87d07a5ed4f":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"833a7987bc1c94455fde83e3311f72bddedcfb93":["6c18273ea5b3974d2f30117f46f1ae416c28f727"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["dccd3bc12ba4203fd3b1cb4ff3285fdf5894f08d","efb7a19703a037c29e30440260d393500febc1f4"]},"commit2Childs":{"24230fe54121f9be9d85f2c2067536296785e421":["9c5b735f3b39a5cdb52150bb4ff36a95e8c9407f"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["833a7987bc1c94455fde83e3311f72bddedcfb93"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"efb7a19703a037c29e30440260d393500febc1f4":["2e8d7ba2175f47e280231533f7d3016249cea88b","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["dccd3bc12ba4203fd3b1cb4ff3285fdf5894f08d"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["efb7a19703a037c29e30440260d393500febc1f4","135621f3a0670a9394eb563224a3b76cc4dddc0f","a3776dccca01c11e7046323cfad46a3b4a471233"],"9c5b735f3b39a5cdb52150bb4ff36a95e8c9407f":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","ac20cb1e3ba0b41998aab1b3e67bc87d07a5ed4f"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"fa0f44f887719e97183771e977cfc4bfb485b766":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["fa0f44f887719e97183771e977cfc4bfb485b766"],"dccd3bc12ba4203fd3b1cb4ff3285fdf5894f08d":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"ac20cb1e3ba0b41998aab1b3e67bc87d07a5ed4f":["24230fe54121f9be9d85f2c2067536296785e421","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6c18273ea5b3974d2f30117f46f1ae416c28f727","135621f3a0670a9394eb563224a3b76cc4dddc0f","b3e06be49006ecac364d39d12b9c9f74882f9b9f","a3776dccca01c11e7046323cfad46a3b4a471233"],"833a7987bc1c94455fde83e3311f72bddedcfb93":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}