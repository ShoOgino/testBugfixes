{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/CachedQueryBuilder#getQuery(Element).mjava","commits":[{"id":"1db68e96dd908fcd79ef809095822736aa601d08","date":1434630596,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/CachedQueryBuilder#getQuery(Element).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public synchronized Query getQuery(Element e) throws ParserException {\n    Element childElement = DOMUtils.getFirstChildOrFail(e);\n\n    if (queryCache == null) {\n      queryCache = new LRUCache<>(cacheSize);\n    }\n\n    // Test to see if child Element is a query or filter that needs to be\n    // cached\n    QueryBuilder qb = queryFactory.getQueryBuilder(childElement.getNodeName());\n    Object cacheKey = null;\n    Query q = qb.getQuery(childElement);\n    cacheKey = q;\n    Query cachedQuery = queryCache.get(cacheKey);\n    if (cachedQuery != null) {\n      return cachedQuery; // cache hit\n    }\n\n    //cache miss\n    cachedQuery = new CachingWrapperQuery(q);\n\n    queryCache.put(cacheKey, cachedQuery);\n    return cachedQuery;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cfc8e07724f6bd95be343b1c03ae917c9de69cc","date":1446026743,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/CachedQueryBuilder#getQuery(Element).mjava","sourceNew":null,"sourceOld":"  @Override\n  public synchronized Query getQuery(Element e) throws ParserException {\n    Element childElement = DOMUtils.getFirstChildOrFail(e);\n\n    if (queryCache == null) {\n      queryCache = new LRUCache<>(cacheSize);\n    }\n\n    // Test to see if child Element is a query or filter that needs to be\n    // cached\n    QueryBuilder qb = queryFactory.getQueryBuilder(childElement.getNodeName());\n    Object cacheKey = null;\n    Query q = qb.getQuery(childElement);\n    cacheKey = q;\n    Query cachedQuery = queryCache.get(cacheKey);\n    if (cachedQuery != null) {\n      return cachedQuery; // cache hit\n    }\n\n    //cache miss\n    cachedQuery = new CachingWrapperQuery(q);\n\n    queryCache.put(cacheKey, cachedQuery);\n    return cachedQuery;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1db68e96dd908fcd79ef809095822736aa601d08":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cfc8e07724f6bd95be343b1c03ae917c9de69cc":["1db68e96dd908fcd79ef809095822736aa601d08"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4cfc8e07724f6bd95be343b1c03ae917c9de69cc"]},"commit2Childs":{"1db68e96dd908fcd79ef809095822736aa601d08":["4cfc8e07724f6bd95be343b1c03ae917c9de69cc"],"4cfc8e07724f6bd95be343b1c03ae917c9de69cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1db68e96dd908fcd79ef809095822736aa601d08"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}