{"path":"solr/core/src/test/org/apache/solr/util/TimeZoneUtilsTest#testStupidIKnowButIDontTrustTheJVM().mjava","commits":[{"id":"ee885f5e662cbb01001f36c0eb67da68e103bd05","date":1335289998,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/TimeZoneUtilsTest#testStupidIKnowButIDontTrustTheJVM().mjava","pathOld":"/dev/null","sourceNew":"  public void testStupidIKnowButIDontTrustTheJVM() throws Exception {\n\n    for (String input : new String[] {\"GMT-00\", \"GMT+00\", \"GMT-0\", \"GMT+0\", \n                                      \"GMT+08\",\"GMT+8\", \"GMT-08\",\"GMT-8\",\n                                      \"GMT+0800\",\"GMT+08:00\",\n                                      \"GMT-0800\",\"GMT-08:00\",\n                                      \"GMT+23\", \"GMT+2300\",\n                                      \"GMT-23\", \"GMT-2300\"}) {\n      assertEquals(input, \n                   TimeZone.getTimeZone(input),\n                   TimeZone.getTimeZone(input));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"210ddb28897ffc5a75f04dd53de6a2fb8dacca29","date":1335293446,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/TimeZoneUtilsTest#testStupidIKnowButIDontTrustTheJVM().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/TimeZoneUtilsTest#testStupidIKnowButIDontTrustTheJVM().mjava","sourceNew":"  public void testStupidIKnowButIDontTrustTheJVM() throws Exception {\n\n    for (String input : new String[] {\"GMT-00\", \"GMT+00\", \"GMT-0\", \"GMT+0\", \n                                      \"GMT+08\",\"GMT+8\", \"GMT-08\",\"GMT-8\",\n                                      \"GMT+0800\",\"GMT+08:00\",\n                                      \"GMT-0800\",\"GMT-08:00\",\n                                      \"GMT+23\", \"GMT+2300\",\n                                      \"GMT-23\", \"GMT-2300\"}) {\n      assertSameRules(input, \n                      TimeZone.getTimeZone(input),\n                      TimeZone.getTimeZone(input));\n    }\n  }\n\n","sourceOld":"  public void testStupidIKnowButIDontTrustTheJVM() throws Exception {\n\n    for (String input : new String[] {\"GMT-00\", \"GMT+00\", \"GMT-0\", \"GMT+0\", \n                                      \"GMT+08\",\"GMT+8\", \"GMT-08\",\"GMT-8\",\n                                      \"GMT+0800\",\"GMT+08:00\",\n                                      \"GMT-0800\",\"GMT-08:00\",\n                                      \"GMT+23\", \"GMT+2300\",\n                                      \"GMT-23\", \"GMT-2300\"}) {\n      assertEquals(input, \n                   TimeZone.getTimeZone(input),\n                   TimeZone.getTimeZone(input));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"210ddb28897ffc5a75f04dd53de6a2fb8dacca29":["ee885f5e662cbb01001f36c0eb67da68e103bd05"],"ee885f5e662cbb01001f36c0eb67da68e103bd05":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["210ddb28897ffc5a75f04dd53de6a2fb8dacca29"]},"commit2Childs":{"210ddb28897ffc5a75f04dd53de6a2fb8dacca29":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ee885f5e662cbb01001f36c0eb67da68e103bd05":["210ddb28897ffc5a75f04dd53de6a2fb8dacca29"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ee885f5e662cbb01001f36c0eb67da68e103bd05"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}