{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","commits":[{"id":"32eace34e207608926e4c83409c65d968e530bf2","date":1350054443,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","pathOld":"/dev/null","sourceNew":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1);\n\n    suggester.build(new TermFreqArrayIterator(new TermFreq[] {\n          new TermFreq(\"a\", 2),\n          new TermFreq(\"a b c\", 3),\n          new TermFreq(\"a c a\", 1),\n          new TermFreq(\"a c b\", 1),\n        }));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 4);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6efad415dcdbcca7d440f909743e6e3152eeb6c0","date":1350055371,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","pathOld":"/dev/null","sourceNew":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1);\n\n    suggester.build(new TermFreqArrayIterator(new TermFreq[] {\n          new TermFreq(\"a\", 2),\n          new TermFreq(\"a b c\", 3),\n          new TermFreq(\"a c a\", 1),\n          new TermFreq(\"a c b\", 1),\n        }));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 4);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d82832af39f94dbb58a3130fd216ff1d49435589","date":1350147242,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","pathOld":"/dev/null","sourceNew":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1);\n\n    suggester.build(new TermFreqArrayIterator(new TermFreq[] {\n          new TermFreq(\"a\", 2),\n          new TermFreq(\"a b c\", 3),\n          new TermFreq(\"a c a\", 1),\n          new TermFreq(\"a c b\", 1),\n        }));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 4);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71c3a16c8d34d59ba60b59178c5f2d9622167ec","date":1352572085,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","sourceNew":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1);\n\n    suggester.build(new TermFreqArrayIterator(new TermFreq[] {\n          new TermFreq(\"a\", 2),\n          new TermFreq(\"a b c\", 3),\n          new TermFreq(\"a c a\", 1),\n          new TermFreq(\"a c b\", 1),\n        }));\n\n    suggester.lookup(\"a\", false, 4);\n  }\n\n","sourceOld":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1);\n\n    suggester.build(new TermFreqArrayIterator(new TermFreq[] {\n          new TermFreq(\"a\", 2),\n          new TermFreq(\"a b c\", 3),\n          new TermFreq(\"a c a\", 1),\n          new TermFreq(\"a c b\", 1),\n        }));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 4);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","sourceNew":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1);\n\n    suggester.build(new TermFreqArrayIterator(new TermFreq[] {\n          new TermFreq(\"a\", 2),\n          new TermFreq(\"a b c\", 3),\n          new TermFreq(\"a c a\", 1),\n          new TermFreq(\"a c b\", 1),\n        }));\n\n    suggester.lookup(\"a\", false, 4);\n  }\n\n","sourceOld":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1);\n\n    suggester.build(new TermFreqArrayIterator(new TermFreq[] {\n          new TermFreq(\"a\", 2),\n          new TermFreq(\"a b c\", 3),\n          new TermFreq(\"a c a\", 1),\n          new TermFreq(\"a c b\", 1),\n        }));\n\n    List<LookupResult> results = suggester.lookup(\"a\", false, 4);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ada2f7352a7f964fe49bccd13227c4ec38563d39","date":1381659982,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","sourceNew":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1);\n\n    suggester.build(new TermFreqPayloadArrayIterator(new TermFreqPayload[] {\n          new TermFreqPayload(\"a\", 2),\n          new TermFreqPayload(\"a b c\", 3),\n          new TermFreqPayload(\"a c a\", 1),\n          new TermFreqPayload(\"a c b\", 1),\n        }));\n\n    suggester.lookup(\"a\", false, 4);\n  }\n\n","sourceOld":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1);\n\n    suggester.build(new TermFreqArrayIterator(new TermFreq[] {\n          new TermFreq(\"a\", 2),\n          new TermFreq(\"a b c\", 3),\n          new TermFreq(\"a c a\", 1),\n          new TermFreq(\"a c b\", 1),\n        }));\n\n    suggester.lookup(\"a\", false, 4);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41aee74b5f91a096e3fd950f4a336bc763f0e7a7","date":1381772070,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","sourceNew":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1);\n\n    suggester.build(new InputArrayIterator(new Input[] {\n          new Input(\"a\", 2),\n          new Input(\"a b c\", 3),\n          new Input(\"a c a\", 1),\n          new Input(\"a c b\", 1),\n        }));\n\n    suggester.lookup(\"a\", false, 4);\n  }\n\n","sourceOld":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1);\n\n    suggester.build(new TermFreqPayloadArrayIterator(new TermFreqPayload[] {\n          new TermFreqPayload(\"a\", 2),\n          new TermFreqPayload(\"a b c\", 3),\n          new TermFreqPayload(\"a c a\", 1),\n          new TermFreqPayload(\"a c b\", 1),\n        }));\n\n    suggester.lookup(\"a\", false, 4);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4e0095ef720d1b8e7406847147af69f19af3ab6","date":1383131477,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","sourceNew":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1, false);\n\n    suggester.build(new InputArrayIterator(new Input[] {\n          new Input(\"a\", 2),\n          new Input(\"a b c\", 3),\n          new Input(\"a c a\", 1),\n          new Input(\"a c b\", 1),\n        }));\n\n    suggester.lookup(\"a\", false, 4);\n  }\n\n","sourceOld":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1);\n\n    suggester.build(new InputArrayIterator(new Input[] {\n          new Input(\"a\", 2),\n          new Input(\"a b c\", 3),\n          new Input(\"a c a\", 1),\n          new Input(\"a c b\", 1),\n        }));\n\n    suggester.lookup(\"a\", false, 4);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33f87fe6faf49dfc1e66f45e841e24838c2f725c","date":1383142987,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","sourceNew":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1, true);\n\n    suggester.build(new InputArrayIterator(new Input[] {\n          new Input(\"a\", 2),\n          new Input(\"a b c\", 3),\n          new Input(\"a c a\", 1),\n          new Input(\"a c b\", 1),\n        }));\n\n    suggester.lookup(\"a\", false, 4);\n  }\n\n","sourceOld":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1, false);\n\n    suggester.build(new InputArrayIterator(new Input[] {\n          new Input(\"a\", 2),\n          new Input(\"a b c\", 3),\n          new Input(\"a c a\", 1),\n          new Input(\"a c b\", 1),\n        }));\n\n    suggester.lookup(\"a\", false, 4);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","sourceNew":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1, true);\n\n    suggester.build(new InputArrayIterator(new Input[] {\n          new Input(\"a\", 2),\n          new Input(\"a b c\", 3),\n          new Input(\"a c a\", 1),\n          new Input(\"a c b\", 1),\n        }));\n\n    suggester.lookup(\"a\", false, 4);\n    a.close();\n  }\n\n","sourceOld":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1, true);\n\n    suggester.build(new InputArrayIterator(new Input[] {\n          new Input(\"a\", 2),\n          new Input(\"a b c\", 3),\n          new Input(\"a c a\", 1),\n          new Input(\"a c b\", 1),\n        }));\n\n    suggester.lookup(\"a\", false, 4);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","sourceNew":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1, true);\n\n    suggester.build(new InputArrayIterator(new Input[] {\n          new Input(\"a\", 2),\n          new Input(\"a b c\", 3),\n          new Input(\"a c a\", 1),\n          new Input(\"a c b\", 1),\n        }));\n\n    suggester.lookup(\"a\", false, 4);\n    a.close();\n  }\n\n","sourceOld":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1, true);\n\n    suggester.build(new InputArrayIterator(new Input[] {\n          new Input(\"a\", 2),\n          new Input(\"a b c\", 3),\n          new Input(\"a c a\", 1),\n          new Input(\"a c b\", 1),\n        }));\n\n    suggester.lookup(\"a\", false, 4);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest#testQueueExhaustion().mjava","sourceNew":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    Directory tempDir = getDirectory();\n    AnalyzingSuggester suggester = new AnalyzingSuggester(tempDir, \"suggest\", a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1, true);\n\n    suggester.build(new InputArrayIterator(new Input[] {\n          new Input(\"a\", 2),\n          new Input(\"a b c\", 3),\n          new Input(\"a c a\", 1),\n          new Input(\"a c b\", 1),\n        }));\n\n    suggester.lookup(\"a\", false, 4);\n    IOUtils.close(a, tempDir);\n  }\n\n","sourceOld":"  public void testQueueExhaustion() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    AnalyzingSuggester suggester = new AnalyzingSuggester(a, a, AnalyzingSuggester.EXACT_FIRST, 256, -1, true);\n\n    suggester.build(new InputArrayIterator(new Input[] {\n          new Input(\"a\", 2),\n          new Input(\"a b c\", 3),\n          new Input(\"a c a\", 1),\n          new Input(\"a c b\", 1),\n        }));\n\n    suggester.lookup(\"a\", false, 4);\n    a.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"407687e67faf6e1f02a211ca078d8e3eed631027":["32eace34e207608926e4c83409c65d968e530bf2","a71c3a16c8d34d59ba60b59178c5f2d9622167ec"],"33f87fe6faf49dfc1e66f45e841e24838c2f725c":["d4e0095ef720d1b8e7406847147af69f19af3ab6"],"32eace34e207608926e4c83409c65d968e530bf2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6efad415dcdbcca7d440f909743e6e3152eeb6c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","32eace34e207608926e4c83409c65d968e530bf2"],"a71c3a16c8d34d59ba60b59178c5f2d9622167ec":["32eace34e207608926e4c83409c65d968e530bf2"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["33f87fe6faf49dfc1e66f45e841e24838c2f725c","a56958d7f71a28824f20031ffbb2e13502a0274e"],"d82832af39f94dbb58a3130fd216ff1d49435589":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","32eace34e207608926e4c83409c65d968e530bf2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a56958d7f71a28824f20031ffbb2e13502a0274e":["33f87fe6faf49dfc1e66f45e841e24838c2f725c"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["a56958d7f71a28824f20031ffbb2e13502a0274e"],"d4e0095ef720d1b8e7406847147af69f19af3ab6":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["a71c3a16c8d34d59ba60b59178c5f2d9622167ec"]},"commit2Childs":{"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["d4e0095ef720d1b8e7406847147af69f19af3ab6"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"33f87fe6faf49dfc1e66f45e841e24838c2f725c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"32eace34e207608926e4c83409c65d968e530bf2":["407687e67faf6e1f02a211ca078d8e3eed631027","6efad415dcdbcca7d440f909743e6e3152eeb6c0","a71c3a16c8d34d59ba60b59178c5f2d9622167ec","d82832af39f94dbb58a3130fd216ff1d49435589"],"6efad415dcdbcca7d440f909743e6e3152eeb6c0":[],"a71c3a16c8d34d59ba60b59178c5f2d9622167ec":["407687e67faf6e1f02a211ca078d8e3eed631027","ada2f7352a7f964fe49bccd13227c4ec38563d39"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"d82832af39f94dbb58a3130fd216ff1d49435589":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["32eace34e207608926e4c83409c65d968e530bf2","6efad415dcdbcca7d440f909743e6e3152eeb6c0","d82832af39f94dbb58a3130fd216ff1d49435589"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","867e3d9153fb761456b54a9dcce566e1545c5ef6"],"d4e0095ef720d1b8e7406847147af69f19af3ab6":["33f87fe6faf49dfc1e66f45e841e24838c2f725c"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","6efad415dcdbcca7d440f909743e6e3152eeb6c0","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","d82832af39f94dbb58a3130fd216ff1d49435589","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}