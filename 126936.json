{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FreeTextSuggester.AnalyzingComparator#compare(BytesRef,BytesRef).mjava","commits":[{"id":"d0af0c31a687dd847212ae59f661152896c76516","date":1380727430,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FreeTextSuggester.AnalyzingComparator#compare(BytesRef,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int compare(BytesRef a, BytesRef b) {\n      readerA.reset(a.bytes, a.offset, a.length);\n      readerB.reset(b.bytes, b.offset, b.length);\n\n      // By token:\n      scratchA.length = readerA.readShort();\n      scratchA.bytes = a.bytes;\n      scratchA.offset = readerA.getPosition();\n\n      scratchB.bytes = b.bytes;\n      scratchB.length = readerB.readShort();\n      scratchB.offset = readerB.getPosition();\n\n      int cmp = scratchA.compareTo(scratchB);\n      if (cmp != 0) {\n        return cmp;\n      }\n      readerA.skipBytes(scratchA.length);\n      readerB.skipBytes(scratchB.length);\n\n      // By length (smaller surface forms sorted first):\n      cmp = a.length - b.length;\n      if (cmp != 0) {\n        return cmp;\n      }\n\n      // By surface form:\n      scratchA.offset = readerA.getPosition();\n      scratchA.length = a.length - scratchA.offset;\n      scratchB.offset = readerB.getPosition();\n      scratchB.length = b.length - scratchB.offset;\n\n      return scratchA.compareTo(scratchB);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0da9ed2326b7ef3a046e00fbb5fc0e03d236b8ad","date":1482399429,"type":4,"author":"Christine Poerschke","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FreeTextSuggester.AnalyzingComparator#compare(BytesRef,BytesRef).mjava","sourceNew":null,"sourceOld":"    @Override\n    public int compare(BytesRef a, BytesRef b) {\n      readerA.reset(a.bytes, a.offset, a.length);\n      readerB.reset(b.bytes, b.offset, b.length);\n\n      // By token:\n      scratchA.length = readerA.readShort();\n      scratchA.bytes = a.bytes;\n      scratchA.offset = readerA.getPosition();\n\n      scratchB.bytes = b.bytes;\n      scratchB.length = readerB.readShort();\n      scratchB.offset = readerB.getPosition();\n\n      int cmp = scratchA.compareTo(scratchB);\n      if (cmp != 0) {\n        return cmp;\n      }\n      readerA.skipBytes(scratchA.length);\n      readerB.skipBytes(scratchB.length);\n\n      // By length (smaller surface forms sorted first):\n      cmp = a.length - b.length;\n      if (cmp != 0) {\n        return cmp;\n      }\n\n      // By surface form:\n      scratchA.offset = readerA.getPosition();\n      scratchA.length = a.length - scratchA.offset;\n      scratchB.offset = readerB.getPosition();\n      scratchB.length = b.length - scratchB.offset;\n\n      return scratchA.compareTo(scratchB);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FreeTextSuggester.AnalyzingComparator#compare(BytesRef,BytesRef).mjava","sourceNew":null,"sourceOld":"    @Override\n    public int compare(BytesRef a, BytesRef b) {\n      readerA.reset(a.bytes, a.offset, a.length);\n      readerB.reset(b.bytes, b.offset, b.length);\n\n      // By token:\n      scratchA.length = readerA.readShort();\n      scratchA.bytes = a.bytes;\n      scratchA.offset = readerA.getPosition();\n\n      scratchB.bytes = b.bytes;\n      scratchB.length = readerB.readShort();\n      scratchB.offset = readerB.getPosition();\n\n      int cmp = scratchA.compareTo(scratchB);\n      if (cmp != 0) {\n        return cmp;\n      }\n      readerA.skipBytes(scratchA.length);\n      readerB.skipBytes(scratchB.length);\n\n      // By length (smaller surface forms sorted first):\n      cmp = a.length - b.length;\n      if (cmp != 0) {\n        return cmp;\n      }\n\n      // By surface form:\n      scratchA.offset = readerA.getPosition();\n      scratchA.length = a.length - scratchA.offset;\n      scratchB.offset = readerB.getPosition();\n      scratchB.length = b.length - scratchB.offset;\n\n      return scratchA.compareTo(scratchB);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d0af0c31a687dd847212ae59f661152896c76516":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0da9ed2326b7ef3a046e00fbb5fc0e03d236b8ad":["d0af0c31a687dd847212ae59f661152896c76516"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0da9ed2326b7ef3a046e00fbb5fc0e03d236b8ad"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["d0af0c31a687dd847212ae59f661152896c76516","0da9ed2326b7ef3a046e00fbb5fc0e03d236b8ad"]},"commit2Childs":{"d0af0c31a687dd847212ae59f661152896c76516":["0da9ed2326b7ef3a046e00fbb5fc0e03d236b8ad","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d0af0c31a687dd847212ae59f661152896c76516"],"0da9ed2326b7ef3a046e00fbb5fc0e03d236b8ad":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}