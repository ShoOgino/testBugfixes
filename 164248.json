{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoLatitudeZone#getRelationship(GeoShape).mjava","commits":[{"id":"851e4197476b684154a7b65f996f535522e67400","date":1428926498,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoLatitudeZone#getRelationship(GeoShape).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int getRelationship(GeoShape path) {\n        // First observation: The only way you can draw a path that\n        // contains this area is to have an unbounded path that circles the globe.\n        // So we will never return CONTAINS.\n    \n        // Second, the shortcut of seeing whether endpoints are in/out is not going to \n        // work with no area endpoints.  So we rely entirely on intersections.\n\n        if (path.intersects(topPlane,bottomPlane) ||\n            path.intersects(bottomPlane,topPlane))\n            return OVERLAPS;\n\n        if (isWithin(path.getInteriorPoint()))\n            return WITHIN;\n\n        return DISJOINT;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab7d51740456adc459ec788c8fe27746bdc60a55","date":1429185101,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoLatitudeZone#getRelationship(GeoShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoLatitudeZone#getRelationship(GeoShape).mjava","sourceNew":"    @Override\n    public int getRelationship(GeoShape path) {\n        // Second, the shortcut of seeing whether endpoints are in/out is not going to \n        // work with no area endpoints.  So we rely entirely on intersections.\n\n        if (path.intersects(topPlane,bottomPlane) ||\n            path.intersects(bottomPlane,topPlane))\n            return OVERLAPS;\n\n        if (path.isWithin(interiorPoint))\n            return CONTAINS;\n\n        if (isWithin(path.getInteriorPoint()))\n            return WITHIN;\n\n        return DISJOINT;\n    }\n\n","sourceOld":"    @Override\n    public int getRelationship(GeoShape path) {\n        // First observation: The only way you can draw a path that\n        // contains this area is to have an unbounded path that circles the globe.\n        // So we will never return CONTAINS.\n    \n        // Second, the shortcut of seeing whether endpoints are in/out is not going to \n        // work with no area endpoints.  So we rely entirely on intersections.\n\n        if (path.intersects(topPlane,bottomPlane) ||\n            path.intersects(bottomPlane,topPlane))\n            return OVERLAPS;\n\n        if (isWithin(path.getInteriorPoint()))\n            return WITHIN;\n\n        return DISJOINT;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0fb9dbed1415914caa27460f8abb7afadaa61451","date":1429504289,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoLatitudeZone#getRelationship(GeoShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoLatitudeZone#getRelationship(GeoShape).mjava","sourceNew":"    @Override\n    public int getRelationship(final GeoShape path) {\n        final int insideRectangle = isShapeInsideBBox(path);\n        if (insideRectangle == SOME_INSIDE)\n            return OVERLAPS;\n\n        final boolean topBoundaryInsideShape = path.isWithin(topBoundaryPoint);\n        final boolean bottomBoundaryInsideShape = path.isWithin(bottomBoundaryPoint);\n        \n        if (topBoundaryInsideShape && !bottomBoundaryInsideShape ||\n            !topBoundaryInsideShape && bottomBoundaryInsideShape)\n            return OVERLAPS;\n        \n        final boolean insideShape = topBoundaryInsideShape && bottomBoundaryInsideShape;\n\n        if (insideRectangle == ALL_INSIDE && insideShape)\n            return OVERLAPS;\n\n        // Second, the shortcut of seeing whether endpoints are in/out is not going to \n        // work with no area endpoints.  So we rely entirely on intersections.\n\n        if (path.intersects(topPlane,bottomPlane) ||\n            path.intersects(bottomPlane,topPlane))\n            return OVERLAPS;\n\n        // There is another case for latitude zones only.  This is when the boundaries of the shape all fit\n        // within the zone, but the shape includes areas outside the zone crossing a pole.\n        // In this case, the above \"overlaps\" check is insufficient.  We also need to check a point on either boundary\n        // whether it is within the shape.  If both such points are within, then CONTAINS is the right answer.  If\n        // one such point is within, then OVERLAPS is the right answer.  \n        \n        if (insideShape)\n            return CONTAINS;\n\n        if (insideRectangle == ALL_INSIDE)\n            return WITHIN;\n\n        return DISJOINT;\n    }\n\n","sourceOld":"    @Override\n    public int getRelationship(GeoShape path) {\n        // Second, the shortcut of seeing whether endpoints are in/out is not going to \n        // work with no area endpoints.  So we rely entirely on intersections.\n\n        if (path.intersects(topPlane,bottomPlane) ||\n            path.intersects(bottomPlane,topPlane))\n            return OVERLAPS;\n\n        if (path.isWithin(interiorPoint))\n            return CONTAINS;\n\n        if (isWithin(path.getInteriorPoint()))\n            return WITHIN;\n\n        return DISJOINT;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7aca5c321bc9760dbfc9cefcc9d648e946b4615e","date":1429714020,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoLatitudeZone#getRelationship(GeoShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoLatitudeZone#getRelationship(GeoShape).mjava","sourceNew":"    @Override\n    public int getRelationship(final GeoShape path) {\n        final int insideRectangle = isShapeInsideBBox(path);\n        if (insideRectangle == SOME_INSIDE)\n            return OVERLAPS;\n\n        final boolean topBoundaryInsideShape = path.isWithin(topBoundaryPoint);\n        final boolean bottomBoundaryInsideShape = path.isWithin(bottomBoundaryPoint);\n        \n        if (topBoundaryInsideShape && !bottomBoundaryInsideShape ||\n            !topBoundaryInsideShape && bottomBoundaryInsideShape)\n            return OVERLAPS;\n        \n        final boolean insideShape = topBoundaryInsideShape && bottomBoundaryInsideShape;\n\n        if (insideRectangle == ALL_INSIDE && insideShape)\n            return OVERLAPS;\n\n        // Second, the shortcut of seeing whether endpoints are in/out is not going to \n        // work with no area endpoints.  So we rely entirely on intersections.\n\n        if (path.intersects(topPlane,planePoints,bottomPlane) ||\n            path.intersects(bottomPlane,planePoints,topPlane))\n            return OVERLAPS;\n\n        // There is another case for latitude zones only.  This is when the boundaries of the shape all fit\n        // within the zone, but the shape includes areas outside the zone crossing a pole.\n        // In this case, the above \"overlaps\" check is insufficient.  We also need to check a point on either boundary\n        // whether it is within the shape.  If both such points are within, then CONTAINS is the right answer.  If\n        // one such point is within, then OVERLAPS is the right answer.  \n        \n        if (insideShape)\n            return CONTAINS;\n\n        if (insideRectangle == ALL_INSIDE)\n            return WITHIN;\n\n        return DISJOINT;\n    }\n\n","sourceOld":"    @Override\n    public int getRelationship(final GeoShape path) {\n        final int insideRectangle = isShapeInsideBBox(path);\n        if (insideRectangle == SOME_INSIDE)\n            return OVERLAPS;\n\n        final boolean topBoundaryInsideShape = path.isWithin(topBoundaryPoint);\n        final boolean bottomBoundaryInsideShape = path.isWithin(bottomBoundaryPoint);\n        \n        if (topBoundaryInsideShape && !bottomBoundaryInsideShape ||\n            !topBoundaryInsideShape && bottomBoundaryInsideShape)\n            return OVERLAPS;\n        \n        final boolean insideShape = topBoundaryInsideShape && bottomBoundaryInsideShape;\n\n        if (insideRectangle == ALL_INSIDE && insideShape)\n            return OVERLAPS;\n\n        // Second, the shortcut of seeing whether endpoints are in/out is not going to \n        // work with no area endpoints.  So we rely entirely on intersections.\n\n        if (path.intersects(topPlane,bottomPlane) ||\n            path.intersects(bottomPlane,topPlane))\n            return OVERLAPS;\n\n        // There is another case for latitude zones only.  This is when the boundaries of the shape all fit\n        // within the zone, but the shape includes areas outside the zone crossing a pole.\n        // In this case, the above \"overlaps\" check is insufficient.  We also need to check a point on either boundary\n        // whether it is within the shape.  If both such points are within, then CONTAINS is the right answer.  If\n        // one such point is within, then OVERLAPS is the right answer.  \n        \n        if (insideShape)\n            return CONTAINS;\n\n        if (insideRectangle == ALL_INSIDE)\n            return WITHIN;\n\n        return DISJOINT;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2997acf74723385bd84aff1ea0b12af4aefde77","date":1430745542,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoLatitudeZone#getRelationship(GeoShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoLatitudeZone#getRelationship(GeoShape).mjava","sourceNew":"  @Override\n  public int getRelationship(final GeoShape path) {\n    final int insideRectangle = isShapeInsideBBox(path);\n    if (insideRectangle == SOME_INSIDE)\n      return OVERLAPS;\n\n    final boolean topBoundaryInsideShape = path.isWithin(topBoundaryPoint);\n    final boolean bottomBoundaryInsideShape = path.isWithin(bottomBoundaryPoint);\n\n    if (topBoundaryInsideShape && !bottomBoundaryInsideShape ||\n        !topBoundaryInsideShape && bottomBoundaryInsideShape)\n      return OVERLAPS;\n\n    final boolean insideShape = topBoundaryInsideShape && bottomBoundaryInsideShape;\n\n    if (insideRectangle == ALL_INSIDE && insideShape)\n      return OVERLAPS;\n\n    // Second, the shortcut of seeing whether endpoints are in/out is not going to\n    // work with no area endpoints.  So we rely entirely on intersections.\n\n    if (path.intersects(topPlane, planePoints, bottomPlane) ||\n        path.intersects(bottomPlane, planePoints, topPlane))\n      return OVERLAPS;\n\n    // There is another case for latitude zones only.  This is when the boundaries of the shape all fit\n    // within the zone, but the shape includes areas outside the zone crossing a pole.\n    // In this case, the above \"overlaps\" check is insufficient.  We also need to check a point on either boundary\n    // whether it is within the shape.  If both such points are within, then CONTAINS is the right answer.  If\n    // one such point is within, then OVERLAPS is the right answer.\n\n    if (insideShape)\n      return CONTAINS;\n\n    if (insideRectangle == ALL_INSIDE)\n      return WITHIN;\n\n    return DISJOINT;\n  }\n\n","sourceOld":"    @Override\n    public int getRelationship(final GeoShape path) {\n        final int insideRectangle = isShapeInsideBBox(path);\n        if (insideRectangle == SOME_INSIDE)\n            return OVERLAPS;\n\n        final boolean topBoundaryInsideShape = path.isWithin(topBoundaryPoint);\n        final boolean bottomBoundaryInsideShape = path.isWithin(bottomBoundaryPoint);\n        \n        if (topBoundaryInsideShape && !bottomBoundaryInsideShape ||\n            !topBoundaryInsideShape && bottomBoundaryInsideShape)\n            return OVERLAPS;\n        \n        final boolean insideShape = topBoundaryInsideShape && bottomBoundaryInsideShape;\n\n        if (insideRectangle == ALL_INSIDE && insideShape)\n            return OVERLAPS;\n\n        // Second, the shortcut of seeing whether endpoints are in/out is not going to \n        // work with no area endpoints.  So we rely entirely on intersections.\n\n        if (path.intersects(topPlane,planePoints,bottomPlane) ||\n            path.intersects(bottomPlane,planePoints,topPlane))\n            return OVERLAPS;\n\n        // There is another case for latitude zones only.  This is when the boundaries of the shape all fit\n        // within the zone, but the shape includes areas outside the zone crossing a pole.\n        // In this case, the above \"overlaps\" check is insufficient.  We also need to check a point on either boundary\n        // whether it is within the shape.  If both such points are within, then CONTAINS is the right answer.  If\n        // one such point is within, then OVERLAPS is the right answer.  \n        \n        if (insideShape)\n            return CONTAINS;\n\n        if (insideRectangle == ALL_INSIDE)\n            return WITHIN;\n\n        return DISJOINT;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c921d81476f94b6686d3f216daa1f6b076b4a6c0","date":1430922284,"type":0,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoLatitudeZone#getRelationship(GeoShape).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int getRelationship(final GeoShape path) {\n    final int insideRectangle = isShapeInsideBBox(path);\n    if (insideRectangle == SOME_INSIDE)\n      return OVERLAPS;\n\n    final boolean topBoundaryInsideShape = path.isWithin(topBoundaryPoint);\n    final boolean bottomBoundaryInsideShape = path.isWithin(bottomBoundaryPoint);\n\n    if (topBoundaryInsideShape && !bottomBoundaryInsideShape ||\n        !topBoundaryInsideShape && bottomBoundaryInsideShape)\n      return OVERLAPS;\n\n    final boolean insideShape = topBoundaryInsideShape && bottomBoundaryInsideShape;\n\n    if (insideRectangle == ALL_INSIDE && insideShape)\n      return OVERLAPS;\n\n    // Second, the shortcut of seeing whether endpoints are in/out is not going to\n    // work with no area endpoints.  So we rely entirely on intersections.\n\n    if (path.intersects(topPlane, planePoints, bottomPlane) ||\n        path.intersects(bottomPlane, planePoints, topPlane))\n      return OVERLAPS;\n\n    // There is another case for latitude zones only.  This is when the boundaries of the shape all fit\n    // within the zone, but the shape includes areas outside the zone crossing a pole.\n    // In this case, the above \"overlaps\" check is insufficient.  We also need to check a point on either boundary\n    // whether it is within the shape.  If both such points are within, then CONTAINS is the right answer.  If\n    // one such point is within, then OVERLAPS is the right answer.\n\n    if (insideShape)\n      return CONTAINS;\n\n    if (insideRectangle == ALL_INSIDE)\n      return WITHIN;\n\n    return DISJOINT;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoLatitudeZone#getRelationship(GeoShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoLatitudeZone#getRelationship(GeoShape).mjava","sourceNew":"  @Override\n  public int getRelationship(final GeoShape path) {\n    final int insideRectangle = isShapeInsideBBox(path);\n    if (insideRectangle == SOME_INSIDE)\n      return OVERLAPS;\n\n    final boolean topBoundaryInsideShape = path.isWithin(topBoundaryPoint);\n    final boolean bottomBoundaryInsideShape = path.isWithin(bottomBoundaryPoint);\n\n    if (topBoundaryInsideShape && !bottomBoundaryInsideShape ||\n        !topBoundaryInsideShape && bottomBoundaryInsideShape)\n      return OVERLAPS;\n\n    final boolean insideShape = topBoundaryInsideShape && bottomBoundaryInsideShape;\n\n    if (insideRectangle == ALL_INSIDE && insideShape)\n      return OVERLAPS;\n\n    // Second, the shortcut of seeing whether endpoints are in/out is not going to\n    // work with no area endpoints.  So we rely entirely on intersections.\n\n    if (path.intersects(topPlane, planePoints, bottomPlane) ||\n        path.intersects(bottomPlane, planePoints, topPlane))\n      return OVERLAPS;\n\n    // There is another case for latitude zones only.  This is when the boundaries of the shape all fit\n    // within the zone, but the shape includes areas outside the zone crossing a pole.\n    // In this case, the above \"overlaps\" check is insufficient.  We also need to check a point on either boundary\n    // whether it is within the shape.  If both such points are within, then CONTAINS is the right answer.  If\n    // one such point is within, then OVERLAPS is the right answer.\n\n    if (insideShape)\n      return CONTAINS;\n\n    if (insideRectangle == ALL_INSIDE)\n      return WITHIN;\n\n    return DISJOINT;\n  }\n\n","sourceOld":"  @Override\n  public int getRelationship(final GeoShape path) {\n    final int insideRectangle = isShapeInsideBBox(path);\n    if (insideRectangle == SOME_INSIDE)\n      return OVERLAPS;\n\n    final boolean topBoundaryInsideShape = path.isWithin(topBoundaryPoint);\n    final boolean bottomBoundaryInsideShape = path.isWithin(bottomBoundaryPoint);\n\n    if (topBoundaryInsideShape && !bottomBoundaryInsideShape ||\n        !topBoundaryInsideShape && bottomBoundaryInsideShape)\n      return OVERLAPS;\n\n    final boolean insideShape = topBoundaryInsideShape && bottomBoundaryInsideShape;\n\n    if (insideRectangle == ALL_INSIDE && insideShape)\n      return OVERLAPS;\n\n    // Second, the shortcut of seeing whether endpoints are in/out is not going to\n    // work with no area endpoints.  So we rely entirely on intersections.\n\n    if (path.intersects(topPlane, planePoints, bottomPlane) ||\n        path.intersects(bottomPlane, planePoints, topPlane))\n      return OVERLAPS;\n\n    // There is another case for latitude zones only.  This is when the boundaries of the shape all fit\n    // within the zone, but the shape includes areas outside the zone crossing a pole.\n    // In this case, the above \"overlaps\" check is insufficient.  We also need to check a point on either boundary\n    // whether it is within the shape.  If both such points are within, then CONTAINS is the right answer.  If\n    // one such point is within, then OVERLAPS is the right answer.\n\n    if (insideShape)\n      return CONTAINS;\n\n    if (insideRectangle == ALL_INSIDE)\n      return WITHIN;\n\n    return DISJOINT;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0fb9dbed1415914caa27460f8abb7afadaa61451":["ab7d51740456adc459ec788c8fe27746bdc60a55"],"ab7d51740456adc459ec788c8fe27746bdc60a55":["851e4197476b684154a7b65f996f535522e67400"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3022be5842502b7c2a57a5124199bbc30236f0a0":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["7aca5c321bc9760dbfc9cefcc9d648e946b4615e"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e2997acf74723385bd84aff1ea0b12af4aefde77"],"851e4197476b684154a7b65f996f535522e67400":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7aca5c321bc9760dbfc9cefcc9d648e946b4615e":["0fb9dbed1415914caa27460f8abb7afadaa61451"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3022be5842502b7c2a57a5124199bbc30236f0a0"]},"commit2Childs":{"0fb9dbed1415914caa27460f8abb7afadaa61451":["7aca5c321bc9760dbfc9cefcc9d648e946b4615e"],"ab7d51740456adc459ec788c8fe27746bdc60a55":["0fb9dbed1415914caa27460f8abb7afadaa61451"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c921d81476f94b6686d3f216daa1f6b076b4a6c0","851e4197476b684154a7b65f996f535522e67400"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"851e4197476b684154a7b65f996f535522e67400":["ab7d51740456adc459ec788c8fe27746bdc60a55"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"7aca5c321bc9760dbfc9cefcc9d648e946b4615e":["e2997acf74723385bd84aff1ea0b12af4aefde77"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}