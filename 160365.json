{"path":"src/test/org/apache/lucene/index/TestCompoundFile#createSequenceFile(Directory,String,byte,int).mjava","commits":[{"id":"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1","date":1064527311,"type":0,"author":"Dmitry Serebrennikov","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestCompoundFile#createSequenceFile(Directory,String,byte,int).mjava","pathOld":"/dev/null","sourceNew":"    /** Creates a file of the specified size with sequential data. The first\n     *  byte is written as the start byte provided. All subsequent bytes are\n     *  computed as start + offset where offset is the number of the byte.\n     */\n    private void createSequenceFile(Directory dir, \n                                    String name, \n                                    byte start, \n                                    int size) \n    throws IOException\n    {\n        OutputStream os = dir.createFile(name);\n        for (int i=0; i < size; i++) {\n            os.writeByte(start);\n            start ++;\n        }\n        os.close();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1acbe60842541f8c38e2d60b03591478c9f91546","date":1066055498,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestCompoundFile#createSequenceFile(Directory,String,byte,int).mjava","pathOld":"src/test/org/apache/lucene/index/TestCompoundFile#createSequenceFile(Directory,String,byte,int).mjava","sourceNew":"    /** Creates a file of the specified size with sequential data. The first\n     *  byte is written as the start byte provided. All subsequent bytes are\n     *  computed as start + offset where offset is the number of the byte.\n     */\n    private void createSequenceFile(Directory dir,\n                                    String name,\n                                    byte start,\n                                    int size)\n    throws IOException\n    {\n        OutputStream os = dir.createFile(name);\n        for (int i=0; i < size; i++) {\n            os.writeByte(start);\n            start ++;\n        }\n        os.close();\n    }\n\n","sourceOld":"    /** Creates a file of the specified size with sequential data. The first\n     *  byte is written as the start byte provided. All subsequent bytes are\n     *  computed as start + offset where offset is the number of the byte.\n     */\n    private void createSequenceFile(Directory dir, \n                                    String name, \n                                    byte start, \n                                    int size) \n    throws IOException\n    {\n        OutputStream os = dir.createFile(name);\n        for (int i=0; i < size; i++) {\n            os.writeByte(start);\n            start ++;\n        }\n        os.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dda77265180d41bf85c84c995e25eda7b8e1b74d","date":1096395352,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestCompoundFile#createSequenceFile(Directory,String,byte,int).mjava","pathOld":"src/test/org/apache/lucene/index/TestCompoundFile#createSequenceFile(Directory,String,byte,int).mjava","sourceNew":"    /** Creates a file of the specified size with sequential data. The first\n     *  byte is written as the start byte provided. All subsequent bytes are\n     *  computed as start + offset where offset is the number of the byte.\n     */\n    private void createSequenceFile(Directory dir,\n                                    String name,\n                                    byte start,\n                                    int size)\n    throws IOException\n    {\n        IndexOutput os = dir.createOutput(name);\n        for (int i=0; i < size; i++) {\n            os.writeByte(start);\n            start ++;\n        }\n        os.close();\n    }\n\n","sourceOld":"    /** Creates a file of the specified size with sequential data. The first\n     *  byte is written as the start byte provided. All subsequent bytes are\n     *  computed as start + offset where offset is the number of the byte.\n     */\n    private void createSequenceFile(Directory dir,\n                                    String name,\n                                    byte start,\n                                    int size)\n    throws IOException\n    {\n        OutputStream os = dir.createFile(name);\n        for (int i=0; i < size; i++) {\n            os.writeByte(start);\n            start ++;\n        }\n        os.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#createSequenceFile(Directory,String,byte,int).mjava","pathOld":"src/test/org/apache/lucene/index/TestCompoundFile#createSequenceFile(Directory,String,byte,int).mjava","sourceNew":"    /** Creates a file of the specified size with sequential data. The first\n     *  byte is written as the start byte provided. All subsequent bytes are\n     *  computed as start + offset where offset is the number of the byte.\n     */\n    private void createSequenceFile(Directory dir,\n                                    String name,\n                                    byte start,\n                                    int size)\n    throws IOException\n    {\n        IndexOutput os = dir.createOutput(name);\n        for (int i=0; i < size; i++) {\n            os.writeByte(start);\n            start ++;\n        }\n        os.close();\n    }\n\n","sourceOld":"    /** Creates a file of the specified size with sequential data. The first\n     *  byte is written as the start byte provided. All subsequent bytes are\n     *  computed as start + offset where offset is the number of the byte.\n     */\n    private void createSequenceFile(Directory dir,\n                                    String name,\n                                    byte start,\n                                    int size)\n    throws IOException\n    {\n        IndexOutput os = dir.createOutput(name);\n        for (int i=0; i < size; i++) {\n            os.writeByte(start);\n            start ++;\n        }\n        os.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dda77265180d41bf85c84c995e25eda7b8e1b74d":["1acbe60842541f8c38e2d60b03591478c9f91546"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1acbe60842541f8c38e2d60b03591478c9f91546":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["dda77265180d41bf85c84c995e25eda7b8e1b74d"]},"commit2Childs":{"dda77265180d41bf85c84c995e25eda7b8e1b74d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"1acbe60842541f8c38e2d60b03591478c9f91546":["dda77265180d41bf85c84c995e25eda7b8e1b74d"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["1acbe60842541f8c38e2d60b03591478c9f91546"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}