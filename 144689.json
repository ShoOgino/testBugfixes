{"path":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries#verify(Polygon...).mjava","commits":[{"id":"4312aa12218419d320e0966c3f3e72deb359afaa","date":1533146016,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries#verify(Polygon...).mjava","pathOld":"/dev/null","sourceNew":"  private void verify(Polygon... polygons) throws Exception {\n    ArrayList<Polygon2D> poly2d = new ArrayList<>();\n    poly2d.ensureCapacity(polygons.length);\n    // index random polygons; poly2d will contain the Polygon2D objects needed for verification\n    IndexWriter w = indexRandomPolygons(poly2d, polygons);\n    Directory dir = w.getDirectory();\n    final IndexReader reader = DirectoryReader.open(w);\n    // test random bbox queries\n    verifyRandomBBoxQueries(reader, poly2d, polygons);\n    // test random polygon queires\n    verifyRandomPolygonQueries(reader, poly2d, polygons);\n    IOUtils.close(w, reader, dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6345300cb90308ddf9579f7a7396a32d98795311","date":1533248257,"type":4,"author":"Nicholas Knize","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries#verify(Polygon...).mjava","sourceNew":null,"sourceOld":"  private void verify(Polygon... polygons) throws Exception {\n    ArrayList<Polygon2D> poly2d = new ArrayList<>();\n    poly2d.ensureCapacity(polygons.length);\n    // index random polygons; poly2d will contain the Polygon2D objects needed for verification\n    IndexWriter w = indexRandomPolygons(poly2d, polygons);\n    Directory dir = w.getDirectory();\n    final IndexReader reader = DirectoryReader.open(w);\n    // test random bbox queries\n    verifyRandomBBoxQueries(reader, poly2d, polygons);\n    // test random polygon queires\n    verifyRandomPolygonQueries(reader, poly2d, polygons);\n    IOUtils.close(w, reader, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4312aa12218419d320e0966c3f3e72deb359afaa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6345300cb90308ddf9579f7a7396a32d98795311":["4312aa12218419d320e0966c3f3e72deb359afaa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6345300cb90308ddf9579f7a7396a32d98795311"]},"commit2Childs":{"4312aa12218419d320e0966c3f3e72deb359afaa":["6345300cb90308ddf9579f7a7396a32d98795311"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4312aa12218419d320e0966c3f3e72deb359afaa"],"6345300cb90308ddf9579f7a7396a32d98795311":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}