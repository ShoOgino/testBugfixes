{"path":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#nextDoc().mjava","commits":[{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (liveDocs == null || liveDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR.nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"  END\");\n          return docID = NO_MORE_DOCS;\n        }\n        //System.out.println(\"  read doc code\");\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          //System.out.println(\"  read freq\");\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (liveDocs == null || liveDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ed947d41796fd2096684c439e8a9b69aac940cf","date":1321538339,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        accum += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return (docID = accum);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (liveDocs == null || liveDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        accum += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return (docID = accum);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        accum += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return (docID = accum);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1ed947d41796fd2096684c439e8a9b69aac940cf":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["1ed947d41796fd2096684c439e8a9b69aac940cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["1ed947d41796fd2096684c439e8a9b69aac940cf"],"1ed947d41796fd2096684c439e8a9b69aac940cf":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}