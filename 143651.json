{"path":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/FuzzyLikeThisQueryBuilder#getQuery(Element).mjava","commits":[{"id":"d3c3c2404d1200c39220fa15054fae854db4e1ee","date":1140827958,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/FuzzyLikeThisQueryBuilder#getQuery(Element).mjava","pathOld":"/dev/null","sourceNew":"\tpublic Query getQuery(Element e) throws ParserException\r\n\t{\r\n\t\tNodeList nl = e.getElementsByTagName(\"Field\");\r\n\t\tint maxNumTerms=DOMUtils.getAttribute(e,\"maxNumTerms\",defaultMaxNumTerms);\r\n\t\tFuzzyLikeThisQuery fbq=new FuzzyLikeThisQuery(maxNumTerms,analyzer);\r\n\t\tfbq.setIgnoreTF(DOMUtils.getAttribute(e,\"ignoreTF\",defaultIgnoreTF));\r\n\t\tfor(int i=0;i<nl.getLength();i++)\r\n\t\t{\r\n\t\t\tElement fieldElem=(Element) nl.item(i);\r\n\t\t\tfloat minSimilarity=DOMUtils.getAttribute(fieldElem,\"minSimilarity\",defaultMinSimilarity);\r\n\t\t\tint prefixLength=DOMUtils.getAttribute(fieldElem,\"prefixLength\",defaultPrefixLength);\r\n\t\t\tString fieldName=DOMUtils.getAttributeWithInheritance(fieldElem,\"fieldName\");\r\n\t\t\t\r\n\t\t\tString value=DOMUtils.getText(fieldElem);\r\n\t\t\tfbq.addTerms(value,fieldName,minSimilarity,prefixLength);\r\n\t\t}\r\n\t\tfbq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\r\n\r\n\t\treturn fbq;\r\n\t}\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a361a621b184d9b73c9c9a37323a9845b8f8260","date":1226370946,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/FuzzyLikeThisQueryBuilder#getQuery(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/FuzzyLikeThisQueryBuilder#getQuery(Element).mjava","sourceNew":"\tpublic Query getQuery(Element e) throws ParserException\n\t{\n\t\tNodeList nl = e.getElementsByTagName(\"Field\");\n\t\tint maxNumTerms=DOMUtils.getAttribute(e,\"maxNumTerms\",defaultMaxNumTerms);\n\t\tFuzzyLikeThisQuery fbq=new FuzzyLikeThisQuery(maxNumTerms,analyzer);\n\t\tfbq.setIgnoreTF(DOMUtils.getAttribute(e,\"ignoreTF\",defaultIgnoreTF));\n\t\tfor(int i=0;i<nl.getLength();i++)\n\t\t{\n\t\t\tElement fieldElem=(Element) nl.item(i);\n\t\t\tfloat minSimilarity=DOMUtils.getAttribute(fieldElem,\"minSimilarity\",defaultMinSimilarity);\n\t\t\tint prefixLength=DOMUtils.getAttribute(fieldElem,\"prefixLength\",defaultPrefixLength);\n\t\t\tString fieldName=DOMUtils.getAttributeWithInheritance(fieldElem,\"fieldName\");\n\t\t\t\n\t\t\tString value=DOMUtils.getText(fieldElem);\n\t\t\tfbq.addTerms(value,fieldName,minSimilarity,prefixLength);\n\t\t}\n\t\tfbq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\n\n\t\treturn fbq;\n\t}\n\n","sourceOld":"\tpublic Query getQuery(Element e) throws ParserException\r\n\t{\r\n\t\tNodeList nl = e.getElementsByTagName(\"Field\");\r\n\t\tint maxNumTerms=DOMUtils.getAttribute(e,\"maxNumTerms\",defaultMaxNumTerms);\r\n\t\tFuzzyLikeThisQuery fbq=new FuzzyLikeThisQuery(maxNumTerms,analyzer);\r\n\t\tfbq.setIgnoreTF(DOMUtils.getAttribute(e,\"ignoreTF\",defaultIgnoreTF));\r\n\t\tfor(int i=0;i<nl.getLength();i++)\r\n\t\t{\r\n\t\t\tElement fieldElem=(Element) nl.item(i);\r\n\t\t\tfloat minSimilarity=DOMUtils.getAttribute(fieldElem,\"minSimilarity\",defaultMinSimilarity);\r\n\t\t\tint prefixLength=DOMUtils.getAttribute(fieldElem,\"prefixLength\",defaultPrefixLength);\r\n\t\t\tString fieldName=DOMUtils.getAttributeWithInheritance(fieldElem,\"fieldName\");\r\n\t\t\t\r\n\t\t\tString value=DOMUtils.getText(fieldElem);\r\n\t\t\tfbq.addTerms(value,fieldName,minSimilarity,prefixLength);\r\n\t\t}\r\n\t\tfbq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\r\n\r\n\t\treturn fbq;\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/FuzzyLikeThisQueryBuilder#getQuery(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/FuzzyLikeThisQueryBuilder#getQuery(Element).mjava","sourceNew":"\tpublic Query getQuery(Element e) throws ParserException\n\t{\n\t\tNodeList nl = e.getElementsByTagName(\"Field\");\n\t\tint maxNumTerms=DOMUtils.getAttribute(e,\"maxNumTerms\",defaultMaxNumTerms);\n\t\tFuzzyLikeThisQuery fbq=new FuzzyLikeThisQuery(maxNumTerms,analyzer);\n\t\tfbq.setIgnoreTF(DOMUtils.getAttribute(e,\"ignoreTF\",defaultIgnoreTF));\n\t\tfor(int i=0;i<nl.getLength();i++)\n\t\t{\n\t\t\tElement fieldElem=(Element) nl.item(i);\n\t\t\tfloat minSimilarity=DOMUtils.getAttribute(fieldElem,\"minSimilarity\",defaultMinSimilarity);\n\t\t\tint prefixLength=DOMUtils.getAttribute(fieldElem,\"prefixLength\",defaultPrefixLength);\n\t\t\tString fieldName=DOMUtils.getAttributeWithInheritance(fieldElem,\"fieldName\");\n\t\t\t\n\t\t\tString value=DOMUtils.getText(fieldElem);\n\t\t\tfbq.addTerms(value,fieldName,minSimilarity,prefixLength);\n\t\t}\n\t\tfbq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\n\n\t\treturn fbq;\n\t}\n\n","sourceOld":"\tpublic Query getQuery(Element e) throws ParserException\n\t{\n\t\tNodeList nl = e.getElementsByTagName(\"Field\");\n\t\tint maxNumTerms=DOMUtils.getAttribute(e,\"maxNumTerms\",defaultMaxNumTerms);\n\t\tFuzzyLikeThisQuery fbq=new FuzzyLikeThisQuery(maxNumTerms,analyzer);\n\t\tfbq.setIgnoreTF(DOMUtils.getAttribute(e,\"ignoreTF\",defaultIgnoreTF));\n\t\tfor(int i=0;i<nl.getLength();i++)\n\t\t{\n\t\t\tElement fieldElem=(Element) nl.item(i);\n\t\t\tfloat minSimilarity=DOMUtils.getAttribute(fieldElem,\"minSimilarity\",defaultMinSimilarity);\n\t\t\tint prefixLength=DOMUtils.getAttribute(fieldElem,\"prefixLength\",defaultPrefixLength);\n\t\t\tString fieldName=DOMUtils.getAttributeWithInheritance(fieldElem,\"fieldName\");\n\t\t\t\n\t\t\tString value=DOMUtils.getText(fieldElem);\n\t\t\tfbq.addTerms(value,fieldName,minSimilarity,prefixLength);\n\t\t}\n\t\tfbq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\n\n\t\treturn fbq;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6a361a621b184d9b73c9c9a37323a9845b8f8260"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}