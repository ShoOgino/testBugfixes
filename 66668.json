{"path":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#waitInBackground(String,long,TimeUnit,CollectionStatePredicate).mjava","commits":[{"id":"5b4df85b7268ca40452d6c01343d8eb00ed1f70a","date":1463171656,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#waitInBackground(String,long,TimeUnit,CollectionStatePredicate).mjava","pathOld":"/dev/null","sourceNew":"  private static Future<Boolean> waitInBackground(String collection, long timeout, TimeUnit unit,\n                                                  CollectionStatePredicate predicate) {\n    return executor.submit(() -> {\n      try {\n        cluster.getSolrClient().waitForState(collection, timeout, unit, predicate);\n      } catch (InterruptedException | TimeoutException e) {\n        return Boolean.FALSE;\n      }\n      return Boolean.TRUE;\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#waitInBackground(String,long,TimeUnit,CollectionStatePredicate).mjava","pathOld":"/dev/null","sourceNew":"  private static Future<Boolean> waitInBackground(String collection, long timeout, TimeUnit unit,\n                                                  CollectionStatePredicate predicate) {\n    return executor.submit(() -> {\n      try {\n        cluster.getSolrClient().waitForState(collection, timeout, unit, predicate);\n      } catch (InterruptedException | TimeoutException e) {\n        return Boolean.FALSE;\n      }\n      return Boolean.TRUE;\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#waitInBackground(String,long,TimeUnit,CollectionStatePredicate).mjava","pathOld":"/dev/null","sourceNew":"  private static Future<Boolean> waitInBackground(String collection, long timeout, TimeUnit unit,\n                                                  CollectionStatePredicate predicate) {\n    return executor.submit(() -> {\n      try {\n        cluster.getSolrClient().waitForState(collection, timeout, unit, predicate);\n      } catch (InterruptedException | TimeoutException e) {\n        return Boolean.FALSE;\n      }\n      return Boolean.TRUE;\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#waitInBackground(String,long,TimeUnit,CollectionStatePredicate).mjava","pathOld":"/dev/null","sourceNew":"  private static Future<Boolean> waitInBackground(String collection, long timeout, TimeUnit unit,\n                                                  CollectionStatePredicate predicate) {\n    return executor.submit(() -> {\n      try {\n        cluster.getSolrClient().waitForState(collection, timeout, unit, predicate);\n      } catch (InterruptedException | TimeoutException e) {\n        return Boolean.FALSE;\n      }\n      return Boolean.TRUE;\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad2010e2591e2d11678b59291d2ab31bd30e3ac7","date":1559150835,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#waitInBackground(String,long,TimeUnit,CollectionStatePredicate).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#waitInBackground(String,long,TimeUnit,CollectionStatePredicate).mjava","sourceNew":"  private Future<Boolean> waitInBackground(String collection, long timeout, TimeUnit unit,\n                                                  CollectionStatePredicate predicate) {\n    return executor.submit(() -> {\n      try {\n        cluster.getSolrClient().waitForState(collection, timeout, unit, predicate);\n      } catch (InterruptedException | TimeoutException e) {\n        return Boolean.FALSE;\n      }\n      return Boolean.TRUE;\n    });\n  }\n\n","sourceOld":"  private static Future<Boolean> waitInBackground(String collection, long timeout, TimeUnit unit,\n                                                  CollectionStatePredicate predicate) {\n    return executor.submit(() -> {\n      try {\n        cluster.getSolrClient().waitForState(collection, timeout, unit, predicate);\n      } catch (InterruptedException | TimeoutException e) {\n        return Boolean.FALSE;\n      }\n      return Boolean.TRUE;\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58af973abe9f7c0faa777c1a6285fc7f72c171c5","date":1559329541,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#waitInBackground(String,long,TimeUnit,CollectionStatePredicate).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#waitInBackground(String,long,TimeUnit,CollectionStatePredicate).mjava","sourceNew":"  private Future<Boolean> waitInBackground(String collection, long timeout, TimeUnit unit,\n                                                  CollectionStatePredicate predicate) {\n    return executor.submit(() -> {\n      try {\n        cluster.getSolrClient().waitForState(collection, timeout, unit, predicate);\n      } catch (InterruptedException | TimeoutException e) {\n        return Boolean.FALSE;\n      }\n      return Boolean.TRUE;\n    });\n  }\n\n","sourceOld":"  private static Future<Boolean> waitInBackground(String collection, long timeout, TimeUnit unit,\n                                                  CollectionStatePredicate predicate) {\n    return executor.submit(() -> {\n      try {\n        cluster.getSolrClient().waitForState(collection, timeout, unit, predicate);\n      } catch (InterruptedException | TimeoutException e) {\n        return Boolean.FALSE;\n      }\n      return Boolean.TRUE;\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":["d470c8182e92b264680e34081b75e70a9f2b3c89","ad2010e2591e2d11678b59291d2ab31bd30e3ac7"],"ad2010e2591e2d11678b59291d2ab31bd30e3ac7":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"0ad30c6a479e764150a3316e57263319775f1df2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5b4df85b7268ca40452d6c01343d8eb00ed1f70a"],"5b4df85b7268ca40452d6c01343d8eb00ed1f70a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad2010e2591e2d11678b59291d2ab31bd30e3ac7"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ad30c6a479e764150a3316e57263319775f1df2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ad30c6a479e764150a3316e57263319775f1df2","5b4df85b7268ca40452d6c01343d8eb00ed1f70a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":[],"ad2010e2591e2d11678b59291d2ab31bd30e3ac7":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"5b4df85b7268ca40452d6c01343d8eb00ed1f70a":["0ad30c6a479e764150a3316e57263319775f1df2"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","ad2010e2591e2d11678b59291d2ab31bd30e3ac7","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}