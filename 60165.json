{"path":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesStandalone#testDVUpdatesWithDelete().mjava","commits":[{"id":"415bbbe7da8065dd3c477bdc3c703c6425622998","date":1485393793,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesStandalone#testDVUpdatesWithDelete().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDVUpdatesWithDelete() throws Exception {\n    long version1 = 0;\n\n    for (boolean postAddCommit : Arrays.asList(true, false)) {\n      for (boolean delById : Arrays.asList(true, false)) {\n        for (boolean postDelCommit : Arrays.asList(true, false)) {\n          addAndGetVersion(sdoc(\"id\", \"1\", \"title_s\", \"first\"), params());\n          if (postAddCommit) assertU(commit());\n          assertU(delById ? delI(\"1\") : delQ(\"id:1\"));\n          if (postDelCommit) assertU(commit());\n          version1 = addAndGetVersion(sdoc(\"id\", \"1\", \"inplace_updatable_float\", map(\"set\", 200)), params());\n          // assert current doc#1 doesn't have old value of \"title_s\"\n          assertU(commit());\n          assertQ(req(\"q\", \"title_s:first\", \"sort\", \"id asc\", \"fl\", \"*,[docid]\"),\n              \"//*[@numFound='0']\");\n        }\n      }\n    }\n\n    // Update to recently deleted (or non-existent) document with a \"set\" on updatable \n    // field should succeed, since it is executed internally as a full update\n    // because AUDM.doInPlaceUpdateMerge() returns false\n    assertU(random().nextBoolean()? delI(\"1\"): delQ(\"id:1\"));\n    if (random().nextBoolean()) assertU(commit());\n    addAndAssertVersion(version1, \"id\", \"1\", \"inplace_updatable_float\", map(\"set\", 200));\n    assertU(commit());\n    assertQ(req(\"q\", \"id:1\", \"sort\", \"id asc\", \"fl\", \"*\"),\n        \"//*[@numFound='1']\",\n        \"//result/doc[1]/float[@name='inplace_updatable_float'][.='200.0']\");\n\n    // Another \"set\" on the same field should be an in-place update \n    int docid1 = getDocId(\"1\");\n    addAndAssertVersion(version1, \"id\", \"1\", \"inplace_updatable_float\", map(\"set\", 300));\n    assertU(commit());\n    assertQ(req(\"q\", \"id:1\", \"fl\", \"*,[docid]\"),\n        \"//result/doc[1]/float[@name='inplace_updatable_float'][.='300.0']\",\n        \"//result/doc[1]/int[@name='[docid]'][.='\"+docid1+\"']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"598b5d23aa7c9732bf473c21a9cd309c44599394","date":1485530378,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesStandalone#testDVUpdatesWithDelete().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDVUpdatesWithDelete() throws Exception {\n    long version1 = 0;\n\n    for (boolean postAddCommit : Arrays.asList(true, false)) {\n      for (boolean delById : Arrays.asList(true, false)) {\n        for (boolean postDelCommit : Arrays.asList(true, false)) {\n          addAndGetVersion(sdoc(\"id\", \"1\", \"title_s\", \"first\"), params());\n          if (postAddCommit) assertU(commit());\n          assertU(delById ? delI(\"1\") : delQ(\"id:1\"));\n          if (postDelCommit) assertU(commit());\n          version1 = addAndGetVersion(sdoc(\"id\", \"1\", \"inplace_updatable_float\", map(\"set\", 200)), params());\n          // assert current doc#1 doesn't have old value of \"title_s\"\n          assertU(commit());\n          assertQ(req(\"q\", \"title_s:first\", \"sort\", \"id asc\", \"fl\", \"*,[docid]\"),\n              \"//*[@numFound='0']\");\n        }\n      }\n    }\n\n    // Update to recently deleted (or non-existent) document with a \"set\" on updatable \n    // field should succeed, since it is executed internally as a full update\n    // because AUDM.doInPlaceUpdateMerge() returns false\n    assertU(random().nextBoolean()? delI(\"1\"): delQ(\"id:1\"));\n    if (random().nextBoolean()) assertU(commit());\n    addAndAssertVersion(version1, \"id\", \"1\", \"inplace_updatable_float\", map(\"set\", 200));\n    assertU(commit());\n    assertQ(req(\"q\", \"id:1\", \"sort\", \"id asc\", \"fl\", \"*\"),\n        \"//*[@numFound='1']\",\n        \"//result/doc[1]/float[@name='inplace_updatable_float'][.='200.0']\");\n\n    // Another \"set\" on the same field should be an in-place update \n    int docid1 = getDocId(\"1\");\n    addAndAssertVersion(version1, \"id\", \"1\", \"inplace_updatable_float\", map(\"set\", 300));\n    assertU(commit());\n    assertQ(req(\"q\", \"id:1\", \"fl\", \"*,[docid]\"),\n        \"//result/doc[1]/float[@name='inplace_updatable_float'][.='300.0']\",\n        \"//result/doc[1]/int[@name='[docid]'][.='\"+docid1+\"']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"598b5d23aa7c9732bf473c21a9cd309c44599394":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","415bbbe7da8065dd3c477bdc3c703c6425622998"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["415bbbe7da8065dd3c477bdc3c703c6425622998"]},"commit2Childs":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"598b5d23aa7c9732bf473c21a9cd309c44599394":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["415bbbe7da8065dd3c477bdc3c703c6425622998","598b5d23aa7c9732bf473c21a9cd309c44599394"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}