{"path":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","sourceNew":"  private void addDoc(RandomIndexWriter w, Collection<String> terms, Map<BytesRef,Integer> termToID, int id) throws IOException {\n    Document doc = new Document();\n    doc.add(new NumericField(\"id\", id));\n    if (VERBOSE) {\n      System.out.println(\"TEST: addDoc id:\" + id + \" terms=\" + terms);\n    }\n    for (String s2 : terms) {\n      doc.add(newField(\"f\", s2, StringField.TYPE_UNSTORED));\n      termToID.put(new BytesRef(s2), id);\n    }\n    w.addDocument(doc);\n    terms.clear();\n  }\n\n","sourceOld":"  private void addDoc(RandomIndexWriter w, Collection<String> terms, Map<BytesRef,Integer> termToID, int id) throws IOException {\n    Document doc = new Document();\n    doc.add(new NumericField(\"id\", id));\n    if (VERBOSE) {\n      System.out.println(\"TEST: addDoc id:\" + id + \" terms=\" + terms);\n    }\n    for (String s2 : terms) {\n      doc.add(newField(\"f\", s2, StringField.TYPE_UNSTORED));\n      termToID.put(new BytesRef(s2), id);\n    }\n    w.addDocument(doc);\n    terms.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a78a90fc9701e511308346ea29f4f5e548bb39fe","date":1329489995,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","sourceNew":"  private void addDoc(RandomIndexWriter w, Collection<String> terms, Map<BytesRef,Integer> termToID, int id) throws IOException {\n    Document doc = new Document();\n    doc.add(new IntField(\"id\", id));\n    if (VERBOSE) {\n      System.out.println(\"TEST: addDoc id:\" + id + \" terms=\" + terms);\n    }\n    for (String s2 : terms) {\n      doc.add(newField(\"f\", s2, StringField.TYPE_UNSTORED));\n      termToID.put(new BytesRef(s2), id);\n    }\n    w.addDocument(doc);\n    terms.clear();\n  }\n\n","sourceOld":"  private void addDoc(RandomIndexWriter w, Collection<String> terms, Map<BytesRef,Integer> termToID, int id) throws IOException {\n    Document doc = new Document();\n    doc.add(new NumericField(\"id\", id));\n    if (VERBOSE) {\n      System.out.println(\"TEST: addDoc id:\" + id + \" terms=\" + terms);\n    }\n    for (String s2 : terms) {\n      doc.add(newField(\"f\", s2, StringField.TYPE_UNSTORED));\n      termToID.put(new BytesRef(s2), id);\n    }\n    w.addDocument(doc);\n    terms.clear();\n  }\n\n","bugFix":["fa0f44f887719e97183771e977cfc4bfb485b766"],"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","sourceNew":"  private void addDoc(RandomIndexWriter w, Collection<String> terms, Map<BytesRef,Integer> termToID, int id) throws IOException {\n    Document doc = new Document();\n    doc.add(new IntField(\"id\", id, Field.Store.NO));\n    if (VERBOSE) {\n      System.out.println(\"TEST: addDoc id:\" + id + \" terms=\" + terms);\n    }\n    for (String s2 : terms) {\n      doc.add(newStringField(\"f\", s2, Field.Store.NO));\n      termToID.put(new BytesRef(s2), id);\n    }\n    w.addDocument(doc);\n    terms.clear();\n  }\n\n","sourceOld":"  private void addDoc(RandomIndexWriter w, Collection<String> terms, Map<BytesRef,Integer> termToID, int id) throws IOException {\n    Document doc = new Document();\n    doc.add(new IntField(\"id\", id));\n    if (VERBOSE) {\n      System.out.println(\"TEST: addDoc id:\" + id + \" terms=\" + terms);\n    }\n    for (String s2 : terms) {\n      doc.add(newField(\"f\", s2, StringField.TYPE_UNSTORED));\n      termToID.put(new BytesRef(s2), id);\n    }\n    w.addDocument(doc);\n    terms.clear();\n  }\n\n","bugFix":["a78a90fc9701e511308346ea29f4f5e548bb39fe","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4","date":1341839195,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","sourceNew":"  private void addDoc(RandomIndexWriter w, Collection<String> terms, Map<BytesRef,Integer> termToID, int id) throws IOException {\n    Document doc = new Document();\n    doc.add(new IntField(\"id\", id, Field.Store.YES));\n    if (VERBOSE) {\n      System.out.println(\"TEST: addDoc id:\" + id + \" terms=\" + terms);\n    }\n    for (String s2 : terms) {\n      doc.add(newStringField(\"f\", s2, Field.Store.NO));\n      termToID.put(new BytesRef(s2), id);\n    }\n    w.addDocument(doc);\n    terms.clear();\n  }\n\n","sourceOld":"  private void addDoc(RandomIndexWriter w, Collection<String> terms, Map<BytesRef,Integer> termToID, int id) throws IOException {\n    Document doc = new Document();\n    doc.add(new IntField(\"id\", id, Field.Store.NO));\n    if (VERBOSE) {\n      System.out.println(\"TEST: addDoc id:\" + id + \" terms=\" + terms);\n    }\n    for (String s2 : terms) {\n      doc.add(newStringField(\"f\", s2, Field.Store.NO));\n      termToID.put(new BytesRef(s2), id);\n    }\n    w.addDocument(doc);\n    terms.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","sourceNew":"  private void addDoc(RandomIndexWriter w, Collection<String> terms, Map<BytesRef,Integer> termToID, int id) throws IOException {\n    Document doc = new Document();\n    doc.add(new IntField(\"id\", id, Field.Store.YES));\n    if (VERBOSE) {\n      System.out.println(\"TEST: addDoc id:\" + id + \" terms=\" + terms);\n    }\n    for (String s2 : terms) {\n      doc.add(newStringField(\"f\", s2, Field.Store.NO));\n      termToID.put(new BytesRef(s2), id);\n    }\n    w.addDocument(doc);\n    terms.clear();\n  }\n\n","sourceOld":"  private void addDoc(RandomIndexWriter w, Collection<String> terms, Map<BytesRef,Integer> termToID, int id) throws IOException {\n    Document doc = new Document();\n    doc.add(new IntField(\"id\", id, Field.Store.NO));\n    if (VERBOSE) {\n      System.out.println(\"TEST: addDoc id:\" + id + \" terms=\" + terms);\n    }\n    for (String s2 : terms) {\n      doc.add(newStringField(\"f\", s2, Field.Store.NO));\n      termToID.put(new BytesRef(s2), id);\n    }\n    w.addDocument(doc);\n    terms.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","sourceNew":"  private void addDoc(RandomIndexWriter w, Collection<String> terms, Map<BytesRef,Integer> termToID, int id) throws IOException {\n    Document doc = new Document();\n    doc.add(new IntField(\"id\", id, Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"id\", id));\n    if (VERBOSE) {\n      System.out.println(\"TEST: addDoc id:\" + id + \" terms=\" + terms);\n    }\n    for (String s2 : terms) {\n      doc.add(newStringField(\"f\", s2, Field.Store.NO));\n      termToID.put(new BytesRef(s2), id);\n    }\n    w.addDocument(doc);\n    terms.clear();\n  }\n\n","sourceOld":"  private void addDoc(RandomIndexWriter w, Collection<String> terms, Map<BytesRef,Integer> termToID, int id) throws IOException {\n    Document doc = new Document();\n    doc.add(new IntField(\"id\", id, Field.Store.YES));\n    if (VERBOSE) {\n      System.out.println(\"TEST: addDoc id:\" + id + \" terms=\" + terms);\n    }\n    for (String s2 : terms) {\n      doc.add(newStringField(\"f\", s2, Field.Store.NO));\n      termToID.put(new BytesRef(s2), id);\n    }\n    w.addDocument(doc);\n    terms.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","sourceNew":"  private void addDoc(RandomIndexWriter w, Collection<String> terms, Map<BytesRef,Integer> termToID, int id) throws IOException {\n    Document doc = new Document();\n    doc.add(new IntField(\"id\", id, Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"id\", id));\n    if (VERBOSE) {\n      System.out.println(\"TEST: addDoc id:\" + id + \" terms=\" + terms);\n    }\n    for (String s2 : terms) {\n      doc.add(newStringField(\"f\", s2, Field.Store.NO));\n      termToID.put(new BytesRef(s2), id);\n    }\n    w.addDocument(doc);\n    terms.clear();\n  }\n\n","sourceOld":"  private void addDoc(RandomIndexWriter w, Collection<String> terms, Map<BytesRef,Integer> termToID, int id) throws IOException {\n    Document doc = new Document();\n    doc.add(new IntField(\"id\", id, Field.Store.YES));\n    if (VERBOSE) {\n      System.out.println(\"TEST: addDoc id:\" + id + \" terms=\" + terms);\n    }\n    for (String s2 : terms) {\n      doc.add(newStringField(\"f\", s2, Field.Store.NO));\n      termToID.put(new BytesRef(s2), id);\n    }\n    w.addDocument(doc);\n    terms.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","sourceNew":"  private void addDoc(RandomIndexWriter w, Collection<String> terms, Map<BytesRef,Integer> termToID, int id) throws IOException {\n    Document doc = new Document();\n    doc.add(new IntField(\"id\", id, Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"id\", id));\n    if (VERBOSE) {\n      System.out.println(\"TEST: addDoc id:\" + id + \" terms=\" + terms);\n    }\n    for (String s2 : terms) {\n      doc.add(newStringField(\"f\", s2, Field.Store.NO));\n      termToID.put(new BytesRef(s2), id);\n    }\n    w.addDocument(doc);\n    terms.clear();\n  }\n\n","sourceOld":"  private void addDoc(RandomIndexWriter w, Collection<String> terms, Map<BytesRef,Integer> termToID, int id) throws IOException {\n    Document doc = new Document();\n    doc.add(new IntField(\"id\", id, Field.Store.YES));\n    if (VERBOSE) {\n      System.out.println(\"TEST: addDoc id:\" + id + \" terms=\" + terms);\n    }\n    for (String s2 : terms) {\n      doc.add(newStringField(\"f\", s2, Field.Store.NO));\n      termToID.put(new BytesRef(s2), id);\n    }\n    w.addDocument(doc);\n    terms.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#addDoc(RandomIndexWriter,Collection[String],Map[BytesRef,Integer],int).mjava","sourceNew":"  private void addDoc(RandomIndexWriter w, Collection<String> terms, Map<BytesRef,Integer> termToID, int id) throws IOException {\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"id\", id));\n    if (VERBOSE) {\n      System.out.println(\"TEST: addDoc id:\" + id + \" terms=\" + terms);\n    }\n    for (String s2 : terms) {\n      doc.add(newStringField(\"f\", s2, Field.Store.NO));\n      termToID.put(new BytesRef(s2), id);\n    }\n    w.addDocument(doc);\n    terms.clear();\n  }\n\n","sourceOld":"  private void addDoc(RandomIndexWriter w, Collection<String> terms, Map<BytesRef,Integer> termToID, int id) throws IOException {\n    Document doc = new Document();\n    doc.add(new IntField(\"id\", id, Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"id\", id));\n    if (VERBOSE) {\n      System.out.println(\"TEST: addDoc id:\" + id + \" terms=\" + terms);\n    }\n    for (String s2 : terms) {\n      doc.add(newStringField(\"f\", s2, Field.Store.NO));\n      termToID.put(new BytesRef(s2), id);\n    }\n    w.addDocument(doc);\n    terms.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"a78a90fc9701e511308346ea29f4f5e548bb39fe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"1d028314cced5858683a1bb4741423d0f934257b":["04f07771a2a7dd3a395700665ed839c3dae2def2","8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["1d028314cced5858683a1bb4741423d0f934257b","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["1d028314cced5858683a1bb4741423d0f934257b"],"56572ec06f1407c066d6b7399413178b33176cd8":["1d028314cced5858683a1bb4741423d0f934257b","93dd449115a9247533e44bab47e8429e5dccbc6d"],"770342641f7b505eaa8dccdc666158bff2419109":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["770342641f7b505eaa8dccdc666158bff2419109"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4","1d028314cced5858683a1bb4741423d0f934257b"],"a78a90fc9701e511308346ea29f4f5e548bb39fe":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["1d028314cced5858683a1bb4741423d0f934257b"],"1d028314cced5858683a1bb4741423d0f934257b":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","770342641f7b505eaa8dccdc666158bff2419109"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"770342641f7b505eaa8dccdc666158bff2419109":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}