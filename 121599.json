{"path":"solr/core/src/java/org/apache/solr/handler/export/PriorityQueue#downHeap().mjava","commits":[{"id":"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80","date":1532111887,"type":0,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/export/PriorityQueue#downHeap().mjava","pathOld":"/dev/null","sourceNew":"  private final void downHeap() {\n    int i = 1;\n    T node = heap[i];          // save top node\n    int j = i << 1;            // find smaller child\n    int k = j + 1;\n    if (k <= size && lessThan(heap[k], heap[j])) {\n      j = k;\n    }\n    while (j <= size && lessThan(heap[j], node)) {\n      heap[i] = heap[j];       // shift up child\n      i = j;\n      j = i << 1;\n      k = j + 1;\n      if (k <= size && lessThan(heap[k], heap[j])) {\n        j = k;\n      }\n    }\n    heap[i] = node;            // install saved node\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee","date":1593704090,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/export/SortQueue#downHeap().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/export/PriorityQueue#downHeap().mjava","sourceNew":"  private final void downHeap() {\n    int i = 1;\n    SortDoc node = heap[i];          // save top node\n    int j = i << 1;            // find smaller child\n    int k = j + 1;\n    if (k <= size && lessThan(heap[k], heap[j])) {\n      j = k;\n    }\n    while (j <= size && lessThan(heap[j], node)) {\n      heap[i] = heap[j];       // shift up child\n      i = j;\n      j = i << 1;\n      k = j + 1;\n      if (k <= size && lessThan(heap[k], heap[j])) {\n        j = k;\n      }\n    }\n    heap[i] = node;            // install saved node\n  }\n\n","sourceOld":"  private final void downHeap() {\n    int i = 1;\n    T node = heap[i];          // save top node\n    int j = i << 1;            // find smaller child\n    int k = j + 1;\n    if (k <= size && lessThan(heap[k], heap[j])) {\n      j = k;\n    }\n    while (j <= size && lessThan(heap[j], node)) {\n      heap[i] = heap[j];       // shift up child\n      i = j;\n      j = i << 1;\n      k = j + 1;\n      if (k <= size && lessThan(heap[k], heap[j])) {\n        j = k;\n      }\n    }\n    heap[i] = node;            // install saved node\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee":["16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80"],"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee"]},"commit2Childs":{"1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80":["1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}