{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestLRUHashMap#testLRU().mjava","commits":[{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestLRUHashMap#testLRU().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/collections/TestLRUHashMap#testLRU().mjava","sourceNew":"  // testLRU() tests that the specified size limit is indeed honored, and\n  // the remaining objects in the map are indeed those that have been most\n  // recently used\n  @Test\n  public void testLRU() throws Exception {\n    LRUHashMap<String, String> lru = new LRUHashMap<String, String>(3);\n    assertEquals(0, lru.size());\n    lru.put(\"one\", \"Hello world\");\n    assertEquals(1, lru.size());\n    lru.put(\"two\", \"Hi man\");\n    assertEquals(2, lru.size());\n    lru.put(\"three\", \"Bonjour\");\n    assertEquals(3, lru.size());\n    lru.put(\"four\", \"Shalom\");\n    assertEquals(3, lru.size());\n    assertNotNull(lru.get(\"three\"));\n    assertNotNull(lru.get(\"two\"));\n    assertNotNull(lru.get(\"four\"));\n    assertNull(lru.get(\"one\"));\n    lru.put(\"five\", \"Yo!\");\n    assertEquals(3, lru.size());\n    assertNull(lru.get(\"three\")); // three was last used, so it got removed\n    assertNotNull(lru.get(\"five\"));\n    lru.get(\"four\");\n    lru.put(\"six\", \"hi\");\n    lru.put(\"seven\", \"hey dude\");\n    assertEquals(3, lru.size());\n    assertNull(lru.get(\"one\"));\n    assertNull(lru.get(\"two\"));\n    assertNull(lru.get(\"three\"));\n    assertNotNull(lru.get(\"four\"));\n    assertNull(lru.get(\"five\"));\n    assertNotNull(lru.get(\"six\"));\n    assertNotNull(lru.get(\"seven\"));\n  }\n\n","sourceOld":"  // testLRU() tests that the specified size limit is indeed honored, and\n  // the remaining objects in the map are indeed those that have been most\n  // recently used\n  @Test\n  public void testLRU() throws Exception {\n    LRUHashMap<String, String> lru = new LRUHashMap<String, String>(3);\n    assertEquals(0, lru.size());\n    lru.put(\"one\", \"Hello world\");\n    assertEquals(1, lru.size());\n    lru.put(\"two\", \"Hi man\");\n    assertEquals(2, lru.size());\n    lru.put(\"three\", \"Bonjour\");\n    assertEquals(3, lru.size());\n    lru.put(\"four\", \"Shalom\");\n    assertEquals(3, lru.size());\n    assertNotNull(lru.get(\"three\"));\n    assertNotNull(lru.get(\"two\"));\n    assertNotNull(lru.get(\"four\"));\n    assertNull(lru.get(\"one\"));\n    lru.put(\"five\", \"Yo!\");\n    assertEquals(3, lru.size());\n    assertNull(lru.get(\"three\")); // three was last used, so it got removed\n    assertNotNull(lru.get(\"five\"));\n    lru.get(\"four\");\n    lru.put(\"six\", \"hi\");\n    lru.put(\"seven\", \"hey dude\");\n    assertEquals(3, lru.size());\n    assertNull(lru.get(\"one\"));\n    assertNull(lru.get(\"two\"));\n    assertNull(lru.get(\"three\"));\n    assertNotNull(lru.get(\"four\"));\n    assertNull(lru.get(\"five\"));\n    assertNotNull(lru.get(\"six\"));\n    assertNotNull(lru.get(\"seven\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestLRUHashMap#testLRU().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/collections/TestLRUHashMap#testLRU().mjava","sourceNew":"  // testLRU() tests that the specified size limit is indeed honored, and\n  // the remaining objects in the map are indeed those that have been most\n  // recently used\n  @Test\n  public void testLRU() throws Exception {\n    LRUHashMap<String, String> lru = new LRUHashMap<String, String>(3);\n    assertEquals(0, lru.size());\n    lru.put(\"one\", \"Hello world\");\n    assertEquals(1, lru.size());\n    lru.put(\"two\", \"Hi man\");\n    assertEquals(2, lru.size());\n    lru.put(\"three\", \"Bonjour\");\n    assertEquals(3, lru.size());\n    lru.put(\"four\", \"Shalom\");\n    assertEquals(3, lru.size());\n    assertNotNull(lru.get(\"three\"));\n    assertNotNull(lru.get(\"two\"));\n    assertNotNull(lru.get(\"four\"));\n    assertNull(lru.get(\"one\"));\n    lru.put(\"five\", \"Yo!\");\n    assertEquals(3, lru.size());\n    assertNull(lru.get(\"three\")); // three was last used, so it got removed\n    assertNotNull(lru.get(\"five\"));\n    lru.get(\"four\");\n    lru.put(\"six\", \"hi\");\n    lru.put(\"seven\", \"hey dude\");\n    assertEquals(3, lru.size());\n    assertNull(lru.get(\"one\"));\n    assertNull(lru.get(\"two\"));\n    assertNull(lru.get(\"three\"));\n    assertNotNull(lru.get(\"four\"));\n    assertNull(lru.get(\"five\"));\n    assertNotNull(lru.get(\"six\"));\n    assertNotNull(lru.get(\"seven\"));\n  }\n\n","sourceOld":"  // testLRU() tests that the specified size limit is indeed honored, and\n  // the remaining objects in the map are indeed those that have been most\n  // recently used\n  @Test\n  public void testLRU() throws Exception {\n    LRUHashMap<String, String> lru = new LRUHashMap<String, String>(3);\n    assertEquals(0, lru.size());\n    lru.put(\"one\", \"Hello world\");\n    assertEquals(1, lru.size());\n    lru.put(\"two\", \"Hi man\");\n    assertEquals(2, lru.size());\n    lru.put(\"three\", \"Bonjour\");\n    assertEquals(3, lru.size());\n    lru.put(\"four\", \"Shalom\");\n    assertEquals(3, lru.size());\n    assertNotNull(lru.get(\"three\"));\n    assertNotNull(lru.get(\"two\"));\n    assertNotNull(lru.get(\"four\"));\n    assertNull(lru.get(\"one\"));\n    lru.put(\"five\", \"Yo!\");\n    assertEquals(3, lru.size());\n    assertNull(lru.get(\"three\")); // three was last used, so it got removed\n    assertNotNull(lru.get(\"five\"));\n    lru.get(\"four\");\n    lru.put(\"six\", \"hi\");\n    lru.put(\"seven\", \"hey dude\");\n    assertEquals(3, lru.size());\n    assertNull(lru.get(\"one\"));\n    assertNull(lru.get(\"two\"));\n    assertNull(lru.get(\"three\"));\n    assertNotNull(lru.get(\"four\"));\n    assertNull(lru.get(\"five\"));\n    assertNotNull(lru.get(\"six\"));\n    assertNotNull(lru.get(\"seven\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestLRUHashMap#testLRU().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestLRUHashMap#testLRU().mjava","sourceNew":"  // testLRU() tests that the specified size limit is indeed honored, and\n  // the remaining objects in the map are indeed those that have been most\n  // recently used\n  @Test\n  public void testLRU() throws Exception {\n    LRUHashMap<String, String> lru = new LRUHashMap<>(3);\n    assertEquals(0, lru.size());\n    lru.put(\"one\", \"Hello world\");\n    assertEquals(1, lru.size());\n    lru.put(\"two\", \"Hi man\");\n    assertEquals(2, lru.size());\n    lru.put(\"three\", \"Bonjour\");\n    assertEquals(3, lru.size());\n    lru.put(\"four\", \"Shalom\");\n    assertEquals(3, lru.size());\n    assertNotNull(lru.get(\"three\"));\n    assertNotNull(lru.get(\"two\"));\n    assertNotNull(lru.get(\"four\"));\n    assertNull(lru.get(\"one\"));\n    lru.put(\"five\", \"Yo!\");\n    assertEquals(3, lru.size());\n    assertNull(lru.get(\"three\")); // three was last used, so it got removed\n    assertNotNull(lru.get(\"five\"));\n    lru.get(\"four\");\n    lru.put(\"six\", \"hi\");\n    lru.put(\"seven\", \"hey dude\");\n    assertEquals(3, lru.size());\n    assertNull(lru.get(\"one\"));\n    assertNull(lru.get(\"two\"));\n    assertNull(lru.get(\"three\"));\n    assertNotNull(lru.get(\"four\"));\n    assertNull(lru.get(\"five\"));\n    assertNotNull(lru.get(\"six\"));\n    assertNotNull(lru.get(\"seven\"));\n  }\n\n","sourceOld":"  // testLRU() tests that the specified size limit is indeed honored, and\n  // the remaining objects in the map are indeed those that have been most\n  // recently used\n  @Test\n  public void testLRU() throws Exception {\n    LRUHashMap<String, String> lru = new LRUHashMap<String, String>(3);\n    assertEquals(0, lru.size());\n    lru.put(\"one\", \"Hello world\");\n    assertEquals(1, lru.size());\n    lru.put(\"two\", \"Hi man\");\n    assertEquals(2, lru.size());\n    lru.put(\"three\", \"Bonjour\");\n    assertEquals(3, lru.size());\n    lru.put(\"four\", \"Shalom\");\n    assertEquals(3, lru.size());\n    assertNotNull(lru.get(\"three\"));\n    assertNotNull(lru.get(\"two\"));\n    assertNotNull(lru.get(\"four\"));\n    assertNull(lru.get(\"one\"));\n    lru.put(\"five\", \"Yo!\");\n    assertEquals(3, lru.size());\n    assertNull(lru.get(\"three\")); // three was last used, so it got removed\n    assertNotNull(lru.get(\"five\"));\n    lru.get(\"four\");\n    lru.put(\"six\", \"hi\");\n    lru.put(\"seven\", \"hey dude\");\n    assertEquals(3, lru.size());\n    assertNull(lru.get(\"one\"));\n    assertNull(lru.get(\"two\"));\n    assertNull(lru.get(\"three\"));\n    assertNotNull(lru.get(\"four\"));\n    assertNull(lru.get(\"five\"));\n    assertNotNull(lru.get(\"six\"));\n    assertNotNull(lru.get(\"seven\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"d33e19a97046248623a7591aeaa6547233fd15e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}