{"path":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(FieldInfos,int).mjava","commits":[{"id":"129c6e8ac0c0d9a110ba29e4b5f1889374f30076","date":1337725510,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(int).mjava","sourceNew":"  /** Called before {@link #close()}, passing in the number\n   *  of documents that were written. Note that this is \n   *  intentionally redundant (equivalent to the number of\n   *  calls to {@link #startDocument(int)}, but a Codec should\n   *  check that this is the case to detect the JRE bug described \n   *  in LUCENE-1282. */\n  public abstract void finish(FieldInfos fis, int numDocs) throws IOException;\n\n","sourceOld":"  /** Called before {@link #close()}, passing in the number\n   *  of documents that were written. Note that this is \n   *  intentionally redundant (equivalent to the number of\n   *  calls to {@link #startDocument(int)}, but a Codec should\n   *  check that this is the case to detect the JRE bug described \n   *  in LUCENE-1282. */\n  public abstract void finish(int numDocs) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(int).mjava","sourceNew":"  /** Called before {@link #close()}, passing in the number\n   *  of documents that were written. Note that this is \n   *  intentionally redundant (equivalent to the number of\n   *  calls to {@link #startDocument(int)}, but a Codec should\n   *  check that this is the case to detect the JRE bug described \n   *  in LUCENE-1282. */\n  public abstract void finish(FieldInfos fis, int numDocs) throws IOException;\n\n","sourceOld":"  /** Called before {@link #close()}, passing in the number\n   *  of documents that were written. Note that this is \n   *  intentionally redundant (equivalent to the number of\n   *  calls to {@link #startDocument(int)}, but a Codec should\n   *  check that this is the case to detect the JRE bug described \n   *  in LUCENE-1282. */\n  public abstract void finish(int numDocs) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(FieldInfos,int).mjava","sourceNew":"  /** Called before {@link #close()}, passing in the number\n   *  of documents that were written. Note that this is \n   *  intentionally redundant (equivalent to the number of\n   *  calls to {@link #startDocument()}, but a Codec should\n   *  check that this is the case to detect the JRE bug described \n   *  in LUCENE-1282. */\n  public abstract void finish(FieldInfos fis, int numDocs) throws IOException;\n\n","sourceOld":"  /** Called before {@link #close()}, passing in the number\n   *  of documents that were written. Note that this is \n   *  intentionally redundant (equivalent to the number of\n   *  calls to {@link #startDocument(int)}, but a Codec should\n   *  check that this is the case to detect the JRE bug described \n   *  in LUCENE-1282. */\n  public abstract void finish(FieldInfos fis, int numDocs) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(FieldInfos,int).mjava","sourceNew":"  /** Called before {@link #close()}, passing in the number\n   *  of documents that were written. Note that this is \n   *  intentionally redundant (equivalent to the number of\n   *  calls to {@link #startDocument()}, but a Codec should\n   *  check that this is the case to detect the JRE bug described \n   *  in LUCENE-1282. */\n  public abstract void finish(FieldInfos fis, int numDocs) throws IOException;\n\n","sourceOld":"  /** Called before {@link #close()}, passing in the number\n   *  of documents that were written. Note that this is \n   *  intentionally redundant (equivalent to the number of\n   *  calls to {@link #startDocument(int)}, but a Codec should\n   *  check that this is the case to detect the JRE bug described \n   *  in LUCENE-1282. */\n  public abstract void finish(FieldInfos fis, int numDocs) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(FieldInfos,int).mjava","sourceNew":"  /** Called before {@link #close()}, passing in the number\n   *  of documents that were written. Note that this is \n   *  intentionally redundant (equivalent to the number of\n   *  calls to {@link #startDocument()}, but a Codec should\n   *  check that this is the case to detect the JRE bug described \n   *  in LUCENE-1282. */\n  public abstract void finish(FieldInfos fis, int numDocs) throws IOException;\n\n","sourceOld":"  /** Called before {@link #close()}, passing in the number\n   *  of documents that were written. Note that this is \n   *  intentionally redundant (equivalent to the number of\n   *  calls to {@link #startDocument(int)}, but a Codec should\n   *  check that this is the case to detect the JRE bug described \n   *  in LUCENE-1282. */\n  public abstract void finish(FieldInfos fis, int numDocs) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","52c7e49be259508735752fba88085255014a6ecf"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","3394716f52b34ab259ad5247e7595d9f9db6e935"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"52c7e49be259508735752fba88085255014a6ecf":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3394716f52b34ab259ad5247e7595d9f9db6e935"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","52c7e49be259508735752fba88085255014a6ecf"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}