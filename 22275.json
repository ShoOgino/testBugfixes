{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","commits":[{"id":"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98","date":1377268487,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void encodeTerm(long[] empty, DataOutput out, FieldInfo fieldInfo, BlockTermState _state, boolean absolute) throws IOException {\n    PulsingTermState state = (PulsingTermState)_state;\n    assert empty.length == 0;\n    this.absolute = this.absolute || absolute;\n    if (state.bytes == null) {\n      wrappedPostingsWriter.encodeTerm(longs, buffer, fieldInfo, state.wrappedState, this.absolute);\n      for (int i = 0; i < longsSize; i++) {\n        out.writeVLong(longs[i]);\n      }\n      buffer.writeTo(out);\n      buffer.reset();\n      this.absolute = false;\n    } else {\n      out.writeVInt(state.bytes.length);\n      out.writeBytes(state.bytes, 0, state.bytes.length);\n      this.absolute = this.absolute || absolute;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f948dd442d23baa6cbb28daf77c8db78b351329","date":1378742876,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void encodeTerm(long[] empty, DataOutput out, FieldInfo fieldInfo, BlockTermState _state, boolean absolute) throws IOException {\n    PulsingTermState state = (PulsingTermState)_state;\n    assert empty.length == 0;\n    this.absolute = this.absolute || absolute;\n    if (state.bytes == null) {\n      wrappedPostingsWriter.encodeTerm(longs, buffer, fieldInfo, state.wrappedState, this.absolute);\n      for (int i = 0; i < longsSize; i++) {\n        out.writeVLong(longs[i]);\n      }\n      buffer.writeTo(out);\n      buffer.reset();\n      this.absolute = false;\n    } else {\n      out.writeVInt(state.bytes.length);\n      out.writeBytes(state.bytes, 0, state.bytes.length);\n      this.absolute = this.absolute || absolute;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbaae1c00d39df2c872bbe043af26d02d3818313","date":1409657064,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void encodeTerm(long[] empty, DataOutput out, FieldInfo fieldInfo, BlockTermState _state, boolean absolute) throws IOException {\n    PulsingTermState state = (PulsingTermState)_state;\n    assert empty.length == 0;\n    this.absolute = this.absolute || absolute;\n    if (state.bytes == null) {\n      wrappedPostingsWriter.encodeTerm(longs, buffer, fieldInfo, state.wrappedState, this.absolute);\n      for (int i = 0; i < longsSize; i++) {\n        out.writeVLong(longs[i]);\n      }\n      buffer.writeTo(out);\n      buffer.reset();\n      this.absolute = false;\n    } else {\n      out.writeVInt(state.bytes.length);\n      out.writeBytes(state.bytes, 0, state.bytes.length);\n      this.absolute = this.absolute || absolute;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fbaae1c00d39df2c872bbe043af26d02d3818313":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f948dd442d23baa6cbb28daf77c8db78b351329":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fbaae1c00d39df2c872bbe043af26d02d3818313"]},"commit2Childs":{"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"fbaae1c00d39df2c872bbe043af26d02d3818313":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98","2f948dd442d23baa6cbb28daf77c8db78b351329"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["fbaae1c00d39df2c872bbe043af26d02d3818313"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}