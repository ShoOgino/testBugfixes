{"path":"lucene/core/src/java/org/apache/lucene/codecs/PushPostingsWriterBase#addPosition(int,BytesRef,int,int).mjava","commits":[{"id":"fa80a35d7c4b2b1e83082b275e3e8328ab93db52","date":1381766157,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/PushPostingsWriterBase#addPosition(int,BytesRef,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/PostingsConsumer#addPosition(int,BytesRef,int,int).mjava","sourceNew":"  /** Add a new position & payload, and start/end offset.  A\n   *  null payload means no payload; a non-null payload with\n   *  zero length also means no payload.  Caller may reuse\n   *  the {@link BytesRef} for the payload between calls\n   *  (method must fully consume the payload). <code>startOffset</code>\n   *  and <code>endOffset</code> will be -1 when offsets are not indexed. */\n  public abstract void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException;\n\n","sourceOld":"  /** Add a new position & payload, and start/end offset.  A\n   *  null payload means no payload; a non-null payload with\n   *  zero length also means no payload.  Caller may reuse\n   *  the {@link BytesRef} for the payload between calls\n   *  (method must fully consume the payload). <code>startOffset</code>\n   *  and <code>endOffset</code> will be -1 when offsets are not indexed. */\n  public abstract void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1eb427f2c6beed80d1724555fc1db003ccf3030","date":1417137397,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/PushPostingsWriterBase#addPosition(int,BytesRef,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/PushPostingsWriterBase#addPosition(int,BytesRef,int,int).mjava","sourceNew":"  /** Add a new position and payload, and start/end offset.  A\n   *  null payload means no payload; a non-null payload with\n   *  zero length also means no payload.  Caller may reuse\n   *  the {@link BytesRef} for the payload between calls\n   *  (method must fully consume the payload). <code>startOffset</code>\n   *  and <code>endOffset</code> will be -1 when offsets are not indexed. */\n  public abstract void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException;\n\n","sourceOld":"  /** Add a new position & payload, and start/end offset.  A\n   *  null payload means no payload; a non-null payload with\n   *  zero length also means no payload.  Caller may reuse\n   *  the {@link BytesRef} for the payload between calls\n   *  (method must fully consume the payload). <code>startOffset</code>\n   *  and <code>endOffset</code> will be -1 when offsets are not indexed. */\n  public abstract void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b1eb427f2c6beed80d1724555fc1db003ccf3030"]},"commit2Childs":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}