{"path":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#getStatusMessages().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#getStatusMessages().mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  Map<String, String> getStatusMessages() {\n    //this map object is a Collections.synchronizedMap(new LinkedHashMap()). if we\n    // synchronize on the object it must be safe to iterate through the map\n    Map statusMessages = (Map) retrieve(STATUS_MSGS);\n    Map<String, String> result = new LinkedHashMap<String, String>();\n    if (statusMessages != null) {\n      synchronized (statusMessages) {\n        for (Object o : statusMessages.entrySet()) {\n          Map.Entry e = (Map.Entry) o;\n          //the toString is taken because some of the Objects create the data lazily when toString() is called\n          result.put((String) e.getKey(), e.getValue().toString());\n        }\n      }\n    }\n    return result;\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#getStatusMessages().mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings(\"unchecked\")\n  Map<String, String> getStatusMessages() {\n    //this map object is a Collections.synchronizedMap(new LinkedHashMap()). if we\n    // synchronize on the object it must be safe to iterate through the map\n    Map statusMessages = (Map) retrieve(STATUS_MSGS);\n    Map<String, String> result = new LinkedHashMap<String, String>();\n    if (statusMessages != null) {\n      synchronized (statusMessages) {\n        for (Object o : statusMessages.entrySet()) {\n          Map.Entry e = (Map.Entry) o;\n          //the toString is taken because some of the Objects create the data lazily when toString() is called\n          result.put((String) e.getKey(), e.getValue().toString());\n        }\n      }\n    }\n    return result;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#getStatusMessages().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#getStatusMessages().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  Map<String, String> getStatusMessages() {\n    //this map object is a Collections.synchronizedMap(new LinkedHashMap()). if we\n    // synchronize on the object it must be safe to iterate through the map\n    Map statusMessages = (Map) retrieve(STATUS_MSGS);\n    Map<String, String> result = new LinkedHashMap<String, String>();\n    if (statusMessages != null) {\n      synchronized (statusMessages) {\n        for (Object o : statusMessages.entrySet()) {\n          Map.Entry e = (Map.Entry) o;\n          //the toString is taken because some of the Objects create the data lazily when toString() is called\n          result.put((String) e.getKey(), e.getValue().toString());\n        }\n      }\n    }\n    return result;\n\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  Map<String, String> getStatusMessages() {\n    //this map object is a Collections.synchronizedMap(new LinkedHashMap()). if we\n    // synchronize on the object it must be safe to iterate through the map\n    Map statusMessages = (Map) retrieve(STATUS_MSGS);\n    Map<String, String> result = new LinkedHashMap<String, String>();\n    if (statusMessages != null) {\n      synchronized (statusMessages) {\n        for (Object o : statusMessages.entrySet()) {\n          Map.Entry e = (Map.Entry) o;\n          //the toString is taken because some of the Objects create the data lazily when toString() is called\n          result.put((String) e.getKey(), e.getValue().toString());\n        }\n      }\n    }\n    return result;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#getStatusMessages().mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  Map<String, String> getStatusMessages() {\n    //this map object is a Collections.synchronizedMap(new LinkedHashMap()). if we\n    // synchronize on the object it must be safe to iterate through the map\n    Map statusMessages = (Map) retrieve(STATUS_MSGS);\n    Map<String, String> result = new LinkedHashMap<String, String>();\n    if (statusMessages != null) {\n      synchronized (statusMessages) {\n        for (Object o : statusMessages.entrySet()) {\n          Map.Entry e = (Map.Entry) o;\n          //the toString is taken because some of the Objects create the data lazily when toString() is called\n          result.put((String) e.getKey(), e.getValue().toString());\n        }\n      }\n    }\n    return result;\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#getStatusMessages().mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#getStatusMessages().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  Map<String, String> getStatusMessages() {\n    //this map object is a Collections.synchronizedMap(new LinkedHashMap()). if we\n    // synchronize on the object it must be safe to iterate through the map\n    Map statusMessages = (Map) retrieve(STATUS_MSGS);\n    Map<String, String> result = new LinkedHashMap<String, String>();\n    if (statusMessages != null) {\n      synchronized (statusMessages) {\n        for (Object o : statusMessages.entrySet()) {\n          Map.Entry e = (Map.Entry) o;\n          //the toString is taken because some of the Objects create the data lazily when toString() is called\n          result.put((String) e.getKey(), e.getValue().toString());\n        }\n      }\n    }\n    return result;\n\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  Map<String, String> getStatusMessages() {\n    //this map object is a Collections.synchronizedMap(new LinkedHashMap()). if we\n    // synchronize on the object it must be safe to iterate through the map\n    Map statusMessages = (Map) retrieve(STATUS_MSGS);\n    Map<String, String> result = new LinkedHashMap<String, String>();\n    if (statusMessages != null) {\n      synchronized (statusMessages) {\n        for (Object o : statusMessages.entrySet()) {\n          Map.Entry e = (Map.Entry) o;\n          //the toString is taken because some of the Objects create the data lazily when toString() is called\n          result.put((String) e.getKey(), e.getValue().toString());\n        }\n      }\n    }\n    return result;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#getStatusMessages().mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#getStatusMessages().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  Map<String, String> getStatusMessages() {\n    //this map object is a Collections.synchronizedMap(new LinkedHashMap()). if we\n    // synchronize on the object it must be safe to iterate through the map\n    Map statusMessages = (Map) retrieve(STATUS_MSGS);\n    Map<String, String> result = new LinkedHashMap<String, String>();\n    if (statusMessages != null) {\n      synchronized (statusMessages) {\n        for (Object o : statusMessages.entrySet()) {\n          Map.Entry e = (Map.Entry) o;\n          //the toString is taken because some of the Objects create the data lazily when toString() is called\n          result.put((String) e.getKey(), e.getValue().toString());\n        }\n      }\n    }\n    return result;\n\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  Map<String, String> getStatusMessages() {\n    //this map object is a Collections.synchronizedMap(new LinkedHashMap()). if we\n    // synchronize on the object it must be safe to iterate through the map\n    Map statusMessages = (Map) retrieve(STATUS_MSGS);\n    Map<String, String> result = new LinkedHashMap<String, String>();\n    if (statusMessages != null) {\n      synchronized (statusMessages) {\n        for (Object o : statusMessages.entrySet()) {\n          Map.Entry e = (Map.Entry) o;\n          //the toString is taken because some of the Objects create the data lazily when toString() is called\n          result.put((String) e.getKey(), e.getValue().toString());\n        }\n      }\n    }\n    return result;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["1da8d55113b689b06716246649de6f62430f15c0","1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["1da8d55113b689b06716246649de6f62430f15c0","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}