{"path":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#getEncoder().mjava","commits":[{"id":"c286b0d8c507a88b289407e2fe161effa275c6b0","date":1562615977,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#getEncoder().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected Encoder getEncoder() {\n    return new Encoder() {\n      @Override\n      double quantizeX(double raw) {\n        return decodeLongitude(encodeLongitude(raw));\n      }\n\n      @Override\n      double quantizeXCeil(double raw) {\n        return decodeLongitude(encodeLongitudeCeil(raw));\n      }\n\n      @Override\n      double quantizeY(double raw) {\n        return decodeLatitude(encodeLatitude(raw));\n      }\n\n      @Override\n      double quantizeYCeil(double raw) {\n        return decodeLatitude(encodeLatitudeCeil(raw));\n      }\n\n      /** quantizes a latitude value to be consistent with index encoding */\n      protected double quantizeLat(double rawLat) {\n        return quantizeY(rawLat);\n      }\n\n      /** quantizes a provided latitude value rounded up to the nearest encoded integer */\n      protected double quantizeLatCeil(double rawLat) {\n        return quantizeYCeil(rawLat);\n      }\n\n      /** quantizes a longitude value to be consistent with index encoding */\n      protected double quantizeLon(double rawLon) {\n        return quantizeX(rawLon);\n      }\n\n      /** quantizes a provided longitude value rounded up to the nearest encoded integer */\n      protected double quantizeLonCeil(double rawLon) {\n        return quantizeXCeil(rawLon);\n      }\n\n      @Override\n      double[] quantizeTriangle(double ax, double ay, double bx, double by, double cx, double cy) {\n        int[] decoded = encodeDecodeTriangle(ax, ay, bx, by, cx, cy);\n        return new double[]{decodeLatitude(decoded[0]), decodeLongitude(decoded[1]), decodeLatitude(decoded[2]), decodeLongitude(decoded[3]), decodeLatitude(decoded[4]), decodeLongitude(decoded[5])};\n      }\n\n      @Override\n      int[] encodeDecodeTriangle(double ax, double ay, double bx, double by, double cx, double cy) {\n        byte[] encoded = new byte[7 * ShapeField.BYTES];\n        ShapeField.encodeTriangle(encoded, encodeLatitude(ay), encodeLongitude(ax), encodeLatitude(by), encodeLongitude(bx), encodeLatitude(cy), encodeLongitude(cx));\n        int[] decoded = new int[6];\n        ShapeField.decodeTriangle(encoded, decoded);\n        return decoded;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ed90f8ba7e7be13d155f954862178b23a324125","date":1568020603,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#getEncoder().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#getEncoder().mjava","sourceNew":"  @Override\n  protected Encoder getEncoder() {\n    return new Encoder() {\n      @Override\n      double quantizeX(double raw) {\n        return decodeLongitude(encodeLongitude(raw));\n      }\n\n      @Override\n      double quantizeXCeil(double raw) {\n        return decodeLongitude(encodeLongitudeCeil(raw));\n      }\n\n      @Override\n      double quantizeY(double raw) {\n        return decodeLatitude(encodeLatitude(raw));\n      }\n\n      @Override\n      double quantizeYCeil(double raw) {\n        return decodeLatitude(encodeLatitudeCeil(raw));\n      }\n\n      /** quantizes a latitude value to be consistent with index encoding */\n      protected double quantizeLat(double rawLat) {\n        return quantizeY(rawLat);\n      }\n\n      /** quantizes a provided latitude value rounded up to the nearest encoded integer */\n      protected double quantizeLatCeil(double rawLat) {\n        return quantizeYCeil(rawLat);\n      }\n\n      /** quantizes a longitude value to be consistent with index encoding */\n      protected double quantizeLon(double rawLon) {\n        return quantizeX(rawLon);\n      }\n\n      /** quantizes a provided longitude value rounded up to the nearest encoded integer */\n      protected double quantizeLonCeil(double rawLon) {\n        return quantizeXCeil(rawLon);\n      }\n\n      @Override\n      double[] quantizeTriangle(double ax, double ay, boolean ab, double bx, double by, boolean bc, double cx, double cy, boolean ca) {\n        ShapeField.DecodedTriangle decoded = encodeDecodeTriangle(ax, ay, ab, bx, by, bc, cx, cy, ca);\n        return new double[]{decodeLatitude(decoded.aY), decodeLongitude(decoded.aX), decodeLatitude(decoded.bY), decodeLongitude(decoded.bX), decodeLatitude(decoded.cY), decodeLongitude(decoded.cX)};\n      }\n\n      @Override\n      ShapeField.DecodedTriangle encodeDecodeTriangle(double ax, double ay, boolean ab, double bx, double by, boolean bc, double cx, double cy, boolean ca) {\n        byte[] encoded = new byte[7 * ShapeField.BYTES];\n        ShapeField.encodeTriangle(encoded, encodeLatitude(ay), encodeLongitude(ax), ab, encodeLatitude(by), encodeLongitude(bx), bc, encodeLatitude(cy), encodeLongitude(cx), ca);\n        ShapeField.DecodedTriangle triangle  = new ShapeField.DecodedTriangle();\n        ShapeField.decodeTriangle(encoded, triangle);\n        return triangle;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  protected Encoder getEncoder() {\n    return new Encoder() {\n      @Override\n      double quantizeX(double raw) {\n        return decodeLongitude(encodeLongitude(raw));\n      }\n\n      @Override\n      double quantizeXCeil(double raw) {\n        return decodeLongitude(encodeLongitudeCeil(raw));\n      }\n\n      @Override\n      double quantizeY(double raw) {\n        return decodeLatitude(encodeLatitude(raw));\n      }\n\n      @Override\n      double quantizeYCeil(double raw) {\n        return decodeLatitude(encodeLatitudeCeil(raw));\n      }\n\n      /** quantizes a latitude value to be consistent with index encoding */\n      protected double quantizeLat(double rawLat) {\n        return quantizeY(rawLat);\n      }\n\n      /** quantizes a provided latitude value rounded up to the nearest encoded integer */\n      protected double quantizeLatCeil(double rawLat) {\n        return quantizeYCeil(rawLat);\n      }\n\n      /** quantizes a longitude value to be consistent with index encoding */\n      protected double quantizeLon(double rawLon) {\n        return quantizeX(rawLon);\n      }\n\n      /** quantizes a provided longitude value rounded up to the nearest encoded integer */\n      protected double quantizeLonCeil(double rawLon) {\n        return quantizeXCeil(rawLon);\n      }\n\n      @Override\n      double[] quantizeTriangle(double ax, double ay, double bx, double by, double cx, double cy) {\n        int[] decoded = encodeDecodeTriangle(ax, ay, bx, by, cx, cy);\n        return new double[]{decodeLatitude(decoded[0]), decodeLongitude(decoded[1]), decodeLatitude(decoded[2]), decodeLongitude(decoded[3]), decodeLatitude(decoded[4]), decodeLongitude(decoded[5])};\n      }\n\n      @Override\n      int[] encodeDecodeTriangle(double ax, double ay, double bx, double by, double cx, double cy) {\n        byte[] encoded = new byte[7 * ShapeField.BYTES];\n        ShapeField.encodeTriangle(encoded, encodeLatitude(ay), encodeLongitude(ax), encodeLatitude(by), encodeLongitude(bx), encodeLatitude(cy), encodeLongitude(cx));\n        int[] decoded = new int[6];\n        ShapeField.decodeTriangle(encoded, decoded);\n        return decoded;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f2d8fb73c718c3fc5600f453cc514f18ae1b8c3","date":1576052211,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#getEncoder().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#getEncoder().mjava","sourceNew":"  @Override\n  protected Encoder getEncoder() {\n    return new Encoder() {\n      @Override\n      double decodeX(int encoded) {\n        return decodeLongitude(encoded);\n      }\n\n      @Override\n      double decodeY(int encoded) {\n        return decodeLatitude(encoded);\n      }\n\n      @Override\n      double quantizeX(double raw) {\n        return decodeLongitude(encodeLongitude(raw));\n      }\n\n      @Override\n      double quantizeXCeil(double raw) {\n        return decodeLongitude(encodeLongitudeCeil(raw));\n      }\n\n      @Override\n      double quantizeY(double raw) {\n        return decodeLatitude(encodeLatitude(raw));\n      }\n\n      @Override\n      double quantizeYCeil(double raw) {\n        return decodeLatitude(encodeLatitudeCeil(raw));\n      }\n\n      /** quantizes a latitude value to be consistent with index encoding */\n      protected double quantizeLat(double rawLat) {\n        return quantizeY(rawLat);\n      }\n\n      /** quantizes a provided latitude value rounded up to the nearest encoded integer */\n      protected double quantizeLatCeil(double rawLat) {\n        return quantizeYCeil(rawLat);\n      }\n\n      /** quantizes a longitude value to be consistent with index encoding */\n      protected double quantizeLon(double rawLon) {\n        return quantizeX(rawLon);\n      }\n\n      /** quantizes a provided longitude value rounded up to the nearest encoded integer */\n      protected double quantizeLonCeil(double rawLon) {\n        return quantizeXCeil(rawLon);\n      }\n\n      @Override\n      double[] quantizeTriangle(double ax, double ay, boolean ab, double bx, double by, boolean bc, double cx, double cy, boolean ca) {\n        ShapeField.DecodedTriangle decoded = encodeDecodeTriangle(ax, ay, ab, bx, by, bc, cx, cy, ca);\n        return new double[]{decodeLatitude(decoded.aY), decodeLongitude(decoded.aX), decodeLatitude(decoded.bY), decodeLongitude(decoded.bX), decodeLatitude(decoded.cY), decodeLongitude(decoded.cX)};\n      }\n\n      @Override\n      ShapeField.DecodedTriangle encodeDecodeTriangle(double ax, double ay, boolean ab, double bx, double by, boolean bc, double cx, double cy, boolean ca) {\n        byte[] encoded = new byte[7 * ShapeField.BYTES];\n        ShapeField.encodeTriangle(encoded, encodeLatitude(ay), encodeLongitude(ax), ab, encodeLatitude(by), encodeLongitude(bx), bc, encodeLatitude(cy), encodeLongitude(cx), ca);\n        ShapeField.DecodedTriangle triangle  = new ShapeField.DecodedTriangle();\n        ShapeField.decodeTriangle(encoded, triangle);\n        return triangle;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  protected Encoder getEncoder() {\n    return new Encoder() {\n      @Override\n      double quantizeX(double raw) {\n        return decodeLongitude(encodeLongitude(raw));\n      }\n\n      @Override\n      double quantizeXCeil(double raw) {\n        return decodeLongitude(encodeLongitudeCeil(raw));\n      }\n\n      @Override\n      double quantizeY(double raw) {\n        return decodeLatitude(encodeLatitude(raw));\n      }\n\n      @Override\n      double quantizeYCeil(double raw) {\n        return decodeLatitude(encodeLatitudeCeil(raw));\n      }\n\n      /** quantizes a latitude value to be consistent with index encoding */\n      protected double quantizeLat(double rawLat) {\n        return quantizeY(rawLat);\n      }\n\n      /** quantizes a provided latitude value rounded up to the nearest encoded integer */\n      protected double quantizeLatCeil(double rawLat) {\n        return quantizeYCeil(rawLat);\n      }\n\n      /** quantizes a longitude value to be consistent with index encoding */\n      protected double quantizeLon(double rawLon) {\n        return quantizeX(rawLon);\n      }\n\n      /** quantizes a provided longitude value rounded up to the nearest encoded integer */\n      protected double quantizeLonCeil(double rawLon) {\n        return quantizeXCeil(rawLon);\n      }\n\n      @Override\n      double[] quantizeTriangle(double ax, double ay, boolean ab, double bx, double by, boolean bc, double cx, double cy, boolean ca) {\n        ShapeField.DecodedTriangle decoded = encodeDecodeTriangle(ax, ay, ab, bx, by, bc, cx, cy, ca);\n        return new double[]{decodeLatitude(decoded.aY), decodeLongitude(decoded.aX), decodeLatitude(decoded.bY), decodeLongitude(decoded.bX), decodeLatitude(decoded.cY), decodeLongitude(decoded.cX)};\n      }\n\n      @Override\n      ShapeField.DecodedTriangle encodeDecodeTriangle(double ax, double ay, boolean ab, double bx, double by, boolean bc, double cx, double cy, boolean ca) {\n        byte[] encoded = new byte[7 * ShapeField.BYTES];\n        ShapeField.encodeTriangle(encoded, encodeLatitude(ay), encodeLongitude(ax), ab, encodeLatitude(by), encodeLongitude(bx), bc, encodeLatitude(cy), encodeLongitude(cx), ca);\n        ShapeField.DecodedTriangle triangle  = new ShapeField.DecodedTriangle();\n        ShapeField.decodeTriangle(encoded, triangle);\n        return triangle;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c6b7e01cb749c3b01e226e06085dfb1d9ed8eab","date":1576073026,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#getEncoder().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#getEncoder().mjava","sourceNew":"  @Override\n  protected Encoder getEncoder() {\n    return new Encoder() {\n      @Override\n      double decodeX(int encoded) {\n        return decodeLongitude(encoded);\n      }\n\n      @Override\n      double decodeY(int encoded) {\n        return decodeLatitude(encoded);\n      }\n\n      @Override\n      double quantizeX(double raw) {\n        return decodeLongitude(encodeLongitude(raw));\n      }\n\n      @Override\n      double quantizeXCeil(double raw) {\n        return decodeLongitude(encodeLongitudeCeil(raw));\n      }\n\n      @Override\n      double quantizeY(double raw) {\n        return decodeLatitude(encodeLatitude(raw));\n      }\n\n      @Override\n      double quantizeYCeil(double raw) {\n        return decodeLatitude(encodeLatitudeCeil(raw));\n      }\n\n      /** quantizes a latitude value to be consistent with index encoding */\n      protected double quantizeLat(double rawLat) {\n        return quantizeY(rawLat);\n      }\n\n      /** quantizes a provided latitude value rounded up to the nearest encoded integer */\n      protected double quantizeLatCeil(double rawLat) {\n        return quantizeYCeil(rawLat);\n      }\n\n      /** quantizes a longitude value to be consistent with index encoding */\n      protected double quantizeLon(double rawLon) {\n        return quantizeX(rawLon);\n      }\n\n      /** quantizes a provided longitude value rounded up to the nearest encoded integer */\n      protected double quantizeLonCeil(double rawLon) {\n        return quantizeXCeil(rawLon);\n      }\n\n      @Override\n      double[] quantizeTriangle(double ax, double ay, boolean ab, double bx, double by, boolean bc, double cx, double cy, boolean ca) {\n        ShapeField.DecodedTriangle decoded = encodeDecodeTriangle(ax, ay, ab, bx, by, bc, cx, cy, ca);\n        return new double[]{decodeLatitude(decoded.aY), decodeLongitude(decoded.aX), decodeLatitude(decoded.bY), decodeLongitude(decoded.bX), decodeLatitude(decoded.cY), decodeLongitude(decoded.cX)};\n      }\n\n      @Override\n      ShapeField.DecodedTriangle encodeDecodeTriangle(double ax, double ay, boolean ab, double bx, double by, boolean bc, double cx, double cy, boolean ca) {\n        byte[] encoded = new byte[7 * ShapeField.BYTES];\n        ShapeField.encodeTriangle(encoded, encodeLatitude(ay), encodeLongitude(ax), ab, encodeLatitude(by), encodeLongitude(bx), bc, encodeLatitude(cy), encodeLongitude(cx), ca);\n        ShapeField.DecodedTriangle triangle  = new ShapeField.DecodedTriangle();\n        ShapeField.decodeTriangle(encoded, triangle);\n        return triangle;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  protected Encoder getEncoder() {\n    return new Encoder() {\n      @Override\n      double quantizeX(double raw) {\n        return decodeLongitude(encodeLongitude(raw));\n      }\n\n      @Override\n      double quantizeXCeil(double raw) {\n        return decodeLongitude(encodeLongitudeCeil(raw));\n      }\n\n      @Override\n      double quantizeY(double raw) {\n        return decodeLatitude(encodeLatitude(raw));\n      }\n\n      @Override\n      double quantizeYCeil(double raw) {\n        return decodeLatitude(encodeLatitudeCeil(raw));\n      }\n\n      /** quantizes a latitude value to be consistent with index encoding */\n      protected double quantizeLat(double rawLat) {\n        return quantizeY(rawLat);\n      }\n\n      /** quantizes a provided latitude value rounded up to the nearest encoded integer */\n      protected double quantizeLatCeil(double rawLat) {\n        return quantizeYCeil(rawLat);\n      }\n\n      /** quantizes a longitude value to be consistent with index encoding */\n      protected double quantizeLon(double rawLon) {\n        return quantizeX(rawLon);\n      }\n\n      /** quantizes a provided longitude value rounded up to the nearest encoded integer */\n      protected double quantizeLonCeil(double rawLon) {\n        return quantizeXCeil(rawLon);\n      }\n\n      @Override\n      double[] quantizeTriangle(double ax, double ay, boolean ab, double bx, double by, boolean bc, double cx, double cy, boolean ca) {\n        ShapeField.DecodedTriangle decoded = encodeDecodeTriangle(ax, ay, ab, bx, by, bc, cx, cy, ca);\n        return new double[]{decodeLatitude(decoded.aY), decodeLongitude(decoded.aX), decodeLatitude(decoded.bY), decodeLongitude(decoded.bX), decodeLatitude(decoded.cY), decodeLongitude(decoded.cX)};\n      }\n\n      @Override\n      ShapeField.DecodedTriangle encodeDecodeTriangle(double ax, double ay, boolean ab, double bx, double by, boolean bc, double cx, double cy, boolean ca) {\n        byte[] encoded = new byte[7 * ShapeField.BYTES];\n        ShapeField.encodeTriangle(encoded, encodeLatitude(ay), encodeLongitude(ax), ab, encodeLatitude(by), encodeLongitude(bx), bc, encodeLatitude(cy), encodeLongitude(cx), ca);\n        ShapeField.DecodedTriangle triangle  = new ShapeField.DecodedTriangle();\n        ShapeField.decodeTriangle(encoded, triangle);\n        return triangle;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#getEncoder().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#getEncoder().mjava","sourceNew":"  @Override\n  protected Encoder getEncoder() {\n    return new Encoder() {\n      @Override\n      double decodeX(int encoded) {\n        return decodeLongitude(encoded);\n      }\n\n      @Override\n      double decodeY(int encoded) {\n        return decodeLatitude(encoded);\n      }\n\n      @Override\n      double quantizeX(double raw) {\n        return decodeLongitude(encodeLongitude(raw));\n      }\n\n      @Override\n      double quantizeXCeil(double raw) {\n        return decodeLongitude(encodeLongitudeCeil(raw));\n      }\n\n      @Override\n      double quantizeY(double raw) {\n        return decodeLatitude(encodeLatitude(raw));\n      }\n\n      @Override\n      double quantizeYCeil(double raw) {\n        return decodeLatitude(encodeLatitudeCeil(raw));\n      }\n\n      /** quantizes a latitude value to be consistent with index encoding */\n      protected double quantizeLat(double rawLat) {\n        return quantizeY(rawLat);\n      }\n\n      /** quantizes a provided latitude value rounded up to the nearest encoded integer */\n      protected double quantizeLatCeil(double rawLat) {\n        return quantizeYCeil(rawLat);\n      }\n\n      /** quantizes a longitude value to be consistent with index encoding */\n      protected double quantizeLon(double rawLon) {\n        return quantizeX(rawLon);\n      }\n\n      /** quantizes a provided longitude value rounded up to the nearest encoded integer */\n      protected double quantizeLonCeil(double rawLon) {\n        return quantizeXCeil(rawLon);\n      }\n\n      @Override\n      double[] quantizeTriangle(double ax, double ay, boolean ab, double bx, double by, boolean bc, double cx, double cy, boolean ca) {\n        ShapeField.DecodedTriangle decoded = encodeDecodeTriangle(ax, ay, ab, bx, by, bc, cx, cy, ca);\n        return new double[]{decodeLatitude(decoded.aY), decodeLongitude(decoded.aX), decodeLatitude(decoded.bY), decodeLongitude(decoded.bX), decodeLatitude(decoded.cY), decodeLongitude(decoded.cX)};\n      }\n\n      @Override\n      ShapeField.DecodedTriangle encodeDecodeTriangle(double ax, double ay, boolean ab, double bx, double by, boolean bc, double cx, double cy, boolean ca) {\n        byte[] encoded = new byte[7 * ShapeField.BYTES];\n        ShapeField.encodeTriangle(encoded, encodeLatitude(ay), encodeLongitude(ax), ab, encodeLatitude(by), encodeLongitude(bx), bc, encodeLatitude(cy), encodeLongitude(cx), ca);\n        ShapeField.DecodedTriangle triangle  = new ShapeField.DecodedTriangle();\n        ShapeField.decodeTriangle(encoded, triangle);\n        return triangle;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  protected Encoder getEncoder() {\n    return new Encoder() {\n      @Override\n      double decodeX(int encoded) {\n        return decodeLongitude(encoded);\n      }\n\n      @Override\n      double decodeY(int encoded) {\n        return decodeLatitude(encoded);\n      }\n\n      @Override\n      double quantizeX(double raw) {\n        return decodeLongitude(encodeLongitude(raw));\n      }\n\n      @Override\n      double quantizeXCeil(double raw) {\n        return decodeLongitude(encodeLongitudeCeil(raw));\n      }\n\n      @Override\n      double quantizeY(double raw) {\n        return decodeLatitude(encodeLatitude(raw));\n      }\n\n      @Override\n      double quantizeYCeil(double raw) {\n        return decodeLatitude(encodeLatitudeCeil(raw));\n      }\n\n      /** quantizes a latitude value to be consistent with index encoding */\n      protected double quantizeLat(double rawLat) {\n        return quantizeY(rawLat);\n      }\n\n      /** quantizes a provided latitude value rounded up to the nearest encoded integer */\n      protected double quantizeLatCeil(double rawLat) {\n        return quantizeYCeil(rawLat);\n      }\n\n      /** quantizes a longitude value to be consistent with index encoding */\n      protected double quantizeLon(double rawLon) {\n        return quantizeX(rawLon);\n      }\n\n      /** quantizes a provided longitude value rounded up to the nearest encoded integer */\n      protected double quantizeLonCeil(double rawLon) {\n        return quantizeXCeil(rawLon);\n      }\n\n      @Override\n      double[] quantizeTriangle(double ax, double ay, boolean ab, double bx, double by, boolean bc, double cx, double cy, boolean ca) {\n        ShapeField.DecodedTriangle decoded = encodeDecodeTriangle(ax, ay, ab, bx, by, bc, cx, cy, ca);\n        return new double[]{decodeLatitude(decoded.aY), decodeLongitude(decoded.aX), decodeLatitude(decoded.bY), decodeLongitude(decoded.bX), decodeLatitude(decoded.cY), decodeLongitude(decoded.cX)};\n      }\n\n      @Override\n      ShapeField.DecodedTriangle encodeDecodeTriangle(double ax, double ay, boolean ab, double bx, double by, boolean bc, double cx, double cy, boolean ca) {\n        byte[] encoded = new byte[7 * ShapeField.BYTES];\n        ShapeField.encodeTriangle(encoded, encodeLatitude(ay), encodeLongitude(ax), ab, encodeLatitude(by), encodeLongitude(bx), bc, encodeLatitude(cy), encodeLongitude(cx), ca);\n        ShapeField.DecodedTriangle triangle  = new ShapeField.DecodedTriangle();\n        ShapeField.decodeTriangle(encoded, triangle);\n        return triangle;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6c6b7e01cb749c3b01e226e06085dfb1d9ed8eab":["5ed90f8ba7e7be13d155f954862178b23a324125","3f2d8fb73c718c3fc5600f453cc514f18ae1b8c3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["3f2d8fb73c718c3fc5600f453cc514f18ae1b8c3"],"c286b0d8c507a88b289407e2fe161effa275c6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5ed90f8ba7e7be13d155f954862178b23a324125":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"3f2d8fb73c718c3fc5600f453cc514f18ae1b8c3":["5ed90f8ba7e7be13d155f954862178b23a324125"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"6c6b7e01cb749c3b01e226e06085dfb1d9ed8eab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c286b0d8c507a88b289407e2fe161effa275c6b0":["5ed90f8ba7e7be13d155f954862178b23a324125"],"5ed90f8ba7e7be13d155f954862178b23a324125":["6c6b7e01cb749c3b01e226e06085dfb1d9ed8eab","3f2d8fb73c718c3fc5600f453cc514f18ae1b8c3"],"3f2d8fb73c718c3fc5600f453cc514f18ae1b8c3":["6c6b7e01cb749c3b01e226e06085dfb1d9ed8eab","09c1e6d465800c73af60624bf9d4459a19f7940c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6c6b7e01cb749c3b01e226e06085dfb1d9ed8eab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}