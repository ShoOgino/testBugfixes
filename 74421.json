{"path":"solr/core/src/test/org/apache/solr/core/BlobRepositoryCloudTest#setupCluster().mjava","commits":[{"id":"5fab1d180f47e9924e0e56501b42034b3476f2b1","date":1460974879,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/BlobRepositoryCloudTest#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(1)  // only sharing *within* a node\n        .addConfig(\"configname\", TEST_PATH.resolve(\"resource-sharing\"))\n        .configure();\n//    Thread.sleep(2000);\n    HashMap<String, String> params = new HashMap<>();\n    cluster.createCollection(\".system\", 1, 1, null, params);\n//    Thread.sleep(2000);\n    // test component will fail if it cant' find a blob with this data by this name\n    postBlob(\"testResource\", \"foo,bar\\nbaz,bam\");\n//    Thread.sleep(2000);\n    // if these don't load we probably failed to post the blob above\n    cluster.createCollection(\"col1\", 1, 1, \"configname\", params);\n    cluster.createCollection(\"col2\", 1, 1, \"configname\", params);\n//    Thread.sleep(2000);\n    SolrInputDocument document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col1\");\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    solrClient.add(\"col1\", document);\n    solrClient.commit(\"col1\");\n    document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col2\");\n    solrClient.add(\"col2\", document);\n    solrClient.commit(\"col2\");\n    Thread.sleep(2000);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"713122036535651642e6d4fe57ce12b449e18473","date":1461000510,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/BlobRepositoryCloudTest#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(1)  // only sharing *within* a node\n        .addConfig(\"configname\", TEST_PATH.resolve(\"resource-sharing\"))\n        .configure();\n//    Thread.sleep(2000);\n    HashMap<String, String> params = new HashMap<>();\n    cluster.createCollection(\".system\", 1, 1, null, params);\n//    Thread.sleep(2000);\n    // test component will fail if it cant' find a blob with this data by this name\n    postBlob(\"testResource\", \"foo,bar\\nbaz,bam\");\n//    Thread.sleep(2000);\n    // if these don't load we probably failed to post the blob above\n    cluster.createCollection(\"col1\", 1, 1, \"configname\", params);\n    cluster.createCollection(\"col2\", 1, 1, \"configname\", params);\n//    Thread.sleep(2000);\n    SolrInputDocument document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col1\");\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    solrClient.add(\"col1\", document);\n    solrClient.commit(\"col1\");\n    document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col2\");\n    solrClient.add(\"col2\", document);\n    solrClient.commit(\"col2\");\n    Thread.sleep(2000);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba8e2430792476c6da9e0e26db31135f5c74f83a","date":1461051599,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/BlobRepositoryCloudTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/BlobRepositoryCloudTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(1)  // only sharing *within* a node\n        .addConfig(\"configname\", TEST_PATH.resolve(\"resource-sharing\"))\n        .configure();\n//    Thread.sleep(2000);\n    HashMap<String, String> params = new HashMap<>();\n    cluster.createCollection(\".system\", 1, 1, null, params);\n    // test component will fail if it cant' find a blob with this data by this name\n    TestBlobHandler.postData(cluster.getSolrClient(), findLiveNodeURI(), \"testResource\", ByteBuffer.wrap(\"foo,bar\\nbaz,bam\".getBytes(StandardCharsets.UTF_8)));\n    //    Thread.sleep(2000);\n    // if these don't load we probably failed to post the blob above\n    cluster.createCollection(\"col1\", 1, 1, \"configname\", params);\n    cluster.createCollection(\"col2\", 1, 1, \"configname\", params);\n//    Thread.sleep(2000);\n    SolrInputDocument document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col1\");\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    solrClient.add(\"col1\", document);\n    solrClient.commit(\"col1\");\n    document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col2\");\n    solrClient.add(\"col2\", document);\n    solrClient.commit(\"col2\");\n    Thread.sleep(2000);\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(1)  // only sharing *within* a node\n        .addConfig(\"configname\", TEST_PATH.resolve(\"resource-sharing\"))\n        .configure();\n//    Thread.sleep(2000);\n    HashMap<String, String> params = new HashMap<>();\n    cluster.createCollection(\".system\", 1, 1, null, params);\n//    Thread.sleep(2000);\n    // test component will fail if it cant' find a blob with this data by this name\n    postBlob(\"testResource\", \"foo,bar\\nbaz,bam\");\n//    Thread.sleep(2000);\n    // if these don't load we probably failed to post the blob above\n    cluster.createCollection(\"col1\", 1, 1, \"configname\", params);\n    cluster.createCollection(\"col2\", 1, 1, \"configname\", params);\n//    Thread.sleep(2000);\n    SolrInputDocument document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col1\");\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    solrClient.add(\"col1\", document);\n    solrClient.commit(\"col1\");\n    document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col2\");\n    solrClient.add(\"col2\", document);\n    solrClient.commit(\"col2\");\n    Thread.sleep(2000);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e15955b4980562a0c1c81d08654904f3fadb83b","date":1461068916,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/BlobRepositoryCloudTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/BlobRepositoryCloudTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(1)  // only sharing *within* a node\n        .addConfig(\"configname\", TEST_PATH.resolve(\"resource-sharing\"))\n        .configure();\n//    Thread.sleep(2000);\n    HashMap<String, String> params = new HashMap<>();\n    cluster.createCollection(\".system\", 1, 1, null, params);\n    // test component will fail if it cant' find a blob with this data by this name\n    TestBlobHandler.postData(cluster.getSolrClient(), findLiveNodeURI(), \"testResource\", ByteBuffer.wrap(\"foo,bar\\nbaz,bam\".getBytes(StandardCharsets.UTF_8)));\n    //    Thread.sleep(2000);\n    // if these don't load we probably failed to post the blob above\n    cluster.createCollection(\"col1\", 1, 1, \"configname\", params);\n    cluster.createCollection(\"col2\", 1, 1, \"configname\", params);\n//    Thread.sleep(2000);\n    SolrInputDocument document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col1\");\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    solrClient.add(\"col1\", document);\n    solrClient.commit(\"col1\");\n    document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col2\");\n    solrClient.add(\"col2\", document);\n    solrClient.commit(\"col2\");\n    Thread.sleep(2000);\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(1)  // only sharing *within* a node\n        .addConfig(\"configname\", TEST_PATH.resolve(\"resource-sharing\"))\n        .configure();\n//    Thread.sleep(2000);\n    HashMap<String, String> params = new HashMap<>();\n    cluster.createCollection(\".system\", 1, 1, null, params);\n//    Thread.sleep(2000);\n    // test component will fail if it cant' find a blob with this data by this name\n    postBlob(\"testResource\", \"foo,bar\\nbaz,bam\");\n//    Thread.sleep(2000);\n    // if these don't load we probably failed to post the blob above\n    cluster.createCollection(\"col1\", 1, 1, \"configname\", params);\n    cluster.createCollection(\"col2\", 1, 1, \"configname\", params);\n//    Thread.sleep(2000);\n    SolrInputDocument document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col1\");\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    solrClient.add(\"col1\", document);\n    solrClient.commit(\"col1\");\n    document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col2\");\n    solrClient.add(\"col2\", document);\n    solrClient.commit(\"col2\");\n    Thread.sleep(2000);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e89a32cc825033ebae8bb9e1c6877c2d9d76749e","date":1476790453,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/BlobRepositoryCloudTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/BlobRepositoryCloudTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(1)  // only sharing *within* a node\n        .addConfig(\"configname\", TEST_PATH.resolve(\"resource-sharing\"))\n        .configure();\n//    Thread.sleep(2000);\n    HashMap<String, String> params = new HashMap<>();\n    CollectionAdminRequest.createCollection(\".system\", null, 1, 1)\n        .process(cluster.getSolrClient());\n    // test component will fail if it cant' find a blob with this data by this name\n    TestBlobHandler.postData(cluster.getSolrClient(), findLiveNodeURI(), \"testResource\", ByteBuffer.wrap(\"foo,bar\\nbaz,bam\".getBytes(StandardCharsets.UTF_8)));\n    //    Thread.sleep(2000);\n    // if these don't load we probably failed to post the blob above\n    CollectionAdminRequest.createCollection(\"col1\", \"configname\", 1, 1)\n        .process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"col2\", \"configname\", 1, 1)\n        .process(cluster.getSolrClient());\n\n    SolrInputDocument document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col1\");\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    solrClient.add(\"col1\", document);\n    solrClient.commit(\"col1\");\n    document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col2\");\n    solrClient.add(\"col2\", document);\n    solrClient.commit(\"col2\");\n    Thread.sleep(2000);\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(1)  // only sharing *within* a node\n        .addConfig(\"configname\", TEST_PATH.resolve(\"resource-sharing\"))\n        .configure();\n//    Thread.sleep(2000);\n    HashMap<String, String> params = new HashMap<>();\n    cluster.createCollection(\".system\", 1, 1, null, params);\n    // test component will fail if it cant' find a blob with this data by this name\n    TestBlobHandler.postData(cluster.getSolrClient(), findLiveNodeURI(), \"testResource\", ByteBuffer.wrap(\"foo,bar\\nbaz,bam\".getBytes(StandardCharsets.UTF_8)));\n    //    Thread.sleep(2000);\n    // if these don't load we probably failed to post the blob above\n    cluster.createCollection(\"col1\", 1, 1, \"configname\", params);\n    cluster.createCollection(\"col2\", 1, 1, \"configname\", params);\n//    Thread.sleep(2000);\n    SolrInputDocument document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col1\");\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    solrClient.add(\"col1\", document);\n    solrClient.commit(\"col1\");\n    document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col2\");\n    solrClient.add(\"col2\", document);\n    solrClient.commit(\"col2\");\n    Thread.sleep(2000);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/BlobRepositoryCloudTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/BlobRepositoryCloudTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(1)  // only sharing *within* a node\n        .addConfig(\"configname\", TEST_PATH.resolve(\"resource-sharing\"))\n        .configure();\n//    Thread.sleep(2000);\n    HashMap<String, String> params = new HashMap<>();\n    CollectionAdminRequest.createCollection(\".system\", null, 1, 1)\n        .process(cluster.getSolrClient());\n    // test component will fail if it cant' find a blob with this data by this name\n    TestBlobHandler.postData(cluster.getSolrClient(), findLiveNodeURI(), \"testResource\", ByteBuffer.wrap(\"foo,bar\\nbaz,bam\".getBytes(StandardCharsets.UTF_8)));\n    //    Thread.sleep(2000);\n    // if these don't load we probably failed to post the blob above\n    CollectionAdminRequest.createCollection(\"col1\", \"configname\", 1, 1)\n        .process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"col2\", \"configname\", 1, 1)\n        .process(cluster.getSolrClient());\n\n    SolrInputDocument document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col1\");\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    solrClient.add(\"col1\", document);\n    solrClient.commit(\"col1\");\n    document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col2\");\n    solrClient.add(\"col2\", document);\n    solrClient.commit(\"col2\");\n    Thread.sleep(2000);\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(1)  // only sharing *within* a node\n        .addConfig(\"configname\", TEST_PATH.resolve(\"resource-sharing\"))\n        .configure();\n//    Thread.sleep(2000);\n    HashMap<String, String> params = new HashMap<>();\n    cluster.createCollection(\".system\", 1, 1, null, params);\n    // test component will fail if it cant' find a blob with this data by this name\n    TestBlobHandler.postData(cluster.getSolrClient(), findLiveNodeURI(), \"testResource\", ByteBuffer.wrap(\"foo,bar\\nbaz,bam\".getBytes(StandardCharsets.UTF_8)));\n    //    Thread.sleep(2000);\n    // if these don't load we probably failed to post the blob above\n    cluster.createCollection(\"col1\", 1, 1, \"configname\", params);\n    cluster.createCollection(\"col2\", 1, 1, \"configname\", params);\n//    Thread.sleep(2000);\n    SolrInputDocument document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col1\");\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    solrClient.add(\"col1\", document);\n    solrClient.commit(\"col1\");\n    document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col2\");\n    solrClient.add(\"col2\", document);\n    solrClient.commit(\"col2\");\n    Thread.sleep(2000);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55ed5a78f8a4b37108ac73a894a105db562d303e","date":1500477652,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/BlobRepositoryCloudTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/BlobRepositoryCloudTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(1)  // only sharing *within* a node\n        .addConfig(\"configname\", TEST_PATH.resolve(\"resource-sharing\"))\n        .configure();\n//    Thread.sleep(2000);\n    HashMap<String, String> params = new HashMap<>();\n    CollectionAdminRequest.createCollection(CollectionAdminParams.SYSTEM_COLL, null, 1, 1)\n        .process(cluster.getSolrClient());\n    // test component will fail if it cant' find a blob with this data by this name\n    TestBlobHandler.postData(cluster.getSolrClient(), findLiveNodeURI(), \"testResource\", ByteBuffer.wrap(\"foo,bar\\nbaz,bam\".getBytes(StandardCharsets.UTF_8)));\n    //    Thread.sleep(2000);\n    // if these don't load we probably failed to post the blob above\n    CollectionAdminRequest.createCollection(\"col1\", \"configname\", 1, 1)\n        .process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"col2\", \"configname\", 1, 1)\n        .process(cluster.getSolrClient());\n\n    SolrInputDocument document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col1\");\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    solrClient.add(\"col1\", document);\n    solrClient.commit(\"col1\");\n    document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col2\");\n    solrClient.add(\"col2\", document);\n    solrClient.commit(\"col2\");\n    Thread.sleep(2000);\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(1)  // only sharing *within* a node\n        .addConfig(\"configname\", TEST_PATH.resolve(\"resource-sharing\"))\n        .configure();\n//    Thread.sleep(2000);\n    HashMap<String, String> params = new HashMap<>();\n    CollectionAdminRequest.createCollection(\".system\", null, 1, 1)\n        .process(cluster.getSolrClient());\n    // test component will fail if it cant' find a blob with this data by this name\n    TestBlobHandler.postData(cluster.getSolrClient(), findLiveNodeURI(), \"testResource\", ByteBuffer.wrap(\"foo,bar\\nbaz,bam\".getBytes(StandardCharsets.UTF_8)));\n    //    Thread.sleep(2000);\n    // if these don't load we probably failed to post the blob above\n    CollectionAdminRequest.createCollection(\"col1\", \"configname\", 1, 1)\n        .process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"col2\", \"configname\", 1, 1)\n        .process(cluster.getSolrClient());\n\n    SolrInputDocument document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col1\");\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    solrClient.add(\"col1\", document);\n    solrClient.commit(\"col1\");\n    document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col2\");\n    solrClient.add(\"col2\", document);\n    solrClient.commit(\"col2\");\n    Thread.sleep(2000);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/BlobRepositoryCloudTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/BlobRepositoryCloudTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(1)  // only sharing *within* a node\n        .addConfig(\"configname\", TEST_PATH.resolve(\"resource-sharing\"))\n        .configure();\n//    Thread.sleep(2000);\n    HashMap<String, String> params = new HashMap<>();\n    CollectionAdminRequest.createCollection(CollectionAdminParams.SYSTEM_COLL, null, 1, 1)\n        .process(cluster.getSolrClient());\n    // test component will fail if it cant' find a blob with this data by this name\n    TestBlobHandler.postData(cluster.getSolrClient(), findLiveNodeURI(), \"testResource\", ByteBuffer.wrap(\"foo,bar\\nbaz,bam\".getBytes(StandardCharsets.UTF_8)));\n    //    Thread.sleep(2000);\n    // if these don't load we probably failed to post the blob above\n    CollectionAdminRequest.createCollection(\"col1\", \"configname\", 1, 1)\n        .process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"col2\", \"configname\", 1, 1)\n        .process(cluster.getSolrClient());\n\n    SolrInputDocument document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col1\");\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    solrClient.add(\"col1\", document);\n    solrClient.commit(\"col1\");\n    document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col2\");\n    solrClient.add(\"col2\", document);\n    solrClient.commit(\"col2\");\n    Thread.sleep(2000);\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(1)  // only sharing *within* a node\n        .addConfig(\"configname\", TEST_PATH.resolve(\"resource-sharing\"))\n        .configure();\n//    Thread.sleep(2000);\n    HashMap<String, String> params = new HashMap<>();\n    CollectionAdminRequest.createCollection(\".system\", null, 1, 1)\n        .process(cluster.getSolrClient());\n    // test component will fail if it cant' find a blob with this data by this name\n    TestBlobHandler.postData(cluster.getSolrClient(), findLiveNodeURI(), \"testResource\", ByteBuffer.wrap(\"foo,bar\\nbaz,bam\".getBytes(StandardCharsets.UTF_8)));\n    //    Thread.sleep(2000);\n    // if these don't load we probably failed to post the blob above\n    CollectionAdminRequest.createCollection(\"col1\", \"configname\", 1, 1)\n        .process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"col2\", \"configname\", 1, 1)\n        .process(cluster.getSolrClient());\n\n    SolrInputDocument document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col1\");\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    solrClient.add(\"col1\", document);\n    solrClient.commit(\"col1\");\n    document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col2\");\n    solrClient.add(\"col2\", document);\n    solrClient.commit(\"col2\");\n    Thread.sleep(2000);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/BlobRepositoryCloudTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/BlobRepositoryCloudTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(1)  // only sharing *within* a node\n        .addConfig(\"configname\", TEST_PATH.resolve(\"resource-sharing\"))\n        .configure();\n//    Thread.sleep(2000);\n    HashMap<String, String> params = new HashMap<>();\n    CollectionAdminRequest.createCollection(CollectionAdminParams.SYSTEM_COLL, null, 1, 1)\n        .process(cluster.getSolrClient());\n    // test component will fail if it cant' find a blob with this data by this name\n    TestBlobHandler.postData(cluster.getSolrClient(), findLiveNodeURI(), \"testResource\", ByteBuffer.wrap(\"foo,bar\\nbaz,bam\".getBytes(StandardCharsets.UTF_8)));\n    //    Thread.sleep(2000);\n    // if these don't load we probably failed to post the blob above\n    CollectionAdminRequest.createCollection(\"col1\", \"configname\", 1, 1)\n        .process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"col2\", \"configname\", 1, 1)\n        .process(cluster.getSolrClient());\n\n    SolrInputDocument document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col1\");\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    solrClient.add(\"col1\", document);\n    solrClient.commit(\"col1\");\n    document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col2\");\n    solrClient.add(\"col2\", document);\n    solrClient.commit(\"col2\");\n    Thread.sleep(2000);\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(1)  // only sharing *within* a node\n        .addConfig(\"configname\", TEST_PATH.resolve(\"resource-sharing\"))\n        .configure();\n//    Thread.sleep(2000);\n    HashMap<String, String> params = new HashMap<>();\n    CollectionAdminRequest.createCollection(\".system\", null, 1, 1)\n        .process(cluster.getSolrClient());\n    // test component will fail if it cant' find a blob with this data by this name\n    TestBlobHandler.postData(cluster.getSolrClient(), findLiveNodeURI(), \"testResource\", ByteBuffer.wrap(\"foo,bar\\nbaz,bam\".getBytes(StandardCharsets.UTF_8)));\n    //    Thread.sleep(2000);\n    // if these don't load we probably failed to post the blob above\n    CollectionAdminRequest.createCollection(\"col1\", \"configname\", 1, 1)\n        .process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"col2\", \"configname\", 1, 1)\n        .process(cluster.getSolrClient());\n\n    SolrInputDocument document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col1\");\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    solrClient.add(\"col1\", document);\n    solrClient.commit(\"col1\");\n    document = new SolrInputDocument();\n    document.addField(\"id\", \"1\");\n    document.addField(\"text\", \"col2\");\n    solrClient.add(\"col2\", document);\n    solrClient.commit(\"col2\");\n    Thread.sleep(2000);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["e89a32cc825033ebae8bb9e1c6877c2d9d76749e","55ed5a78f8a4b37108ac73a894a105db562d303e"],"e89a32cc825033ebae8bb9e1c6877c2d9d76749e":["0e15955b4980562a0c1c81d08654904f3fadb83b"],"55ed5a78f8a4b37108ac73a894a105db562d303e":["e89a32cc825033ebae8bb9e1c6877c2d9d76749e"],"713122036535651642e6d4fe57ce12b449e18473":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5fab1d180f47e9924e0e56501b42034b3476f2b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ba8e2430792476c6da9e0e26db31135f5c74f83a":["713122036535651642e6d4fe57ce12b449e18473"],"5fab1d180f47e9924e0e56501b42034b3476f2b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0e15955b4980562a0c1c81d08654904f3fadb83b":["713122036535651642e6d4fe57ce12b449e18473","ba8e2430792476c6da9e0e26db31135f5c74f83a"],"560c18d71dad43d675158783c3840f8c80d6d39c":["e89a32cc825033ebae8bb9e1c6877c2d9d76749e","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["0e15955b4980562a0c1c81d08654904f3fadb83b","e89a32cc825033ebae8bb9e1c6877c2d9d76749e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["560c18d71dad43d675158783c3840f8c80d6d39c"]},"commit2Childs":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"e89a32cc825033ebae8bb9e1c6877c2d9d76749e":["c304e97e7c1d472bc70e801b35ee78583916c6cd","55ed5a78f8a4b37108ac73a894a105db562d303e","560c18d71dad43d675158783c3840f8c80d6d39c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"55ed5a78f8a4b37108ac73a894a105db562d303e":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"713122036535651642e6d4fe57ce12b449e18473":["ba8e2430792476c6da9e0e26db31135f5c74f83a","0e15955b4980562a0c1c81d08654904f3fadb83b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["713122036535651642e6d4fe57ce12b449e18473","5fab1d180f47e9924e0e56501b42034b3476f2b1"],"ba8e2430792476c6da9e0e26db31135f5c74f83a":["0e15955b4980562a0c1c81d08654904f3fadb83b"],"5fab1d180f47e9924e0e56501b42034b3476f2b1":["713122036535651642e6d4fe57ce12b449e18473"],"0e15955b4980562a0c1c81d08654904f3fadb83b":["e89a32cc825033ebae8bb9e1c6877c2d9d76749e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"560c18d71dad43d675158783c3840f8c80d6d39c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}