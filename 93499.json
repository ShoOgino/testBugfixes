{"path":"lucene/src/java/org/apache/lucene/analysis/CharTokenizer#CharTokenizer(Version,AttributeSource,Reader).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/CharTokenizer#CharTokenizer(Version,AttributeSource,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharTokenizer#CharTokenizer(Version,AttributeSource,Reader).mjava","sourceNew":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param source\n   *          the attribute source to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeSource source,\n      Reader input) {\n    super(source, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n    offsetAtt = addAttribute(OffsetAttribute.class);\n    termAtt = addAttribute(TermAttribute.class);\n    useOldAPI = useOldAPI(matchVersion);\n    ioBuffer = CharacterUtils.newCharacterBuffer(IO_BUFFER_SIZE);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param source\n   *          the attribute source to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeSource source,\n      Reader input) {\n    super(source, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n    offsetAtt = addAttribute(OffsetAttribute.class);\n    termAtt = addAttribute(TermAttribute.class);\n    useOldAPI = useOldAPI(matchVersion);\n    ioBuffer = CharacterUtils.newCharacterBuffer(IO_BUFFER_SIZE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a775c547c3519b47efd41c09cb47100ddb9604c7","date":1270914087,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/CharTokenizer#CharTokenizer(Version,AttributeSource,Reader).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/CharTokenizer#CharTokenizer(Version,AttributeSource,Reader).mjava","sourceNew":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param source\n   *          the attribute source to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeSource source,\n      Reader input) {\n    super(source, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n    useOldAPI = useOldAPI(matchVersion);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param source\n   *          the attribute source to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeSource source,\n      Reader input) {\n    super(source, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n    offsetAtt = addAttribute(OffsetAttribute.class);\n    termAtt = addAttribute(TermAttribute.class);\n    useOldAPI = useOldAPI(matchVersion);\n    ioBuffer = CharacterUtils.newCharacterBuffer(IO_BUFFER_SIZE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/CharTokenizer#CharTokenizer(Version,AttributeSource,Reader).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/CharTokenizer#CharTokenizer(Version,AttributeSource,Reader).mjava","sourceNew":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param source\n   *          the attribute source to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeSource source,\n      Reader input) {\n    super(source, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param source\n   *          the attribute source to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeSource source,\n      Reader input) {\n    super(source, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n    useOldAPI = useOldAPI(matchVersion);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/analysis/CharTokenizer#CharTokenizer(Version,AttributeSource,Reader).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/CharTokenizer#CharTokenizer(Version,AttributeSource,Reader).mjava","sourceNew":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param source\n   *          the attribute source to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeSource source,\n      Reader input) {\n    super(source, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param source\n   *          the attribute source to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeSource source,\n      Reader input) {\n    super(source, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n    useOldAPI = useOldAPI(matchVersion);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/analysis/CharTokenizer#CharTokenizer(Version,AttributeSource,Reader).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/CharTokenizer#CharTokenizer(Version,AttributeSource,Reader).mjava","sourceNew":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param source\n   *          the attribute source to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeSource source,\n      Reader input) {\n    super(source, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param source\n   *          the attribute source to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeSource source,\n      Reader input) {\n    super(source, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n    useOldAPI = useOldAPI(matchVersion);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d6179f9c4237a7e5d423f4e4b439a94e967efc9","date":1304382587,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharTokenizer#CharTokenizer(Version,AttributeSource,Reader).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/CharTokenizer#CharTokenizer(Version,AttributeSource,Reader).mjava","sourceNew":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param source\n   *          the attribute source to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeSource source,\n      Reader input) {\n    super(source, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param source\n   *          the attribute source to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeSource source,\n      Reader input) {\n    super(source, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharTokenizer#CharTokenizer(Version,AttributeSource,Reader).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/CharTokenizer#CharTokenizer(Version,AttributeSource,Reader).mjava","sourceNew":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param source\n   *          the attribute source to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeSource source,\n      Reader input) {\n    super(source, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param source\n   *          the attribute source to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeSource source,\n      Reader input) {\n    super(source, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharTokenizer#CharTokenizer(Version,AttributeSource,Reader).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/CharTokenizer#CharTokenizer(Version,AttributeSource,Reader).mjava","sourceNew":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param source\n   *          the attribute source to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeSource source,\n      Reader input) {\n    super(source, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param source\n   *          the attribute source to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeSource source,\n      Reader input) {\n    super(source, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1d6179f9c4237a7e5d423f4e4b439a94e967efc9":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"a3776dccca01c11e7046323cfad46a3b4a471233":["4e8cc373c801e54cec75daf9f52792cb4b17f536","1d6179f9c4237a7e5d423f4e4b439a94e967efc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["3bb13258feba31ab676502787ab2e1779f129b7a","1d6179f9c4237a7e5d423f4e4b439a94e967efc9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a775c547c3519b47efd41c09cb47100ddb9604c7","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"3bb13258feba31ab676502787ab2e1779f129b7a":["a775c547c3519b47efd41c09cb47100ddb9604c7","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d6179f9c4237a7e5d423f4e4b439a94e967efc9"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["a775c547c3519b47efd41c09cb47100ddb9604c7"],"a775c547c3519b47efd41c09cb47100ddb9604c7":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1d6179f9c4237a7e5d423f4e4b439a94e967efc9":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"3bb13258feba31ab676502787ab2e1779f129b7a":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["1d6179f9c4237a7e5d423f4e4b439a94e967efc9","a3776dccca01c11e7046323cfad46a3b4a471233","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"a775c547c3519b47efd41c09cb47100ddb9604c7":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a775c547c3519b47efd41c09cb47100ddb9604c7"]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}