{"path":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/DistanceUtilsTest#testBoxCorner().mjava","commits":[{"id":"5f900d5ce814fc22ea498d3303d1f833f5bf320c","date":1278720761,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/DistanceUtilsTest#testBoxCorner().mjava","pathOld":"/dev/null","sourceNew":"  public void testBoxCorner() throws Exception {\n    double[] zero = new double[]{0, 0};\n    double[] zeroOne = new double[]{0, 1};\n    double[] oneOne = new double[]{1, 1};\n    double[] pt1 = new double[]{1.5, 110.3};\n    double[] result = DistanceUtils.vectorBoxCorner(zero, null, Math.sqrt(2), true);\n    assertEquals(1.0, result[0]);\n    assertEquals(1.0, result[1]);\n\n    result = DistanceUtils.vectorBoxCorner(zero, null, Math.sqrt(2), false);\n    assertEquals(-1.0, result[0]);\n    assertEquals(-1.0, result[1]);\n\n    result = DistanceUtils.vectorBoxCorner(oneOne, null, Math.sqrt(2), true);\n    assertEquals(2.0, result[0]);\n    assertEquals(2.0, result[1]);\n\n    result = DistanceUtils.vectorBoxCorner(zeroOne, null, Math.sqrt(2), true);\n    assertEquals(1.0, result[0]);\n    assertEquals(2.0, result[1]);\n\n    result = DistanceUtils.vectorBoxCorner(pt1, null, Math.sqrt(2), true);\n    assertEquals(2.5, result[0]);\n    assertEquals(111.3, result[1]);\n\n    result = DistanceUtils.vectorBoxCorner(pt1, null, Math.sqrt(2), false);\n    assertEquals(0.5, result[0]);\n    assertEquals(109.3, result[1]);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/DistanceUtilsTest#testBoxCorner().mjava","pathOld":"/dev/null","sourceNew":"  public void testBoxCorner() throws Exception {\n    double[] zero = new double[]{0, 0};\n    double[] zeroOne = new double[]{0, 1};\n    double[] oneOne = new double[]{1, 1};\n    double[] pt1 = new double[]{1.5, 110.3};\n    double[] result = DistanceUtils.vectorBoxCorner(zero, null, Math.sqrt(2), true);\n    assertEquals(1.0, result[0]);\n    assertEquals(1.0, result[1]);\n\n    result = DistanceUtils.vectorBoxCorner(zero, null, Math.sqrt(2), false);\n    assertEquals(-1.0, result[0]);\n    assertEquals(-1.0, result[1]);\n\n    result = DistanceUtils.vectorBoxCorner(oneOne, null, Math.sqrt(2), true);\n    assertEquals(2.0, result[0]);\n    assertEquals(2.0, result[1]);\n\n    result = DistanceUtils.vectorBoxCorner(zeroOne, null, Math.sqrt(2), true);\n    assertEquals(1.0, result[0]);\n    assertEquals(2.0, result[1]);\n\n    result = DistanceUtils.vectorBoxCorner(pt1, null, Math.sqrt(2), true);\n    assertEquals(2.5, result[0]);\n    assertEquals(111.3, result[1]);\n\n    result = DistanceUtils.vectorBoxCorner(pt1, null, Math.sqrt(2), false);\n    assertEquals(0.5, result[0]);\n    assertEquals(109.3, result[1]);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58f6129aa3cc4d7092fe2dacee662b263fb66e94","date":1315473880,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/DistanceUtilsTest#testBoxCorner().mjava","pathOld":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/DistanceUtilsTest#testBoxCorner().mjava","sourceNew":"  public void testBoxCorner() throws Exception {\n    double[] zero = new double[]{0, 0};\n    double[] zeroOne = new double[]{0, 1};\n    double[] oneOne = new double[]{1, 1};\n    double[] pt1 = new double[]{1.5, 110.3};\n    double[] result = DistanceUtils.vectorBoxCorner(zero, null, Math.sqrt(2), true);\n    assertEquals(1.0, result[0], 0);\n    assertEquals(1.0, result[1], 0);\n\n    result = DistanceUtils.vectorBoxCorner(zero, null, Math.sqrt(2), false);\n    assertEquals(-1.0, result[0], 0);\n    assertEquals(-1.0, result[1], 0);\n\n    result = DistanceUtils.vectorBoxCorner(oneOne, null, Math.sqrt(2), true);\n    assertEquals(2.0, result[0], 0);\n    assertEquals(2.0, result[1], 0);\n\n    result = DistanceUtils.vectorBoxCorner(zeroOne, null, Math.sqrt(2), true);\n    assertEquals(1.0, result[0], 0);\n    assertEquals(2.0, result[1], 0);\n\n    result = DistanceUtils.vectorBoxCorner(pt1, null, Math.sqrt(2), true);\n    assertEquals(2.5, result[0], 0.1);\n    assertEquals(111.3, result[1], 0.1);\n\n    result = DistanceUtils.vectorBoxCorner(pt1, null, Math.sqrt(2), false);\n    assertEquals(0.5, result[0], 0.1);\n    assertEquals(109.3, result[1], 0.1);\n\n  }\n\n","sourceOld":"  public void testBoxCorner() throws Exception {\n    double[] zero = new double[]{0, 0};\n    double[] zeroOne = new double[]{0, 1};\n    double[] oneOne = new double[]{1, 1};\n    double[] pt1 = new double[]{1.5, 110.3};\n    double[] result = DistanceUtils.vectorBoxCorner(zero, null, Math.sqrt(2), true);\n    assertEquals(1.0, result[0]);\n    assertEquals(1.0, result[1]);\n\n    result = DistanceUtils.vectorBoxCorner(zero, null, Math.sqrt(2), false);\n    assertEquals(-1.0, result[0]);\n    assertEquals(-1.0, result[1]);\n\n    result = DistanceUtils.vectorBoxCorner(oneOne, null, Math.sqrt(2), true);\n    assertEquals(2.0, result[0]);\n    assertEquals(2.0, result[1]);\n\n    result = DistanceUtils.vectorBoxCorner(zeroOne, null, Math.sqrt(2), true);\n    assertEquals(1.0, result[0]);\n    assertEquals(2.0, result[1]);\n\n    result = DistanceUtils.vectorBoxCorner(pt1, null, Math.sqrt(2), true);\n    assertEquals(2.5, result[0]);\n    assertEquals(111.3, result[1]);\n\n    result = DistanceUtils.vectorBoxCorner(pt1, null, Math.sqrt(2), false);\n    assertEquals(0.5, result[0]);\n    assertEquals(109.3, result[1]);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fb7e38713d15939e085d376c6391e6e6262a81f","date":1329897272,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/DistanceUtilsTest#testBoxCorner().mjava","sourceNew":null,"sourceOld":"  public void testBoxCorner() throws Exception {\n    double[] zero = new double[]{0, 0};\n    double[] zeroOne = new double[]{0, 1};\n    double[] oneOne = new double[]{1, 1};\n    double[] pt1 = new double[]{1.5, 110.3};\n    double[] result = DistanceUtils.vectorBoxCorner(zero, null, Math.sqrt(2), true);\n    assertEquals(1.0, result[0], 0);\n    assertEquals(1.0, result[1], 0);\n\n    result = DistanceUtils.vectorBoxCorner(zero, null, Math.sqrt(2), false);\n    assertEquals(-1.0, result[0], 0);\n    assertEquals(-1.0, result[1], 0);\n\n    result = DistanceUtils.vectorBoxCorner(oneOne, null, Math.sqrt(2), true);\n    assertEquals(2.0, result[0], 0);\n    assertEquals(2.0, result[1], 0);\n\n    result = DistanceUtils.vectorBoxCorner(zeroOne, null, Math.sqrt(2), true);\n    assertEquals(1.0, result[0], 0);\n    assertEquals(2.0, result[1], 0);\n\n    result = DistanceUtils.vectorBoxCorner(pt1, null, Math.sqrt(2), true);\n    assertEquals(2.5, result[0], 0.1);\n    assertEquals(111.3, result[1], 0.1);\n\n    result = DistanceUtils.vectorBoxCorner(pt1, null, Math.sqrt(2), false);\n    assertEquals(0.5, result[0], 0.1);\n    assertEquals(109.3, result[1], 0.1);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e47768b261c28e7e6032060e8331475c81057953","date":1331681297,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/DistanceUtilsTest#testBoxCorner().mjava","sourceNew":null,"sourceOld":"  public void testBoxCorner() throws Exception {\n    double[] zero = new double[]{0, 0};\n    double[] zeroOne = new double[]{0, 1};\n    double[] oneOne = new double[]{1, 1};\n    double[] pt1 = new double[]{1.5, 110.3};\n    double[] result = DistanceUtils.vectorBoxCorner(zero, null, Math.sqrt(2), true);\n    assertEquals(1.0, result[0], 0);\n    assertEquals(1.0, result[1], 0);\n\n    result = DistanceUtils.vectorBoxCorner(zero, null, Math.sqrt(2), false);\n    assertEquals(-1.0, result[0], 0);\n    assertEquals(-1.0, result[1], 0);\n\n    result = DistanceUtils.vectorBoxCorner(oneOne, null, Math.sqrt(2), true);\n    assertEquals(2.0, result[0], 0);\n    assertEquals(2.0, result[1], 0);\n\n    result = DistanceUtils.vectorBoxCorner(zeroOne, null, Math.sqrt(2), true);\n    assertEquals(1.0, result[0], 0);\n    assertEquals(2.0, result[1], 0);\n\n    result = DistanceUtils.vectorBoxCorner(pt1, null, Math.sqrt(2), true);\n    assertEquals(2.5, result[0], 0.1);\n    assertEquals(111.3, result[1], 0.1);\n\n    result = DistanceUtils.vectorBoxCorner(pt1, null, Math.sqrt(2), false);\n    assertEquals(0.5, result[0], 0.1);\n    assertEquals(109.3, result[1], 0.1);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5f900d5ce814fc22ea498d3303d1f833f5bf320c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"58f6129aa3cc4d7092fe2dacee662b263fb66e94":["5f900d5ce814fc22ea498d3303d1f833f5bf320c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5f900d5ce814fc22ea498d3303d1f833f5bf320c"],"e47768b261c28e7e6032060e8331475c81057953":["58f6129aa3cc4d7092fe2dacee662b263fb66e94","2fb7e38713d15939e085d376c6391e6e6262a81f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e47768b261c28e7e6032060e8331475c81057953"],"2fb7e38713d15939e085d376c6391e6e6262a81f":["58f6129aa3cc4d7092fe2dacee662b263fb66e94"]},"commit2Childs":{"5f900d5ce814fc22ea498d3303d1f833f5bf320c":["58f6129aa3cc4d7092fe2dacee662b263fb66e94","5f4e87790277826a2aea119328600dfb07761f32"],"58f6129aa3cc4d7092fe2dacee662b263fb66e94":["e47768b261c28e7e6032060e8331475c81057953","2fb7e38713d15939e085d376c6391e6e6262a81f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f900d5ce814fc22ea498d3303d1f833f5bf320c","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":[],"e47768b261c28e7e6032060e8331475c81057953":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2fb7e38713d15939e085d376c6391e6e6262a81f":["e47768b261c28e7e6032060e8331475c81057953"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}