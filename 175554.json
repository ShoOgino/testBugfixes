{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setScorer(Scorer).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setScorer(Scorer).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setScorer(Scorer).mjava","sourceNew":"  public void setScorer(Scorer scorer) throws IOException {\n    this.scorer = scorer;\n    for (GroupHead groupHead : groups.values()) {\n      for (FieldComparator<?> comparator : groupHead.comparators) {\n        comparator.setScorer(scorer);\n      }\n    }\n  }\n\n","sourceOld":"  public void setScorer(Scorer scorer) throws IOException {\n    this.scorer = scorer;\n    for (GroupHead groupHead : groups.values()) {\n      for (FieldComparator<?> comparator : groupHead.comparators) {\n        comparator.setScorer(scorer);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc","date":1346106609,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setScorer(Scorer).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setScorer(Scorer).mjava","sourceNew":"  @Override\n  public void setScorer(Scorer scorer) throws IOException {\n    this.scorer = scorer;\n    for (GroupHead groupHead : groups.values()) {\n      for (FieldComparator<?> comparator : groupHead.comparators) {\n        comparator.setScorer(scorer);\n      }\n    }\n  }\n\n","sourceOld":"  public void setScorer(Scorer scorer) throws IOException {\n    this.scorer = scorer;\n    for (GroupHead groupHead : groups.values()) {\n      for (FieldComparator<?> comparator : groupHead.comparators) {\n        comparator.setScorer(scorer);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setScorer(Scorer).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setScorer(Scorer).mjava","sourceNew":"  @Override\n  public void setScorer(Scorer scorer) throws IOException {\n    this.scorer = scorer;\n    for (GroupHead groupHead : groups.values()) {\n      for (FieldComparator<?> comparator : groupHead.comparators) {\n        comparator.setScorer(scorer);\n      }\n    }\n  }\n\n","sourceOld":"  public void setScorer(Scorer scorer) throws IOException {\n    this.scorer = scorer;\n    for (GroupHead groupHead : groups.values()) {\n      for (FieldComparator<?> comparator : groupHead.comparators) {\n        comparator.setScorer(scorer);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"901e951cec2e6af4e503209a6721c8834db23279","date":1420556599,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setScorer(Scorer).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setScorer(Scorer).mjava","sourceNew":"  @Override\n  public void setScorer(Scorer scorer) throws IOException {\n    this.scorer = scorer;\n    for (GroupHead groupHead : groups.values()) {\n      for (LeafFieldComparator comparator : groupHead.leafComparators) {\n        comparator.setScorer(scorer);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setScorer(Scorer scorer) throws IOException {\n    this.scorer = scorer;\n    for (GroupHead groupHead : groups.values()) {\n      for (FieldComparator<?> comparator : groupHead.comparators) {\n        comparator.setScorer(scorer);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20e94e61fe5291647346b70437617e6b6c370408","date":1483783127,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setScorer(Scorer).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setScorer(Scorer).mjava","sourceNew":"  @Override\n  public void setScorer(Scorer scorer) throws IOException {\n    this.scorer = scorer;\n    for (FunctionGroupHead groupHead : groups.values()) {\n      for (LeafFieldComparator comparator : groupHead.leafComparators) {\n        comparator.setScorer(scorer);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setScorer(Scorer scorer) throws IOException {\n    this.scorer = scorer;\n    for (GroupHead groupHead : groups.values()) {\n      for (LeafFieldComparator comparator : groupHead.leafComparators) {\n        comparator.setScorer(scorer);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setScorer(Scorer).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setScorer(Scorer).mjava","sourceNew":"  @Override\n  public void setScorer(Scorer scorer) throws IOException {\n    this.scorer = scorer;\n    for (FunctionGroupHead groupHead : groups.values()) {\n      for (LeafFieldComparator comparator : groupHead.leafComparators) {\n        comparator.setScorer(scorer);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setScorer(Scorer scorer) throws IOException {\n    this.scorer = scorer;\n    for (GroupHead groupHead : groups.values()) {\n      for (LeafFieldComparator comparator : groupHead.leafComparators) {\n        comparator.setScorer(scorer);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ae958a739da1866696f442384393ba2f13e33e5","date":1491819018,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/AllGroupHeadsCollector#setScorer(Scorer).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setScorer(Scorer).mjava","sourceNew":"  @Override\n  public void setScorer(Scorer scorer) throws IOException {\n    this.scorer = scorer;\n    for (GroupHead<T> head : heads.values()) {\n      head.setScorer(scorer);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setScorer(Scorer scorer) throws IOException {\n    this.scorer = scorer;\n    for (FunctionGroupHead groupHead : groups.values()) {\n      for (LeafFieldComparator comparator : groupHead.leafComparators) {\n        comparator.setScorer(scorer);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#setScorer(Scorer).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void setScorer(Scorer scorer) throws IOException {\n    this.scorer = scorer;\n    for (FunctionGroupHead groupHead : groups.values()) {\n      for (LeafFieldComparator comparator : groupHead.leafComparators) {\n        comparator.setScorer(scorer);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["20e94e61fe5291647346b70437617e6b6c370408"],"99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"20e94e61fe5291647346b70437617e6b6c370408":["901e951cec2e6af4e503209a6721c8834db23279"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"901e951cec2e6af4e503209a6721c8834db23279":["99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["901e951cec2e6af4e503209a6721c8834db23279","20e94e61fe5291647346b70437617e6b6c370408"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["b89678825b68eccaf09e6ab71675fc0b0af1e099","99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ae958a739da1866696f442384393ba2f13e33e5"],"7ae958a739da1866696f442384393ba2f13e33e5":["20e94e61fe5291647346b70437617e6b6c370408"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc":["901e951cec2e6af4e503209a6721c8834db23279","05a14b2611ead08655a2b2bdc61632eb31316e57"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc","05a14b2611ead08655a2b2bdc61632eb31316e57"],"20e94e61fe5291647346b70437617e6b6c370408":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","7ae958a739da1866696f442384393ba2f13e33e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"901e951cec2e6af4e503209a6721c8834db23279":["20e94e61fe5291647346b70437617e6b6c370408","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7ae958a739da1866696f442384393ba2f13e33e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}