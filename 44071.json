{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#addField(String,String,boolean,int).mjava","commits":[{"id":"d6a43d4d79c846f6b9308b9adc72dd8de0ab6bdb","date":1233863590,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#addField(String,String,boolean,int).mjava","pathOld":"/dev/null","sourceNew":"  public synchronized XPathRecordReader addField(String name, String xpath, boolean multiValued, int flags) {\n    if (!xpath.startsWith(\"/\"))\n      throw new RuntimeException(\"xpath must start with '/' : \" + xpath);\n    addField0(xpath, name, multiValued, false, flags);\n    return this;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949","date":1252931993,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#addField(String,String,boolean,int).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#addField(String,String,boolean,int).mjava","sourceNew":"  /**Add a field's XPATH and its name.\n   * @param name . The name by which this field is referred in the emitted record\n   * @param xpath . The xpath  to this field\n   * @param multiValued . If this is 'true' , then the emitted record will have a List<String> as value\n   * @param flags . The only supported flag is 'FLATTEN'\n   */\n  public synchronized XPathRecordReader addField(String name, String xpath, boolean multiValued, int flags) {\n    if (!xpath.startsWith(\"/\"))\n      throw new RuntimeException(\"xpath must start with '/' : \" + xpath);\n    addField0(xpath, name, multiValued, false, flags);\n    return this;\n  }\n\n","sourceOld":"  public synchronized XPathRecordReader addField(String name, String xpath, boolean multiValued, int flags) {\n    if (!xpath.startsWith(\"/\"))\n      throw new RuntimeException(\"xpath must start with '/' : \" + xpath);\n    addField0(xpath, name, multiValued, false, flags);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b14ccda0bdb398cf86bc3804e1c136a615dbd89b","date":1253269935,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#addField(String,String,boolean,int).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#addField(String,String,boolean,int).mjava","sourceNew":"  /**\n   * A wrapper around {@link #addField0 addField0()} to create a series of Nodes \n   * based on the supplied Xpath for the given fieldName. The created nodes \n   * are inserted into a Node tree.\n   *\n   * @param name The name for this field in the emitted record\n   * @param xpath The xpath expression for this field\n   * @param multiValued If 'true' then the emitted record will have values in \n   *                    a List<String>\n   * @param flags FLATTEN: Recursivly combine text from all child XML elements\n   */\n  public synchronized XPathRecordReader addField(String name, String xpath, boolean multiValued, int flags) {\n    if (!xpath.startsWith(\"/\"))\n      throw new RuntimeException(\"xpath must start with '/' : \" + xpath);\n    addField0(xpath, name, multiValued, false, flags);\n    return this;\n  }\n\n","sourceOld":"  /**Add a field's XPATH and its name.\n   * @param name . The name by which this field is referred in the emitted record\n   * @param xpath . The xpath  to this field\n   * @param multiValued . If this is 'true' , then the emitted record will have a List<String> as value\n   * @param flags . The only supported flag is 'FLATTEN'\n   */\n  public synchronized XPathRecordReader addField(String name, String xpath, boolean multiValued, int flags) {\n    if (!xpath.startsWith(\"/\"))\n      throw new RuntimeException(\"xpath must start with '/' : \" + xpath);\n    addField0(xpath, name, multiValued, false, flags);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f2a93a28913071a0b713be1d4b8a1181388d550","date":1254814948,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#addField(String,String,boolean,int).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#addField(String,String,boolean,int).mjava","sourceNew":"  /**\n   * A wrapper around {@link #addField0 addField0()} to create a series of  \n   * Nodes based on the supplied Xpath and a given fieldName. The created  \n   * nodes are inserted into a Node tree.\n   *\n   * @param name The name for this field in the emitted record\n   * @param xpath The xpath expression for this field\n   * @param multiValued If 'true' then the emitted record will have values in \n   *                    a List<String>\n   * @param flags FLATTEN: Recursivly combine text from all child XML elements\n   */\n  public synchronized XPathRecordReader addField(String name, String xpath, boolean multiValued, int flags) {\n    addField0(xpath, name, multiValued, false, flags);\n    return this;\n  }\n\n","sourceOld":"  /**\n   * A wrapper around {@link #addField0 addField0()} to create a series of Nodes \n   * based on the supplied Xpath for the given fieldName. The created nodes \n   * are inserted into a Node tree.\n   *\n   * @param name The name for this field in the emitted record\n   * @param xpath The xpath expression for this field\n   * @param multiValued If 'true' then the emitted record will have values in \n   *                    a List<String>\n   * @param flags FLATTEN: Recursivly combine text from all child XML elements\n   */\n  public synchronized XPathRecordReader addField(String name, String xpath, boolean multiValued, int flags) {\n    if (!xpath.startsWith(\"/\"))\n      throw new RuntimeException(\"xpath must start with '/' : \" + xpath);\n    addField0(xpath, name, multiValued, false, flags);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#addField(String,String,boolean,int).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#addField(String,String,boolean,int).mjava","sourceNew":"  /**\n   * A wrapper around {@link #addField0 addField0()} to create a series of  \n   * Nodes based on the supplied Xpath and a given fieldName. The created  \n   * nodes are inserted into a Node tree.\n   *\n   * @param name The name for this field in the emitted record\n   * @param xpath The xpath expression for this field\n   * @param multiValued If 'true' then the emitted record will have values in \n   *                    a List<String>\n   * @param flags FLATTEN: Recursivly combine text from all child XML elements\n   */\n  public synchronized XPathRecordReader addField(String name, String xpath, boolean multiValued, int flags) {\n    addField0(xpath, name, multiValued, false, flags);\n    return this;\n  }\n\n","sourceOld":"  /**\n   * A wrapper around {@link #addField0 addField0()} to create a series of  \n   * Nodes based on the supplied Xpath and a given fieldName. The created  \n   * nodes are inserted into a Node tree.\n   *\n   * @param name The name for this field in the emitted record\n   * @param xpath The xpath expression for this field\n   * @param multiValued If 'true' then the emitted record will have values in \n   *                    a List<String>\n   * @param flags FLATTEN: Recursivly combine text from all child XML elements\n   */\n  public synchronized XPathRecordReader addField(String name, String xpath, boolean multiValued, int flags) {\n    addField0(xpath, name, multiValued, false, flags);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949":["d6a43d4d79c846f6b9308b9adc72dd8de0ab6bdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["7f2a93a28913071a0b713be1d4b8a1181388d550"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7f2a93a28913071a0b713be1d4b8a1181388d550":["b14ccda0bdb398cf86bc3804e1c136a615dbd89b"],"b14ccda0bdb398cf86bc3804e1c136a615dbd89b":["cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949"],"d6a43d4d79c846f6b9308b9adc72dd8de0ab6bdb":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949":["b14ccda0bdb398cf86bc3804e1c136a615dbd89b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["d6a43d4d79c846f6b9308b9adc72dd8de0ab6bdb"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"d6a43d4d79c846f6b9308b9adc72dd8de0ab6bdb":["cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949"],"7f2a93a28913071a0b713be1d4b8a1181388d550":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b14ccda0bdb398cf86bc3804e1c136a615dbd89b":["7f2a93a28913071a0b713be1d4b8a1181388d550"]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}