{"path":"lucene/src/test/org/apache/lucene/index/codecs/lucene3x/TestTermInfosReaderIndex#testRandomSearchPerformance().mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/lucene3x/TestTermInfosReaderIndex#testRandomSearchPerformance().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/preflex/TestTermInfosReaderIndex#testRandomSearchPerformance().mjava","sourceNew":"  public void testRandomSearchPerformance() throws CorruptIndexException, IOException {\n    IndexSearcher searcher = new IndexSearcher(reader);\n    for (Term t : sampleTerms) {\n      TermQuery query = new TermQuery(t);\n      TopDocs topDocs = searcher.search(query, 10);\n      assertTrue(topDocs.totalHits > 0);\n    }\n    searcher.close();\n  }\n\n","sourceOld":"  public void testRandomSearchPerformance() throws CorruptIndexException, IOException {\n    IndexSearcher searcher = new IndexSearcher(reader);\n    for (Term t : sampleTerms) {\n      TermQuery query = new TermQuery(t);\n      TopDocs topDocs = searcher.search(query, 10);\n      assertTrue(topDocs.totalHits > 0);\n    }\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7c2454a6a8237bfd0e953f5b940838408c9055","date":1323649300,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/lucene3x/TestTermInfosReaderIndex#testRandomSearchPerformance().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/lucene3x/TestTermInfosReaderIndex#testRandomSearchPerformance().mjava","sourceNew":"  public void testRandomSearchPerformance() throws CorruptIndexException, IOException {\n    IndexSearcher searcher = new IndexSearcher(reader);\n    for (Term t : sampleTerms) {\n      TermQuery query = new TermQuery(t);\n      TopDocs topDocs = searcher.search(query, 10);\n      assertTrue(topDocs.totalHits > 0);\n    }\n  }\n\n","sourceOld":"  public void testRandomSearchPerformance() throws CorruptIndexException, IOException {\n    IndexSearcher searcher = new IndexSearcher(reader);\n    for (Term t : sampleTerms) {\n      TermQuery query = new TermQuery(t);\n      TopDocs topDocs = searcher.search(query, 10);\n      assertTrue(topDocs.totalHits > 0);\n    }\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/lucene3x/TestTermInfosReaderIndex#testRandomSearchPerformance().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/lucene3x/TestTermInfosReaderIndex#testRandomSearchPerformance().mjava","sourceNew":"  public void testRandomSearchPerformance() throws CorruptIndexException, IOException {\n    IndexSearcher searcher = new IndexSearcher(reader);\n    for (Term t : sampleTerms) {\n      TermQuery query = new TermQuery(t);\n      TopDocs topDocs = searcher.search(query, 10);\n      assertTrue(topDocs.totalHits > 0);\n    }\n  }\n\n","sourceOld":"  public void testRandomSearchPerformance() throws CorruptIndexException, IOException {\n    IndexSearcher searcher = new IndexSearcher(reader);\n    for (Term t : sampleTerms) {\n      TermQuery query = new TermQuery(t);\n      TopDocs topDocs = searcher.search(query, 10);\n      assertTrue(topDocs.totalHits > 0);\n    }\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/codecs/lucene3x/TestTermInfosReaderIndex#testRandomSearchPerformance().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/lucene3x/TestTermInfosReaderIndex#testRandomSearchPerformance().mjava","sourceNew":"  public void testRandomSearchPerformance() throws CorruptIndexException, IOException {\n    IndexSearcher searcher = new IndexSearcher(reader);\n    for (Term t : sampleTerms) {\n      TermQuery query = new TermQuery(t);\n      TopDocs topDocs = searcher.search(query, 10);\n      assertTrue(topDocs.totalHits > 0);\n    }\n  }\n\n","sourceOld":"  public void testRandomSearchPerformance() throws CorruptIndexException, IOException {\n    IndexSearcher searcher = new IndexSearcher(reader);\n    for (Term t : sampleTerms) {\n      TermQuery query = new TermQuery(t);\n      TopDocs topDocs = searcher.search(query, 10);\n      assertTrue(topDocs.totalHits > 0);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["7b91922b55d15444d554721b352861d028eb8278"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["7b91922b55d15444d554721b352861d028eb8278","0e7c2454a6a8237bfd0e953f5b940838408c9055"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["0e7c2454a6a8237bfd0e953f5b940838408c9055"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["0e7c2454a6a8237bfd0e953f5b940838408c9055","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}