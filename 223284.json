{"path":"solr/core/src/java/org/apache/solr/handler/admin/SecurityConfHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"6bdcb86c29922edae9a14852e636303bc52df094","date":1438887454,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SecurityConfHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    SolrConfigHandler.setWt(req, CommonParams.JSON);\n    String httpMethod = (String) req.getContext().get(\"httpMethod\");\n    String path = (String) req.getContext().get(\"path\");\n    String key = path.substring(path.lastIndexOf('/')+1);\n    if (\"GET\".equals(httpMethod)) {\n      getConf(rsp, key);\n    } else if (\"POST\".equals(httpMethod)) {\n      Object plugin = getPlugin(key);\n      doEdit(req, rsp, path, key, plugin);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8c611a68829ce670498db444c39975f66888dfd","date":1494922075,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SecurityConfHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SecurityConfHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    RequestHandlerUtils.setWt(req, CommonParams.JSON);\n    String httpMethod = (String) req.getContext().get(\"httpMethod\");\n    String path = (String) req.getContext().get(\"path\");\n    String key = path.substring(path.lastIndexOf('/')+1);\n    if (\"GET\".equals(httpMethod)) {\n      getConf(rsp, key);\n    } else if (\"POST\".equals(httpMethod)) {\n      Object plugin = getPlugin(key);\n      doEdit(req, rsp, path, key, plugin);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    SolrConfigHandler.setWt(req, CommonParams.JSON);\n    String httpMethod = (String) req.getContext().get(\"httpMethod\");\n    String path = (String) req.getContext().get(\"path\");\n    String key = path.substring(path.lastIndexOf('/')+1);\n    if (\"GET\".equals(httpMethod)) {\n      getConf(rsp, key);\n    } else if (\"POST\".equals(httpMethod)) {\n      Object plugin = getPlugin(key);\n      doEdit(req, rsp, path, key, plugin);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a513b6a92751e54c76fb5447948c9e7d437163a7","date":1496136565,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SecurityConfHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SecurityConfHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    RequestHandlerUtils.setWt(req, CommonParams.JSON);\n    String httpMethod = (String) req.getContext().get(\"httpMethod\");\n    String path = (String) req.getContext().get(\"path\");\n    String key = path.substring(path.lastIndexOf('/')+1);\n    if (\"GET\".equals(httpMethod)) {\n      getConf(rsp, key);\n    } else if (\"POST\".equals(httpMethod)) {\n      Object plugin = getPlugin(key);\n      doEdit(req, rsp, path, key, plugin);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    SolrConfigHandler.setWt(req, CommonParams.JSON);\n    String httpMethod = (String) req.getContext().get(\"httpMethod\");\n    String path = (String) req.getContext().get(\"path\");\n    String key = path.substring(path.lastIndexOf('/')+1);\n    if (\"GET\".equals(httpMethod)) {\n      getConf(rsp, key);\n    } else if (\"POST\".equals(httpMethod)) {\n      Object plugin = getPlugin(key);\n      doEdit(req, rsp, path, key, plugin);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74aea047dff7f7c38a2d766827bd20d356f98c6a","date":1496721416,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SecurityConfHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SecurityConfHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    RequestHandlerUtils.setWt(req, CommonParams.JSON);\n    String httpMethod = (String) req.getContext().get(\"httpMethod\");\n    String path = (String) req.getContext().get(\"path\");\n    String key = path.substring(path.lastIndexOf('/')+1);\n    if (\"GET\".equals(httpMethod)) {\n      getConf(rsp, key);\n    } else if (\"POST\".equals(httpMethod)) {\n      Object plugin = getPlugin(key);\n      doEdit(req, rsp, path, key, plugin);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    SolrConfigHandler.setWt(req, CommonParams.JSON);\n    String httpMethod = (String) req.getContext().get(\"httpMethod\");\n    String path = (String) req.getContext().get(\"path\");\n    String key = path.substring(path.lastIndexOf('/')+1);\n    if (\"GET\".equals(httpMethod)) {\n      getConf(rsp, key);\n    } else if (\"POST\".equals(httpMethod)) {\n      Object plugin = getPlugin(key);\n      doEdit(req, rsp, path, key, plugin);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SecurityConfHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SecurityConfHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    RequestHandlerUtils.setWt(req, CommonParams.JSON);\n    String httpMethod = (String) req.getContext().get(\"httpMethod\");\n    String path = (String) req.getContext().get(\"path\");\n    String key = path.substring(path.lastIndexOf('/')+1);\n    if (\"GET\".equals(httpMethod)) {\n      getConf(rsp, key);\n    } else if (\"POST\".equals(httpMethod)) {\n      Object plugin = getPlugin(key);\n      doEdit(req, rsp, path, key, plugin);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    SolrConfigHandler.setWt(req, CommonParams.JSON);\n    String httpMethod = (String) req.getContext().get(\"httpMethod\");\n    String path = (String) req.getContext().get(\"path\");\n    String key = path.substring(path.lastIndexOf('/')+1);\n    if (\"GET\".equals(httpMethod)) {\n      getConf(rsp, key);\n    } else if (\"POST\".equals(httpMethod)) {\n      Object plugin = getPlugin(key);\n      doEdit(req, rsp, path, key, plugin);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6bdcb86c29922edae9a14852e636303bc52df094":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["6bdcb86c29922edae9a14852e636303bc52df094","a513b6a92751e54c76fb5447948c9e7d437163a7"],"a8c611a68829ce670498db444c39975f66888dfd":["6bdcb86c29922edae9a14852e636303bc52df094"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a513b6a92751e54c76fb5447948c9e7d437163a7":["6bdcb86c29922edae9a14852e636303bc52df094"],"28288370235ed02234a64753cdbf0c6ec096304a":["6bdcb86c29922edae9a14852e636303bc52df094","74aea047dff7f7c38a2d766827bd20d356f98c6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"6bdcb86c29922edae9a14852e636303bc52df094":["74aea047dff7f7c38a2d766827bd20d356f98c6a","a8c611a68829ce670498db444c39975f66888dfd","a513b6a92751e54c76fb5447948c9e7d437163a7","28288370235ed02234a64753cdbf0c6ec096304a"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["28288370235ed02234a64753cdbf0c6ec096304a"],"a8c611a68829ce670498db444c39975f66888dfd":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6bdcb86c29922edae9a14852e636303bc52df094"],"a513b6a92751e54c76fb5447948c9e7d437163a7":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a8c611a68829ce670498db444c39975f66888dfd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}