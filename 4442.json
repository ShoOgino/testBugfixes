{"path":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/composite/CompositeStrategyTest#randomCircle().mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/composite/CompositeStrategyTest#randomCircle().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/composite/CompositeStrategyTest#randomCircle().mjava","sourceNew":"  //TODO move up\n  private Shape randomCircle() {\n    final Point point = randomPoint();\n    //TODO pick using gaussian\n    double radius;\n    if (ctx.isGeo()) {\n      radius = randomDouble() * 100;\n    } else {\n      //find distance to closest edge\n      final Rectangle worldBounds = ctx.getWorldBounds();\n      double maxRad = point.getX() - worldBounds.getMinX();\n      maxRad = Math.min(maxRad, worldBounds.getMaxX() - point.getX());\n      maxRad = Math.min(maxRad, point.getY() - worldBounds.getMinY());\n      maxRad = Math.min(maxRad, worldBounds.getMaxY() - point.getY());\n      radius = randomDouble() * maxRad;\n    }\n\n    return ctx.makeCircle(point, radius);\n  }\n\n","sourceOld":"  //TODO move up\n  private Shape randomCircle() {\n    final Point point = randomPoint();\n    //TODO pick using gaussian\n    double radius;\n    if (ctx.isGeo()) {\n      radius = randomDouble() * 100;\n    } else {\n      //find distance to closest edge\n      final Rectangle worldBounds = ctx.getWorldBounds();\n      double maxRad = point.getX() - worldBounds.getMinX();\n      maxRad = Math.min(maxRad, worldBounds.getMaxX() - point.getX());\n      maxRad = Math.min(maxRad, point.getY() - worldBounds.getMinY());\n      maxRad = Math.min(maxRad, worldBounds.getMaxY() - point.getY());\n      radius = randomDouble() * maxRad;\n    }\n\n    return ctx.makeCircle(point, radius);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/composite/CompositeStrategyTest#randomCircle().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/composite/CompositeStrategyTest#randomCircle().mjava","sourceNew":"  //TODO move up\n  private Shape randomCircle() {\n    final Point point = randomPoint();\n    //TODO pick using gaussian\n    double radius;\n    if (ctx.isGeo()) {\n      radius = randomDouble() * 100;\n    } else {\n      //find distance to closest edge\n      final Rectangle worldBounds = ctx.getWorldBounds();\n      double maxRad = point.getX() - worldBounds.getMinX();\n      maxRad = Math.min(maxRad, worldBounds.getMaxX() - point.getX());\n      maxRad = Math.min(maxRad, point.getY() - worldBounds.getMinY());\n      maxRad = Math.min(maxRad, worldBounds.getMaxY() - point.getY());\n      radius = randomDouble() * maxRad;\n    }\n\n    return ctx.makeCircle(point, radius);\n  }\n\n","sourceOld":"  //TODO move up\n  private Shape randomCircle() {\n    final Point point = randomPoint();\n    //TODO pick using gaussian\n    double radius;\n    if (ctx.isGeo()) {\n      radius = randomDouble() * 100;\n    } else {\n      //find distance to closest edge\n      final Rectangle worldBounds = ctx.getWorldBounds();\n      double maxRad = point.getX() - worldBounds.getMinX();\n      maxRad = Math.min(maxRad, worldBounds.getMaxX() - point.getX());\n      maxRad = Math.min(maxRad, point.getY() - worldBounds.getMinY());\n      maxRad = Math.min(maxRad, worldBounds.getMaxY() - point.getY());\n      radius = randomDouble() * maxRad;\n    }\n\n    return ctx.makeCircle(point, radius);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/composite/CompositeStrategyTest#randomCircle().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/composite/CompositeStrategyTest#randomCircle().mjava","sourceNew":"  //TODO move up\n  @SuppressWarnings(\"deprecation\")\n  private Shape randomCircle() {\n    final Point point = randomPoint();\n    //TODO pick using gaussian\n    double radius;\n    if (ctx.isGeo()) {\n      radius = randomDouble() * 100;\n    } else {\n      //find distance to closest edge\n      final Rectangle worldBounds = ctx.getWorldBounds();\n      double maxRad = point.getX() - worldBounds.getMinX();\n      maxRad = Math.min(maxRad, worldBounds.getMaxX() - point.getX());\n      maxRad = Math.min(maxRad, point.getY() - worldBounds.getMinY());\n      maxRad = Math.min(maxRad, worldBounds.getMaxY() - point.getY());\n      radius = randomDouble() * maxRad;\n    }\n\n    return ctx.makeCircle(point, radius);\n  }\n\n","sourceOld":"  //TODO move up\n  private Shape randomCircle() {\n    final Point point = randomPoint();\n    //TODO pick using gaussian\n    double radius;\n    if (ctx.isGeo()) {\n      radius = randomDouble() * 100;\n    } else {\n      //find distance to closest edge\n      final Rectangle worldBounds = ctx.getWorldBounds();\n      double maxRad = point.getX() - worldBounds.getMinX();\n      maxRad = Math.min(maxRad, worldBounds.getMaxX() - point.getX());\n      maxRad = Math.min(maxRad, point.getY() - worldBounds.getMinY());\n      maxRad = Math.min(maxRad, worldBounds.getMaxY() - point.getY());\n      radius = randomDouble() * maxRad;\n    }\n\n    return ctx.makeCircle(point, radius);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/composite/CompositeStrategyTest#randomCircle().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/composite/CompositeStrategyTest#randomCircle().mjava","sourceNew":"  //TODO move up\n  private Shape randomCircle() {\n    final Point point = randomPoint();\n    //TODO pick using gaussian\n    double radius;\n    if (ctx.isGeo()) {\n      radius = randomDouble() * 100;\n    } else {\n      //find distance to closest edge\n      final Rectangle worldBounds = ctx.getWorldBounds();\n      double maxRad = point.getX() - worldBounds.getMinX();\n      maxRad = Math.min(maxRad, worldBounds.getMaxX() - point.getX());\n      maxRad = Math.min(maxRad, point.getY() - worldBounds.getMinY());\n      maxRad = Math.min(maxRad, worldBounds.getMaxY() - point.getY());\n      radius = randomDouble() * maxRad;\n    }\n\n    return ctx.makeCircle(point, radius);\n  }\n\n","sourceOld":"  //TODO move up\n  @SuppressWarnings(\"deprecation\")\n  private Shape randomCircle() {\n    final Point point = randomPoint();\n    //TODO pick using gaussian\n    double radius;\n    if (ctx.isGeo()) {\n      radius = randomDouble() * 100;\n    } else {\n      //find distance to closest edge\n      final Rectangle worldBounds = ctx.getWorldBounds();\n      double maxRad = point.getX() - worldBounds.getMinX();\n      maxRad = Math.min(maxRad, worldBounds.getMaxX() - point.getX());\n      maxRad = Math.min(maxRad, point.getY() - worldBounds.getMinY());\n      maxRad = Math.min(maxRad, worldBounds.getMaxY() - point.getY());\n      radius = randomDouble() * maxRad;\n    }\n\n    return ctx.makeCircle(point, radius);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["af2638813028b254a88b418ebeafb541afb49653"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}