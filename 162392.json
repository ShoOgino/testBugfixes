{"path":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testInconsistentTermVectorOptions().mjava","commits":[{"id":"bec174f3de70d10a1f89b7d7a6ff40d1136ec4b8","date":1398861883,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testInconsistentTermVectorOptions().mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * In a single doc, for the same field, mix the term vectors up \n   */\n  public void testInconsistentTermVectorOptions() throws IOException {\n    FieldType a, b;\n    \n    // no vectors + vectors\n    a = new FieldType(TextField.TYPE_NOT_STORED);   \n    b = new FieldType(TextField.TYPE_NOT_STORED);\n    b.setStoreTermVectors(true);\n    doTestMixup(a, b);\n    \n    // vectors + vectors with pos\n    a = new FieldType(TextField.TYPE_NOT_STORED);   \n    a.setStoreTermVectors(true);\n    b = new FieldType(TextField.TYPE_NOT_STORED);\n    b.setStoreTermVectors(true);\n    b.setStoreTermVectorPositions(true);\n    doTestMixup(a, b);\n    \n    // vectors + vectors with off\n    a = new FieldType(TextField.TYPE_NOT_STORED);   \n    a.setStoreTermVectors(true);\n    b = new FieldType(TextField.TYPE_NOT_STORED);\n    b.setStoreTermVectors(true);\n    b.setStoreTermVectorOffsets(true);\n    doTestMixup(a, b);\n    \n    // vectors with pos + vectors with pos + off\n    a = new FieldType(TextField.TYPE_NOT_STORED);   \n    a.setStoreTermVectors(true);\n    a.setStoreTermVectorPositions(true);\n    b = new FieldType(TextField.TYPE_NOT_STORED);\n    b.setStoreTermVectors(true);\n    b.setStoreTermVectorPositions(true);\n    b.setStoreTermVectorOffsets(true);\n    doTestMixup(a, b);\n    \n    // vectors with pos + vectors with pos + pay\n    a = new FieldType(TextField.TYPE_NOT_STORED);   \n    a.setStoreTermVectors(true);\n    a.setStoreTermVectorPositions(true);\n    b = new FieldType(TextField.TYPE_NOT_STORED);\n    b.setStoreTermVectors(true);\n    b.setStoreTermVectorPositions(true);\n    b.setStoreTermVectorPayloads(true);\n    doTestMixup(a, b);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bec174f3de70d10a1f89b7d7a6ff40d1136ec4b8"],"bec174f3de70d10a1f89b7d7a6ff40d1136ec4b8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bec174f3de70d10a1f89b7d7a6ff40d1136ec4b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"bec174f3de70d10a1f89b7d7a6ff40d1136ec4b8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}