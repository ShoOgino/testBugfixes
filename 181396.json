{"path":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(IndexReader.AtomicReaderContext,boolean,boolean,Bits).mjava","commits":[{"id":"3fc1f3f78b299e125f7e60f43b5d457392bea23f","date":1317431015,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(IndexReader.AtomicReaderContext,boolean,boolean,Bits).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(IndexReader.AtomicReaderContext,ScorerContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(IndexReader.AtomicReaderContext context, boolean scoreDocsInOrder,\n        boolean topScorer, Bits acceptDocs) throws IOException {\n      if (filter == null) {\n        boolean debug = rb != null && rb.isDebug();\n        long start = debug ? System.currentTimeMillis() : 0;\n        resultSet = getDocSet();\n        long end = debug ? System.currentTimeMillis() : 0;\n\n        if (debug) {\n          SimpleOrderedMap<Object> dbg = new SimpleOrderedMap<Object>();\n          dbg.add(\"time\", (end-start));\n          dbg.add(\"fromSetSize\", fromSetSize);  // the input\n          dbg.add(\"toSetSize\", resultSet.size());    // the output\n\n          dbg.add(\"fromTermCount\", fromTermCount);\n          dbg.add(\"fromTermTotalDf\", fromTermTotalDf);\n          dbg.add(\"fromTermDirectCount\", fromTermDirectCount);\n          dbg.add(\"fromTermHits\", fromTermHits);\n          dbg.add(\"fromTermHitsTotalDf\", fromTermHitsTotalDf);\n          dbg.add(\"toTermHits\", toTermHits);\n          dbg.add(\"toTermHitsTotalDf\", toTermHitsTotalDf);\n          dbg.add(\"toTermDirectCount\", toTermDirectCount);\n          dbg.add(\"smallSetsDeferred\", smallSetsDeferred);\n          dbg.add(\"toSetDocsAdded\", resultListDocs);\n\n          // TODO: perhaps synchronize  addDebug in the future...\n          rb.addDebug(dbg, \"join\", JoinQuery.this.toString());\n        }\n\n        filter = resultSet.getTopFilter();\n      }\n\n      DocIdSet readerSet = filter.getDocIdSet(context);\n      if (readerSet == null) readerSet=DocIdSet.EMPTY_DOCIDSET;\n      return new JoinScorer(this, readerSet.iterator(), getBoost());\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(IndexReader.AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n      if (filter == null) {\n        boolean debug = rb != null && rb.isDebug();\n        long start = debug ? System.currentTimeMillis() : 0;\n        resultSet = getDocSet();\n        long end = debug ? System.currentTimeMillis() : 0;\n\n        if (debug) {\n          SimpleOrderedMap<Object> dbg = new SimpleOrderedMap<Object>();\n          dbg.add(\"time\", (end-start));\n          dbg.add(\"fromSetSize\", fromSetSize);  // the input\n          dbg.add(\"toSetSize\", resultSet.size());    // the output\n\n          dbg.add(\"fromTermCount\", fromTermCount);\n          dbg.add(\"fromTermTotalDf\", fromTermTotalDf);\n          dbg.add(\"fromTermDirectCount\", fromTermDirectCount);\n          dbg.add(\"fromTermHits\", fromTermHits);\n          dbg.add(\"fromTermHitsTotalDf\", fromTermHitsTotalDf);\n          dbg.add(\"toTermHits\", toTermHits);\n          dbg.add(\"toTermHitsTotalDf\", toTermHitsTotalDf);\n          dbg.add(\"toTermDirectCount\", toTermDirectCount);\n          dbg.add(\"smallSetsDeferred\", smallSetsDeferred);\n          dbg.add(\"toSetDocsAdded\", resultListDocs);\n\n          // TODO: perhaps synchronize  addDebug in the future...\n          rb.addDebug(dbg, \"join\", JoinQuery.this.toString());\n        }\n\n        filter = resultSet.getTopFilter();\n      }\n\n      DocIdSet readerSet = filter.getDocIdSet(context);\n      if (readerSet == null) readerSet=DocIdSet.EMPTY_DOCIDSET;\n      return new JoinScorer(this, readerSet.iterator(), getBoost());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6620df8541b174097b1133a4fc370adb2e570524","date":1319544675,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(IndexReader.AtomicReaderContext,boolean,boolean,Bits).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(IndexReader.AtomicReaderContext,boolean,boolean,Bits).mjava","sourceNew":"    @Override\n    public Scorer scorer(IndexReader.AtomicReaderContext context, boolean scoreDocsInOrder,\n        boolean topScorer, Bits acceptDocs) throws IOException {\n      if (filter == null) {\n        boolean debug = rb != null && rb.isDebug();\n        long start = debug ? System.currentTimeMillis() : 0;\n        resultSet = getDocSet();\n        long end = debug ? System.currentTimeMillis() : 0;\n\n        if (debug) {\n          SimpleOrderedMap<Object> dbg = new SimpleOrderedMap<Object>();\n          dbg.add(\"time\", (end-start));\n          dbg.add(\"fromSetSize\", fromSetSize);  // the input\n          dbg.add(\"toSetSize\", resultSet.size());    // the output\n\n          dbg.add(\"fromTermCount\", fromTermCount);\n          dbg.add(\"fromTermTotalDf\", fromTermTotalDf);\n          dbg.add(\"fromTermDirectCount\", fromTermDirectCount);\n          dbg.add(\"fromTermHits\", fromTermHits);\n          dbg.add(\"fromTermHitsTotalDf\", fromTermHitsTotalDf);\n          dbg.add(\"toTermHits\", toTermHits);\n          dbg.add(\"toTermHitsTotalDf\", toTermHitsTotalDf);\n          dbg.add(\"toTermDirectCount\", toTermDirectCount);\n          dbg.add(\"smallSetsDeferred\", smallSetsDeferred);\n          dbg.add(\"toSetDocsAdded\", resultListDocs);\n\n          // TODO: perhaps synchronize  addDebug in the future...\n          rb.addDebug(dbg, \"join\", JoinQuery.this.toString());\n        }\n\n        filter = resultSet.getTopFilter();\n      }\n\n      DocIdSet readerSet = filter.getDocIdSet(context, null);  // this set only includes live docs\n      if (readerSet == null) readerSet=DocIdSet.EMPTY_DOCIDSET;\n      return new JoinScorer(this, readerSet.iterator(), getBoost());\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(IndexReader.AtomicReaderContext context, boolean scoreDocsInOrder,\n        boolean topScorer, Bits acceptDocs) throws IOException {\n      if (filter == null) {\n        boolean debug = rb != null && rb.isDebug();\n        long start = debug ? System.currentTimeMillis() : 0;\n        resultSet = getDocSet();\n        long end = debug ? System.currentTimeMillis() : 0;\n\n        if (debug) {\n          SimpleOrderedMap<Object> dbg = new SimpleOrderedMap<Object>();\n          dbg.add(\"time\", (end-start));\n          dbg.add(\"fromSetSize\", fromSetSize);  // the input\n          dbg.add(\"toSetSize\", resultSet.size());    // the output\n\n          dbg.add(\"fromTermCount\", fromTermCount);\n          dbg.add(\"fromTermTotalDf\", fromTermTotalDf);\n          dbg.add(\"fromTermDirectCount\", fromTermDirectCount);\n          dbg.add(\"fromTermHits\", fromTermHits);\n          dbg.add(\"fromTermHitsTotalDf\", fromTermHitsTotalDf);\n          dbg.add(\"toTermHits\", toTermHits);\n          dbg.add(\"toTermHitsTotalDf\", toTermHitsTotalDf);\n          dbg.add(\"toTermDirectCount\", toTermDirectCount);\n          dbg.add(\"smallSetsDeferred\", smallSetsDeferred);\n          dbg.add(\"toSetDocsAdded\", resultListDocs);\n\n          // TODO: perhaps synchronize  addDebug in the future...\n          rb.addDebug(dbg, \"join\", JoinQuery.this.toString());\n        }\n\n        filter = resultSet.getTopFilter();\n      }\n\n      DocIdSet readerSet = filter.getDocIdSet(context);\n      if (readerSet == null) readerSet=DocIdSet.EMPTY_DOCIDSET;\n      return new JoinScorer(this, readerSet.iterator(), getBoost());\n    }\n\n","bugFix":null,"bugIntro":["6b793d2dfdc7c26ed5089e407c7008fb2aed99a7","6b793d2dfdc7c26ed5089e407c7008fb2aed99a7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"96d207426bd26fa5c1014e26d21d87603aea68b7","date":1327944562,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(AtomicReaderContext,boolean,boolean,Bits).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(IndexReader.AtomicReaderContext,boolean,boolean,Bits).mjava","sourceNew":"    @Override\n    public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder,\n        boolean topScorer, Bits acceptDocs) throws IOException {\n      if (filter == null) {\n        boolean debug = rb != null && rb.isDebug();\n        long start = debug ? System.currentTimeMillis() : 0;\n        resultSet = getDocSet();\n        long end = debug ? System.currentTimeMillis() : 0;\n\n        if (debug) {\n          SimpleOrderedMap<Object> dbg = new SimpleOrderedMap<Object>();\n          dbg.add(\"time\", (end-start));\n          dbg.add(\"fromSetSize\", fromSetSize);  // the input\n          dbg.add(\"toSetSize\", resultSet.size());    // the output\n\n          dbg.add(\"fromTermCount\", fromTermCount);\n          dbg.add(\"fromTermTotalDf\", fromTermTotalDf);\n          dbg.add(\"fromTermDirectCount\", fromTermDirectCount);\n          dbg.add(\"fromTermHits\", fromTermHits);\n          dbg.add(\"fromTermHitsTotalDf\", fromTermHitsTotalDf);\n          dbg.add(\"toTermHits\", toTermHits);\n          dbg.add(\"toTermHitsTotalDf\", toTermHitsTotalDf);\n          dbg.add(\"toTermDirectCount\", toTermDirectCount);\n          dbg.add(\"smallSetsDeferred\", smallSetsDeferred);\n          dbg.add(\"toSetDocsAdded\", resultListDocs);\n\n          // TODO: perhaps synchronize  addDebug in the future...\n          rb.addDebug(dbg, \"join\", JoinQuery.this.toString());\n        }\n\n        filter = resultSet.getTopFilter();\n      }\n\n      DocIdSet readerSet = filter.getDocIdSet(context, null);  // this set only includes live docs\n      if (readerSet == null) readerSet=DocIdSet.EMPTY_DOCIDSET;\n      return new JoinScorer(this, readerSet.iterator(), getBoost());\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(IndexReader.AtomicReaderContext context, boolean scoreDocsInOrder,\n        boolean topScorer, Bits acceptDocs) throws IOException {\n      if (filter == null) {\n        boolean debug = rb != null && rb.isDebug();\n        long start = debug ? System.currentTimeMillis() : 0;\n        resultSet = getDocSet();\n        long end = debug ? System.currentTimeMillis() : 0;\n\n        if (debug) {\n          SimpleOrderedMap<Object> dbg = new SimpleOrderedMap<Object>();\n          dbg.add(\"time\", (end-start));\n          dbg.add(\"fromSetSize\", fromSetSize);  // the input\n          dbg.add(\"toSetSize\", resultSet.size());    // the output\n\n          dbg.add(\"fromTermCount\", fromTermCount);\n          dbg.add(\"fromTermTotalDf\", fromTermTotalDf);\n          dbg.add(\"fromTermDirectCount\", fromTermDirectCount);\n          dbg.add(\"fromTermHits\", fromTermHits);\n          dbg.add(\"fromTermHitsTotalDf\", fromTermHitsTotalDf);\n          dbg.add(\"toTermHits\", toTermHits);\n          dbg.add(\"toTermHitsTotalDf\", toTermHitsTotalDf);\n          dbg.add(\"toTermDirectCount\", toTermDirectCount);\n          dbg.add(\"smallSetsDeferred\", smallSetsDeferred);\n          dbg.add(\"toSetDocsAdded\", resultListDocs);\n\n          // TODO: perhaps synchronize  addDebug in the future...\n          rb.addDebug(dbg, \"join\", JoinQuery.this.toString());\n        }\n\n        filter = resultSet.getTopFilter();\n      }\n\n      DocIdSet readerSet = filter.getDocIdSet(context, null);  // this set only includes live docs\n      if (readerSet == null) readerSet=DocIdSet.EMPTY_DOCIDSET;\n      return new JoinScorer(this, readerSet.iterator(), getBoost());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(AtomicReaderContext,boolean,boolean,Bits).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(IndexReader.AtomicReaderContext,boolean,boolean,Bits).mjava","sourceNew":"    @Override\n    public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder,\n        boolean topScorer, Bits acceptDocs) throws IOException {\n      if (filter == null) {\n        boolean debug = rb != null && rb.isDebug();\n        long start = debug ? System.currentTimeMillis() : 0;\n        resultSet = getDocSet();\n        long end = debug ? System.currentTimeMillis() : 0;\n\n        if (debug) {\n          SimpleOrderedMap<Object> dbg = new SimpleOrderedMap<Object>();\n          dbg.add(\"time\", (end-start));\n          dbg.add(\"fromSetSize\", fromSetSize);  // the input\n          dbg.add(\"toSetSize\", resultSet.size());    // the output\n\n          dbg.add(\"fromTermCount\", fromTermCount);\n          dbg.add(\"fromTermTotalDf\", fromTermTotalDf);\n          dbg.add(\"fromTermDirectCount\", fromTermDirectCount);\n          dbg.add(\"fromTermHits\", fromTermHits);\n          dbg.add(\"fromTermHitsTotalDf\", fromTermHitsTotalDf);\n          dbg.add(\"toTermHits\", toTermHits);\n          dbg.add(\"toTermHitsTotalDf\", toTermHitsTotalDf);\n          dbg.add(\"toTermDirectCount\", toTermDirectCount);\n          dbg.add(\"smallSetsDeferred\", smallSetsDeferred);\n          dbg.add(\"toSetDocsAdded\", resultListDocs);\n\n          // TODO: perhaps synchronize  addDebug in the future...\n          rb.addDebug(dbg, \"join\", JoinQuery.this.toString());\n        }\n\n        filter = resultSet.getTopFilter();\n      }\n\n      DocIdSet readerSet = filter.getDocIdSet(context, null);  // this set only includes live docs\n      if (readerSet == null) readerSet=DocIdSet.EMPTY_DOCIDSET;\n      return new JoinScorer(this, readerSet.iterator(), getBoost());\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(IndexReader.AtomicReaderContext context, boolean scoreDocsInOrder,\n        boolean topScorer, Bits acceptDocs) throws IOException {\n      if (filter == null) {\n        boolean debug = rb != null && rb.isDebug();\n        long start = debug ? System.currentTimeMillis() : 0;\n        resultSet = getDocSet();\n        long end = debug ? System.currentTimeMillis() : 0;\n\n        if (debug) {\n          SimpleOrderedMap<Object> dbg = new SimpleOrderedMap<Object>();\n          dbg.add(\"time\", (end-start));\n          dbg.add(\"fromSetSize\", fromSetSize);  // the input\n          dbg.add(\"toSetSize\", resultSet.size());    // the output\n\n          dbg.add(\"fromTermCount\", fromTermCount);\n          dbg.add(\"fromTermTotalDf\", fromTermTotalDf);\n          dbg.add(\"fromTermDirectCount\", fromTermDirectCount);\n          dbg.add(\"fromTermHits\", fromTermHits);\n          dbg.add(\"fromTermHitsTotalDf\", fromTermHitsTotalDf);\n          dbg.add(\"toTermHits\", toTermHits);\n          dbg.add(\"toTermHitsTotalDf\", toTermHitsTotalDf);\n          dbg.add(\"toTermDirectCount\", toTermDirectCount);\n          dbg.add(\"smallSetsDeferred\", smallSetsDeferred);\n          dbg.add(\"toSetDocsAdded\", resultListDocs);\n\n          // TODO: perhaps synchronize  addDebug in the future...\n          rb.addDebug(dbg, \"join\", JoinQuery.this.toString());\n        }\n\n        filter = resultSet.getTopFilter();\n      }\n\n      DocIdSet readerSet = filter.getDocIdSet(context, null);  // this set only includes live docs\n      if (readerSet == null) readerSet=DocIdSet.EMPTY_DOCIDSET;\n      return new JoinScorer(this, readerSet.iterator(), getBoost());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"6620df8541b174097b1133a4fc370adb2e570524":["3fc1f3f78b299e125f7e60f43b5d457392bea23f"],"3fc1f3f78b299e125f7e60f43b5d457392bea23f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"96d207426bd26fa5c1014e26d21d87603aea68b7":["6620df8541b174097b1133a4fc370adb2e570524"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["6620df8541b174097b1133a4fc370adb2e570524","96d207426bd26fa5c1014e26d21d87603aea68b7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"]},"commit2Childs":{"6620df8541b174097b1133a4fc370adb2e570524":["96d207426bd26fa5c1014e26d21d87603aea68b7","5cab9a86bd67202d20b6adc463008c8e982b070a"],"3fc1f3f78b299e125f7e60f43b5d457392bea23f":["6620df8541b174097b1133a4fc370adb2e570524"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3fc1f3f78b299e125f7e60f43b5d457392bea23f"],"96d207426bd26fa5c1014e26d21d87603aea68b7":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}