{"path":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    StandardAnalyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer));\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    StandardAnalyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer));\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer));\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    StandardAnalyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer));\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c084e47df29de3330311d69dabf515ceaa989512","date":1279030906,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n\n    Directory index = new MockRAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(newRandom(), index, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer));\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n\n    Directory index = new MockRAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(newRandom(), index, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer));\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15bbd254c1506df5299c4df8c148262c7bd6301e","date":1279913113,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n\n    Directory index = new MockRAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(newRandom(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n\n    Directory index = new MockRAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(newRandom(), index, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b103252dee6afa1b6d7a622c773d178788eb85a","date":1280180143,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n\n    Directory index = new MockRAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(newRandom(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n\n    Directory index = new MockRAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(newRandom(), index, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n\n    Directory index = new MockRAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(newRandom(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n\n    Directory index = new MockRAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(newRandom(), index, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n    Random random = newRandom();\n    Directory index = newDirectory(random);\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n\n    Directory index = new MockRAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(newRandom(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n    Random random = newRandom();\n    Directory index = newDirectory(random);\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n\n    Directory index = new MockRAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(newRandom(), index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"790e1fde4caa765b3faaad3fbcd25c6973450336","date":1296689245,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer();\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112629f1dfd1451722c6047bcf593e6efc96f5f4","date":1309910887,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7c2454a6a8237bfd0e953f5b940838408c9055","date":1323649300,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    searcher.close();\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    MockAnalyzer analyzer = new MockAnalyzer(random);\n    Directory index = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new FuzzyQuery(new Term(\"field\", \"giga\"), 0.9f);\n\n    // 3. search\n    IndexSearcher searcher = newSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n    index.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["0e7c2454a6a8237bfd0e953f5b940838408c9055"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["112629f1dfd1451722c6047bcf593e6efc96f5f4","0e7c2454a6a8237bfd0e953f5b940838408c9055"],"15bbd254c1506df5299c4df8c148262c7bd6301e":["c084e47df29de3330311d69dabf515ceaa989512"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["3242a09f703274d3b9283f2064a1a33064b53a1b","1f653cfcf159baeaafe5d01682a911e95bba4012"],"c084e47df29de3330311d69dabf515ceaa989512":["d572389229127c297dd1fa5ce4758e1cec41e799"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["112629f1dfd1451722c6047bcf593e6efc96f5f4"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["1f653cfcf159baeaafe5d01682a911e95bba4012","790e1fde4caa765b3faaad3fbcd25c6973450336"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","790e1fde4caa765b3faaad3fbcd25c6973450336"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["5f4e87790277826a2aea119328600dfb07761f32","4b103252dee6afa1b6d7a622c773d178788eb85a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["c084e47df29de3330311d69dabf515ceaa989512","15bbd254c1506df5299c4df8c148262c7bd6301e"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5f4e87790277826a2aea119328600dfb07761f32":["d572389229127c297dd1fa5ce4758e1cec41e799","c084e47df29de3330311d69dabf515ceaa989512"],"962d04139994fce5193143ef35615499a9a96d78":["bde51b089eb7f86171eb3406e38a274743f9b7ac","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["f2c5f0cb44df114db4228c8f77861714b5cabaea","112629f1dfd1451722c6047bcf593e6efc96f5f4"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a3776dccca01c11e7046323cfad46a3b4a471233","112629f1dfd1451722c6047bcf593e6efc96f5f4"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"a3776dccca01c11e7046323cfad46a3b4a471233":["790e1fde4caa765b3faaad3fbcd25c6973450336","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"112629f1dfd1451722c6047bcf593e6efc96f5f4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"15bbd254c1506df5299c4df8c148262c7bd6301e":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c084e47df29de3330311d69dabf515ceaa989512":["15bbd254c1506df5299c4df8c148262c7bd6301e","4b103252dee6afa1b6d7a622c773d178788eb85a","5f4e87790277826a2aea119328600dfb07761f32"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","d083e83f225b11e5fdd900e83d26ddb385b6955c","a3776dccca01c11e7046323cfad46a3b4a471233","112629f1dfd1451722c6047bcf593e6efc96f5f4"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","29ef99d61cda9641b6250bf9567329a6e65f901d","790e1fde4caa765b3faaad3fbcd25c6973450336"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["962d04139994fce5193143ef35615499a9a96d78"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["3242a09f703274d3b9283f2064a1a33064b53a1b","ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["c084e47df29de3330311d69dabf515ceaa989512","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":["3242a09f703274d3b9283f2064a1a33064b53a1b"],"962d04139994fce5193143ef35615499a9a96d78":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"790e1fde4caa765b3faaad3fbcd25c6973450336":["f2c5f0cb44df114db4228c8f77861714b5cabaea","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","a3776dccca01c11e7046323cfad46a3b4a471233"],"a3776dccca01c11e7046323cfad46a3b4a471233":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"112629f1dfd1451722c6047bcf593e6efc96f5f4":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","0e7c2454a6a8237bfd0e953f5b940838408c9055","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}