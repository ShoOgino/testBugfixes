{"path":"lucene/core/src/java/org/apache/lucene/index/IndexFileNames#segmentFileName(String,String,String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileNames#segmentFileName(String,String,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileNames#segmentFileName(String,String,String).mjava","sourceNew":"  /**\n   * Returns a file name that includes the given segment name, your own custom\n   * name and extension. The format of the filename is:\n   * &lt;segmentName&gt;(_&lt;name&gt;)(.&lt;ext&gt;).\n   * <p>\n   * <b>NOTE:</b> .&lt;ext&gt; is added to the result file name only if\n   * <code>ext</code> is not empty.\n   * <p>\n   * <b>NOTE:</b> _&lt;segmentSuffix&gt; is added to the result file name only if\n   * it's not the empty string\n   * <p>\n   * <b>NOTE:</b> all custom files should be named using this method, or\n   * otherwise some structures may fail to handle them properly (such as if they\n   * are added to compound files).\n   */\n  public static String segmentFileName(String segmentName, String segmentSuffix, String ext) {\n    if (ext.length() > 0 || segmentSuffix.length() > 0) {\n      assert !ext.startsWith(\".\");\n      StringBuilder sb = new StringBuilder(segmentName.length() + 2 + segmentSuffix.length() + ext.length());\n      sb.append(segmentName);\n      if (segmentSuffix.length() > 0) {\n        sb.append('_').append(segmentSuffix);\n      }\n      if (ext.length() > 0) {\n        sb.append('.').append(ext);\n      }\n      return sb.toString();\n    } else {\n      return segmentName;\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a file name that includes the given segment name, your own custom\n   * name and extension. The format of the filename is:\n   * &lt;segmentName&gt;(_&lt;name&gt;)(.&lt;ext&gt;).\n   * <p>\n   * <b>NOTE:</b> .&lt;ext&gt; is added to the result file name only if\n   * <code>ext</code> is not empty.\n   * <p>\n   * <b>NOTE:</b> _&lt;segmentSuffix&gt; is added to the result file name only if\n   * it's not the empty string\n   * <p>\n   * <b>NOTE:</b> all custom files should be named using this method, or\n   * otherwise some structures may fail to handle them properly (such as if they\n   * are added to compound files).\n   */\n  public static String segmentFileName(String segmentName, String segmentSuffix, String ext) {\n    if (ext.length() > 0 || segmentSuffix.length() > 0) {\n      assert !ext.startsWith(\".\");\n      StringBuilder sb = new StringBuilder(segmentName.length() + 2 + segmentSuffix.length() + ext.length());\n      sb.append(segmentName);\n      if (segmentSuffix.length() > 0) {\n        sb.append('_').append(segmentSuffix);\n      }\n      if (ext.length() > 0) {\n        sb.append('.').append(ext);\n      }\n      return sb.toString();\n    } else {\n      return segmentName;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}