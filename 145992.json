{"path":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    \n    super.init(schema, args);    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","sourceNew":null,"sourceOld":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    \n    super.init(schema, args);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    \n    super.init(schema, args);    \n  }\n\n","sourceOld":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    \n    super.init(schema, args);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    \n    super.init(schema, args);    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a48e06ad71e6dcb230e678c6304facd688202735","date":1280070785,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","sourceOld":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    \n    super.init(schema, args);    \n  }\n\n","bugFix":null,"bugIntro":["0d1728ac6bfc0cea61f3e27436b418295d9982a3","0d1728ac6bfc0cea61f3e27436b418295d9982a3","0d1728ac6bfc0cea61f3e27436b418295d9982a3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","sourceOld":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    \n    super.init(schema, args);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","date":1296400215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","sourceOld":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","sourceOld":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","sourceOld":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00aaee1492907b0fd5421b6cf854a9eee5cd1326","date":1306664843,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    if (schema.getVersion() > 1.3f) {\n      autoGeneratePhraseQueries = false;\n    } else {\n      autoGeneratePhraseQueries = true;\n    }\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","sourceOld":"  @Override\n  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","bugFix":null,"bugIntro":["2fff41ba33f73a49aabac5f5989da64c69ef6ba5","2fff41ba33f73a49aabac5f5989da64c69ef6ba5","2fff41ba33f73a49aabac5f5989da64c69ef6ba5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    if (schema.getVersion() > 1.3f) {\n      autoGeneratePhraseQueries = false;\n    } else {\n      autoGeneratePhraseQueries = true;\n    }\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","sourceOld":"  @Override\n  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    if (schema.getVersion() > 1.3f) {\n      autoGeneratePhraseQueries = false;\n    } else {\n      autoGeneratePhraseQueries = true;\n    }\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","sourceOld":"  @Override\n  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    if (schema.getVersion() > 1.3f) {\n      autoGeneratePhraseQueries = false;\n    } else {\n      autoGeneratePhraseQueries = true;\n    }\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","sourceOld":"  @Override\n  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    if (schema.getVersion() > 1.3f) {\n      autoGeneratePhraseQueries = false;\n    } else {\n      autoGeneratePhraseQueries = true;\n    }\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    if (schema.getVersion() > 1.3f) {\n      autoGeneratePhraseQueries = false;\n    } else {\n      autoGeneratePhraseQueries = true;\n    }\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","sourceOld":"  @Override\n  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    if (schema.getVersion() > 1.3f) {\n      autoGeneratePhraseQueries = false;\n    } else {\n      autoGeneratePhraseQueries = true;\n    }\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TextField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    if (schema.getVersion() > 1.3f) {\n      autoGeneratePhraseQueries = false;\n    } else {\n      autoGeneratePhraseQueries = true;\n    }\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","sourceOld":"  @Override\n  protected void init(IndexSchema schema, Map<String,String> args) {\n    properties |= TOKENIZED;\n    if (schema.getVersion()> 1.1f) properties &= ~OMIT_TF_POSITIONS;\n    if (schema.getVersion() > 1.3f) {\n      autoGeneratePhraseQueries = false;\n    } else {\n      autoGeneratePhraseQueries = true;\n    }\n    String autoGeneratePhraseQueriesStr = args.remove(\"autoGeneratePhraseQueries\");\n    if (autoGeneratePhraseQueriesStr != null)\n      autoGeneratePhraseQueries = Boolean.parseBoolean(autoGeneratePhraseQueriesStr);\n    super.init(schema, args);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["a48e06ad71e6dcb230e678c6304facd688202735"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["1da8d55113b689b06716246649de6f62430f15c0","a48e06ad71e6dcb230e678c6304facd688202735"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["00aaee1492907b0fd5421b6cf854a9eee5cd1326","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a48e06ad71e6dcb230e678c6304facd688202735":["1da8d55113b689b06716246649de6f62430f15c0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"00aaee1492907b0fd5421b6cf854a9eee5cd1326":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","00aaee1492907b0fd5421b6cf854a9eee5cd1326"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a48e06ad71e6dcb230e678c6304facd688202735","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["00aaee1492907b0fd5421b6cf854a9eee5cd1326"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["3242a09f703274d3b9283f2064a1a33064b53a1b","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["29ef99d61cda9641b6250bf9567329a6e65f901d","00aaee1492907b0fd5421b6cf854a9eee5cd1326"]},"commit2Childs":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["00aaee1492907b0fd5421b6cf854a9eee5cd1326","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a48e06ad71e6dcb230e678c6304facd688202735":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","3242a09f703274d3b9283f2064a1a33064b53a1b","29ef99d61cda9641b6250bf9567329a6e65f901d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"1da8d55113b689b06716246649de6f62430f15c0":["3242a09f703274d3b9283f2064a1a33064b53a1b","a48e06ad71e6dcb230e678c6304facd688202735"],"00aaee1492907b0fd5421b6cf854a9eee5cd1326":["c26f00b574427b55127e869b935845554afde1fa","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","a258fbb26824fd104ed795e5d9033d2d040049ee","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}