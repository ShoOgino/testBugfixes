{"path":"lucene/test-framework/src/java/org/apache/lucene/util/SystemPropertiesRestoreRule#restore(TreeMap[String,String],TreeMap[String,String],Set[String]).mjava","commits":[{"id":"b8145d062469bbacf8e366bd238d956e8c2ca0ec","date":1332446435,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/SystemPropertiesRestoreRule#restore(TreeMap[String,String],TreeMap[String,String],Set[String]).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/SystemPropertiesRestoreRule#restore(TreeMap[String,String],TreeMap[String,String]).mjava","sourceNew":"  static void restore(\n      TreeMap<String,String> before,\n      TreeMap<String,String> after,\n      Set<String> ignoredKeys) {\n\n    // Clear anything that is present after but wasn't before.\n    after.keySet().removeAll(before.keySet());\n    for (String key : after.keySet()) {\n      if (!ignoredKeys.contains(key))\n        System.clearProperty(key);\n    }\n\n    // Restore original property values unless they are ignored (then leave).\n    for (Map.Entry<String,String> e : before.entrySet()) {\n      String key = e.getValue();\n      if (!ignoredKeys.contains(key)) {\n        if (key == null) {\n          System.clearProperty(e.getKey()); // Can this happen?\n        } else {\n          System.setProperty(e.getKey(), key);\n        }\n      }\n    }\n  }  \n\n","sourceOld":"  static void restore(\n      TreeMap<String,String> before,\n      TreeMap<String,String> after) {\n    after.keySet().removeAll(before.keySet());\n    for (String key : after.keySet()) {\n      System.clearProperty(key);\n    }\n    for (Map.Entry<String,String> e : before.entrySet()) {\n      if (e.getValue() == null) {\n        System.clearProperty(e.getKey()); // Can this happen?\n      } else {\n        System.setProperty(e.getKey(), e.getValue());\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5da0b42730b6b99b31389ef94cb97384e83b9ede","date":1337107665,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/SystemPropertiesRestoreRule#restore(TreeMap[String,String],TreeMap[String,String],Set[String]).mjava","sourceNew":null,"sourceOld":"  static void restore(\n      TreeMap<String,String> before,\n      TreeMap<String,String> after,\n      Set<String> ignoredKeys) {\n\n    // Clear anything that is present after but wasn't before.\n    after.keySet().removeAll(before.keySet());\n    for (String key : after.keySet()) {\n      if (!ignoredKeys.contains(key))\n        System.clearProperty(key);\n    }\n\n    // Restore original property values unless they are ignored (then leave).\n    for (Map.Entry<String,String> e : before.entrySet()) {\n      String key = e.getValue();\n      if (!ignoredKeys.contains(key)) {\n        if (key == null) {\n          System.clearProperty(e.getKey()); // Can this happen?\n        } else {\n          System.setProperty(e.getKey(), key);\n        }\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b8145d062469bbacf8e366bd238d956e8c2ca0ec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["b8145d062469bbacf8e366bd238d956e8c2ca0ec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5da0b42730b6b99b31389ef94cb97384e83b9ede"]},"commit2Childs":{"b8145d062469bbacf8e366bd238d956e8c2ca0ec":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b8145d062469bbacf8e366bd238d956e8c2ca0ec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}