{"path":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenGroup#addToken(Token,float).mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenGroup#addToken(Token,float).mjava","pathOld":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/TokenGroup#addToken(Token,float).mjava","sourceNew":"\tvoid addToken(Token token, float score)\n\t{\n\t\tif(numTokens==0)\n\t\t{\n\t\t\tstartOffset=token.startOffset();\t\t\n\t\t\tendOffset=token.endOffset();\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstartOffset=Math.min(startOffset,token.startOffset());\t\t\n\t\t\tendOffset=Math.max(endOffset,token.endOffset());\t\t\n\t\t}\n\t\ttokens[numTokens]=token;\n\t\tscores[numTokens]=score;\n\t\tnumTokens++;\n\t}\n\n","sourceOld":"\tvoid addToken(Token token, float score)\n\t{\n\t\tif(numTokens==0)\n\t\t{\n\t\t\tstartOffset=token.startOffset();\t\t\n\t\t\tendOffset=token.endOffset();\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstartOffset=Math.min(startOffset,token.startOffset());\t\t\n\t\t\tendOffset=Math.max(endOffset,token.endOffset());\t\t\n\t\t}\n\t\ttokens[numTokens]=token;\n\t\tscores[numTokens]=score;\n\t\tnumTokens++;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e25a4210af7223bc652d75fb2c05655e7c359e76","date":1117744026,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenGroup#addToken(Token,float).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenGroup#addToken(Token,float).mjava","sourceNew":"\tvoid addToken(Token token, float score)\n\t{\n\t    if(numTokens < MAX_NUM_TOKENS_PER_GROUP)\n        {\t    \n\t\t\tif(numTokens==0)\n\t\t\t{\n\t\t\t\tstartOffset=token.startOffset();\t\t\n\t\t\t\tendOffset=token.endOffset();\t\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstartOffset=Math.min(startOffset,token.startOffset());\t\t\n\t\t\t\tendOffset=Math.max(endOffset,token.endOffset());\t\t\n\t\t\t}\n\t\t\ttokens[numTokens]=token;\n\t\t\tscores[numTokens]=score;\n\t\t\tnumTokens++;\n        }\n\t}\n\n","sourceOld":"\tvoid addToken(Token token, float score)\n\t{\n\t\tif(numTokens==0)\n\t\t{\n\t\t\tstartOffset=token.startOffset();\t\t\n\t\t\tendOffset=token.endOffset();\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstartOffset=Math.min(startOffset,token.startOffset());\t\t\n\t\t\tendOffset=Math.max(endOffset,token.endOffset());\t\t\n\t\t}\n\t\ttokens[numTokens]=token;\n\t\tscores[numTokens]=score;\n\t\tnumTokens++;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f504fc2bf24530fd47d0ccafcf776c8c0b9e4c7f","date":1153001991,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenGroup#addToken(Token,float).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenGroup#addToken(Token,float).mjava","sourceNew":"  void addToken(Token token, float score)\n\t{\n\t    if(numTokens < MAX_NUM_TOKENS_PER_GROUP)\n        {\t    \n\t\t\tif(numTokens==0)\n\t\t\t{\n\t\t\t\tstartOffset=matchStartOffset=token.startOffset();\n\t\t\t\tendOffset=matchEndOffset=token.endOffset();\n\t\t\t\ttot += score;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstartOffset=Math.min(startOffset,token.startOffset());\n\t\t\t\tendOffset=Math.max(endOffset,token.endOffset());\n        if (score>0) {\n          if (tot==0) {\n            matchStartOffset=token.startOffset();\n            matchEndOffset=token.endOffset();\n          } else {\n            matchStartOffset=Math.min(matchStartOffset,token.startOffset());\n            matchEndOffset=Math.max(matchEndOffset,token.endOffset());\n          }\n          tot+=score;\n        }\n      }\n\t\t\ttokens[numTokens]=token;\n\t\t\tscores[numTokens]=score;\n\t\t\tnumTokens++;\n        }\n\t}\n\n","sourceOld":"\tvoid addToken(Token token, float score)\n\t{\n\t    if(numTokens < MAX_NUM_TOKENS_PER_GROUP)\n        {\t    \n\t\t\tif(numTokens==0)\n\t\t\t{\n\t\t\t\tstartOffset=token.startOffset();\t\t\n\t\t\t\tendOffset=token.endOffset();\t\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstartOffset=Math.min(startOffset,token.startOffset());\t\t\n\t\t\t\tendOffset=Math.max(endOffset,token.endOffset());\t\t\n\t\t\t}\n\t\t\ttokens[numTokens]=token;\n\t\t\tscores[numTokens]=score;\n\t\t\tnumTokens++;\n        }\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenGroup#addToken(Token,float).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenGroup#addToken(Token,float).mjava","sourceNew":"  void addToken(Token token, float score)\n\t{\n\t    if(numTokens < MAX_NUM_TOKENS_PER_GROUP)\n        {\t    \n\t\t\tif(numTokens==0)\n\t\t\t{\n\t\t\t\tstartOffset=matchStartOffset=token.startOffset();\n\t\t\t\tendOffset=matchEndOffset=token.endOffset();\n\t\t\t\ttot += score;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstartOffset=Math.min(startOffset,token.startOffset());\n\t\t\t\tendOffset=Math.max(endOffset,token.endOffset());\n        if (score>0) {\n          if (tot==0) {\n            matchStartOffset=token.startOffset();\n            matchEndOffset=token.endOffset();\n          } else {\n            matchStartOffset=Math.min(matchStartOffset,token.startOffset());\n            matchEndOffset=Math.max(matchEndOffset,token.endOffset());\n          }\n          tot+=score;\n        }\n      }\n\t\t\ttokens[numTokens]= (Token) token.clone();\n\t\t\tscores[numTokens]=score;\n\t\t\tnumTokens++;\n        }\n\t}\n\n","sourceOld":"  void addToken(Token token, float score)\n\t{\n\t    if(numTokens < MAX_NUM_TOKENS_PER_GROUP)\n        {\t    \n\t\t\tif(numTokens==0)\n\t\t\t{\n\t\t\t\tstartOffset=matchStartOffset=token.startOffset();\n\t\t\t\tendOffset=matchEndOffset=token.endOffset();\n\t\t\t\ttot += score;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstartOffset=Math.min(startOffset,token.startOffset());\n\t\t\t\tendOffset=Math.max(endOffset,token.endOffset());\n        if (score>0) {\n          if (tot==0) {\n            matchStartOffset=token.startOffset();\n            matchEndOffset=token.endOffset();\n          } else {\n            matchStartOffset=Math.min(matchStartOffset,token.startOffset());\n            matchEndOffset=Math.max(matchEndOffset,token.endOffset());\n          }\n          tot+=score;\n        }\n      }\n\t\t\ttokens[numTokens]=token;\n\t\t\tscores[numTokens]=score;\n\t\t\tnumTokens++;\n        }\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4471b2ef75c0e11869f60b23cabe292b895c3ee","date":1248991247,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenGroup#addToken(Token,float).mjava","sourceNew":null,"sourceOld":"  void addToken(Token token, float score)\n\t{\n\t    if(numTokens < MAX_NUM_TOKENS_PER_GROUP)\n        {\t    \n\t\t\tif(numTokens==0)\n\t\t\t{\n\t\t\t\tstartOffset=matchStartOffset=token.startOffset();\n\t\t\t\tendOffset=matchEndOffset=token.endOffset();\n\t\t\t\ttot += score;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstartOffset=Math.min(startOffset,token.startOffset());\n\t\t\t\tendOffset=Math.max(endOffset,token.endOffset());\n        if (score>0) {\n          if (tot==0) {\n            matchStartOffset=token.startOffset();\n            matchEndOffset=token.endOffset();\n          } else {\n            matchStartOffset=Math.min(matchStartOffset,token.startOffset());\n            matchEndOffset=Math.max(matchEndOffset,token.endOffset());\n          }\n          tot+=score;\n        }\n      }\n\t\t\ttokens[numTokens]= (Token) token.clone();\n\t\t\tscores[numTokens]=score;\n\t\t\tnumTokens++;\n        }\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["f504fc2bf24530fd47d0ccafcf776c8c0b9e4c7f"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b4471b2ef75c0e11869f60b23cabe292b895c3ee":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f504fc2bf24530fd47d0ccafcf776c8c0b9e4c7f":["e25a4210af7223bc652d75fb2c05655e7c359e76"],"e25a4210af7223bc652d75fb2c05655e7c359e76":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4471b2ef75c0e11869f60b23cabe292b895c3ee"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["b4471b2ef75c0e11869f60b23cabe292b895c3ee"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["e25a4210af7223bc652d75fb2c05655e7c359e76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"b4471b2ef75c0e11869f60b23cabe292b895c3ee":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f504fc2bf24530fd47d0ccafcf776c8c0b9e4c7f":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"e25a4210af7223bc652d75fb2c05655e7c359e76":["f504fc2bf24530fd47d0ccafcf776c8c0b9e4c7f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}