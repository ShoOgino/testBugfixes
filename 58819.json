{"path":"lucene/src/java/org/apache/lucene/search/cache/DocTermsIndexCreator.DocTermsIndexImpl.DocTermsIndexEnum#next().mjava","commits":[{"id":"eee9156bf08d7eaae5e8d8ab5f855ba61012e257","date":1285443157,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/cache/DocTermsIndexCreator.DocTermsIndexImpl.DocTermsIndexEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl.DocTermsIndexEnum#next().mjava","sourceNew":"      @Override\r\n      public BytesRef next() throws IOException {\r\n        int start = term.offset + term.length;\r\n        if (start >= end) {\r\n          // switch byte blocks\r\n          if (currentBlockNumber +1 >= blocks.length) {\r\n            return null;\r\n          }\r\n          currentBlockNumber++;\r\n          term.bytes = blocks[currentBlockNumber];\r\n          end = blockEnds[currentBlockNumber];\r\n          start = 0;\r\n          if (end<=0) return null;  // special case of empty last array\r\n        }\r\n\r\n        currentOrd++;\r\n\r\n        byte[] block = term.bytes;\r\n        if ((block[start] & 128) == 0) {\r\n          term.length = block[start];\r\n          term.offset = start+1;\r\n        } else {\r\n          term.length = (((block[start] & 0x7f)) << 8) | (block[1+start] & 0xff);\r\n          term.offset = start+2;\r\n        }\r\n\r\n        return term;\r\n      }\r\n\n","sourceOld":"      @Override\n      public BytesRef next() throws IOException {\n        int start = term.offset + term.length;\n        if (start >= end) {\n          // switch byte blocks\n          if (currentBlockNumber +1 >= blocks.length) {\n            return null;\n          }\n          currentBlockNumber++;\n          term.bytes = blocks[currentBlockNumber];\n          end = blockEnds[currentBlockNumber];\n          start = 0;\n          if (end<=0) return null;  // special case of empty last array\n        }\n\n        currentOrd++;\n\n        byte[] block = term.bytes;\n        if ((block[start] & 128) == 0) {\n          term.length = block[start];\n          term.offset = start+1;\n        } else {\n          term.length = (((int) (block[start] & 0x7f)) << 8) | (block[1+start] & 0xff);\n          term.offset = start+2;\n        }\n\n        return term;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5637938a7dc36e7ff09a5d9398957bd46b15129a","date":1285538458,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/cache/DocTermsIndexCreator.DocTermsIndexImpl.DocTermsIndexEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/cache/DocTermsIndexCreator.DocTermsIndexImpl.DocTermsIndexEnum#next().mjava","sourceNew":"      @Override\n      public BytesRef next() throws IOException {\n        int start = term.offset + term.length;\n        if (start >= end) {\n          // switch byte blocks\n          if (currentBlockNumber +1 >= blocks.length) {\n            return null;\n          }\n          currentBlockNumber++;\n          term.bytes = blocks[currentBlockNumber];\n          end = blockEnds[currentBlockNumber];\n          start = 0;\n          if (end<=0) return null;  // special case of empty last array\n        }\n\n        currentOrd++;\n\n        byte[] block = term.bytes;\n        if ((block[start] & 128) == 0) {\n          term.length = block[start];\n          term.offset = start+1;\n        } else {\n          term.length = (((block[start] & 0x7f)) << 8) | (block[1+start] & 0xff);\n          term.offset = start+2;\n        }\n\n        return term;\n      }\n\n","sourceOld":"      @Override\r\n      public BytesRef next() throws IOException {\r\n        int start = term.offset + term.length;\r\n        if (start >= end) {\r\n          // switch byte blocks\r\n          if (currentBlockNumber +1 >= blocks.length) {\r\n            return null;\r\n          }\r\n          currentBlockNumber++;\r\n          term.bytes = blocks[currentBlockNumber];\r\n          end = blockEnds[currentBlockNumber];\r\n          start = 0;\r\n          if (end<=0) return null;  // special case of empty last array\r\n        }\r\n\r\n        currentOrd++;\r\n\r\n        byte[] block = term.bytes;\r\n        if ((block[start] & 128) == 0) {\r\n          term.length = block[start];\r\n          term.offset = start+1;\r\n        } else {\r\n          term.length = (((block[start] & 0x7f)) << 8) | (block[1+start] & 0xff);\r\n          term.offset = start+2;\r\n        }\r\n\r\n        return term;\r\n      }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/cache/DocTermsIndexCreator.DocTermsIndexImpl.DocTermsIndexEnum#next().mjava","pathOld":"/dev/null","sourceNew":"      @Override\n      public BytesRef next() throws IOException {\n        int start = term.offset + term.length;\n        if (start >= end) {\n          // switch byte blocks\n          if (currentBlockNumber +1 >= blocks.length) {\n            return null;\n          }\n          currentBlockNumber++;\n          term.bytes = blocks[currentBlockNumber];\n          end = blockEnds[currentBlockNumber];\n          start = 0;\n          if (end<=0) return null;  // special case of empty last array\n        }\n\n        currentOrd++;\n\n        byte[] block = term.bytes;\n        if ((block[start] & 128) == 0) {\n          term.length = block[start];\n          term.offset = start+1;\n        } else {\n          term.length = (((block[start] & 0x7f)) << 8) | (block[1+start] & 0xff);\n          term.offset = start+2;\n        }\n\n        return term;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"382fe3a6ca9745891afebda9b9a57cc158305545","date":1320952430,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl.DocTermsIndexEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/cache/DocTermsIndexCreator.DocTermsIndexImpl.DocTermsIndexEnum#next().mjava","sourceNew":"      @Override\n      public BytesRef next() throws IOException {\n        int start = term.offset + term.length;\n        if (start >= end) {\n          // switch byte blocks\n          if (currentBlockNumber +1 >= blocks.length) {\n            return null;\n          }\n          currentBlockNumber++;\n          term.bytes = blocks[currentBlockNumber];\n          end = blockEnds[currentBlockNumber];\n          start = 0;\n          if (end<=0) return null;  // special case of empty last array\n        }\n\n        currentOrd++;\n\n        byte[] block = term.bytes;\n        if ((block[start] & 128) == 0) {\n          term.length = block[start];\n          term.offset = start+1;\n        } else {\n          term.length = (((block[start] & 0x7f)) << 8) | (block[1+start] & 0xff);\n          term.offset = start+2;\n        }\n\n        return term;\n      }\n\n","sourceOld":"      @Override\n      public BytesRef next() throws IOException {\n        int start = term.offset + term.length;\n        if (start >= end) {\n          // switch byte blocks\n          if (currentBlockNumber +1 >= blocks.length) {\n            return null;\n          }\n          currentBlockNumber++;\n          term.bytes = blocks[currentBlockNumber];\n          end = blockEnds[currentBlockNumber];\n          start = 0;\n          if (end<=0) return null;  // special case of empty last array\n        }\n\n        currentOrd++;\n\n        byte[] block = term.bytes;\n        if ((block[start] & 128) == 0) {\n          term.length = block[start];\n          term.offset = start+1;\n        } else {\n          term.length = (((block[start] & 0x7f)) << 8) | (block[1+start] & 0xff);\n          term.offset = start+2;\n        }\n\n        return term;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eee9156bf08d7eaae5e8d8ab5f855ba61012e257":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5637938a7dc36e7ff09a5d9398957bd46b15129a"],"382fe3a6ca9745891afebda9b9a57cc158305545":["5637938a7dc36e7ff09a5d9398957bd46b15129a"],"5637938a7dc36e7ff09a5d9398957bd46b15129a":["eee9156bf08d7eaae5e8d8ab5f855ba61012e257"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["382fe3a6ca9745891afebda9b9a57cc158305545"]},"commit2Childs":{"eee9156bf08d7eaae5e8d8ab5f855ba61012e257":["5637938a7dc36e7ff09a5d9398957bd46b15129a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eee9156bf08d7eaae5e8d8ab5f855ba61012e257","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"5637938a7dc36e7ff09a5d9398957bd46b15129a":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","382fe3a6ca9745891afebda9b9a57cc158305545"],"382fe3a6ca9745891afebda9b9a57cc158305545":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}