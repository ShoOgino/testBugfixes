{"path":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","commits":[{"id":"c380c22ff3b659b2d7412a3335f853d354d17568","date":1329505731,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","pathOld":"/dev/null","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) throws IOException {\n        return new IndexSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) throws IOException {\n        return new IndexSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) throws IOException {\n        return new IndexSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return new IndexSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) throws IOException {\n        return new IndexSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":["c380c22ff3b659b2d7412a3335f853d354d17568"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return new IndexSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) throws IOException {\n        return new IndexSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173","date":1365631993,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return new IndexSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.shutdown();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.shutdown();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e0dfae671422e7453a9199aa320f91427cd80d60","date":1427895926,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored, IndexReader previous) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0c924d4069ef5a5bc479a493befe0121aada6896","date":1427901860,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored, IndexReader previous) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored, IndexReader previous) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), false, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored, IndexReader previous) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored, IndexReader previous) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), false, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored, IndexReader previous) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSearcherManager#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored, IndexReader previous) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    expectThrows(IllegalStateException.class, () -> {\n      new SearcherManager(dir, theEvilOne);\n    });\n    expectThrows(IllegalStateException.class, () -> {\n      new SearcherManager(w.w, random.nextBoolean(), false, theEvilOne);\n    });\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Random random = random();\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored, IndexReader previous) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(dir, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    try {\n      new SearcherManager(w.w, random.nextBoolean(), false, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":["c380c22ff3b659b2d7412a3335f853d354d17568"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c380c22ff3b659b2d7412a3335f853d354d17568":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"05fe562aa248790944d43cdd478f512572835ba0":["68496c2200e559fb7802f7575427b7a482659afb"],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"0c924d4069ef5a5bc479a493befe0121aada6896":["d0ef034a4f10871667ae75181537775ddcf8ade4","e0dfae671422e7453a9199aa320f91427cd80d60"],"e0dfae671422e7453a9199aa320f91427cd80d60":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"68496c2200e559fb7802f7575427b7a482659afb":["e0dfae671422e7453a9199aa320f91427cd80d60","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["c380c22ff3b659b2d7412a3335f853d354d17568"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["e0dfae671422e7453a9199aa320f91427cd80d60"]},"commit2Childs":{"c380c22ff3b659b2d7412a3335f853d354d17568":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"0c924d4069ef5a5bc479a493befe0121aada6896":[],"e0dfae671422e7453a9199aa320f91427cd80d60":["0c924d4069ef5a5bc479a493befe0121aada6896","68496c2200e559fb7802f7575427b7a482659afb","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c380c22ff3b659b2d7412a3335f853d354d17568"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["0c924d4069ef5a5bc479a493befe0121aada6896","e0dfae671422e7453a9199aa320f91427cd80d60"],"68496c2200e559fb7802f7575427b7a482659afb":["05fe562aa248790944d43cdd478f512572835ba0"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["68496c2200e559fb7802f7575427b7a482659afb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0c924d4069ef5a5bc479a493befe0121aada6896","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}