{"path":"solr/core/src/test/org/apache/solr/search/TestRecovery#testLogReplayWithReorderedDBQByIdAndChildDocs().mjava","commits":[{"id":"407b2e02aedce6b9118323ef204a08acfd83add7","date":1487217081,"type":0,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRecovery#testLogReplayWithReorderedDBQByIdAndChildDocs().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLogReplayWithReorderedDBQByIdAndChildDocs() throws Exception {\n    testLogReplayWithReorderedDBQWrapper(() -> {\n          // 1010 - will be deleted\n          updateJ(jsonAdd(sdocWithChildren(\"B1\", \"1010\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1018 - should be kept, including child docs\n          updateJ(jsonAdd(sdocWithChildren(\"B2\", \"1018\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1017 - delete should affect only 1010\n          updateJ(jsonDelQ(\"id:B1 id:B2 id:B3 id:B4\"), params(DISTRIB_UPDATE_PARAM, FROM_LEADER, \"_version_\", \"-1017\")); // This should've arrived after the 1015th update\n          // 1012 - will be deleted\n          updateJ(jsonAdd(sdoc(\"id\", \"B3\", \"_version_\", \"1012\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1020 - should be untouched\n          updateJ(jsonAdd(sdocWithChildren(\"B4\", \"1020\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n        },\n        () -> assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==8\") // B2, B4 and 6 children docs (delete by id does not delete child docs)\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"295e008673df441573c0d5a86837788a5279f9e2","date":1487275964,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRecovery#testLogReplayWithReorderedDBQByIdAndChildDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRecovery#testLogReplayWithReorderedDBQByIdAndChildDocs().mjava","sourceNew":"  @Test\n  public void testLogReplayWithReorderedDBQByIdAndChildDocs() throws Exception {\n    testLogReplayWithReorderedDBQWrapper(() -> {\n          // 1010 - will be deleted\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ3_1\", \"1010\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1018 - should be kept, including child docs\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ3_2\", \"1018\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1017 - delete should affect only 1010\n          updateJ(jsonDelQ(\"id:RDBQ3_1 id:RDBQ3_2 id:RDBQ3_3 id:RDBQ3_4\"), params(DISTRIB_UPDATE_PARAM, FROM_LEADER, \"_version_\", \"-1017\")); // This should've arrived after the 1015th update\n          // 1012 - will be deleted\n          updateJ(jsonAdd(sdoc(\"id\", \"RDBQ3_3\", \"_version_\", \"1012\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1020 - should be untouched\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ3_4\", \"1020\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n        },\n        () -> assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==8\") // RDBQ3_2, RDBQ3_4 and 6 children docs (delete by id does not delete child docs)\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testLogReplayWithReorderedDBQByIdAndChildDocs() throws Exception {\n    testLogReplayWithReorderedDBQWrapper(() -> {\n          // 1010 - will be deleted\n          updateJ(jsonAdd(sdocWithChildren(\"B1\", \"1010\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1018 - should be kept, including child docs\n          updateJ(jsonAdd(sdocWithChildren(\"B2\", \"1018\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1017 - delete should affect only 1010\n          updateJ(jsonDelQ(\"id:B1 id:B2 id:B3 id:B4\"), params(DISTRIB_UPDATE_PARAM, FROM_LEADER, \"_version_\", \"-1017\")); // This should've arrived after the 1015th update\n          // 1012 - will be deleted\n          updateJ(jsonAdd(sdoc(\"id\", \"B3\", \"_version_\", \"1012\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1020 - should be untouched\n          updateJ(jsonAdd(sdocWithChildren(\"B4\", \"1020\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n        },\n        () -> assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==8\") // B2, B4 and 6 children docs (delete by id does not delete child docs)\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9efcb86f82b536ffcefcc27adbfa39b603342af1","date":1492147023,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRecovery#testLogReplayWithReorderedDBQByIdAndChildDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRecovery#testLogReplayWithReorderedDBQByIdAndChildDocs().mjava","sourceNew":"  @Test\n  public void testLogReplayWithReorderedDBQByIdAndChildDocs() throws Exception {\n    testLogReplayWithReorderedDBQWrapper(() -> {\n          String v1010 = getNextVersion();\n          String v1012 = getNextVersion();\n          String v1017_del = \"-\" + getNextVersion();\n          String v1018 = getNextVersion();\n          String v1020 = getNextVersion();\n      \n          // 1010 - will be deleted\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ3_1\", v1010)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1018 - should be kept, including child docs\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ3_2\", v1018)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1017 - delete should affect only 1010\n          updateJ(jsonDelQ(\"id:RDBQ3_1 id:RDBQ3_2 id:RDBQ3_3 id:RDBQ3_4\"), params(DISTRIB_UPDATE_PARAM, FROM_LEADER, \"_version_\", v1017_del)); // This should've arrived after the ver2 update\n          // 1012 - will be deleted\n          updateJ(jsonAdd(sdoc(\"id\", \"RDBQ3_3\", \"_version_\", v1012)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1020 - should be untouched\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ3_4\", v1020)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n        },\n        () -> assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==8\") // RDBQ3_2, RDBQ3_4 and 6 children docs (delete by id does not delete child docs)\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testLogReplayWithReorderedDBQByIdAndChildDocs() throws Exception {\n    testLogReplayWithReorderedDBQWrapper(() -> {\n          // 1010 - will be deleted\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ3_1\", \"1010\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1018 - should be kept, including child docs\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ3_2\", \"1018\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1017 - delete should affect only 1010\n          updateJ(jsonDelQ(\"id:RDBQ3_1 id:RDBQ3_2 id:RDBQ3_3 id:RDBQ3_4\"), params(DISTRIB_UPDATE_PARAM, FROM_LEADER, \"_version_\", \"-1017\")); // This should've arrived after the 1015th update\n          // 1012 - will be deleted\n          updateJ(jsonAdd(sdoc(\"id\", \"RDBQ3_3\", \"_version_\", \"1012\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1020 - should be untouched\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ3_4\", \"1020\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n        },\n        () -> assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==8\") // RDBQ3_2, RDBQ3_4 and 6 children docs (delete by id does not delete child docs)\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRecovery#testLogReplayWithReorderedDBQByIdAndChildDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRecovery#testLogReplayWithReorderedDBQByIdAndChildDocs().mjava","sourceNew":"  @Test\n  public void testLogReplayWithReorderedDBQByIdAndChildDocs() throws Exception {\n    testLogReplayWithReorderedDBQWrapper(() -> {\n          String v1010 = getNextVersion();\n          String v1012 = getNextVersion();\n          String v1017_del = \"-\" + getNextVersion();\n          String v1018 = getNextVersion();\n          String v1020 = getNextVersion();\n      \n          // 1010 - will be deleted\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ3_1\", v1010)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1018 - should be kept, including child docs\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ3_2\", v1018)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1017 - delete should affect only 1010\n          updateJ(jsonDelQ(\"id:RDBQ3_1 id:RDBQ3_2 id:RDBQ3_3 id:RDBQ3_4\"), params(DISTRIB_UPDATE_PARAM, FROM_LEADER, \"_version_\", v1017_del)); // This should've arrived after the ver2 update\n          // 1012 - will be deleted\n          updateJ(jsonAdd(sdoc(\"id\", \"RDBQ3_3\", \"_version_\", v1012)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1020 - should be untouched\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ3_4\", v1020)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n        },\n        () -> assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==8\") // RDBQ3_2, RDBQ3_4 and 6 children docs (delete by id does not delete child docs)\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testLogReplayWithReorderedDBQByIdAndChildDocs() throws Exception {\n    testLogReplayWithReorderedDBQWrapper(() -> {\n          // 1010 - will be deleted\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ3_1\", \"1010\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1018 - should be kept, including child docs\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ3_2\", \"1018\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1017 - delete should affect only 1010\n          updateJ(jsonDelQ(\"id:RDBQ3_1 id:RDBQ3_2 id:RDBQ3_3 id:RDBQ3_4\"), params(DISTRIB_UPDATE_PARAM, FROM_LEADER, \"_version_\", \"-1017\")); // This should've arrived after the 1015th update\n          // 1012 - will be deleted\n          updateJ(jsonAdd(sdoc(\"id\", \"RDBQ3_3\", \"_version_\", \"1012\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1020 - should be untouched\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ3_4\", \"1020\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n        },\n        () -> assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==8\") // RDBQ3_2, RDBQ3_4 and 6 children docs (delete by id does not delete child docs)\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9efcb86f82b536ffcefcc27adbfa39b603342af1":["295e008673df441573c0d5a86837788a5279f9e2"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["295e008673df441573c0d5a86837788a5279f9e2"],"295e008673df441573c0d5a86837788a5279f9e2":["407b2e02aedce6b9118323ef204a08acfd83add7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9efcb86f82b536ffcefcc27adbfa39b603342af1"],"407b2e02aedce6b9118323ef204a08acfd83add7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9efcb86f82b536ffcefcc27adbfa39b603342af1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"295e008673df441573c0d5a86837788a5279f9e2":["9efcb86f82b536ffcefcc27adbfa39b603342af1","54ca69905c5d9d1529286f06ab1d12c68f6c13cb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407b2e02aedce6b9118323ef204a08acfd83add7"],"407b2e02aedce6b9118323ef204a08acfd83add7":["295e008673df441573c0d5a86837788a5279f9e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}