{"path":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#computeNorm(FieldInvertState,Norm).mjava","commits":[{"id":"9e8d5a6ffbfa3405d234a87c833741eabed98d13","date":1326725835,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#computeNorm(FieldInvertState,Norm).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#computeNorm(FieldInvertState).mjava","sourceNew":"  @Override\n  public final void computeNorm(FieldInvertState state, Norm norm) {\n    final int numTerms = discountOverlaps ? state.getLength() - state.getNumOverlap() : state.getLength();\n    norm.setByte(encodeNormValue(state.getBoost(), numTerms));\n  }\n\n","sourceOld":"  @Override\n  public final byte computeNorm(FieldInvertState state) {\n    final int numTerms = discountOverlaps ? state.getLength() - state.getNumOverlap() : state.getLength();\n    return encodeNormValue(state.getBoost(), numTerms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#computeNorm(FieldInvertState,Norm).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#computeNorm(FieldInvertState,Norm).mjava","sourceNew":"  @Override\n  public final void computeNorm(FieldInvertState state, Norm norm) {\n    final int numTerms = discountOverlaps ? state.getLength() - state.getNumOverlap() : state.getLength();\n    norm.setByte(encodeNormValue(state.getBoost(), numTerms));\n  }\n\n","sourceOld":"  @Override\n  public final void computeNorm(FieldInvertState state, Norm norm) {\n    final int numTerms = discountOverlaps ? state.getLength() - state.getNumOverlap() : state.getLength();\n    norm.setByte(encodeNormValue(state.getBoost(), numTerms));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}