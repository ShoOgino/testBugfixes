{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testPassIOContext().mjava","commits":[{"id":"04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3","date":1412358952,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testPassIOContext().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-5724: things like NRTCachingDir rely upon IOContext being properly passed down\n  public void testPassIOContext() throws IOException {\n    final String testfile = \"_123.test\";\n    final IOContext myContext = new IOContext();\n\n    Directory dir = new FilterDirectory(newDirectory()) {\n      @Override\n      public IndexOutput createOutput(String name, IOContext context) throws IOException {\n        assertSame(myContext, context);\n        return super.createOutput(name, context);\n      }\n    };\n    IndexOutput out = dir.createOutput(testfile, myContext);\n    out.writeInt(3);\n    out.close();\n    \n    final SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.singleton(testfile), MergeState.CheckAbort.NONE, myContext);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0e288a70f2f9b7ebd3942d8608636fe6f825894","date":1412362601,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testPassIOContext().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testPassIOContext().mjava","sourceNew":"  // LUCENE-5724: things like NRTCachingDir rely upon IOContext being properly passed down\n  public void testPassIOContext() throws IOException {\n    final String testfile = \"_123.test\";\n    final IOContext myContext = new IOContext();\n\n    Directory dir = new FilterDirectory(newDirectory()) {\n      @Override\n      public IndexOutput createOutput(String name, IOContext context) throws IOException {\n        assertSame(myContext, context);\n        return super.createOutput(name, context);\n      }\n    };\n    IndexOutput out = dir.createOutput(testfile, myContext);\n    out.writeInt(3);\n    out.close();\n    \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.singleton(testfile), MergeState.CheckAbort.NONE, myContext);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5724: things like NRTCachingDir rely upon IOContext being properly passed down\n  public void testPassIOContext() throws IOException {\n    final String testfile = \"_123.test\";\n    final IOContext myContext = new IOContext();\n\n    Directory dir = new FilterDirectory(newDirectory()) {\n      @Override\n      public IndexOutput createOutput(String name, IOContext context) throws IOException {\n        assertSame(myContext, context);\n        return super.createOutput(name, context);\n      }\n    };\n    IndexOutput out = dir.createOutput(testfile, myContext);\n    out.writeInt(3);\n    out.close();\n    \n    final SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.singleton(testfile), MergeState.CheckAbort.NONE, myContext);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testPassIOContext().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-5724: things like NRTCachingDir rely upon IOContext being properly passed down\n  public void testPassIOContext() throws IOException {\n    final String testfile = \"_123.test\";\n    final IOContext myContext = new IOContext();\n\n    Directory dir = new FilterDirectory(newDirectory()) {\n      @Override\n      public IndexOutput createOutput(String name, IOContext context) throws IOException {\n        assertSame(myContext, context);\n        return super.createOutput(name, context);\n      }\n    };\n    IndexOutput out = dir.createOutput(testfile, myContext);\n    out.writeInt(3);\n    out.close();\n    \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.singleton(testfile), MergeState.CheckAbort.NONE, myContext);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5faf65b6692f15cca0f87bf8666c87899afc619f","date":1420468108,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testPassIOContext().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testPassIOContext().mjava","sourceNew":"  // LUCENE-5724: things like NRTCachingDir rely upon IOContext being properly passed down\n  public void testPassIOContext() throws IOException {\n    final String testfile = \"_123.test\";\n    final IOContext myContext = new IOContext();\n\n    Directory dir = new FilterDirectory(newDirectory()) {\n      @Override\n      public IndexOutput createOutput(String name, IOContext context) throws IOException {\n        assertSame(myContext, context);\n        return super.createOutput(name, context);\n      }\n    };\n    IndexOutput out = dir.createOutput(testfile, myContext);\n    out.writeInt(3);\n    out.close();\n    \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.singleton(testfile), myContext);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5724: things like NRTCachingDir rely upon IOContext being properly passed down\n  public void testPassIOContext() throws IOException {\n    final String testfile = \"_123.test\";\n    final IOContext myContext = new IOContext();\n\n    Directory dir = new FilterDirectory(newDirectory()) {\n      @Override\n      public IndexOutput createOutput(String name, IOContext context) throws IOException {\n        assertSame(myContext, context);\n        return super.createOutput(name, context);\n      }\n    };\n    IndexOutput out = dir.createOutput(testfile, myContext);\n    out.writeInt(3);\n    out.close();\n    \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.singleton(testfile), MergeState.CheckAbort.NONE, myContext);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75d243fa001c0783996918dbbe60b55cbaeeff46","date":1422502815,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testPassIOContext().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testPassIOContext().mjava","sourceNew":"  // LUCENE-5724: things like NRTCachingDir rely upon IOContext being properly passed down\n  public void testPassIOContext() throws IOException {\n    final String testfile = \"_123.test\";\n    final IOContext myContext = new IOContext();\n\n    Directory dir = new FilterDirectory(newDirectory()) {\n      @Override\n      public IndexOutput createOutput(String name, IOContext context) throws IOException {\n        assertSame(myContext, context);\n        return super.createOutput(name, context);\n      }\n    };\n    IndexOutput out = dir.createOutput(testfile, myContext);\n    out.writeInt(3);\n    out.close();\n    \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.setFiles(Collections.singleton(testfile));\n    si.getCodec().compoundFormat().write(dir, si, myContext);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5724: things like NRTCachingDir rely upon IOContext being properly passed down\n  public void testPassIOContext() throws IOException {\n    final String testfile = \"_123.test\";\n    final IOContext myContext = new IOContext();\n\n    Directory dir = new FilterDirectory(newDirectory()) {\n      @Override\n      public IndexOutput createOutput(String name, IOContext context) throws IOException {\n        assertSame(myContext, context);\n        return super.createOutput(name, context);\n      }\n    };\n    IndexOutput out = dir.createOutput(testfile, myContext);\n    out.writeInt(3);\n    out.close();\n    \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.singleton(testfile), myContext);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71488d7f5786ae87541276121ecb69705a11a295","date":1465498138,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testPassIOContext().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testPassIOContext().mjava","sourceNew":"  // LUCENE-5724: things like NRTCachingDir rely upon IOContext being properly passed down\n  public void testPassIOContext() throws IOException {\n    final String testfile = \"_123.test\";\n    final IOContext myContext = new IOContext();\n\n    Directory dir = new FilterDirectory(newDirectory()) {\n      @Override\n      public IndexOutput createOutput(String name, IOContext context) throws IOException {\n        assertSame(myContext, context);\n        return super.createOutput(name, context);\n      }\n    };\n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    try (IndexOutput out = dir.createOutput(testfile, myContext)) {\n      CodecUtil.writeIndexHeader(out, \"Foo\", 0, si.getId(), \"suffix\");\n      out.writeInt(3);\n      CodecUtil.writeFooter(out);\n    }\n    \n    si.setFiles(Collections.singleton(testfile));\n    si.getCodec().compoundFormat().write(dir, si, myContext);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5724: things like NRTCachingDir rely upon IOContext being properly passed down\n  public void testPassIOContext() throws IOException {\n    final String testfile = \"_123.test\";\n    final IOContext myContext = new IOContext();\n\n    Directory dir = new FilterDirectory(newDirectory()) {\n      @Override\n      public IndexOutput createOutput(String name, IOContext context) throws IOException {\n        assertSame(myContext, context);\n        return super.createOutput(name, context);\n      }\n    };\n    IndexOutput out = dir.createOutput(testfile, myContext);\n    out.writeInt(3);\n    out.close();\n    \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.setFiles(Collections.singleton(testfile));\n    si.getCodec().compoundFormat().write(dir, si, myContext);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testPassIOContext().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testPassIOContext().mjava","sourceNew":"  // LUCENE-5724: things like NRTCachingDir rely upon IOContext being properly passed down\n  public void testPassIOContext() throws IOException {\n    final String testfile = \"_123.test\";\n    final IOContext myContext = new IOContext();\n\n    Directory dir = new FilterDirectory(newDirectory()) {\n      @Override\n      public IndexOutput createOutput(String name, IOContext context) throws IOException {\n        assertSame(myContext, context);\n        return super.createOutput(name, context);\n      }\n    };\n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    try (IndexOutput out = dir.createOutput(testfile, myContext)) {\n      CodecUtil.writeIndexHeader(out, \"Foo\", 0, si.getId(), \"suffix\");\n      out.writeInt(3);\n      CodecUtil.writeFooter(out);\n    }\n    \n    si.setFiles(Collections.singleton(testfile));\n    si.getCodec().compoundFormat().write(dir, si, myContext);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5724: things like NRTCachingDir rely upon IOContext being properly passed down\n  public void testPassIOContext() throws IOException {\n    final String testfile = \"_123.test\";\n    final IOContext myContext = new IOContext();\n\n    Directory dir = new FilterDirectory(newDirectory()) {\n      @Override\n      public IndexOutput createOutput(String name, IOContext context) throws IOException {\n        assertSame(myContext, context);\n        return super.createOutput(name, context);\n      }\n    };\n    IndexOutput out = dir.createOutput(testfile, myContext);\n    out.writeInt(3);\n    out.close();\n    \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.setFiles(Collections.singleton(testfile));\n    si.getCodec().compoundFormat().write(dir, si, myContext);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e288a70f2f9b7ebd3942d8608636fe6f825894"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"71488d7f5786ae87541276121ecb69705a11a295":["75d243fa001c0783996918dbbe60b55cbaeeff46"],"5faf65b6692f15cca0f87bf8666c87899afc619f":["9bb9a29a5e71a90295f175df8919802993142c9a"],"75d243fa001c0783996918dbbe60b55cbaeeff46":["5faf65b6692f15cca0f87bf8666c87899afc619f"],"a0e288a70f2f9b7ebd3942d8608636fe6f825894":["04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["75d243fa001c0783996918dbbe60b55cbaeeff46","71488d7f5786ae87541276121ecb69705a11a295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71488d7f5786ae87541276121ecb69705a11a295"]},"commit2Childs":{"04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3":["a0e288a70f2f9b7ebd3942d8608636fe6f825894"],"9bb9a29a5e71a90295f175df8919802993142c9a":["5faf65b6692f15cca0f87bf8666c87899afc619f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3","9bb9a29a5e71a90295f175df8919802993142c9a"],"71488d7f5786ae87541276121ecb69705a11a295":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5faf65b6692f15cca0f87bf8666c87899afc619f":["75d243fa001c0783996918dbbe60b55cbaeeff46"],"75d243fa001c0783996918dbbe60b55cbaeeff46":["71488d7f5786ae87541276121ecb69705a11a295","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e288a70f2f9b7ebd3942d8608636fe6f825894":["9bb9a29a5e71a90295f175df8919802993142c9a"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}