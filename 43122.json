{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase#getNext().mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase#getNext().mjava","pathOld":"/dev/null","sourceNew":"  protected Map<String, Object> getNext() {\n    try {\n      if (rowIterator == null)\n        return null;\n      if (rowIterator.hasNext())\n        return rowIterator.next();\n      rowIterator = null;\n      query = null;\n      return null;\n    } catch (Exception e) {\n      LOG.log(Level.SEVERE, \"getNext() failed for query '\" + query + \"'\", e);\n      rowIterator = null;\n      query = null;\n      throw new DataImportHandlerException(DataImportHandlerException.WARN, e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00da8b51bdeae168a5b26ec506db372b219ca7a2","date":1221704186,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase#getNext().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase#getNext().mjava","sourceNew":"  protected Map<String, Object> getNext() {\n    try {\n      if (rowIterator == null)\n        return null;\n      if (rowIterator.hasNext())\n        return rowIterator.next();\n      rowIterator = null;\n      query = null;\n      return null;\n    } catch (Exception e) {\n      log.error( \"getNext() failed for query '\" + query + \"'\", e);\n      rowIterator = null;\n      query = null;\n      throw new DataImportHandlerException(DataImportHandlerException.WARN, e);\n    }\n  }\n\n","sourceOld":"  protected Map<String, Object> getNext() {\n    try {\n      if (rowIterator == null)\n        return null;\n      if (rowIterator.hasNext())\n        return rowIterator.next();\n      rowIterator = null;\n      query = null;\n      return null;\n    } catch (Exception e) {\n      LOG.log(Level.SEVERE, \"getNext() failed for query '\" + query + \"'\", e);\n      rowIterator = null;\n      query = null;\n      throw new DataImportHandlerException(DataImportHandlerException.WARN, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ed3f47d0f68ca5e5107d28c942fbd1185f44c62","date":1226483472,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase#getNext().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase#getNext().mjava","sourceNew":"  protected Map<String, Object> getNext() {\n    try {\n      if (rowIterator == null)\n        return null;\n      if (rowIterator.hasNext())\n        return rowIterator.next();\n      query = null;\n      return null;\n    } catch (Exception e) {\n      log.error(\"getNext() failed for query '\" + query + \"'\", e);\n      query = null;\n      wrapAndThrow(DataImportHandlerException.WARN, e);\n      return null;\n    }\n  }\n\n","sourceOld":"  protected Map<String, Object> getNext() {\n    try {\n      if (rowIterator == null)\n        return null;\n      if (rowIterator.hasNext())\n        return rowIterator.next();\n      rowIterator = null;\n      query = null;\n      return null;\n    } catch (Exception e) {\n      log.error( \"getNext() failed for query '\" + query + \"'\", e);\n      rowIterator = null;\n      query = null;\n      throw new DataImportHandlerException(DataImportHandlerException.WARN, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a2fb92cb166ab36a1320f8bf3cb157063177c45","date":1228504451,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase#getNext().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase#getNext().mjava","sourceNew":"  protected Map<String, Object> getNext() {\n    try {\n      if (rowIterator == null)\n        return null;\n      if (rowIterator.hasNext())\n        return rowIterator.next();\n      query = null;\n      rowIterator = null;\n      return null;\n    } catch (Exception e) {\n      log.error(\"getNext() failed for query '\" + query + \"'\", e);\n      query = null;\n      rowIterator = null;\n      wrapAndThrow(DataImportHandlerException.WARN, e);\n      return null;\n    }\n  }\n\n","sourceOld":"  protected Map<String, Object> getNext() {\n    try {\n      if (rowIterator == null)\n        return null;\n      if (rowIterator.hasNext())\n        return rowIterator.next();\n      query = null;\n      return null;\n    } catch (Exception e) {\n      log.error(\"getNext() failed for query '\" + query + \"'\", e);\n      query = null;\n      wrapAndThrow(DataImportHandlerException.WARN, e);\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase#getNext().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase#getNext().mjava","sourceNew":"  protected Map<String, Object> getNext() {\n    try {\n      if (rowIterator == null)\n        return null;\n      if (rowIterator.hasNext())\n        return rowIterator.next();\n      query = null;\n      rowIterator = null;\n      return null;\n    } catch (Exception e) {\n      log.error(\"getNext() failed for query '\" + query + \"'\", e);\n      query = null;\n      rowIterator = null;\n      wrapAndThrow(DataImportHandlerException.WARN, e);\n      return null;\n    }\n  }\n\n","sourceOld":"  protected Map<String, Object> getNext() {\n    try {\n      if (rowIterator == null)\n        return null;\n      if (rowIterator.hasNext())\n        return rowIterator.next();\n      query = null;\n      rowIterator = null;\n      return null;\n    } catch (Exception e) {\n      log.error(\"getNext() failed for query '\" + query + \"'\", e);\n      query = null;\n      rowIterator = null;\n      wrapAndThrow(DataImportHandlerException.WARN, e);\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0ed3f47d0f68ca5e5107d28c942fbd1185f44c62":["00da8b51bdeae168a5b26ec506db372b219ca7a2"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["5a2fb92cb166ab36a1320f8bf3cb157063177c45"],"5a2fb92cb166ab36a1320f8bf3cb157063177c45":["0ed3f47d0f68ca5e5107d28c942fbd1185f44c62"],"00da8b51bdeae168a5b26ec506db372b219ca7a2":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0ed3f47d0f68ca5e5107d28c942fbd1185f44c62":["5a2fb92cb166ab36a1320f8bf3cb157063177c45"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["00da8b51bdeae168a5b26ec506db372b219ca7a2"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"5a2fb92cb166ab36a1320f8bf3cb157063177c45":["ad94625fb8d088209f46650c8097196fec67f00c"],"00da8b51bdeae168a5b26ec506db372b219ca7a2":["0ed3f47d0f68ca5e5107d28c942fbd1185f44c62"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}