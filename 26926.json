{"path":"solr/core/src/java/org/apache/solr/util/SolrLogLayout#getReplicaProps(ZkController,SolrCore).mjava","commits":[{"id":"66c4027d3915ee5838b3049d0801f6789e5b5f8b","date":1368652737,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrLogLayout#getReplicaProps(ZkController,SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  private Map<String,Object> getReplicaProps(ZkController zkController, SolrCore core) {\n    final String collection = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n    Replica replica = zkController.getClusterState().getReplica(collection, zkController.getCoreNodeName(core.getCoreDescriptor()));\n    if(replica!=null) {\n      return replica.getProperties();\n    }\n    return Collections.EMPTY_MAP;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0622fbd990643ae4cacb693db6a0c82cf8916ae2","date":1397637446,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrLogLayout#getReplicaProps(ZkController,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrLogLayout#getReplicaProps(ZkController,SolrCore).mjava","sourceNew":"  private Map<String,Object> getReplicaProps(ZkController zkController, SolrCore core) {\n    final String collection = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n    Replica replica = zkController.getClusterState().getCachedReplica(collection, zkController.getCoreNodeName(core.getCoreDescriptor()));\n    if(replica!=null) {\n      return replica.getProperties();\n    }\n    return Collections.EMPTY_MAP;\n  }\n\n","sourceOld":"  private Map<String,Object> getReplicaProps(ZkController zkController, SolrCore core) {\n    final String collection = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n    Replica replica = zkController.getClusterState().getReplica(collection, zkController.getCoreNodeName(core.getCoreDescriptor()));\n    if(replica!=null) {\n      return replica.getProperties();\n    }\n    return Collections.EMPTY_MAP;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5a233896b7f16ac9b4ed601ef8207d98f1f0500","date":1398857046,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrLogLayout#getReplicaProps(ZkController,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrLogLayout#getReplicaProps(ZkController,SolrCore).mjava","sourceNew":"  private Map<String,Object> getReplicaProps(ZkController zkController, SolrCore core) {\n    final String collection = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n    Replica replica = zkController.getClusterState().getReplica(collection, zkController.getCoreNodeName(core.getCoreDescriptor()));\n    if(replica!=null) {\n      return replica.getProperties();\n    }\n    return Collections.EMPTY_MAP;\n  }\n\n","sourceOld":"  private Map<String,Object> getReplicaProps(ZkController zkController, SolrCore core) {\n    final String collection = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n    Replica replica = zkController.getClusterState().getCachedReplica(collection, zkController.getCoreNodeName(core.getCoreDescriptor()));\n    if(replica!=null) {\n      return replica.getProperties();\n    }\n    return Collections.EMPTY_MAP;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6f693ed86f289b2e42b46684409b3997f2c264a","date":1404319832,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrLogLayout#getReplicaProps(ZkController,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrLogLayout#getReplicaProps(ZkController,SolrCore).mjava","sourceNew":"  private Map<String,Object> getReplicaProps(ZkController zkController, SolrCore core) {\n    final String collection = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n    Replica replica = zkController.getZkStateReader().getClusterState(). getReplica(collection, zkController.getCoreNodeName(core.getCoreDescriptor()), true);\n    if(replica!=null) {\n      return replica.getProperties();\n    }\n    return Collections.EMPTY_MAP;\n  }\n\n","sourceOld":"  private Map<String,Object> getReplicaProps(ZkController zkController, SolrCore core) {\n    final String collection = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n    Replica replica = zkController.getClusterState().getReplica(collection, zkController.getCoreNodeName(core.getCoreDescriptor()));\n    if(replica!=null) {\n      return replica.getProperties();\n    }\n    return Collections.EMPTY_MAP;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4c07fa58a256dccf8b95364855fd5e9ad4d1401","date":1404386015,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrLogLayout#getReplicaProps(ZkController,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrLogLayout#getReplicaProps(ZkController,SolrCore).mjava","sourceNew":"  private Map<String,Object> getReplicaProps(ZkController zkController, SolrCore core) {\n    final String collection = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n    Replica replica = zkController.getClusterState().getReplica(collection, zkController.getCoreNodeName(core.getCoreDescriptor()));\n    if(replica!=null) {\n      return replica.getProperties();\n    }\n    return Collections.EMPTY_MAP;\n  }\n\n","sourceOld":"  private Map<String,Object> getReplicaProps(ZkController zkController, SolrCore core) {\n    final String collection = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n    Replica replica = zkController.getZkStateReader().getClusterState(). getReplica(collection, zkController.getCoreNodeName(core.getCoreDescriptor()), true);\n    if(replica!=null) {\n      return replica.getProperties();\n    }\n    return Collections.EMPTY_MAP;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04c8df3f10a676c3de5dbf390f17a2de2d45cacd","date":1461615626,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrLogLayout#getReplicaProps(ZkController,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrLogLayout#getReplicaProps(ZkController,SolrCore).mjava","sourceNew":"  private Map<String, Object> getReplicaProps(ZkController zkController, SolrCore core) {\n    final String collectionName = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n    DocCollection collection = zkController.getClusterState().getCollectionOrNull(collectionName);\n    Replica replica = collection.getReplica(zkController.getCoreNodeName(core.getCoreDescriptor()));\n    if (replica != null) {\n      return replica.getProperties();\n    }\n    return Collections.EMPTY_MAP;\n  }\n\n","sourceOld":"  private Map<String,Object> getReplicaProps(ZkController zkController, SolrCore core) {\n    final String collection = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n    Replica replica = zkController.getClusterState().getReplica(collection, zkController.getCoreNodeName(core.getCoreDescriptor()));\n    if(replica!=null) {\n      return replica.getProperties();\n    }\n    return Collections.EMPTY_MAP;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrLogLayout#getReplicaProps(ZkController,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrLogLayout#getReplicaProps(ZkController,SolrCore).mjava","sourceNew":"  private Map<String, Object> getReplicaProps(ZkController zkController, SolrCore core) {\n    final String collectionName = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n    DocCollection collection = zkController.getClusterState().getCollectionOrNull(collectionName);\n    Replica replica = collection.getReplica(zkController.getCoreNodeName(core.getCoreDescriptor()));\n    if (replica != null) {\n      return replica.getProperties();\n    }\n    return Collections.EMPTY_MAP;\n  }\n\n","sourceOld":"  private Map<String,Object> getReplicaProps(ZkController zkController, SolrCore core) {\n    final String collection = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n    Replica replica = zkController.getClusterState().getReplica(collection, zkController.getCoreNodeName(core.getCoreDescriptor()));\n    if(replica!=null) {\n      return replica.getProperties();\n    }\n    return Collections.EMPTY_MAP;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06a8891f085f71282bb3ece1b1732b68f07813a3","date":1591912889,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrLogLayout#getReplicaProps(ZkController,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrLogLayout#getReplicaProps(ZkController,SolrCore).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  private Map<String, Object> getReplicaProps(ZkController zkController, SolrCore core) {\n    final String collectionName = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n    DocCollection collection = zkController.getClusterState().getCollectionOrNull(collectionName);\n    Replica replica = collection.getReplica(zkController.getCoreNodeName(core.getCoreDescriptor()));\n    if (replica != null) {\n      return replica.getProperties();\n    }\n    return Collections.EMPTY_MAP;\n  }\n\n","sourceOld":"  private Map<String, Object> getReplicaProps(ZkController zkController, SolrCore core) {\n    final String collectionName = core.getCoreDescriptor().getCloudDescriptor().getCollectionName();\n    DocCollection collection = zkController.getClusterState().getCollectionOrNull(collectionName);\n    Replica replica = collection.getReplica(zkController.getCoreNodeName(core.getCoreDescriptor()));\n    if (replica != null) {\n      return replica.getProperties();\n    }\n    return Collections.EMPTY_MAP;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a6f693ed86f289b2e42b46684409b3997f2c264a":["a5a233896b7f16ac9b4ed601ef8207d98f1f0500"],"f4c07fa58a256dccf8b95364855fd5e9ad4d1401":["a6f693ed86f289b2e42b46684409b3997f2c264a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["f4c07fa58a256dccf8b95364855fd5e9ad4d1401","04c8df3f10a676c3de5dbf390f17a2de2d45cacd"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"a5a233896b7f16ac9b4ed601ef8207d98f1f0500":["0622fbd990643ae4cacb693db6a0c82cf8916ae2"],"0622fbd990643ae4cacb693db6a0c82cf8916ae2":["66c4027d3915ee5838b3049d0801f6789e5b5f8b"],"04c8df3f10a676c3de5dbf390f17a2de2d45cacd":["f4c07fa58a256dccf8b95364855fd5e9ad4d1401"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06a8891f085f71282bb3ece1b1732b68f07813a3"],"66c4027d3915ee5838b3049d0801f6789e5b5f8b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a6f693ed86f289b2e42b46684409b3997f2c264a":["f4c07fa58a256dccf8b95364855fd5e9ad4d1401"],"f4c07fa58a256dccf8b95364855fd5e9ad4d1401":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","04c8df3f10a676c3de5dbf390f17a2de2d45cacd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["66c4027d3915ee5838b3049d0801f6789e5b5f8b"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["06a8891f085f71282bb3ece1b1732b68f07813a3"],"a5a233896b7f16ac9b4ed601ef8207d98f1f0500":["a6f693ed86f289b2e42b46684409b3997f2c264a"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"04c8df3f10a676c3de5dbf390f17a2de2d45cacd":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"0622fbd990643ae4cacb693db6a0c82cf8916ae2":["a5a233896b7f16ac9b4ed601ef8207d98f1f0500"],"66c4027d3915ee5838b3049d0801f6789e5b5f8b":["0622fbd990643ae4cacb693db6a0c82cf8916ae2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}