{"path":"solr/core/src/java/org/apache/solr/handler/component/PhrasesIdentificationComponent.PhrasesContextData#summarize(List[Phrase]).mjava","commits":[{"id":"0d1411e62d30c460b09c6f3643df82daa10a27cc","date":1536256256,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/PhrasesIdentificationComponent.PhrasesContextData#summarize(List[Phrase]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Given a list of phrases to be returned to the user, summarizes those phrases by decorating the \n     * original input string to indicate where the identified phrases exist, using {@link #summaryPre} \n     * and {@link #summaryPost}\n     *\n     * @param results a list of (non overlapping) Phrases that have been identified, sorted from highest scoring to lowest\n     * @return the original user input, decorated to indicate the identified phrases\n     */\n    public String summarize(final List<Phrase> results) {\n      final StringBuffer out = new StringBuffer(rawInput);\n      \n      // sort by *reverse* position so we can go back to front \n      final List<Phrase> reversed = results.stream()\n        .sorted(Comparator.comparing((p -> p.getPositionStart()), Collections.reverseOrder()))\n        .collect(Collectors.toList());\n\n      for (Phrase p : reversed) {\n        out.insert(p.getOffsetEnd(), summaryPost);\n        out.insert(p.getOffsetStart(), summaryPre);\n      }\n      return out.toString();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0d1411e62d30c460b09c6f3643df82daa10a27cc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d1411e62d30c460b09c6f3643df82daa10a27cc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d1411e62d30c460b09c6f3643df82daa10a27cc"],"0d1411e62d30c460b09c6f3643df82daa10a27cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}