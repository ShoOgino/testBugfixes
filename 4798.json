{"path":"solr/core/src/test/org/apache/solr/update/CdcrUpdateLogTest#testResetToLastPosition().mjava","commits":[{"id":"86290366cefc1b9d4eced13b430858c4a4c0421d","date":1432321109,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/CdcrUpdateLogTest#testResetToLastPosition().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Check that the reader is correctly reset to its last position\n   */\n  @Test\n  public void testResetToLastPosition() throws Exception {\n    this.clearCore();\n\n    CdcrUpdateLog ulog = (CdcrUpdateLog) h.getCore().getUpdateHandler().getUpdateLog();\n    File logDir = new File(h.getCore().getUpdateHandler().getUpdateLog().getLogDir());\n    CdcrUpdateLog.CdcrLogReader reader = ulog.newLogReader();\n\n    int start = 0;\n\n    LinkedList<Long> versions = new LinkedList<>();\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    assertEquals(2, ulog.getLogList(logDir).length);\n\n    for (int i = 0; i < 22; i++) {\n      Object o = reader.next();\n      assertNotNull(o);\n      // reset to last position\n      reader.resetToLastPosition();\n      // we should read the same update operation, i.e., same version number\n      assertEquals(((List) o).get(1), ((List) reader.next()).get(1));\n    }\n    assertNull(reader.next());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1","date":1598647393,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/update/CdcrUpdateLogTest#testResetToLastPosition().mjava","sourceNew":null,"sourceOld":"  /**\n   * Check that the reader is correctly reset to its last position\n   */\n  @Test\n  public void testResetToLastPosition() throws Exception {\n    this.clearCore();\n\n    CdcrUpdateLog ulog = (CdcrUpdateLog) h.getCore().getUpdateHandler().getUpdateLog();\n    File logDir = new File(h.getCore().getUpdateHandler().getUpdateLog().getLogDir());\n    CdcrUpdateLog.CdcrLogReader reader = ulog.newLogReader();\n\n    int start = 0;\n\n    LinkedList<Long> versions = new LinkedList<>();\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    assertEquals(2, ulog.getLogList(logDir).length);\n\n    for (int i = 0; i < 22; i++) {\n      Object o = reader.next();\n      assertNotNull(o);\n      // reset to last position\n      reader.resetToLastPosition();\n      // we should read the same update operation, i.e., same version number\n      assertEquals(((List) o).get(1), ((List) reader.next()).get(1));\n    }\n    assertNull(reader.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"]},"commit2Childs":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}