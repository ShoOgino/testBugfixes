{"path":"src/java/org/apache/lucene/analysis/CharTokenizer#useOldAPI(Version).mjava","commits":[{"id":"966b079690131e434b39530d82cc413f5aff4cd5","date":1264751025,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharTokenizer#useOldAPI(Version).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @deprecated this will be removed in lucene 4.0\n   */\n  @Deprecated\n  private boolean useOldAPI(Version matchVersion) {\n    final Class<? extends CharTokenizer> clazz = this.getClass();\n    if (matchVersion.onOrAfter(Version.LUCENE_31)\n        && (isTokenCharMethod.isOverriddenAsOf(clazz) || normalizeMethod\n            .isOverriddenAsOf(clazz))) throw new IllegalArgumentException(\n        \"For matchVersion >= LUCENE_31, CharTokenizer subclasses must not override isTokenChar(char) or normalize(char).\");\n    return !matchVersion.onOrAfter(Version.LUCENE_31);\n  } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/CharTokenizer#useOldAPI(Version).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharTokenizer#useOldAPI(Version).mjava","sourceNew":"  /**\n   * @deprecated this will be removed in lucene 4.0\n   */\n  @Deprecated\n  private boolean useOldAPI(Version matchVersion) {\n    final Class<? extends CharTokenizer> clazz = this.getClass();\n    if (matchVersion.onOrAfter(Version.LUCENE_31)\n        && (isTokenCharMethod.isOverriddenAsOf(clazz) || normalizeMethod\n            .isOverriddenAsOf(clazz))) throw new IllegalArgumentException(\n        \"For matchVersion >= LUCENE_31, CharTokenizer subclasses must not override isTokenChar(char) or normalize(char).\");\n    return !matchVersion.onOrAfter(Version.LUCENE_31);\n  } \n\n","sourceOld":"  /**\n   * @deprecated this will be removed in lucene 4.0\n   */\n  @Deprecated\n  private boolean useOldAPI(Version matchVersion) {\n    final Class<? extends CharTokenizer> clazz = this.getClass();\n    if (matchVersion.onOrAfter(Version.LUCENE_31)\n        && (isTokenCharMethod.isOverriddenAsOf(clazz) || normalizeMethod\n            .isOverriddenAsOf(clazz))) throw new IllegalArgumentException(\n        \"For matchVersion >= LUCENE_31, CharTokenizer subclasses must not override isTokenChar(char) or normalize(char).\");\n    return !matchVersion.onOrAfter(Version.LUCENE_31);\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"966b079690131e434b39530d82cc413f5aff4cd5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["966b079690131e434b39530d82cc413f5aff4cd5"]},"commit2Childs":{"966b079690131e434b39530d82cc413f5aff4cd5":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["966b079690131e434b39530d82cc413f5aff4cd5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}