{"path":"lucene/spatial3d/src/java/org/apache/lucene/bkdtree3d/BKD3DTreeReader#intersect(int,int,int,int,int,int,ValueFilter).mjava","commits":[{"id":"f64b7098768253180859cd8faeae6b1a185b06ed","date":1441223971,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/bkdtree3d/BKD3DTreeReader#intersect(int,int,int,int,int,int,ValueFilter).mjava","pathOld":"/dev/null","sourceNew":"  /** Optimized intersect which takes the 3D bbox for the query and uses that to avoid filter.compare calls\n  *   when cells are clearly outside the bbox. */\n  public DocIdSet intersect(int xMin, int xMax, int yMin, int yMax, int zMin, int zMax, ValueFilter filter) throws IOException {\n\n    QueryState state = new QueryState(in.clone(), maxDoc,\n                                      xMin, xMax,\n                                      yMin, yMax,\n                                      zMin, zMax,\n                                      filter);\n\n    int hitCount = intersect(state, 1,\n                             Integer.MIN_VALUE, Integer.MAX_VALUE,\n                             Integer.MIN_VALUE, Integer.MAX_VALUE,\n                             Integer.MIN_VALUE, Integer.MAX_VALUE);\n\n    // NOTE: hitCount is an over-estimate in the multi-valued case:\n    return state.docs.build(hitCount);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1904709ea0185dc04e3d77ea01c79e909caf2796","date":1447006699,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/bkdtree3d/BKD3DTreeReader#intersect(int,int,int,int,int,int,ValueFilter).mjava","sourceNew":null,"sourceOld":"  /** Optimized intersect which takes the 3D bbox for the query and uses that to avoid filter.compare calls\n  *   when cells are clearly outside the bbox. */\n  public DocIdSet intersect(int xMin, int xMax, int yMin, int yMax, int zMin, int zMax, ValueFilter filter) throws IOException {\n\n    QueryState state = new QueryState(in.clone(), maxDoc,\n                                      xMin, xMax,\n                                      yMin, yMax,\n                                      zMin, zMax,\n                                      filter);\n\n    int hitCount = intersect(state, 1,\n                             Integer.MIN_VALUE, Integer.MAX_VALUE,\n                             Integer.MIN_VALUE, Integer.MAX_VALUE,\n                             Integer.MIN_VALUE, Integer.MAX_VALUE);\n\n    // NOTE: hitCount is an over-estimate in the multi-valued case:\n    return state.docs.build(hitCount);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f64b7098768253180859cd8faeae6b1a185b06ed":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1904709ea0185dc04e3d77ea01c79e909caf2796":["f64b7098768253180859cd8faeae6b1a185b06ed"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1904709ea0185dc04e3d77ea01c79e909caf2796"]},"commit2Childs":{"f64b7098768253180859cd8faeae6b1a185b06ed":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f64b7098768253180859cd8faeae6b1a185b06ed"],"1904709ea0185dc04e3d77ea01c79e909caf2796":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}