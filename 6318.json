{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#docs(Bits,DocsEnum,int).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#docs(Bits,DocsEnum,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#docs(Bits,DocsEnum,int).mjava","sourceNew":"    @Override\n    public DocsEnum docs(Bits liveDocs, DocsEnum reuse, int flags) {\n      decodeMetaData();\n      FSTDocsEnum docsEnum;\n\n      if (reuse == null || !(reuse instanceof FSTDocsEnum)) {\n        docsEnum = new FSTDocsEnum(field.getIndexOptions(), field.hasPayloads());\n      } else {\n        docsEnum = (FSTDocsEnum) reuse;        \n        if (!docsEnum.canReuse(field.getIndexOptions(), field.hasPayloads())) {\n          docsEnum = new FSTDocsEnum(field.getIndexOptions(), field.hasPayloads());\n        }\n      }\n      return docsEnum.reset(current.output, liveDocs, docFreq);\n    }\n\n","sourceOld":"    @Override\n    public DocsEnum docs(Bits liveDocs, DocsEnum reuse, int flags) {\n      decodeMetaData();\n      FSTDocsEnum docsEnum;\n\n      if (reuse == null || !(reuse instanceof FSTDocsEnum)) {\n        docsEnum = new FSTDocsEnum(field.getIndexOptions(), field.hasPayloads());\n      } else {\n        docsEnum = (FSTDocsEnum) reuse;        \n        if (!docsEnum.canReuse(field.getIndexOptions(), field.hasPayloads())) {\n          docsEnum = new FSTDocsEnum(field.getIndexOptions(), field.hasPayloads());\n        }\n      }\n      return docsEnum.reset(current.output, liveDocs, docFreq);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c7c5f2319949ba567dd867f78f86ea8ff0f1476","date":1375469665,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#docs(Bits,DocsEnum,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#docs(Bits,DocsEnum,int).mjava","sourceNew":"    @Override\n    public DocsEnum docs(Bits liveDocs, DocsEnum reuse, int flags) {\n      decodeMetaData();\n      FSTDocsEnum docsEnum;\n\n      if (reuse == null || !(reuse instanceof FSTDocsEnum)) {\n        docsEnum = new FSTDocsEnum(field.getIndexOptions(), field.hasPayloads());\n      } else {\n        docsEnum = (FSTDocsEnum) reuse;        \n        if (!docsEnum.canReuse(field.getIndexOptions(), field.hasPayloads())) {\n          docsEnum = new FSTDocsEnum(field.getIndexOptions(), field.hasPayloads());\n        }\n      }\n      return docsEnum.reset(this.postingsSpare, liveDocs, docFreq);\n    }\n\n","sourceOld":"    @Override\n    public DocsEnum docs(Bits liveDocs, DocsEnum reuse, int flags) {\n      decodeMetaData();\n      FSTDocsEnum docsEnum;\n\n      if (reuse == null || !(reuse instanceof FSTDocsEnum)) {\n        docsEnum = new FSTDocsEnum(field.getIndexOptions(), field.hasPayloads());\n      } else {\n        docsEnum = (FSTDocsEnum) reuse;        \n        if (!docsEnum.canReuse(field.getIndexOptions(), field.hasPayloads())) {\n          docsEnum = new FSTDocsEnum(field.getIndexOptions(), field.hasPayloads());\n        }\n      }\n      return docsEnum.reset(current.output, liveDocs, docFreq);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#docs(Bits,DocsEnum,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#docs(Bits,DocsEnum,int).mjava","sourceNew":"    @Override\n    public DocsEnum docs(Bits liveDocs, DocsEnum reuse, int flags) {\n      decodeMetaData();\n      FSTDocsEnum docsEnum;\n\n      if (reuse == null || !(reuse instanceof FSTDocsEnum)) {\n        docsEnum = new FSTDocsEnum(field.getIndexOptions(), field.hasPayloads());\n      } else {\n        docsEnum = (FSTDocsEnum) reuse;        \n        if (!docsEnum.canReuse(field.getIndexOptions(), field.hasPayloads())) {\n          docsEnum = new FSTDocsEnum(field.getIndexOptions(), field.hasPayloads());\n        }\n      }\n      return docsEnum.reset(this.postingsSpare, liveDocs, docFreq);\n    }\n\n","sourceOld":"    @Override\n    public DocsEnum docs(Bits liveDocs, DocsEnum reuse, int flags) {\n      decodeMetaData();\n      FSTDocsEnum docsEnum;\n\n      if (reuse == null || !(reuse instanceof FSTDocsEnum)) {\n        docsEnum = new FSTDocsEnum(field.getIndexOptions(), field.hasPayloads());\n      } else {\n        docsEnum = (FSTDocsEnum) reuse;        \n        if (!docsEnum.canReuse(field.getIndexOptions(), field.hasPayloads())) {\n          docsEnum = new FSTDocsEnum(field.getIndexOptions(), field.hasPayloads());\n        }\n      }\n      return docsEnum.reset(current.output, liveDocs, docFreq);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#postings(Bits,PostingsEnum,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#docs(Bits,DocsEnum,int).mjava","sourceNew":"    @Override\n    public PostingsEnum postings(Bits liveDocs, PostingsEnum reuse, int flags) {\n\n      if ((flags & PostingsEnum.FLAG_POSITIONS) >= PostingsEnum.FLAG_POSITIONS) {\n        if (field.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) < 0) {\n          return null;\n        }\n        boolean hasOffsets = field.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n        decodeMetaData();\n        FSTPostingsEnum docsAndPositionsEnum;\n        if (reuse == null || !(reuse instanceof FSTPostingsEnum)) {\n          docsAndPositionsEnum = new FSTPostingsEnum(field.hasPayloads(), hasOffsets);\n        } else {\n          docsAndPositionsEnum = (FSTPostingsEnum) reuse;\n          if (!docsAndPositionsEnum.canReuse(field.hasPayloads(), hasOffsets)) {\n            docsAndPositionsEnum = new FSTPostingsEnum(field.hasPayloads(), hasOffsets);\n          }\n        }\n        //System.out.println(\"D&P reset this=\" + this);\n        return docsAndPositionsEnum.reset(postingsSpare, liveDocs, docFreq);\n      }\n\n      decodeMetaData();\n      FSTDocsEnum docsEnum;\n\n      if (reuse == null || !(reuse instanceof FSTDocsEnum)) {\n        docsEnum = new FSTDocsEnum(field.getIndexOptions(), field.hasPayloads());\n      } else {\n        docsEnum = (FSTDocsEnum) reuse;        \n        if (!docsEnum.canReuse(field.getIndexOptions(), field.hasPayloads())) {\n          docsEnum = new FSTDocsEnum(field.getIndexOptions(), field.hasPayloads());\n        }\n      }\n      return docsEnum.reset(this.postingsSpare, liveDocs, docFreq);\n    }\n\n","sourceOld":"    @Override\n    public DocsEnum docs(Bits liveDocs, DocsEnum reuse, int flags) {\n      decodeMetaData();\n      FSTDocsEnum docsEnum;\n\n      if (reuse == null || !(reuse instanceof FSTDocsEnum)) {\n        docsEnum = new FSTDocsEnum(field.getIndexOptions(), field.hasPayloads());\n      } else {\n        docsEnum = (FSTDocsEnum) reuse;        \n        if (!docsEnum.canReuse(field.getIndexOptions(), field.hasPayloads())) {\n          docsEnum = new FSTDocsEnum(field.getIndexOptions(), field.hasPayloads());\n        }\n      }\n      return docsEnum.reset(this.postingsSpare, liveDocs, docFreq);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3c7c5f2319949ba567dd867f78f86ea8ff0f1476":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"51f5280f31484820499077f41fcdfe92d527d9dc":["3c7c5f2319949ba567dd867f78f86ea8ff0f1476"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["51f5280f31484820499077f41fcdfe92d527d9dc"]},"commit2Childs":{"3c7c5f2319949ba567dd867f78f86ea8ff0f1476":["51f5280f31484820499077f41fcdfe92d527d9dc"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["3c7c5f2319949ba567dd867f78f86ea8ff0f1476","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"51f5280f31484820499077f41fcdfe92d527d9dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}