{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/TestCloudSolrClientConnections#testAlreadyClosedClusterStateProvider().mjava","commits":[{"id":"ed1e77a87e871f179136e64c3e3c80c5e0c149a8","date":1555017770,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/TestCloudSolrClientConnections#testAlreadyClosedClusterStateProvider().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAlreadyClosedClusterStateProvider() throws Exception {\n    \n    final MiniSolrCloudCluster cluster = new MiniSolrCloudCluster(1, createTempDir(),\n                                                                  buildJettyConfig(\"/solr\"));\n    // from a client perspective the behavior of ZkClientClusterStateProvider should be\n    // consistent regardless of wether it's constructed with a zkhost or an existing ZkStateReader\n    try {\n      final ZkClientClusterStateProvider zkHost_provider\n        = new ZkClientClusterStateProvider(cluster.getZkServer().getZkAddress());\n      \n      checkAndCloseProvider(zkHost_provider);\n      \n      final ZkStateReader reusedZkReader = new ZkStateReader(cluster.getZkClient());\n      try {\n        reusedZkReader.createClusterStateWatchersAndUpdate();\n        final ZkClientClusterStateProvider reader_provider = new ZkClientClusterStateProvider(reusedZkReader);\n        checkAndCloseProvider(reader_provider);\n        \n        // but in the case of a reused StateZkReader,\n        // closing the provider must not have closed the ZkStateReader...\n        assertEquals(false, reusedZkReader.isClosed());\n        \n      } finally {\n        reusedZkReader.close();\n      }\n    } finally {\n      cluster.shutdown();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ed1e77a87e871f179136e64c3e3c80c5e0c149a8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ed1e77a87e871f179136e64c3e3c80c5e0c149a8"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ed1e77a87e871f179136e64c3e3c80c5e0c149a8"],"ed1e77a87e871f179136e64c3e3c80c5e0c149a8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}