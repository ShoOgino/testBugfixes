{"path":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/MockInitialContextFactory#MockInitialContextFactory().mjava","commits":[{"id":"14aa57a2d9f13bcc41e8b38c52bd1e55f6390576","date":1245907815,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/MockInitialContextFactory#MockInitialContextFactory().mjava","pathOld":"/dev/null","sourceNew":"  public MockInitialContextFactory() {\n    mockControl = EasyMock.createStrictControl();\n    context = mockControl.createMock(javax.naming.Context.class);\n\n    try {\n      EasyMock.expect(context.lookup((String) EasyMock.anyObject())).andAnswer(\n          new IAnswer<Object>() {\n            @Override\n            public Object answer() throws Throwable {\n              return objects.get(EasyMock.getCurrentArguments()[0]);\n            }\n          }).anyTimes();\n\n    } catch (NamingException e) {\n      throw new RuntimeException(e);\n    }\n\n    mockControl.replay();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d929153759c9d9ab4ca289cb510e02b8753cf9c3","date":1245919398,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/MockInitialContextFactory#MockInitialContextFactory().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/MockInitialContextFactory#MockInitialContextFactory().mjava","sourceNew":"  public MockInitialContextFactory() {\n    mockControl = EasyMock.createStrictControl();\n    context = mockControl.createMock(javax.naming.Context.class);\n\n    try {\n      EasyMock.expect(context.lookup((String) EasyMock.anyObject())).andAnswer(\n          new IAnswer<Object>() {\n            public Object answer() throws Throwable {\n              return objects.get(EasyMock.getCurrentArguments()[0]);\n            }\n          }).anyTimes();\n\n    } catch (NamingException e) {\n      throw new RuntimeException(e);\n    }\n\n    mockControl.replay();\n  }\n\n","sourceOld":"  public MockInitialContextFactory() {\n    mockControl = EasyMock.createStrictControl();\n    context = mockControl.createMock(javax.naming.Context.class);\n\n    try {\n      EasyMock.expect(context.lookup((String) EasyMock.anyObject())).andAnswer(\n          new IAnswer<Object>() {\n            @Override\n            public Object answer() throws Throwable {\n              return objects.get(EasyMock.getCurrentArguments()[0]);\n            }\n          }).anyTimes();\n\n    } catch (NamingException e) {\n      throw new RuntimeException(e);\n    }\n\n    mockControl.replay();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/MockInitialContextFactory#MockInitialContextFactory().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/MockInitialContextFactory#MockInitialContextFactory().mjava","sourceNew":"  public MockInitialContextFactory() {\n    mockControl = EasyMock.createStrictControl();\n    context = mockControl.createMock(javax.naming.Context.class);\n\n    try {\n      EasyMock.expect(context.lookup((String) EasyMock.anyObject())).andAnswer(\n          new IAnswer<Object>() {\n            public Object answer() throws Throwable {\n              return objects.get(EasyMock.getCurrentArguments()[0]);\n            }\n          }).anyTimes();\n\n    } catch (NamingException e) {\n      throw new RuntimeException(e);\n    }\n\n    mockControl.replay();\n  }\n\n","sourceOld":"  public MockInitialContextFactory() {\n    mockControl = EasyMock.createStrictControl();\n    context = mockControl.createMock(javax.naming.Context.class);\n\n    try {\n      EasyMock.expect(context.lookup((String) EasyMock.anyObject())).andAnswer(\n          new IAnswer<Object>() {\n            public Object answer() throws Throwable {\n              return objects.get(EasyMock.getCurrentArguments()[0]);\n            }\n          }).anyTimes();\n\n    } catch (NamingException e) {\n      throw new RuntimeException(e);\n    }\n\n    mockControl.replay();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"14aa57a2d9f13bcc41e8b38c52bd1e55f6390576":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"d929153759c9d9ab4ca289cb510e02b8753cf9c3":["14aa57a2d9f13bcc41e8b38c52bd1e55f6390576"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["d929153759c9d9ab4ca289cb510e02b8753cf9c3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"14aa57a2d9f13bcc41e8b38c52bd1e55f6390576":["d929153759c9d9ab4ca289cb510e02b8753cf9c3"],"d929153759c9d9ab4ca289cb510e02b8753cf9c3":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["14aa57a2d9f13bcc41e8b38c52bd1e55f6390576"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}