{"path":"lucene/classification/src/test/org/apache/lucene/classification/document/KNearestNeighborDocumentClassifierTest#testBasicDocumentClassificationWithQuery().mjava","commits":[{"id":"134a24d0cb66520908d88384f1a559875704ed25","date":1445326601,"type":0,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/test/org/apache/lucene/classification/document/KNearestNeighborDocumentClassifierTest#testBasicDocumentClassificationWithQuery().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBasicDocumentClassificationWithQuery() throws Exception {\n    try {\n      TermQuery query = new TermQuery(new Term(authorFieldName, \"ign\"));\n      checkCorrectDocumentClassification(new KNearestNeighborDocumentClassifier(leafReader,null, query, 1, 1, 1, categoryFieldName, field2analyzer, new String[]{textFieldName, titleFieldName, authorFieldName}), getVideoGameDocument(), VIDEOGAME_RESULT);\n      checkCorrectDocumentClassification(new KNearestNeighborDocumentClassifier(leafReader,null,query, 1, 1, 1, categoryFieldName, field2analyzer, new String[]{textFieldName, titleFieldName, authorFieldName}), getBatmanDocument(), VIDEOGAME_RESULT);\n    } finally {\n      if (leafReader != null) {\n        leafReader.close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"444d4b906d0e3398f87d6a5c4967c508f11a7f0b","date":1466507434,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/test/org/apache/lucene/classification/document/KNearestNeighborDocumentClassifierTest#testBasicDocumentClassificationWithQuery().mjava","pathOld":"lucene/classification/src/test/org/apache/lucene/classification/document/KNearestNeighborDocumentClassifierTest#testBasicDocumentClassificationWithQuery().mjava","sourceNew":"  @Test\n  public void testBasicDocumentClassificationWithQuery() throws Exception {\n    try {\n      TermQuery query = new TermQuery(new Term(authorFieldName, \"ign\"));\n      checkCorrectDocumentClassification(new KNearestNeighborDocumentClassifier(indexReader,null, query, 1, 1, 1, categoryFieldName, field2analyzer, new String[]{textFieldName, titleFieldName, authorFieldName}), getVideoGameDocument(), VIDEOGAME_RESULT);\n      checkCorrectDocumentClassification(new KNearestNeighborDocumentClassifier(indexReader,null,query, 1, 1, 1, categoryFieldName, field2analyzer, new String[]{textFieldName, titleFieldName, authorFieldName}), getBatmanDocument(), VIDEOGAME_RESULT);\n    } finally {\n      if (indexReader != null) {\n        indexReader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasicDocumentClassificationWithQuery() throws Exception {\n    try {\n      TermQuery query = new TermQuery(new Term(authorFieldName, \"ign\"));\n      checkCorrectDocumentClassification(new KNearestNeighborDocumentClassifier(leafReader,null, query, 1, 1, 1, categoryFieldName, field2analyzer, new String[]{textFieldName, titleFieldName, authorFieldName}), getVideoGameDocument(), VIDEOGAME_RESULT);\n      checkCorrectDocumentClassification(new KNearestNeighborDocumentClassifier(leafReader,null,query, 1, 1, 1, categoryFieldName, field2analyzer, new String[]{textFieldName, titleFieldName, authorFieldName}), getBatmanDocument(), VIDEOGAME_RESULT);\n    } finally {\n      if (leafReader != null) {\n        leafReader.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/classification/src/test/org/apache/lucene/classification/document/KNearestNeighborDocumentClassifierTest#testBasicDocumentClassificationWithQuery().mjava","pathOld":"lucene/classification/src/test/org/apache/lucene/classification/document/KNearestNeighborDocumentClassifierTest#testBasicDocumentClassificationWithQuery().mjava","sourceNew":"  @Test\n  public void testBasicDocumentClassificationWithQuery() throws Exception {\n    try {\n      TermQuery query = new TermQuery(new Term(authorFieldName, \"ign\"));\n      checkCorrectDocumentClassification(new KNearestNeighborDocumentClassifier(indexReader,null, query, 1, 1, 1, categoryFieldName, field2analyzer, new String[]{textFieldName, titleFieldName, authorFieldName}), getVideoGameDocument(), VIDEOGAME_RESULT);\n      checkCorrectDocumentClassification(new KNearestNeighborDocumentClassifier(indexReader,null,query, 1, 1, 1, categoryFieldName, field2analyzer, new String[]{textFieldName, titleFieldName, authorFieldName}), getBatmanDocument(), VIDEOGAME_RESULT);\n    } finally {\n      if (indexReader != null) {\n        indexReader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasicDocumentClassificationWithQuery() throws Exception {\n    try {\n      TermQuery query = new TermQuery(new Term(authorFieldName, \"ign\"));\n      checkCorrectDocumentClassification(new KNearestNeighborDocumentClassifier(leafReader,null, query, 1, 1, 1, categoryFieldName, field2analyzer, new String[]{textFieldName, titleFieldName, authorFieldName}), getVideoGameDocument(), VIDEOGAME_RESULT);\n      checkCorrectDocumentClassification(new KNearestNeighborDocumentClassifier(leafReader,null,query, 1, 1, 1, categoryFieldName, field2analyzer, new String[]{textFieldName, titleFieldName, authorFieldName}), getBatmanDocument(), VIDEOGAME_RESULT);\n    } finally {\n      if (leafReader != null) {\n        leafReader.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"444d4b906d0e3398f87d6a5c4967c508f11a7f0b":["134a24d0cb66520908d88384f1a559875704ed25"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"134a24d0cb66520908d88384f1a559875704ed25":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["134a24d0cb66520908d88384f1a559875704ed25","444d4b906d0e3398f87d6a5c4967c508f11a7f0b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["444d4b906d0e3398f87d6a5c4967c508f11a7f0b"]},"commit2Childs":{"444d4b906d0e3398f87d6a5c4967c508f11a7f0b":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["134a24d0cb66520908d88384f1a559875704ed25"],"134a24d0cb66520908d88384f1a559875704ed25":["444d4b906d0e3398f87d6a5c4967c508f11a7f0b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}