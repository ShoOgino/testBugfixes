{"path":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#testCloneCombinations().mjava","commits":[{"id":"ecb12132f7aef3ad5be4b300f3cea59aa03b6820","date":1339628268,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#testCloneCombinations().mjava","pathOld":"/dev/null","sourceNew":"  public void testCloneCombinations() throws Exception {\n\n    SolrInputDocument d = null;\n\n    // maxChars\n    d = processAdd(\"clone-max-chars\",\n                   doc(f(\"id\", \"1111\"),\n                       f(\"field1\", \"text\")));\n    assertNotNull(d);\n    assertEquals(\"text\",d.getFieldValue(\"field1\"));\n    assertEquals(\"tex\",d.getFieldValue(\"toField\"));\n\n    // move\n    d = processAdd(\"clone-move\",\n                   doc(f(\"id\", \"1111\"),\n                       f(\"field1\", \"text\")));\n    assertNotNull(d);\n    assertEquals(\"text\",d.getFieldValue(\"toField\"));\n    assertFalse(d.containsKey(\"field1\"));\n\n    // replace\n    d = processAdd(\"clone-replace\",\n                   doc(f(\"id\", \"1111\"),\n                       f(\"toField\", \"IGNORED\"),\n                       f(\"field1\", \"text\")));\n    assertNotNull(d);\n    assertEquals(\"text\", d.getFieldValue(\"field1\"));\n    assertEquals(\"text\", d.getFieldValue(\"toField\"));\n\n    // append\n    d = processAdd(\"clone-append\",\n                   doc(f(\"id\", \"1111\"),\n                       f(\"toField\", \"aaa\"),\n                       f(\"field1\", \"bbb\"),\n                       f(\"field2\", \"ccc\")));\n    assertNotNull(d);\n    assertEquals(\"bbb\", d.getFieldValue(\"field1\"));\n    assertEquals(\"ccc\", d.getFieldValue(\"field2\"));\n    assertEquals(\"aaa; bbb; ccc\", d.getFieldValue(\"toField\"));\n  } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a82f17a4aec53026c4ca0f2fa62ad8eaed017bb0","date":1446511397,"type":5,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/CloneFieldUpdateProcessorFactoryTest#testCloneCombinations().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#testCloneCombinations().mjava","sourceNew":"  public void testCloneCombinations() throws Exception {\n\n    SolrInputDocument d;\n\n    // maxChars\n    d = processAdd(\"clone-max-chars\",\n                   doc(f(\"id\", \"1111\"),\n                       f(\"field1\", \"text\")));\n    assertNotNull(d);\n    assertEquals(\"text\", d.getFieldValue(\"field1\"));\n    assertEquals(\"tex\", d.getFieldValue(\"toField\"));\n\n    // move\n    d = processAdd(\"clone-move\",\n                   doc(f(\"id\", \"1111\"),\n                       f(\"field1\", \"text\")));\n    assertNotNull(d);\n    assertEquals(\"text\", d.getFieldValue(\"toField\"));\n    assertFalse(d.containsKey(\"field1\"));\n\n    // replace\n    d = processAdd(\"clone-replace\",\n                   doc(f(\"id\", \"1111\"),\n                       f(\"toField\", \"IGNORED\"),\n                       f(\"field1\", \"text\")));\n    assertNotNull(d);\n    assertEquals(\"text\", d.getFieldValue(\"field1\"));\n    assertEquals(\"text\", d.getFieldValue(\"toField\"));\n\n    // append\n    d = processAdd(\"clone-append\",\n                   doc(f(\"id\", \"1111\"),\n                       f(\"toField\", \"aaa\"),\n                       f(\"field1\", \"bbb\"),\n                       f(\"field2\", \"ccc\")));\n    assertNotNull(d);\n    assertEquals(\"bbb\", d.getFieldValue(\"field1\"));\n    assertEquals(\"ccc\", d.getFieldValue(\"field2\"));\n    assertEquals(\"aaa; bbb; ccc\", d.getFieldValue(\"toField\"));\n\n    // first value\n    d = processAdd(\"clone-first\",\n                   doc(f(\"id\", \"1111\"),\n                       f(\"field0\", \"aaa\"),\n                       f(\"field1\", \"bbb\"),\n                       f(\"field2\", \"ccc\")));\n    assertNotNull(d);\n    assertEquals(\"aaa\", d.getFieldValue(\"toField\"));\n  }\n\n","sourceOld":"  public void testCloneCombinations() throws Exception {\n\n    SolrInputDocument d = null;\n\n    // maxChars\n    d = processAdd(\"clone-max-chars\",\n                   doc(f(\"id\", \"1111\"),\n                       f(\"field1\", \"text\")));\n    assertNotNull(d);\n    assertEquals(\"text\",d.getFieldValue(\"field1\"));\n    assertEquals(\"tex\",d.getFieldValue(\"toField\"));\n\n    // move\n    d = processAdd(\"clone-move\",\n                   doc(f(\"id\", \"1111\"),\n                       f(\"field1\", \"text\")));\n    assertNotNull(d);\n    assertEquals(\"text\",d.getFieldValue(\"toField\"));\n    assertFalse(d.containsKey(\"field1\"));\n\n    // replace\n    d = processAdd(\"clone-replace\",\n                   doc(f(\"id\", \"1111\"),\n                       f(\"toField\", \"IGNORED\"),\n                       f(\"field1\", \"text\")));\n    assertNotNull(d);\n    assertEquals(\"text\", d.getFieldValue(\"field1\"));\n    assertEquals(\"text\", d.getFieldValue(\"toField\"));\n\n    // append\n    d = processAdd(\"clone-append\",\n                   doc(f(\"id\", \"1111\"),\n                       f(\"toField\", \"aaa\"),\n                       f(\"field1\", \"bbb\"),\n                       f(\"field2\", \"ccc\")));\n    assertNotNull(d);\n    assertEquals(\"bbb\", d.getFieldValue(\"field1\"));\n    assertEquals(\"ccc\", d.getFieldValue(\"field2\"));\n    assertEquals(\"aaa; bbb; ccc\", d.getFieldValue(\"toField\"));\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a82f17a4aec53026c4ca0f2fa62ad8eaed017bb0":["ecb12132f7aef3ad5be4b300f3cea59aa03b6820"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ecb12132f7aef3ad5be4b300f3cea59aa03b6820":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a82f17a4aec53026c4ca0f2fa62ad8eaed017bb0"]},"commit2Childs":{"a82f17a4aec53026c4ca0f2fa62ad8eaed017bb0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ecb12132f7aef3ad5be4b300f3cea59aa03b6820"],"ecb12132f7aef3ad5be4b300f3cea59aa03b6820":["a82f17a4aec53026c4ca0f2fa62ad8eaed017bb0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}