{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/AutomatonProvider#getAutomaton(String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/AutomatonProvider#getAutomaton(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/AutomatonProvider#getAutomaton(String).mjava","sourceNew":"  /**\n   * Returns automaton of the given name.\n   * \n   * @param name automaton name\n   * @return automaton\n   * @throws IOException if errors occur\n   */\n  public Automaton getAutomaton(String name) throws IOException;\n\n","sourceOld":"  /**\n   * Returns automaton of the given name.\n   * \n   * @param name automaton name\n   * @return automaton\n   * @throws IOException if errors occur\n   */\n  public Automaton getAutomaton(String name) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f4ef381bf0c2d618c6db830d3dd668c6901c05a","date":1402592253,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/AutomatonProvider#getAutomaton(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns automaton of the given name.\n   * \n   * @param name automaton name\n   * @return automaton\n   * @throws IOException if errors occur\n   */\n  public Automaton getAutomaton(String name) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/AutomatonProvider#getAutomaton(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/LightAutomatonProvider#getAutomaton(String).mjava","sourceNew":"  /**\n   * Returns automaton of the given name.\n   * \n   * @param name automaton name\n   * @return automaton\n   * @throws IOException if errors occur\n   */\n  public Automaton getAutomaton(String name) throws IOException;\n\n","sourceOld":"  /**\n   * Returns automaton of the given name.\n   * \n   * @param name automaton name\n   * @return automaton\n   * @throws IOException if errors occur\n   */\n  public LightAutomaton getAutomaton(String name) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["7f4ef381bf0c2d618c6db830d3dd668c6901c05a"],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7f4ef381bf0c2d618c6db830d3dd668c6901c05a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":[],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}