{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#expectedJson(String).mjava","commits":[{"id":"011d43366b2da54d1652d93e7ec6412848eeb009","date":1541521420,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#expectedJson(String).mjava","pathOld":"/dev/null","sourceNew":"  private boolean expectedJson(String json) {\n    if(this.method != null) {\n      if(!json.contains(\"\\\"method\\\":\\\"\"+this.method+\"\\\"\")) {\n        return false;\n      }\n    }\n\n    if(this.refine) {\n      if(!json.contains(\"\\\"refine\\\":true\")) {\n        return false;\n      }\n    }\n\n    if(serializeBucketSizeLimit) {\n      if(!json.contains(\"\\\"limit\\\":\"+bucketSizeLimit)) {\n        return false;\n      }\n    } else {\n      if(!json.contains(\"\\\"limit\\\":\"+(this.rows+this.offset+this.overfetch))) {\n        return false;\n      }\n    }\n\n    for(Bucket bucket : buckets) {\n      if(!json.contains(\"\\\"\"+bucket.toString()+\"\\\":\")) {\n        return false;\n      }\n    }\n\n    for(Metric metric: metrics) {\n      String func = metric.getFunctionName();\n      if(!func.equals(\"count\")) {\n        if (!json.contains(metric.getIdentifier())) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"570664407cd3123a8039f1b4f2f6c6693bdaee31","date":1589893823,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#expectedJson(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#expectedJson(String).mjava","sourceNew":"  private boolean expectedJson(String json) {\n    if(this.method != null) {\n      if(!json.contains(\"\\\"method\\\":\\\"\"+this.method+\"\\\"\")) {\n        return false;\n      }\n    }\n\n    if(this.refine) {\n      if(!json.contains(\"\\\"refine\\\":true\")) {\n        return false;\n      }\n    }\n\n    if(serializeBucketSizeLimit) {\n      if(!json.contains(\"\\\"limit\\\":\"+bucketSizeLimit)) {\n        return false;\n      }\n    } else {\n      if(!json.contains(\"\\\"limit\\\":\"+(this.rows+this.offset+this.overfetch))) {\n        return false;\n      }\n    }\n\n    for(Bucket bucket : buckets) {\n      if(!json.contains(\"\\\"\"+bucket.toString()+\"\\\":\")) {\n        return false;\n      }\n    }\n\n    for(Metric metric: metrics) {\n      String func = metric.getFunctionName();\n      if(!func.equals(\"count\") && !func.equals(\"per\") && !func.equals(\"std\")) {\n        if (!json.contains(metric.getIdentifier())) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":"  private boolean expectedJson(String json) {\n    if(this.method != null) {\n      if(!json.contains(\"\\\"method\\\":\\\"\"+this.method+\"\\\"\")) {\n        return false;\n      }\n    }\n\n    if(this.refine) {\n      if(!json.contains(\"\\\"refine\\\":true\")) {\n        return false;\n      }\n    }\n\n    if(serializeBucketSizeLimit) {\n      if(!json.contains(\"\\\"limit\\\":\"+bucketSizeLimit)) {\n        return false;\n      }\n    } else {\n      if(!json.contains(\"\\\"limit\\\":\"+(this.rows+this.offset+this.overfetch))) {\n        return false;\n      }\n    }\n\n    for(Bucket bucket : buckets) {\n      if(!json.contains(\"\\\"\"+bucket.toString()+\"\\\":\")) {\n        return false;\n      }\n    }\n\n    for(Metric metric: metrics) {\n      String func = metric.getFunctionName();\n      if(!func.equals(\"count\")) {\n        if (!json.contains(metric.getIdentifier())) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"011d43366b2da54d1652d93e7ec6412848eeb009":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"570664407cd3123a8039f1b4f2f6c6693bdaee31":["011d43366b2da54d1652d93e7ec6412848eeb009"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["570664407cd3123a8039f1b4f2f6c6693bdaee31"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["011d43366b2da54d1652d93e7ec6412848eeb009"],"011d43366b2da54d1652d93e7ec6412848eeb009":["570664407cd3123a8039f1b4f2f6c6693bdaee31"],"570664407cd3123a8039f1b4f2f6c6693bdaee31":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}