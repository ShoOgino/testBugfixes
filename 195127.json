{"path":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseTokenizer.Lattice#nBestNodeList(int).mjava","commits":[{"id":"f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4","date":1449124064,"type":0,"author":"Christian Moen","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseTokenizer.Lattice#nBestNodeList(int).mjava","pathOld":"/dev/null","sourceNew":"    List<Integer> nBestNodeList(int N) {\n      List<Integer> list = new ArrayList<>();\n      int leastCost = Integer.MAX_VALUE;\n      int leastLeft = -1;\n      int leastRight = -1;\n      for (int node = 2; node < nodeCount; ++node) {\n        if (nodeMark[node] == 0) {\n          int cost = cost(node);\n          if (cost < leastCost) {\n            leastCost = cost;\n            leastLeft = nodeLeft[node];\n            leastRight = nodeRight[node];\n            list.clear();\n            list.add(node);\n          } else if (cost == leastCost && (nodeLeft[node] != leastLeft || nodeRight[node] != leastRight)) {\n            list.add(node);\n          }\n        }\n      }\n      for (int node : list) {\n        markSameSpanNode(node, N);\n      }\n      return list;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4"],"f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}