{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/TestSolrJErrorHandling#testRawSocket().mjava","commits":[{"id":"a2a0d597d231e1e1141fcd33ad15e26e2a4266ac","date":1452194543,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestSolrJErrorHandling#testRawSocket().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRawSocket() throws Exception {\n\n    String hostName = \"127.0.0.1\";\n    int port = jetty.getLocalPort();\n\n    Socket socket = new Socket(hostName, port);\n    PrintWriter out = new PrintWriter(socket.getOutputStream(), true);\n    // BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n    InputStream in = socket.getInputStream();\n\n    String body = getJsonDocs(100000);\n    int bodyLen = body.length();\n\n    // bodyLen *= 10;  // make server wait for more\n\n    char[] whitespace = whitespace(1000000);\n    bodyLen += whitespace.length;\n\n    String headers = \"POST /solr/collection1/update HTTP/1.1\\n\" +\n        \"Host: localhost:\" + port + \"\\n\" +\n//        \"User-Agent: curl/7.43.0\\n\" +\n        \"Accept: */*\\n\" +\n        \"Content-type:application/json\\n\" +\n        \"Content-Length: \" + bodyLen + \"\\n\" +\n        \"Connection: Keep-Alive\\n\";\n\n    out.write(headers);\n    out.write(\"\\n\");  // extra newline separates headers from body\n    out.write(body);\n    out.flush();\n\n    // Now what if I try to write more?  This doesn't seem to throw an exception!\n    Thread.sleep(1000);\n    out.write(whitespace);  // whitespace\n    out.flush();\n\n    String rbody = getResponse(in);  // This will throw a connection reset exception if you try to read past the end of the HTTP response\n    log.info(\"RESPONSE BODY:\" + rbody);\n    assertTrue(rbody.contains(\"unknown_field\"));\n\n    /***\n    // can I reuse now?\n    // writing another request doesn't actually throw an exception, but the following read does\n    out.write(headers);\n    out.write(\"\\n\");  // extra newline separates headers from body\n    out.write(body);\n    out.flush();\n\n    rbody = getResponse(in);\n    log.info(\"RESPONSE BODY:\" + rbody);\n    assertTrue(rbody.contains(\"unknown_field\"));\n    ***/\n\n\n    IOUtils.closeQuietly(out);\n    IOUtils.closeQuietly(in);\n    IOUtils.closeQuietly(socket);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4064e334566dfcb51562eee436293b7a735a9d28","date":1452213903,"type":3,"author":"Tomas Eduardo Fernandez Lobbe","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestSolrJErrorHandling#testRawSocket().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestSolrJErrorHandling#testRawSocket().mjava","sourceNew":"  @Test\n  public void testRawSocket() throws Exception {\n\n    String hostName = \"127.0.0.1\";\n    int port = jetty.getLocalPort();\n\n    Socket socket = new Socket(hostName, port);\n    PrintWriter out = new PrintWriter(new OutputStreamWriter(socket.getOutputStream(), \"UTF-8\"), true);\n    // BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n    InputStream in = socket.getInputStream();\n\n    String body = getJsonDocs(100000);\n    int bodyLen = body.length();\n\n    // bodyLen *= 10;  // make server wait for more\n\n    char[] whitespace = whitespace(1000000);\n    bodyLen += whitespace.length;\n\n    String headers = \"POST /solr/collection1/update HTTP/1.1\\n\" +\n        \"Host: localhost:\" + port + \"\\n\" +\n//        \"User-Agent: curl/7.43.0\\n\" +\n        \"Accept: */*\\n\" +\n        \"Content-type:application/json\\n\" +\n        \"Content-Length: \" + bodyLen + \"\\n\" +\n        \"Connection: Keep-Alive\\n\";\n\n    out.write(headers);\n    out.write(\"\\n\");  // extra newline separates headers from body\n    out.write(body);\n    out.flush();\n\n    // Now what if I try to write more?  This doesn't seem to throw an exception!\n    Thread.sleep(1000);\n    out.write(whitespace);  // whitespace\n    out.flush();\n\n    String rbody = getResponse(in);  // This will throw a connection reset exception if you try to read past the end of the HTTP response\n    log.info(\"RESPONSE BODY:\" + rbody);\n    assertTrue(rbody.contains(\"unknown_field\"));\n\n    /***\n    // can I reuse now?\n    // writing another request doesn't actually throw an exception, but the following read does\n    out.write(headers);\n    out.write(\"\\n\");  // extra newline separates headers from body\n    out.write(body);\n    out.flush();\n\n    rbody = getResponse(in);\n    log.info(\"RESPONSE BODY:\" + rbody);\n    assertTrue(rbody.contains(\"unknown_field\"));\n    ***/\n\n\n    IOUtils.closeQuietly(out);\n    IOUtils.closeQuietly(in);\n    IOUtils.closeQuietly(socket);\n  }\n\n","sourceOld":"  @Test\n  public void testRawSocket() throws Exception {\n\n    String hostName = \"127.0.0.1\";\n    int port = jetty.getLocalPort();\n\n    Socket socket = new Socket(hostName, port);\n    PrintWriter out = new PrintWriter(socket.getOutputStream(), true);\n    // BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n    InputStream in = socket.getInputStream();\n\n    String body = getJsonDocs(100000);\n    int bodyLen = body.length();\n\n    // bodyLen *= 10;  // make server wait for more\n\n    char[] whitespace = whitespace(1000000);\n    bodyLen += whitespace.length;\n\n    String headers = \"POST /solr/collection1/update HTTP/1.1\\n\" +\n        \"Host: localhost:\" + port + \"\\n\" +\n//        \"User-Agent: curl/7.43.0\\n\" +\n        \"Accept: */*\\n\" +\n        \"Content-type:application/json\\n\" +\n        \"Content-Length: \" + bodyLen + \"\\n\" +\n        \"Connection: Keep-Alive\\n\";\n\n    out.write(headers);\n    out.write(\"\\n\");  // extra newline separates headers from body\n    out.write(body);\n    out.flush();\n\n    // Now what if I try to write more?  This doesn't seem to throw an exception!\n    Thread.sleep(1000);\n    out.write(whitespace);  // whitespace\n    out.flush();\n\n    String rbody = getResponse(in);  // This will throw a connection reset exception if you try to read past the end of the HTTP response\n    log.info(\"RESPONSE BODY:\" + rbody);\n    assertTrue(rbody.contains(\"unknown_field\"));\n\n    /***\n    // can I reuse now?\n    // writing another request doesn't actually throw an exception, but the following read does\n    out.write(headers);\n    out.write(\"\\n\");  // extra newline separates headers from body\n    out.write(body);\n    out.flush();\n\n    rbody = getResponse(in);\n    log.info(\"RESPONSE BODY:\" + rbody);\n    assertTrue(rbody.contains(\"unknown_field\"));\n    ***/\n\n\n    IOUtils.closeQuietly(out);\n    IOUtils.closeQuietly(in);\n    IOUtils.closeQuietly(socket);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0b91069954b0e55651f8ab21d3be29bb92180730","date":1452240463,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestSolrJErrorHandling#testRawSocket().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestSolrJErrorHandling#testRawSocket().mjava","sourceNew":"  @Test\n  public void testRawSocket() throws Exception {\n\n    String hostName = \"127.0.0.1\";\n    int port = jetty.getLocalPort();\n\n    try (Socket socket = new Socket(hostName, port);\n        OutputStream out = new BufferedOutputStream(socket.getOutputStream());\n        InputStream in = socket.getInputStream();\n    ) {\n      byte[] body = getJsonDocs(100000).getBytes(StandardCharsets.UTF_8);\n      int bodyLen = body.length;\n\n      // bodyLen *= 10;  // make server wait for more\n\n      byte[] whitespace = whitespace(1000000);\n      bodyLen += whitespace.length;\n\n      String headers = \"POST /solr/collection1/update HTTP/1.1\\n\" +\n          \"Host: localhost:\" + port + \"\\n\" +\n//        \"User-Agent: curl/7.43.0\\n\" +\n          \"Accept: */*\\n\" +\n          \"Content-type:application/json\\n\" +\n          \"Content-Length: \" + bodyLen + \"\\n\" +\n          \"Connection: Keep-Alive\\n\";\n\n      // Headers of HTTP connection are defined to be ASCII only:\n      out.write(headers.getBytes(StandardCharsets.US_ASCII));\n      out.write('\\n');  // extra newline separates headers from body\n      out.write(body);\n      out.flush();\n\n      // Now what if I try to write more?  This doesn't seem to throw an exception!\n      Thread.sleep(1000);\n      out.write(whitespace);  // whitespace\n      out.flush();\n\n      String rbody = getResponse(in);  // This will throw a connection reset exception if you try to read past the end of the HTTP response\n      log.info(\"RESPONSE BODY:\" + rbody);\n      assertTrue(rbody.contains(\"unknown_field\"));\n\n      /***\n      // can I reuse now?\n      // writing another request doesn't actually throw an exception, but the following read does\n      out.write(headers);\n      out.write(\"\\n\");  // extra newline separates headers from body\n      out.write(body);\n      out.flush();\n\n      rbody = getResponse(in);\n      log.info(\"RESPONSE BODY:\" + rbody);\n      assertTrue(rbody.contains(\"unknown_field\"));\n      ***/\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testRawSocket() throws Exception {\n\n    String hostName = \"127.0.0.1\";\n    int port = jetty.getLocalPort();\n\n    Socket socket = new Socket(hostName, port);\n    PrintWriter out = new PrintWriter(new OutputStreamWriter(socket.getOutputStream(), \"UTF-8\"), true);\n    // BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n    InputStream in = socket.getInputStream();\n\n    String body = getJsonDocs(100000);\n    int bodyLen = body.length();\n\n    // bodyLen *= 10;  // make server wait for more\n\n    char[] whitespace = whitespace(1000000);\n    bodyLen += whitespace.length;\n\n    String headers = \"POST /solr/collection1/update HTTP/1.1\\n\" +\n        \"Host: localhost:\" + port + \"\\n\" +\n//        \"User-Agent: curl/7.43.0\\n\" +\n        \"Accept: */*\\n\" +\n        \"Content-type:application/json\\n\" +\n        \"Content-Length: \" + bodyLen + \"\\n\" +\n        \"Connection: Keep-Alive\\n\";\n\n    out.write(headers);\n    out.write(\"\\n\");  // extra newline separates headers from body\n    out.write(body);\n    out.flush();\n\n    // Now what if I try to write more?  This doesn't seem to throw an exception!\n    Thread.sleep(1000);\n    out.write(whitespace);  // whitespace\n    out.flush();\n\n    String rbody = getResponse(in);  // This will throw a connection reset exception if you try to read past the end of the HTTP response\n    log.info(\"RESPONSE BODY:\" + rbody);\n    assertTrue(rbody.contains(\"unknown_field\"));\n\n    /***\n    // can I reuse now?\n    // writing another request doesn't actually throw an exception, but the following read does\n    out.write(headers);\n    out.write(\"\\n\");  // extra newline separates headers from body\n    out.write(body);\n    out.flush();\n\n    rbody = getResponse(in);\n    log.info(\"RESPONSE BODY:\" + rbody);\n    assertTrue(rbody.contains(\"unknown_field\"));\n    ***/\n\n\n    IOUtils.closeQuietly(out);\n    IOUtils.closeQuietly(in);\n    IOUtils.closeQuietly(socket);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6dc613ed6f75d1988140301ee8de8fdb056fa337","date":1588034757,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestSolrJErrorHandling#testRawSocket().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestSolrJErrorHandling#testRawSocket().mjava","sourceNew":"  @Test\n  public void testRawSocket() throws Exception {\n\n    String hostName = \"127.0.0.1\";\n    int port = jetty.getLocalPort();\n\n    try (Socket socket = new Socket(hostName, port);\n        OutputStream out = new BufferedOutputStream(socket.getOutputStream());\n        InputStream in = socket.getInputStream();\n    ) {\n      byte[] body = getJsonDocs(100000).getBytes(StandardCharsets.UTF_8);\n      int bodyLen = body.length;\n\n      // bodyLen *= 10;  // make server wait for more\n\n      byte[] whitespace = whitespace(1000000);\n      bodyLen += whitespace.length;\n\n      String headers = \"POST /solr/collection1/update HTTP/1.1\\n\" +\n          \"Host: localhost:\" + port + \"\\n\" +\n//        \"User-Agent: curl/7.43.0\\n\" +\n          \"Accept: */*\\n\" +\n          \"Content-type:application/json\\n\" +\n          \"Content-Length: \" + bodyLen + \"\\n\" +\n          \"Connection: Keep-Alive\\n\";\n\n      // Headers of HTTP connection are defined to be ASCII only:\n      out.write(headers.getBytes(StandardCharsets.US_ASCII));\n      out.write('\\n');  // extra newline separates headers from body\n      out.write(body);\n      out.flush();\n\n      // Now what if I try to write more?  This doesn't seem to throw an exception!\n      Thread.sleep(1000);\n      out.write(whitespace);  // whitespace\n      out.flush();\n\n      String rbody = getResponse(in);  // This will throw a connection reset exception if you try to read past the end of the HTTP response\n      log.info(\"RESPONSE BODY: {}\", rbody);\n      assertTrue(rbody.contains(\"unknown_field\"));\n\n      /***\n      // can I reuse now?\n      // writing another request doesn't actually throw an exception, but the following read does\n      out.write(headers);\n      out.write(\"\\n\");  // extra newline separates headers from body\n      out.write(body);\n      out.flush();\n\n      rbody = getResponse(in);\n      log.info(\"RESPONSE BODY: {}\", rbody);\n      assertTrue(rbody.contains(\"unknown_field\"));\n      ***/\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testRawSocket() throws Exception {\n\n    String hostName = \"127.0.0.1\";\n    int port = jetty.getLocalPort();\n\n    try (Socket socket = new Socket(hostName, port);\n        OutputStream out = new BufferedOutputStream(socket.getOutputStream());\n        InputStream in = socket.getInputStream();\n    ) {\n      byte[] body = getJsonDocs(100000).getBytes(StandardCharsets.UTF_8);\n      int bodyLen = body.length;\n\n      // bodyLen *= 10;  // make server wait for more\n\n      byte[] whitespace = whitespace(1000000);\n      bodyLen += whitespace.length;\n\n      String headers = \"POST /solr/collection1/update HTTP/1.1\\n\" +\n          \"Host: localhost:\" + port + \"\\n\" +\n//        \"User-Agent: curl/7.43.0\\n\" +\n          \"Accept: */*\\n\" +\n          \"Content-type:application/json\\n\" +\n          \"Content-Length: \" + bodyLen + \"\\n\" +\n          \"Connection: Keep-Alive\\n\";\n\n      // Headers of HTTP connection are defined to be ASCII only:\n      out.write(headers.getBytes(StandardCharsets.US_ASCII));\n      out.write('\\n');  // extra newline separates headers from body\n      out.write(body);\n      out.flush();\n\n      // Now what if I try to write more?  This doesn't seem to throw an exception!\n      Thread.sleep(1000);\n      out.write(whitespace);  // whitespace\n      out.flush();\n\n      String rbody = getResponse(in);  // This will throw a connection reset exception if you try to read past the end of the HTTP response\n      log.info(\"RESPONSE BODY:\" + rbody);\n      assertTrue(rbody.contains(\"unknown_field\"));\n\n      /***\n      // can I reuse now?\n      // writing another request doesn't actually throw an exception, but the following read does\n      out.write(headers);\n      out.write(\"\\n\");  // extra newline separates headers from body\n      out.write(body);\n      out.flush();\n\n      rbody = getResponse(in);\n      log.info(\"RESPONSE BODY:\" + rbody);\n      assertTrue(rbody.contains(\"unknown_field\"));\n      ***/\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6dc613ed6f75d1988140301ee8de8fdb056fa337":["0b91069954b0e55651f8ab21d3be29bb92180730"],"0b91069954b0e55651f8ab21d3be29bb92180730":["4064e334566dfcb51562eee436293b7a735a9d28"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a2a0d597d231e1e1141fcd33ad15e26e2a4266ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4064e334566dfcb51562eee436293b7a735a9d28":["a2a0d597d231e1e1141fcd33ad15e26e2a4266ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6dc613ed6f75d1988140301ee8de8fdb056fa337"]},"commit2Childs":{"6dc613ed6f75d1988140301ee8de8fdb056fa337":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0b91069954b0e55651f8ab21d3be29bb92180730":["6dc613ed6f75d1988140301ee8de8fdb056fa337"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a2a0d597d231e1e1141fcd33ad15e26e2a4266ac"],"a2a0d597d231e1e1141fcd33ad15e26e2a4266ac":["4064e334566dfcb51562eee436293b7a735a9d28"],"4064e334566dfcb51562eee436293b7a735a9d28":["0b91069954b0e55651f8ab21d3be29bb92180730"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}