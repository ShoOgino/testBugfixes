{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#invokeOverseerOp(String,String).mjava","commits":[{"id":"702f9eb5f4d8ac6dea3945928de043b9d25fa87d","date":1391001447,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#invokeOverseerOp(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#invokeRejoinOverseer(String).mjava","sourceNew":"  private void invokeOverseerOp(String nodeName, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = nodeName.replaceFirst(\"_\", \"/\");\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","sourceOld":"  private void invokeRejoinOverseer(String nodeName) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINOVERSEERELECTION.toString());\n    params.set(\"qt\", adminPath);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = nodeName.replaceFirst(\"_\", \"/\");\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b63acfec72045db218b734950c281455f2d5a21","date":1394939832,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#invokeOverseerOp(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#invokeOverseerOp(String,String).mjava","sourceNew":"  private void invokeOverseerOp(String nodeName, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(nodeName);\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","sourceOld":"  private void invokeOverseerOp(String nodeName, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = nodeName.replaceFirst(\"_\", \"/\");\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","bugFix":["44de42d869f7d8e5235d43c4ad9a99f520363a2f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f26f74e4969851a019d28f10315cb1c77786f22","date":1400539241,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#invokeOverseerOp(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#invokeOverseerOp(String,String).mjava","sourceNew":"  private void invokeOverseerOp(String nodeName, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(nodeName);\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","sourceOld":"  private void invokeOverseerOp(String nodeName, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(nodeName);\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#invokeOverseerOp(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#invokeOverseerOp(String,String).mjava","sourceNew":"  private void invokeOverseerOp(String nodeName, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(nodeName);\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","sourceOld":"  private void invokeOverseerOp(String nodeName, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(nodeName);\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d996c36bf85996da326201b915c87d41449d7f5","date":1403084374,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#invokeOverseerOp(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#invokeOverseerOp(String,String).mjava","sourceNew":"  private void invokeOverseerOp(String electionNode, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    params.set(\"electionNode\", electionNode);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(LeaderElector.getNodeName(electionNode));\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","sourceOld":"  private void invokeOverseerOp(String nodeName, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(nodeName);\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e57c73924f3b8c19defa62e96bfa34a4922d49c2","date":1403106358,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#invokeOverseerOp(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#invokeOverseerOp(String,String).mjava","sourceNew":"  private void invokeOverseerOp(String electionNode, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    params.set(\"electionNode\", electionNode);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(LeaderElector.getNodeName(electionNode));\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","sourceOld":"  private void invokeOverseerOp(String nodeName, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(nodeName);\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb60768c12dc226c9ffd3d68af1627735af1a8f1","date":1403529229,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#invokeOverseerOp(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#invokeOverseerOp(String,String).mjava","sourceNew":"  private void invokeOverseerOp(String electionNode, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    params.set(\"electionNode\", electionNode);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(LeaderElector.getNodeName(electionNode));\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n    shardHandler.takeCompletedOrError();\n  }\n\n","sourceOld":"  private void invokeOverseerOp(String electionNode, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    params.set(\"electionNode\", electionNode);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(LeaderElector.getNodeName(electionNode));\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":5,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerNodePrioritizer#invokeOverseerOp(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#invokeOverseerOp(String,String).mjava","sourceNew":"  private void invokeOverseerOp(String electionNode, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    params.set(\"electionNode\", electionNode);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(LeaderElector.getNodeName(electionNode));\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n    shardHandler.takeCompletedOrError();\n  }\n\n","sourceOld":"  private void invokeOverseerOp(String electionNode, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    params.set(\"electionNode\", electionNode);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(LeaderElector.getNodeName(electionNode));\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n    shardHandler.takeCompletedOrError();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["eb60768c12dc226c9ffd3d68af1627735af1a8f1"],"7d996c36bf85996da326201b915c87d41449d7f5":["6f26f74e4969851a019d28f10315cb1c77786f22"],"702f9eb5f4d8ac6dea3945928de043b9d25fa87d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":["6f26f74e4969851a019d28f10315cb1c77786f22","7d996c36bf85996da326201b915c87d41449d7f5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eb60768c12dc226c9ffd3d68af1627735af1a8f1":["7d996c36bf85996da326201b915c87d41449d7f5"],"b7605579001505896d48b07160075a5c8b8e128e":["9b63acfec72045db218b734950c281455f2d5a21","6f26f74e4969851a019d28f10315cb1c77786f22"],"6f26f74e4969851a019d28f10315cb1c77786f22":["9b63acfec72045db218b734950c281455f2d5a21"],"9b63acfec72045db218b734950c281455f2d5a21":["702f9eb5f4d8ac6dea3945928de043b9d25fa87d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"]},"commit2Childs":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7d996c36bf85996da326201b915c87d41449d7f5":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","eb60768c12dc226c9ffd3d68af1627735af1a8f1"],"702f9eb5f4d8ac6dea3945928de043b9d25fa87d":["9b63acfec72045db218b734950c281455f2d5a21"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["702f9eb5f4d8ac6dea3945928de043b9d25fa87d"],"eb60768c12dc226c9ffd3d68af1627735af1a8f1":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"b7605579001505896d48b07160075a5c8b8e128e":[],"6f26f74e4969851a019d28f10315cb1c77786f22":["7d996c36bf85996da326201b915c87d41449d7f5","e57c73924f3b8c19defa62e96bfa34a4922d49c2","b7605579001505896d48b07160075a5c8b8e128e"],"9b63acfec72045db218b734950c281455f2d5a21":["b7605579001505896d48b07160075a5c8b8e128e","6f26f74e4969851a019d28f10315cb1c77786f22"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}