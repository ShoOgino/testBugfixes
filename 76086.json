{"path":"lucene/core/src/test/org/apache/lucene/search/TestMatchNoDocsQuery#testQuery().mjava","commits":[{"id":"f2db39cfba90037b809aabf6d1a990d904722175","date":1425461028,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchNoDocsQuery#testQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw);\n    addDoc(\"two\", iw);\n    addDoc(\"three four\", iw);\n    IndexReader ir = DirectoryReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n\n    hits = is.search(new MatchNoDocsQuery(), 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    // A MatchNoDocsQuery rewrites to an empty BooleanQuery\n    MatchNoDocsQuery mndq = new MatchNoDocsQuery();\n    Query rewritten = mndq.rewrite(ir);\n    assertTrue(rewritten instanceof BooleanQuery);\n    assertEquals(0, ((BooleanQuery) rewritten).clauses().size());\n    hits = is.search(mndq, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d8b3f2faaf05547a6ed4e2769b664522af9514b3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchNoDocsQuery#testQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw);\n    addDoc(\"two\", iw);\n    addDoc(\"three four\", iw);\n    IndexReader ir = DirectoryReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n\n    hits = is.search(new MatchNoDocsQuery(), 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    // A MatchNoDocsQuery rewrites to an empty BooleanQuery\n    MatchNoDocsQuery mndq = new MatchNoDocsQuery();\n    Query rewritten = mndq.rewrite(ir);\n    assertTrue(rewritten instanceof BooleanQuery);\n    assertEquals(0, ((BooleanQuery) rewritten).clauses().size());\n    hits = is.search(mndq, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchNoDocsQuery#testQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchNoDocsQuery#testQuery().mjava","sourceNew":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw);\n    addDoc(\"two\", iw);\n    addDoc(\"three four\", iw);\n    IndexReader ir = DirectoryReader.open(iw);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n\n    hits = is.search(new MatchNoDocsQuery(), 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    // A MatchNoDocsQuery rewrites to an empty BooleanQuery\n    MatchNoDocsQuery mndq = new MatchNoDocsQuery();\n    Query rewritten = mndq.rewrite(ir);\n    assertTrue(rewritten instanceof BooleanQuery);\n    assertEquals(0, ((BooleanQuery) rewritten).clauses().size());\n    hits = is.search(mndq, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw);\n    addDoc(\"two\", iw);\n    addDoc(\"three four\", iw);\n    IndexReader ir = DirectoryReader.open(iw, true);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n\n    hits = is.search(new MatchNoDocsQuery(), 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    // A MatchNoDocsQuery rewrites to an empty BooleanQuery\n    MatchNoDocsQuery mndq = new MatchNoDocsQuery();\n    Query rewritten = mndq.rewrite(ir);\n    assertTrue(rewritten instanceof BooleanQuery);\n    assertEquals(0, ((BooleanQuery) rewritten).clauses().size());\n    hits = is.search(mndq, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d8b3f2faaf05547a6ed4e2769b664522af9514b3","date":1466522779,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchNoDocsQuery#testQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchNoDocsQuery#testQuery().mjava","sourceNew":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw);\n    addDoc(\"two\", iw);\n    addDoc(\"three four\", iw);\n    IndexReader ir = DirectoryReader.open(iw);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n\n    hits = is.search(new MatchNoDocsQuery(), 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    MatchNoDocsQuery mndq = new MatchNoDocsQuery();\n    hits = is.search(mndq, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw);\n    addDoc(\"two\", iw);\n    addDoc(\"three four\", iw);\n    IndexReader ir = DirectoryReader.open(iw);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n\n    hits = is.search(new MatchNoDocsQuery(), 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    // A MatchNoDocsQuery rewrites to an empty BooleanQuery\n    MatchNoDocsQuery mndq = new MatchNoDocsQuery();\n    Query rewritten = mndq.rewrite(ir);\n    assertTrue(rewritten instanceof BooleanQuery);\n    assertEquals(0, ((BooleanQuery) rewritten).clauses().size());\n    hits = is.search(mndq, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":["f2db39cfba90037b809aabf6d1a990d904722175"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4778b794a897685e2f6c62caa1ac04983d1e69f","date":1467997674,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchNoDocsQuery#testQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchNoDocsQuery#testQuery().mjava","sourceNew":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw);\n    addDoc(\"two\", iw);\n    addDoc(\"three\", iw);\n    IndexReader ir = DirectoryReader.open(iw);\n    IndexSearcher searcher = new IndexSearcher(ir);\n    \n    Query query = new MatchNoDocsQuery(\"field not found\");\n    assertEquals(searcher.count(query), 0);\n\n    ScoreDoc[] hits;\n    hits = searcher.search(new MatchNoDocsQuery(), 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    assertEquals(query.toString(), \"MatchNoDocsQuery(\\\"field not found\\\")\");\n\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new BooleanClause(new TermQuery(new Term(\"key\", \"five\")), BooleanClause.Occur.SHOULD));\n    bq.add(new BooleanClause(new MatchNoDocsQuery(\"field not found\"), BooleanClause.Occur.MUST));\n    query = bq.build();\n    assertEquals(searcher.count(query), 0);\n    hits = searcher.search(new MatchNoDocsQuery(), 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    assertEquals(query.toString(), \"key:five +MatchNoDocsQuery(\\\"field not found\\\")\");\n\n    bq = new BooleanQuery.Builder();\n    bq.add(new BooleanClause(new TermQuery(new Term(\"key\", \"one\")), BooleanClause.Occur.SHOULD));\n    bq.add(new BooleanClause(new MatchNoDocsQuery(\"field not found\"), BooleanClause.Occur.SHOULD));\n    query = bq.build();\n    assertEquals(query.toString(), \"key:one MatchNoDocsQuery(\\\"field not found\\\")\");\n    assertEquals(searcher.count(query), 1);\n    hits = searcher.search(query, 1000).scoreDocs;\n    Query rewrite = query.rewrite(ir);\n    assertEquals(1, hits.length);\n    assertEquals(rewrite.toString(), \"key:one MatchNoDocsQuery(\\\"field not found\\\")\");\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw);\n    addDoc(\"two\", iw);\n    addDoc(\"three four\", iw);\n    IndexReader ir = DirectoryReader.open(iw);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n\n    hits = is.search(new MatchNoDocsQuery(), 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    MatchNoDocsQuery mndq = new MatchNoDocsQuery();\n    hits = is.search(mndq, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchNoDocsQuery#testQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchNoDocsQuery#testQuery().mjava","sourceNew":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw);\n    addDoc(\"two\", iw);\n    addDoc(\"three\", iw);\n    IndexReader ir = DirectoryReader.open(iw);\n    IndexSearcher searcher = new IndexSearcher(ir);\n    \n    Query query = new MatchNoDocsQuery(\"field not found\");\n    assertEquals(searcher.count(query), 0);\n\n    ScoreDoc[] hits;\n    hits = searcher.search(new MatchNoDocsQuery(), 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    assertEquals(query.toString(), \"MatchNoDocsQuery(\\\"field not found\\\")\");\n\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new BooleanClause(new TermQuery(new Term(\"key\", \"five\")), BooleanClause.Occur.SHOULD));\n    bq.add(new BooleanClause(new MatchNoDocsQuery(\"field not found\"), BooleanClause.Occur.MUST));\n    query = bq.build();\n    assertEquals(searcher.count(query), 0);\n    hits = searcher.search(new MatchNoDocsQuery(), 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    assertEquals(query.toString(), \"key:five +MatchNoDocsQuery(\\\"field not found\\\")\");\n\n    bq = new BooleanQuery.Builder();\n    bq.add(new BooleanClause(new TermQuery(new Term(\"key\", \"one\")), BooleanClause.Occur.SHOULD));\n    bq.add(new BooleanClause(new MatchNoDocsQuery(\"field not found\"), BooleanClause.Occur.SHOULD));\n    query = bq.build();\n    assertEquals(query.toString(), \"key:one MatchNoDocsQuery(\\\"field not found\\\")\");\n    assertEquals(searcher.count(query), 1);\n    hits = searcher.search(query, 1000).scoreDocs;\n    Query rewrite = query.rewrite(ir);\n    assertEquals(1, hits.length);\n    assertEquals(rewrite.toString(), \"key:one MatchNoDocsQuery(\\\"field not found\\\")\");\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    addDoc(\"one\", iw);\n    addDoc(\"two\", iw);\n    addDoc(\"three four\", iw);\n    IndexReader ir = DirectoryReader.open(iw);\n\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits;\n\n    hits = is.search(new MatchNoDocsQuery(), 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    // A MatchNoDocsQuery rewrites to an empty BooleanQuery\n    MatchNoDocsQuery mndq = new MatchNoDocsQuery();\n    Query rewritten = mndq.rewrite(ir);\n    assertTrue(rewritten instanceof BooleanQuery);\n    assertEquals(0, ((BooleanQuery) rewritten).clauses().size());\n    hits = is.search(mndq, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f2db39cfba90037b809aabf6d1a990d904722175":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f2db39cfba90037b809aabf6d1a990d904722175"],"2a1862266772deb28cdcb7d996b64d2177022687":["f2db39cfba90037b809aabf6d1a990d904722175"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d8b3f2faaf05547a6ed4e2769b664522af9514b3":["2a1862266772deb28cdcb7d996b64d2177022687"],"f4778b794a897685e2f6c62caa1ac04983d1e69f":["d8b3f2faaf05547a6ed4e2769b664522af9514b3"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2a1862266772deb28cdcb7d996b64d2177022687","f4778b794a897685e2f6c62caa1ac04983d1e69f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4778b794a897685e2f6c62caa1ac04983d1e69f"]},"commit2Childs":{"f2db39cfba90037b809aabf6d1a990d904722175":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2a1862266772deb28cdcb7d996b64d2177022687"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"2a1862266772deb28cdcb7d996b64d2177022687":["d8b3f2faaf05547a6ed4e2769b664522af9514b3","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f2db39cfba90037b809aabf6d1a990d904722175","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"d8b3f2faaf05547a6ed4e2769b664522af9514b3":["f4778b794a897685e2f6c62caa1ac04983d1e69f"],"f4778b794a897685e2f6c62caa1ac04983d1e69f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}