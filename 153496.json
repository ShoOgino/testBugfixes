{"path":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testGetValues().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testGetValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/document/TestDocument#testGetValues().mjava","sourceNew":"  public void testGetValues() {\n    Document doc = makeDocumentWithFields();\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"keyword\"));\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"text\"));\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"unindexed\"));\n    assertEquals(new String[0],\n                 doc.getValues(\"nope\"));\n  }\n\n","sourceOld":"  public void testGetValues() {\n    Document doc = makeDocumentWithFields();\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"keyword\"));\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"text\"));\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"unindexed\"));\n    assertEquals(new String[0],\n                 doc.getValues(\"nope\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testGetValues().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testGetValues().mjava","sourceNew":"  @SuppressWarnings(\"deprecation\")\n  public void testGetValues() {\n    Document doc = makeDocumentWithFields();\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"keyword\"));\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"text\"));\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"unindexed\"));\n    assertEquals(new String[0],\n                 doc.getValues(\"nope\"));\n  }\n\n","sourceOld":"  public void testGetValues() {\n    Document doc = makeDocumentWithFields();\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"keyword\"));\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"text\"));\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"unindexed\"));\n    assertEquals(new String[0],\n                 doc.getValues(\"nope\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testGetValues().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testGetValues().mjava","sourceNew":"  public void testGetValues() {\n    Document doc = makeDocumentWithFields();\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"keyword\"));\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"text\"));\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"unindexed\"));\n    assertEquals(new String[0],\n                 doc.getValues(\"nope\"));\n  }\n\n","sourceOld":"  @SuppressWarnings(\"deprecation\")\n  public void testGetValues() {\n    Document doc = makeDocumentWithFields();\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"keyword\"));\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"text\"));\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"unindexed\"));\n    assertEquals(new String[0],\n                 doc.getValues(\"nope\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2","date":1591961131,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testGetValues().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testGetValues().mjava","sourceNew":"  public void testGetValues() {\n    Document doc = makeDocumentWithFields();\n    assertArrayEquals(new String[] {\"test1\", \"test2\"}, doc.getValues(\"keyword\"));\n    assertArrayEquals(new String[] {\"test1\", \"test2\"}, doc.getValues(\"text\"));\n    assertArrayEquals(new String[] {\"test1\", \"test2\"}, doc.getValues(\"unindexed\"));\n    assertArrayEquals(new String[0], doc.getValues(\"nope\"));\n  }\n\n","sourceOld":"  public void testGetValues() {\n    Document doc = makeDocumentWithFields();\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"keyword\"));\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"text\"));\n    assertEquals(new String[] {\"test1\", \"test2\"},\n                 doc.getValues(\"unindexed\"));\n    assertEquals(new String[0],\n                 doc.getValues(\"nope\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"]},"commit2Childs":{"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}