{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#SolrZkClient(String,int).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#SolrZkClient(String,int).mjava","pathOld":"solr/src/common/org/apache/solr/common/cloud/SolrZkClient#SolrZkClient(String,int).mjava","sourceNew":"  /**\n   * @param zkServerAddress\n   * @param zkClientTimeout\n   * @throws InterruptedException\n   * @throws TimeoutException\n   * @throws IOException\n   */\n  public SolrZkClient(String zkServerAddress, int zkClientTimeout) throws InterruptedException, TimeoutException, IOException {\n    this(zkServerAddress, zkClientTimeout, new DefaultConnectionStrategy(), null);\n  }\n\n","sourceOld":"  /**\n   * @param zkServerAddress\n   * @param zkClientTimeout\n   * @throws InterruptedException\n   * @throws TimeoutException\n   * @throws IOException\n   */\n  public SolrZkClient(String zkServerAddress, int zkClientTimeout) throws InterruptedException, TimeoutException, IOException {\n    this(zkServerAddress, zkClientTimeout, new DefaultConnectionStrategy(), null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#SolrZkClient(String,int).mjava","pathOld":"solr/src/common/org/apache/solr/common/cloud/SolrZkClient#SolrZkClient(String,int).mjava","sourceNew":"  /**\n   * @param zkServerAddress\n   * @param zkClientTimeout\n   * @throws InterruptedException\n   * @throws TimeoutException\n   * @throws IOException\n   */\n  public SolrZkClient(String zkServerAddress, int zkClientTimeout) throws InterruptedException, TimeoutException, IOException {\n    this(zkServerAddress, zkClientTimeout, new DefaultConnectionStrategy(), null);\n  }\n\n","sourceOld":"  /**\n   * @param zkServerAddress\n   * @param zkClientTimeout\n   * @throws InterruptedException\n   * @throws TimeoutException\n   * @throws IOException\n   */\n  public SolrZkClient(String zkServerAddress, int zkClientTimeout) throws InterruptedException, TimeoutException, IOException {\n    this(zkServerAddress, zkClientTimeout, new DefaultConnectionStrategy(), null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#SolrZkClient(String,int).mjava","pathOld":"solr/src/common/org/apache/solr/common/cloud/SolrZkClient#SolrZkClient(String,int).mjava","sourceNew":"  /**\n   * @param zkServerAddress\n   * @param zkClientTimeout\n   * @throws InterruptedException\n   * @throws TimeoutException\n   * @throws IOException\n   */\n  public SolrZkClient(String zkServerAddress, int zkClientTimeout) throws InterruptedException, TimeoutException, IOException {\n    this(zkServerAddress, zkClientTimeout, new DefaultConnectionStrategy(), null);\n  }\n\n","sourceOld":"  /**\n   * @param zkServerAddress\n   * @param zkClientTimeout\n   * @throws InterruptedException\n   * @throws TimeoutException\n   * @throws IOException\n   */\n  public SolrZkClient(String zkServerAddress, int zkClientTimeout) throws InterruptedException, TimeoutException, IOException {\n    this(zkServerAddress, zkClientTimeout, new DefaultConnectionStrategy(), null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1764a3d38fa1de1ac5474f293b8d32da723a409e","date":1344907887,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#SolrZkClient(String,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#SolrZkClient(String,int).mjava","sourceNew":"  /**\n   * @param zkServerAddress\n   * @param zkClientTimeout\n   * @throws InterruptedException\n   * @throws TimeoutException\n   * @throws IOException\n   */\n  public SolrZkClient(String zkServerAddress, int zkClientTimeout) {\n    this(zkServerAddress, zkClientTimeout, new DefaultConnectionStrategy(), null);\n  }\n\n","sourceOld":"  /**\n   * @param zkServerAddress\n   * @param zkClientTimeout\n   * @throws InterruptedException\n   * @throws TimeoutException\n   * @throws IOException\n   */\n  public SolrZkClient(String zkServerAddress, int zkClientTimeout) throws InterruptedException, TimeoutException, IOException {\n    this(zkServerAddress, zkClientTimeout, new DefaultConnectionStrategy(), null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","date":1345029782,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#SolrZkClient(String,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#SolrZkClient(String,int).mjava","sourceNew":"  /**\n   * @param zkServerAddress\n   * @param zkClientTimeout\n   * @throws InterruptedException\n   * @throws TimeoutException\n   * @throws IOException\n   */\n  public SolrZkClient(String zkServerAddress, int zkClientTimeout) {\n    this(zkServerAddress, zkClientTimeout, new DefaultConnectionStrategy(), null);\n  }\n\n","sourceOld":"  /**\n   * @param zkServerAddress\n   * @param zkClientTimeout\n   * @throws InterruptedException\n   * @throws TimeoutException\n   * @throws IOException\n   */\n  public SolrZkClient(String zkServerAddress, int zkClientTimeout) throws InterruptedException, TimeoutException, IOException {\n    this(zkServerAddress, zkClientTimeout, new DefaultConnectionStrategy(), null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b05c56a41b733e02a189c48895922b5bd8c7f3d1","date":1345033322,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#SolrZkClient(String,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#SolrZkClient(String,int).mjava","sourceNew":"  /**\n   * @param zkServerAddress\n   * @param zkClientTimeout\n   * @throws InterruptedException\n   * @throws TimeoutException\n   * @throws IOException\n   */\n  public SolrZkClient(String zkServerAddress, int zkClientTimeout) {\n    this(zkServerAddress, zkClientTimeout, new DefaultConnectionStrategy(), null);\n  }\n\n","sourceOld":"  /**\n   * @param zkServerAddress\n   * @param zkClientTimeout\n   * @throws InterruptedException\n   * @throws TimeoutException\n   * @throws IOException\n   */\n  public SolrZkClient(String zkServerAddress, int zkClientTimeout) throws InterruptedException, TimeoutException, IOException {\n    this(zkServerAddress, zkClientTimeout, new DefaultConnectionStrategy(), null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb89814ad85fb3340f275e6b76a0bc319a6cc02b","date":1348100270,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#SolrZkClient(String,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#SolrZkClient(String,int).mjava","sourceNew":"  /**\n   * @param zkServerAddress\n   * @param zkClientTimeout\n   */\n  public SolrZkClient(String zkServerAddress, int zkClientTimeout) {\n    this(zkServerAddress, zkClientTimeout, new DefaultConnectionStrategy(), null);\n  }\n\n","sourceOld":"  /**\n   * @param zkServerAddress\n   * @param zkClientTimeout\n   * @throws InterruptedException\n   * @throws TimeoutException\n   * @throws IOException\n   */\n  public SolrZkClient(String zkServerAddress, int zkClientTimeout) {\n    this(zkServerAddress, zkClientTimeout, new DefaultConnectionStrategy(), null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#SolrZkClient(String,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#SolrZkClient(String,int).mjava","sourceNew":"  public SolrZkClient(String zkServerAddress, int zkClientTimeout) {\n    this(zkServerAddress, zkClientTimeout, new DefaultConnectionStrategy(), null);\n  }\n\n","sourceOld":"  /**\n   * @param zkServerAddress\n   * @param zkClientTimeout\n   */\n  public SolrZkClient(String zkServerAddress, int zkClientTimeout) {\n    this(zkServerAddress, zkClientTimeout, new DefaultConnectionStrategy(), null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["cb89814ad85fb3340f275e6b76a0bc319a6cc02b"],"cb89814ad85fb3340f275e6b76a0bc319a6cc02b":["1764a3d38fa1de1ac5474f293b8d32da723a409e"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":["c26f00b574427b55127e869b935845554afde1fa","1764a3d38fa1de1ac5474f293b8d32da723a409e"],"1764a3d38fa1de1ac5474f293b8d32da723a409e":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":["c26f00b574427b55127e869b935845554afde1fa","1764a3d38fa1de1ac5474f293b8d32da723a409e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cb89814ad85fb3340f275e6b76a0bc319a6cc02b":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":[],"1764a3d38fa1de1ac5474f293b8d32da723a409e":["cb89814ad85fb3340f275e6b76a0bc319a6cc02b","b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"c26f00b574427b55127e869b935845554afde1fa":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","1764a3d38fa1de1ac5474f293b8d32da723a409e","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","a258fbb26824fd104ed795e5d9033d2d040049ee","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}