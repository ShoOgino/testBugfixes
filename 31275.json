{"path":"src/java/org/apache/lucene/index/IndexWriterConfig#setMaxFieldLength(int).mjava","commits":[{"id":"103e2ec175f1aa5629df5bcd34eb1c53055caeb1","date":1268243753,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriterConfig#setMaxFieldLength(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * The maximum number of terms that will be indexed for a single field in a\n   * document. This limits the amount of memory required for indexing, so that\n   * collections with very large files will not crash the indexing process by\n   * running out of memory. This setting refers to the number of running terms,\n   * not to the number of different terms.\n   * <p>\n   * <b>NOTE:</b> this silently truncates large documents, excluding from the\n   * index all terms that occur further in the document. If you know your source\n   * documents are large, be sure to set this value high enough to accomodate\n   * the expected size. If you set it to {@link #UNLIMITED_FIELD_LENGTH}, then\n   * the only limit is your memory, but you should anticipate an\n   * OutOfMemoryError.\n   * <p>\n   * By default it is set to {@link #UNLIMITED_FIELD_LENGTH}.\n   */\n  public IndexWriterConfig setMaxFieldLength(int maxFieldLength) {\n    this.maxFieldLength = maxFieldLength;\n    return this;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/IndexWriterConfig#setMaxFieldLength(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * The maximum number of terms that will be indexed for a single field in a\n   * document. This limits the amount of memory required for indexing, so that\n   * collections with very large files will not crash the indexing process by\n   * running out of memory. This setting refers to the number of running terms,\n   * not to the number of different terms.\n   * <p>\n   * <b>NOTE:</b> this silently truncates large documents, excluding from the\n   * index all terms that occur further in the document. If you know your source\n   * documents are large, be sure to set this value high enough to accomodate\n   * the expected size. If you set it to {@link #UNLIMITED_FIELD_LENGTH}, then\n   * the only limit is your memory, but you should anticipate an\n   * OutOfMemoryError.\n   * <p>\n   * By default it is set to {@link #UNLIMITED_FIELD_LENGTH}.\n   */\n  public IndexWriterConfig setMaxFieldLength(int maxFieldLength) {\n    this.maxFieldLength = maxFieldLength;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriterConfig#setMaxFieldLength(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * The maximum number of terms that will be indexed for a single field in a\n   * document. This limits the amount of memory required for indexing, so that\n   * collections with very large files will not crash the indexing process by\n   * running out of memory. This setting refers to the number of running terms,\n   * not to the number of different terms.\n   * <p>\n   * <b>NOTE:</b> this silently truncates large documents, excluding from the\n   * index all terms that occur further in the document. If you know your source\n   * documents are large, be sure to set this value high enough to accomodate\n   * the expected size. If you set it to {@link #UNLIMITED_FIELD_LENGTH}, then\n   * the only limit is your memory, but you should anticipate an\n   * OutOfMemoryError.\n   * <p>\n   * By default it is set to {@link #UNLIMITED_FIELD_LENGTH}.\n   */\n  public IndexWriterConfig setMaxFieldLength(int maxFieldLength) {\n    this.maxFieldLength = maxFieldLength;\n    return this;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#setMaxFieldLength(int).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriterConfig#setMaxFieldLength(int).mjava","sourceNew":"  /**\n   * The maximum number of terms that will be indexed for a single field in a\n   * document. This limits the amount of memory required for indexing, so that\n   * collections with very large files will not crash the indexing process by\n   * running out of memory. This setting refers to the number of running terms,\n   * not to the number of different terms.\n   * <p>\n   * <b>NOTE:</b> this silently truncates large documents, excluding from the\n   * index all terms that occur further in the document. If you know your source\n   * documents are large, be sure to set this value high enough to accomodate\n   * the expected size. If you set it to {@link #UNLIMITED_FIELD_LENGTH}, then\n   * the only limit is your memory, but you should anticipate an\n   * OutOfMemoryError.\n   * <p>\n   * By default it is set to {@link #UNLIMITED_FIELD_LENGTH}.\n   */\n  public IndexWriterConfig setMaxFieldLength(int maxFieldLength) {\n    this.maxFieldLength = maxFieldLength;\n    return this;\n  }\n\n","sourceOld":"  /**\n   * The maximum number of terms that will be indexed for a single field in a\n   * document. This limits the amount of memory required for indexing, so that\n   * collections with very large files will not crash the indexing process by\n   * running out of memory. This setting refers to the number of running terms,\n   * not to the number of different terms.\n   * <p>\n   * <b>NOTE:</b> this silently truncates large documents, excluding from the\n   * index all terms that occur further in the document. If you know your source\n   * documents are large, be sure to set this value high enough to accomodate\n   * the expected size. If you set it to {@link #UNLIMITED_FIELD_LENGTH}, then\n   * the only limit is your memory, but you should anticipate an\n   * OutOfMemoryError.\n   * <p>\n   * By default it is set to {@link #UNLIMITED_FIELD_LENGTH}.\n   */\n  public IndexWriterConfig setMaxFieldLength(int maxFieldLength) {\n    this.maxFieldLength = maxFieldLength;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"103e2ec175f1aa5629df5bcd34eb1c53055caeb1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e52fea2c4081a1e552b98506691990be59503168":["103e2ec175f1aa5629df5bcd34eb1c53055caeb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"103e2ec175f1aa5629df5bcd34eb1c53055caeb1":["e52fea2c4081a1e552b98506691990be59503168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["103e2ec175f1aa5629df5bcd34eb1c53055caeb1"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}