{"path":"solr/core/src/test/org/apache/solr/search/TestXmlQParserPlugin#implTestQuery(int,String,int).mjava","commits":[{"id":"f151b9e2e36c815b7e709361706344cf77c3b006","date":1468853133,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestXmlQParserPlugin#implTestQuery(int,String,int).mjava","pathOld":"/dev/null","sourceNew":"  public void implTestQuery(int numDocs, String q, int expectedCount) throws Exception {\n    // add some documents\n    for (int ii=1; ii<=numDocs; ++ii) {\n      String[] doc = {\"id\",ii+\"0\"};\n      assertU(adoc(doc));\n      if (random().nextBoolean()) {\n        assertU(commit());\n      }\n    }\n    assertU(commit());\n    // and then run the query\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"defType\", \"testxmlparser\");\n    params.add(\"q\", q);\n    assertQ(req(params), \"*[count(//doc)=\"+expectedCount+\"]\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestXmlQParserPlugin#implTestQuery(int,String,int).mjava","pathOld":"/dev/null","sourceNew":"  public void implTestQuery(int numDocs, String q, int expectedCount) throws Exception {\n    // add some documents\n    for (int ii=1; ii<=numDocs; ++ii) {\n      String[] doc = {\"id\",ii+\"0\"};\n      assertU(adoc(doc));\n      if (random().nextBoolean()) {\n        assertU(commit());\n      }\n    }\n    assertU(commit());\n    // and then run the query\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"defType\", \"testxmlparser\");\n    params.add(\"q\", q);\n    assertQ(req(params), \"*[count(//doc)=\"+expectedCount+\"]\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f151b9e2e36c815b7e709361706344cf77c3b006":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f151b9e2e36c815b7e709361706344cf77c3b006"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f151b9e2e36c815b7e709361706344cf77c3b006"]},"commit2Childs":{"f151b9e2e36c815b7e709361706344cf77c3b006":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f151b9e2e36c815b7e709361706344cf77c3b006","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}