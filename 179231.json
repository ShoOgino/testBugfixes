{"path":"solr/src/java/org/apache/solr/response/XMLWriter#XMLWriter(Writer,SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"7fa50ec3461abff12249dbe19296a1a1f8fc2eb2","date":1293213108,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/response/XMLWriter#XMLWriter(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/XMLWriter#XMLWriter(Writer,IndexSchema,SolrQueryRequest,String).mjava","sourceNew":"  public XMLWriter(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) {\n    super(writer, req, rsp);\n\n    String version = req.getParams().get(\"version\");\n    float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);\n    this.version = (int)(ver*1000);\n  }\n\n","sourceOld":"  public XMLWriter(Writer writer, IndexSchema schema, SolrQueryRequest req, String version) {\n    this.writer = writer;\n    this.schema = schema;\n    this.request = req;\n    \n    float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);\n    this.version = (int)(ver*1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/response/XMLWriter#XMLWriter(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/XMLWriter#XMLWriter(Writer,IndexSchema,SolrQueryRequest,String).mjava","sourceNew":"  public XMLWriter(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) {\n    super(writer, req, rsp);\n\n    String version = req.getParams().get(\"version\");\n    float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);\n    this.version = (int)(ver*1000);\n  }\n\n","sourceOld":"  public XMLWriter(Writer writer, IndexSchema schema, SolrQueryRequest req, String version) {\n    this.writer = writer;\n    this.schema = schema;\n    this.request = req;\n    \n    float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);\n    this.version = (int)(ver*1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/response/XMLWriter#XMLWriter(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  public XMLWriter(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) {\n    super(writer, req, rsp);\n\n    String version = req.getParams().get(\"version\");\n    float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);\n    this.version = (int)(ver*1000);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ce6aae13e6441cf187f083d13afaf8e9a2884e3","date":1299700113,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/response/XMLWriter#XMLWriter(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/XMLWriter#XMLWriter(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public XMLWriter(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) {\n    super(writer, req, rsp);\n\n    String version = req.getParams().get(CommonParams.VERSION);\n    float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);\n    this.version = (int)(ver*1000);\n    if( this.version < 2200 ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"XMLWriter does not support version: \"+version );\n    }\n  }\n\n","sourceOld":"  public XMLWriter(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) {\n    super(writer, req, rsp);\n\n    String version = req.getParams().get(\"version\");\n    float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);\n    this.version = (int)(ver*1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/response/XMLWriter#XMLWriter(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/XMLWriter#XMLWriter(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public XMLWriter(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) {\n    super(writer, req, rsp);\n\n    String version = req.getParams().get(CommonParams.VERSION);\n    float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);\n    this.version = (int)(ver*1000);\n    if( this.version < 2200 ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"XMLWriter does not support version: \"+version );\n    }\n  }\n\n","sourceOld":"  public XMLWriter(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) {\n    super(writer, req, rsp);\n\n    String version = req.getParams().get(\"version\");\n    float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);\n    this.version = (int)(ver*1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/response/XMLWriter#XMLWriter(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/XMLWriter#XMLWriter(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public XMLWriter(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) {\n    super(writer, req, rsp);\n\n    String version = req.getParams().get(CommonParams.VERSION);\n    float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);\n    this.version = (int)(ver*1000);\n    if( this.version < 2200 ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"XMLWriter does not support version: \"+version );\n    }\n  }\n\n","sourceOld":"  public XMLWriter(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) {\n    super(writer, req, rsp);\n\n    String version = req.getParams().get(\"version\");\n    float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);\n    this.version = (int)(ver*1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/XMLWriter#XMLWriter(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/XMLWriter#XMLWriter(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public XMLWriter(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) {\n    super(writer, req, rsp);\n\n    String version = req.getParams().get(CommonParams.VERSION);\n    float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);\n    this.version = (int)(ver*1000);\n    if( this.version < 2200 ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"XMLWriter does not support version: \"+version );\n    }\n  }\n\n","sourceOld":"  public XMLWriter(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) {\n    super(writer, req, rsp);\n\n    String version = req.getParams().get(CommonParams.VERSION);\n    float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);\n    this.version = (int)(ver*1000);\n    if( this.version < 2200 ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"XMLWriter does not support version: \"+version );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/XMLWriter#XMLWriter(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/XMLWriter#XMLWriter(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public XMLWriter(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) {\n    super(writer, req, rsp);\n\n    String version = req.getParams().get(CommonParams.VERSION);\n    float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);\n    this.version = (int)(ver*1000);\n    if( this.version < 2200 ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"XMLWriter does not support version: \"+version );\n    }\n  }\n\n","sourceOld":"  public XMLWriter(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) {\n    super(writer, req, rsp);\n\n    String version = req.getParams().get(CommonParams.VERSION);\n    float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);\n    this.version = (int)(ver*1000);\n    if( this.version < 2200 ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"XMLWriter does not support version: \"+version );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/XMLWriter#XMLWriter(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/XMLWriter#XMLWriter(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public XMLWriter(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) {\n    super(writer, req, rsp);\n\n    String version = req.getParams().get(CommonParams.VERSION);\n    float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);\n    this.version = (int)(ver*1000);\n    if( this.version < 2200 ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"XMLWriter does not support version: \"+version );\n    }\n  }\n\n","sourceOld":"  public XMLWriter(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) {\n    super(writer, req, rsp);\n\n    String version = req.getParams().get(CommonParams.VERSION);\n    float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);\n    this.version = (int)(ver*1000);\n    if( this.version < 2200 ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"XMLWriter does not support version: \"+version );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7fa50ec3461abff12249dbe19296a1a1f8fc2eb2"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7fa50ec3461abff12249dbe19296a1a1f8fc2eb2"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","2ce6aae13e6441cf187f083d13afaf8e9a2884e3"],"7fa50ec3461abff12249dbe19296a1a1f8fc2eb2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["2ce6aae13e6441cf187f083d13afaf8e9a2884e3"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["70ad682703b8585f5d0a637efec044d57ec05efb","2ce6aae13e6441cf187f083d13afaf8e9a2884e3"],"2ce6aae13e6441cf187f083d13afaf8e9a2884e3":["7fa50ec3461abff12249dbe19296a1a1f8fc2eb2"],"c26f00b574427b55127e869b935845554afde1fa":["2ce6aae13e6441cf187f083d13afaf8e9a2884e3","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["2ce6aae13e6441cf187f083d13afaf8e9a2884e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"7fa50ec3461abff12249dbe19296a1a1f8fc2eb2":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","2ce6aae13e6441cf187f083d13afaf8e9a2884e3"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"2ce6aae13e6441cf187f083d13afaf8e9a2884e3":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","c903c3d15906a3da96b8c0c2fb704491005fdbdb","d619839baa8ce5503e496b94a9e42ad6f079293f","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","7fa50ec3461abff12249dbe19296a1a1f8fc2eb2"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}