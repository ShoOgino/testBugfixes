{"path":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#makeLoadBalancedRequest(QueryRequest,List[String]).mjava","commits":[{"id":"241163c8f5d129a8327eb3950d20bb4f065b8a14","date":1363612901,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#makeLoadBalancedRequest(QueryRequest,List[String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Makes a request to one or more of the given urls, using the configured load balancer.\n   *\n   * @param req The solr search request that should be sent through the load balancer\n   * @param urls The list of solr server urls to load balance across\n   * @return The response from the request\n   */\n  public LBHttpSolrServer.Rsp makeLoadBalancedRequest(final QueryRequest req, List<String> urls)\n    throws SolrServerException, IOException {\n    return loadbalancer.request(new LBHttpSolrServer.Req(req, urls));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#makeLoadBalancedRequest(QueryRequest,List[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#makeLoadBalancedRequest(QueryRequest,List[String]).mjava","sourceNew":"  /**\n   * Makes a request to one or more of the given urls, using the configured load balancer.\n   *\n   * @param req The solr search request that should be sent through the load balancer\n   * @param urls The list of solr server urls to load balance across\n   * @return The response from the request\n   */\n  public LBHttpSolrClient.Rsp makeLoadBalancedRequest(final QueryRequest req, List<String> urls)\n    throws SolrServerException, IOException {\n    return loadbalancer.request(new LBHttpSolrClient.Req(req, urls));\n  }\n\n","sourceOld":"  /**\n   * Makes a request to one or more of the given urls, using the configured load balancer.\n   *\n   * @param req The solr search request that should be sent through the load balancer\n   * @param urls The list of solr server urls to load balance across\n   * @return The response from the request\n   */\n  public LBHttpSolrServer.Rsp makeLoadBalancedRequest(final QueryRequest req, List<String> urls)\n    throws SolrServerException, IOException {\n    return loadbalancer.request(new LBHttpSolrServer.Req(req, urls));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec1fd3cd1aa9782d426f1d542ff0a618ce9bbe10","date":1495727205,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#makeLoadBalancedRequest(QueryRequest,List[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#makeLoadBalancedRequest(QueryRequest,List[String]).mjava","sourceNew":"  /**\n   * Makes a request to one or more of the given urls, using the configured load balancer.\n   *\n   * @param req The solr search request that should be sent through the load balancer\n   * @param urls The list of solr server urls to load balance across\n   * @return The response from the request\n   */\n  public LBHttpSolrClient.Rsp makeLoadBalancedRequest(final QueryRequest req, List<String> urls)\n    throws SolrServerException, IOException {\n    return loadbalancer.request(newLBHttpSolrClientReq(req, urls));\n  }\n\n","sourceOld":"  /**\n   * Makes a request to one or more of the given urls, using the configured load balancer.\n   *\n   * @param req The solr search request that should be sent through the load balancer\n   * @param urls The list of solr server urls to load balance across\n   * @return The response from the request\n   */\n  public LBHttpSolrClient.Rsp makeLoadBalancedRequest(final QueryRequest req, List<String> urls)\n    throws SolrServerException, IOException {\n    return loadbalancer.request(new LBHttpSolrClient.Req(req, urls));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#makeLoadBalancedRequest(QueryRequest,List[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#makeLoadBalancedRequest(QueryRequest,List[String]).mjava","sourceNew":"  /**\n   * Makes a request to one or more of the given urls, using the configured load balancer.\n   *\n   * @param req The solr search request that should be sent through the load balancer\n   * @param urls The list of solr server urls to load balance across\n   * @return The response from the request\n   */\n  public LBHttpSolrClient.Rsp makeLoadBalancedRequest(final QueryRequest req, List<String> urls)\n    throws SolrServerException, IOException {\n    return loadbalancer.request(newLBHttpSolrClientReq(req, urls));\n  }\n\n","sourceOld":"  /**\n   * Makes a request to one or more of the given urls, using the configured load balancer.\n   *\n   * @param req The solr search request that should be sent through the load balancer\n   * @param urls The list of solr server urls to load balance across\n   * @return The response from the request\n   */\n  public LBHttpSolrClient.Rsp makeLoadBalancedRequest(final QueryRequest req, List<String> urls)\n    throws SolrServerException, IOException {\n    return loadbalancer.request(new LBHttpSolrClient.Req(req, urls));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#makeLoadBalancedRequest(QueryRequest,List[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#makeLoadBalancedRequest(QueryRequest,List[String]).mjava","sourceNew":"  /**\n   * Makes a request to one or more of the given urls, using the configured load balancer.\n   *\n   * @param req The solr search request that should be sent through the load balancer\n   * @param urls The list of solr server urls to load balance across\n   * @return The response from the request\n   */\n  public LBHttpSolrClient.Rsp makeLoadBalancedRequest(final QueryRequest req, List<String> urls)\n    throws SolrServerException, IOException {\n    return loadbalancer.request(newLBHttpSolrClientReq(req, urls));\n  }\n\n","sourceOld":"  /**\n   * Makes a request to one or more of the given urls, using the configured load balancer.\n   *\n   * @param req The solr search request that should be sent through the load balancer\n   * @param urls The list of solr server urls to load balance across\n   * @return The response from the request\n   */\n  public LBHttpSolrClient.Rsp makeLoadBalancedRequest(final QueryRequest req, List<String> urls)\n    throws SolrServerException, IOException {\n    return loadbalancer.request(new LBHttpSolrClient.Req(req, urls));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#makeLoadBalancedRequest(QueryRequest,List[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#makeLoadBalancedRequest(QueryRequest,List[String]).mjava","sourceNew":"  /**\n   * Makes a request to one or more of the given urls, using the configured load balancer.\n   *\n   * @param req The solr search request that should be sent through the load balancer\n   * @param urls The list of solr server urls to load balance across\n   * @return The response from the request\n   */\n  public LBSolrClient.Rsp makeLoadBalancedRequest(final QueryRequest req, List<String> urls)\n    throws SolrServerException, IOException {\n    return loadbalancer.request(newLBHttpSolrClientReq(req, urls));\n  }\n\n","sourceOld":"  /**\n   * Makes a request to one or more of the given urls, using the configured load balancer.\n   *\n   * @param req The solr search request that should be sent through the load balancer\n   * @param urls The list of solr server urls to load balance across\n   * @return The response from the request\n   */\n  public LBHttpSolrClient.Rsp makeLoadBalancedRequest(final QueryRequest req, List<String> urls)\n    throws SolrServerException, IOException {\n    return loadbalancer.request(newLBHttpSolrClientReq(req, urls));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1964c059f45ae1de1877f9f0fe3ca327ea4218e8","date":1594088246,"type":4,"author":"Cao Manh Dat","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#makeLoadBalancedRequest(QueryRequest,List[String]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Makes a request to one or more of the given urls, using the configured load balancer.\n   *\n   * @param req The solr search request that should be sent through the load balancer\n   * @param urls The list of solr server urls to load balance across\n   * @return The response from the request\n   */\n  public LBSolrClient.Rsp makeLoadBalancedRequest(final QueryRequest req, List<String> urls)\n    throws SolrServerException, IOException {\n    return loadbalancer.request(newLBHttpSolrClientReq(req, urls));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["bafca15d8e408346a67f4282ad1143b88023893b","ec1fd3cd1aa9782d426f1d542ff0a618ce9bbe10"],"1964c059f45ae1de1877f9f0fe3ca327ea4218e8":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"241163c8f5d129a8327eb3950d20bb4f065b8a14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bafca15d8e408346a67f4282ad1143b88023893b":["241163c8f5d129a8327eb3950d20bb4f065b8a14"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["bafca15d8e408346a67f4282ad1143b88023893b","ec1fd3cd1aa9782d426f1d542ff0a618ce9bbe10"],"ec1fd3cd1aa9782d426f1d542ff0a618ce9bbe10":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1964c059f45ae1de1877f9f0fe3ca327ea4218e8"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"1964c059f45ae1de1877f9f0fe3ca327ea4218e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["1964c059f45ae1de1877f9f0fe3ca327ea4218e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["241163c8f5d129a8327eb3950d20bb4f065b8a14"],"241163c8f5d129a8327eb3950d20bb4f065b8a14":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9","ec1fd3cd1aa9782d426f1d542ff0a618ce9bbe10"],"ec1fd3cd1aa9782d426f1d542ff0a618ce9bbe10":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}