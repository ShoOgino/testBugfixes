{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/Lang.LocalInputStream#parseComp(String).mjava","commits":[{"id":"74879569974967f8975e4418c9ec415d411dce92","date":1593391300,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/Lang.LocalInputStream#parseComp(String).mjava","pathOld":"/dev/null","sourceNew":"    private StreamComparator parseComp(String sort) throws IOException {\n\n      String[] sorts = sort.split(\",\");\n      StreamComparator[] comps = new StreamComparator[sorts.length];\n      for(int i=0; i<sorts.length; i++) {\n        String s = sorts[i];\n\n        String[] spec = s.trim().split(\"\\\\s+\"); //This should take into account spaces in the sort spec.\n\n        if (spec.length != 2) {\n          throw new IOException(\"Invalid sort spec:\" + s);\n        }\n\n        String fieldName = spec[0].trim();\n        String order = spec[1].trim();\n\n        comps[i] = new FieldComparator(fieldName, order.equalsIgnoreCase(\"asc\") ? ComparatorOrder.ASCENDING : ComparatorOrder.DESCENDING);\n      }\n\n      if(comps.length > 1) {\n        return new MultipleFieldComparator(comps);\n      } else {\n        return comps[0];\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74879569974967f8975e4418c9ec415d411dce92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["74879569974967f8975e4418c9ec415d411dce92"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74879569974967f8975e4418c9ec415d411dce92"],"74879569974967f8975e4418c9ec415d411dce92":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}