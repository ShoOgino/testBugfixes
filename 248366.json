{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#setScorer(Scorer).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#setScorer(Scorer).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#setScorer(Scorer).mjava","sourceNew":"    public void setScorer(Scorer scorer) throws IOException {\n      this.scorer = scorer;\n      for (GroupHead groupHead : groups.values()) {\n        for (FieldComparator<?> comparator : groupHead.comparators) {\n          comparator.setScorer(scorer);\n        }\n      }\n    }\n\n","sourceOld":"    public void setScorer(Scorer scorer) throws IOException {\n      this.scorer = scorer;\n      for (GroupHead groupHead : groups.values()) {\n        for (FieldComparator<?> comparator : groupHead.comparators) {\n          comparator.setScorer(scorer);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#setScorer(Scorer).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#setScorer(Scorer).mjava","sourceNew":"    @Override\n    public void setScorer(Scorer scorer) throws IOException {\n      this.scorer = scorer;\n      for (GroupHead groupHead : groups.values()) {\n        for (FieldComparator<?> comparator : groupHead.comparators) {\n          comparator.setScorer(scorer);\n        }\n      }\n    }\n\n","sourceOld":"    public void setScorer(Scorer scorer) throws IOException {\n      this.scorer = scorer;\n      for (GroupHead groupHead : groups.values()) {\n        for (FieldComparator<?> comparator : groupHead.comparators) {\n          comparator.setScorer(scorer);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#setScorer(Scorer).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#setScorer(Scorer).mjava","sourceNew":"    @Override\n    public void setScorer(Scorer scorer) throws IOException {\n      this.scorer = scorer;\n      for (GroupHead groupHead : groups.values()) {\n        for (FieldComparator<?> comparator : groupHead.comparators) {\n          comparator.setScorer(scorer);\n        }\n      }\n    }\n\n","sourceOld":"    public void setScorer(Scorer scorer) throws IOException {\n      this.scorer = scorer;\n      for (GroupHead groupHead : groups.values()) {\n        for (FieldComparator<?> comparator : groupHead.comparators) {\n          comparator.setScorer(scorer);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"901e951cec2e6af4e503209a6721c8834db23279","date":1420556599,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#setScorer(Scorer).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#setScorer(Scorer).mjava","sourceNew":"    @Override\n    public void setScorer(Scorer scorer) throws IOException {\n      this.scorer = scorer;\n      for (GroupHead groupHead : groups.values()) {\n        for (LeafFieldComparator comparator : groupHead.leafComparators) {\n          comparator.setScorer(scorer);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setScorer(Scorer scorer) throws IOException {\n      this.scorer = scorer;\n      for (GroupHead groupHead : groups.values()) {\n        for (FieldComparator<?> comparator : groupHead.comparators) {\n          comparator.setScorer(scorer);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ae958a739da1866696f442384393ba2f13e33e5","date":1491819018,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#setScorer(Scorer).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void setScorer(Scorer scorer) throws IOException {\n      this.scorer = scorer;\n      for (GroupHead groupHead : groups.values()) {\n        for (LeafFieldComparator comparator : groupHead.leafComparators) {\n          comparator.setScorer(scorer);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#setScorer(Scorer).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void setScorer(Scorer scorer) throws IOException {\n      this.scorer = scorer;\n      for (GroupHead groupHead : groups.values()) {\n        for (LeafFieldComparator comparator : groupHead.leafComparators) {\n          comparator.setScorer(scorer);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["901e951cec2e6af4e503209a6721c8834db23279"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7530de27b87b961b51f01bd1299b7004d46e8823"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"901e951cec2e6af4e503209a6721c8834db23279":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ae958a739da1866696f442384393ba2f13e33e5"],"7ae958a739da1866696f442384393ba2f13e33e5":["901e951cec2e6af4e503209a6721c8834db23279"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"901e951cec2e6af4e503209a6721c8834db23279":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","7ae958a739da1866696f442384393ba2f13e33e5"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","901e951cec2e6af4e503209a6721c8834db23279"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7ae958a739da1866696f442384393ba2f13e33e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}