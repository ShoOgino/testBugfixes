{"path":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestQueryTemplateManager#getDocumentFromString(String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestQueryTemplateManager#getDocumentFromString(String).mjava","pathOld":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestQueryTemplateManager#getDocumentFromString(String).mjava","sourceNew":"\t//Helper method to construct Lucene documents used in our tests\n\torg.apache.lucene.document.Document getDocumentFromString(String nameValuePairs)\n\t{\n\t\torg.apache.lucene.document.Document result=new org.apache.lucene.document.Document();\n\t\tStringTokenizer st=new StringTokenizer(nameValuePairs,\"\\t=\");\n\t\twhile(st.hasMoreTokens())\n\t\t{\n\t\t\tString name=st.nextToken().trim();\n\t\t\tif(st.hasMoreTokens())\n\t\t\t{\n\t\t\t\tString value=st.nextToken().trim();\n\t\t\t\tresult.add(new Field(name,value,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n","sourceOld":"\t//Helper method to construct Lucene documents used in our tests\n\torg.apache.lucene.document.Document getDocumentFromString(String nameValuePairs)\n\t{\n\t\torg.apache.lucene.document.Document result=new org.apache.lucene.document.Document();\n\t\tStringTokenizer st=new StringTokenizer(nameValuePairs,\"\\t=\");\n\t\twhile(st.hasMoreTokens())\n\t\t{\n\t\t\tString name=st.nextToken().trim();\n\t\t\tif(st.hasMoreTokens())\n\t\t\t{\n\t\t\t\tString value=st.nextToken().trim();\n\t\t\t\tresult.add(new Field(name,value,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestQueryTemplateManager#getDocumentFromString(String).mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestQueryTemplateManager#getDocumentFromString(String).mjava","sourceNew":"\t//Helper method to construct Lucene documents used in our tests\n\torg.apache.lucene.document.Document getDocumentFromString(String nameValuePairs)\n\t{\n\t\torg.apache.lucene.document.Document result=new org.apache.lucene.document.Document();\n\t\tStringTokenizer st=new StringTokenizer(nameValuePairs,\"\\t=\");\n\t\twhile(st.hasMoreTokens())\n\t\t{\n\t\t\tString name=st.nextToken().trim();\n\t\t\tif(st.hasMoreTokens())\n\t\t\t{\n\t\t\t\tString value=st.nextToken().trim();\n\t\t\t\tresult.add(newField(name,value,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n","sourceOld":"\t//Helper method to construct Lucene documents used in our tests\n\torg.apache.lucene.document.Document getDocumentFromString(String nameValuePairs)\n\t{\n\t\torg.apache.lucene.document.Document result=new org.apache.lucene.document.Document();\n\t\tStringTokenizer st=new StringTokenizer(nameValuePairs,\"\\t=\");\n\t\twhile(st.hasMoreTokens())\n\t\t{\n\t\t\tString name=st.nextToken().trim();\n\t\t\tif(st.hasMoreTokens())\n\t\t\t{\n\t\t\t\tString value=st.nextToken().trim();\n\t\t\t\tresult.add(new Field(name,value,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestQueryTemplateManager#getDocumentFromString(String).mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestQueryTemplateManager#getDocumentFromString(String).mjava","sourceNew":"\t//Helper method to construct Lucene documents used in our tests\n\torg.apache.lucene.document.Document getDocumentFromString(String nameValuePairs)\n\t{\n\t\torg.apache.lucene.document.Document result=new org.apache.lucene.document.Document();\n\t\tStringTokenizer st=new StringTokenizer(nameValuePairs,\"\\t=\");\n\t\twhile(st.hasMoreTokens())\n\t\t{\n\t\t\tString name=st.nextToken().trim();\n\t\t\tif(st.hasMoreTokens())\n\t\t\t{\n\t\t\t\tString value=st.nextToken().trim();\n\t\t\t\tresult.add(newField(name,value,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n","sourceOld":"\t//Helper method to construct Lucene documents used in our tests\n\torg.apache.lucene.document.Document getDocumentFromString(String nameValuePairs)\n\t{\n\t\torg.apache.lucene.document.Document result=new org.apache.lucene.document.Document();\n\t\tStringTokenizer st=new StringTokenizer(nameValuePairs,\"\\t=\");\n\t\twhile(st.hasMoreTokens())\n\t\t{\n\t\t\tString name=st.nextToken().trim();\n\t\t\tif(st.hasMoreTokens())\n\t\t\t{\n\t\t\t\tString value=st.nextToken().trim();\n\t\t\t\tresult.add(new Field(name,value,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2","date":1313460667,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestQueryTemplateManager#getDocumentFromString(String).mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestQueryTemplateManager#getDocumentFromString(String).mjava","sourceNew":"  //Helper method to construct Lucene documents used in our tests\n  org.apache.lucene.document.Document getDocumentFromString(String nameValuePairs) {\n    org.apache.lucene.document.Document result = new org.apache.lucene.document.Document();\n    StringTokenizer st = new StringTokenizer(nameValuePairs, \"\\t=\");\n    while (st.hasMoreTokens()) {\n      String name = st.nextToken().trim();\n      if (st.hasMoreTokens()) {\n        String value = st.nextToken().trim();\n        result.add(newField(name, value, Field.Store.YES, Field.Index.ANALYZED));\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"\t//Helper method to construct Lucene documents used in our tests\n\torg.apache.lucene.document.Document getDocumentFromString(String nameValuePairs)\n\t{\n\t\torg.apache.lucene.document.Document result=new org.apache.lucene.document.Document();\n\t\tStringTokenizer st=new StringTokenizer(nameValuePairs,\"\\t=\");\n\t\twhile(st.hasMoreTokens())\n\t\t{\n\t\t\tString name=st.nextToken().trim();\n\t\t\tif(st.hasMoreTokens())\n\t\t\t{\n\t\t\t\tString value=st.nextToken().trim();\n\t\t\t\tresult.add(newField(name,value,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestQueryTemplateManager#getDocumentFromString(String).mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestQueryTemplateManager#getDocumentFromString(String).mjava","sourceNew":"  //Helper method to construct Lucene documents used in our tests\n  org.apache.lucene.document.Document getDocumentFromString(String nameValuePairs) {\n    org.apache.lucene.document.Document result = new org.apache.lucene.document.Document();\n    StringTokenizer st = new StringTokenizer(nameValuePairs, \"\\t=\");\n    while (st.hasMoreTokens()) {\n      String name = st.nextToken().trim();\n      if (st.hasMoreTokens()) {\n        String value = st.nextToken().trim();\n        result.add(newField(name, value, TextField.TYPE_STORED));\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  //Helper method to construct Lucene documents used in our tests\n  org.apache.lucene.document.Document getDocumentFromString(String nameValuePairs) {\n    org.apache.lucene.document.Document result = new org.apache.lucene.document.Document();\n    StringTokenizer st = new StringTokenizer(nameValuePairs, \"\\t=\");\n    while (st.hasMoreTokens()) {\n      String name = st.nextToken().trim();\n      if (st.hasMoreTokens()) {\n        String value = st.nextToken().trim();\n        result.add(newField(name, value, Field.Store.YES, Field.Index.ANALYZED));\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"251550f5d19b526a76f8c5126ae7bb2d22cf8935","date":1315202008,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#getDocumentFromString(String).mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestQueryTemplateManager#getDocumentFromString(String).mjava","sourceNew":"  //Helper method to construct Lucene documents used in our tests\n  org.apache.lucene.document.Document getDocumentFromString(String nameValuePairs) {\n    org.apache.lucene.document.Document result = new org.apache.lucene.document.Document();\n    StringTokenizer st = new StringTokenizer(nameValuePairs, \"\\t=\");\n    while (st.hasMoreTokens()) {\n      String name = st.nextToken().trim();\n      if (st.hasMoreTokens()) {\n        String value = st.nextToken().trim();\n        result.add(newField(name, value, TextField.TYPE_STORED));\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  //Helper method to construct Lucene documents used in our tests\n  org.apache.lucene.document.Document getDocumentFromString(String nameValuePairs) {\n    org.apache.lucene.document.Document result = new org.apache.lucene.document.Document();\n    StringTokenizer st = new StringTokenizer(nameValuePairs, \"\\t=\");\n    while (st.hasMoreTokens()) {\n      String name = st.nextToken().trim();\n      if (st.hasMoreTokens()) {\n        String value = st.nextToken().trim();\n        result.add(newField(name, value, TextField.TYPE_STORED));\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","132903c28af3aa6f67284b78de91c0f0a99488c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["132903c28af3aa6f67284b78de91c0f0a99488c2","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}