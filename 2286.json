{"path":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","commits":[{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#PrefixCodedTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","sourceNew":"  public BlockTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n    segment = state.segmentName;\n\n    //System.out.println(\"BTW.init seg=\" + state.segmentName);\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","sourceOld":"  public PrefixCodedTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    termsIndexWriter.setTermsOutput(out);\n\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    termWriter = new DeltaBytesWriter(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd1bfe3cedf815c14939d170d53031c88eb5c444","date":1295896578,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","pathOld":"/dev/null","sourceNew":"  public BlockTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n    segment = state.segmentName;\n\n    //System.out.println(\"BTW.init seg=\" + state.segmentName);\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","pathOld":"/dev/null","sourceNew":"  public BlockTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n    segment = state.segmentName;\n\n    //System.out.println(\"BTW.init seg=\" + state.segmentName);\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762","date":1297938719,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","sourceNew":"  public BlockTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter)\n    throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    out = state.directory.createOutput(termsFileName);\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n    //segment = state.segmentName;\n\n    //System.out.println(\"BTW.init seg=\" + state.segmentName);\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","sourceOld":"  public BlockTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n    segment = state.segmentName;\n\n    //System.out.println(\"BTW.init seg=\" + state.segmentName);\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","sourceNew":"  public BlockTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter)\n    throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    out = state.directory.createOutput(termsFileName);\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n    //segment = state.segmentName;\n\n    //System.out.println(\"BTW.init seg=\" + state.segmentName);\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","sourceOld":"  public BlockTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n    segment = state.segmentName;\n\n    //System.out.println(\"BTW.init seg=\" + state.segmentName);\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","sourceNew":"  public BlockTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter)\n    throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    out = state.directory.createOutput(termsFileName);\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n    //segment = state.segmentName;\n\n    //System.out.println(\"BTW.init seg=\" + state.segmentName);\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","sourceOld":"  public BlockTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n    segment = state.segmentName;\n\n    //System.out.println(\"BTW.init seg=\" + state.segmentName);\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fd1bfe3cedf815c14939d170d53031c88eb5c444":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["29ef99d61cda9641b6250bf9567329a6e65f901d","4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762"],"4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762":["b1add9ddc0005b07550d4350720aac22dc9886b3"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1add9ddc0005b07550d4350720aac22dc9886b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b1add9ddc0005b07550d4350720aac22dc9886b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["fd1bfe3cedf815c14939d170d53031c88eb5c444","4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762"]},"commit2Childs":{"fd1bfe3cedf815c14939d170d53031c88eb5c444":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fd1bfe3cedf815c14939d170d53031c88eb5c444","29ef99d61cda9641b6250bf9567329a6e65f901d","b1add9ddc0005b07550d4350720aac22dc9886b3"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762","29ef99d61cda9641b6250bf9567329a6e65f901d"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}