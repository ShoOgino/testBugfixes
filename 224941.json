{"path":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTaskTest#testJustDate().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTaskTest#testJustDate().mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTaskTest#testJustDate().mjava","sourceNew":"  /** Fail by default when there's only date */\n  public void testJustDate() throws Exception {\n    File file = new File(getWorkDir(), \"one-line\");\n    PerfRunData runData = createPerfRunData(file, false, JustDateDocMaker.class.getName());\n    WriteLineDocTask wldt = new WriteLineDocTask(runData);\n    wldt.doLogic();\n    wldt.close();\n    \n    BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file), \"utf-8\"));\n    try {\n      String line = br.readLine();\n      assertHeaderLine(line);\n      line = br.readLine();\n      assertNull(line);\n    } finally {\n      br.close();\n    }\n  }\n\n","sourceOld":"  /** Fail by default when there's only date */\n  public void testJustDate() throws Exception {\n    File file = new File(getWorkDir(), \"one-line\");\n    PerfRunData runData = createPerfRunData(file, false, JustDateDocMaker.class.getName());\n    WriteLineDocTask wldt = new WriteLineDocTask(runData);\n    wldt.doLogic();\n    wldt.close();\n    \n    BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file), \"utf-8\"));\n    try {\n      String line = br.readLine();\n      assertHeaderLine(line);\n      line = br.readLine();\n      assertNull(line);\n    } finally {\n      br.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTaskTest#testJustDate().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTaskTest#testJustDate().mjava","sourceNew":"  /** Fail by default when there's only date */\n  public void testJustDate() throws Exception {\n    File file = new File(getWorkDir(), \"one-line\");\n    PerfRunData runData = createPerfRunData(file, false, JustDateDocMaker.class.getName());\n    WriteLineDocTask wldt = new WriteLineDocTask(runData);\n    wldt.doLogic();\n    wldt.close();\n    \n    BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file), StandardCharsets.UTF_8));\n    try {\n      String line = br.readLine();\n      assertHeaderLine(line);\n      line = br.readLine();\n      assertNull(line);\n    } finally {\n      br.close();\n    }\n  }\n\n","sourceOld":"  /** Fail by default when there's only date */\n  public void testJustDate() throws Exception {\n    File file = new File(getWorkDir(), \"one-line\");\n    PerfRunData runData = createPerfRunData(file, false, JustDateDocMaker.class.getName());\n    WriteLineDocTask wldt = new WriteLineDocTask(runData);\n    wldt.doLogic();\n    wldt.close();\n    \n    BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file), \"utf-8\"));\n    try {\n      String line = br.readLine();\n      assertHeaderLine(line);\n      line = br.readLine();\n      assertNull(line);\n    } finally {\n      br.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTaskTest#testJustDate().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTaskTest#testJustDate().mjava","sourceNew":"  /** Fail by default when there's only date */\n  public void testJustDate() throws Exception {\n    File file = new File(getWorkDir(), \"one-line\");\n    PerfRunData runData = createPerfRunData(file, false, JustDateDocMaker.class.getName());\n    WriteLineDocTask wldt = new WriteLineDocTask(runData);\n    wldt.doLogic();\n    wldt.close();\n    \n    BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file), StandardCharsets.UTF_8));\n    try {\n      String line = br.readLine();\n      assertHeaderLine(line);\n      line = br.readLine();\n      assertNull(line);\n    } finally {\n      br.close();\n    }\n  }\n\n","sourceOld":"  /** Fail by default when there's only date */\n  public void testJustDate() throws Exception {\n    File file = new File(getWorkDir(), \"one-line\");\n    PerfRunData runData = createPerfRunData(file, false, JustDateDocMaker.class.getName());\n    WriteLineDocTask wldt = new WriteLineDocTask(runData);\n    wldt.doLogic();\n    wldt.close();\n    \n    BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file), \"utf-8\"));\n    try {\n      String line = br.readLine();\n      assertHeaderLine(line);\n      line = br.readLine();\n      assertNull(line);\n    } finally {\n      br.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTaskTest#testJustDate().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTaskTest#testJustDate().mjava","sourceNew":"  /** Fail by default when there's only date */\n  public void testJustDate() throws Exception {\n    Path file = getWorkDir().resolve(\"one-line\");\n    PerfRunData runData = createPerfRunData(file, false, JustDateDocMaker.class.getName());\n    WriteLineDocTask wldt = new WriteLineDocTask(runData);\n    wldt.doLogic();\n    wldt.close();\n    \n    try (BufferedReader br = Files.newBufferedReader(file, StandardCharsets.UTF_8)) {\n      String line = br.readLine();\n      assertHeaderLine(line);\n      line = br.readLine();\n      assertNull(line);\n    }\n  }\n\n","sourceOld":"  /** Fail by default when there's only date */\n  public void testJustDate() throws Exception {\n    File file = new File(getWorkDir(), \"one-line\");\n    PerfRunData runData = createPerfRunData(file, false, JustDateDocMaker.class.getName());\n    WriteLineDocTask wldt = new WriteLineDocTask(runData);\n    wldt.doLogic();\n    wldt.close();\n    \n    BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file), StandardCharsets.UTF_8));\n    try {\n      String line = br.readLine();\n      assertHeaderLine(line);\n      line = br.readLine();\n      assertNull(line);\n    } finally {\n      br.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7d89d7e4e5101347833eea558851bf4209218619"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["7d89d7e4e5101347833eea558851bf4209218619"],"7d89d7e4e5101347833eea558851bf4209218619":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}