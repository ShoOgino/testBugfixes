{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testCosineSimilaritySort().mjava","commits":[{"id":"c3eb251dab40cb8cabcea8ed646a2c060d423f18","date":1570756765,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testCosineSimilaritySort().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCosineSimilaritySort() throws Exception {\n    String cexpr = \"sort(select(list(tuple(id=\\\"1\\\", f=array(1,2,3,4)), tuple(id=\\\"2\\\",f=array(10,2,3,4))),\" +\n        \"                 cosineSimilarity(f, array(1,2,3,4)) as sim, id),\" +\n        \"                by=\\\"sim desc\\\")\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(), 2);\n    assertEquals(tuples.get(0).getString(\"id\"), \"1\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":0,"author":"jimczi","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testCosineSimilaritySort().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCosineSimilaritySort() throws Exception {\n    String cexpr = \"sort(select(list(tuple(id=\\\"1\\\", f=array(1,2,3,4)), tuple(id=\\\"2\\\",f=array(10,2,3,4))),\" +\n        \"                 cosineSimilarity(f, array(1,2,3,4)) as sim, id),\" +\n        \"                by=\\\"sim desc\\\")\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(), 2);\n    assertEquals(tuples.get(0).getString(\"id\"), \"1\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c3eb251dab40cb8cabcea8ed646a2c060d423f18":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c3eb251dab40cb8cabcea8ed646a2c060d423f18"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c3eb251dab40cb8cabcea8ed646a2c060d423f18"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c3eb251dab40cb8cabcea8ed646a2c060d423f18","b0b597c65628ca9e73913a07e81691f8229bae35"],"c3eb251dab40cb8cabcea8ed646a2c060d423f18":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}