{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/NGramTokenizer#NGramTokenizer(AttributeFactory,Reader,int,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/NGramTokenizer#NGramTokenizer(AttributeFactory,Reader,int,int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/ngram/NGramTokenizer#NGramTokenizer(AttributeFactory,Reader,int,int).mjava","sourceNew":"  /**\n   * Creates NGramTokenizer with given min and max n-grams.\n   * @param factory {@link org.apache.lucene.util.AttributeSource.AttributeFactory} to use\n   * @param input {@link Reader} holding the input to be tokenized\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  public NGramTokenizer(AttributeFactory factory, Reader input, int minGram, int maxGram) {\n    super(factory, input);\n    init(minGram, maxGram);\n  }\n\n","sourceOld":"  /**\n   * Creates NGramTokenizer with given min and max n-grams.\n   * @param factory {@link org.apache.lucene.util.AttributeSource.AttributeFactory} to use\n   * @param input {@link Reader} holding the input to be tokenized\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  public NGramTokenizer(AttributeFactory factory, Reader input, int minGram, int maxGram) {\n    super(factory, input);\n    init(minGram, maxGram);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c807c4005aae1acaf5cebc9af40883985fb89a8","date":1366974206,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/Lucene43NGramTokenizer#Lucene43NGramTokenizer(AttributeFactory,Reader,int,int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/NGramTokenizer#NGramTokenizer(AttributeFactory,Reader,int,int).mjava","sourceNew":"  /**\n   * Creates NGramTokenizer with given min and max n-grams.\n   * @param factory {@link org.apache.lucene.util.AttributeSource.AttributeFactory} to use\n   * @param input {@link Reader} holding the input to be tokenized\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  public Lucene43NGramTokenizer(AttributeFactory factory, Reader input, int minGram, int maxGram) {\n    super(factory, input);\n    init(minGram, maxGram);\n  }\n\n","sourceOld":"  /**\n   * Creates NGramTokenizer with given min and max n-grams.\n   * @param factory {@link org.apache.lucene.util.AttributeSource.AttributeFactory} to use\n   * @param input {@link Reader} holding the input to be tokenized\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  public NGramTokenizer(AttributeFactory factory, Reader input, int minGram, int maxGram) {\n    super(factory, input);\n    init(minGram, maxGram);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c807c4005aae1acaf5cebc9af40883985fb89a8","date":1366974206,"type":6,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/NGramTokenizer#NGramTokenizer(Version,AttributeFactory,Reader,int,int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/NGramTokenizer#NGramTokenizer(AttributeFactory,Reader,int,int).mjava","sourceNew":"  /**\n   * Creates NGramTokenizer with given min and max n-grams.\n   * @param version the lucene compatibility <a href=\"#version\">version</a>\n   * @param factory {@link org.apache.lucene.util.AttributeSource.AttributeFactory} to use\n   * @param input {@link Reader} holding the input to be tokenized\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  public NGramTokenizer(Version version, AttributeFactory factory, Reader input, int minGram, int maxGram) {\n    super(factory, input);\n    init(version, minGram, maxGram);\n  }\n\n","sourceOld":"  /**\n   * Creates NGramTokenizer with given min and max n-grams.\n   * @param factory {@link org.apache.lucene.util.AttributeSource.AttributeFactory} to use\n   * @param input {@link Reader} holding the input to be tokenized\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  public NGramTokenizer(AttributeFactory factory, Reader input, int minGram, int maxGram) {\n    super(factory, input);\n    init(minGram, maxGram);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4c807c4005aae1acaf5cebc9af40883985fb89a8":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4c807c4005aae1acaf5cebc9af40883985fb89a8"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4c807c4005aae1acaf5cebc9af40883985fb89a8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4c807c4005aae1acaf5cebc9af40883985fb89a8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}