{"path":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum.Frame#rewind().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum.Frame#rewind().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum.Frame#rewind().mjava","sourceNew":"        void rewind() throws IOException {\n\n          // Force reload:\n          fp = fpOrig;\n          nextEnt = -1;\n          hasTerms = hasTermsOrig;\n          if (isFloor) {\n            floorDataReader.rewind();\n            numFollowFloorBlocks = floorDataReader.readVInt();\n            nextFloorLabel = floorDataReader.readByte() & 0xff;\n          }\n\n          /*\n          //System.out.println(\"rewind\");\n          // Keeps the block loaded, but rewinds its state:\n          if (nextEnt > 0 || fp != fpOrig) {\n            if (DEBUG) {\n              System.out.println(\"      rewind frame ord=\" + ord + \" fpOrig=\" + fpOrig + \" fp=\" + fp + \" hasTerms?=\" + hasTerms + \" isFloor?=\" + isFloor + \" nextEnt=\" + nextEnt + \" prefixLen=\" + prefix);\n            }\n            if (fp != fpOrig) {\n              fp = fpOrig;\n              nextEnt = -1;\n            } else {\n              nextEnt = 0;\n            }\n            hasTerms = hasTermsOrig;\n            if (isFloor) {\n              floorDataReader.rewind();\n              numFollowFloorBlocks = floorDataReader.readVInt();\n              nextFloorLabel = floorDataReader.readByte() & 0xff;\n            }\n            assert suffixBytes != null;\n            suffixesReader.rewind();\n            assert statBytes != null;\n            statsReader.rewind();\n            metaDataUpto = 0;\n            state.termBlockOrd = 0;\n            // TODO: skip this if !hasTerms?  Then postings\n            // impl wouldn't have to write useless 0 byte\n            postingsReader.resetTermsBlock(fieldInfo, state);\n            lastSubFP = -1;\n          } else if (DEBUG) {\n            System.out.println(\"      skip rewind fp=\" + fp + \" fpOrig=\" + fpOrig + \" nextEnt=\" + nextEnt + \" ord=\" + ord);\n          }\n          */\n        }\n\n","sourceOld":"        void rewind() throws IOException {\n\n          // Force reload:\n          fp = fpOrig;\n          nextEnt = -1;\n          hasTerms = hasTermsOrig;\n          if (isFloor) {\n            floorDataReader.rewind();\n            numFollowFloorBlocks = floorDataReader.readVInt();\n            nextFloorLabel = floorDataReader.readByte() & 0xff;\n          }\n\n          /*\n          //System.out.println(\"rewind\");\n          // Keeps the block loaded, but rewinds its state:\n          if (nextEnt > 0 || fp != fpOrig) {\n            if (DEBUG) {\n              System.out.println(\"      rewind frame ord=\" + ord + \" fpOrig=\" + fpOrig + \" fp=\" + fp + \" hasTerms?=\" + hasTerms + \" isFloor?=\" + isFloor + \" nextEnt=\" + nextEnt + \" prefixLen=\" + prefix);\n            }\n            if (fp != fpOrig) {\n              fp = fpOrig;\n              nextEnt = -1;\n            } else {\n              nextEnt = 0;\n            }\n            hasTerms = hasTermsOrig;\n            if (isFloor) {\n              floorDataReader.rewind();\n              numFollowFloorBlocks = floorDataReader.readVInt();\n              nextFloorLabel = floorDataReader.readByte() & 0xff;\n            }\n            assert suffixBytes != null;\n            suffixesReader.rewind();\n            assert statBytes != null;\n            statsReader.rewind();\n            metaDataUpto = 0;\n            state.termBlockOrd = 0;\n            // TODO: skip this if !hasTerms?  Then postings\n            // impl wouldn't have to write useless 0 byte\n            postingsReader.resetTermsBlock(fieldInfo, state);\n            lastSubFP = -1;\n          } else if (DEBUG) {\n            System.out.println(\"      skip rewind fp=\" + fp + \" fpOrig=\" + fpOrig + \" nextEnt=\" + nextEnt + \" ord=\" + ord);\n          }\n          */\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum.Frame#rewind().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum.Frame#rewind().mjava","sourceNew":"        void rewind() {\n\n          // Force reload:\n          fp = fpOrig;\n          nextEnt = -1;\n          hasTerms = hasTermsOrig;\n          if (isFloor) {\n            floorDataReader.rewind();\n            numFollowFloorBlocks = floorDataReader.readVInt();\n            nextFloorLabel = floorDataReader.readByte() & 0xff;\n          }\n\n          /*\n          //System.out.println(\"rewind\");\n          // Keeps the block loaded, but rewinds its state:\n          if (nextEnt > 0 || fp != fpOrig) {\n            if (DEBUG) {\n              System.out.println(\"      rewind frame ord=\" + ord + \" fpOrig=\" + fpOrig + \" fp=\" + fp + \" hasTerms?=\" + hasTerms + \" isFloor?=\" + isFloor + \" nextEnt=\" + nextEnt + \" prefixLen=\" + prefix);\n            }\n            if (fp != fpOrig) {\n              fp = fpOrig;\n              nextEnt = -1;\n            } else {\n              nextEnt = 0;\n            }\n            hasTerms = hasTermsOrig;\n            if (isFloor) {\n              floorDataReader.rewind();\n              numFollowFloorBlocks = floorDataReader.readVInt();\n              nextFloorLabel = floorDataReader.readByte() & 0xff;\n            }\n            assert suffixBytes != null;\n            suffixesReader.rewind();\n            assert statBytes != null;\n            statsReader.rewind();\n            metaDataUpto = 0;\n            state.termBlockOrd = 0;\n            // TODO: skip this if !hasTerms?  Then postings\n            // impl wouldn't have to write useless 0 byte\n            postingsReader.resetTermsBlock(fieldInfo, state);\n            lastSubFP = -1;\n          } else if (DEBUG) {\n            System.out.println(\"      skip rewind fp=\" + fp + \" fpOrig=\" + fpOrig + \" nextEnt=\" + nextEnt + \" ord=\" + ord);\n          }\n          */\n        }\n\n","sourceOld":"        void rewind() throws IOException {\n\n          // Force reload:\n          fp = fpOrig;\n          nextEnt = -1;\n          hasTerms = hasTermsOrig;\n          if (isFloor) {\n            floorDataReader.rewind();\n            numFollowFloorBlocks = floorDataReader.readVInt();\n            nextFloorLabel = floorDataReader.readByte() & 0xff;\n          }\n\n          /*\n          //System.out.println(\"rewind\");\n          // Keeps the block loaded, but rewinds its state:\n          if (nextEnt > 0 || fp != fpOrig) {\n            if (DEBUG) {\n              System.out.println(\"      rewind frame ord=\" + ord + \" fpOrig=\" + fpOrig + \" fp=\" + fp + \" hasTerms?=\" + hasTerms + \" isFloor?=\" + isFloor + \" nextEnt=\" + nextEnt + \" prefixLen=\" + prefix);\n            }\n            if (fp != fpOrig) {\n              fp = fpOrig;\n              nextEnt = -1;\n            } else {\n              nextEnt = 0;\n            }\n            hasTerms = hasTermsOrig;\n            if (isFloor) {\n              floorDataReader.rewind();\n              numFollowFloorBlocks = floorDataReader.readVInt();\n              nextFloorLabel = floorDataReader.readByte() & 0xff;\n            }\n            assert suffixBytes != null;\n            suffixesReader.rewind();\n            assert statBytes != null;\n            statsReader.rewind();\n            metaDataUpto = 0;\n            state.termBlockOrd = 0;\n            // TODO: skip this if !hasTerms?  Then postings\n            // impl wouldn't have to write useless 0 byte\n            postingsReader.resetTermsBlock(fieldInfo, state);\n            lastSubFP = -1;\n          } else if (DEBUG) {\n            System.out.println(\"      skip rewind fp=\" + fp + \" fpOrig=\" + fpOrig + \" nextEnt=\" + nextEnt + \" ord=\" + ord);\n          }\n          */\n        }\n\n","bugFix":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum.Frame#rewind().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum.Frame#rewind().mjava","sourceNew":"        void rewind() {\n\n          // Force reload:\n          fp = fpOrig;\n          nextEnt = -1;\n          hasTerms = hasTermsOrig;\n          if (isFloor) {\n            floorDataReader.rewind();\n            numFollowFloorBlocks = floorDataReader.readVInt();\n            nextFloorLabel = floorDataReader.readByte() & 0xff;\n          }\n\n          /*\n          //System.out.println(\"rewind\");\n          // Keeps the block loaded, but rewinds its state:\n          if (nextEnt > 0 || fp != fpOrig) {\n            if (DEBUG) {\n              System.out.println(\"      rewind frame ord=\" + ord + \" fpOrig=\" + fpOrig + \" fp=\" + fp + \" hasTerms?=\" + hasTerms + \" isFloor?=\" + isFloor + \" nextEnt=\" + nextEnt + \" prefixLen=\" + prefix);\n            }\n            if (fp != fpOrig) {\n              fp = fpOrig;\n              nextEnt = -1;\n            } else {\n              nextEnt = 0;\n            }\n            hasTerms = hasTermsOrig;\n            if (isFloor) {\n              floorDataReader.rewind();\n              numFollowFloorBlocks = floorDataReader.readVInt();\n              nextFloorLabel = floorDataReader.readByte() & 0xff;\n            }\n            assert suffixBytes != null;\n            suffixesReader.rewind();\n            assert statBytes != null;\n            statsReader.rewind();\n            metaDataUpto = 0;\n            state.termBlockOrd = 0;\n            // TODO: skip this if !hasTerms?  Then postings\n            // impl wouldn't have to write useless 0 byte\n            postingsReader.resetTermsBlock(fieldInfo, state);\n            lastSubFP = -1;\n          } else if (DEBUG) {\n            System.out.println(\"      skip rewind fp=\" + fp + \" fpOrig=\" + fpOrig + \" nextEnt=\" + nextEnt + \" ord=\" + ord);\n          }\n          */\n        }\n\n","sourceOld":"        void rewind() throws IOException {\n\n          // Force reload:\n          fp = fpOrig;\n          nextEnt = -1;\n          hasTerms = hasTermsOrig;\n          if (isFloor) {\n            floorDataReader.rewind();\n            numFollowFloorBlocks = floorDataReader.readVInt();\n            nextFloorLabel = floorDataReader.readByte() & 0xff;\n          }\n\n          /*\n          //System.out.println(\"rewind\");\n          // Keeps the block loaded, but rewinds its state:\n          if (nextEnt > 0 || fp != fpOrig) {\n            if (DEBUG) {\n              System.out.println(\"      rewind frame ord=\" + ord + \" fpOrig=\" + fpOrig + \" fp=\" + fp + \" hasTerms?=\" + hasTerms + \" isFloor?=\" + isFloor + \" nextEnt=\" + nextEnt + \" prefixLen=\" + prefix);\n            }\n            if (fp != fpOrig) {\n              fp = fpOrig;\n              nextEnt = -1;\n            } else {\n              nextEnt = 0;\n            }\n            hasTerms = hasTermsOrig;\n            if (isFloor) {\n              floorDataReader.rewind();\n              numFollowFloorBlocks = floorDataReader.readVInt();\n              nextFloorLabel = floorDataReader.readByte() & 0xff;\n            }\n            assert suffixBytes != null;\n            suffixesReader.rewind();\n            assert statBytes != null;\n            statsReader.rewind();\n            metaDataUpto = 0;\n            state.termBlockOrd = 0;\n            // TODO: skip this if !hasTerms?  Then postings\n            // impl wouldn't have to write useless 0 byte\n            postingsReader.resetTermsBlock(fieldInfo, state);\n            lastSubFP = -1;\n          } else if (DEBUG) {\n            System.out.println(\"      skip rewind fp=\" + fp + \" fpOrig=\" + fpOrig + \" nextEnt=\" + nextEnt + \" ord=\" + ord);\n          }\n          */\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ad80176d91a6f70fe93880e43dfd697dc4e63ed","date":1400176913,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader.FieldReader.SegmentTermsEnum.Frame#rewind().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum.Frame#rewind().mjava","sourceNew":"        void rewind() {\n\n          // Force reload:\n          fp = fpOrig;\n          nextEnt = -1;\n          hasTerms = hasTermsOrig;\n          if (isFloor) {\n            floorDataReader.rewind();\n            numFollowFloorBlocks = floorDataReader.readVInt();\n            nextFloorLabel = floorDataReader.readByte() & 0xff;\n          }\n\n          /*\n          //System.out.println(\"rewind\");\n          // Keeps the block loaded, but rewinds its state:\n          if (nextEnt > 0 || fp != fpOrig) {\n            if (DEBUG) {\n              System.out.println(\"      rewind frame ord=\" + ord + \" fpOrig=\" + fpOrig + \" fp=\" + fp + \" hasTerms?=\" + hasTerms + \" isFloor?=\" + isFloor + \" nextEnt=\" + nextEnt + \" prefixLen=\" + prefix);\n            }\n            if (fp != fpOrig) {\n              fp = fpOrig;\n              nextEnt = -1;\n            } else {\n              nextEnt = 0;\n            }\n            hasTerms = hasTermsOrig;\n            if (isFloor) {\n              floorDataReader.rewind();\n              numFollowFloorBlocks = floorDataReader.readVInt();\n              nextFloorLabel = floorDataReader.readByte() & 0xff;\n            }\n            assert suffixBytes != null;\n            suffixesReader.rewind();\n            assert statBytes != null;\n            statsReader.rewind();\n            metaDataUpto = 0;\n            state.termBlockOrd = 0;\n            // TODO: skip this if !hasTerms?  Then postings\n            // impl wouldn't have to write useless 0 byte\n            postingsReader.resetTermsBlock(fieldInfo, state);\n            lastSubFP = -1;\n          } else if (DEBUG) {\n            System.out.println(\"      skip rewind fp=\" + fp + \" fpOrig=\" + fpOrig + \" nextEnt=\" + nextEnt + \" ord=\" + ord);\n          }\n          */\n        }\n\n","sourceOld":"        void rewind() {\n\n          // Force reload:\n          fp = fpOrig;\n          nextEnt = -1;\n          hasTerms = hasTermsOrig;\n          if (isFloor) {\n            floorDataReader.rewind();\n            numFollowFloorBlocks = floorDataReader.readVInt();\n            nextFloorLabel = floorDataReader.readByte() & 0xff;\n          }\n\n          /*\n          //System.out.println(\"rewind\");\n          // Keeps the block loaded, but rewinds its state:\n          if (nextEnt > 0 || fp != fpOrig) {\n            if (DEBUG) {\n              System.out.println(\"      rewind frame ord=\" + ord + \" fpOrig=\" + fpOrig + \" fp=\" + fp + \" hasTerms?=\" + hasTerms + \" isFloor?=\" + isFloor + \" nextEnt=\" + nextEnt + \" prefixLen=\" + prefix);\n            }\n            if (fp != fpOrig) {\n              fp = fpOrig;\n              nextEnt = -1;\n            } else {\n              nextEnt = 0;\n            }\n            hasTerms = hasTermsOrig;\n            if (isFloor) {\n              floorDataReader.rewind();\n              numFollowFloorBlocks = floorDataReader.readVInt();\n              nextFloorLabel = floorDataReader.readByte() & 0xff;\n            }\n            assert suffixBytes != null;\n            suffixesReader.rewind();\n            assert statBytes != null;\n            statsReader.rewind();\n            metaDataUpto = 0;\n            state.termBlockOrd = 0;\n            // TODO: skip this if !hasTerms?  Then postings\n            // impl wouldn't have to write useless 0 byte\n            postingsReader.resetTermsBlock(fieldInfo, state);\n            lastSubFP = -1;\n          } else if (DEBUG) {\n            System.out.println(\"      skip rewind fp=\" + fp + \" fpOrig=\" + fpOrig + \" nextEnt=\" + nextEnt + \" ord=\" + ord);\n          }\n          */\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum.Frame#rewind().mjava","sourceNew":null,"sourceOld":"        void rewind() {\n\n          // Force reload:\n          fp = fpOrig;\n          nextEnt = -1;\n          hasTerms = hasTermsOrig;\n          if (isFloor) {\n            floorDataReader.rewind();\n            numFollowFloorBlocks = floorDataReader.readVInt();\n            nextFloorLabel = floorDataReader.readByte() & 0xff;\n          }\n\n          /*\n          //System.out.println(\"rewind\");\n          // Keeps the block loaded, but rewinds its state:\n          if (nextEnt > 0 || fp != fpOrig) {\n            if (DEBUG) {\n              System.out.println(\"      rewind frame ord=\" + ord + \" fpOrig=\" + fpOrig + \" fp=\" + fp + \" hasTerms?=\" + hasTerms + \" isFloor?=\" + isFloor + \" nextEnt=\" + nextEnt + \" prefixLen=\" + prefix);\n            }\n            if (fp != fpOrig) {\n              fp = fpOrig;\n              nextEnt = -1;\n            } else {\n              nextEnt = 0;\n            }\n            hasTerms = hasTermsOrig;\n            if (isFloor) {\n              floorDataReader.rewind();\n              numFollowFloorBlocks = floorDataReader.readVInt();\n              nextFloorLabel = floorDataReader.readByte() & 0xff;\n            }\n            assert suffixBytes != null;\n            suffixesReader.rewind();\n            assert statBytes != null;\n            statsReader.rewind();\n            metaDataUpto = 0;\n            state.termBlockOrd = 0;\n            // TODO: skip this if !hasTerms?  Then postings\n            // impl wouldn't have to write useless 0 byte\n            postingsReader.resetTermsBlock(fieldInfo, state);\n            lastSubFP = -1;\n          } else if (DEBUG) {\n            System.out.println(\"      skip rewind fp=\" + fp + \" fpOrig=\" + fpOrig + \" nextEnt=\" + nextEnt + \" ord=\" + ord);\n          }\n          */\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d637064d608752565d4f9f41b2497dfdfdde50e":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","5ad80176d91a6f70fe93880e43dfd697dc4e63ed"],"5ad80176d91a6f70fe93880e43dfd697dc4e63ed":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d637064d608752565d4f9f41b2497dfdfdde50e"]},"commit2Childs":{"4d637064d608752565d4f9f41b2497dfdfdde50e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ad80176d91a6f70fe93880e43dfd697dc4e63ed":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["4d637064d608752565d4f9f41b2497dfdfdde50e","5ad80176d91a6f70fe93880e43dfd697dc4e63ed","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}