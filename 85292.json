{"path":"solr/core/src/java/org/apache/solr/metrics/reporters/jmx/JmxMetricsReporter.JmxListener#onGaugeAdded(String,Gauge[#]).mjava","commits":[{"id":"122c889ac8944e19f984ba4306b02a8742e914a7","date":1502707353,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/reporters/jmx/JmxMetricsReporter.JmxListener#onGaugeAdded(String,Gauge[#]).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void onGaugeAdded(String name, Gauge<?> gauge) {\n      try {\n        if (filter.matches(name, gauge)) {\n          final ObjectName objectName = createName(\"gauges\", name);\n          if (gauge instanceof MetricsMap) {\n            ((MetricsMap)gauge).setAttribute(new Attribute(INSTANCE_TAG, tag));\n            registerMBean(gauge, objectName);\n          } else {\n            registerMBean(new JmxGauge(gauge, objectName, tag), objectName);\n          }\n        }\n      } catch (InstanceAlreadyExistsException e) {\n        LOG.debug(\"Unable to register gauge\", e);\n      } catch (JMException e) {\n        LOG.warn(\"Unable to register gauge\", e);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["14186a8e0aca82538d88e8b763f50b03dffe799b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c00aac053fdd75193eb8b6d45b64c26c3b586d5b","date":1503143818,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/metrics/reporters/jmx/JmxMetricsReporter.JmxListener#onGaugeAdded(String,Gauge[#]).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void onGaugeAdded(String name, Gauge<?> gauge) {\n      try {\n        if (filter.matches(name, gauge)) {\n          final ObjectName objectName = createName(\"gauges\", name);\n          if (gauge instanceof MetricsMap) {\n            ((MetricsMap)gauge).setAttribute(new Attribute(INSTANCE_TAG, tag));\n            registerMBean(gauge, objectName);\n          } else {\n            registerMBean(new JmxGauge(gauge, objectName, tag), objectName);\n          }\n        }\n      } catch (InstanceAlreadyExistsException e) {\n        LOG.debug(\"Unable to register gauge\", e);\n      } catch (JMException e) {\n        LOG.warn(\"Unable to register gauge\", e);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/reporters/jmx/JmxMetricsReporter.JmxListener#onGaugeAdded(String,Gauge[#]).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/reporters/jmx/JmxMetricsReporter.JmxListener#onGaugeAdded(String,Gauge[#]).mjava","sourceNew":"    @Override\n    public void onGaugeAdded(String name, Gauge<?> gauge) {\n      try {\n        if (filter.matches(name, gauge)) {\n          final ObjectName objectName = createName(\"gauges\", name);\n          if (gauge instanceof MetricsMap) {\n            ((MetricsMap)gauge).setAttribute(new Attribute(INSTANCE_TAG, tag));\n            registerMBean(gauge, objectName);\n          } else {\n            registerMBean(new JmxGauge(gauge, objectName, tag), objectName);\n          }\n        }\n      } catch (InstanceAlreadyExistsException e) {\n        log.debug(\"Unable to register gauge\", e);\n      } catch (JMException e) {\n        log.warn(\"Unable to register gauge\", e);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void onGaugeAdded(String name, Gauge<?> gauge) {\n      try {\n        if (filter.matches(name, gauge)) {\n          final ObjectName objectName = createName(\"gauges\", name);\n          if (gauge instanceof MetricsMap) {\n            ((MetricsMap)gauge).setAttribute(new Attribute(INSTANCE_TAG, tag));\n            registerMBean(gauge, objectName);\n          } else {\n            registerMBean(new JmxGauge(gauge, objectName, tag), objectName);\n          }\n        }\n      } catch (InstanceAlreadyExistsException e) {\n        LOG.debug(\"Unable to register gauge\", e);\n      } catch (JMException e) {\n        LOG.warn(\"Unable to register gauge\", e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"14186a8e0aca82538d88e8b763f50b03dffe799b","date":1537191196,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/reporters/jmx/JmxMetricsReporter.JmxListener#onGaugeAdded(String,Gauge[#]).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/reporters/jmx/JmxMetricsReporter.JmxListener#onGaugeAdded(String,Gauge[#]).mjava","sourceNew":"    @Override\n    public void onGaugeAdded(String name, Gauge<?> gauge) {\n      try {\n        if (filter.matches(name, gauge)) {\n          final ObjectName objectName = createName(\"gauges\", name);\n          if (gauge instanceof SolrMetricManager.GaugeWrapper &&\n              ((SolrMetricManager.GaugeWrapper)gauge).getGauge() instanceof MetricsMap) {\n            MetricsMap mm = (MetricsMap)((SolrMetricManager.GaugeWrapper)gauge).getGauge();\n            mm.setAttribute(new Attribute(INSTANCE_TAG, tag));\n            // don't wrap it in a JmxGauge, it already supports all necessary JMX attributes\n            registerMBean(mm, objectName);\n          } else {\n            registerMBean(new JmxGauge(gauge, objectName, tag), objectName);\n          }\n        }\n      } catch (InstanceAlreadyExistsException e) {\n        log.debug(\"Unable to register gauge\", e);\n      } catch (JMException e) {\n        log.warn(\"Unable to register gauge\", e);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void onGaugeAdded(String name, Gauge<?> gauge) {\n      try {\n        if (filter.matches(name, gauge)) {\n          final ObjectName objectName = createName(\"gauges\", name);\n          if (gauge instanceof MetricsMap) {\n            ((MetricsMap)gauge).setAttribute(new Attribute(INSTANCE_TAG, tag));\n            registerMBean(gauge, objectName);\n          } else {\n            registerMBean(new JmxGauge(gauge, objectName, tag), objectName);\n          }\n        }\n      } catch (InstanceAlreadyExistsException e) {\n        log.debug(\"Unable to register gauge\", e);\n      } catch (JMException e) {\n        log.warn(\"Unable to register gauge\", e);\n      }\n    }\n\n","bugFix":["122c889ac8944e19f984ba4306b02a8742e914a7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"14186a8e0aca82538d88e8b763f50b03dffe799b":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"c00aac053fdd75193eb8b6d45b64c26c3b586d5b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","122c889ac8944e19f984ba4306b02a8742e914a7"],"122c889ac8944e19f984ba4306b02a8742e914a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["14186a8e0aca82538d88e8b763f50b03dffe799b"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["122c889ac8944e19f984ba4306b02a8742e914a7"]},"commit2Childs":{"14186a8e0aca82538d88e8b763f50b03dffe799b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c00aac053fdd75193eb8b6d45b64c26c3b586d5b":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c00aac053fdd75193eb8b6d45b64c26c3b586d5b","122c889ac8944e19f984ba4306b02a8742e914a7"],"122c889ac8944e19f984ba4306b02a8742e914a7":["c00aac053fdd75193eb8b6d45b64c26c3b586d5b","e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["14186a8e0aca82538d88e8b763f50b03dffe799b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c00aac053fdd75193eb8b6d45b64c26c3b586d5b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}