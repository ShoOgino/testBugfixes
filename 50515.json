{"path":"lucene/src/test/org/apache/lucene/util/LuceneJUnitResultFormatter#formatError(String,Test,Throwable).mjava","commits":[{"id":"7ef42f5d49d3a54e82653530696f6fff0eb81b5b","date":1269640557,"type":2,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneJUnitResultFormatter#formatError(String,Test,Throwable).mjava","pathOld":"solr/src/test/org/apache/solr/SolrJUnitResultFormatter#formatError(String,Test,Throwable).mjava","sourceNew":"  /**\n   * Format an error and print it.\n   * @param type the type of error\n   * @param test the test that failed\n   * @param error the exception that the test threw\n   */\n  protected synchronized void formatError(String type, Test test,\n      Throwable error) {\n    if (test != null) {\n      endTest(test);\n    }\n    \n    sb.append(formatTest(test) + type);\n    sb.append(StringUtils.LINE_SEP);\n    sb.append(error.getMessage());\n    sb.append(StringUtils.LINE_SEP);\n    String strace = JUnitTestRunner.getFilteredTrace(error);\n    sb.append(strace);\n    sb.append(StringUtils.LINE_SEP);\n    sb.append(StringUtils.LINE_SEP);\n  }\n\n","sourceOld":"  /**\n   * Format an error and print it.\n   * @param type the type of error\n   * @param test the test that failed\n   * @param error the exception that the test threw\n   */\n  protected synchronized void formatError(String type, Test test,\n      Throwable error) {\n    if (test != null) {\n      endTest(test);\n    }\n    \n    sb.append(formatTest(test) + type);\n    sb.append(StringUtils.LINE_SEP);\n    sb.append(error.getMessage());\n    sb.append(StringUtils.LINE_SEP);\n    String strace = JUnitTestRunner.getFilteredTrace(error);\n    sb.append(strace);\n    sb.append(StringUtils.LINE_SEP);\n    sb.append(StringUtils.LINE_SEP);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"caf652eb8fee0d4f3a19aef43ca31ec6663b4cb8","date":1291411131,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneJUnitResultFormatter#formatError(String,Test,Throwable).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneJUnitResultFormatter#formatError(String,Test,Throwable).mjava","sourceNew":"  /**\n   * Format an error and print it.\n   * @param type the type of error\n   * @param test the test that failed\n   * @param error the exception that the test threw\n   */\n  protected synchronized void formatError(String type, Test test,\n      Throwable error) {\n    if (test != null) {\n      endTest(test);\n    }\n    \n    append(formatTest(test) + type);\n    append(StringUtils.LINE_SEP);\n    append(error.getMessage());\n    append(StringUtils.LINE_SEP);\n    String strace = JUnitTestRunner.getFilteredTrace(error);\n    append(strace);\n    append(StringUtils.LINE_SEP);\n    append(StringUtils.LINE_SEP);\n  }\n\n","sourceOld":"  /**\n   * Format an error and print it.\n   * @param type the type of error\n   * @param test the test that failed\n   * @param error the exception that the test threw\n   */\n  protected synchronized void formatError(String type, Test test,\n      Throwable error) {\n    if (test != null) {\n      endTest(test);\n    }\n    \n    sb.append(formatTest(test) + type);\n    sb.append(StringUtils.LINE_SEP);\n    sb.append(error.getMessage());\n    sb.append(StringUtils.LINE_SEP);\n    String strace = JUnitTestRunner.getFilteredTrace(error);\n    sb.append(strace);\n    sb.append(StringUtils.LINE_SEP);\n    sb.append(StringUtils.LINE_SEP);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a69e5860d014751cc9329dfeb441a6d8fd1ed8e","date":1291833341,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneJUnitResultFormatter#formatError(String,Test,Throwable).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneJUnitResultFormatter#formatError(String,Test,Throwable).mjava","sourceNew":"  /**\n   * Format an error and print it.\n   * @param type the type of error\n   * @param test the test that failed\n   * @param error the exception that the test threw\n   */\n  protected synchronized void formatError(String type, Test test,\n      Throwable error) {\n    if (test != null) {\n      endTest(test);\n    }\n    \n    append(formatTest(test) + type);\n    append(StringUtils.LINE_SEP);\n    append(error.getMessage());\n    append(StringUtils.LINE_SEP);\n    String strace = JUnitTestRunner.getFilteredTrace(error);\n    append(strace);\n    append(StringUtils.LINE_SEP);\n    append(StringUtils.LINE_SEP);\n  }\n\n","sourceOld":"  /**\n   * Format an error and print it.\n   * @param type the type of error\n   * @param test the test that failed\n   * @param error the exception that the test threw\n   */\n  protected synchronized void formatError(String type, Test test,\n      Throwable error) {\n    if (test != null) {\n      endTest(test);\n    }\n    \n    sb.append(formatTest(test) + type);\n    sb.append(StringUtils.LINE_SEP);\n    sb.append(error.getMessage());\n    sb.append(StringUtils.LINE_SEP);\n    String strace = JUnitTestRunner.getFilteredTrace(error);\n    sb.append(strace);\n    sb.append(StringUtils.LINE_SEP);\n    sb.append(StringUtils.LINE_SEP);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneJUnitResultFormatter#formatError(String,Test,Throwable).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneJUnitResultFormatter#formatError(String,Test,Throwable).mjava","sourceNew":"  /**\n   * Format an error and print it.\n   * @param type the type of error\n   * @param test the test that failed\n   * @param error the exception that the test threw\n   */\n  protected synchronized void formatError(String type, Test test,\n      Throwable error) {\n    if (test != null) {\n      endTest(test);\n    }\n    \n    append(formatTest(test) + type);\n    append(StringUtils.LINE_SEP);\n    append(error.getMessage());\n    append(StringUtils.LINE_SEP);\n    String strace = JUnitTestRunner.getFilteredTrace(error);\n    append(strace);\n    append(StringUtils.LINE_SEP);\n    append(StringUtils.LINE_SEP);\n  }\n\n","sourceOld":"  /**\n   * Format an error and print it.\n   * @param type the type of error\n   * @param test the test that failed\n   * @param error the exception that the test threw\n   */\n  protected synchronized void formatError(String type, Test test,\n      Throwable error) {\n    if (test != null) {\n      endTest(test);\n    }\n    \n    sb.append(formatTest(test) + type);\n    sb.append(StringUtils.LINE_SEP);\n    sb.append(error.getMessage());\n    sb.append(StringUtils.LINE_SEP);\n    String strace = JUnitTestRunner.getFilteredTrace(error);\n    sb.append(strace);\n    sb.append(StringUtils.LINE_SEP);\n    sb.append(StringUtils.LINE_SEP);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneJUnitResultFormatter#formatError(String,Test,Throwable).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneJUnitResultFormatter#formatError(String,Test,Throwable).mjava","sourceNew":"  /**\n   * Format an error and print it.\n   * @param type the type of error\n   * @param test the test that failed\n   * @param error the exception that the test threw\n   */\n  protected synchronized void formatError(String type, Test test,\n      Throwable error) {\n    if (test != null) {\n      endTest(test);\n    }\n    \n    append(formatTest(test) + type);\n    append(StringUtils.LINE_SEP);\n    append(error.getMessage());\n    append(StringUtils.LINE_SEP);\n    String strace = JUnitTestRunner.getFilteredTrace(error);\n    append(strace);\n    append(StringUtils.LINE_SEP);\n    append(StringUtils.LINE_SEP);\n  }\n\n","sourceOld":"  /**\n   * Format an error and print it.\n   * @param type the type of error\n   * @param test the test that failed\n   * @param error the exception that the test threw\n   */\n  protected synchronized void formatError(String type, Test test,\n      Throwable error) {\n    if (test != null) {\n      endTest(test);\n    }\n    \n    append(formatTest(test) + type);\n    append(StringUtils.LINE_SEP);\n    append(error.getMessage());\n    append(StringUtils.LINE_SEP);\n    String strace = JUnitTestRunner.getFilteredTrace(error);\n    append(strace);\n    append(StringUtils.LINE_SEP);\n    append(StringUtils.LINE_SEP);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneJUnitResultFormatter#formatError(String,Test,Throwable).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneJUnitResultFormatter#formatError(String,Test,Throwable).mjava","sourceNew":"  /**\n   * Format an error and print it.\n   * @param type the type of error\n   * @param test the test that failed\n   * @param error the exception that the test threw\n   */\n  protected synchronized void formatError(String type, Test test,\n      Throwable error) {\n    if (test != null) {\n      endTest(test);\n    }\n    \n    append(formatTest(test) + type);\n    append(StringUtils.LINE_SEP);\n    append(error.getMessage());\n    append(StringUtils.LINE_SEP);\n    String strace = JUnitTestRunner.getFilteredTrace(error);\n    append(strace);\n    append(StringUtils.LINE_SEP);\n    append(StringUtils.LINE_SEP);\n  }\n\n","sourceOld":"  /**\n   * Format an error and print it.\n   * @param type the type of error\n   * @param test the test that failed\n   * @param error the exception that the test threw\n   */\n  protected synchronized void formatError(String type, Test test,\n      Throwable error) {\n    if (test != null) {\n      endTest(test);\n    }\n    \n    append(formatTest(test) + type);\n    append(StringUtils.LINE_SEP);\n    append(error.getMessage());\n    append(StringUtils.LINE_SEP);\n    String strace = JUnitTestRunner.getFilteredTrace(error);\n    append(strace);\n    append(StringUtils.LINE_SEP);\n    append(StringUtils.LINE_SEP);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneJUnitResultFormatter#formatError(String,Test,Throwable).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneJUnitResultFormatter#formatError(String,Test,Throwable).mjava","sourceNew":"  /**\n   * Format an error and print it.\n   * @param type the type of error\n   * @param test the test that failed\n   * @param error the exception that the test threw\n   */\n  protected synchronized void formatError(String type, Test test,\n      Throwable error) {\n    if (test != null) {\n      endTest(test);\n    }\n    \n    append(formatTest(test) + type);\n    append(StringUtils.LINE_SEP);\n    append(error.getMessage());\n    append(StringUtils.LINE_SEP);\n    String strace = JUnitTestRunner.getFilteredTrace(error);\n    append(strace);\n    append(StringUtils.LINE_SEP);\n    append(StringUtils.LINE_SEP);\n  }\n\n","sourceOld":"  /**\n   * Format an error and print it.\n   * @param type the type of error\n   * @param test the test that failed\n   * @param error the exception that the test threw\n   */\n  protected synchronized void formatError(String type, Test test,\n      Throwable error) {\n    if (test != null) {\n      endTest(test);\n    }\n    \n    append(formatTest(test) + type);\n    append(StringUtils.LINE_SEP);\n    append(error.getMessage());\n    append(StringUtils.LINE_SEP);\n    String strace = JUnitTestRunner.getFilteredTrace(error);\n    append(strace);\n    append(StringUtils.LINE_SEP);\n    append(StringUtils.LINE_SEP);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"caf652eb8fee0d4f3a19aef43ca31ec6663b4cb8":["7ef42f5d49d3a54e82653530696f6fff0eb81b5b"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["4a69e5860d014751cc9329dfeb441a6d8fd1ed8e","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7ef42f5d49d3a54e82653530696f6fff0eb81b5b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4a69e5860d014751cc9329dfeb441a6d8fd1ed8e":["7ef42f5d49d3a54e82653530696f6fff0eb81b5b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["7ef42f5d49d3a54e82653530696f6fff0eb81b5b","caf652eb8fee0d4f3a19aef43ca31ec6663b4cb8"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["caf652eb8fee0d4f3a19aef43ca31ec6663b4cb8"]},"commit2Childs":{"caf652eb8fee0d4f3a19aef43ca31ec6663b4cb8":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7ef42f5d49d3a54e82653530696f6fff0eb81b5b"],"7ef42f5d49d3a54e82653530696f6fff0eb81b5b":["caf652eb8fee0d4f3a19aef43ca31ec6663b4cb8","4a69e5860d014751cc9329dfeb441a6d8fd1ed8e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"4a69e5860d014751cc9329dfeb441a6d8fd1ed8e":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}