{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest#testCopyFieldWithMaxCharsAccuracy().mjava","commits":[{"id":"c6ff97491f7791aa98e90d71c4c7fee58688c37b","date":1434817448,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest#testCopyFieldWithMaxCharsAccuracy().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCopyFieldWithMaxCharsAccuracy() throws Exception {\n    SchemaRequest.CopyFields copyFieldsSchemaRequest = new SchemaRequest.CopyFields();\n    SchemaResponse.CopyFieldsResponse initialCopyFieldsResponse = copyFieldsSchemaRequest.process(getSolrClient());\n    List<Map<String, Object>> initialCopyFieldsAttributes = initialCopyFieldsResponse.getCopyFields();\n\n    String srcFieldName = \"copyfield\";\n    String destFieldName1 = \"destField1\", destFieldName2 = \"destField2\";\n    createStoredStringField(srcFieldName, getSolrClient());\n    createStoredStringField(destFieldName1, getSolrClient());\n    createStoredStringField(destFieldName2, getSolrClient());\n\n    Integer maxChars = 200;\n    SchemaRequest.AddCopyField addCopyFieldRequest =\n        new SchemaRequest.AddCopyField(srcFieldName,\n            Arrays.asList(destFieldName1, destFieldName2), maxChars);\n    SchemaResponse.UpdateResponse addCopyFieldResponse = addCopyFieldRequest.process(getSolrClient());\n    assertValidSchemaResponse(addCopyFieldResponse);\n\n    SchemaResponse.CopyFieldsResponse currentCopyFieldsResponse = copyFieldsSchemaRequest.process(getSolrClient());\n    List<Map<String, Object>> currentCopyFields = currentCopyFieldsResponse.getCopyFields();\n    assertEquals(initialCopyFieldsAttributes.size() + 2, currentCopyFields.size());\n    for (Map<String, Object> currentCopyField : currentCopyFields) {\n      if (srcFieldName.equals(currentCopyField.get(\"source\"))) {\n        String currentDestFieldName = (String) currentCopyField.get(\"dest\");\n        int currentMaxChars = (Integer) currentCopyField.get(\"maxChars\");\n        assertThat(currentDestFieldName, anyOf(is(equalTo(destFieldName1)), is(equalTo(destFieldName2))));\n        assertTrue(maxChars == currentMaxChars);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c6ff97491f7791aa98e90d71c4c7fee58688c37b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c6ff97491f7791aa98e90d71c4c7fee58688c37b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c6ff97491f7791aa98e90d71c4c7fee58688c37b"],"c6ff97491f7791aa98e90d71c4c7fee58688c37b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}