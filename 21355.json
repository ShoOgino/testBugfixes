{"path":"lucene/backwards/src/test/org/apache/lucene/util/TestPriorityQueue#testInsertWithOverflow().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/util/TestPriorityQueue#testInsertWithOverflow().mjava","pathOld":"backwards/src/test/org/apache/lucene/util/TestPriorityQueue#testInsertWithOverflow().mjava","sourceNew":"    public void testInsertWithOverflow() {\n      int size = 4;\n      PriorityQueue<Integer> pq = new IntegerQueue(size);\n      Integer i1 = 2;\n      Integer i2 = 3;\n      Integer i3 = 1;\n      Integer i4 = 5;\n      Integer i5 = 7;\n      Integer i6 = 1;\n      \n      assertNull(pq.insertWithOverflow(i1));\n      assertNull(pq.insertWithOverflow(i2));\n      assertNull(pq.insertWithOverflow(i3));\n      assertNull(pq.insertWithOverflow(i4));\n      assertTrue(pq.insertWithOverflow(i5) == i3); // i3 should have been dropped\n      assertTrue(pq.insertWithOverflow(i6) == i6); // i6 should not have been inserted\n      assertEquals(size, pq.size());\n      assertEquals((Integer) 2, pq.top());\n    }\n\n","sourceOld":"    public void testInsertWithOverflow() {\n      int size = 4;\n      PriorityQueue<Integer> pq = new IntegerQueue(size);\n      Integer i1 = 2;\n      Integer i2 = 3;\n      Integer i3 = 1;\n      Integer i4 = 5;\n      Integer i5 = 7;\n      Integer i6 = 1;\n      \n      assertNull(pq.insertWithOverflow(i1));\n      assertNull(pq.insertWithOverflow(i2));\n      assertNull(pq.insertWithOverflow(i3));\n      assertNull(pq.insertWithOverflow(i4));\n      assertTrue(pq.insertWithOverflow(i5) == i3); // i3 should have been dropped\n      assertTrue(pq.insertWithOverflow(i6) == i6); // i6 should not have been inserted\n      assertEquals(size, pq.size());\n      assertEquals((Integer) 2, pq.top());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/util/TestPriorityQueue#testInsertWithOverflow().mjava","sourceNew":null,"sourceOld":"    public void testInsertWithOverflow() {\n      int size = 4;\n      PriorityQueue<Integer> pq = new IntegerQueue(size);\n      Integer i1 = 2;\n      Integer i2 = 3;\n      Integer i3 = 1;\n      Integer i4 = 5;\n      Integer i5 = 7;\n      Integer i6 = 1;\n      \n      assertNull(pq.insertWithOverflow(i1));\n      assertNull(pq.insertWithOverflow(i2));\n      assertNull(pq.insertWithOverflow(i3));\n      assertNull(pq.insertWithOverflow(i4));\n      assertTrue(pq.insertWithOverflow(i5) == i3); // i3 should have been dropped\n      assertTrue(pq.insertWithOverflow(i6) == i6); // i6 should not have been inserted\n      assertEquals(size, pq.size());\n      assertEquals((Integer) 2, pq.top());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}