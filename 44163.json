{"path":"src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery#setUp().mjava","commits":[{"id":"5426a570e28de2804e59c68509fe71ab7f43afe5","date":1175086695,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery#setUp().mjava","pathOld":"/dev/null","sourceNew":"  protected void setUp() throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    //writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d6b0d3878b50401a76f5239a2c4a8391fced796f","290c401c31db375e771805c3ba7ac5f64c7370dc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"32c97797222c63ae0cce3322818565bdb8d2b8c9","date":1177418982,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery#setUp().mjava","sourceNew":"  protected void setUp() throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      doc.add(new Field(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    //writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  protected void setUp() throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    //writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d6b0d3878b50401a76f5239a2c4a8391fced796f","date":1189270648,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery#setUp().mjava","sourceNew":"  protected void setUp() throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = new Field(\"noPayLoad\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED);\n      noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      doc.add(new Field(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  protected void setUp() throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      doc.add(new Field(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    //writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":["5426a570e28de2804e59c68509fe71ab7f43afe5"],"bugIntro":["b6b238af60d31e039294cb26e9e927546a619206"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"290c401c31db375e771805c3ba7ac5f64c7370dc","date":1192034795,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = new Field(\"noPayLoad\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED);\n      noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      doc.add(new Field(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  protected void setUp() throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = new Field(\"noPayLoad\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED);\n      noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      doc.add(new Field(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":["5426a570e28de2804e59c68509fe71ab7f43afe5"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0018e7a0579df5d3de71d0bd878322a7abef04d9","date":1202242049,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = new Field(\"noPayLoad\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED);\n      noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      doc.add(new Field(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = new Field(\"noPayLoad\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED);\n      noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      doc.add(new Field(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b6b238af60d31e039294cb26e9e927546a619206","date":1213244110,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = new Field(\"noPayLoad\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      doc.add(new Field(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = new Field(\"noPayLoad\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED);\n      noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      doc.add(new Field(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":["d6b0d3878b50401a76f5239a2c4a8391fced796f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd5947db4de866f035b932f219674c03562d904e","date":1219248396,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = new Field(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      doc.add(new Field(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = new Field(\"noPayLoad\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      doc.add(new Field(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = new Field(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = new Field(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      doc.add(new Field(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery#setUp().mjava","sourceNew":null,"sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = new Field(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery#setUp().mjava","sourceNew":null,"sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer\n            = new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setSimilarity(similarity);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = new Field(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b6b238af60d31e039294cb26e9e927546a619206":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"d6b0d3878b50401a76f5239a2c4a8391fced796f":["32c97797222c63ae0cce3322818565bdb8d2b8c9"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"290c401c31db375e771805c3ba7ac5f64c7370dc":["d6b0d3878b50401a76f5239a2c4a8391fced796f"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["fd5947db4de866f035b932f219674c03562d904e"],"fd5947db4de866f035b932f219674c03562d904e":["b6b238af60d31e039294cb26e9e927546a619206"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"5426a570e28de2804e59c68509fe71ab7f43afe5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0a046c0c310bc77931fc8441bd920053b607dd14"],"32c97797222c63ae0cce3322818565bdb8d2b8c9":["5426a570e28de2804e59c68509fe71ab7f43afe5"]},"commit2Childs":{"b6b238af60d31e039294cb26e9e927546a619206":["fd5947db4de866f035b932f219674c03562d904e"],"d6b0d3878b50401a76f5239a2c4a8391fced796f":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5426a570e28de2804e59c68509fe71ab7f43afe5"],"0a046c0c310bc77931fc8441bd920053b607dd14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"290c401c31db375e771805c3ba7ac5f64c7370dc":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","0a046c0c310bc77931fc8441bd920053b607dd14"],"fd5947db4de866f035b932f219674c03562d904e":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["b6b238af60d31e039294cb26e9e927546a619206"],"5426a570e28de2804e59c68509fe71ab7f43afe5":["32c97797222c63ae0cce3322818565bdb8d2b8c9"],"32c97797222c63ae0cce3322818565bdb8d2b8c9":["d6b0d3878b50401a76f5239a2c4a8391fced796f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}