{"path":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/DistanceUtils#latLonCornerDegs(double,double,double,double[],boolean,double).mjava","commits":[{"id":"5f900d5ce814fc22ea498d3303d1f833f5bf320c","date":1278720761,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/DistanceUtils#latLonCornerDegs(double,double,double,double[],boolean,double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param latCenter  In degrees\n   * @param lonCenter  In degrees\n   * @param distance The distance\n   * @param result A preallocated array to hold the results.  If null, a new one is constructed.\n   * @param upperRight If true, calculate the upper right corner, else the lower left\n   * @param radius The radius of the sphere to use.\n   * @return The Lat/Lon in degrees\n   *\n   * @see #latLonCorner(double, double, double, double[], boolean, double)\n   */\n  public static double[] latLonCornerDegs(double latCenter, double lonCenter,\n                                          double distance, double [] result,\n                                          boolean upperRight, double radius) {\n    result = latLonCorner(latCenter * DEGREES_TO_RADIANS,\n            lonCenter * DEGREES_TO_RADIANS, distance, result, upperRight, radius);\n    result[0] = result[0] * RADIANS_TO_DEGREES;\n    result[1] = result[1] * RADIANS_TO_DEGREES;\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"459be89020f9023e3b60066066a892c7edb5de58","date":1279657074,"type":5,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/DistanceUtils#latLonCornerDegs(double,double,double,double[],boolean,double).mjava","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/DistanceUtils#latLonCornerDegs(double,double,double,double[],boolean,double).mjava","sourceNew":"  /**\n   * @param latCenter  In degrees\n   * @param lonCenter  In degrees\n   * @param distance The distance\n   * @param result A preallocated array to hold the results.  If null, a new one is constructed.\n   * @param upperRight If true, calculate the upper right corner, else the lower left\n   * @param radius The radius of the sphere to use.\n   * @return The Lat/Lon in degrees\n   *\n   * @see #latLonCorner(double, double, double, double[], boolean, double)\n   */\n  public static double[] latLonCornerDegs(double latCenter, double lonCenter,\n                                          double distance, double [] result,\n                                          boolean upperRight, double radius) {\n    result = latLonCorner(latCenter * DEGREES_TO_RADIANS,\n            lonCenter * DEGREES_TO_RADIANS, distance, result, upperRight, radius);\n    result[0] = result[0] * RADIANS_TO_DEGREES;\n    result[1] = result[1] * RADIANS_TO_DEGREES;\n    return result;\n  }\n\n","sourceOld":"  /**\n   * @param latCenter  In degrees\n   * @param lonCenter  In degrees\n   * @param distance The distance\n   * @param result A preallocated array to hold the results.  If null, a new one is constructed.\n   * @param upperRight If true, calculate the upper right corner, else the lower left\n   * @param radius The radius of the sphere to use.\n   * @return The Lat/Lon in degrees\n   *\n   * @see #latLonCorner(double, double, double, double[], boolean, double)\n   */\n  public static double[] latLonCornerDegs(double latCenter, double lonCenter,\n                                          double distance, double [] result,\n                                          boolean upperRight, double radius) {\n    result = latLonCorner(latCenter * DEGREES_TO_RADIANS,\n            lonCenter * DEGREES_TO_RADIANS, distance, result, upperRight, radius);\n    result[0] = result[0] * RADIANS_TO_DEGREES;\n    result[1] = result[1] * RADIANS_TO_DEGREES;\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5f900d5ce814fc22ea498d3303d1f833f5bf320c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"459be89020f9023e3b60066066a892c7edb5de58":["5f900d5ce814fc22ea498d3303d1f833f5bf320c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["459be89020f9023e3b60066066a892c7edb5de58"]},"commit2Childs":{"5f900d5ce814fc22ea498d3303d1f833f5bf320c":["459be89020f9023e3b60066066a892c7edb5de58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f900d5ce814fc22ea498d3303d1f833f5bf320c"],"459be89020f9023e3b60066066a892c7edb5de58":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}