{"path":"src/java/org/apache/solr/common/util/XML#escape(String,Writer,String[]).mjava","commits":[{"id":"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb","date":1181791578,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/common/util/XML#escape(String,Writer,String[]).mjava","pathOld":"src/java/org/apache/solr/util/XML#escape(String,Writer,String[]).mjava","sourceNew":"  private static void escape(String str, Writer out, String[] escapes) throws IOException {\n    int start=0;\n    // \"n\" was used for counting the chars added to out...\n    // removed cause it wasn't really useful so far.\n    // int n=0;\n\n    for (int i=start; i<str.length(); i++) {\n      char ch = str.charAt(i);\n      // since I already received the char, what if I put it into\n      // a char array and wrote that to the stream instead of the\n      // string? (would cause extra GC though)\n      String subst=null;\n      if (ch<escapes.length) {\n        subst=escapes[ch];\n      }\n      if (subst != null) {\n        if (start<i) {\n          out.write(str.substring(start,i));\n          // write(str,off,len) causes problems for Jetty with chars > 127\n          //out.write(str, start, i-start);\n          // n+=i-start;\n        }\n        out.write(subst);\n        // n+=subst.length();\n        start=i+1;\n      }\n    }\n    if (start==0) {\n      out.write(str);\n      // n += str.length();\n    } else if (start<str.length()) {\n      out.write(str.substring(start));\n      // write(str,off,len) causes problems for Jetty with chars > 127\n      // out.write(str, start, str.length()-start);\n      // n += str.length()-start;\n    }\n    // return n;\n  }\n\n","sourceOld":"  private static void escape(String str, Writer out, String[] escapes) throws IOException {\n    int start=0;\n    // \"n\" was used for counting the chars added to out...\n    // removed cause it wasn't really useful so far.\n    // int n=0;\n\n    for (int i=start; i<str.length(); i++) {\n      char ch = str.charAt(i);\n      // since I already received the char, what if I put it into\n      // a char array and wrote that to the stream instead of the\n      // string? (would cause extra GC though)\n      String subst=null;\n      if (ch<escapes.length) {\n        subst=escapes[ch];\n      }\n      if (subst != null) {\n        if (start<i) {\n          out.write(str.substring(start,i));\n          // write(str,off,len) causes problems for Jetty with chars > 127\n          //out.write(str, start, i-start);\n          // n+=i-start;\n        }\n        out.write(subst);\n        // n+=subst.length();\n        start=i+1;\n      }\n    }\n    if (start==0) {\n      out.write(str);\n      // n += str.length();\n    } else if (start<str.length()) {\n      out.write(str.substring(start));\n      // write(str,off,len) causes problems for Jetty with chars > 127\n      // out.write(str, start, str.length()-start);\n      // n += str.length()-start;\n    }\n    // return n;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c355d9286f784cff62d09cae2d0752fdacb156e","date":1192387134,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/common/util/XML#escape(String,Writer,String[]).mjava","pathOld":"src/java/org/apache/solr/common/util/XML#escape(String,Writer,String[]).mjava","sourceNew":"  private static void escape(String str, Writer out, String[] escapes) throws IOException {\n    for (int i=0; i<str.length(); i++) {\n      char ch = str.charAt(i);\n      if (ch<escapes.length) {\n        String replacement = escapes[ch];\n        if (replacement != null) {\n          out.write(replacement);\n          continue;\n        }\n      }\n      out.write(ch);\n    }\n  }\n\n","sourceOld":"  private static void escape(String str, Writer out, String[] escapes) throws IOException {\n    int start=0;\n    // \"n\" was used for counting the chars added to out...\n    // removed cause it wasn't really useful so far.\n    // int n=0;\n\n    for (int i=start; i<str.length(); i++) {\n      char ch = str.charAt(i);\n      // since I already received the char, what if I put it into\n      // a char array and wrote that to the stream instead of the\n      // string? (would cause extra GC though)\n      String subst=null;\n      if (ch<escapes.length) {\n        subst=escapes[ch];\n      }\n      if (subst != null) {\n        if (start<i) {\n          out.write(str.substring(start,i));\n          // write(str,off,len) causes problems for Jetty with chars > 127\n          //out.write(str, start, i-start);\n          // n+=i-start;\n        }\n        out.write(subst);\n        // n+=subst.length();\n        start=i+1;\n      }\n    }\n    if (start==0) {\n      out.write(str);\n      // n += str.length();\n    } else if (start<str.length()) {\n      out.write(str.substring(start));\n      // write(str,off,len) causes problems for Jetty with chars > 127\n      // out.write(str, start, str.length()-start);\n      // n += str.length()-start;\n    }\n    // return n;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/common/org/apache/solr/common/util/XML#escape(String,Writer,String[]).mjava","pathOld":"src/java/org/apache/solr/common/util/XML#escape(String,Writer,String[]).mjava","sourceNew":"  private static void escape(String str, Writer out, String[] escapes) throws IOException {\n    for (int i=0; i<str.length(); i++) {\n      char ch = str.charAt(i);\n      if (ch<escapes.length) {\n        String replacement = escapes[ch];\n        if (replacement != null) {\n          out.write(replacement);\n          continue;\n        }\n      }\n      out.write(ch);\n    }\n  }\n\n","sourceOld":"  private static void escape(String str, Writer out, String[] escapes) throws IOException {\n    for (int i=0; i<str.length(); i++) {\n      char ch = str.charAt(i);\n      if (ch<escapes.length) {\n        String replacement = escapes[ch];\n        if (replacement != null) {\n          out.write(replacement);\n          continue;\n        }\n      }\n      out.write(ch);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["1c355d9286f784cff62d09cae2d0752fdacb156e"],"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"1c355d9286f784cff62d09cae2d0752fdacb156e":["3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":[],"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb":["1c355d9286f784cff62d09cae2d0752fdacb156e"],"1c355d9286f784cff62d09cae2d0752fdacb156e":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e3602d5eab954caecc726ab136ad580ac1ceb917","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}