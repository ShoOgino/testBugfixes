{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    ((LogMergePolicy) w.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) w.getMergePolicy()).setUseCompoundDocStore(false);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    ((LogMergePolicy) w.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) w.getMergePolicy()).setUseCompoundDocStore(false);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ab99e8c71442b92c320e218141dee04a9b91ce8","date":1269203801,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundDocStore(false);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    ((LogMergePolicy) w.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) w.getMergePolicy()).setUseCompoundDocStore(false);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundDocStore(false);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundDocStore(false);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8dc26bfa5ebbc55b5a04fbec545dfcec647b046b","date":1280297653,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(false);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundDocStore(false);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundDocStore(false);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundDocStore(false);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory(random);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundDocStore(false);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundDocStore(false);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundDocStore(false);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory(random);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundDocStore(false);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundDocStore(false);\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundDocStore(false);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundDocStore(false);\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundDocStore(false);\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(false);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b8414cdacb05e1277df96a30710f570f4251d9a","date":1323040348,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir);\n    IndexReader r2 = (IndexReader) r1.clone();\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir);\n    IndexReader r2 = (IndexReader) r1.clone();\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir);\n    IndexReader r2 = (IndexReader) r1.clone();\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir, false);\n    IndexReader r2 = r1.clone(false);\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef53d1d25057e41eff3dce2a7f3e880a78ed7069","date":1323523707,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#createIndex(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  private Directory createIndex(int no) throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\"+no, \"yes it's stored\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.close();\n    return dir;\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir);\n    IndexReader r2 = (IndexReader) r1.clone();\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","date":1323540308,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#createIndex(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  private Directory createIndex(int no) throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\"+no, \"yes it's stored\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.close();\n    return dir;\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir);\n    IndexReader r2 = (IndexReader) r1.clone();\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["1509f151d7692d84fae414b2b799ac06ba60fcb4","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["3bb13258feba31ab676502787ab2e1779f129b7a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["8dc26bfa5ebbc55b5a04fbec545dfcec647b046b","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"8dc26bfa5ebbc55b5a04fbec545dfcec647b046b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"4b8414cdacb05e1277df96a30710f570f4251d9a":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["4e8cc373c801e54cec75daf9f52792cb4b17f536","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["1509f151d7692d84fae414b2b799ac06ba60fcb4","4b8414cdacb05e1277df96a30710f570f4251d9a"],"ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","ef53d1d25057e41eff3dce2a7f3e880a78ed7069"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"3bb13258feba31ab676502787ab2e1779f129b7a":["132903c28af3aa6f67284b78de91c0f0a99488c2","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ef53d1d25057e41eff3dce2a7f3e880a78ed7069"],"ef53d1d25057e41eff3dce2a7f3e880a78ed7069":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["d572389229127c297dd1fa5ce4758e1cec41e799"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["8dc26bfa5ebbc55b5a04fbec545dfcec647b046b","b21422ff1d1d56499dec481f193b402e5e8def5b"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"8dc26bfa5ebbc55b5a04fbec545dfcec647b046b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"4b8414cdacb05e1277df96a30710f570f4251d9a":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","ef53d1d25057e41eff3dce2a7f3e880a78ed7069"],"ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","4b8414cdacb05e1277df96a30710f570f4251d9a","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"3bb13258feba31ab676502787ab2e1779f129b7a":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","3bb13258feba31ab676502787ab2e1779f129b7a"],"ef53d1d25057e41eff3dce2a7f3e880a78ed7069":["ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}