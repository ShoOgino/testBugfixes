{"path":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testEscapeSolrQueryFunction().mjava","commits":[{"id":"15e2075af5402114e19af81f2bc2e047bb14c430","date":1237882189,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testEscapeSolrQueryFunction().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testEscapeSolrQueryFunction() {\n    final VariableResolverImpl resolver = new VariableResolverImpl();\n    ContextImpl context = new ContextImpl(null, resolver, null, 0, Collections.EMPTY_MAP, null, null);\n    resolver.context = context;\n    Map m= new HashMap();\n    m.put(\"query\",\"c:t\");\n    resolver.addNamespace(\"dataimporter.functions\", EvaluatorBag\n            .getFunctionsNamespace(Collections.EMPTY_LIST, null));\n    resolver.addNamespace(\"e\",m);\n    String s = resolver\n            .replaceTokens(\"${dataimporter.functions.escapeQueryChars(e.query)}\");\n    org.junit.Assert.assertEquals(\"c\\\\:t\", s);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"594d4ee17b3d941ed34827ca6646e378cf7d8d2a","date":1239868870,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testEscapeSolrQueryFunction().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testEscapeSolrQueryFunction().mjava","sourceNew":"  @Test\n  public void testEscapeSolrQueryFunction() {\n    final VariableResolverImpl resolver = new VariableResolverImpl();\n    ContextImpl context = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    resolver.context = context;\n    Map m= new HashMap();\n    m.put(\"query\",\"c:t\");\n    resolver.addNamespace(\"dataimporter.functions\", EvaluatorBag\n            .getFunctionsNamespace(Collections.EMPTY_LIST, null));\n    resolver.addNamespace(\"e\",m);\n    String s = resolver\n            .replaceTokens(\"${dataimporter.functions.escapeQueryChars(e.query)}\");\n    org.junit.Assert.assertEquals(\"c\\\\:t\", s);\n  }\n\n","sourceOld":"  @Test\n  public void testEscapeSolrQueryFunction() {\n    final VariableResolverImpl resolver = new VariableResolverImpl();\n    ContextImpl context = new ContextImpl(null, resolver, null, 0, Collections.EMPTY_MAP, null, null);\n    resolver.context = context;\n    Map m= new HashMap();\n    m.put(\"query\",\"c:t\");\n    resolver.addNamespace(\"dataimporter.functions\", EvaluatorBag\n            .getFunctionsNamespace(Collections.EMPTY_LIST, null));\n    resolver.addNamespace(\"e\",m);\n    String s = resolver\n            .replaceTokens(\"${dataimporter.functions.escapeQueryChars(e.query)}\");\n    org.junit.Assert.assertEquals(\"c\\\\:t\", s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65f4e997b946a4eadce22b758749046a63ba2eff","date":1263282580,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testEscapeSolrQueryFunction().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testEscapeSolrQueryFunction().mjava","sourceNew":"  @Test\n  public void testEscapeSolrQueryFunction() {\n    final VariableResolverImpl resolver = new VariableResolverImpl();\n    ContextImpl context = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      Map m= new HashMap();\n      m.put(\"query\",\"c:t\");\n      resolver.addNamespace(\"dataimporter.functions\", EvaluatorBag\n              .getFunctionsNamespace(Collections.EMPTY_LIST, null));\n      resolver.addNamespace(\"e\",m);\n      String s = resolver\n              .replaceTokens(\"${dataimporter.functions.escapeQueryChars(e.query)}\");\n      org.junit.Assert.assertEquals(\"c\\\\:t\", s);\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testEscapeSolrQueryFunction() {\n    final VariableResolverImpl resolver = new VariableResolverImpl();\n    ContextImpl context = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    resolver.context = context;\n    Map m= new HashMap();\n    m.put(\"query\",\"c:t\");\n    resolver.addNamespace(\"dataimporter.functions\", EvaluatorBag\n            .getFunctionsNamespace(Collections.EMPTY_LIST, null));\n    resolver.addNamespace(\"e\",m);\n    String s = resolver\n            .replaceTokens(\"${dataimporter.functions.escapeQueryChars(e.query)}\");\n    org.junit.Assert.assertEquals(\"c\\\\:t\", s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testEscapeSolrQueryFunction().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testEscapeSolrQueryFunction().mjava","sourceNew":"  @Test\n  public void testEscapeSolrQueryFunction() {\n    final VariableResolverImpl resolver = new VariableResolverImpl();\n    ContextImpl context = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      Map m= new HashMap();\n      m.put(\"query\",\"c:t\");\n      resolver.addNamespace(\"dataimporter.functions\", EvaluatorBag\n              .getFunctionsNamespace(Collections.EMPTY_LIST, null));\n      resolver.addNamespace(\"e\",m);\n      String s = resolver\n              .replaceTokens(\"${dataimporter.functions.escapeQueryChars(e.query)}\");\n      org.junit.Assert.assertEquals(\"c\\\\:t\", s);\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testEscapeSolrQueryFunction() {\n    final VariableResolverImpl resolver = new VariableResolverImpl();\n    ContextImpl context = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      Map m= new HashMap();\n      m.put(\"query\",\"c:t\");\n      resolver.addNamespace(\"dataimporter.functions\", EvaluatorBag\n              .getFunctionsNamespace(Collections.EMPTY_LIST, null));\n      resolver.addNamespace(\"e\",m);\n      String s = resolver\n              .replaceTokens(\"${dataimporter.functions.escapeQueryChars(e.query)}\");\n      org.junit.Assert.assertEquals(\"c\\\\:t\", s);\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"65f4e997b946a4eadce22b758749046a63ba2eff":["594d4ee17b3d941ed34827ca6646e378cf7d8d2a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"15e2075af5402114e19af81f2bc2e047bb14c430":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["65f4e997b946a4eadce22b758749046a63ba2eff"],"594d4ee17b3d941ed34827ca6646e378cf7d8d2a":["15e2075af5402114e19af81f2bc2e047bb14c430"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"65f4e997b946a4eadce22b758749046a63ba2eff":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["15e2075af5402114e19af81f2bc2e047bb14c430"],"15e2075af5402114e19af81f2bc2e047bb14c430":["594d4ee17b3d941ed34827ca6646e378cf7d8d2a"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"594d4ee17b3d941ed34827ca6646e378cf7d8d2a":["65f4e997b946a4eadce22b758749046a63ba2eff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}