{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFlattenGraphFilter#testWTF2().mjava","commits":[{"id":"098528909bb70948871fd7ed865fafb87ed73964","date":1484667487,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFlattenGraphFilter#testWTF2().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestFlattenGraphFilter#testWTF2().mjava","sourceNew":"  /** Same as testWTF1 except the \"wtf\" token comes out later */\n  public void testWTF2() throws Exception {\n\n    // \"wow that's funny\" and \"what the fudge\" are separate side paths, in parallel with \"wtf\", on input:\n    TokenStream in = new CannedTokenStream(0, 12, new Token[] {\n        token(\"what\", 1, 1, 0, 3),\n        token(\"wow\", 0, 3, 0, 3),\n        token(\"wtf\", 0, 5, 0, 3),\n        token(\"the\", 1, 1, 0, 3),\n        token(\"fudge\", 1, 3, 0, 3),\n        token(\"that's\", 1, 1, 0, 3),\n        token(\"funny\", 1, 1, 0, 3),\n        token(\"happened\", 1, 1, 4, 12)\n      });\n\n\n    TokenStream out = new FlattenGraphFilter(in);\n\n    // ... but on output, it's flattened to wtf/what/wow that's/the fudge/funny happened:\n    assertTokenStreamContents(out,\n                              new String[] {\"what\", \"wow\", \"wtf\", \"the\", \"that's\", \"fudge\", \"funny\", \"happened\"},\n                              new int[] {0, 0, 0, 0, 0, 0, 0, 4},\n                              new int[] {3, 3, 3, 3, 3, 3, 3, 12},\n                              new int[] {1, 0, 0, 1, 0, 1, 0, 1},\n                              new int[] {1, 1, 3, 1, 1, 1, 1, 1},\n                              12);\n    \n  }\n\n","sourceOld":"  /** Same as testWTF1 except the \"wtf\" token comes out later */\n  public void testWTF2() throws Exception {\n\n    // \"wow that's funny\" and \"what the fudge\" are separate side paths, in parallel with \"wtf\", on input:\n    TokenStream in = new CannedTokenStream(0, 12, new Token[] {\n        token(\"what\", 1, 1, 0, 3),\n        token(\"wow\", 0, 3, 0, 3),\n        token(\"wtf\", 0, 5, 0, 3),\n        token(\"the\", 1, 1, 0, 3),\n        token(\"fudge\", 1, 3, 0, 3),\n        token(\"that's\", 1, 1, 0, 3),\n        token(\"funny\", 1, 1, 0, 3),\n        token(\"happened\", 1, 1, 4, 12)\n      });\n\n\n    TokenStream out = new FlattenGraphFilter(in);\n\n    // ... but on output, it's flattened to wtf/what/wow that's/the fudge/funny happened:\n    assertTokenStreamContents(out,\n                              new String[] {\"what\", \"wow\", \"wtf\", \"the\", \"that's\", \"fudge\", \"funny\", \"happened\"},\n                              new int[] {0, 0, 0, 0, 0, 0, 0, 4},\n                              new int[] {3, 3, 3, 3, 3, 3, 3, 12},\n                              new int[] {1, 0, 0, 1, 0, 1, 0, 1},\n                              new int[] {1, 1, 3, 1, 1, 1, 1, 1},\n                              12);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"302d34f2c66e8d489ee13078305c330cbf67b226","date":1484754357,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFlattenGraphFilter#testWTF2().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestFlattenGraphFilter#testWTF2().mjava","sourceNew":"  /** Same as testWTF1 except the \"wtf\" token comes out later */\n  public void testWTF2() throws Exception {\n\n    // \"wow that's funny\" and \"what the fudge\" are separate side paths, in parallel with \"wtf\", on input:\n    TokenStream in = new CannedTokenStream(0, 12, new Token[] {\n        token(\"what\", 1, 1, 0, 3),\n        token(\"wow\", 0, 3, 0, 3),\n        token(\"wtf\", 0, 5, 0, 3),\n        token(\"the\", 1, 1, 0, 3),\n        token(\"fudge\", 1, 3, 0, 3),\n        token(\"that's\", 1, 1, 0, 3),\n        token(\"funny\", 1, 1, 0, 3),\n        token(\"happened\", 1, 1, 4, 12)\n      });\n\n\n    TokenStream out = new FlattenGraphFilter(in);\n\n    // ... but on output, it's flattened to wtf/what/wow that's/the fudge/funny happened:\n    assertTokenStreamContents(out,\n                              new String[] {\"what\", \"wow\", \"wtf\", \"the\", \"that's\", \"fudge\", \"funny\", \"happened\"},\n                              new int[] {0, 0, 0, 0, 0, 0, 0, 4},\n                              new int[] {3, 3, 3, 3, 3, 3, 3, 12},\n                              new int[] {1, 0, 0, 1, 0, 1, 0, 1},\n                              new int[] {1, 1, 3, 1, 1, 1, 1, 1},\n                              12);\n    \n  }\n\n","sourceOld":"  /** Same as testWTF1 except the \"wtf\" token comes out later */\n  public void testWTF2() throws Exception {\n\n    // \"wow that's funny\" and \"what the fudge\" are separate side paths, in parallel with \"wtf\", on input:\n    TokenStream in = new CannedTokenStream(0, 12, new Token[] {\n        token(\"what\", 1, 1, 0, 3),\n        token(\"wow\", 0, 3, 0, 3),\n        token(\"wtf\", 0, 5, 0, 3),\n        token(\"the\", 1, 1, 0, 3),\n        token(\"fudge\", 1, 3, 0, 3),\n        token(\"that's\", 1, 1, 0, 3),\n        token(\"funny\", 1, 1, 0, 3),\n        token(\"happened\", 1, 1, 4, 12)\n      });\n\n\n    TokenStream out = new FlattenGraphFilter(in);\n\n    // ... but on output, it's flattened to wtf/what/wow that's/the fudge/funny happened:\n    assertTokenStreamContents(out,\n                              new String[] {\"what\", \"wow\", \"wtf\", \"the\", \"that's\", \"fudge\", \"funny\", \"happened\"},\n                              new int[] {0, 0, 0, 0, 0, 0, 0, 4},\n                              new int[] {3, 3, 3, 3, 3, 3, 3, 12},\n                              new int[] {1, 0, 0, 1, 0, 1, 0, 1},\n                              new int[] {1, 1, 3, 1, 1, 1, 1, 1},\n                              12);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"098528909bb70948871fd7ed865fafb87ed73964":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["098528909bb70948871fd7ed865fafb87ed73964"],"302d34f2c66e8d489ee13078305c330cbf67b226":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","098528909bb70948871fd7ed865fafb87ed73964"]},"commit2Childs":{"098528909bb70948871fd7ed865fafb87ed73964":["cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["098528909bb70948871fd7ed865fafb87ed73964","302d34f2c66e8d489ee13078305c330cbf67b226"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"302d34f2c66e8d489ee13078305c330cbf67b226":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}