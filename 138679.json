{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest#swapCore(String,String,SolrClient).mjava","commits":[{"id":"a30bfa174128ad6cb3bcf568080886729e347fe9","date":1485967817,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest#swapCore(String,String,SolrClient).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Swap two existing cores.\n   * @param core1 name of the first core\n   * @param core2 name of the other core\n   * @param client SolrClient to use\n   * @return response\n   * @throws SolrServerException if one or both cores don't exist\n   * @throws IOException on IO errors\n   */\n  public static CoreAdminResponse swapCore(String core1, String core2, SolrClient client)\n      throws SolrServerException, IOException {\n    CoreAdminRequest req = new CoreAdminRequest();\n    req.setCoreName(core1);\n    req.setOtherCoreName(core2);\n    req.setAction( CoreAdminAction.SWAP );\n    return req.process( client );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest#swapCore(String,String,SolrClient).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Swap two existing cores.\n   * @param core1 name of the first core\n   * @param core2 name of the other core\n   * @param client SolrClient to use\n   * @return response\n   * @throws SolrServerException if one or both cores don't exist\n   * @throws IOException on IO errors\n   */\n  public static CoreAdminResponse swapCore(String core1, String core2, SolrClient client)\n      throws SolrServerException, IOException {\n    CoreAdminRequest req = new CoreAdminRequest();\n    req.setCoreName(core1);\n    req.setOtherCoreName(core2);\n    req.setAction( CoreAdminAction.SWAP );\n    return req.process( client );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a30bfa174128ad6cb3bcf568080886729e347fe9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a30bfa174128ad6cb3bcf568080886729e347fe9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a30bfa174128ad6cb3bcf568080886729e347fe9"]},"commit2Childs":{"a30bfa174128ad6cb3bcf568080886729e347fe9":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a30bfa174128ad6cb3bcf568080886729e347fe9","7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}