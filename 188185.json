{"path":"src/java/org/apache/lucene/util/ArrayUtil#grow(int[],int).mjava","commits":[{"id":"5350389bf83287111f7760b9e3db3af8e3648474","date":1216372812,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/ArrayUtil#grow(int[],int).mjava","pathOld":"/dev/null","sourceNew":"  public static int[] grow(int[] array, int minSize) {\n    if (array.length < minSize) {\n      int[] newArray = new int[getNextSize(minSize)];\n      System.arraycopy(array, 0, newArray, 0, array.length);\n      return newArray;\n    } else\n      return array;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38c26570a4fd6cf0856801c977a2bc9c28a5424c","date":1264074890,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/ArrayUtil#grow(int[],int).mjava","pathOld":"src/java/org/apache/lucene/util/ArrayUtil#grow(int[],int).mjava","sourceNew":"  public static int[] grow(int[] array, int minSize) {\n    if (array.length < minSize) {\n      int[] newArray = new int[oversize(minSize, RamUsageEstimator.NUM_BYTES_INT)];\n      System.arraycopy(array, 0, newArray, 0, array.length);\n      return newArray;\n    } else\n      return array;\n  }\n\n","sourceOld":"  public static int[] grow(int[] array, int minSize) {\n    if (array.length < minSize) {\n      int[] newArray = new int[getNextSize(minSize)];\n      System.arraycopy(array, 0, newArray, 0, array.length);\n      return newArray;\n    } else\n      return array;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/ArrayUtil#grow(int[],int).mjava","pathOld":"src/java/org/apache/lucene/util/ArrayUtil#grow(int[],int).mjava","sourceNew":"  public static int[] grow(int[] array, int minSize) {\n    if (array.length < minSize) {\n      int[] newArray = new int[oversize(minSize, RamUsageEstimator.NUM_BYTES_INT)];\n      System.arraycopy(array, 0, newArray, 0, array.length);\n      return newArray;\n    } else\n      return array;\n  }\n\n","sourceOld":"  public static int[] grow(int[] array, int minSize) {\n    if (array.length < minSize) {\n      int[] newArray = new int[oversize(minSize, RamUsageEstimator.NUM_BYTES_INT)];\n      System.arraycopy(array, 0, newArray, 0, array.length);\n      return newArray;\n    } else\n      return array;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["5350389bf83287111f7760b9e3db3af8e3648474"],"5350389bf83287111f7760b9e3db3af8e3648474":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5350389bf83287111f7760b9e3db3af8e3648474"],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5350389bf83287111f7760b9e3db3af8e3648474":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}