{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/charfilter/MappingCharFilter#match(NormalizeCharMap).mjava","commits":[{"id":"c6744d321d7fd4ced5c99aeff28c036ac61e2314","date":1272929763,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/charfilter/MappingCharFilter#match(NormalizeCharMap).mjava","pathOld":"lucene/backwards/src/java/org/apache/lucene/analysis/MappingCharFilter#match(NormalizeCharMap).mjava","sourceNew":"  private NormalizeCharMap match(NormalizeCharMap map) throws IOException {\n    NormalizeCharMap result = null;\n    if (map.submap != null) {\n      int chr = nextChar();\n      if (chr != -1) {\n        NormalizeCharMap subMap = map.submap.get(Character.valueOf((char) chr));\n        if (subMap != null) {\n          result = match(subMap);\n        }\n        if (result == null) {\n          pushChar(chr);\n        }\n      }\n    }\n    if (result == null && map.normStr != null) {\n      result = map;\n    }\n    return result;\n  }\n\n","sourceOld":"  private NormalizeCharMap match(NormalizeCharMap map) throws IOException {\n    NormalizeCharMap result = null;\n    if (map.submap != null) {\n      int chr = nextChar();\n      if (chr != -1) {\n        NormalizeCharMap subMap = map.submap.get(Character.valueOf((char) chr));\n        if (subMap != null) {\n          result = match(subMap);\n        }\n        if (result == null) {\n          pushChar(chr);\n        }\n      }\n    }\n    if (result == null && map.normStr != null) {\n      result = map;\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/MappingCharFilter#match(NormalizeCharMap).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/charfilter/MappingCharFilter#match(NormalizeCharMap).mjava","sourceNew":"  private NormalizeCharMap match(NormalizeCharMap map) throws IOException {\n    NormalizeCharMap result = null;\n    if (map.submap != null) {\n      int chr = nextChar();\n      if (chr != -1) {\n        NormalizeCharMap subMap = map.submap.get(Character.valueOf((char) chr));\n        if (subMap != null) {\n          result = match(subMap);\n        }\n        if (result == null) {\n          pushChar(chr);\n        }\n      }\n    }\n    if (result == null && map.normStr != null) {\n      result = map;\n    }\n    return result;\n  }\n\n","sourceOld":"  private NormalizeCharMap match(NormalizeCharMap map) throws IOException {\n    NormalizeCharMap result = null;\n    if (map.submap != null) {\n      int chr = nextChar();\n      if (chr != -1) {\n        NormalizeCharMap subMap = map.submap.get(Character.valueOf((char) chr));\n        if (subMap != null) {\n          result = match(subMap);\n        }\n        if (result == null) {\n          pushChar(chr);\n        }\n      }\n    }\n    if (result == null && map.normStr != null) {\n      result = map;\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["c6744d321d7fd4ced5c99aeff28c036ac61e2314"],"c6744d321d7fd4ced5c99aeff28c036ac61e2314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c6744d321d7fd4ced5c99aeff28c036ac61e2314"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c6744d321d7fd4ced5c99aeff28c036ac61e2314":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}