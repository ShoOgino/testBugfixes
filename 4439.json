{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesReaderBase#load(FieldInfos,String,int,Directory,IOContext).mjava","commits":[{"id":"e0f5e4b06eda9c2996435d90659faa1a8601d196","date":1329255071,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesReaderBase#load(FieldInfos,String,int,Directory,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesReaderBase#load(FieldInfos,String,int,Directory,IOContext).mjava","sourceNew":"  // Only opens files... doesn't actually load any values\n  protected TreeMap<String, DocValues> load(FieldInfos fieldInfos,\n      String segment, int docCount, Directory dir, IOContext context)\n      throws IOException {\n    TreeMap<String, DocValues> values = new TreeMap<String, DocValues>();\n    boolean success = false;\n    try {\n\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (canLoad(fieldInfo)) {\n          final String field = fieldInfo.name;\n          // TODO can we have a compound file per segment and codec for\n          // docvalues?\n          final String id = DocValuesWriterBase.docValuesId(segment,\n              fieldInfo.number);\n          values.put(field,\n              loadDocValues(docCount, dir, id, getDocValuesType(fieldInfo), context));\n        }\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        // if we fail we must close all opened resources if there are any\n        closeInternal(values.values());\n      }\n    }\n    return values;\n  }\n\n","sourceOld":"  // Only opens files... doesn't actually load any values\n  protected TreeMap<String, DocValues> load(FieldInfos fieldInfos,\n      String segment, int docCount, Directory dir, IOContext context)\n      throws IOException {\n    TreeMap<String, DocValues> values = new TreeMap<String, DocValues>();\n    boolean success = false;\n    try {\n\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (canLoad(fieldInfo)) {\n          final String field = fieldInfo.name;\n          // TODO can we have a compound file per segment and codec for\n          // docvalues?\n          final String id = DocValuesWriterBase.docValuesId(segment,\n              fieldInfo.number);\n          values.put(field,\n              loadDocValues(docCount, dir, id, getDocValuesType(fieldInfo), context));\n        }\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        // if we fail we must close all opened resources if there are any\n        closeInternal(values.values());\n      }\n    }\n    return values;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de5bbadeb3abac0f650298bff584bd4317bd75aa","date":1331116004,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/PerDocProducerBase#load(FieldInfos,String,int,Directory,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesReaderBase#load(FieldInfos,String,int,Directory,IOContext).mjava","sourceNew":"  // Only opens files... doesn't actually load any values\n  protected TreeMap<String, DocValues> load(FieldInfos fieldInfos,\n      String segment, int docCount, Directory dir, IOContext context)\n      throws IOException {\n    TreeMap<String, DocValues> values = new TreeMap<String, DocValues>();\n    boolean success = false;\n    try {\n\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (canLoad(fieldInfo)) {\n          final String field = fieldInfo.name;\n          final String id = docValuesId(segment,\n              fieldInfo.number);\n          values.put(field,\n              loadDocValues(docCount, dir, id, getDocValuesType(fieldInfo), context));\n        }\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        // if we fail we must close all opened resources if there are any\n        closeInternal(values.values());\n      }\n    }\n    return values;\n  }\n\n","sourceOld":"  // Only opens files... doesn't actually load any values\n  protected TreeMap<String, DocValues> load(FieldInfos fieldInfos,\n      String segment, int docCount, Directory dir, IOContext context)\n      throws IOException {\n    TreeMap<String, DocValues> values = new TreeMap<String, DocValues>();\n    boolean success = false;\n    try {\n\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (canLoad(fieldInfo)) {\n          final String field = fieldInfo.name;\n          // TODO can we have a compound file per segment and codec for\n          // docvalues?\n          final String id = DocValuesWriterBase.docValuesId(segment,\n              fieldInfo.number);\n          values.put(field,\n              loadDocValues(docCount, dir, id, getDocValuesType(fieldInfo), context));\n        }\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        // if we fail we must close all opened resources if there are any\n        closeInternal(values.values());\n      }\n    }\n    return values;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":5,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/PerDocProducerBase#load(FieldInfos,String,int,Directory,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesReaderBase#load(FieldInfos,String,int,Directory,IOContext).mjava","sourceNew":"  // Only opens files... doesn't actually load any values\n  protected TreeMap<String, DocValues> load(FieldInfos fieldInfos,\n      String segment, int docCount, Directory dir, IOContext context)\n      throws IOException {\n    TreeMap<String, DocValues> values = new TreeMap<String, DocValues>();\n    boolean success = false;\n    try {\n\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (canLoad(fieldInfo)) {\n          final String field = fieldInfo.name;\n          final String id = docValuesId(segment,\n              fieldInfo.number);\n          values.put(field,\n              loadDocValues(docCount, dir, id, getDocValuesType(fieldInfo), context));\n        }\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        // if we fail we must close all opened resources if there are any\n        closeInternal(values.values());\n      }\n    }\n    return values;\n  }\n\n","sourceOld":"  // Only opens files... doesn't actually load any values\n  protected TreeMap<String, DocValues> load(FieldInfos fieldInfos,\n      String segment, int docCount, Directory dir, IOContext context)\n      throws IOException {\n    TreeMap<String, DocValues> values = new TreeMap<String, DocValues>();\n    boolean success = false;\n    try {\n\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (canLoad(fieldInfo)) {\n          final String field = fieldInfo.name;\n          // TODO can we have a compound file per segment and codec for\n          // docvalues?\n          final String id = DocValuesWriterBase.docValuesId(segment,\n              fieldInfo.number);\n          values.put(field,\n              loadDocValues(docCount, dir, id, getDocValuesType(fieldInfo), context));\n        }\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        // if we fail we must close all opened resources if there are any\n        closeInternal(values.values());\n      }\n    }\n    return values;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["e0f5e4b06eda9c2996435d90659faa1a8601d196","de5bbadeb3abac0f650298bff584bd4317bd75aa"],"e0f5e4b06eda9c2996435d90659faa1a8601d196":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"de5bbadeb3abac0f650298bff584bd4317bd75aa":["e0f5e4b06eda9c2996435d90659faa1a8601d196"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["de5bbadeb3abac0f650298bff584bd4317bd75aa"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"e0f5e4b06eda9c2996435d90659faa1a8601d196":["38e3b736c7ca086d61b7dbb841c905ee115490da","de5bbadeb3abac0f650298bff584bd4317bd75aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e0f5e4b06eda9c2996435d90659faa1a8601d196"],"de5bbadeb3abac0f650298bff584bd4317bd75aa":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}