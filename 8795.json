{"path":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDataConfig#testBasic().mjava","commits":[{"id":"fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead","date":1286986267,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDataConfig#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDataConfig#basic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory\n            .newInstance().newDocumentBuilder();\n    Document doc = builder.parse(new ByteArrayInputStream(xml.getBytes()));\n\n    DataConfig dc = new DataConfig();\n    dc.readFromXml(doc.getDocumentElement());\n    assertEquals(\"atrimlisting\", dc.document.entities.get(0).name);\n  }\n\n","sourceOld":"  @Test\n  public void basic() throws Exception {\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory\n            .newInstance().newDocumentBuilder();\n    Document doc = builder.parse(new ByteArrayInputStream(xml.getBytes()));\n\n    DataConfig dc = new DataConfig();\n    dc.readFromXml(doc.getDocumentElement());\n    Assert.assertEquals(\"atrimlisting\", dc.document.entities.get(0).name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDataConfig#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDataConfig#basic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory\n            .newInstance().newDocumentBuilder();\n    Document doc = builder.parse(new ByteArrayInputStream(xml.getBytes()));\n\n    DataConfig dc = new DataConfig();\n    dc.readFromXml(doc.getDocumentElement());\n    assertEquals(\"atrimlisting\", dc.document.entities.get(0).name);\n  }\n\n","sourceOld":"  @Test\n  public void basic() throws Exception {\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory\n            .newInstance().newDocumentBuilder();\n    Document doc = builder.parse(new ByteArrayInputStream(xml.getBytes()));\n\n    DataConfig dc = new DataConfig();\n    dc.readFromXml(doc.getDocumentElement());\n    Assert.assertEquals(\"atrimlisting\", dc.document.entities.get(0).name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDataConfig#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory\n            .newInstance().newDocumentBuilder();\n    Document doc = builder.parse(new ByteArrayInputStream(xml.getBytes()));\n\n    DataConfig dc = new DataConfig();\n    dc.readFromXml(doc.getDocumentElement());\n    assertEquals(\"atrimlisting\", dc.document.entities.get(0).name);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"651a613a8df324c5f834b6c2b6fb5bb945431755","date":1296820909,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDataConfig#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDataConfig#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory\n            .newInstance().newDocumentBuilder();\n    Document doc = builder.parse(new InputSource(new StringReader(xml)));\n\n    DataConfig dc = new DataConfig();\n    dc.readFromXml(doc.getDocumentElement());\n    assertEquals(\"atrimlisting\", dc.document.entities.get(0).name);\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory\n            .newInstance().newDocumentBuilder();\n    Document doc = builder.parse(new ByteArrayInputStream(xml.getBytes()));\n\n    DataConfig dc = new DataConfig();\n    dc.readFromXml(doc.getDocumentElement());\n    assertEquals(\"atrimlisting\", dc.document.entities.get(0).name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDataConfig#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDataConfig#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory\n            .newInstance().newDocumentBuilder();\n    Document doc = builder.parse(new InputSource(new StringReader(xml)));\n\n    DataConfig dc = new DataConfig();\n    dc.readFromXml(doc.getDocumentElement());\n    assertEquals(\"atrimlisting\", dc.document.entities.get(0).name);\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory\n            .newInstance().newDocumentBuilder();\n    Document doc = builder.parse(new ByteArrayInputStream(xml.getBytes()));\n\n    DataConfig dc = new DataConfig();\n    dc.readFromXml(doc.getDocumentElement());\n    assertEquals(\"atrimlisting\", dc.document.entities.get(0).name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDataConfig#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDataConfig#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory\n            .newInstance().newDocumentBuilder();\n    Document doc = builder.parse(new InputSource(new StringReader(xml)));\n\n    DataConfig dc = new DataConfig();\n    dc.readFromXml(doc.getDocumentElement());\n    assertEquals(\"atrimlisting\", dc.document.entities.get(0).name);\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory\n            .newInstance().newDocumentBuilder();\n    Document doc = builder.parse(new ByteArrayInputStream(xml.getBytes()));\n\n    DataConfig dc = new DataConfig();\n    dc.readFromXml(doc.getDocumentElement());\n    assertEquals(\"atrimlisting\", dc.document.entities.get(0).name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDataConfig#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDataConfig#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory\n            .newInstance().newDocumentBuilder();\n    Document doc = builder.parse(new InputSource(new StringReader(xml)));\n\n    DataConfig dc = new DataConfig();\n    dc.readFromXml(doc.getDocumentElement());\n    assertEquals(\"atrimlisting\", dc.document.entities.get(0).name);\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory\n            .newInstance().newDocumentBuilder();\n    Document doc = builder.parse(new InputSource(new StringReader(xml)));\n\n    DataConfig dc = new DataConfig();\n    dc.readFromXml(doc.getDocumentElement());\n    assertEquals(\"atrimlisting\", dc.document.entities.get(0).name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDataConfig#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDataConfig#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory\n            .newInstance().newDocumentBuilder();\n    Document doc = builder.parse(new InputSource(new StringReader(xml)));\n\n    DataConfig dc = new DataConfig();\n    dc.readFromXml(doc.getDocumentElement());\n    assertEquals(\"atrimlisting\", dc.document.entities.get(0).name);\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory\n            .newInstance().newDocumentBuilder();\n    Document doc = builder.parse(new InputSource(new StringReader(xml)));\n\n    DataConfig dc = new DataConfig();\n    dc.readFromXml(doc.getDocumentElement());\n    assertEquals(\"atrimlisting\", dc.document.entities.get(0).name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"651a613a8df324c5f834b6c2b6fb5bb945431755":["fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["651a613a8df324c5f834b6c2b6fb5bb945431755","651a613a8df324c5f834b6c2b6fb5bb945431755"],"c26f00b574427b55127e869b935845554afde1fa":["651a613a8df324c5f834b6c2b6fb5bb945431755","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","651a613a8df324c5f834b6c2b6fb5bb945431755"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead"],"fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","651a613a8df324c5f834b6c2b6fb5bb945431755"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"651a613a8df324c5f834b6c2b6fb5bb945431755":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead":["651a613a8df324c5f834b6c2b6fb5bb945431755","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}