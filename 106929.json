{"path":"backwards/src/java/org/apache/lucene/index/TermVectorsTermsWriter#closeDocStore(SegmentWriteState).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/index/TermVectorsTermsWriter#closeDocStore(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  synchronized void closeDocStore(final SegmentWriteState state) throws IOException {\n    if (tvx != null) {\n      // At least one doc in this run had term vectors\n      // enabled\n      fill(state.numDocsInStore - docWriter.getDocStoreOffset());\n      tvx.close();\n      tvf.close();\n      tvd.close();\n      tvx = null;\n      assert state.docStoreSegmentName != null;\n      final String fileName = state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION;\n      if (4+((long) state.numDocsInStore)*16 != state.directory.fileLength(fileName))\n        throw new RuntimeException(\"after flush: tvx size mismatch: \" + state.numDocsInStore + \" docs vs \" + state.directory.fileLength(fileName) + \" length in bytes of \" + fileName + \" file exists?=\" + state.directory.fileExists(fileName));\n\n      state.flushedFiles.add(state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION);\n      state.flushedFiles.add(state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      state.flushedFiles.add(state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n\n      docWriter.removeOpenFile(state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION);\n      docWriter.removeOpenFile(state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      docWriter.removeOpenFile(state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n\n      lastDocID = 0;\n    }    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/TermVectorsTermsWriter#closeDocStore(SegmentWriteState).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/TermVectorsTermsWriter#closeDocStore(SegmentWriteState).mjava","sourceNew":"  @Override\n  synchronized void closeDocStore(final SegmentWriteState state) throws IOException {\n    if (tvx != null) {\n      // At least one doc in this run had term vectors\n      // enabled\n      fill(state.numDocsInStore - docWriter.getDocStoreOffset());\n      tvx.close();\n      tvf.close();\n      tvd.close();\n      tvx = null;\n      assert state.docStoreSegmentName != null;\n      final String fileName = state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION;\n      if (4+((long) state.numDocsInStore)*16 != state.directory.fileLength(fileName))\n        throw new RuntimeException(\"after flush: tvx size mismatch: \" + state.numDocsInStore + \" docs vs \" + state.directory.fileLength(fileName) + \" length in bytes of \" + fileName + \" file exists?=\" + state.directory.fileExists(fileName));\n\n      state.flushedFiles.add(state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION);\n      state.flushedFiles.add(state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      state.flushedFiles.add(state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n\n      docWriter.removeOpenFile(state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION);\n      docWriter.removeOpenFile(state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      docWriter.removeOpenFile(state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n\n      lastDocID = 0;\n    }    \n  }\n\n","sourceOld":"  @Override\n  synchronized void closeDocStore(final SegmentWriteState state) throws IOException {\n    if (tvx != null) {\n      // At least one doc in this run had term vectors\n      // enabled\n      fill(state.numDocsInStore - docWriter.getDocStoreOffset());\n      tvx.close();\n      tvf.close();\n      tvd.close();\n      tvx = null;\n      assert state.docStoreSegmentName != null;\n      final String fileName = state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION;\n      if (4+((long) state.numDocsInStore)*16 != state.directory.fileLength(fileName))\n        throw new RuntimeException(\"after flush: tvx size mismatch: \" + state.numDocsInStore + \" docs vs \" + state.directory.fileLength(fileName) + \" length in bytes of \" + fileName + \" file exists?=\" + state.directory.fileExists(fileName));\n\n      state.flushedFiles.add(state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION);\n      state.flushedFiles.add(state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      state.flushedFiles.add(state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n\n      docWriter.removeOpenFile(state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION);\n      docWriter.removeOpenFile(state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      docWriter.removeOpenFile(state.docStoreSegmentName + \".\" + IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n\n      lastDocID = 0;\n    }    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}