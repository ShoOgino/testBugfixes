{"path":"lucene/core/src/java/org/apache/lucene/document/LatLonShapeQuery#queryIntersects(byte[],ShapeField.DecodedTriangle).mjava","commits":[{"id":"c568a1e2a5125c2245150eebb030a81baa158b31","date":1587403489,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonShapeQuery#queryIntersects(byte[],ShapeField.DecodedTriangle).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected boolean queryIntersects(byte[] t, ShapeField.DecodedTriangle scratchTriangle) {\n    ShapeField.decodeTriangle(t, scratchTriangle);\n\n    switch (scratchTriangle.type) {\n      case POINT: {\n        double alat = GeoEncodingUtils.decodeLatitude(scratchTriangle.aY);\n        double alon = GeoEncodingUtils.decodeLongitude(scratchTriangle.aX);\n        return component2D.contains(alon, alat);\n      }\n      case LINE: {\n        double alat = GeoEncodingUtils.decodeLatitude(scratchTriangle.aY);\n        double alon = GeoEncodingUtils.decodeLongitude(scratchTriangle.aX);\n        double blat = GeoEncodingUtils.decodeLatitude(scratchTriangle.bY);\n        double blon = GeoEncodingUtils.decodeLongitude(scratchTriangle.bX);\n        return component2D.intersectsLine(alon, alat, blon, blat);\n      }\n      case TRIANGLE: {\n        double alat = GeoEncodingUtils.decodeLatitude(scratchTriangle.aY);\n        double alon = GeoEncodingUtils.decodeLongitude(scratchTriangle.aX);\n        double blat = GeoEncodingUtils.decodeLatitude(scratchTriangle.bY);\n        double blon = GeoEncodingUtils.decodeLongitude(scratchTriangle.bX);\n        double clat = GeoEncodingUtils.decodeLatitude(scratchTriangle.cY);\n        double clon = GeoEncodingUtils.decodeLongitude(scratchTriangle.cX);\n        return component2D.intersectsTriangle(alon, alat, blon, blat, clon, clat);\n      }\n      default: throw new IllegalArgumentException(\"Unsupported triangle type :[\" + scratchTriangle.type + \"]\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c568a1e2a5125c2245150eebb030a81baa158b31":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c568a1e2a5125c2245150eebb030a81baa158b31"]},"commit2Childs":{"c568a1e2a5125c2245150eebb030a81baa158b31":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c568a1e2a5125c2245150eebb030a81baa158b31"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}