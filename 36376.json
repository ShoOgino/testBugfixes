{"path":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#verifyTermDocs(Directory,Term,int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#verifyTermDocs(Directory,Term,int).mjava","pathOld":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#verifyTermDocs(Directory,Term,int).mjava","sourceNew":"  private void verifyTermDocs(Directory dir, Term term, int numDocs)\n      throws IOException {\n    IndexReader reader = IndexReader.open(dir, true);\n    TermDocs termDocs = reader.termDocs(term);\n    int count = 0;\n    while (termDocs.next())\n      count++;\n    assertEquals(numDocs, count);\n    reader.close();\n  }\n\n","sourceOld":"  private void verifyTermDocs(Directory dir, Term term, int numDocs)\n      throws IOException {\n    IndexReader reader = IndexReader.open(dir, true);\n    TermDocs termDocs = reader.termDocs(term);\n    int count = 0;\n    while (termDocs.next())\n      count++;\n    assertEquals(numDocs, count);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#verifyTermDocs(Directory,Term,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#verifyTermDocs(Directory,Term,int).mjava","sourceNew":"  private void verifyTermDocs(Directory dir, Term term, int numDocs)\n      throws IOException {\n    IndexReader reader = IndexReader.open(dir, true);\n    DocsEnum docsEnum = MultiFields.getTermDocsEnum(reader, null, term.field, new BytesRef(term.text));\n    int count = 0;\n    while (docsEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS)\n      count++;\n    assertEquals(numDocs, count);\n    reader.close();\n  }\n\n","sourceOld":"  private void verifyTermDocs(Directory dir, Term term, int numDocs)\n      throws IOException {\n    IndexReader reader = IndexReader.open(dir, true);\n    TermDocs termDocs = reader.termDocs(term);\n    int count = 0;\n    while (termDocs.next())\n      count++;\n    assertEquals(numDocs, count);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}