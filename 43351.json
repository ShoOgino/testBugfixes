{"path":"lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock#create(int,int).mjava","commits":[{"id":"4a470c93b2b0f8f51241f52705fc110a01f27ad2","date":1337969379,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock#create(int,int).mjava","pathOld":"/dev/null","sourceNew":"  public static Packed64SingleBlock create(int valueCount, int bitsPerValue) {\n    switch (bitsPerValue) {\n      case 1:\n        return new Packed64SingleBlock1(valueCount);\n      case 2:\n        return new Packed64SingleBlock2(valueCount);\n      case 3:\n        return new Packed64SingleBlock3(valueCount);\n      case 4:\n        return new Packed64SingleBlock4(valueCount);\n      case 5:\n        return new Packed64SingleBlock5(valueCount);\n      case 6:\n        return new Packed64SingleBlock6(valueCount);\n      case 7:\n        return new Packed64SingleBlock7(valueCount);\n      case 9:\n        return new Packed64SingleBlock9(valueCount);\n      case 10:\n        return new Packed64SingleBlock10(valueCount);\n      case 12:\n        return new Packed64SingleBlock12(valueCount);\n      case 21:\n        return new Packed64SingleBlock21(valueCount);\n      default:\n        throw new IllegalArgumentException(\"Unsupported bitsPerValue: \"\n            + bitsPerValue);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"501135652c6500e4108453df1cc819dae12098e7","date":1340109868,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock#create(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock#create(int,int).mjava","sourceNew":"  public static Packed64SingleBlock create(int valueCount, int bitsPerValue) {\n    if (isSupported(bitsPerValue)) {\n      return new Packed64SingleBlock(valueCount, bitsPerValue);\n    }\n    throw new IllegalArgumentException(\"Unsupported bitsPerValue: \" + bitsPerValue);\n  }\n\n","sourceOld":"  public static Packed64SingleBlock create(int valueCount, int bitsPerValue) {\n    switch (bitsPerValue) {\n      case 1:\n        return new Packed64SingleBlock1(valueCount);\n      case 2:\n        return new Packed64SingleBlock2(valueCount);\n      case 3:\n        return new Packed64SingleBlock3(valueCount);\n      case 4:\n        return new Packed64SingleBlock4(valueCount);\n      case 5:\n        return new Packed64SingleBlock5(valueCount);\n      case 6:\n        return new Packed64SingleBlock6(valueCount);\n      case 7:\n        return new Packed64SingleBlock7(valueCount);\n      case 9:\n        return new Packed64SingleBlock9(valueCount);\n      case 10:\n        return new Packed64SingleBlock10(valueCount);\n      case 12:\n        return new Packed64SingleBlock12(valueCount);\n      case 21:\n        return new Packed64SingleBlock21(valueCount);\n      default:\n        throw new IllegalArgumentException(\"Unsupported bitsPerValue: \"\n            + bitsPerValue);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbf2299b235bb1f008e10b7e3c449b4c70e4a34c","date":1341308106,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock#create(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock#create(int,int).mjava","sourceNew":"  public static Packed64SingleBlock create(int valueCount, int bitsPerValue) {\n    switch (bitsPerValue) {\n      case 1:\n        return new Packed64SingleBlock1(valueCount);\n      case 2:\n        return new Packed64SingleBlock2(valueCount);\n      case 3:\n        return new Packed64SingleBlock3(valueCount);\n      case 4:\n        return new Packed64SingleBlock4(valueCount);\n      case 5:\n        return new Packed64SingleBlock5(valueCount);\n      case 6:\n        return new Packed64SingleBlock6(valueCount);\n      case 7:\n        return new Packed64SingleBlock7(valueCount);\n      case 8:\n        return new Packed64SingleBlock8(valueCount);\n      case 9:\n        return new Packed64SingleBlock9(valueCount);\n      case 10:\n        return new Packed64SingleBlock10(valueCount);\n      case 12:\n        return new Packed64SingleBlock12(valueCount);\n      case 16:\n        return new Packed64SingleBlock16(valueCount);\n      case 21:\n        return new Packed64SingleBlock21(valueCount);\n      case 32:\n        return new Packed64SingleBlock32(valueCount);\n      default:\n        throw new IllegalArgumentException(\"Unsupported number of bits per value: \" + 32);\n    }\n  }\n\n","sourceOld":"  public static Packed64SingleBlock create(int valueCount, int bitsPerValue) {\n    if (isSupported(bitsPerValue)) {\n      return new Packed64SingleBlock(valueCount, bitsPerValue);\n    }\n    throw new IllegalArgumentException(\"Unsupported bitsPerValue: \" + bitsPerValue);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock#create(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock#create(int,int).mjava","sourceNew":"  public static Packed64SingleBlock create(int valueCount, int bitsPerValue) {\n    switch (bitsPerValue) {\n      case 1:\n        return new Packed64SingleBlock1(valueCount);\n      case 2:\n        return new Packed64SingleBlock2(valueCount);\n      case 3:\n        return new Packed64SingleBlock3(valueCount);\n      case 4:\n        return new Packed64SingleBlock4(valueCount);\n      case 5:\n        return new Packed64SingleBlock5(valueCount);\n      case 6:\n        return new Packed64SingleBlock6(valueCount);\n      case 7:\n        return new Packed64SingleBlock7(valueCount);\n      case 8:\n        return new Packed64SingleBlock8(valueCount);\n      case 9:\n        return new Packed64SingleBlock9(valueCount);\n      case 10:\n        return new Packed64SingleBlock10(valueCount);\n      case 12:\n        return new Packed64SingleBlock12(valueCount);\n      case 16:\n        return new Packed64SingleBlock16(valueCount);\n      case 21:\n        return new Packed64SingleBlock21(valueCount);\n      case 32:\n        return new Packed64SingleBlock32(valueCount);\n      default:\n        throw new IllegalArgumentException(\"Unsupported number of bits per value: \" + 32);\n    }\n  }\n\n","sourceOld":"  public static Packed64SingleBlock create(int valueCount, int bitsPerValue) {\n    if (isSupported(bitsPerValue)) {\n      return new Packed64SingleBlock(valueCount, bitsPerValue);\n    }\n    throw new IllegalArgumentException(\"Unsupported bitsPerValue: \" + bitsPerValue);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fe33227f6805edab2036cbb80645cc4e2d1fa424":["501135652c6500e4108453df1cc819dae12098e7","fbf2299b235bb1f008e10b7e3c449b4c70e4a34c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fbf2299b235bb1f008e10b7e3c449b4c70e4a34c":["501135652c6500e4108453df1cc819dae12098e7"],"501135652c6500e4108453df1cc819dae12098e7":["4a470c93b2b0f8f51241f52705fc110a01f27ad2"],"4a470c93b2b0f8f51241f52705fc110a01f27ad2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fbf2299b235bb1f008e10b7e3c449b4c70e4a34c"]},"commit2Childs":{"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4a470c93b2b0f8f51241f52705fc110a01f27ad2"],"fbf2299b235bb1f008e10b7e3c449b4c70e4a34c":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"501135652c6500e4108453df1cc819dae12098e7":["fe33227f6805edab2036cbb80645cc4e2d1fa424","fbf2299b235bb1f008e10b7e3c449b4c70e4a34c"],"4a470c93b2b0f8f51241f52705fc110a01f27ad2":["501135652c6500e4108453df1cc819dae12098e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}