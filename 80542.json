{"path":"lucene/core/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredTerms#iterator(TermsEnum).mjava","commits":[{"id":"0274c27988a26cb0cda3a0d15b282221b1b453f0","date":1343923460,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredTerms#iterator(TermsEnum).mjava","pathOld":"/dev/null","sourceNew":"      @Override\r\n      public TermsEnum iterator(TermsEnum reuse) throws IOException {\r\n        TermsEnum result;\r\n        if ((reuse != null) && (reuse instanceof BloomFilteredTermsEnum)) {\r\n          // recycle the existing BloomFilteredTermsEnum by asking the delegate\r\n          // to recycle its contained TermsEnum\r\n          BloomFilteredTermsEnum bfte = (BloomFilteredTermsEnum) reuse;\r\n          if (bfte.filter == filter) {\r\n            bfte.delegateTermsEnum = delegateTerms\r\n                .iterator(bfte.delegateTermsEnum);\r\n            return bfte;\r\n          }\r\n        }\r\n        // We have been handed something we cannot reuse (either null, wrong\r\n        // class or wrong filter) so allocate a new object\r\n        result = new BloomFilteredTermsEnum(delegateTerms.iterator(reuse),\r\n            filter);\r\n        return result;\r\n      }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredTerms#iterator(TermsEnum).mjava","pathOld":"/dev/null","sourceNew":"      @Override\r\n      public TermsEnum iterator(TermsEnum reuse) throws IOException {\r\n        TermsEnum result;\r\n        if ((reuse != null) && (reuse instanceof BloomFilteredTermsEnum)) {\r\n          // recycle the existing BloomFilteredTermsEnum by asking the delegate\r\n          // to recycle its contained TermsEnum\r\n          BloomFilteredTermsEnum bfte = (BloomFilteredTermsEnum) reuse;\r\n          if (bfte.filter == filter) {\r\n            bfte.delegateTermsEnum = delegateTerms\r\n                .iterator(bfte.delegateTermsEnum);\r\n            return bfte;\r\n          }\r\n        }\r\n        // We have been handed something we cannot reuse (either null, wrong\r\n        // class or wrong filter) so allocate a new object\r\n        result = new BloomFilteredTermsEnum(delegateTerms.iterator(reuse),\r\n            filter);\r\n        return result;\r\n      }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredTerms#iterator(TermsEnum).mjava","pathOld":"/dev/null","sourceNew":"      @Override\r\n      public TermsEnum iterator(TermsEnum reuse) throws IOException {\r\n        TermsEnum result;\r\n        if ((reuse != null) && (reuse instanceof BloomFilteredTermsEnum)) {\r\n          // recycle the existing BloomFilteredTermsEnum by asking the delegate\r\n          // to recycle its contained TermsEnum\r\n          BloomFilteredTermsEnum bfte = (BloomFilteredTermsEnum) reuse;\r\n          if (bfte.filter == filter) {\r\n            bfte.delegateTermsEnum = delegateTerms\r\n                .iterator(bfte.delegateTermsEnum);\r\n            return bfte;\r\n          }\r\n        }\r\n        // We have been handed something we cannot reuse (either null, wrong\r\n        // class or wrong filter) so allocate a new object\r\n        result = new BloomFilteredTermsEnum(delegateTerms.iterator(reuse),\r\n            filter);\r\n        return result;\r\n      }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d681ca1a1c487b2501ef9bde8602a65c4c717a46","date":1346078839,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredTerms#iterator(TermsEnum).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredTerms#iterator(TermsEnum).mjava","sourceNew":"      @Override\n      public TermsEnum iterator(TermsEnum reuse) throws IOException {\n        TermsEnum result;\n        if ((reuse != null) && (reuse instanceof BloomFilteredTermsEnum)) {\n          // recycle the existing BloomFilteredTermsEnum by asking the delegate\n          // to recycle its contained TermsEnum\n          BloomFilteredTermsEnum bfte = (BloomFilteredTermsEnum) reuse;\n          if (bfte.filter == filter) {\n            bfte.delegateTermsEnum = delegateTerms\n                .iterator(bfte.delegateTermsEnum);\n            return bfte;\n          }\n        }\n        // We have been handed something we cannot reuse (either null, wrong\n        // class or wrong filter) so allocate a new object\n        result = new BloomFilteredTermsEnum(delegateTerms.iterator(reuse),\n            filter);\n        return result;\n      }\n\n","sourceOld":"      @Override\r\n      public TermsEnum iterator(TermsEnum reuse) throws IOException {\r\n        TermsEnum result;\r\n        if ((reuse != null) && (reuse instanceof BloomFilteredTermsEnum)) {\r\n          // recycle the existing BloomFilteredTermsEnum by asking the delegate\r\n          // to recycle its contained TermsEnum\r\n          BloomFilteredTermsEnum bfte = (BloomFilteredTermsEnum) reuse;\r\n          if (bfte.filter == filter) {\r\n            bfte.delegateTermsEnum = delegateTerms\r\n                .iterator(bfte.delegateTermsEnum);\r\n            return bfte;\r\n          }\r\n        }\r\n        // We have been handed something we cannot reuse (either null, wrong\r\n        // class or wrong filter) so allocate a new object\r\n        result = new BloomFilteredTermsEnum(delegateTerms.iterator(reuse),\r\n            filter);\r\n        return result;\r\n      }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredTerms#iterator(TermsEnum).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredTerms#iterator(TermsEnum).mjava","sourceNew":"      @Override\n      public TermsEnum iterator(TermsEnum reuse) throws IOException {\n        TermsEnum result;\n        if ((reuse != null) && (reuse instanceof BloomFilteredTermsEnum)) {\n          // recycle the existing BloomFilteredTermsEnum by asking the delegate\n          // to recycle its contained TermsEnum\n          BloomFilteredTermsEnum bfte = (BloomFilteredTermsEnum) reuse;\n          if (bfte.filter == filter) {\n            bfte.delegateTermsEnum = delegateTerms\n                .iterator(bfte.delegateTermsEnum);\n            return bfte;\n          }\n        }\n        // We have been handed something we cannot reuse (either null, wrong\n        // class or wrong filter) so allocate a new object\n        result = new BloomFilteredTermsEnum(delegateTerms.iterator(reuse),\n            filter);\n        return result;\n      }\n\n","sourceOld":"      @Override\r\n      public TermsEnum iterator(TermsEnum reuse) throws IOException {\r\n        TermsEnum result;\r\n        if ((reuse != null) && (reuse instanceof BloomFilteredTermsEnum)) {\r\n          // recycle the existing BloomFilteredTermsEnum by asking the delegate\r\n          // to recycle its contained TermsEnum\r\n          BloomFilteredTermsEnum bfte = (BloomFilteredTermsEnum) reuse;\r\n          if (bfte.filter == filter) {\r\n            bfte.delegateTermsEnum = delegateTerms\r\n                .iterator(bfte.delegateTermsEnum);\r\n            return bfte;\r\n          }\r\n        }\r\n        // We have been handed something we cannot reuse (either null, wrong\r\n        // class or wrong filter) so allocate a new object\r\n        result = new BloomFilteredTermsEnum(delegateTerms.iterator(reuse),\r\n            filter);\r\n        return result;\r\n      }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredTerms#iterator(TermsEnum).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredTerms#iterator(TermsEnum).mjava","sourceNew":"      @Override\n      public TermsEnum iterator(TermsEnum reuse) throws IOException {\n        TermsEnum result;\n        if ((reuse != null) && (reuse instanceof BloomFilteredTermsEnum)) {\n          // recycle the existing BloomFilteredTermsEnum by asking the delegate\n          // to recycle its contained TermsEnum\n          BloomFilteredTermsEnum bfte = (BloomFilteredTermsEnum) reuse;\n          if (bfte.filter == filter) {\n            bfte.delegateTermsEnum = delegateTerms\n                .iterator(bfte.delegateTermsEnum);\n            return bfte;\n          }\n        }\n        // We have been handed something we cannot reuse (either null, wrong\n        // class or wrong filter) so allocate a new object\n        result = new BloomFilteredTermsEnum(delegateTerms.iterator(reuse),\n            filter);\n        return result;\n      }\n\n","sourceOld":"      @Override\n      public TermsEnum iterator(TermsEnum reuse) throws IOException {\n        TermsEnum result;\n        if ((reuse != null) && (reuse instanceof BloomFilteredTermsEnum)) {\n          // recycle the existing BloomFilteredTermsEnum by asking the delegate\n          // to recycle its contained TermsEnum\n          BloomFilteredTermsEnum bfte = (BloomFilteredTermsEnum) reuse;\n          if (bfte.filter == filter) {\n            bfte.delegateTermsEnum = delegateTerms\n                .iterator(bfte.delegateTermsEnum);\n            return bfte;\n          }\n        }\n        // We have been handed something we cannot reuse (either null, wrong\n        // class or wrong filter) so allocate a new object\n        result = new BloomFilteredTermsEnum(delegateTerms.iterator(reuse),\n            filter);\n        return result;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d681ca1a1c487b2501ef9bde8602a65c4c717a46":["0274c27988a26cb0cda3a0d15b282221b1b453f0"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["d681ca1a1c487b2501ef9bde8602a65c4c717a46"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0274c27988a26cb0cda3a0d15b282221b1b453f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0274c27988a26cb0cda3a0d15b282221b1b453f0"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0274c27988a26cb0cda3a0d15b282221b1b453f0"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["d6f074e73200c07d54f242d3880a8da5a35ff97b","d681ca1a1c487b2501ef9bde8602a65c4c717a46"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"d681ca1a1c487b2501ef9bde8602a65c4c717a46":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","05a14b2611ead08655a2b2bdc61632eb31316e57"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0274c27988a26cb0cda3a0d15b282221b1b453f0","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"0274c27988a26cb0cda3a0d15b282221b1b453f0":["d681ca1a1c487b2501ef9bde8602a65c4c717a46","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["05a14b2611ead08655a2b2bdc61632eb31316e57"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8fd5be977c105554c6a7b68afcdbc511439723ab","05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}