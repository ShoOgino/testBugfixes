{"path":"lucene/facet/src/java/org/apache/lucene/facet/old/OldFacetsAccumulator#setComplementThreshold(double).mjava","commits":[{"id":"d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6","date":1375108983,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/old/OldFacetsAccumulator#setComplementThreshold(double).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/StandardFacetsAccumulator#setComplementThreshold(double).mjava","sourceNew":"  /**\n   * Set the complement threshold.\n   * This threshold will dictate whether the complements optimization is applied.\n   * The optimization is to count for less documents. It is useful when the same \n   * FacetSearchParams are used for varying sets of documents. The first time \n   * complements is used the \"total counts\" are computed - counting for all the \n   * documents in the collection. Then, only the complementing set of documents\n   * is considered, and used to decrement from the overall counts, thereby \n   * walking through less documents, which is faster.\n   * <p>\n   * For the default settings see {@link #DEFAULT_COMPLEMENT_THRESHOLD}.\n   * <p>\n   * To forcing complements in all cases pass {@link #FORCE_COMPLEMENT}.\n   * This is mostly useful for testing purposes, as forcing complements when only \n   * tiny fraction of available documents match the query does not make sense and \n   * would incur performance degradations.\n   * <p>\n   * To disable complements pass {@link #DISABLE_COMPLEMENT}.\n   * @param complementThreshold the complement threshold to set\n   * @see #getComplementThreshold()\n   */\n  public void setComplementThreshold(double complementThreshold) {\n    this.complementThreshold = complementThreshold;\n  }\n\n","sourceOld":"  /**\n   * Set the complement threshold.\n   * This threshold will dictate whether the complements optimization is applied.\n   * The optimization is to count for less documents. It is useful when the same \n   * FacetSearchParams are used for varying sets of documents. The first time \n   * complements is used the \"total counts\" are computed - counting for all the \n   * documents in the collection. Then, only the complementing set of documents\n   * is considered, and used to decrement from the overall counts, thereby \n   * walking through less documents, which is faster.\n   * <p>\n   * For the default settings see {@link #DEFAULT_COMPLEMENT_THRESHOLD}.\n   * <p>\n   * To forcing complements in all cases pass {@link #FORCE_COMPLEMENT}.\n   * This is mostly useful for testing purposes, as forcing complements when only \n   * tiny fraction of available documents match the query does not make sense and \n   * would incur performance degradations.\n   * <p>\n   * To disable complements pass {@link #DISABLE_COMPLEMENT}.\n   * @param complementThreshold the complement threshold to set\n   * @see #getComplementThreshold()\n   */\n  public void setComplementThreshold(double complementThreshold) {\n    this.complementThreshold = complementThreshold;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":1,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/old/OldFacetsAccumulator#setComplementThreshold(double).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/StandardFacetsAccumulator#setComplementThreshold(double).mjava","sourceNew":"  /**\n   * Set the complement threshold.\n   * This threshold will dictate whether the complements optimization is applied.\n   * The optimization is to count for less documents. It is useful when the same \n   * FacetSearchParams are used for varying sets of documents. The first time \n   * complements is used the \"total counts\" are computed - counting for all the \n   * documents in the collection. Then, only the complementing set of documents\n   * is considered, and used to decrement from the overall counts, thereby \n   * walking through less documents, which is faster.\n   * <p>\n   * For the default settings see {@link #DEFAULT_COMPLEMENT_THRESHOLD}.\n   * <p>\n   * To forcing complements in all cases pass {@link #FORCE_COMPLEMENT}.\n   * This is mostly useful for testing purposes, as forcing complements when only \n   * tiny fraction of available documents match the query does not make sense and \n   * would incur performance degradations.\n   * <p>\n   * To disable complements pass {@link #DISABLE_COMPLEMENT}.\n   * @param complementThreshold the complement threshold to set\n   * @see #getComplementThreshold()\n   */\n  public void setComplementThreshold(double complementThreshold) {\n    this.complementThreshold = complementThreshold;\n  }\n\n","sourceOld":"  /**\n   * Set the complement threshold.\n   * This threshold will dictate whether the complements optimization is applied.\n   * The optimization is to count for less documents. It is useful when the same \n   * FacetSearchParams are used for varying sets of documents. The first time \n   * complements is used the \"total counts\" are computed - counting for all the \n   * documents in the collection. Then, only the complementing set of documents\n   * is considered, and used to decrement from the overall counts, thereby \n   * walking through less documents, which is faster.\n   * <p>\n   * For the default settings see {@link #DEFAULT_COMPLEMENT_THRESHOLD}.\n   * <p>\n   * To forcing complements in all cases pass {@link #FORCE_COMPLEMENT}.\n   * This is mostly useful for testing purposes, as forcing complements when only \n   * tiny fraction of available documents match the query does not make sense and \n   * would incur performance degradations.\n   * <p>\n   * To disable complements pass {@link #DISABLE_COMPLEMENT}.\n   * @param complementThreshold the complement threshold to set\n   * @see #getComplementThreshold()\n   */\n  public void setComplementThreshold(double complementThreshold) {\n    this.complementThreshold = complementThreshold;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/old/OldFacetsAccumulator#setComplementThreshold(double).mjava","sourceNew":null,"sourceOld":"  /**\n   * Set the complement threshold.\n   * This threshold will dictate whether the complements optimization is applied.\n   * The optimization is to count for less documents. It is useful when the same \n   * FacetSearchParams are used for varying sets of documents. The first time \n   * complements is used the \"total counts\" are computed - counting for all the \n   * documents in the collection. Then, only the complementing set of documents\n   * is considered, and used to decrement from the overall counts, thereby \n   * walking through less documents, which is faster.\n   * <p>\n   * For the default settings see {@link #DEFAULT_COMPLEMENT_THRESHOLD}.\n   * <p>\n   * To forcing complements in all cases pass {@link #FORCE_COMPLEMENT}.\n   * This is mostly useful for testing purposes, as forcing complements when only \n   * tiny fraction of available documents match the query does not make sense and \n   * would incur performance degradations.\n   * <p>\n   * To disable complements pass {@link #DISABLE_COMPLEMENT}.\n   * @param complementThreshold the complement threshold to set\n   * @see #getComplementThreshold()\n   */\n  public void setComplementThreshold(double complementThreshold) {\n    this.complementThreshold = complementThreshold;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/old/OldFacetsAccumulator#setComplementThreshold(double).mjava","sourceNew":null,"sourceOld":"  /**\n   * Set the complement threshold.\n   * This threshold will dictate whether the complements optimization is applied.\n   * The optimization is to count for less documents. It is useful when the same \n   * FacetSearchParams are used for varying sets of documents. The first time \n   * complements is used the \"total counts\" are computed - counting for all the \n   * documents in the collection. Then, only the complementing set of documents\n   * is considered, and used to decrement from the overall counts, thereby \n   * walking through less documents, which is faster.\n   * <p>\n   * For the default settings see {@link #DEFAULT_COMPLEMENT_THRESHOLD}.\n   * <p>\n   * To forcing complements in all cases pass {@link #FORCE_COMPLEMENT}.\n   * This is mostly useful for testing purposes, as forcing complements when only \n   * tiny fraction of available documents match the query does not make sense and \n   * would incur performance degradations.\n   * <p>\n   * To disable complements pass {@link #DISABLE_COMPLEMENT}.\n   * @param complementThreshold the complement threshold to set\n   * @see #getComplementThreshold()\n   */\n  public void setComplementThreshold(double complementThreshold) {\n    this.complementThreshold = complementThreshold;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d33e19a97046248623a7591aeaa6547233fd15e2":["d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6","d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}