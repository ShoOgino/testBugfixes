{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HttpDataSource#getData(String).mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HttpDataSource#getData(String).mjava","pathOld":"/dev/null","sourceNew":"  public Reader getData(String query) {\n    URL url = null;\n    try {\n      if (query.startsWith(\"http:\")) {\n        url = new URL(query);\n      } else {\n        url = new URL(baseUrl + query);\n      }\n\n      LOG.info(\"Created URL to: \" + url.toString());\n\n      URLConnection conn = url.openConnection();\n      conn.setConnectTimeout(connectionTimeout);\n      conn.setReadTimeout(readTimeout);\n      InputStream in = conn.getInputStream();\n      String enc = encoding;\n      if (enc == null) {\n        String cType = conn.getContentType();\n        if (cType != null) {\n          Matcher m = CHARSET_PATTERN.matcher(cType);\n          if (m.find()) {\n            enc = m.group(1);\n          }\n        }\n      }\n      if (enc == null)\n        enc = UTF_8;\n      DataImporter.QUERY_COUNT.get().incrementAndGet();\n      return new InputStreamReader(in, enc);\n    } catch (Exception e) {\n      LOG.log(Level.SEVERE, \"Exception thrown while getting data\", e);\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Exception in invoking url \" + url, e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00da8b51bdeae168a5b26ec506db372b219ca7a2","date":1221704186,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HttpDataSource#getData(String).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HttpDataSource#getData(String).mjava","sourceNew":"  public Reader getData(String query) {\n    URL url = null;\n    try {\n      if (query.startsWith(\"http:\")) {\n        url = new URL(query);\n      } else {\n        url = new URL(baseUrl + query);\n      }\n\n      LOG.info(\"Created URL to: \" + url.toString());\n\n      URLConnection conn = url.openConnection();\n      conn.setConnectTimeout(connectionTimeout);\n      conn.setReadTimeout(readTimeout);\n      InputStream in = conn.getInputStream();\n      String enc = encoding;\n      if (enc == null) {\n        String cType = conn.getContentType();\n        if (cType != null) {\n          Matcher m = CHARSET_PATTERN.matcher(cType);\n          if (m.find()) {\n            enc = m.group(1);\n          }\n        }\n      }\n      if (enc == null)\n        enc = UTF_8;\n      DataImporter.QUERY_COUNT.get().incrementAndGet();\n      return new InputStreamReader(in, enc);\n    } catch (Exception e) {\n      LOG.error( \"Exception thrown while getting data\", e);\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Exception in invoking url \" + url, e);\n    }\n  }\n\n","sourceOld":"  public Reader getData(String query) {\n    URL url = null;\n    try {\n      if (query.startsWith(\"http:\")) {\n        url = new URL(query);\n      } else {\n        url = new URL(baseUrl + query);\n      }\n\n      LOG.info(\"Created URL to: \" + url.toString());\n\n      URLConnection conn = url.openConnection();\n      conn.setConnectTimeout(connectionTimeout);\n      conn.setReadTimeout(readTimeout);\n      InputStream in = conn.getInputStream();\n      String enc = encoding;\n      if (enc == null) {\n        String cType = conn.getContentType();\n        if (cType != null) {\n          Matcher m = CHARSET_PATTERN.matcher(cType);\n          if (m.find()) {\n            enc = m.group(1);\n          }\n        }\n      }\n      if (enc == null)\n        enc = UTF_8;\n      DataImporter.QUERY_COUNT.get().incrementAndGet();\n      return new InputStreamReader(in, enc);\n    } catch (Exception e) {\n      LOG.log(Level.SEVERE, \"Exception thrown while getting data\", e);\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Exception in invoking url \" + url, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b748a573c805ec5a2eb0b49f143381e82e25bac","date":1240222370,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/URLDataSource#getData(String).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HttpDataSource#getData(String).mjava","sourceNew":"  public Reader getData(String query) {\n    URL url = null;\n    try {\n      if (URIMETHOD.matcher(query).find()) url = new URL(query);\n      else url = new URL(baseUrl + query);\n\n      LOG.debug(\"Accessing URL: \" + url.toString());\n\n      URLConnection conn = url.openConnection();\n      conn.setConnectTimeout(connectionTimeout);\n      conn.setReadTimeout(readTimeout);\n      InputStream in = conn.getInputStream();\n      String enc = encoding;\n      if (enc == null) {\n        String cType = conn.getContentType();\n        if (cType != null) {\n          Matcher m = CHARSET_PATTERN.matcher(cType);\n          if (m.find()) {\n            enc = m.group(1);\n          }\n        }\n      }\n      if (enc == null)\n        enc = UTF_8;\n      DataImporter.QUERY_COUNT.get().incrementAndGet();\n      return new InputStreamReader(in, enc);\n    } catch (Exception e) {\n      LOG.error(\"Exception thrown while getting data\", e);\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Exception in invoking url \" + url, e);\n    }\n  }\n\n","sourceOld":"  public Reader getData(String query) {\n    URL url = null;\n    try {\n      if (query.startsWith(\"http:\")) {\n        url = new URL(query);\n      } else {\n        url = new URL(baseUrl + query);\n      }\n\n      LOG.info(\"Created URL to: \" + url.toString());\n\n      URLConnection conn = url.openConnection();\n      conn.setConnectTimeout(connectionTimeout);\n      conn.setReadTimeout(readTimeout);\n      InputStream in = conn.getInputStream();\n      String enc = encoding;\n      if (enc == null) {\n        String cType = conn.getContentType();\n        if (cType != null) {\n          Matcher m = CHARSET_PATTERN.matcher(cType);\n          if (m.find()) {\n            enc = m.group(1);\n          }\n        }\n      }\n      if (enc == null)\n        enc = UTF_8;\n      DataImporter.QUERY_COUNT.get().incrementAndGet();\n      return new InputStreamReader(in, enc);\n    } catch (Exception e) {\n      LOG.error( \"Exception thrown while getting data\", e);\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Exception in invoking url \" + url, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"3b748a573c805ec5a2eb0b49f143381e82e25bac":["00da8b51bdeae168a5b26ec506db372b219ca7a2"],"00da8b51bdeae168a5b26ec506db372b219ca7a2":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["00da8b51bdeae168a5b26ec506db372b219ca7a2"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3b748a573c805ec5a2eb0b49f143381e82e25bac":[],"00da8b51bdeae168a5b26ec506db372b219ca7a2":["3b748a573c805ec5a2eb0b49f143381e82e25bac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3b748a573c805ec5a2eb0b49f143381e82e25bac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}