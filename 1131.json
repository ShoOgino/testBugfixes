{"path":"solr/core/src/test/org/apache/solr/handler/admin/IndexSizeEstimatorTest#setupCluster().mjava","commits":[{"id":"e4583dbd381e291c87e23144564c59ba3391b188","date":1560187306,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/IndexSizeEstimatorTest#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    // create predictable field names\n    System.setProperty(\"solr.tests.numeric.dv\", \"true\");\n    System.setProperty(\"solr.tests.numeric.points\", \"true\");\n    System.setProperty(\"solr.tests.numeric.points.dv\", \"true\");\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-dynamic\"))\n        .configure();\n    solrClient = cluster.getSolrClient();\n    CollectionAdminRequest.createCollection(collection, \"conf\", 2, 2)\n        .setMaxShardsPerNode(2).process(solrClient);\n    cluster.waitForActiveCollection(collection, 2, 4);\n    SolrInputDocument lastDoc = addDocs(collection, NUM_DOCS);\n    HashSet<String> docFields = new HashSet<>(lastDoc.keySet());\n    docFields.add(\"_version_\");\n    docFields.add(\"_root_\");\n    docFields.add(\"point_0___double\");\n    docFields.add(\"point_1___double\");\n    fields = docFields;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e","date":1594223844,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/IndexSizeEstimatorTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/IndexSizeEstimatorTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    // create predictable field names\n    System.setProperty(\"solr.tests.numeric.dv\", \"true\");\n    System.setProperty(\"solr.tests.numeric.points\", \"true\");\n    System.setProperty(\"solr.tests.numeric.points.dv\", \"true\");\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-dynamic\"))\n        .configure();\n    solrClient = cluster.getSolrClient();\n    CollectionAdminRequest.createCollection(collection, \"conf\", 2, 2)\n        .process(solrClient);\n    cluster.waitForActiveCollection(collection, 2, 4);\n    SolrInputDocument lastDoc = addDocs(collection, NUM_DOCS);\n    HashSet<String> docFields = new HashSet<>(lastDoc.keySet());\n    docFields.add(\"_version_\");\n    docFields.add(\"_root_\");\n    docFields.add(\"point_0___double\");\n    docFields.add(\"point_1___double\");\n    fields = docFields;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    // create predictable field names\n    System.setProperty(\"solr.tests.numeric.dv\", \"true\");\n    System.setProperty(\"solr.tests.numeric.points\", \"true\");\n    System.setProperty(\"solr.tests.numeric.points.dv\", \"true\");\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-dynamic\"))\n        .configure();\n    solrClient = cluster.getSolrClient();\n    CollectionAdminRequest.createCollection(collection, \"conf\", 2, 2)\n        .setMaxShardsPerNode(2).process(solrClient);\n    cluster.waitForActiveCollection(collection, 2, 4);\n    SolrInputDocument lastDoc = addDocs(collection, NUM_DOCS);\n    HashSet<String> docFields = new HashSet<>(lastDoc.keySet());\n    docFields.add(\"_version_\");\n    docFields.add(\"_root_\");\n    docFields.add(\"point_0___double\");\n    docFields.add(\"point_1___double\");\n    fields = docFields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["e4583dbd381e291c87e23144564c59ba3391b188"],"e4583dbd381e291c87e23144564c59ba3391b188":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e4583dbd381e291c87e23144564c59ba3391b188"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e4583dbd381e291c87e23144564c59ba3391b188":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}