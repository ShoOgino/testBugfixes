{"path":"lucene/core/src/java/org/apache/lucene/index/AtomicReader#terms(String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/AtomicReader#terms(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/AtomicReader#terms(String).mjava","sourceNew":"  /** This may return null if the field does not exist.*/\n  public final Terms terms(String field) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return null;\n    }\n    return fields.terms(field);\n  }\n\n","sourceOld":"  /** This may return null if the field does not exist.*/\n  public final Terms terms(String field) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return null;\n    }\n    return fields.terms(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08eba3d52b63561ebf936481ce73e6b6a14aa03","date":1333879759,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/AtomicReader#terms(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/AtomicReader#terms(String).mjava","sourceNew":"  /** This may return null if the field does not exist.*/\n  public final Terms terms(String field) throws IOException {\n    final InvertedFields fields = fields();\n    if (fields == null) {\n      return null;\n    }\n    return fields.terms(field);\n  }\n\n","sourceOld":"  /** This may return null if the field does not exist.*/\n  public final Terms terms(String field) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return null;\n    }\n    return fields.terms(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","date":1333892281,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/AtomicReader#terms(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/AtomicReader#terms(String).mjava","sourceNew":"  /** This may return null if the field does not exist.*/\n  public final Terms terms(String field) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return null;\n    }\n    return fields.terms(field);\n  }\n\n","sourceOld":"  /** This may return null if the field does not exist.*/\n  public final Terms terms(String field) throws IOException {\n    final InvertedFields fields = fields();\n    if (fields == null) {\n      return null;\n    }\n    return fields.terms(field);\n  }\n\n","bugFix":null,"bugIntro":["8028ab7a24273833d53d35eb160dba5b57283cf5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":5,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LeafReader#terms(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/AtomicReader#terms(String).mjava","sourceNew":"  /** This may return null if the field does not exist.*/\n  public final Terms terms(String field) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return null;\n    }\n    return fields.terms(field);\n  }\n\n","sourceOld":"  /** This may return null if the field does not exist.*/\n  public final Terms terms(String field) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return null;\n    }\n    return fields.terms(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}