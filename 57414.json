{"path":"src/java/org/apache/lucene/index/IndexFileNameFilter#accept(File,String).mjava","commits":[{"id":"b1611beed0b848ccc6377353619b03b1b791a24c","date":1118343400,"type":0,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexFileNameFilter#accept(File,String).mjava","pathOld":"/dev/null","sourceNew":"  /* (non-Javadoc)\n   * @see java.io.FilenameFilter#accept(java.io.File, java.lang.String)\n   */\n  public boolean accept(File dir, String name) {\n    for (int i = 0; i < IndexFileNames.INDEX_EXTENSIONS.length; i++) {\n      if (name.endsWith(\".\"+IndexFileNames.INDEX_EXTENSIONS[i]))\n        return true;\n    }\n    if (name.equals(IndexFileNames.DELETABLE)) return true;\n    else if (name.equals(IndexFileNames.SEGMENTS)) return true;\n    else if (name.matches(\".+\\\\.f\\\\d+\")) return true;\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"284c1d3c8b19931bf6f312fae7470487f5d9e580","date":1163805527,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexFileNameFilter#accept(File,String).mjava","pathOld":"src/java/org/apache/lucene/index/IndexFileNameFilter#accept(File,String).mjava","sourceNew":"  /* (non-Javadoc)\n   * @see java.io.FilenameFilter#accept(java.io.File, java.lang.String)\n   */\n  public boolean accept(File dir, String name) {\n    int i = name.lastIndexOf('.');\n    if (i != -1) {\n      String extension = name.substring(1+i);\n      if (extensions.contains(extension)) {\n        return true;\n      } else if (extension.startsWith(\"f\") &&\n                 extension.matches(\"f\\\\d+\")) {\n        return true;\n      } else if (extension.startsWith(\"s\") &&\n                 extension.matches(\"s\\\\d+\")) {\n        return true;\n      }\n    } else {\n      if (name.equals(IndexFileNames.DELETABLE)) return true;\n      else if (name.startsWith(IndexFileNames.SEGMENTS)) return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  /* (non-Javadoc)\n   * @see java.io.FilenameFilter#accept(java.io.File, java.lang.String)\n   */\n  public boolean accept(File dir, String name) {\n    for (int i = 0; i < IndexFileNames.INDEX_EXTENSIONS.length; i++) {\n      if (name.endsWith(\".\"+IndexFileNames.INDEX_EXTENSIONS[i]))\n        return true;\n    }\n    if (name.equals(IndexFileNames.DELETABLE)) return true;\n    else if (name.equals(IndexFileNames.SEGMENTS)) return true;\n    else if (name.matches(\".+\\\\.f\\\\d+\")) return true;\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexFileNameFilter#accept(File,String).mjava","pathOld":"src/java/org/apache/lucene/index/IndexFileNameFilter#accept(File,String).mjava","sourceNew":"  /* (non-Javadoc)\n   * @see java.io.FilenameFilter#accept(java.io.File, java.lang.String)\n   */\n  public boolean accept(File dir, String name) {\n    int i = name.lastIndexOf('.');\n    if (i != -1) {\n      String extension = name.substring(1+i);\n      if (extensions.contains(extension)) {\n        return true;\n      } else if (extension.startsWith(\"f\") &&\n                 extension.matches(\"f\\\\d+\")) {\n        return true;\n      } else if (extension.startsWith(\"s\") &&\n                 extension.matches(\"s\\\\d+\")) {\n        return true;\n      }\n    } else {\n      if (name.equals(IndexFileNames.DELETABLE)) return true;\n      else if (name.startsWith(IndexFileNames.SEGMENTS)) return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  /* (non-Javadoc)\n   * @see java.io.FilenameFilter#accept(java.io.File, java.lang.String)\n   */\n  public boolean accept(File dir, String name) {\n    int i = name.lastIndexOf('.');\n    if (i != -1) {\n      String extension = name.substring(1+i);\n      if (extensions.contains(extension)) {\n        return true;\n      } else if (extension.startsWith(\"f\") &&\n                 extension.matches(\"f\\\\d+\")) {\n        return true;\n      } else if (extension.startsWith(\"s\") &&\n                 extension.matches(\"s\\\\d+\")) {\n        return true;\n      }\n    } else {\n      if (name.equals(IndexFileNames.DELETABLE)) return true;\n      else if (name.startsWith(IndexFileNames.SEGMENTS)) return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"284c1d3c8b19931bf6f312fae7470487f5d9e580":["b1611beed0b848ccc6377353619b03b1b791a24c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b1611beed0b848ccc6377353619b03b1b791a24c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["284c1d3c8b19931bf6f312fae7470487f5d9e580"]},"commit2Childs":{"284c1d3c8b19931bf6f312fae7470487f5d9e580":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b1611beed0b848ccc6377353619b03b1b791a24c"],"b1611beed0b848ccc6377353619b03b1b791a24c":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}