{"path":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","pathOld":"solr/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","sourceNew":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List<ValueSource>\n   * @throws ParseException\n   */\n  public List<ValueSource> parseValueSourceList() throws ParseException {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","sourceOld":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List<ValueSource>\n   * @throws ParseException\n   */\n  public List<ValueSource> parseValueSourceList() throws ParseException {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","pathOld":"solr/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","sourceNew":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List<ValueSource>\n   * @throws ParseException\n   */\n  public List<ValueSource> parseValueSourceList() throws ParseException {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","sourceOld":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List<ValueSource>\n   * @throws ParseException\n   */\n  public List<ValueSource> parseValueSourceList() throws ParseException {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","pathOld":"solr/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","sourceNew":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List<ValueSource>\n   * @throws ParseException\n   */\n  public List<ValueSource> parseValueSourceList() throws ParseException {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","sourceOld":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List<ValueSource>\n   * @throws ParseException\n   */\n  public List<ValueSource> parseValueSourceList() throws ParseException {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6d3fca4763c45f22581927b942c808dbb2e2aec","date":1347304121,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","sourceNew":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   * @throws ParseException\n   */\n  public List<ValueSource> parseValueSourceList() throws ParseException {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","sourceOld":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List<ValueSource>\n   * @throws ParseException\n   */\n  public List<ValueSource> parseValueSourceList() throws ParseException {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","sourceNew":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   */\n  public List<ValueSource> parseValueSourceList() throws ParseException {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","sourceOld":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   * @throws ParseException\n   */\n  public List<ValueSource> parseValueSourceList() throws ParseException {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","sourceNew":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   */\n  public List<ValueSource> parseValueSourceList() throws SyntaxError {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","sourceOld":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   */\n  public List<ValueSource> parseValueSourceList() throws ParseException {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","sourceNew":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   */\n  public List<ValueSource> parseValueSourceList() throws SyntaxError {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","sourceOld":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   */\n  public List<ValueSource> parseValueSourceList() throws ParseException {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","sourceNew":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   */\n  public List<ValueSource> parseValueSourceList() throws SyntaxError {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","sourceOld":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   */\n  public List<ValueSource> parseValueSourceList() throws SyntaxError {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","sourceNew":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   */\n  public List<ValueSource> parseValueSourceList() throws SyntaxError {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","sourceOld":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   */\n  public List<ValueSource> parseValueSourceList() throws SyntaxError {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","sourceNew":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   */\n  public List<ValueSource> parseValueSourceList() throws SyntaxError {\n    List<ValueSource> sources = new ArrayList<>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","sourceOld":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   */\n  public List<ValueSource> parseValueSourceList() throws SyntaxError {\n    List<ValueSource> sources = new ArrayList<ValueSource>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","date":1426480823,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","sourceNew":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   */\n  public List<ValueSource> parseValueSourceList() throws SyntaxError {\n    List<ValueSource> sources = new ArrayList<>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(FLAG_DEFAULT | FLAG_CONSUME_DELIMITER));\n    }\n    return sources;\n  }\n\n","sourceOld":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   */\n  public List<ValueSource> parseValueSourceList() throws SyntaxError {\n    List<ValueSource> sources = new ArrayList<>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","sourceNew":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   */\n  public List<ValueSource> parseValueSourceList() throws SyntaxError {\n    List<ValueSource> sources = new ArrayList<>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(FLAG_DEFAULT | FLAG_CONSUME_DELIMITER));\n    }\n    return sources;\n  }\n\n","sourceOld":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   */\n  public List<ValueSource> parseValueSourceList() throws SyntaxError {\n    List<ValueSource> sources = new ArrayList<>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(true));\n    }\n    return sources;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"254ec3078340f6312bb97bed5b76742a18079ec8","date":1600658388,"type":3,"author":"Tom Edge","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/FunctionQParser#parseValueSourceList().mjava","sourceNew":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   */\n  public List<ValueSource> parseValueSourceList() throws SyntaxError {\n    return parseValueSourceList(FLAG_DEFAULT | FLAG_CONSUME_DELIMITER);\n  }\n\n","sourceOld":"  /**\n   * Parse a list of ValueSource.  Must be the final set of arguments\n   * to a ValueSource.\n   * \n   * @return List&lt;ValueSource&gt;\n   */\n  public List<ValueSource> parseValueSourceList() throws SyntaxError {\n    List<ValueSource> sources = new ArrayList<>(3);\n    while (hasMoreArguments()) {\n      sources.add(parseValueSource(FLAG_DEFAULT | FLAG_CONSUME_DELIMITER));\n    }\n    return sources;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["a6d3fca4763c45f22581927b942c808dbb2e2aec"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["3cdb67100dc016748799a77218aa409478372d79","19275ba31e621f6da1b83bf13af75233876fd3d4"],"3cdb67100dc016748799a77218aa409478372d79":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"407687e67faf6e1f02a211ca078d8e3eed631027":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","3cdb67100dc016748799a77218aa409478372d79"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["3cdb67100dc016748799a77218aa409478372d79"],"a6d3fca4763c45f22581927b942c808dbb2e2aec":["c26f00b574427b55127e869b935845554afde1fa"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"254ec3078340f6312bb97bed5b76742a18079ec8":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["254ec3078340f6312bb97bed5b76742a18079ec8"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"3cdb67100dc016748799a77218aa409478372d79":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","407687e67faf6e1f02a211ca078d8e3eed631027","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c26f00b574427b55127e869b935845554afde1fa":["a6d3fca4763c45f22581927b942c808dbb2e2aec"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"a6d3fca4763c45f22581927b942c808dbb2e2aec":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","254ec3078340f6312bb97bed5b76742a18079ec8"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"254ec3078340f6312bb97bed5b76742a18079ec8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","407687e67faf6e1f02a211ca078d8e3eed631027","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}