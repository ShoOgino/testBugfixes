{"path":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/SidedPlane#constructNormalizedPerpendicularSidedPlane(Vector,Vector,Vector,Vector).mjava","commits":[{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/SidedPlane#constructNormalizedPerpendicularSidedPlane(Vector,Vector,Vector,Vector).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/SidedPlane#constructNormalizedPerpendicularSidedPlane(Vector,Vector,Vector,Vector).mjava","sourceNew":"  /** Construct a sided plane from two points and a third normal vector.\n   */\n  public static SidedPlane constructNormalizedPerpendicularSidedPlane(final Vector insidePoint,\n    final Vector normalVector, final Vector point1, final Vector point2) {\n    final Vector pointsVector = new Vector(point1.x - point2.x, point1.y - point2.y, point1.z - point2.z);\n    final Vector newNormalVector = new Vector(normalVector, pointsVector);\n    try {\n      // To construct the plane, we now just need D, which is simply the negative of the evaluation of the circle normal vector at one of the points.\n      return new SidedPlane(insidePoint, newNormalVector, -newNormalVector.dotProduct(point1));\n    } catch (IllegalArgumentException e) {\n      return null;\n    }\n  }\n\n","sourceOld":"  /** Construct a sided plane from two points and a third normal vector.\n   */\n  public static SidedPlane constructNormalizedPerpendicularSidedPlane(final Vector insidePoint,\n    final Vector normalVector, final Vector point1, final Vector point2) {\n    final Vector pointsVector = new Vector(point1.x - point2.x, point1.y - point2.y, point1.z - point2.z);\n    final Vector newNormalVector = new Vector(normalVector, pointsVector);\n    try {\n      // To construct the plane, we now just need D, which is simply the negative of the evaluation of the circle normal vector at one of the points.\n      return new SidedPlane(insidePoint, newNormalVector, -newNormalVector.dotProduct(point1));\n    } catch (IllegalArgumentException e) {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/SidedPlane#constructNormalizedPerpendicularSidedPlane(Vector,Vector,Vector,Vector).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/SidedPlane#constructNormalizedPerpendicularSidedPlane(Vector,Vector,Vector,Vector).mjava","sourceNew":"  /** Construct a sided plane from two points and a third normal vector.\n   */\n  public static SidedPlane constructNormalizedPerpendicularSidedPlane(final Vector insidePoint,\n    final Vector normalVector, final Vector point1, final Vector point2) {\n    final Vector pointsVector = new Vector(point1.x - point2.x, point1.y - point2.y, point1.z - point2.z);\n    final Vector newNormalVector = new Vector(normalVector, pointsVector);\n    try {\n      // To construct the plane, we now just need D, which is simply the negative of the evaluation of the circle normal vector at one of the points.\n      return new SidedPlane(insidePoint, newNormalVector, -newNormalVector.dotProduct(point1));\n    } catch (IllegalArgumentException e) {\n      return null;\n    }\n  }\n\n","sourceOld":"  /** Construct a sided plane from two points and a third normal vector.\n   */\n  public static SidedPlane constructNormalizedPerpendicularSidedPlane(final Vector insidePoint,\n    final Vector normalVector, final Vector point1, final Vector point2) {\n    final Vector pointsVector = new Vector(point1.x - point2.x, point1.y - point2.y, point1.z - point2.z);\n    final Vector newNormalVector = new Vector(normalVector, pointsVector);\n    try {\n      // To construct the plane, we now just need D, which is simply the negative of the evaluation of the circle normal vector at one of the points.\n      return new SidedPlane(insidePoint, newNormalVector, -newNormalVector.dotProduct(point1));\n    } catch (IllegalArgumentException e) {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3022be5842502b7c2a57a5124199bbc30236f0a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b4e444678504caf66a8060b1d514383aa4feac0c":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4e444678504caf66a8060b1d514383aa4feac0c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["b4e444678504caf66a8060b1d514383aa4feac0c"],"b4e444678504caf66a8060b1d514383aa4feac0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}