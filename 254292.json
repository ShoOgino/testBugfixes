{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#scorePayload(int,int,int,BytesRef).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#scorePayload(int,int,int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#scorePayload(int,int,int,BytesRef).mjava","sourceNew":"  /**\n   * Calculate a scoring factor based on the data in the payload.  Implementations\n   * are responsible for interpreting what is in the payload.  Lucene makes no assumptions about\n   * what is in the byte array.\n   *\n   * @param doc The docId currently being scored.\n   * @param start The start position of the payload\n   * @param end The end position of the payload\n   * @param payload The payload byte array to be scored\n   * @return An implementation dependent float to be used as a scoring factor\n   */\n  public abstract float scorePayload(int doc, int start, int end, BytesRef payload);\n\n","sourceOld":"  /**\n   * Calculate a scoring factor based on the data in the payload.  Implementations\n   * are responsible for interpreting what is in the payload.  Lucene makes no assumptions about\n   * what is in the byte array.\n   *\n   * @param doc The docId currently being scored.\n   * @param start The start position of the payload\n   * @param end The end position of the payload\n   * @param payload The payload byte array to be scored\n   * @return An implementation dependent float to be used as a scoring factor\n   */\n  public abstract float scorePayload(int doc, int start, int end, BytesRef payload);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7aa64361bd5d292936cdcc71668dbd37c406560f","date":1510312746,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#scorePayload(int,int,int,BytesRef).mjava","sourceNew":null,"sourceOld":"  /**\n   * Calculate a scoring factor based on the data in the payload.  Implementations\n   * are responsible for interpreting what is in the payload.  Lucene makes no assumptions about\n   * what is in the byte array.\n   *\n   * @param doc The docId currently being scored.\n   * @param start The start position of the payload\n   * @param end The end position of the payload\n   * @param payload The payload byte array to be scored\n   * @return An implementation dependent float to be used as a scoring factor\n   */\n  public abstract float scorePayload(int doc, int start, int end, BytesRef payload);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7aa64361bd5d292936cdcc71668dbd37c406560f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7aa64361bd5d292936cdcc71668dbd37c406560f"]},"commit2Childs":{"7aa64361bd5d292936cdcc71668dbd37c406560f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7aa64361bd5d292936cdcc71668dbd37c406560f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}