{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoRect#fromPointDistance(double,double,double).mjava","commits":[{"id":"43ddc1b7a872fafd838d3f3129984ca661e29b36","date":1459526591,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoRect#fromPointDistance(double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoUtils#circleToBBox(double,double,double).mjava","sourceNew":"  /** Compute Bounding Box for a circle using WGS-84 parameters */\n  public static GeoRect fromPointDistance(final double centerLat, final double centerLon, final double radiusMeters) {\n    checkLatitude(centerLat);\n    checkLongitude(centerLon);\n    final double radLat = toRadians(centerLat);\n    final double radLon = toRadians(centerLon);\n    // LUCENE-7143\n    double radDistance = (radiusMeters + 7E-2) / EARTH_MEAN_RADIUS_METERS;\n    double minLat = radLat - radDistance;\n    double maxLat = radLat + radDistance;\n    double minLon;\n    double maxLon;\n\n    if (minLat > MIN_LAT_RADIANS && maxLat < MAX_LAT_RADIANS) {\n      double deltaLon = asin(sloppySin(radDistance) / cos(radLat));\n      minLon = radLon - deltaLon;\n      if (minLon < MIN_LON_RADIANS) {\n        minLon += 2d * PI;\n      }\n      maxLon = radLon + deltaLon;\n      if (maxLon > MAX_LON_RADIANS) {\n        maxLon -= 2d * PI;\n      }\n    } else {\n      // a pole is within the distance\n      minLat = max(minLat, MIN_LAT_RADIANS);\n      maxLat = min(maxLat, MAX_LAT_RADIANS);\n      minLon = MIN_LON_RADIANS;\n      maxLon = MAX_LON_RADIANS;\n    }\n\n    return new GeoRect(toDegrees(minLat), toDegrees(maxLat), toDegrees(minLon), toDegrees(maxLon));\n  }\n\n","sourceOld":"  /** Compute Bounding Box for a circle using WGS-84 parameters */\n  public static GeoRect circleToBBox(final double centerLat, final double centerLon, final double radiusMeters) {\n    final double radLat = TO_RADIANS * centerLat;\n    final double radLon = TO_RADIANS * centerLon;\n    // LUCENE-7143\n    double radDistance = (radiusMeters + 7E-2) / EARTH_MEAN_RADIUS_METERS;\n    double minLat = radLat - radDistance;\n    double maxLat = radLat + radDistance;\n    double minLon;\n    double maxLon;\n\n    if (minLat > MIN_LAT_RADIANS && maxLat < MAX_LAT_RADIANS) {\n      double deltaLon = asin(sloppySin(radDistance) / cos(radLat));\n      minLon = radLon - deltaLon;\n      if (minLon < MIN_LON_RADIANS) {\n        minLon += 2d * PI;\n      }\n      maxLon = radLon + deltaLon;\n      if (maxLon > MAX_LON_RADIANS) {\n        maxLon -= 2d * PI;\n      }\n    } else {\n      // a pole is within the distance\n      minLat = max(minLat, MIN_LAT_RADIANS);\n      maxLat = min(maxLat, MAX_LAT_RADIANS);\n      minLon = MIN_LON_RADIANS;\n      maxLon = MAX_LON_RADIANS;\n    }\n\n    return new GeoRect(TO_DEGREES * minLat, TO_DEGREES * maxLat, TO_DEGREES * minLon, TO_DEGREES * maxLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe","date":1459623422,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Rectangle#fromPointDistance(double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoRect#fromPointDistance(double,double,double).mjava","sourceNew":"  /** Compute Bounding Box for a circle using WGS-84 parameters */\n  public static Rectangle fromPointDistance(final double centerLat, final double centerLon, final double radiusMeters) {\n    checkLatitude(centerLat);\n    checkLongitude(centerLon);\n    final double radLat = toRadians(centerLat);\n    final double radLon = toRadians(centerLon);\n    // LUCENE-7143\n    double radDistance = (radiusMeters + 7E-2) / EARTH_MEAN_RADIUS_METERS;\n    double minLat = radLat - radDistance;\n    double maxLat = radLat + radDistance;\n    double minLon;\n    double maxLon;\n\n    if (minLat > MIN_LAT_RADIANS && maxLat < MAX_LAT_RADIANS) {\n      double deltaLon = asin(sloppySin(radDistance) / cos(radLat));\n      minLon = radLon - deltaLon;\n      if (minLon < MIN_LON_RADIANS) {\n        minLon += 2d * PI;\n      }\n      maxLon = radLon + deltaLon;\n      if (maxLon > MAX_LON_RADIANS) {\n        maxLon -= 2d * PI;\n      }\n    } else {\n      // a pole is within the distance\n      minLat = max(minLat, MIN_LAT_RADIANS);\n      maxLat = min(maxLat, MAX_LAT_RADIANS);\n      minLon = MIN_LON_RADIANS;\n      maxLon = MAX_LON_RADIANS;\n    }\n\n    return new Rectangle(toDegrees(minLat), toDegrees(maxLat), toDegrees(minLon), toDegrees(maxLon));\n  }\n\n","sourceOld":"  /** Compute Bounding Box for a circle using WGS-84 parameters */\n  public static GeoRect fromPointDistance(final double centerLat, final double centerLon, final double radiusMeters) {\n    checkLatitude(centerLat);\n    checkLongitude(centerLon);\n    final double radLat = toRadians(centerLat);\n    final double radLon = toRadians(centerLon);\n    // LUCENE-7143\n    double radDistance = (radiusMeters + 7E-2) / EARTH_MEAN_RADIUS_METERS;\n    double minLat = radLat - radDistance;\n    double maxLat = radLat + radDistance;\n    double minLon;\n    double maxLon;\n\n    if (minLat > MIN_LAT_RADIANS && maxLat < MAX_LAT_RADIANS) {\n      double deltaLon = asin(sloppySin(radDistance) / cos(radLat));\n      minLon = radLon - deltaLon;\n      if (minLon < MIN_LON_RADIANS) {\n        minLon += 2d * PI;\n      }\n      maxLon = radLon + deltaLon;\n      if (maxLon > MAX_LON_RADIANS) {\n        maxLon -= 2d * PI;\n      }\n    } else {\n      // a pole is within the distance\n      minLat = max(minLat, MIN_LAT_RADIANS);\n      maxLat = min(maxLat, MAX_LAT_RADIANS);\n      minLon = MIN_LON_RADIANS;\n      maxLon = MAX_LON_RADIANS;\n    }\n\n    return new GeoRect(toDegrees(minLat), toDegrees(maxLat), toDegrees(minLon), toDegrees(maxLon));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["43ddc1b7a872fafd838d3f3129984ca661e29b36"],"43ddc1b7a872fafd838d3f3129984ca661e29b36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["43ddc1b7a872fafd838d3f3129984ca661e29b36"],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43ddc1b7a872fafd838d3f3129984ca661e29b36":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}