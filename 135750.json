{"path":"lucene/core/src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setStoreTermVectors(true);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Field fld = newField(\"field\", English.intToEnglish(i), customType);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setStoreTermVectors(true);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Field fld = newField(\"field\", English.intToEnglish(i), customType);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setStoreTermVectors(true);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Field fld = newField(\"field\", English.intToEnglish(i), customType);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setStoreTermVectors(true);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Field fld = newField(\"field\", English.intToEnglish(i), customType);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"088a7ef694fd43d5d9a4d200c4005865f773d1e7","date":1371136274,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    //writer.setNoCFSRatio(0.0);\n    //writer.infoStream = System.out;\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setStoreTermVectors(true);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Field fld = newField(\"field\", English.intToEnglish(i), customType);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setStoreTermVectors(true);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Field fld = newField(\"field\", English.intToEnglish(i), customType);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    //writer.setNoCFSRatio(0.0);\n    //writer.infoStream = System.out;\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setStoreTermVectors(true);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Field fld = newField(\"field\", English.intToEnglish(i), customType);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.shutdown();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    //writer.setNoCFSRatio(0.0);\n    //writer.infoStream = System.out;\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setStoreTermVectors(true);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Field fld = newField(\"field\", English.intToEnglish(i), customType);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    //writer.setNoCFSRatio(0.0);\n    //writer.infoStream = System.out;\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setStoreTermVectors(true);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Field fld = newField(\"field\", English.intToEnglish(i), customType);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.shutdown();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    //writer.setNoCFSRatio(0.0);\n    //writer.infoStream = System.out;\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setStoreTermVectors(true);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Field fld = newField(\"field\", English.intToEnglish(i), customType);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.shutdown();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    //writer.setNoCFSRatio(0.0);\n    //writer.infoStream = System.out;\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setStoreTermVectors(true);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Field fld = newField(\"field\", English.intToEnglish(i), customType);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    //writer.setNoCFSRatio(0.0);\n    //writer.infoStream = System.out;\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setStoreTermVectors(true);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Field fld = newField(\"field\", English.intToEnglish(i), customType);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.shutdown();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4208ed8e426ae5f75a41d8b4ae53f4587e413061","date":1580475454,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    numDocs = TEST_NIGHTLY ? 1000 : 50;\n    numThreads = TEST_NIGHTLY ? 3 : 2;\n    numIterations = TEST_NIGHTLY ? 100 : 50;\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setStoreTermVectors(true);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Field fld = newField(\"field\", English.intToEnglish(i), customType);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    //writer.setNoCFSRatio(0.0);\n    //writer.infoStream = System.out;\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setStoreTermVectors(true);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Field fld = newField(\"field\", English.intToEnglish(i), customType);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"4208ed8e426ae5f75a41d8b4ae53f4587e413061":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4208ed8e426ae5f75a41d8b4ae53f4587e413061"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["4208ed8e426ae5f75a41d8b4ae53f4587e413061"],"4208ed8e426ae5f75a41d8b4ae53f4587e413061":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}