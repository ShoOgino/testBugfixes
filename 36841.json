{"path":"lucene/facet/src/test/org/apache/lucene/facet/index/CategoryContainerTest#testExistingNewCategoryWithProperty().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/index/CategoryContainerTest#testExistingNewCategoryWithProperty().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/index/CategoryContainerTest#testExistingNewCategoryWithProperty().mjava","sourceNew":"  @Test\n  public void testExistingNewCategoryWithProperty() throws FacetException {\n    categoryContainer.addCategory(new CategoryPath(\"five\", \"six\"),\n        new DummyProperty());\n    Iterator<CategoryAttribute> iterator = categoryContainer.iterator();\n\n    // count the number of tokens, and check there is one DummyAttribute\n    int nCategories;\n    int nProperties = 0;\n    for (nCategories = 0; iterator.hasNext(); nCategories++) {\n      CategoryAttribute attribute = iterator.next();\n      if (attribute.getProperty(DummyProperty.class) != null) {\n        nProperties++;\n      }\n    }\n    assertEquals(\"Wrong number of tokens\", 3, nCategories);\n    assertEquals(\"Wrong number of tokens with properties\", 1, nProperties);\n  }\n\n","sourceOld":"  @Test\n  public void testExistingNewCategoryWithProperty() throws FacetException {\n    categoryContainer.addCategory(new CategoryPath(\"five\", \"six\"),\n        new DummyProperty());\n    Iterator<CategoryAttribute> iterator = categoryContainer.iterator();\n\n    // count the number of tokens, and check there is one DummyAttribute\n    int nCategories;\n    int nProperties = 0;\n    for (nCategories = 0; iterator.hasNext(); nCategories++) {\n      CategoryAttribute attribute = iterator.next();\n      if (attribute.getProperty(DummyProperty.class) != null) {\n        nProperties++;\n      }\n    }\n    assertEquals(\"Wrong number of tokens\", 3, nCategories);\n    assertEquals(\"Wrong number of tokens with properties\", 1, nProperties);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4c6c7f3cda7a0595cabd16e5e9107ca29852708","date":1355402234,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/index/CategoryContainerTest#testExistingNewCategoryWithProperty().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/index/CategoryContainerTest#testExistingNewCategoryWithProperty().mjava","sourceNew":"  @Test\n  public void testExistingNewCategoryWithProperty() throws FacetException {\n    categoryContainer.addCategory(new CategoryPath(\"five\", \"six\"),\n        DummyProperty.INSTANCE);\n    Iterator<CategoryAttribute> iterator = categoryContainer.iterator();\n\n    // count the number of tokens, and check there is one DummyAttribute\n    int nCategories;\n    int nProperties = 0;\n    for (nCategories = 0; iterator.hasNext(); nCategories++) {\n      CategoryAttribute attribute = iterator.next();\n      if (attribute.getProperty(DummyProperty.class) != null) {\n        nProperties++;\n      }\n    }\n    assertEquals(\"Wrong number of tokens\", 3, nCategories);\n    assertEquals(\"Wrong number of tokens with properties\", 1, nProperties);\n  }\n\n","sourceOld":"  @Test\n  public void testExistingNewCategoryWithProperty() throws FacetException {\n    categoryContainer.addCategory(new CategoryPath(\"five\", \"six\"),\n        new DummyProperty());\n    Iterator<CategoryAttribute> iterator = categoryContainer.iterator();\n\n    // count the number of tokens, and check there is one DummyAttribute\n    int nCategories;\n    int nProperties = 0;\n    for (nCategories = 0; iterator.hasNext(); nCategories++) {\n      CategoryAttribute attribute = iterator.next();\n      if (attribute.getProperty(DummyProperty.class) != null) {\n        nProperties++;\n      }\n    }\n    assertEquals(\"Wrong number of tokens\", 3, nCategories);\n    assertEquals(\"Wrong number of tokens with properties\", 1, nProperties);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a1037d9031f9702ee6912f8751ef1d5320da6d9","date":1357217787,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/index/CategoryContainerTest#testExistingNewCategoryWithProperty().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testExistingNewCategoryWithProperty() throws FacetException {\n    categoryContainer.addCategory(new CategoryPath(\"five\", \"six\"),\n        DummyProperty.INSTANCE);\n    Iterator<CategoryAttribute> iterator = categoryContainer.iterator();\n\n    // count the number of tokens, and check there is one DummyAttribute\n    int nCategories;\n    int nProperties = 0;\n    for (nCategories = 0; iterator.hasNext(); nCategories++) {\n      CategoryAttribute attribute = iterator.next();\n      if (attribute.getProperty(DummyProperty.class) != null) {\n        nProperties++;\n      }\n    }\n    assertEquals(\"Wrong number of tokens\", 3, nCategories);\n    assertEquals(\"Wrong number of tokens with properties\", 1, nProperties);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/index/CategoryContainerTest#testExistingNewCategoryWithProperty().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testExistingNewCategoryWithProperty() throws FacetException {\n    categoryContainer.addCategory(new CategoryPath(\"five\", \"six\"),\n        new DummyProperty());\n    Iterator<CategoryAttribute> iterator = categoryContainer.iterator();\n\n    // count the number of tokens, and check there is one DummyAttribute\n    int nCategories;\n    int nProperties = 0;\n    for (nCategories = 0; iterator.hasNext(); nCategories++) {\n      CategoryAttribute attribute = iterator.next();\n      if (attribute.getProperty(DummyProperty.class) != null) {\n        nProperties++;\n      }\n    }\n    assertEquals(\"Wrong number of tokens\", 3, nCategories);\n    assertEquals(\"Wrong number of tokens with properties\", 1, nProperties);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7a1037d9031f9702ee6912f8751ef1d5320da6d9"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}