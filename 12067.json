{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","commits":[{"id":"717e5ceb2acae36d422ec75e5a4ce9fac40506e1","date":1501239603,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    JettySolrRunner jetty1 = cluster.getJettySolrRunner(0);\n    JettySolrRunner jetty2 = cluster.getJettySolrRunner(1);\n    JettySolrRunner jetty3 = cluster.getJettySolrRunner(2);\n    CollectionAdminRequest.createCollection(COLLECTION1, \"conf\", 2, 2)\n        .setCreateNodeSet(jetty1.getNodeName()+\",\"+jetty2.getNodeName())\n        .setAutoAddReplicas(true)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(COLLECTION2, \"conf\", 2, 2)\n        .setCreateNodeSet(jetty2.getNodeName()+\",\"+jetty3.getNodeName())\n        .setAutoAddReplicas(false)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n    // the number of cores in jetty1 (5) will be larger than jetty3 (1)\n    CollectionAdminRequest.createCollection(\"testSimple3\", \"conf\", 3, 1)\n        .setCreateNodeSet(jetty1.getNodeName())\n        .setAutoAddReplicas(false)\n        .setMaxShardsPerNode(3)\n        .process(cluster.getSolrClient());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","273ff2f5b0b365591fcbe91ea23b5e97027ca60d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0cbc51bc0d0893017a12a225a05146a890ece851","date":1502333632,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    JettySolrRunner jetty1 = cluster.getJettySolrRunner(0);\n    JettySolrRunner jetty2 = cluster.getJettySolrRunner(1);\n    JettySolrRunner jetty3 = cluster.getJettySolrRunner(2);\n    CollectionAdminRequest.createCollection(COLLECTION1, \"conf\", 2, 2)\n        .setCreateNodeSet(jetty1.getNodeName()+\",\"+jetty2.getNodeName())\n        .setAutoAddReplicas(true)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(COLLECTION2, \"conf\", 2, 2)\n        .setCreateNodeSet(jetty2.getNodeName()+\",\"+jetty3.getNodeName())\n        .setAutoAddReplicas(false)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n    // the number of cores in jetty1 (5) will be larger than jetty3 (1)\n    CollectionAdminRequest.createCollection(\"testSimple3\", \"conf\", 3, 1)\n        .setCreateNodeSet(jetty1.getNodeName())\n        .setAutoAddReplicas(false)\n        .setMaxShardsPerNode(3)\n        .process(cluster.getSolrClient());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9bab19a922620e2e2297097b9e28f81dff73fb9d","date":1520945121,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9318235fae47cfc9aeb136234ff931ef095d0107","date":1539166132,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n\n    new V2Request.Builder(\"/cluster\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{set-obj-property:{defaults : {cluster: {useLegacyReplicaAssignment:true}}}}}\")\n        .build()\n        .process(cluster.getSolrClient());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n\n    new V2Request.Builder(\"/cluster\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{set-obj-property:{defaults : {cluster: {useLegacyReplicaAssignment:true}}}}}\")\n        .build()\n        .process(cluster.getSolrClient());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n\n    new V2Request.Builder(\"/cluster\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{set-obj-property:{defaults : {cluster: {useLegacyReplicaAssignment:true}}}}}\")\n        .build()\n        .process(cluster.getSolrClient());\n  }\n\n","bugFix":["717e5ceb2acae36d422ec75e5a4ce9fac40506e1"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"273ff2f5b0b365591fcbe91ea23b5e97027ca60d","date":1551111277,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(getConfigSet()))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n\n    new V2Request.Builder(\"/cluster\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{set-obj-property:{defaults : {cluster: {useLegacyReplicaAssignment:true}}}}}\")\n        .build()\n        .process(cluster.getSolrClient());\n  }\n\n","sourceOld":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n\n    new V2Request.Builder(\"/cluster\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{set-obj-property:{defaults : {cluster: {useLegacyReplicaAssignment:true}}}}}\")\n        .build()\n        .process(cluster.getSolrClient());\n  }\n\n","bugFix":["717e5ceb2acae36d422ec75e5a4ce9fac40506e1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91f7dccce9b0ec051304926da532b96944956895","date":1551188806,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(getConfigSet()))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n\n    new V2Request.Builder(\"/cluster\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{set-obj-property:{defaults : {cluster: {useLegacyReplicaAssignment:true}}}}}\")\n        .build()\n        .process(cluster.getSolrClient());\n  }\n\n","sourceOld":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n\n    new V2Request.Builder(\"/cluster\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{set-obj-property:{defaults : {cluster: {useLegacyReplicaAssignment:true}}}}}\")\n        .build()\n        .process(cluster.getSolrClient());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61f55b4999c3f858f4f4acc9c6dc57af2c1acf99","date":1571689506,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(getConfigSet()))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n\n    new V2Request.Builder(\"/cluster\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{set-obj-property:{defaults : {cluster: {useLegacyReplicaAssignment:true}}}}\")\n        .build()\n        .process(cluster.getSolrClient());\n  }\n\n","sourceOld":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(getConfigSet()))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n\n    new V2Request.Builder(\"/cluster\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{set-obj-property:{defaults : {cluster: {useLegacyReplicaAssignment:true}}}}}\")\n        .build()\n        .process(cluster.getSolrClient());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f94e3cd399f3275b48f601d95bc80d6d9b7fc4ca","date":1586138114,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(getConfigSet()))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n\n    new V2Request.Builder(\"/cluster\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{set-obj-property:{defaults : {cluster: {useLegacyReplicaAssignment:true}}}}\")\n        .build()\n        .process(cluster.getSolrClient());\n\n    new V2Request.Builder(\"/cluster/autoscaling\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{'set-trigger':{'name':'.auto_add_replicas','event':'nodeLost','waitFor':'5s','enabled':'true','actions':[{'name':'auto_add_replicas_plan','class':'solr.AutoAddReplicasPlanAction'},{'name':'auto_add_replicas_plan','class':'solr.ExecutePlanAction'}]}}\")\n        .build()\n        .process(cluster.getSolrClient());\n  }\n\n","sourceOld":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(getConfigSet()))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n\n    new V2Request.Builder(\"/cluster\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{set-obj-property:{defaults : {cluster: {useLegacyReplicaAssignment:true}}}}\")\n        .build()\n        .process(cluster.getSolrClient());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e90c6ca121e10bc6d77a71d1149c15cf4f7aa81f","date":1593121850,"type":3,"author":"Marcus","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(getConfigSet()))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n\n    new V2Request.Builder(\"/cluster\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{set-obj-property:{defaults : {cluster: {useLegacyReplicaAssignment:true}}}}\")\n        .build()\n        .process(cluster.getSolrClient());\n\n    new V2Request.Builder(\"/cluster/autoscaling\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{'set-trigger':{'name':'.auto_add_replicas','event':'nodeLost','waitFor':'5s','enabled':'true','actions':[{'name':'auto_add_replicas_plan','class':'solr.AutoAddReplicasPlanAction'},{'name':'execute_plan','class':'solr.ExecutePlanAction'}]}}\")\n        .build()\n        .process(cluster.getSolrClient());\n  }\n\n","sourceOld":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(getConfigSet()))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n\n    new V2Request.Builder(\"/cluster\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{set-obj-property:{defaults : {cluster: {useLegacyReplicaAssignment:true}}}}\")\n        .build()\n        .process(cluster.getSolrClient());\n\n    new V2Request.Builder(\"/cluster/autoscaling\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{'set-trigger':{'name':'.auto_add_replicas','event':'nodeLost','waitFor':'5s','enabled':'true','actions':[{'name':'auto_add_replicas_plan','class':'solr.AutoAddReplicasPlanAction'},{'name':'auto_add_replicas_plan','class':'solr.ExecutePlanAction'}]}}\")\n        .build()\n        .process(cluster.getSolrClient());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoAddReplicasIntegrationTest#setupCluster().mjava","sourceNew":null,"sourceOld":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(getConfigSet()))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n\n    new V2Request.Builder(\"/cluster\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{set-obj-property:{defaults : {cluster: {useLegacyReplicaAssignment:true}}}}\")\n        .build()\n        .process(cluster.getSolrClient());\n\n    new V2Request.Builder(\"/cluster/autoscaling\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{'set-trigger':{'name':'.auto_add_replicas','event':'nodeLost','waitFor':'5s','enabled':'true','actions':[{'name':'auto_add_replicas_plan','class':'solr.AutoAddReplicasPlanAction'},{'name':'execute_plan','class':'solr.ExecutePlanAction'}]}}\")\n        .build()\n        .process(cluster.getSolrClient());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f94e3cd399f3275b48f601d95bc80d6d9b7fc4ca":["61f55b4999c3f858f4f4acc9c6dc57af2c1acf99"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0cbc51bc0d0893017a12a225a05146a890ece851"],"717e5ceb2acae36d422ec75e5a4ce9fac40506e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3f504512a03d978990cbff30db0522b354e846db":["e90c6ca121e10bc6d77a71d1149c15cf4f7aa81f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["9318235fae47cfc9aeb136234ff931ef095d0107"],"61f55b4999c3f858f4f4acc9c6dc57af2c1acf99":["91f7dccce9b0ec051304926da532b96944956895"],"e90c6ca121e10bc6d77a71d1149c15cf4f7aa81f":["f94e3cd399f3275b48f601d95bc80d6d9b7fc4ca"],"9318235fae47cfc9aeb136234ff931ef095d0107":["9bab19a922620e2e2297097b9e28f81dff73fb9d"],"273ff2f5b0b365591fcbe91ea23b5e97027ca60d":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"0cbc51bc0d0893017a12a225a05146a890ece851":["717e5ceb2acae36d422ec75e5a4ce9fac40506e1"],"9bab19a922620e2e2297097b9e28f81dff73fb9d":["560c18d71dad43d675158783c3840f8c80d6d39c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"560c18d71dad43d675158783c3840f8c80d6d39c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"91f7dccce9b0ec051304926da532b96944956895":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","273ff2f5b0b365591fcbe91ea23b5e97027ca60d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"f94e3cd399f3275b48f601d95bc80d6d9b7fc4ca":["e90c6ca121e10bc6d77a71d1149c15cf4f7aa81f"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"717e5ceb2acae36d422ec75e5a4ce9fac40506e1":["0cbc51bc0d0893017a12a225a05146a890ece851"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["273ff2f5b0b365591fcbe91ea23b5e97027ca60d","91f7dccce9b0ec051304926da532b96944956895"],"61f55b4999c3f858f4f4acc9c6dc57af2c1acf99":["f94e3cd399f3275b48f601d95bc80d6d9b7fc4ca"],"e90c6ca121e10bc6d77a71d1149c15cf4f7aa81f":["3f504512a03d978990cbff30db0522b354e846db"],"9318235fae47cfc9aeb136234ff931ef095d0107":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"273ff2f5b0b365591fcbe91ea23b5e97027ca60d":["91f7dccce9b0ec051304926da532b96944956895"],"0cbc51bc0d0893017a12a225a05146a890ece851":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"9bab19a922620e2e2297097b9e28f81dff73fb9d":["9318235fae47cfc9aeb136234ff931ef095d0107"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c304e97e7c1d472bc70e801b35ee78583916c6cd","717e5ceb2acae36d422ec75e5a4ce9fac40506e1","560c18d71dad43d675158783c3840f8c80d6d39c"],"91f7dccce9b0ec051304926da532b96944956895":["61f55b4999c3f858f4f4acc9c6dc57af2c1acf99"],"560c18d71dad43d675158783c3840f8c80d6d39c":["9bab19a922620e2e2297097b9e28f81dff73fb9d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}