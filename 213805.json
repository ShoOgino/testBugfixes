{"path":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testMultipleSnippetSizes().mjava","commits":[{"id":"e8176b5c0894f97addb4b77198ec5684476b1b32","date":1365103218,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testMultipleSnippetSizes().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultipleSnippetSizes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Field title = new Field(\"title\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(\"body\", \"test\")), BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(\"title\", \"test\")), BooleanClause.Occur.SHOULD);\n    Map<String,String[]> snippets = highlighter.highlightFields(new String[] { \"title\", \"body\" }, query, searcher, new int[] { 0 }, new int[] { 1, 2 });\n    String titleHighlight = snippets.get(\"title\")[0];\n    String bodyHighlight = snippets.get(\"body\")[0];\n    assertEquals(\"This is a <b>test</b>. \", titleHighlight);\n    assertEquals(\"This is a <b>test</b>. Just a <b>test</b> highlighting from postings. \", bodyHighlight);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testMultipleSnippetSizes().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testMultipleSnippetSizes().mjava","sourceNew":"  public void testMultipleSnippetSizes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Field title = new Field(\"title\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(\"body\", \"test\")), BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(\"title\", \"test\")), BooleanClause.Occur.SHOULD);\n    Map<String,String[]> snippets = highlighter.highlightFields(new String[] { \"title\", \"body\" }, query, searcher, new int[] { 0 }, new int[] { 1, 2 });\n    String titleHighlight = snippets.get(\"title\")[0];\n    String bodyHighlight = snippets.get(\"body\")[0];\n    assertEquals(\"This is a <b>test</b>. \", titleHighlight);\n    assertEquals(\"This is a <b>test</b>. Just a <b>test</b> highlighting from postings. \", bodyHighlight);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultipleSnippetSizes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Field title = new Field(\"title\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(\"body\", \"test\")), BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(\"title\", \"test\")), BooleanClause.Occur.SHOULD);\n    Map<String,String[]> snippets = highlighter.highlightFields(new String[] { \"title\", \"body\" }, query, searcher, new int[] { 0 }, new int[] { 1, 2 });\n    String titleHighlight = snippets.get(\"title\")[0];\n    String bodyHighlight = snippets.get(\"body\")[0];\n    assertEquals(\"This is a <b>test</b>. \", titleHighlight);\n    assertEquals(\"This is a <b>test</b>. Just a <b>test</b> highlighting from postings. \", bodyHighlight);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testMultipleSnippetSizes().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testMultipleSnippetSizes().mjava","sourceNew":"  public void testMultipleSnippetSizes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Field title = new Field(\"title\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(\"body\", \"test\")), BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(\"title\", \"test\")), BooleanClause.Occur.SHOULD);\n    Map<String,String[]> snippets = highlighter.highlightFields(new String[] { \"title\", \"body\" }, query, searcher, new int[] { 0 }, new int[] { 1, 2 });\n    String titleHighlight = snippets.get(\"title\")[0];\n    String bodyHighlight = snippets.get(\"body\")[0];\n    assertEquals(\"This is a <b>test</b>. \", titleHighlight);\n    assertEquals(\"This is a <b>test</b>. Just a <b>test</b> highlighting from postings. \", bodyHighlight);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultipleSnippetSizes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Field title = new Field(\"title\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(\"body\", \"test\")), BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(\"title\", \"test\")), BooleanClause.Occur.SHOULD);\n    Map<String,String[]> snippets = highlighter.highlightFields(new String[] { \"title\", \"body\" }, query, searcher, new int[] { 0 }, new int[] { 1, 2 });\n    String titleHighlight = snippets.get(\"title\")[0];\n    String bodyHighlight = snippets.get(\"body\")[0];\n    assertEquals(\"This is a <b>test</b>. \", titleHighlight);\n    assertEquals(\"This is a <b>test</b>. Just a <b>test</b> highlighting from postings. \", bodyHighlight);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testMultipleSnippetSizes().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testMultipleSnippetSizes().mjava","sourceNew":"  public void testMultipleSnippetSizes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Field title = new Field(\"title\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(\"body\", \"test\")), BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(\"title\", \"test\")), BooleanClause.Occur.SHOULD);\n    Map<String,String[]> snippets = highlighter.highlightFields(new String[] { \"title\", \"body\" }, query, searcher, new int[] { 0 }, new int[] { 1, 2 });\n    String titleHighlight = snippets.get(\"title\")[0];\n    String bodyHighlight = snippets.get(\"body\")[0];\n    assertEquals(\"This is a <b>test</b>. \", titleHighlight);\n    assertEquals(\"This is a <b>test</b>. Just a <b>test</b> highlighting from postings. \", bodyHighlight);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultipleSnippetSizes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Field title = new Field(\"title\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(\"body\", \"test\")), BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(\"title\", \"test\")), BooleanClause.Occur.SHOULD);\n    Map<String,String[]> snippets = highlighter.highlightFields(new String[] { \"title\", \"body\" }, query, searcher, new int[] { 0 }, new int[] { 1, 2 });\n    String titleHighlight = snippets.get(\"title\")[0];\n    String bodyHighlight = snippets.get(\"body\")[0];\n    assertEquals(\"This is a <b>test</b>. \", titleHighlight);\n    assertEquals(\"This is a <b>test</b>. Just a <b>test</b> highlighting from postings. \", bodyHighlight);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testMultipleSnippetSizes().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testMultipleSnippetSizes().mjava","sourceNew":"  public void testMultipleSnippetSizes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Field title = new Field(\"title\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n    query.add(new TermQuery(new Term(\"body\", \"test\")), BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(\"title\", \"test\")), BooleanClause.Occur.SHOULD);\n    Map<String,String[]> snippets = highlighter.highlightFields(new String[] { \"title\", \"body\" }, query.build(), searcher, new int[] { 0 }, new int[] { 1, 2 });\n    String titleHighlight = snippets.get(\"title\")[0];\n    String bodyHighlight = snippets.get(\"body\")[0];\n    assertEquals(\"This is a <b>test</b>. \", titleHighlight);\n    assertEquals(\"This is a <b>test</b>. Just a <b>test</b> highlighting from postings. \", bodyHighlight);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultipleSnippetSizes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Field title = new Field(\"title\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(\"body\", \"test\")), BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(\"title\", \"test\")), BooleanClause.Occur.SHOULD);\n    Map<String,String[]> snippets = highlighter.highlightFields(new String[] { \"title\", \"body\" }, query, searcher, new int[] { 0 }, new int[] { 1, 2 });\n    String titleHighlight = snippets.get(\"title\")[0];\n    String bodyHighlight = snippets.get(\"body\")[0];\n    assertEquals(\"This is a <b>test</b>. \", titleHighlight);\n    assertEquals(\"This is a <b>test</b>. Just a <b>test</b> highlighting from postings. \", bodyHighlight);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"381618eac2691bb34ab9a3fca76ad55c6274517e","date":1495564791,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testMultipleSnippetSizes().mjava","sourceNew":null,"sourceOld":"  public void testMultipleSnippetSizes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Field title = new Field(\"title\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n    query.add(new TermQuery(new Term(\"body\", \"test\")), BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(\"title\", \"test\")), BooleanClause.Occur.SHOULD);\n    Map<String,String[]> snippets = highlighter.highlightFields(new String[] { \"title\", \"body\" }, query.build(), searcher, new int[] { 0 }, new int[] { 1, 2 });\n    String titleHighlight = snippets.get(\"title\")[0];\n    String bodyHighlight = snippets.get(\"body\")[0];\n    assertEquals(\"This is a <b>test</b>. \", titleHighlight);\n    assertEquals(\"This is a <b>test</b>. Just a <b>test</b> highlighting from postings. \", bodyHighlight);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testMultipleSnippetSizes().mjava","sourceNew":null,"sourceOld":"  public void testMultipleSnippetSizes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Field title = new Field(\"title\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n    query.add(new TermQuery(new Term(\"body\", \"test\")), BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(\"title\", \"test\")), BooleanClause.Occur.SHOULD);\n    Map<String,String[]> snippets = highlighter.highlightFields(new String[] { \"title\", \"body\" }, query.build(), searcher, new int[] { 0 }, new int[] { 1, 2 });\n    String titleHighlight = snippets.get(\"title\")[0];\n    String bodyHighlight = snippets.get(\"body\")[0];\n    assertEquals(\"This is a <b>test</b>. \", titleHighlight);\n    assertEquals(\"This is a <b>test</b>. Just a <b>test</b> highlighting from postings. \", bodyHighlight);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"381618eac2691bb34ab9a3fca76ad55c6274517e":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","381618eac2691bb34ab9a3fca76ad55c6274517e"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"e8176b5c0894f97addb4b77198ec5684476b1b32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["e8176b5c0894f97addb4b77198ec5684476b1b32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["381618eac2691bb34ab9a3fca76ad55c6274517e"]},"commit2Childs":{"381618eac2691bb34ab9a3fca76ad55c6274517e":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["381618eac2691bb34ab9a3fca76ad55c6274517e","e9017cf144952056066919f1ebc7897ff9bd71b1"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"e8176b5c0894f97addb4b77198ec5684476b1b32":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e8176b5c0894f97addb4b77198ec5684476b1b32"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}