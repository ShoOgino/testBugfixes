{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createProcessor(SolrQueryRequest,Map[String,Object],DocSet).mjava","commits":[{"id":"3802d95c3a31be21ea2971945049b711d95ef8d5","date":1455055616,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createProcessor(SolrQueryRequest,Map[String,Object],DocSet).mjava","pathOld":"/dev/null","sourceNew":"  /** factory method for invoking json facet framework as whole */\n  public static FacetProcessor<?> createProcessor(SolrQueryRequest req, \n      Map<String, Object> params, DocSet docs){\n    FacetParser parser = new FacetTopParser(req);\n    FacetRequest facetRequest = null;\n    try {\n      facetRequest = parser.parse(params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n\n    FacetContext fcontext = new FacetContext();\n    fcontext.base = docs;\n    fcontext.req = req;\n    fcontext.searcher = req.getSearcher();\n    fcontext.qcontext = QueryContext.newContext(fcontext.searcher);\n\n    return facetRequest.createFacetProcessor(fcontext);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c64189697927b548f74ba66dfa5051548662938","date":1455059336,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createProcessor(SolrQueryRequest,Map[String,Object],DocSet).mjava","pathOld":"/dev/null","sourceNew":"  /** factory method for invoking json facet framework as whole */\n  public static FacetProcessor<?> createProcessor(SolrQueryRequest req, \n      Map<String, Object> params, DocSet docs){\n    FacetParser parser = new FacetTopParser(req);\n    FacetRequest facetRequest = null;\n    try {\n      facetRequest = parser.parse(params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n\n    FacetContext fcontext = new FacetContext();\n    fcontext.base = docs;\n    fcontext.req = req;\n    fcontext.searcher = req.getSearcher();\n    fcontext.qcontext = QueryContext.newContext(fcontext.searcher);\n\n    return facetRequest.createFacetProcessor(fcontext);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79759974460bc59933cd169acc94f5c6b16368d5","date":1471318443,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createProcessor(SolrQueryRequest,Map[String,Object],DocSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createProcessor(SolrQueryRequest,Map[String,Object],DocSet).mjava","sourceNew":"  /** factory method for invoking json facet framework as whole */\n  public static FacetProcessor<?> createProcessor(SolrQueryRequest req,\n                                                  Map<String, Object> params, DocSet docs){\n    FacetParser parser = new FacetTopParser(req);\n    FacetRequest facetRequest = null;\n    try {\n      facetRequest = parser.parse(params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n\n    FacetContext fcontext = new FacetContext();\n    fcontext.base = docs;\n    fcontext.req = req;\n    fcontext.searcher = req.getSearcher();\n    fcontext.qcontext = QueryContext.newContext(fcontext.searcher);\n\n    return facetRequest.createFacetProcessor(fcontext);\n  }\n\n","sourceOld":"  /** factory method for invoking json facet framework as whole */\n  public static FacetProcessor<?> createProcessor(SolrQueryRequest req, \n      Map<String, Object> params, DocSet docs){\n    FacetParser parser = new FacetTopParser(req);\n    FacetRequest facetRequest = null;\n    try {\n      facetRequest = parser.parse(params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n\n    FacetContext fcontext = new FacetContext();\n    fcontext.base = docs;\n    fcontext.req = req;\n    fcontext.searcher = req.getSearcher();\n    fcontext.qcontext = QueryContext.newContext(fcontext.searcher);\n\n    return facetRequest.createFacetProcessor(fcontext);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createProcessor(SolrQueryRequest,Map[String,Object],DocSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createProcessor(SolrQueryRequest,Map[String,Object],DocSet).mjava","sourceNew":"  /** factory method for invoking json facet framework as whole */\n  public static FacetProcessor<?> createProcessor(SolrQueryRequest req,\n                                                  Map<String, Object> params, DocSet docs){\n    FacetParser parser = new FacetTopParser(req);\n    FacetRequest facetRequest = null;\n    try {\n      facetRequest = parser.parse(params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n\n    FacetContext fcontext = new FacetContext();\n    fcontext.base = docs;\n    fcontext.req = req;\n    fcontext.searcher = req.getSearcher();\n    fcontext.qcontext = QueryContext.newContext(fcontext.searcher);\n\n    return facetRequest.createFacetProcessor(fcontext);\n  }\n\n","sourceOld":"  /** factory method for invoking json facet framework as whole */\n  public static FacetProcessor<?> createProcessor(SolrQueryRequest req, \n      Map<String, Object> params, DocSet docs){\n    FacetParser parser = new FacetTopParser(req);\n    FacetRequest facetRequest = null;\n    try {\n      facetRequest = parser.parse(params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n\n    FacetContext fcontext = new FacetContext();\n    fcontext.base = docs;\n    fcontext.req = req;\n    fcontext.searcher = req.getSearcher();\n    fcontext.qcontext = QueryContext.newContext(fcontext.searcher);\n\n    return facetRequest.createFacetProcessor(fcontext);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createProcessor(SolrQueryRequest,Map[String,Object],DocSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createProcessor(SolrQueryRequest,Map[String,Object],DocSet).mjava","sourceNew":"  /** factory method for invoking json facet framework as whole */\n  public static FacetProcessor<?> createProcessor(SolrQueryRequest req,\n                                                  Map<String, Object> params, DocSet docs){\n    FacetParser parser = new FacetTopParser(req);\n    FacetRequest facetRequest = null;\n    try {\n      facetRequest = parser.parse(params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n\n    FacetContext fcontext = new FacetContext();\n    fcontext.base = docs;\n    fcontext.req = req;\n    fcontext.searcher = req.getSearcher();\n    fcontext.qcontext = QueryContext.newContext(fcontext.searcher);\n\n    return facetRequest.createFacetProcessor(fcontext);\n  }\n\n","sourceOld":"  /** factory method for invoking json facet framework as whole */\n  public static FacetProcessor<?> createProcessor(SolrQueryRequest req, \n      Map<String, Object> params, DocSet docs){\n    FacetParser parser = new FacetTopParser(req);\n    FacetRequest facetRequest = null;\n    try {\n      facetRequest = parser.parse(params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n\n    FacetContext fcontext = new FacetContext();\n    fcontext.base = docs;\n    fcontext.req = req;\n    fcontext.searcher = req.getSearcher();\n    fcontext.qcontext = QueryContext.newContext(fcontext.searcher);\n\n    return facetRequest.createFacetProcessor(fcontext);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createProcessor(SolrQueryRequest,Map[String,Object],DocSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createProcessor(SolrQueryRequest,Map[String,Object],DocSet).mjava","sourceNew":"  /** factory method for invoking json facet framework as whole */\n  public static FacetProcessor<?> createProcessor(SolrQueryRequest req,\n                                                  Map<String, Object> params, DocSet docs){\n    FacetParser parser = new FacetTopParser(req);\n    FacetRequest facetRequest = null;\n    try {\n      facetRequest = parser.parse(params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n\n    FacetContext fcontext = new FacetContext();\n    fcontext.base = docs;\n    fcontext.req = req;\n    fcontext.searcher = req.getSearcher();\n    fcontext.qcontext = QueryContext.newContext(fcontext.searcher);\n\n    return facetRequest.createFacetProcessor(fcontext);\n  }\n\n","sourceOld":"  /** factory method for invoking json facet framework as whole */\n  public static FacetProcessor<?> createProcessor(SolrQueryRequest req, \n      Map<String, Object> params, DocSet docs){\n    FacetParser parser = new FacetTopParser(req);\n    FacetRequest facetRequest = null;\n    try {\n      facetRequest = parser.parse(params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n\n    FacetContext fcontext = new FacetContext();\n    fcontext.base = docs;\n    fcontext.req = req;\n    fcontext.searcher = req.getSearcher();\n    fcontext.qcontext = QueryContext.newContext(fcontext.searcher);\n\n    return facetRequest.createFacetProcessor(fcontext);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23dfab8006bb57825127140eeff51baa06028cf7","date":1477767259,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createProcessor(SolrQueryRequest,Map[String,Object],DocSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createProcessor(SolrQueryRequest,Map[String,Object],DocSet).mjava","sourceNew":"  /** factory method for invoking json facet framework as whole.\n   * Note: this is currently only used from SimpleFacets, not from JSON Facet API itself. */\n  public static FacetProcessor<?> createProcessor(SolrQueryRequest req,\n                                                  Map<String, Object> params, DocSet docs){\n    FacetParser parser = new FacetTopParser(req);\n    FacetRequest facetRequest = null;\n    try {\n      facetRequest = parser.parse(params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n\n    FacetContext fcontext = new FacetContext();\n    fcontext.base = docs;\n    fcontext.req = req;\n    fcontext.searcher = req.getSearcher();\n    fcontext.qcontext = QueryContext.newContext(fcontext.searcher);\n\n    return facetRequest.createFacetProcessor(fcontext);\n  }\n\n","sourceOld":"  /** factory method for invoking json facet framework as whole */\n  public static FacetProcessor<?> createProcessor(SolrQueryRequest req,\n                                                  Map<String, Object> params, DocSet docs){\n    FacetParser parser = new FacetTopParser(req);\n    FacetRequest facetRequest = null;\n    try {\n      facetRequest = parser.parse(params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n\n    FacetContext fcontext = new FacetContext();\n    fcontext.base = docs;\n    fcontext.req = req;\n    fcontext.searcher = req.getSearcher();\n    fcontext.qcontext = QueryContext.newContext(fcontext.searcher);\n\n    return facetRequest.createFacetProcessor(fcontext);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320888923ec13b91f53082558f01f4c9960dd226","date":1477926871,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createProcessor(SolrQueryRequest,Map[String,Object],DocSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createProcessor(SolrQueryRequest,Map[String,Object],DocSet).mjava","sourceNew":"  /** factory method for invoking json facet framework as whole.\n   * Note: this is currently only used from SimpleFacets, not from JSON Facet API itself. */\n  public static FacetProcessor<?> createProcessor(SolrQueryRequest req,\n                                                  Map<String, Object> params, DocSet docs){\n    FacetParser parser = new FacetTopParser(req);\n    FacetRequest facetRequest = null;\n    try {\n      facetRequest = parser.parse(params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n\n    FacetContext fcontext = new FacetContext();\n    fcontext.base = docs;\n    fcontext.req = req;\n    fcontext.searcher = req.getSearcher();\n    fcontext.qcontext = QueryContext.newContext(fcontext.searcher);\n\n    return facetRequest.createFacetProcessor(fcontext);\n  }\n\n","sourceOld":"  /** factory method for invoking json facet framework as whole */\n  public static FacetProcessor<?> createProcessor(SolrQueryRequest req,\n                                                  Map<String, Object> params, DocSet docs){\n    FacetParser parser = new FacetTopParser(req);\n    FacetRequest facetRequest = null;\n    try {\n      facetRequest = parser.parse(params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n\n    FacetContext fcontext = new FacetContext();\n    fcontext.base = docs;\n    fcontext.req = req;\n    fcontext.searcher = req.getSearcher();\n    fcontext.qcontext = QueryContext.newContext(fcontext.searcher);\n\n    return facetRequest.createFacetProcessor(fcontext);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ab027bdfe663227636ccbeda13ae82add302939","date":1529980633,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createProcessor(SolrQueryRequest,Map[String,Object],DocSet).mjava","sourceNew":null,"sourceOld":"  /** factory method for invoking json facet framework as whole.\n   * Note: this is currently only used from SimpleFacets, not from JSON Facet API itself. */\n  public static FacetProcessor<?> createProcessor(SolrQueryRequest req,\n                                                  Map<String, Object> params, DocSet docs){\n    FacetParser parser = new FacetTopParser(req);\n    FacetRequest facetRequest = null;\n    try {\n      facetRequest = parser.parse(params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n\n    FacetContext fcontext = new FacetContext();\n    fcontext.base = docs;\n    fcontext.req = req;\n    fcontext.searcher = req.getSearcher();\n    fcontext.qcontext = QueryContext.newContext(fcontext.searcher);\n\n    return facetRequest.createFacetProcessor(fcontext);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createProcessor(SolrQueryRequest,Map[String,Object],DocSet).mjava","sourceNew":null,"sourceOld":"  /** factory method for invoking json facet framework as whole.\n   * Note: this is currently only used from SimpleFacets, not from JSON Facet API itself. */\n  public static FacetProcessor<?> createProcessor(SolrQueryRequest req,\n                                                  Map<String, Object> params, DocSet docs){\n    FacetParser parser = new FacetTopParser(req);\n    FacetRequest facetRequest = null;\n    try {\n      facetRequest = parser.parse(params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n\n    FacetContext fcontext = new FacetContext();\n    fcontext.base = docs;\n    fcontext.req = req;\n    fcontext.searcher = req.getSearcher();\n    fcontext.qcontext = QueryContext.newContext(fcontext.searcher);\n\n    return facetRequest.createFacetProcessor(fcontext);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createProcessor(SolrQueryRequest,Map[String,Object],DocSet).mjava","sourceNew":null,"sourceOld":"  /** factory method for invoking json facet framework as whole.\n   * Note: this is currently only used from SimpleFacets, not from JSON Facet API itself. */\n  public static FacetProcessor<?> createProcessor(SolrQueryRequest req,\n                                                  Map<String, Object> params, DocSet docs){\n    FacetParser parser = new FacetTopParser(req);\n    FacetRequest facetRequest = null;\n    try {\n      facetRequest = parser.parse(params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n\n    FacetContext fcontext = new FacetContext();\n    fcontext.base = docs;\n    fcontext.req = req;\n    fcontext.searcher = req.getSearcher();\n    fcontext.qcontext = QueryContext.newContext(fcontext.searcher);\n\n    return facetRequest.createFacetProcessor(fcontext);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2ab027bdfe663227636ccbeda13ae82add302939":["23dfab8006bb57825127140eeff51baa06028cf7"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["3c64189697927b548f74ba66dfa5051548662938","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"23dfab8006bb57825127140eeff51baa06028cf7":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["3c64189697927b548f74ba66dfa5051548662938","79759974460bc59933cd169acc94f5c6b16368d5"],"3c64189697927b548f74ba66dfa5051548662938":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3802d95c3a31be21ea2971945049b711d95ef8d5"],"320888923ec13b91f53082558f01f4c9960dd226":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","23dfab8006bb57825127140eeff51baa06028cf7"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["3c64189697927b548f74ba66dfa5051548662938","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["23dfab8006bb57825127140eeff51baa06028cf7","2ab027bdfe663227636ccbeda13ae82add302939"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"79759974460bc59933cd169acc94f5c6b16368d5":["3c64189697927b548f74ba66dfa5051548662938"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ab027bdfe663227636ccbeda13ae82add302939"],"3802d95c3a31be21ea2971945049b711d95ef8d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["23dfab8006bb57825127140eeff51baa06028cf7","2ab027bdfe663227636ccbeda13ae82add302939"]},"commit2Childs":{"2ab027bdfe663227636ccbeda13ae82add302939":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["23dfab8006bb57825127140eeff51baa06028cf7","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"23dfab8006bb57825127140eeff51baa06028cf7":["2ab027bdfe663227636ccbeda13ae82add302939","320888923ec13b91f53082558f01f4c9960dd226","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"3c64189697927b548f74ba66dfa5051548662938":["403d05f7f8d69b65659157eff1bc1d2717f04c66","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","79759974460bc59933cd169acc94f5c6b16368d5"],"320888923ec13b91f53082558f01f4c9960dd226":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["320888923ec13b91f53082558f01f4c9960dd226"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3c64189697927b548f74ba66dfa5051548662938","3802d95c3a31be21ea2971945049b711d95ef8d5"],"79759974460bc59933cd169acc94f5c6b16368d5":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"3802d95c3a31be21ea2971945049b711d95ef8d5":["3c64189697927b548f74ba66dfa5051548662938"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["320888923ec13b91f53082558f01f4c9960dd226","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}