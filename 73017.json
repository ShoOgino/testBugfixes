{"path":"lucene/test-framework/src/java/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilder.State#referenceEquals(Object[],Object[]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilder.State#referenceEquals(Object[],Object[]).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilder.State#referenceEquals(Object[],Object[]).mjava","sourceNew":"    /**\n     * Compare two lists of objects for reference-equality.\n     */\n    private static boolean referenceEquals(Object[] a1, Object[] a2) {\n      if (a1.length != a2.length) return false;\n      \n      for (int i = 0; i < a1.length; i++)\n        if (a1[i] != a2[i]) return false;\n      \n      return true;\n    }\n\n","sourceOld":"    /**\n     * Compare two lists of objects for reference-equality.\n     */\n    private static boolean referenceEquals(Object[] a1, Object[] a2) {\n      if (a1.length != a2.length) return false;\n      \n      for (int i = 0; i < a1.length; i++)\n        if (a1[i] != a2[i]) return false;\n      \n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d94feb02e9c604630d8a6758abcb40cbfa91f5d","date":1340964157,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilder.State#referenceEquals(Object[],Object[]).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilder.State#referenceEquals(Object[],Object[]).mjava","sourceNew":"    /**\n     * Compare two lists of objects for reference-equality.\n     */\n    private static boolean referenceEquals(Object[] a1, Object[] a2) {\n      if (a1.length != a2.length) { \n        return false;\n      }\n\n      for (int i = 0; i < a1.length; i++) {\n        if (a1[i] != a2[i]) { \n          return false;\n        }\n      }\n\n      return true;\n    }\n\n","sourceOld":"    /**\n     * Compare two lists of objects for reference-equality.\n     */\n    private static boolean referenceEquals(Object[] a1, Object[] a2) {\n      if (a1.length != a2.length) return false;\n      \n      for (int i = 0; i < a1.length; i++)\n        if (a1[i] != a2[i]) return false;\n      \n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilder.State#referenceEquals(Object[],Object[]).mjava","sourceNew":null,"sourceOld":"    /**\n     * Compare two lists of objects for reference-equality.\n     */\n    private static boolean referenceEquals(Object[] a1, Object[] a2) {\n      if (a1.length != a2.length) return false;\n      \n      for (int i = 0; i < a1.length; i++)\n        if (a1[i] != a2[i]) return false;\n      \n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","8d94feb02e9c604630d8a6758abcb40cbfa91f5d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8d94feb02e9c604630d8a6758abcb40cbfa91f5d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8d94feb02e9c604630d8a6758abcb40cbfa91f5d"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fe33227f6805edab2036cbb80645cc4e2d1fa424","8d94feb02e9c604630d8a6758abcb40cbfa91f5d"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8d94feb02e9c604630d8a6758abcb40cbfa91f5d":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}