{"path":"contrib/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#tokenStream(String,Reader).mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#tokenStream(String,Reader).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   *\n   * @return A TokenStream build from a StandardTokenizer filtered with\n   *         StandardFilter, StopFilter, FrenchStemFilter and LowerCaseFilter\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n\n    if (fieldName == null) throw new IllegalArgumentException(\"fieldName must not be null\");\n    if (reader == null) throw new IllegalArgumentException(\"readermust not be null\");\n\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new FrenchStemFilter(result, excltable);\n    // Convert to lowercase after stemming!\n    result = new LowerCaseFilter(result);\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   *\n   * @return A TokenStream build from a StandardTokenizer filtered with\n   *         StandardFilter, StopFilter, FrenchStemFilter and LowerCaseFilter\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n\n    if (fieldName == null) throw new IllegalArgumentException(\"fieldName must not be null\");\n    if (reader == null) throw new IllegalArgumentException(\"readermust not be null\");\n\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new FrenchStemFilter(result, excltable);\n    // Convert to lowercase after stemming!\n    result = new LowerCaseFilter(result);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41e87957816194cba30143d585051c8acecf6141","date":1117234849,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   *\n   * @return A TokenStream build from a StandardTokenizer filtered with\n   *         StandardFilter, StopFilter, FrenchStemFilter and LowerCaseFilter\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n\n    if (fieldName == null) throw new IllegalArgumentException(\"fieldName must not be null\");\n    if (reader == null) throw new IllegalArgumentException(\"reader must not be null\");\n\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new FrenchStemFilter(result, excltable);\n    // Convert to lowercase after stemming!\n    result = new LowerCaseFilter(result);\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   *\n   * @return A TokenStream build from a StandardTokenizer filtered with\n   *         StandardFilter, StopFilter, FrenchStemFilter and LowerCaseFilter\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n\n    if (fieldName == null) throw new IllegalArgumentException(\"fieldName must not be null\");\n    if (reader == null) throw new IllegalArgumentException(\"readermust not be null\");\n\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new FrenchStemFilter(result, excltable);\n    // Convert to lowercase after stemming!\n    result = new LowerCaseFilter(result);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":["c83a2e572295a9d2b63506929926d0522f61d386"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   *\n   * @return A TokenStream build from a StandardTokenizer filtered with\n   *         StandardFilter, StopFilter, FrenchStemFilter and LowerCaseFilter\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n\n    if (fieldName == null) throw new IllegalArgumentException(\"fieldName must not be null\");\n    if (reader == null) throw new IllegalArgumentException(\"reader must not be null\");\n\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new FrenchStemFilter(result, excltable);\n    // Convert to lowercase after stemming!\n    result = new LowerCaseFilter(result);\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   *\n   * @return A TokenStream build from a StandardTokenizer filtered with\n   *         StandardFilter, StopFilter, FrenchStemFilter and LowerCaseFilter\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n\n    if (fieldName == null) throw new IllegalArgumentException(\"fieldName must not be null\");\n    if (reader == null) throw new IllegalArgumentException(\"reader must not be null\");\n\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new FrenchStemFilter(result, excltable);\n    // Convert to lowercase after stemming!\n    result = new LowerCaseFilter(result);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["41e87957816194cba30143d585051c8acecf6141"],"41e87957816194cba30143d585051c8acecf6141":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"41e87957816194cba30143d585051c8acecf6141":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["41e87957816194cba30143d585051c8acecf6141"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}