{"path":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader#terms(String).mjava","commits":[{"id":"8d47f68d60cbff5718136b945ba8c55982342f38","date":1285583375,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader#terms(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Terms terms(String field) throws IOException {\n    SimpleTextFieldsEnum fe = (SimpleTextFieldsEnum) iterator();\n    String fieldUpto;\n    while((fieldUpto = fe.next()) != null) {\n      if (fieldUpto.equals(field)) {\n        return new SimpleTextTerms(field, fe.in.getFilePointer());\n      }\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"825bcb488bc228d1fb6a19c1f441a2181f7d766d","date":1285691504,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader#terms(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader#terms(String).mjava","sourceNew":"  @Override\n  synchronized public Terms terms(String field) throws IOException {\n    Terms terms = termsCache.get(field);\n    if (terms == null) {\n      SimpleTextFieldsEnum fe = (SimpleTextFieldsEnum) iterator();\n      String fieldUpto;\n      while((fieldUpto = fe.next()) != null) {\n        if (fieldUpto.equals(field)) {\n          terms = new SimpleTextTerms(field, fe.in.getFilePointer());\n          break;\n        }\n      }\n      termsCache.put(field, terms);\n    }\n    return terms;\n  }\n\n","sourceOld":"  @Override\n  public Terms terms(String field) throws IOException {\n    SimpleTextFieldsEnum fe = (SimpleTextFieldsEnum) iterator();\n    String fieldUpto;\n    while((fieldUpto = fe.next()) != null) {\n      if (fieldUpto.equals(field)) {\n        return new SimpleTextTerms(field, fe.in.getFilePointer());\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader#terms(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  synchronized public Terms terms(String field) throws IOException {\n    Terms terms = termsCache.get(field);\n    if (terms == null) {\n      SimpleTextFieldsEnum fe = (SimpleTextFieldsEnum) iterator();\n      String fieldUpto;\n      while((fieldUpto = fe.next()) != null) {\n        if (fieldUpto.equals(field)) {\n          terms = new SimpleTextTerms(field, fe.in.getFilePointer());\n          break;\n        }\n      }\n      termsCache.put(field, terms);\n    }\n    return terms;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#terms(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader#terms(String).mjava","sourceNew":"  @Override\n  synchronized public Terms terms(String field) throws IOException {\n    Terms terms = termsCache.get(field);\n    if (terms == null) {\n      SimpleTextFieldsEnum fe = (SimpleTextFieldsEnum) iterator();\n      String fieldUpto;\n      while((fieldUpto = fe.next()) != null) {\n        if (fieldUpto.equals(field)) {\n          terms = new SimpleTextTerms(field, fe.in.getFilePointer());\n          break;\n        }\n      }\n      termsCache.put(field, terms);\n    }\n    return terms;\n  }\n\n","sourceOld":"  @Override\n  synchronized public Terms terms(String field) throws IOException {\n    Terms terms = termsCache.get(field);\n    if (terms == null) {\n      SimpleTextFieldsEnum fe = (SimpleTextFieldsEnum) iterator();\n      String fieldUpto;\n      while((fieldUpto = fe.next()) != null) {\n        if (fieldUpto.equals(field)) {\n          terms = new SimpleTextTerms(field, fe.in.getFilePointer());\n          break;\n        }\n      }\n      termsCache.put(field, terms);\n    }\n    return terms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"825bcb488bc228d1fb6a19c1f441a2181f7d766d":["8d47f68d60cbff5718136b945ba8c55982342f38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8d47f68d60cbff5718136b945ba8c55982342f38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","825bcb488bc228d1fb6a19c1f441a2181f7d766d"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["825bcb488bc228d1fb6a19c1f441a2181f7d766d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"825bcb488bc228d1fb6a19c1f441a2181f7d766d":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8d47f68d60cbff5718136b945ba8c55982342f38","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"8d47f68d60cbff5718136b945ba8c55982342f38":["825bcb488bc228d1fb6a19c1f441a2181f7d766d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}