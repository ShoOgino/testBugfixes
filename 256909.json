{"path":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCloudSnapshots#listCoreSnapshots(SolrClient,String).mjava","commits":[{"id":"424ac616f0aeeb2a3c8b6b94084255a0bcab9628","date":1477057622,"type":0,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCloudSnapshots#listCoreSnapshots(SolrClient,String).mjava","pathOld":"/dev/null","sourceNew":"  private Collection<SnapshotMetaData> listCoreSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(SolrSnapshotManager.SNAPSHOTS_INFO) instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.INDEX_DIR_PATH);\n      long genNumber = Long.valueOf((String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.GENERATION_NUM));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCloudSnapshots#listCoreSnapshots(SolrClient,String).mjava","pathOld":"/dev/null","sourceNew":"  private Collection<SnapshotMetaData> listCoreSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(SolrSnapshotManager.SNAPSHOTS_INFO) instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.INDEX_DIR_PATH);\n      long genNumber = Long.valueOf((String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.GENERATION_NUM));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","date":1489572490,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCloudSnapshots#listCoreSnapshots(SolrClient,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCloudSnapshots#listCoreSnapshots(SolrClient,String).mjava","sourceNew":"  private Collection<SnapshotMetaData> listCoreSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(SolrSnapshotManager.SNAPSHOTS_INFO) instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.INDEX_DIR_PATH);\n      long genNumber = Long.parseLong((String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.GENERATION_NUM));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","sourceOld":"  private Collection<SnapshotMetaData> listCoreSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(SolrSnapshotManager.SNAPSHOTS_INFO) instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.INDEX_DIR_PATH);\n      long genNumber = Long.valueOf((String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.GENERATION_NUM));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55e0b3830b94d1abce4e32e98cfc875d5b14e76f","date":1489651910,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCloudSnapshots#listCoreSnapshots(SolrClient,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCloudSnapshots#listCoreSnapshots(SolrClient,String).mjava","sourceNew":"  private Collection<SnapshotMetaData> listCoreSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(SolrSnapshotManager.SNAPSHOTS_INFO) instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.INDEX_DIR_PATH);\n      long genNumber = Long.parseLong((String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.GENERATION_NUM));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","sourceOld":"  private Collection<SnapshotMetaData> listCoreSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(SolrSnapshotManager.SNAPSHOTS_INFO) instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.INDEX_DIR_PATH);\n      long genNumber = Long.valueOf((String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.GENERATION_NUM));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCloudSnapshots#listCoreSnapshots(SolrClient,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCloudSnapshots#listCoreSnapshots(SolrClient,String).mjava","sourceNew":"  private Collection<SnapshotMetaData> listCoreSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(SolrSnapshotManager.SNAPSHOTS_INFO) instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.INDEX_DIR_PATH);\n      long genNumber = Long.parseLong((String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.GENERATION_NUM));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","sourceOld":"  private Collection<SnapshotMetaData> listCoreSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(SolrSnapshotManager.SNAPSHOTS_INFO) instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.INDEX_DIR_PATH);\n      long genNumber = Long.valueOf((String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.GENERATION_NUM));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCloudSnapshots#listCoreSnapshots(SolrClient,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCloudSnapshots#listCoreSnapshots(SolrClient,String).mjava","sourceNew":"  private Collection<SnapshotMetaData> listCoreSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(SolrSnapshotManager.SNAPSHOTS_INFO) instanceof NamedList );\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList apiResult = (NamedList) resp.get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.INDEX_DIR_PATH);\n      long genNumber = Long.parseLong((String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.GENERATION_NUM));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","sourceOld":"  private Collection<SnapshotMetaData> listCoreSnapshots(SolrClient adminClient, String coreName) throws Exception {\n    ListSnapshots req = new ListSnapshots();\n    req.setCoreName(coreName);\n    NamedList resp = adminClient.request(req);\n    assertTrue( resp.get(SolrSnapshotManager.SNAPSHOTS_INFO) instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    List<SnapshotMetaData> result = new ArrayList<>(apiResult.size());\n    for(int i = 0 ; i < apiResult.size(); i++) {\n      String commitName = apiResult.getName(i);\n      String indexDirPath = (String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.INDEX_DIR_PATH);\n      long genNumber = Long.parseLong((String)((NamedList)apiResult.get(commitName)).get(SolrSnapshotManager.GENERATION_NUM));\n      result.add(new SnapshotMetaData(commitName, indexDirPath, genNumber));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["424ac616f0aeeb2a3c8b6b94084255a0bcab9628"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["424ac616f0aeeb2a3c8b6b94084255a0bcab9628"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","424ac616f0aeeb2a3c8b6b94084255a0bcab9628"],"424ac616f0aeeb2a3c8b6b94084255a0bcab9628":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab68488225b6a6c357dda72ed11dedca9914a192":["424ac616f0aeeb2a3c8b6b94084255a0bcab9628","55e0b3830b94d1abce4e32e98cfc875d5b14e76f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8"]},"commit2Childs":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["e98520789adb1d5ad05afb4956eca0944a929688"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["ab68488225b6a6c357dda72ed11dedca9914a192"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","424ac616f0aeeb2a3c8b6b94084255a0bcab9628"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"424ac616f0aeeb2a3c8b6b94084255a0bcab9628":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","55e0b3830b94d1abce4e32e98cfc875d5b14e76f","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","ab68488225b6a6c357dda72ed11dedca9914a192"],"ab68488225b6a6c357dda72ed11dedca9914a192":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","ab68488225b6a6c357dda72ed11dedca9914a192","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}