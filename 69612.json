{"path":"solr/core/src/java/org/apache/solr/schema/FloatField#write(TextResponseWriter,String,GeneralField).mjava","commits":[{"id":"a7e4907084808af8fdb14b9809e6dceaccf6867b","date":1343473006,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/FloatField#write(TextResponseWriter,String,GeneralField).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/FloatField#write(TextResponseWriter,String,IndexableField).mjava","sourceNew":"  @Override\n  public void write(TextResponseWriter writer, String name, GeneralField f) throws IOException {\n    String s = f.stringValue();\n\n    // these values may be from a legacy lucene index, which may\n    // not be properly formatted in some output formats, or may\n    // incorrectly have a zero length.\n\n    if (s.length()==0) {\n      // zero length value means someone mistakenly indexed the value\n      // instead of simply leaving it out.  Write a null value instead of a numeric.\n      writer.writeNull(name);\n      return;\n    }\n\n    try {\n      float fval = Float.parseFloat(s);\n      writer.writeFloat(name, fval);\n    } catch (NumberFormatException e){\n      // can't parse - write out the contents as a string so nothing is lost and\n      // clients don't get a parse error.\n      writer.writeStr(name, s, true);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(TextResponseWriter writer, String name, IndexableField f) throws IOException {\n    String s = f.stringValue();\n\n    // these values may be from a legacy lucene index, which may\n    // not be properly formatted in some output formats, or may\n    // incorrectly have a zero length.\n\n    if (s.length()==0) {\n      // zero length value means someone mistakenly indexed the value\n      // instead of simply leaving it out.  Write a null value instead of a numeric.\n      writer.writeNull(name);\n      return;\n    }\n\n    try {\n      float fval = Float.parseFloat(s);\n      writer.writeFloat(name, fval);\n    } catch (NumberFormatException e){\n      // can't parse - write out the contents as a string so nothing is lost and\n      // clients don't get a parse error.\n      writer.writeStr(name, s, true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"409324b31a1419d7c05a38211168cf317e39be77","date":1344866765,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/FloatField#write(TextResponseWriter,String,StorableField).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/FloatField#write(TextResponseWriter,String,GeneralField).mjava","sourceNew":"  @Override\n  public void write(TextResponseWriter writer, String name, StorableField f) throws IOException {\n    String s = f.stringValue();\n\n    // these values may be from a legacy lucene index, which may\n    // not be properly formatted in some output formats, or may\n    // incorrectly have a zero length.\n\n    if (s.length()==0) {\n      // zero length value means someone mistakenly indexed the value\n      // instead of simply leaving it out.  Write a null value instead of a numeric.\n      writer.writeNull(name);\n      return;\n    }\n\n    try {\n      float fval = Float.parseFloat(s);\n      writer.writeFloat(name, fval);\n    } catch (NumberFormatException e){\n      // can't parse - write out the contents as a string so nothing is lost and\n      // clients don't get a parse error.\n      writer.writeStr(name, s, true);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(TextResponseWriter writer, String name, GeneralField f) throws IOException {\n    String s = f.stringValue();\n\n    // these values may be from a legacy lucene index, which may\n    // not be properly formatted in some output formats, or may\n    // incorrectly have a zero length.\n\n    if (s.length()==0) {\n      // zero length value means someone mistakenly indexed the value\n      // instead of simply leaving it out.  Write a null value instead of a numeric.\n      writer.writeNull(name);\n      return;\n    }\n\n    try {\n      float fval = Float.parseFloat(s);\n      writer.writeFloat(name, fval);\n    } catch (NumberFormatException e){\n      // can't parse - write out the contents as a string so nothing is lost and\n      // clients don't get a parse error.\n      writer.writeStr(name, s, true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"409324b31a1419d7c05a38211168cf317e39be77":["a7e4907084808af8fdb14b9809e6dceaccf6867b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a7e4907084808af8fdb14b9809e6dceaccf6867b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"409324b31a1419d7c05a38211168cf317e39be77":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a7e4907084808af8fdb14b9809e6dceaccf6867b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a7e4907084808af8fdb14b9809e6dceaccf6867b":["409324b31a1419d7c05a38211168cf317e39be77"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["409324b31a1419d7c05a38211168cf317e39be77","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}