{"path":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#getFieldQuery(String,String,boolean).mjava","commits":[{"id":"c7e79e31f55cbb444e3023d430a340658755aa31","date":1357666399,"type":1,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#getFieldQuery(String,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser[ExtendedDismaxQParserPlugin].ExtendedSolrQueryParser#getFieldQuery(String,String,boolean).mjava","sourceNew":"    @Override\n    protected Query getFieldQuery(String field, String val, boolean quoted) throws SyntaxError {\n      this.type = QType.FIELD;\n      this.field = field;\n      this.val = val;\n      this.slop = getPhraseSlop(); // unspecified\n      return getAliasedQuery();\n    }\n\n","sourceOld":"    @Override\n    protected Query getFieldQuery(String field, String val, boolean quoted) throws SyntaxError {\n//System.out.println(\"getFieldQuery: val=\"+val);\n\n      this.type = QType.FIELD;\n      this.field = field;\n      this.val = val;\n      this.slop = getPhraseSlop(); // unspecified\n      return getAliasedQuery();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#getFieldQuery(String,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser[ExtendedDismaxQParserPlugin].ExtendedSolrQueryParser#getFieldQuery(String,String,boolean).mjava","sourceNew":"    @Override\n    protected Query getFieldQuery(String field, String val, boolean quoted) throws SyntaxError {\n      this.type = QType.FIELD;\n      this.field = field;\n      this.val = val;\n      this.slop = getPhraseSlop(); // unspecified\n      return getAliasedQuery();\n    }\n\n","sourceOld":"    @Override\n    protected Query getFieldQuery(String field, String val, boolean quoted) throws SyntaxError {\n//System.out.println(\"getFieldQuery: val=\"+val);\n\n      this.type = QType.FIELD;\n      this.field = field;\n      this.val = val;\n      this.slop = getPhraseSlop(); // unspecified\n      return getAliasedQuery();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68c354ba50abc8ed5c5fe98901e61d68f93952bb","date":1479836000,"type":5,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#getFieldQuery(String,String,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#getFieldQuery(String,String,boolean).mjava","sourceNew":"    @Override\n    protected Query getFieldQuery(String field, String val, boolean quoted, boolean raw) throws SyntaxError {\n      this.type = quoted ? QType.PHRASE : QType.FIELD;\n      this.field = field;\n      this.val = val;\n      this.slop = getPhraseSlop(); // unspecified\n      return getAliasedQuery();\n    }\n\n","sourceOld":"    @Override\n    protected Query getFieldQuery(String field, String val, boolean quoted) throws SyntaxError {\n      this.type = QType.FIELD;\n      this.field = field;\n      this.val = val;\n      this.slop = getPhraseSlop(); // unspecified\n      return getAliasedQuery();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#getFieldQuery(String,String,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#getFieldQuery(String,String,boolean).mjava","sourceNew":"    @Override\n    protected Query getFieldQuery(String field, String val, boolean quoted, boolean raw) throws SyntaxError {\n      this.type = quoted ? QType.PHRASE : QType.FIELD;\n      this.field = field;\n      this.val = val;\n      this.slop = getPhraseSlop(); // unspecified\n      return getAliasedQuery();\n    }\n\n","sourceOld":"    @Override\n    protected Query getFieldQuery(String field, String val, boolean quoted) throws SyntaxError {\n      this.type = QType.FIELD;\n      this.field = field;\n      this.val = val;\n      this.slop = getPhraseSlop(); // unspecified\n      return getAliasedQuery();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"727bb765ff2542275f6d31f67be18d7104bae148":["c7e79e31f55cbb444e3023d430a340658755aa31","68c354ba50abc8ed5c5fe98901e61d68f93952bb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c7e79e31f55cbb444e3023d430a340658755aa31":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"68c354ba50abc8ed5c5fe98901e61d68f93952bb":["c7e79e31f55cbb444e3023d430a340658755aa31"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c7e79e31f55cbb444e3023d430a340658755aa31"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68c354ba50abc8ed5c5fe98901e61d68f93952bb"]},"commit2Childs":{"727bb765ff2542275f6d31f67be18d7104bae148":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7e79e31f55cbb444e3023d430a340658755aa31","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"c7e79e31f55cbb444e3023d430a340658755aa31":["727bb765ff2542275f6d31f67be18d7104bae148","68c354ba50abc8ed5c5fe98901e61d68f93952bb","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"68c354ba50abc8ed5c5fe98901e61d68f93952bb":["727bb765ff2542275f6d31f67be18d7104bae148","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["727bb765ff2542275f6d31f67be18d7104bae148","4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}