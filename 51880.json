{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsWriter#TempFSTTermsWriter(SegmentWriteState,TempPostingsWriterBase).mjava","commits":[{"id":"232252bc7056b698c1e1c550f4b97a9a3c00e520","date":1372943634,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsWriter#TempFSTTermsWriter(SegmentWriteState,TempPostingsWriterBase).mjava","pathOld":"/dev/null","sourceNew":"  public TempFSTTermsWriter(SegmentWriteState state, TempPostingsWriterBase postingsWriter) throws IOException {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, TERMS_EXTENSION);\n\n    this.postingsWriter = postingsWriter;\n    this.fieldInfos = state.fieldInfos;\n    this.out = state.directory.createOutput(termsFileName, state.context);\n\n    // nocommit: why try catch here? not catching createOutput?\n    boolean success = false;\n    try {\n      writeHeader(out);\n      this.postingsWriter.start(out); \n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd9f4b62b5707a45b44bd7d63ef9448c5eb6efaa","date":1373991484,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsWriter#TempFSTTermsWriter(SegmentWriteState,TempPostingsWriterBase).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsWriter#TempFSTTermsWriter(SegmentWriteState,TempPostingsWriterBase).mjava","sourceNew":"  public TempFSTTermsWriter(SegmentWriteState state, TempPostingsWriterBase postingsWriter) throws IOException {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, TERMS_EXTENSION);\n\n    this.postingsWriter = postingsWriter;\n    this.fieldInfos = state.fieldInfos;\n    this.out = state.directory.createOutput(termsFileName, state.context);\n\n    boolean success = false;\n    try {\n      writeHeader(out);\n      this.postingsWriter.start(out); \n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":"  public TempFSTTermsWriter(SegmentWriteState state, TempPostingsWriterBase postingsWriter) throws IOException {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, TERMS_EXTENSION);\n\n    this.postingsWriter = postingsWriter;\n    this.fieldInfos = state.fieldInfos;\n    this.out = state.directory.createOutput(termsFileName, state.context);\n\n    // nocommit: why try catch here? not catching createOutput?\n    boolean success = false;\n    try {\n      writeHeader(out);\n      this.postingsWriter.start(out); \n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abfc4a4873131874a50c6f6e3deb59a743ee1f44","date":1376737165,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsWriter#TempFSTTermsWriter(SegmentWriteState,TempPostingsWriterBase).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsWriter#TempFSTTermsWriter(SegmentWriteState,TempPostingsWriterBase).mjava","sourceNew":"  public TempFSTTermsWriter(SegmentWriteState state, TempPostingsWriterBase postingsWriter) throws IOException {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, TERMS_EXTENSION);\n\n    this.postingsWriter = postingsWriter;\n    this.fieldInfos = state.fieldInfos;\n    this.out = state.directory.createOutput(termsFileName, state.context);\n\n    boolean success = false;\n    try {\n      writeHeader(out);\n      this.postingsWriter.init(out); \n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":"  public TempFSTTermsWriter(SegmentWriteState state, TempPostingsWriterBase postingsWriter) throws IOException {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, TERMS_EXTENSION);\n\n    this.postingsWriter = postingsWriter;\n    this.fieldInfos = state.fieldInfos;\n    this.out = state.directory.createOutput(termsFileName, state.context);\n\n    boolean success = false;\n    try {\n      writeHeader(out);\n      this.postingsWriter.start(out); \n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsWriter#TempFSTTermsWriter(SegmentWriteState,TempPostingsWriterBase).mjava","sourceNew":null,"sourceOld":"  public TempFSTTermsWriter(SegmentWriteState state, TempPostingsWriterBase postingsWriter) throws IOException {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, TERMS_EXTENSION);\n\n    this.postingsWriter = postingsWriter;\n    this.fieldInfos = state.fieldInfos;\n    this.out = state.directory.createOutput(termsFileName, state.context);\n\n    boolean success = false;\n    try {\n      writeHeader(out);\n      this.postingsWriter.init(out); \n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"abfc4a4873131874a50c6f6e3deb59a743ee1f44":["bd9f4b62b5707a45b44bd7d63ef9448c5eb6efaa"],"bd9f4b62b5707a45b44bd7d63ef9448c5eb6efaa":["232252bc7056b698c1e1c550f4b97a9a3c00e520"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"232252bc7056b698c1e1c550f4b97a9a3c00e520":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["abfc4a4873131874a50c6f6e3deb59a743ee1f44"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"abfc4a4873131874a50c6f6e3deb59a743ee1f44":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"bd9f4b62b5707a45b44bd7d63ef9448c5eb6efaa":["abfc4a4873131874a50c6f6e3deb59a743ee1f44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["232252bc7056b698c1e1c550f4b97a9a3c00e520","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"232252bc7056b698c1e1c550f4b97a9a3c00e520":["bd9f4b62b5707a45b44bd7d63ef9448c5eb6efaa"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}