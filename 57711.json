{"path":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler2[TestSQLHandler]#testMixedCaseFields().mjava","commits":[{"id":"22191e72f6c40dec88c9b94f9bb55c7527772a47","date":1553715407,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler2[TestSQLHandler]#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","sourceNew":"  @Test\n  public void testMixedCaseFields() throws Exception {\n\n    new UpdateRequest()\n        .add(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\")\n        .add(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\")\n        .add(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\")\n        .add(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\")\n        .add(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\")\n        .add(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\")\n        .add(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\")\n        .add(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String baseUrl = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n    List<Tuple> tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 8);\n\n    Tuple tuple;\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"id\") == 8);\n    assert (tuple.getLong(\"Field_i\") == 60);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"id\") == 7);\n    assert (tuple.getLong(\"Field_i\") == 50);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"id\") == 6);\n    assert (tuple.getLong(\"Field_i\") == 40);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(3);\n    assert (tuple.getLong(\"id\") == 5);\n    assert (tuple.getLong(\"Field_i\") == 30);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(4);\n    assert (tuple.getLong(\"id\") == 3);\n    assert (tuple.getLong(\"Field_i\") == 20);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    tuple = tuples.get(5);\n    assert (tuple.getLong(\"id\") == 4);\n    assert (tuple.getLong(\"Field_i\") == 11);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(6);\n    assert (tuple.getLong(\"id\") == 2);\n    assert (tuple.getLong(\"Field_i\") == 8);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(7);\n    assert (tuple.getLong(\"id\") == 1);\n    assert (tuple.getLong(\"Field_i\") == 7);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    // TODO get sum(Field_i) as named one\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n    sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n  }\n\n","sourceOld":"  private void testMixedCaseFields() throws Exception {\n\n    del(\"*:*\");\n\n    commit();\n\n    indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n    indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n    indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n    indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n    indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n    indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n    indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n    indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n    commit();\n\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n    List<Tuple> tuples = getTuples(sParams);\n\n    assert (tuples.size() == 8);\n\n    Tuple tuple;\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"id\") == 8);\n    assert (tuple.getLong(\"Field_i\") == 60);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"id\") == 7);\n    assert (tuple.getLong(\"Field_i\") == 50);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"id\") == 6);\n    assert (tuple.getLong(\"Field_i\") == 40);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(3);\n    assert (tuple.getLong(\"id\") == 5);\n    assert (tuple.getLong(\"Field_i\") == 30);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(4);\n    assert (tuple.getLong(\"id\") == 3);\n    assert (tuple.getLong(\"Field_i\") == 20);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    tuple = tuples.get(5);\n    assert (tuple.getLong(\"id\") == 4);\n    assert (tuple.getLong(\"Field_i\") == 11);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(6);\n    assert (tuple.getLong(\"id\") == 2);\n    assert (tuple.getLong(\"Field_i\") == 8);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(7);\n    assert (tuple.getLong(\"id\") == 1);\n    assert (tuple.getLong(\"Field_i\") == 7);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    // TODO get sum(Field_i) as named one\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    tuples = getTuples(sParams);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n    sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    tuples = getTuples(sParams);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94e31112925a65b1d36f9064772080e25b5ef373","date":1553715407,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler2[TestSQLHandler]#testMixedCaseFields().mjava","sourceNew":"  @Test\n  public void testMixedCaseFields() throws Exception {\n\n    new UpdateRequest()\n        .add(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\")\n        .add(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\")\n        .add(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\")\n        .add(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\")\n        .add(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\")\n        .add(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\")\n        .add(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\")\n        .add(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String baseUrl = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n    List<Tuple> tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 8);\n\n    Tuple tuple;\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"id\") == 8);\n    assert (tuple.getLong(\"Field_i\") == 60);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"id\") == 7);\n    assert (tuple.getLong(\"Field_i\") == 50);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"id\") == 6);\n    assert (tuple.getLong(\"Field_i\") == 40);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(3);\n    assert (tuple.getLong(\"id\") == 5);\n    assert (tuple.getLong(\"Field_i\") == 30);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(4);\n    assert (tuple.getLong(\"id\") == 3);\n    assert (tuple.getLong(\"Field_i\") == 20);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    tuple = tuples.get(5);\n    assert (tuple.getLong(\"id\") == 4);\n    assert (tuple.getLong(\"Field_i\") == 11);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(6);\n    assert (tuple.getLong(\"id\") == 2);\n    assert (tuple.getLong(\"Field_i\") == 8);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(7);\n    assert (tuple.getLong(\"id\") == 1);\n    assert (tuple.getLong(\"Field_i\") == 7);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    // TODO get sum(Field_i) as named one\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n    sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n  }\n\n","sourceOld":"  @Test\n  public void testMixedCaseFields() throws Exception {\n\n    new UpdateRequest()\n        .add(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\")\n        .add(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\")\n        .add(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\")\n        .add(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\")\n        .add(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\")\n        .add(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\")\n        .add(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\")\n        .add(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String baseUrl = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n    List<Tuple> tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 8);\n\n    Tuple tuple;\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"id\") == 8);\n    assert (tuple.getLong(\"Field_i\") == 60);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"id\") == 7);\n    assert (tuple.getLong(\"Field_i\") == 50);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"id\") == 6);\n    assert (tuple.getLong(\"Field_i\") == 40);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(3);\n    assert (tuple.getLong(\"id\") == 5);\n    assert (tuple.getLong(\"Field_i\") == 30);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(4);\n    assert (tuple.getLong(\"id\") == 3);\n    assert (tuple.getLong(\"Field_i\") == 20);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    tuple = tuples.get(5);\n    assert (tuple.getLong(\"id\") == 4);\n    assert (tuple.getLong(\"Field_i\") == 11);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(6);\n    assert (tuple.getLong(\"id\") == 2);\n    assert (tuple.getLong(\"Field_i\") == 8);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(7);\n    assert (tuple.getLong(\"id\") == 1);\n    assert (tuple.getLong(\"Field_i\") == 7);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    // TODO get sum(Field_i) as named one\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n    sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"22191e72f6c40dec88c9b94f9bb55c7527772a47":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["94e31112925a65b1d36f9064772080e25b5ef373"],"94e31112925a65b1d36f9064772080e25b5ef373":["22191e72f6c40dec88c9b94f9bb55c7527772a47"]},"commit2Childs":{"22191e72f6c40dec88c9b94f9bb55c7527772a47":["94e31112925a65b1d36f9064772080e25b5ef373"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22191e72f6c40dec88c9b94f9bb55c7527772a47"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"94e31112925a65b1d36f9064772080e25b5ef373":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}