{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeEquals(Rectangle).mjava","commits":[{"id":"0415a016b37e58a017fed0a91234f733ab359971","date":1341458183,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeEquals(Rectangle).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeEquals(Rectangle,BBoxFieldInfo).mjava","sourceNew":"  /**\n   * Constructs a query to retrieve documents that equal the input envelope.\n   *\n   * @return the spatial query\n   */\n  Query makeEquals(Rectangle bbox) {\n\n    // docMinX = queryExtent.getMinX() AND docMinY = queryExtent.getMinY() AND docMaxX = queryExtent.getMaxX() AND docMaxY = queryExtent.getMaxY()\n    Query qMinX = NumericRangeQuery.newDoubleRange(field_minX, precisionStep, bbox.getMinX(), bbox.getMinX(), true, true);\n    Query qMinY = NumericRangeQuery.newDoubleRange(field_minY, precisionStep, bbox.getMinY(), bbox.getMinY(), true, true);\n    Query qMaxX = NumericRangeQuery.newDoubleRange(field_maxX, precisionStep, bbox.getMaxX(), bbox.getMaxX(), true, true);\n    Query qMaxY = NumericRangeQuery.newDoubleRange(field_maxY, precisionStep, bbox.getMaxY(), bbox.getMaxY(), true, true);\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(qMinX, BooleanClause.Occur.MUST);\n    bq.add(qMinY, BooleanClause.Occur.MUST);\n    bq.add(qMaxX, BooleanClause.Occur.MUST);\n    bq.add(qMaxY, BooleanClause.Occur.MUST);\n    return bq;\n  }\n\n","sourceOld":"  /**\n   * Constructs a query to retrieve documents that equal the input envelope.\n   *\n   * @return the spatial query\n   */\n  Query makeEquals(Rectangle bbox, BBoxFieldInfo fieldInfo) {\n\n    // docMinX = queryExtent.getMinX() AND docMinY = queryExtent.getMinY() AND docMaxX = queryExtent.getMaxX() AND docMaxY = queryExtent.getMaxY()\n    Query qMinX = NumericRangeQuery.newDoubleRange(fieldInfo.minX, finfo.precisionStep, bbox.getMinX(), bbox.getMinX(), true, true);\n    Query qMinY = NumericRangeQuery.newDoubleRange(fieldInfo.minY, finfo.precisionStep, bbox.getMinY(), bbox.getMinY(), true, true);\n    Query qMaxX = NumericRangeQuery.newDoubleRange(fieldInfo.maxX, finfo.precisionStep, bbox.getMaxX(), bbox.getMaxX(), true, true);\n    Query qMaxY = NumericRangeQuery.newDoubleRange(fieldInfo.maxY, finfo.precisionStep, bbox.getMaxY(), bbox.getMaxY(), true, true);\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(qMinX, BooleanClause.Occur.MUST);\n    bq.add(qMinY, BooleanClause.Occur.MUST);\n    bq.add(qMaxX, BooleanClause.Occur.MUST);\n    bq.add(qMaxY, BooleanClause.Occur.MUST);\n    return bq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeEquals(Rectangle).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Constructs a query to retrieve documents that equal the input envelope.\n   *\n   * @return the spatial query\n   */\n  Query makeEquals(Rectangle bbox) {\n\n    // docMinX = queryExtent.getMinX() AND docMinY = queryExtent.getMinY() AND docMaxX = queryExtent.getMaxX() AND docMaxY = queryExtent.getMaxY()\n    Query qMinX = NumericRangeQuery.newDoubleRange(field_minX, precisionStep, bbox.getMinX(), bbox.getMinX(), true, true);\n    Query qMinY = NumericRangeQuery.newDoubleRange(field_minY, precisionStep, bbox.getMinY(), bbox.getMinY(), true, true);\n    Query qMaxX = NumericRangeQuery.newDoubleRange(field_maxX, precisionStep, bbox.getMaxX(), bbox.getMaxX(), true, true);\n    Query qMaxY = NumericRangeQuery.newDoubleRange(field_maxY, precisionStep, bbox.getMaxY(), bbox.getMaxY(), true, true);\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(qMinX, BooleanClause.Occur.MUST);\n    bq.add(qMinY, BooleanClause.Occur.MUST);\n    bq.add(qMaxX, BooleanClause.Occur.MUST);\n    bq.add(qMaxY, BooleanClause.Occur.MUST);\n    return bq;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018","date":1404828935,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeEquals(Rectangle).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeEquals(Rectangle).mjava","sourceNew":"  /**\n   * Constructs a query to retrieve documents that equal the input envelope.\n   *\n   * @return the spatial query\n   */\n  Query makeEquals(Rectangle bbox) {\n\n    // docMinX = queryExtent.getMinX() AND docMinY = queryExtent.getMinY() AND docMaxX = queryExtent.getMaxX() AND docMaxY = queryExtent.getMaxY()\n    Query qMinX = makeNumberTermQuery(field_minX, bbox.getMinX());\n    Query qMinY = makeNumberTermQuery(field_minY, bbox.getMinY());\n    Query qMaxX = makeNumberTermQuery(field_maxX, bbox.getMaxX());\n    Query qMaxY = makeNumberTermQuery(field_maxY, bbox.getMaxY());\n    return makeQuery(BooleanClause.Occur.MUST, qMinX, qMinY, qMaxX, qMaxY);\n  }\n\n","sourceOld":"  /**\n   * Constructs a query to retrieve documents that equal the input envelope.\n   *\n   * @return the spatial query\n   */\n  Query makeEquals(Rectangle bbox) {\n\n    // docMinX = queryExtent.getMinX() AND docMinY = queryExtent.getMinY() AND docMaxX = queryExtent.getMaxX() AND docMaxY = queryExtent.getMaxY()\n    Query qMinX = NumericRangeQuery.newDoubleRange(field_minX, precisionStep, bbox.getMinX(), bbox.getMinX(), true, true);\n    Query qMinY = NumericRangeQuery.newDoubleRange(field_minY, precisionStep, bbox.getMinY(), bbox.getMinY(), true, true);\n    Query qMaxX = NumericRangeQuery.newDoubleRange(field_maxX, precisionStep, bbox.getMaxX(), bbox.getMaxX(), true, true);\n    Query qMaxY = NumericRangeQuery.newDoubleRange(field_maxY, precisionStep, bbox.getMaxY(), bbox.getMaxY(), true, true);\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(qMinX, BooleanClause.Occur.MUST);\n    bq.add(qMinY, BooleanClause.Occur.MUST);\n    bq.add(qMaxX, BooleanClause.Occur.MUST);\n    bq.add(qMaxY, BooleanClause.Occur.MUST);\n    return bq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeEquals(Rectangle).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeEquals(Rectangle).mjava","sourceNew":"  /**\n   * Constructs a query to retrieve documents that equal the input envelope.\n   *\n   * @return the spatial query\n   */\n  Query makeEquals(Rectangle bbox) {\n\n    // docMinX = queryExtent.getMinX() AND docMinY = queryExtent.getMinY() AND docMaxX = queryExtent.getMaxX() AND docMaxY = queryExtent.getMaxY()\n    Query qMinX = makeNumberTermQuery(field_minX, bbox.getMinX());\n    Query qMinY = makeNumberTermQuery(field_minY, bbox.getMinY());\n    Query qMaxX = makeNumberTermQuery(field_maxX, bbox.getMaxX());\n    Query qMaxY = makeNumberTermQuery(field_maxY, bbox.getMaxY());\n    return makeQuery(BooleanClause.Occur.MUST, qMinX, qMinY, qMaxX, qMaxY);\n  }\n\n","sourceOld":"  /**\n   * Constructs a query to retrieve documents that equal the input envelope.\n   *\n   * @return the spatial query\n   */\n  Query makeEquals(Rectangle bbox) {\n\n    // docMinX = queryExtent.getMinX() AND docMinY = queryExtent.getMinY() AND docMaxX = queryExtent.getMaxX() AND docMaxY = queryExtent.getMaxY()\n    Query qMinX = makeNumberTermQuery(field_minX, bbox.getMinX());\n    Query qMinY = makeNumberTermQuery(field_minY, bbox.getMinY());\n    Query qMaxX = makeNumberTermQuery(field_maxX, bbox.getMaxX());\n    Query qMaxY = makeNumberTermQuery(field_maxY, bbox.getMaxY());\n    return makeQuery(BooleanClause.Occur.MUST, qMinX, qMinY, qMaxX, qMaxY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeEquals(Rectangle).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeEquals(Rectangle).mjava","sourceNew":"  /**\n   * Constructs a query to retrieve documents that equal the input envelope.\n   *\n   * @return the spatial query\n   */\n  Query makeEquals(Rectangle bbox) {\n\n    // docMinX = queryExtent.getMinX() AND docMinY = queryExtent.getMinY() AND docMaxX = queryExtent.getMaxX() AND docMaxY = queryExtent.getMaxY()\n    Query qMinX = makeNumberTermQuery(field_minX, bbox.getMinX());\n    Query qMinY = makeNumberTermQuery(field_minY, bbox.getMinY());\n    Query qMaxX = makeNumberTermQuery(field_maxX, bbox.getMaxX());\n    Query qMaxY = makeNumberTermQuery(field_maxY, bbox.getMaxY());\n    return makeQuery(BooleanClause.Occur.MUST, qMinX, qMinY, qMaxX, qMaxY);\n  }\n\n","sourceOld":"  /**\n   * Constructs a query to retrieve documents that equal the input envelope.\n   *\n   * @return the spatial query\n   */\n  Query makeEquals(Rectangle bbox) {\n\n    // docMinX = queryExtent.getMinX() AND docMinY = queryExtent.getMinY() AND docMaxX = queryExtent.getMaxX() AND docMaxY = queryExtent.getMaxY()\n    Query qMinX = makeNumberTermQuery(field_minX, bbox.getMinX());\n    Query qMinY = makeNumberTermQuery(field_minY, bbox.getMinY());\n    Query qMaxX = makeNumberTermQuery(field_maxX, bbox.getMaxX());\n    Query qMaxY = makeNumberTermQuery(field_maxY, bbox.getMaxY());\n    return makeQuery(BooleanClause.Occur.MUST, qMinX, qMinY, qMaxX, qMaxY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0415a016b37e58a017fed0a91234f733ab359971":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"af2638813028b254a88b418ebeafb541afb49653":["1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018","112d77ac8d3e10a362516ad834c9a11d35c94234"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0415a016b37e58a017fed0a91234f733ab359971"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018"],"1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018":["0415a016b37e58a017fed0a91234f733ab359971"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"0415a016b37e58a017fed0a91234f733ab359971":["fe33227f6805edab2036cbb80645cc4e2d1fa424","1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018"],"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0415a016b37e58a017fed0a91234f733ab359971","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}