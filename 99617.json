{"path":"lucene/facet/src/java/org/apache/lucene/facet/simple/RangeFacetCounts#getTopChildren(int,String,String...).mjava","commits":[{"id":"93bee32f95de853915b2f9402e76ed24ef97f43e","date":1384460894,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/RangeFacetCounts#getTopChildren(int,String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/RangeFacetCounts#getCounts().mjava","sourceNew":"  @Override\n  public SimpleFacetResult getTopChildren(int topN, String dim, String... path) {\n    LabelAndValue[] labelValues = new LabelAndValue[counts.length];\n    for(int i=0;i<counts.length;i++) {\n      // nocommit can we add the range into this?\n      labelValues[i] = new LabelAndValue(ranges[i].label, counts[i]);\n    }\n\n    return new SimpleFacetResult(null, totCount, labelValues);\n  }\n\n","sourceOld":"  public SimpleFacetResult getCounts() {\n    LabelAndValue[] labelValues = new LabelAndValue[counts.length];\n    for(int i=0;i<counts.length;i++) {\n      // nocommit can we add the range into this?\n      labelValues[i] = new LabelAndValue(ranges[i].label, counts[i]);\n    }\n    return new SimpleFacetResult(null, totCount, labelValues);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ce7aff7772c162c15d520e31af46c555f60d5c3b","date":1385135519,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/RangeFacetCounts#getTopChildren(int,String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/RangeFacetCounts#getTopChildren(int,String,String...).mjava","sourceNew":"  @Override\n  public SimpleFacetResult getTopChildren(int topN, String dim, String... path) {\n    if (dim.equals(field) == false) {\n      throw new IllegalArgumentException(\"invalid dim \\\"\" + dim + \"\\\"; should be \\\"\" + field + \"\\\"\");\n    }\n    LabelAndValue[] labelValues = new LabelAndValue[counts.length];\n    for(int i=0;i<counts.length;i++) {\n      // nocommit can we add the range into this?\n      labelValues[i] = new LabelAndValue(ranges[i].label, counts[i]);\n    }\n\n    return new SimpleFacetResult(new FacetLabel(field), totCount, labelValues);\n  }\n\n","sourceOld":"  @Override\n  public SimpleFacetResult getTopChildren(int topN, String dim, String... path) {\n    LabelAndValue[] labelValues = new LabelAndValue[counts.length];\n    for(int i=0;i<counts.length;i++) {\n      // nocommit can we add the range into this?\n      labelValues[i] = new LabelAndValue(ranges[i].label, counts[i]);\n    }\n\n    return new SimpleFacetResult(null, totCount, labelValues);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae75def1e2525383b6e1397ed97c44387da9941c","date":1385249238,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/RangeFacetCounts#getTopChildren(int,String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/RangeFacetCounts#getTopChildren(int,String,String...).mjava","sourceNew":"  @Override\n  public SimpleFacetResult getTopChildren(int topN, String dim, String... path) {\n    if (dim.equals(field) == false) {\n      throw new IllegalArgumentException(\"invalid dim \\\"\" + dim + \"\\\"; should be \\\"\" + field + \"\\\"\");\n    }\n    LabelAndValue[] labelValues = new LabelAndValue[counts.length];\n    for(int i=0;i<counts.length;i++) {\n      // nocommit can we add the range into this?\n      labelValues[i] = new LabelAndValue(ranges[i].label, counts[i]);\n    }\n\n    return new SimpleFacetResult(new FacetLabel(field), totCount, labelValues, labelValues.length);\n  }\n\n","sourceOld":"  @Override\n  public SimpleFacetResult getTopChildren(int topN, String dim, String... path) {\n    if (dim.equals(field) == false) {\n      throw new IllegalArgumentException(\"invalid dim \\\"\" + dim + \"\\\"; should be \\\"\" + field + \"\\\"\");\n    }\n    LabelAndValue[] labelValues = new LabelAndValue[counts.length];\n    for(int i=0;i<counts.length;i++) {\n      // nocommit can we add the range into this?\n      labelValues[i] = new LabelAndValue(ranges[i].label, counts[i]);\n    }\n\n    return new SimpleFacetResult(new FacetLabel(field), totCount, labelValues);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f01616d06510fc630b6ef0ec324bdebc2fc49b3c","date":1385331328,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/RangeFacetCounts#getTopChildren(int,String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/RangeFacetCounts#getTopChildren(int,String,String...).mjava","sourceNew":"  @Override\n  public SimpleFacetResult getTopChildren(int topN, String dim, String... path) {\n    if (dim.equals(field) == false) {\n      throw new IllegalArgumentException(\"invalid dim \\\"\" + dim + \"\\\"; should be \\\"\" + field + \"\\\"\");\n    }\n    LabelAndValue[] labelValues = new LabelAndValue[counts.length];\n    for(int i=0;i<counts.length;i++) {\n      // nocommit can we add the range into this?\n      labelValues[i] = new LabelAndValue(ranges[i].label, counts[i]);\n    }\n\n    return new SimpleFacetResult(totCount, labelValues, labelValues.length);\n  }\n\n","sourceOld":"  @Override\n  public SimpleFacetResult getTopChildren(int topN, String dim, String... path) {\n    if (dim.equals(field) == false) {\n      throw new IllegalArgumentException(\"invalid dim \\\"\" + dim + \"\\\"; should be \\\"\" + field + \"\\\"\");\n    }\n    LabelAndValue[] labelValues = new LabelAndValue[counts.length];\n    for(int i=0;i<counts.length;i++) {\n      // nocommit can we add the range into this?\n      labelValues[i] = new LabelAndValue(ranges[i].label, counts[i]);\n    }\n\n    return new SimpleFacetResult(new FacetLabel(field), totCount, labelValues, labelValues.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/RangeFacetCounts#getTopChildren(int,String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/RangeFacetCounts#getTopChildren(int,String,String...).mjava","sourceNew":"  @Override\n  public FacetResult getTopChildren(int topN, String dim, String... path) {\n    if (dim.equals(field) == false) {\n      throw new IllegalArgumentException(\"invalid dim \\\"\" + dim + \"\\\"; should be \\\"\" + field + \"\\\"\");\n    }\n    LabelAndValue[] labelValues = new LabelAndValue[counts.length];\n    for(int i=0;i<counts.length;i++) {\n      // nocommit can we add the range into this?\n      labelValues[i] = new LabelAndValue(ranges[i].label, counts[i]);\n    }\n\n    return new FacetResult(totCount, labelValues, labelValues.length);\n  }\n\n","sourceOld":"  @Override\n  public SimpleFacetResult getTopChildren(int topN, String dim, String... path) {\n    if (dim.equals(field) == false) {\n      throw new IllegalArgumentException(\"invalid dim \\\"\" + dim + \"\\\"; should be \\\"\" + field + \"\\\"\");\n    }\n    LabelAndValue[] labelValues = new LabelAndValue[counts.length];\n    for(int i=0;i<counts.length;i++) {\n      // nocommit can we add the range into this?\n      labelValues[i] = new LabelAndValue(ranges[i].label, counts[i]);\n    }\n\n    return new SimpleFacetResult(totCount, labelValues, labelValues.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"ce7aff7772c162c15d520e31af46c555f60d5c3b":["93bee32f95de853915b2f9402e76ed24ef97f43e"],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["ae75def1e2525383b6e1397ed97c44387da9941c"],"93bee32f95de853915b2f9402e76ed24ef97f43e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae75def1e2525383b6e1397ed97c44387da9941c":["ce7aff7772c162c15d520e31af46c555f60d5c3b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["93bee32f95de853915b2f9402e76ed24ef97f43e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"ce7aff7772c162c15d520e31af46c555f60d5c3b":["ae75def1e2525383b6e1397ed97c44387da9941c"],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["21d36d0db865f7b84026b447bec653469a6e66df"],"93bee32f95de853915b2f9402e76ed24ef97f43e":["ce7aff7772c162c15d520e31af46c555f60d5c3b"],"ae75def1e2525383b6e1397ed97c44387da9941c":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}