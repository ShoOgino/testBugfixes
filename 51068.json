{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup#lookupPrefix(BytesRef,Arc[Long]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup#lookupPrefix(BytesRef,Arc[Long]).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup#lookupPrefix(BytesRef,Arc[Long]).mjava","sourceNew":"  private Long lookupPrefix(BytesRef scratch, Arc<Long> arc) throws /*Bogus*/IOException {\n    assert 0 == fst.outputs.getNoOutput().longValue();\n    long output = 0;\n    BytesReader bytesReader = fst.getBytesReader(0);\n    \n    fst.getFirstArc(arc);\n    \n    byte[] bytes = scratch.bytes;\n    int pos = scratch.offset;\n    int end = pos + scratch.length;\n    while (pos < end) {\n      if (fst.findTargetArc(bytes[pos++] & 0xff, arc, arc, bytesReader) == null) {\n        return null;\n      } else {\n        output += arc.output.longValue();\n      }\n    }\n    \n    return output;\n  }\n\n","sourceOld":"  private Long lookupPrefix(BytesRef scratch, Arc<Long> arc) throws /*Bogus*/IOException {\n    assert 0 == fst.outputs.getNoOutput().longValue();\n    long output = 0;\n    BytesReader bytesReader = fst.getBytesReader(0);\n    \n    fst.getFirstArc(arc);\n    \n    byte[] bytes = scratch.bytes;\n    int pos = scratch.offset;\n    int end = pos + scratch.length;\n    while (pos < end) {\n      if (fst.findTargetArc(bytes[pos++] & 0xff, arc, arc, bytesReader) == null) {\n        return null;\n      } else {\n        output += arc.output.longValue();\n      }\n    }\n    \n    return output;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"82557a475db3e0849171dc0be5b02e3ae0745ddb","date":1358195918,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup#lookupPrefix(BytesRef,Arc[Long]).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup#lookupPrefix(BytesRef,Arc[Long]).mjava","sourceNew":"  private Long lookupPrefix(BytesRef scratch, Arc<Long> arc) throws /*Bogus*/IOException {\n    assert 0 == fst.outputs.getNoOutput().longValue();\n    long output = 0;\n    BytesReader bytesReader = fst.getBytesReader();\n    \n    fst.getFirstArc(arc);\n    \n    byte[] bytes = scratch.bytes;\n    int pos = scratch.offset;\n    int end = pos + scratch.length;\n    while (pos < end) {\n      if (fst.findTargetArc(bytes[pos++] & 0xff, arc, arc, bytesReader) == null) {\n        return null;\n      } else {\n        output += arc.output.longValue();\n      }\n    }\n    \n    return output;\n  }\n\n","sourceOld":"  private Long lookupPrefix(BytesRef scratch, Arc<Long> arc) throws /*Bogus*/IOException {\n    assert 0 == fst.outputs.getNoOutput().longValue();\n    long output = 0;\n    BytesReader bytesReader = fst.getBytesReader(0);\n    \n    fst.getFirstArc(arc);\n    \n    byte[] bytes = scratch.bytes;\n    int pos = scratch.offset;\n    int end = pos + scratch.length;\n    while (pos < end) {\n      if (fst.findTargetArc(bytes[pos++] & 0xff, arc, arc, bytesReader) == null) {\n        return null;\n      } else {\n        output += arc.output.longValue();\n      }\n    }\n    \n    return output;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup#lookupPrefix(BytesRef,Arc[Long]).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup#lookupPrefix(BytesRef,Arc[Long]).mjava","sourceNew":"  private Long lookupPrefix(BytesRef scratch, Arc<Long> arc) throws /*Bogus*/IOException {\n    assert 0 == fst.outputs.getNoOutput().longValue();\n    long output = 0;\n    BytesReader bytesReader = fst.getBytesReader();\n    \n    fst.getFirstArc(arc);\n    \n    byte[] bytes = scratch.bytes;\n    int pos = scratch.offset;\n    int end = pos + scratch.length;\n    while (pos < end) {\n      if (fst.findTargetArc(bytes[pos++] & 0xff, arc, arc, bytesReader) == null) {\n        return null;\n      } else {\n        output += arc.output.longValue();\n      }\n    }\n    \n    return output;\n  }\n\n","sourceOld":"  private Long lookupPrefix(BytesRef scratch, Arc<Long> arc) throws /*Bogus*/IOException {\n    assert 0 == fst.outputs.getNoOutput().longValue();\n    long output = 0;\n    BytesReader bytesReader = fst.getBytesReader(0);\n    \n    fst.getFirstArc(arc);\n    \n    byte[] bytes = scratch.bytes;\n    int pos = scratch.offset;\n    int end = pos + scratch.length;\n    while (pos < end) {\n      if (fst.findTargetArc(bytes[pos++] & 0xff, arc, arc, bytesReader) == null) {\n        return null;\n      } else {\n        output += arc.output.longValue();\n      }\n    }\n    \n    return output;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54204c8a3ca26aeafd273139fc29baf70d0f6786","date":1564170395,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup#lookupPrefix(BytesRef,Arc[Long]).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup#lookupPrefix(BytesRef,Arc[Long]).mjava","sourceNew":"  private Long lookupPrefix(BytesRef scratch, Arc<Long> arc) throws /*Bogus*/IOException {\n    assert 0 == fst.outputs.getNoOutput().longValue();\n    long output = 0;\n    BytesReader bytesReader = fst.getBytesReader();\n    \n    fst.getFirstArc(arc);\n    \n    byte[] bytes = scratch.bytes;\n    int pos = scratch.offset;\n    int end = pos + scratch.length;\n    while (pos < end) {\n      if (fst.findTargetArc(bytes[pos++] & 0xff, arc, arc, bytesReader) == null) {\n        return null;\n      } else {\n        output += arc.output().longValue();\n      }\n    }\n    \n    return output;\n  }\n\n","sourceOld":"  private Long lookupPrefix(BytesRef scratch, Arc<Long> arc) throws /*Bogus*/IOException {\n    assert 0 == fst.outputs.getNoOutput().longValue();\n    long output = 0;\n    BytesReader bytesReader = fst.getBytesReader();\n    \n    fst.getFirstArc(arc);\n    \n    byte[] bytes = scratch.bytes;\n    int pos = scratch.offset;\n    int end = pos + scratch.length;\n    while (pos < end) {\n      if (fst.findTargetArc(bytes[pos++] & 0xff, arc, arc, bytesReader) == null) {\n        return null;\n      } else {\n        output += arc.output.longValue();\n      }\n    }\n    \n    return output;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup#lookupPrefix(BytesRef,Arc[Long]).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup#lookupPrefix(BytesRef,Arc[Long]).mjava","sourceNew":"  private Long lookupPrefix(BytesRef scratch, Arc<Long> arc) throws /*Bogus*/IOException {\n    assert 0 == fst.outputs.getNoOutput().longValue();\n    long output = 0;\n    BytesReader bytesReader = fst.getBytesReader();\n    \n    fst.getFirstArc(arc);\n    \n    byte[] bytes = scratch.bytes;\n    int pos = scratch.offset;\n    int end = pos + scratch.length;\n    while (pos < end) {\n      if (fst.findTargetArc(bytes[pos++] & 0xff, arc, arc, bytesReader) == null) {\n        return null;\n      } else {\n        output += arc.output().longValue();\n      }\n    }\n    \n    return output;\n  }\n\n","sourceOld":"  private Long lookupPrefix(BytesRef scratch, Arc<Long> arc) throws /*Bogus*/IOException {\n    assert 0 == fst.outputs.getNoOutput().longValue();\n    long output = 0;\n    BytesReader bytesReader = fst.getBytesReader();\n    \n    fst.getFirstArc(arc);\n    \n    byte[] bytes = scratch.bytes;\n    int pos = scratch.offset;\n    int end = pos + scratch.length;\n    while (pos < end) {\n      if (fst.findTargetArc(bytes[pos++] & 0xff, arc, arc, bytesReader) == null) {\n        return null;\n      } else {\n        output += arc.output.longValue();\n      }\n    }\n    \n    return output;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54204c8a3ca26aeafd273139fc29baf70d0f6786":["82557a475db3e0849171dc0be5b02e3ae0745ddb"],"82557a475db3e0849171dc0be5b02e3ae0745ddb":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["b89678825b68eccaf09e6ab71675fc0b0af1e099","82557a475db3e0849171dc0be5b02e3ae0745ddb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8061ddd97f3352007d927dae445884a6f3d857b":["82557a475db3e0849171dc0be5b02e3ae0745ddb","54204c8a3ca26aeafd273139fc29baf70d0f6786"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54204c8a3ca26aeafd273139fc29baf70d0f6786"]},"commit2Childs":{"54204c8a3ca26aeafd273139fc29baf70d0f6786":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"82557a475db3e0849171dc0be5b02e3ae0745ddb":["54204c8a3ca26aeafd273139fc29baf70d0f6786","c4015cd39dff8d4dec562d909f9766debac53aa6","f8061ddd97f3352007d927dae445884a6f3d857b"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["82557a475db3e0849171dc0be5b02e3ae0745ddb","c4015cd39dff8d4dec562d909f9766debac53aa6"],"c4015cd39dff8d4dec562d909f9766debac53aa6":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c4015cd39dff8d4dec562d909f9766debac53aa6","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}