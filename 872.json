{"path":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene70/IndexedDISI#readBlockHeader().mjava","commits":[{"id":"03e17b020972a0d6e8d6823f545571a66646a167","date":1547847724,"type":1,"author":"Toke Eskildsen","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene70/IndexedDISI#readBlockHeader().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISI#readBlockHeader().mjava","sourceNew":"  private void readBlockHeader() throws IOException {\n    block = Short.toUnsignedInt(slice.readShort()) << 16;\n    assert block >= 0;\n    final int numValues = 1 + Short.toUnsignedInt(slice.readShort());\n    index = nextBlockIndex;\n    nextBlockIndex = index + numValues;\n    if (numValues <= MAX_ARRAY_LENGTH) {\n      method = Method.SPARSE;\n      blockEnd = slice.getFilePointer() + (numValues << 1);\n    } else if (numValues == 65536) {\n      method = Method.ALL;\n      blockEnd = slice.getFilePointer();\n      gap = block - index - 1;\n    } else {\n      method = Method.DENSE;\n      blockEnd = slice.getFilePointer() + (1 << 13);\n      wordIndex = -1;\n      numberOfOnes = index + 1;\n    }\n  }\n\n","sourceOld":"  private void readBlockHeader() throws IOException {\n    block = Short.toUnsignedInt(slice.readShort()) << 16;\n    assert block >= 0;\n    final int numValues = 1 + Short.toUnsignedInt(slice.readShort());\n    index = nextBlockIndex;\n    nextBlockIndex = index + numValues;\n    if (numValues <= MAX_ARRAY_LENGTH) {\n      method = Method.SPARSE;\n      blockEnd = slice.getFilePointer() + (numValues << 1);\n    } else if (numValues == 65536) {\n      method = Method.ALL;\n      blockEnd = slice.getFilePointer();\n      gap = block - index - 1;\n    } else {\n      method = Method.DENSE;\n      blockEnd = slice.getFilePointer() + (1 << 13);\n      wordIndex = -1;\n      numberOfOnes = index + 1;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c89f1ef80a9432f4eabaeda9a1e135cd72e60836","date":1547972642,"type":1,"author":"Tommaso Teofili","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene70/IndexedDISI#readBlockHeader().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISI#readBlockHeader().mjava","sourceNew":"  private void readBlockHeader() throws IOException {\n    block = Short.toUnsignedInt(slice.readShort()) << 16;\n    assert block >= 0;\n    final int numValues = 1 + Short.toUnsignedInt(slice.readShort());\n    index = nextBlockIndex;\n    nextBlockIndex = index + numValues;\n    if (numValues <= MAX_ARRAY_LENGTH) {\n      method = Method.SPARSE;\n      blockEnd = slice.getFilePointer() + (numValues << 1);\n    } else if (numValues == 65536) {\n      method = Method.ALL;\n      blockEnd = slice.getFilePointer();\n      gap = block - index - 1;\n    } else {\n      method = Method.DENSE;\n      blockEnd = slice.getFilePointer() + (1 << 13);\n      wordIndex = -1;\n      numberOfOnes = index + 1;\n    }\n  }\n\n","sourceOld":"  private void readBlockHeader() throws IOException {\n    block = Short.toUnsignedInt(slice.readShort()) << 16;\n    assert block >= 0;\n    final int numValues = 1 + Short.toUnsignedInt(slice.readShort());\n    index = nextBlockIndex;\n    nextBlockIndex = index + numValues;\n    if (numValues <= MAX_ARRAY_LENGTH) {\n      method = Method.SPARSE;\n      blockEnd = slice.getFilePointer() + (numValues << 1);\n    } else if (numValues == 65536) {\n      method = Method.ALL;\n      blockEnd = slice.getFilePointer();\n      gap = block - index - 1;\n    } else {\n      method = Method.DENSE;\n      blockEnd = slice.getFilePointer() + (1 << 13);\n      wordIndex = -1;\n      numberOfOnes = index + 1;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57cb6df494f10aeb3fab477b1ce4a9187455a227","date":1574155024,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene70/IndexedDISI#readBlockHeader().mjava","sourceNew":null,"sourceOld":"  private void readBlockHeader() throws IOException {\n    block = Short.toUnsignedInt(slice.readShort()) << 16;\n    assert block >= 0;\n    final int numValues = 1 + Short.toUnsignedInt(slice.readShort());\n    index = nextBlockIndex;\n    nextBlockIndex = index + numValues;\n    if (numValues <= MAX_ARRAY_LENGTH) {\n      method = Method.SPARSE;\n      blockEnd = slice.getFilePointer() + (numValues << 1);\n    } else if (numValues == 65536) {\n      method = Method.ALL;\n      blockEnd = slice.getFilePointer();\n      gap = block - index - 1;\n    } else {\n      method = Method.DENSE;\n      blockEnd = slice.getFilePointer() + (1 << 13);\n      wordIndex = -1;\n      numberOfOnes = index + 1;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"03e17b020972a0d6e8d6823f545571a66646a167":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","03e17b020972a0d6e8d6823f545571a66646a167"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57cb6df494f10aeb3fab477b1ce4a9187455a227":["03e17b020972a0d6e8d6823f545571a66646a167"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57cb6df494f10aeb3fab477b1ce4a9187455a227"]},"commit2Childs":{"03e17b020972a0d6e8d6823f545571a66646a167":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","57cb6df494f10aeb3fab477b1ce4a9187455a227"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["03e17b020972a0d6e8d6823f545571a66646a167","c89f1ef80a9432f4eabaeda9a1e135cd72e60836"],"57cb6df494f10aeb3fab477b1ce4a9187455a227":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}