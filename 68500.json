{"path":"src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","commits":[{"id":"103e2ec175f1aa5629df5bcd34eb1c53055caeb1","date":1268243753,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT);\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","sourceNew":null,"sourceOld":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT);\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","sourceNew":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n  }\n\n","sourceOld":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"103e2ec175f1aa5629df5bcd34eb1c53055caeb1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e52fea2c4081a1e552b98506691990be59503168":["103e2ec175f1aa5629df5bcd34eb1c53055caeb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"103e2ec175f1aa5629df5bcd34eb1c53055caeb1":["e52fea2c4081a1e552b98506691990be59503168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["103e2ec175f1aa5629df5bcd34eb1c53055caeb1"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}