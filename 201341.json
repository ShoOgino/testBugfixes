{"path":"lucene/core/src/java/org/apache/lucene/store/CompoundFileDirectory#listAll().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/CompoundFileDirectory#listAll().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#listAll().mjava","sourceNew":"  /** Returns an array of strings, one for each file in the directory. */\n  @Override\n  public String[] listAll() {\n    ensureOpen();\n    String[] res;\n    if (writer != null) {\n      res = writer.listAll(); \n    } else {\n      res = entries.keySet().toArray(new String[entries.size()]);\n      // Add the segment name\n      String seg = fileName.substring(0, fileName.indexOf('.'));\n      for (int i = 0; i < res.length; i++) {\n        res[i] = seg + res[i];\n      }\n    }\n    return res;\n  }\n\n","sourceOld":"  /** Returns an array of strings, one for each file in the directory. */\n  @Override\n  public String[] listAll() {\n    ensureOpen();\n    String[] res;\n    if (writer != null) {\n      res = writer.listAll(); \n    } else {\n      res = entries.keySet().toArray(new String[entries.size()]);\n      // Add the segment name\n      String seg = fileName.substring(0, fileName.indexOf('.'));\n      for (int i = 0; i < res.length; i++) {\n        res[i] = seg + res[i];\n      }\n    }\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03288de96c3666aa5583cc4dce079f6894fb3b31","date":1339438313,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/CompoundFileDirectory#listAll().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/CompoundFileDirectory#listAll().mjava","sourceNew":"  /** Returns an array of strings, one for each file in the directory. */\n  @Override\n  public String[] listAll() {\n    ensureOpen();\n    String[] res;\n    if (writer != null) {\n      res = writer.listAll(); \n    } else {\n      res = entries.keySet().toArray(new String[entries.size()]);\n      // Add the segment name\n      String seg = IndexFileNames.parseSegmentName(fileName);\n      for (int i = 0; i < res.length; i++) {\n        res[i] = seg + res[i];\n      }\n    }\n    return res;\n  }\n\n","sourceOld":"  /** Returns an array of strings, one for each file in the directory. */\n  @Override\n  public String[] listAll() {\n    ensureOpen();\n    String[] res;\n    if (writer != null) {\n      res = writer.listAll(); \n    } else {\n      res = entries.keySet().toArray(new String[entries.size()]);\n      // Add the segment name\n      String seg = fileName.substring(0, fileName.indexOf('.'));\n      for (int i = 0; i < res.length; i++) {\n        res[i] = seg + res[i];\n      }\n    }\n    return res;\n  }\n\n","bugFix":["0aab6e810b4b0d3743d6a048be0602801f4b3920"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"989d940c4bf402188f4f0ae13736836885227383","date":1412263633,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40CompoundReader#listAll().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/CompoundFileDirectory#listAll().mjava","sourceNew":"  /** Returns an array of strings, one for each file in the directory. */\n  @Override\n  public String[] listAll() {\n    ensureOpen();\n    String[] res;\n    if (writer != null) {\n      res = writer.listAll(); \n    } else {\n      res = entries.keySet().toArray(new String[entries.size()]);\n      // Add the segment name\n      String seg = IndexFileNames.parseSegmentName(fileName);\n      for (int i = 0; i < res.length; i++) {\n        res[i] = seg + res[i];\n      }\n    }\n    return res;\n  }\n\n","sourceOld":"  /** Returns an array of strings, one for each file in the directory. */\n  @Override\n  public String[] listAll() {\n    ensureOpen();\n    String[] res;\n    if (writer != null) {\n      res = writer.listAll(); \n    } else {\n      res = entries.keySet().toArray(new String[entries.size()]);\n      // Add the segment name\n      String seg = IndexFileNames.parseSegmentName(fileName);\n      for (int i = 0; i < res.length; i++) {\n        res[i] = seg + res[i];\n      }\n    }\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"989d940c4bf402188f4f0ae13736836885227383","date":1412263633,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/CompoundFileDirectory#listAll().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/CompoundFileDirectory#listAll().mjava","sourceNew":"  /** Returns an array of strings, one for each file in the directory. */\n  @Override\n  public String[] listAll() {\n    ensureOpen();\n    String[] res;\n    if (writer != null) {\n      res = writer.listAll(); \n    } else {\n      res = entries.keySet().toArray(new String[entries.size()]);\n      // Add the segment name\n      String seg = IndexFileNames.parseSegmentName(fileName);\n      for (int i = 0; i < res.length; i++) {\n        res[i] = seg + res[i];\n      }\n    }\n    return res;\n  }\n\n","sourceOld":"  /** Returns an array of strings, one for each file in the directory. */\n  @Override\n  public String[] listAll() {\n    ensureOpen();\n    String[] res;\n    if (writer != null) {\n      res = writer.listAll(); \n    } else {\n      res = entries.keySet().toArray(new String[entries.size()]);\n      // Add the segment name\n      String seg = IndexFileNames.parseSegmentName(fileName);\n      for (int i = 0; i < res.length; i++) {\n        res[i] = seg + res[i];\n      }\n    }\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40CompoundReader#listAll().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/CompoundFileDirectory#listAll().mjava","sourceNew":"  /** Returns an array of strings, one for each file in the directory. */\n  @Override\n  public String[] listAll() {\n    ensureOpen();\n    String[] res;\n    if (writer != null) {\n      res = writer.listAll(); \n    } else {\n      res = entries.keySet().toArray(new String[entries.size()]);\n      // Add the segment name\n      String seg = IndexFileNames.parseSegmentName(fileName);\n      for (int i = 0; i < res.length; i++) {\n        res[i] = seg + res[i];\n      }\n    }\n    return res;\n  }\n\n","sourceOld":"  /** Returns an array of strings, one for each file in the directory. */\n  @Override\n  public String[] listAll() {\n    ensureOpen();\n    String[] res;\n    if (writer != null) {\n      res = writer.listAll(); \n    } else {\n      res = entries.keySet().toArray(new String[entries.size()]);\n      // Add the segment name\n      String seg = IndexFileNames.parseSegmentName(fileName);\n      for (int i = 0; i < res.length; i++) {\n        res[i] = seg + res[i];\n      }\n    }\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"989d940c4bf402188f4f0ae13736836885227383":["03288de96c3666aa5583cc4dce079f6894fb3b31"],"03288de96c3666aa5583cc4dce079f6894fb3b31":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["03288de96c3666aa5583cc4dce079f6894fb3b31","989d940c4bf402188f4f0ae13736836885227383"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9bb9a29a5e71a90295f175df8919802993142c9a"]},"commit2Childs":{"989d940c4bf402188f4f0ae13736836885227383":["9bb9a29a5e71a90295f175df8919802993142c9a"],"03288de96c3666aa5583cc4dce079f6894fb3b31":["989d940c4bf402188f4f0ae13736836885227383","9bb9a29a5e71a90295f175df8919802993142c9a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["03288de96c3666aa5583cc4dce079f6894fb3b31"],"9bb9a29a5e71a90295f175df8919802993142c9a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}