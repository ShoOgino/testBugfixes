{"path":"solr/core/src/java/org/apache/solr/analytics/util/AnalyticsParsers#getParser(Class[#-extends-FieldType]).mjava","commits":[{"id":"ff403346522eaa9de75403763e297e83a3ea585c","date":1384904731,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analytics/util/AnalyticsParsers#getParser(Class[#-extends-FieldType]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a parser that will translate a BytesRef or long from DocValues into \n   * a String that correctly represents the value.\n   * @param class1 class of the FieldType of the field being faceted on.\n   * @return A Parser\n   */\n  public static Parser getParser(Class<? extends FieldType> class1) {\n    if (class1.equals(TrieIntField.class)) {\n      return AnalyticsParsers.INT_DOC_VALUES_PARSER;\n    } else if (class1.equals(TrieLongField.class)) {\n      return AnalyticsParsers.LONG_DOC_VALUES_PARSER;\n    } else if (class1.equals(TrieFloatField.class)) {\n      return AnalyticsParsers.FLOAT_DOC_VALUES_PARSER;\n    } else if (class1.equals(TrieDoubleField.class)) {\n      return AnalyticsParsers.DOUBLE_DOC_VALUES_PARSER;\n    } else if (class1.equals(TrieDateField.class)) {\n      return AnalyticsParsers.DATE_DOC_VALUES_PARSER;\n    } else {\n      return AnalyticsParsers.STRING_PARSER;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/analytics/util/AnalyticsParsers#getParser(Class[#-extends-FieldType]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a parser that will translate a BytesRef or long from DocValues into \n   * a String that correctly represents the value.\n   * @param class1 class of the FieldType of the field being faceted on.\n   * @return A Parser\n   */\n  public static Parser getParser(Class<? extends FieldType> class1) {\n    if (class1.equals(TrieIntField.class)) {\n      return AnalyticsParsers.INT_DOC_VALUES_PARSER;\n    } else if (class1.equals(TrieLongField.class)) {\n      return AnalyticsParsers.LONG_DOC_VALUES_PARSER;\n    } else if (class1.equals(TrieFloatField.class)) {\n      return AnalyticsParsers.FLOAT_DOC_VALUES_PARSER;\n    } else if (class1.equals(TrieDoubleField.class)) {\n      return AnalyticsParsers.DOUBLE_DOC_VALUES_PARSER;\n    } else if (class1.equals(TrieDateField.class)) {\n      return AnalyticsParsers.DATE_DOC_VALUES_PARSER;\n    } else {\n      return AnalyticsParsers.STRING_PARSER;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f719faa74f7213d4a395510dbc1f1b7cb178484","date":1410881394,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/analytics/src/java/org/apache/solr/analytics/util/AnalyticsParsers#getParser(Class[#-extends-FieldType]).mjava","pathOld":"solr/core/src/java/org/apache/solr/analytics/util/AnalyticsParsers#getParser(Class[#-extends-FieldType]).mjava","sourceNew":"  /**\n   * Returns a parser that will translate a BytesRef or long from DocValues into \n   * a String that correctly represents the value.\n   * @param class1 class of the FieldType of the field being faceted on.\n   * @return A Parser\n   */\n  public static Parser getParser(Class<? extends FieldType> class1) {\n    if (class1.equals(TrieIntField.class)) {\n      return AnalyticsParsers.INT_DOC_VALUES_PARSER;\n    } else if (class1.equals(TrieLongField.class)) {\n      return AnalyticsParsers.LONG_DOC_VALUES_PARSER;\n    } else if (class1.equals(TrieFloatField.class)) {\n      return AnalyticsParsers.FLOAT_DOC_VALUES_PARSER;\n    } else if (class1.equals(TrieDoubleField.class)) {\n      return AnalyticsParsers.DOUBLE_DOC_VALUES_PARSER;\n    } else if (class1.equals(TrieDateField.class)) {\n      return AnalyticsParsers.DATE_DOC_VALUES_PARSER;\n    } else {\n      return AnalyticsParsers.STRING_PARSER;\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a parser that will translate a BytesRef or long from DocValues into \n   * a String that correctly represents the value.\n   * @param class1 class of the FieldType of the field being faceted on.\n   * @return A Parser\n   */\n  public static Parser getParser(Class<? extends FieldType> class1) {\n    if (class1.equals(TrieIntField.class)) {\n      return AnalyticsParsers.INT_DOC_VALUES_PARSER;\n    } else if (class1.equals(TrieLongField.class)) {\n      return AnalyticsParsers.LONG_DOC_VALUES_PARSER;\n    } else if (class1.equals(TrieFloatField.class)) {\n      return AnalyticsParsers.FLOAT_DOC_VALUES_PARSER;\n    } else if (class1.equals(TrieDoubleField.class)) {\n      return AnalyticsParsers.DOUBLE_DOC_VALUES_PARSER;\n    } else if (class1.equals(TrieDateField.class)) {\n      return AnalyticsParsers.DATE_DOC_VALUES_PARSER;\n    } else {\n      return AnalyticsParsers.STRING_PARSER;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ff403346522eaa9de75403763e297e83a3ea585c"],"ff403346522eaa9de75403763e297e83a3ea585c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["ff403346522eaa9de75403763e297e83a3ea585c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f719faa74f7213d4a395510dbc1f1b7cb178484"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","ff403346522eaa9de75403763e297e83a3ea585c"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"ff403346522eaa9de75403763e297e83a3ea585c":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","0f719faa74f7213d4a395510dbc1f1b7cb178484"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}