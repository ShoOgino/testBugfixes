{"path":"src/test/org/apache/lucene/queryParser/TestQueryParser#assertHits(int,String,IndexSearcher).mjava","commits":[{"id":"ce48e56956c287f0fdb295c2c2f5b7c68ae8798b","date":1138567903,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#assertHits(int,String,IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  private void assertHits(int expected, String query, IndexSearcher is) throws ParseException, IOException {\n    QueryParser qp = new QueryParser(\"date\", new WhitespaceAnalyzer());\n    qp.setLocale(Locale.ENGLISH);\n    Query q = qp.parse(query);\n    Hits hits = is.search(q);\n    assertEquals(expected, hits.length());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5af07783dbc171e26a694c4f7d735e30c2769faa","date":1211569075,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#assertHits(int,String,IndexSearcher).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#assertHits(int,String,IndexSearcher).mjava","sourceNew":"  private void assertHits(int expected, String query, IndexSearcher is) throws ParseException, IOException {\n    QueryParser qp = new QueryParser(\"date\", new WhitespaceAnalyzer());\n    qp.setLocale(Locale.ENGLISH);\n    Query q = qp.parse(query);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(expected, hits.length);\n  }\n\n","sourceOld":"  private void assertHits(int expected, String query, IndexSearcher is) throws ParseException, IOException {\n    QueryParser qp = new QueryParser(\"date\", new WhitespaceAnalyzer());\n    qp.setLocale(Locale.ENGLISH);\n    Query q = qp.parse(query);\n    Hits hits = is.search(q);\n    assertEquals(expected, hits.length());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#assertHits(int,String,IndexSearcher).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#assertHits(int,String,IndexSearcher).mjava","sourceNew":"  private void assertHits(int expected, String query, IndexSearcher is) throws ParseException, IOException {\n    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, \"date\", new WhitespaceAnalyzer());\n    qp.setLocale(Locale.ENGLISH);\n    Query q = qp.parse(query);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(expected, hits.length);\n  }\n\n","sourceOld":"  private void assertHits(int expected, String query, IndexSearcher is) throws ParseException, IOException {\n    QueryParser qp = new QueryParser(\"date\", new WhitespaceAnalyzer());\n    qp.setLocale(Locale.ENGLISH);\n    Query q = qp.parse(query);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(expected, hits.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#assertHits(int,String,IndexSearcher).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#assertHits(int,String,IndexSearcher).mjava","sourceNew":"  private void assertHits(int expected, String query, IndexSearcher is) throws ParseException, IOException {\n    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, \"date\", new WhitespaceAnalyzer(Version.LUCENE_CURRENT));\n    qp.setLocale(Locale.ENGLISH);\n    Query q = qp.parse(query);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(expected, hits.length);\n  }\n\n","sourceOld":"  private void assertHits(int expected, String query, IndexSearcher is) throws ParseException, IOException {\n    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, \"date\", new WhitespaceAnalyzer());\n    qp.setLocale(Locale.ENGLISH);\n    Query q = qp.parse(query);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(expected, hits.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#assertHits(int,String,IndexSearcher).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#assertHits(int,String,IndexSearcher).mjava","sourceNew":"  private void assertHits(int expected, String query, IndexSearcher is) throws ParseException, IOException {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"date\", new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    qp.setLocale(Locale.ENGLISH);\n    Query q = qp.parse(query);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(expected, hits.length);\n  }\n\n","sourceOld":"  private void assertHits(int expected, String query, IndexSearcher is) throws ParseException, IOException {\n    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, \"date\", new WhitespaceAnalyzer(Version.LUCENE_CURRENT));\n    qp.setLocale(Locale.ENGLISH);\n    Query q = qp.parse(query);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(expected, hits.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#assertHits(int,String,IndexSearcher).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#assertHits(int,String,IndexSearcher).mjava","sourceNew":"  private void assertHits(int expected, String query, IndexSearcher is) throws ParseException, IOException {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"date\", new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    qp.setLocale(Locale.ENGLISH);\n    Query q = qp.parse(query);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(expected, hits.length);\n  }\n\n","sourceOld":"  private void assertHits(int expected, String query, IndexSearcher is) throws ParseException, IOException {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"date\", new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    qp.setLocale(Locale.ENGLISH);\n    Query q = qp.parse(query);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(expected, hits.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ce48e56956c287f0fdb295c2c2f5b7c68ae8798b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["ba1116b3450a9c1642c89445d131b37344055245"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5af07783dbc171e26a694c4f7d735e30c2769faa":["ce48e56956c287f0fdb295c2c2f5b7c68ae8798b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"ba1116b3450a9c1642c89445d131b37344055245":["5af07783dbc171e26a694c4f7d735e30c2769faa"]},"commit2Childs":{"ce48e56956c287f0fdb295c2c2f5b7c68ae8798b":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ce48e56956c287f0fdb295c2c2f5b7c68ae8798b"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5af07783dbc171e26a694c4f7d735e30c2769faa":["ba1116b3450a9c1642c89445d131b37344055245"],"ba1116b3450a9c1642c89445d131b37344055245":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}