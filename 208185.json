{"path":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testGetFacetResultsTwice().mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testGetFacetResultsTwice().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testGetFacetResultsTwice().mjava","sourceNew":"  public void testGetFacetResultsTwice() throws Exception {\n    // LUCENE-4893: counts were multiplied as many times as getFacetResults was called.\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"1\"));\n    doc.add(new FacetField(\"b\", \"1\"));\n    iw.addDocument(config.build(doc));\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    final FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n\n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    List<FacetResult> res1 = facets.getAllDims(10);\n    List<FacetResult> res2 = facets.getAllDims(10);\n    assertEquals(\"calling getFacetResults twice should return the .equals()=true result\", res1, res2);\n    \n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testGetFacetResultsTwice() throws Exception {\n    // LUCENE-4893: counts were multiplied as many times as getFacetResults was called.\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"1\"));\n    doc.add(new FacetField(\"b\", \"1\"));\n    iw.addDocument(config.build(doc));\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    final SimpleFacetsCollector sfc = new SimpleFacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n\n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    List<SimpleFacetResult> res1 = facets.getAllDims(10);\n    List<SimpleFacetResult> res2 = facets.getAllDims(10);\n    assertEquals(\"calling getFacetResults twice should return the .equals()=true result\", res1, res2);\n    \n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd83550e4b0bdd36e7d9dca9273264100782440b","date":1385761753,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testGetFacetResultsTwice().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testGetFacetResultsTwice().mjava","sourceNew":"  public void testGetFacetResultsTwice() throws Exception {\n    // LUCENE-4893: counts were multiplied as many times as getFacetResults was called.\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"1\"));\n    doc.add(new FacetField(\"b\", \"1\"));\n    iw.addDocument(config.build(taxoWriter, doc));\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    final FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n\n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    List<FacetResult> res1 = facets.getAllDims(10);\n    List<FacetResult> res2 = facets.getAllDims(10);\n    assertEquals(\"calling getFacetResults twice should return the .equals()=true result\", res1, res2);\n    \n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testGetFacetResultsTwice() throws Exception {\n    // LUCENE-4893: counts were multiplied as many times as getFacetResults was called.\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"1\"));\n    doc.add(new FacetField(\"b\", \"1\"));\n    iw.addDocument(config.build(doc));\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    final FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n\n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    List<FacetResult> res1 = facets.getAllDims(10);\n    List<FacetResult> res2 = facets.getAllDims(10);\n    assertEquals(\"calling getFacetResults twice should return the .equals()=true result\", res1, res2);\n    \n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testGetFacetResultsTwice().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testGetFacetResultsTwice().mjava","sourceNew":"  public void testGetFacetResultsTwice() throws Exception {\n    // LUCENE-4893: counts were multiplied as many times as getFacetResults was called.\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"1\"));\n    doc.add(new FacetField(\"b\", \"1\"));\n    iw.addDocument(config.build(taxoWriter, doc));\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    final FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n\n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    List<FacetResult> res1 = facets.getAllDims(10);\n    List<FacetResult> res2 = facets.getAllDims(10);\n    assertEquals(\"calling getFacetResults twice should return the .equals()=true result\", res1, res2);\n    \n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testGetFacetResultsTwice() throws Exception {\n    // LUCENE-4893: counts were multiplied as many times as getFacetResults was called.\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"1\"));\n    doc.add(new FacetField(\"b\", \"1\"));\n    iw.addDocument(config.build(taxoWriter, doc));\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    final FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n\n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    List<FacetResult> res1 = facets.getAllDims(10);\n    List<FacetResult> res2 = facets.getAllDims(10);\n    assertEquals(\"calling getFacetResults twice should return the .equals()=true result\", res1, res2);\n    \n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4edc984f0f4ac77c37e48ace2932f780f888453c":[],"21d36d0db865f7b84026b447bec653469a6e66df":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["4edc984f0f4ac77c37e48ace2932f780f888453c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4edc984f0f4ac77c37e48ace2932f780f888453c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}