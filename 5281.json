{"path":"src/java/org/apache/solr/response/XMLWriter#startTag(String,String,boolean).mjava","commits":[{"id":"ae7b8ff75c872b3cc70dd939c7368b1327a93ee1","date":1263263734,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/response/XMLWriter#startTag(String,String,boolean).mjava","pathOld":"src/java/org/apache/solr/request/XMLWriter#startTag(String,String,boolean).mjava","sourceNew":"  public void startTag(String tag, String name, boolean closeTag) throws IOException {\n    if (doIndent) indent();\n\n    writer.write('<');\n    writer.write(tag);\n    if (name!=null) {\n      writeAttr(\"name\", name);\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write(\">\");\n      }\n    } else {\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write('>');\n      }\n    }\n  }\n\n","sourceOld":"  public void startTag(String tag, String name, boolean closeTag) throws IOException {\n    if (doIndent) indent();\n\n    writer.write('<');\n    writer.write(tag);\n    if (name!=null) {\n      writeAttr(\"name\", name);\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write(\">\");\n      }\n    } else {\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write('>');\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/response/XMLWriter#startTag(String,String,boolean).mjava","pathOld":"src/java/org/apache/solr/response/XMLWriter#startTag(String,String,boolean).mjava","sourceNew":"  public void startTag(String tag, String name, boolean closeTag) throws IOException {\n    if (doIndent) indent();\n\n    writer.write('<');\n    writer.write(tag);\n    if (name!=null) {\n      writeAttr(\"name\", name);\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write(\">\");\n      }\n    } else {\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write('>');\n      }\n    }\n  }\n\n","sourceOld":"  public void startTag(String tag, String name, boolean closeTag) throws IOException {\n    if (doIndent) indent();\n\n    writer.write('<');\n    writer.write(tag);\n    if (name!=null) {\n      writeAttr(\"name\", name);\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write(\">\");\n      }\n    } else {\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write('>');\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ae7b8ff75c872b3cc70dd939c7368b1327a93ee1":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["ae7b8ff75c872b3cc70dd939c7368b1327a93ee1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ae7b8ff75c872b3cc70dd939c7368b1327a93ee1":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ae7b8ff75c872b3cc70dd939c7368b1327a93ee1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}