{"path":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#isEqual(char[],int).mjava","commits":[{"id":"05ff0cc6e864c7d71a48579f2acfca4f58943568","date":1242295762,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#isEqual(char[],int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * 判断charArray对应的字符串是否跟词典中charArray[0]对应的wordIndex的charArray相等,\n   * 也就是说charArray的位置查找结果是不是就是wordIndex\n   * \n   * @param charArray 输入的charArray词组，第一个数表示词典中的索引号\n   * @param itemIndex 位置编号\n   * @return 是否相等\n   */\n  public boolean isEqual(char[] charArray, int itemIndex) {\n    short hashIndex = getWordItemTableIndex(charArray[0]);\n    return Utility.compareArray(charArray, 1,\n        wordItem_charArrayTable[wordIndexTable[hashIndex]][itemIndex], 0) == 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be5ef2f970a6c1141562b06dd26ed04c3dc29d70","date":1246444343,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#isEqual(char[],int).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#isEqual(char[],int).mjava","sourceNew":"  /**\n   * Return true if the dictionary entry at itemIndex for table charArray[0] is charArray\n   * \n   * @param charArray input word\n   * @param itemIndex item index for table charArray[0]\n   * @return true if the entry exists\n   */\n  public boolean isEqual(char[] charArray, int itemIndex) {\n    short hashIndex = getWordItemTableIndex(charArray[0]);\n    return Utility.compareArray(charArray, 1,\n        wordItem_charArrayTable[wordIndexTable[hashIndex]][itemIndex], 0) == 0;\n  }\n\n","sourceOld":"  /**\n   * 判断charArray对应的字符串是否跟词典中charArray[0]对应的wordIndex的charArray相等,\n   * 也就是说charArray的位置查找结果是不是就是wordIndex\n   * \n   * @param charArray 输入的charArray词组，第一个数表示词典中的索引号\n   * @param itemIndex 位置编号\n   * @return 是否相等\n   */\n  public boolean isEqual(char[] charArray, int itemIndex) {\n    short hashIndex = getWordItemTableIndex(charArray[0]);\n    return Utility.compareArray(charArray, 1,\n        wordItem_charArrayTable[wordIndexTable[hashIndex]][itemIndex], 0) == 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#isEqual(char[],int).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#isEqual(char[],int).mjava","sourceNew":"  /**\n   * Return true if the dictionary entry at itemIndex for table charArray[0] is charArray\n   * \n   * @param charArray input word\n   * @param itemIndex item index for table charArray[0]\n   * @return true if the entry exists\n   */\n  public boolean isEqual(char[] charArray, int itemIndex) {\n    short hashIndex = getWordItemTableIndex(charArray[0]);\n    return Utility.compareArray(charArray, 1,\n        wordItem_charArrayTable[wordIndexTable[hashIndex]][itemIndex], 0) == 0;\n  }\n\n","sourceOld":"  /**\n   * Return true if the dictionary entry at itemIndex for table charArray[0] is charArray\n   * \n   * @param charArray input word\n   * @param itemIndex item index for table charArray[0]\n   * @return true if the entry exists\n   */\n  public boolean isEqual(char[] charArray, int itemIndex) {\n    short hashIndex = getWordItemTableIndex(charArray[0]);\n    return Utility.compareArray(charArray, 1,\n        wordItem_charArrayTable[wordIndexTable[hashIndex]][itemIndex], 0) == 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"be5ef2f970a6c1141562b06dd26ed04c3dc29d70":["05ff0cc6e864c7d71a48579f2acfca4f58943568"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["be5ef2f970a6c1141562b06dd26ed04c3dc29d70"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05ff0cc6e864c7d71a48579f2acfca4f58943568":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"be5ef2f970a6c1141562b06dd26ed04c3dc29d70":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05ff0cc6e864c7d71a48579f2acfca4f58943568"],"05ff0cc6e864c7d71a48579f2acfca4f58943568":["be5ef2f970a6c1141562b06dd26ed04c3dc29d70"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}