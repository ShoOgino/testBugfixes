{"path":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext,Type).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext,Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext,Type).mjava","sourceNew":"    FloatsReader(Directory dir, String id, int maxDoc, IOContext context, Type type)\n        throws IOException {\n      super(dir, id, CODEC_NAME, VERSION_CURRENT, maxDoc, context, type);\n      arrayTemplate = DocValuesArray.TEMPLATES.get(type);\n      assert size == 4 || size == 8;\n    }\n\n","sourceOld":"    FloatsReader(Directory dir, String id, int maxDoc, IOContext context, Type type)\n        throws IOException {\n      super(dir, id, CODEC_NAME, VERSION_CURRENT, maxDoc, context, type);\n      arrayTemplate = DocValuesArray.TEMPLATES.get(type);\n      assert size == 4 || size == 8;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ccad4bab070f323ce610caa0040346d4a87213dc","date":1327747432,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext,Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext,Type).mjava","sourceNew":"    FloatsReader(Directory dir, String id, int maxDoc, IOContext context, Type type)\n        throws IOException {\n      super(dir, id, CODEC_NAME, VERSION_CURRENT, maxDoc, context, type);\n      arrayTemplate = DocValuesArray.TEMPLATES.get(type);\n      assert size == 4 || size == 8: \"wrong size=\" + size + \" type=\" + type + \" id=\" + id;\n    }\n\n","sourceOld":"    FloatsReader(Directory dir, String id, int maxDoc, IOContext context, Type type)\n        throws IOException {\n      super(dir, id, CODEC_NAME, VERSION_CURRENT, maxDoc, context, type);\n      arrayTemplate = DocValuesArray.TEMPLATES.get(type);\n      assert size == 4 || size == 8;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31","date":1327836826,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext,Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext,Type).mjava","sourceNew":"    FloatsReader(Directory dir, String id, int maxDoc, IOContext context, Type type)\n        throws IOException {\n      super(dir, id, CODEC_NAME, VERSION_CURRENT, maxDoc, context, type);\n      arrayTemplate = DocValuesArray.TEMPLATES.get(type);\n      assert size == 4 || size == 8: \"wrong size=\" + size + \" type=\" + type + \" id=\" + id;\n    }\n\n","sourceOld":"    FloatsReader(Directory dir, String id, int maxDoc, IOContext context, Type type)\n        throws IOException {\n      super(dir, id, CODEC_NAME, VERSION_CURRENT, maxDoc, context, type);\n      arrayTemplate = DocValuesArray.TEMPLATES.get(type);\n      assert size == 4 || size == 8;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext,Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext,Type).mjava","sourceNew":"    FloatsReader(Directory dir, String id, int maxDoc, IOContext context, Type type)\n        throws IOException {\n      super(dir, id, CODEC_NAME, VERSION_CURRENT, maxDoc, context, type);\n      arrayTemplate = DocValuesArray.TEMPLATES.get(type);\n      assert size == 4 || size == 8: \"wrong size=\" + size + \" type=\" + type + \" id=\" + id;\n    }\n\n","sourceOld":"    FloatsReader(Directory dir, String id, int maxDoc, IOContext context, Type type)\n        throws IOException {\n      super(dir, id, CODEC_NAME, VERSION_CURRENT, maxDoc, context, type);\n      arrayTemplate = DocValuesArray.TEMPLATES.get(type);\n      assert size == 4 || size == 8;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext,Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext,Type).mjava","sourceNew":"    FloatsReader(Directory dir, String id, int maxDoc, IOContext context, Type type)\n        throws IOException {\n      super(dir, id, CODEC_NAME, VERSION_CURRENT, maxDoc, context, type);\n      arrayTemplate = DocValuesArray.TEMPLATES.get(type);\n      assert size == 4 || size == 8: \"wrong size=\" + size + \" type=\" + type + \" id=\" + id;\n    }\n\n","sourceOld":"    FloatsReader(Directory dir, String id, int maxDoc, IOContext context, Type type)\n        throws IOException {\n      super(dir, id, CODEC_NAME, VERSION_CURRENT, maxDoc, context, type);\n      arrayTemplate = DocValuesArray.TEMPLATES.get(type);\n      assert size == 4 || size == 8: \"wrong size=\" + size + \" type=\" + type + \" id=\" + id;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd92b8bcc88e969302510acf77bd6970da3994c4":["a0ae5e3ed1232483b7b8a014f175a5fe43595982","c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31":["a0ae5e3ed1232483b7b8a014f175a5fe43595982","ccad4bab070f323ce610caa0040346d4a87213dc"],"ccad4bab070f323ce610caa0040346d4a87213dc":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","fd92b8bcc88e969302510acf77bd6970da3994c4"],"ccad4bab070f323ce610caa0040346d4a87213dc":["c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["fd92b8bcc88e969302510acf77bd6970da3994c4","c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31","ccad4bab070f323ce610caa0040346d4a87213dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fd92b8bcc88e969302510acf77bd6970da3994c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}