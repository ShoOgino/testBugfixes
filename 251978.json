{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoExactCircleTest#testExactCircleBounds().mjava","commits":[{"id":"a7a6109173bbca417edffdfc7bf9f2e35fef63ab","date":1511856065,"type":1,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoExactCircleTest#testExactCircleBounds().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoCircleTest#testExactCircleBounds().mjava","sourceNew":"  @Test\n  public void testExactCircleBounds() {\n\n    GeoPoint center = new GeoPoint(PlanetModel.WGS84, 0, 0);\n    // Construct four cardinal points, and then we'll build the first two planes\n    final GeoPoint northPoint = PlanetModel.WGS84.surfacePointOnBearing(center, 1, 0.0);\n    final GeoPoint southPoint = PlanetModel.WGS84.surfacePointOnBearing(center, 1, Math.PI);\n    final GeoPoint eastPoint = PlanetModel.WGS84.surfacePointOnBearing(center, 1, Math.PI * 0.5);\n    final GeoPoint westPoint = PlanetModel.WGS84.surfacePointOnBearing(center, 1, Math.PI * 1.5);\n\n    GeoCircle circle = GeoCircleFactory.makeExactGeoCircle(PlanetModel.WGS84, 0, 0, 1, 1e-6);\n    LatLonBounds bounds = new LatLonBounds();\n    circle.getBounds(bounds);\n    assertEquals(northPoint.getLatitude(), bounds.getMaxLatitude(), 1e-2);\n    assertEquals(southPoint.getLatitude(), bounds.getMinLatitude(), 1e-2);\n    assertEquals(westPoint.getLongitude(), bounds.getLeftLongitude(), 1e-2);\n    assertEquals(eastPoint.getLongitude(), bounds.getRightLongitude(), 1e-2);\n  }\n\n","sourceOld":"  @Test\n  public void testExactCircleBounds() {\n\n    GeoPoint center = new GeoPoint(PlanetModel.WGS84, 0, 0);\n    // Construct four cardinal points, and then we'll build the first two planes\n    final GeoPoint northPoint = PlanetModel.WGS84.surfacePointOnBearing(center, 1, 0.0);\n    final GeoPoint southPoint = PlanetModel.WGS84.surfacePointOnBearing(center, 1, Math.PI);\n    final GeoPoint eastPoint = PlanetModel.WGS84.surfacePointOnBearing(center, 1, Math.PI * 0.5);\n    final GeoPoint westPoint = PlanetModel.WGS84.surfacePointOnBearing(center, 1, Math.PI * 1.5);\n\n    GeoCircle circle = GeoCircleFactory.makeExactGeoCircle(PlanetModel.WGS84, 0, 0, 1, 1e-6);\n    LatLonBounds bounds = new LatLonBounds();\n    circle.getBounds(bounds);\n    assertEquals(northPoint.getLatitude(), bounds.getMaxLatitude(), 1e-2);\n    assertEquals(southPoint.getLatitude(), bounds.getMinLatitude(), 1e-2);\n    assertEquals(westPoint.getLongitude(), bounds.getLeftLongitude(), 1e-2);\n    assertEquals(eastPoint.getLongitude(), bounds.getRightLongitude(), 1e-2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a7a6109173bbca417edffdfc7bf9f2e35fef63ab"],"a7a6109173bbca417edffdfc7bf9f2e35fef63ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a7a6109173bbca417edffdfc7bf9f2e35fef63ab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"a7a6109173bbca417edffdfc7bf9f2e35fef63ab":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}