{"path":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","commits":[{"id":"fd4c4b2a55a46d2c45e3de4514f08e33215caa21","date":1288902330,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testAddIndexesWithCloseNoWait().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(500);\n\n    // Close w/o first stopping/joining the threads\n    c.close(false);\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(500);\n\n    // Close w/o first stopping/joining the threads\n    c.close(false);\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testAddIndexesWithCloseNoWait().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(500);\n\n    // Close w/o first stopping/joining the threads\n    c.close(false);\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(500);\n\n    // Close w/o first stopping/joining the threads\n    c.close(false);\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a186ae8733084223c22044e935e4ef848a143d1","date":1289694819,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    if (VERBOSE) {\n      c.writer2.setInfoStream(System.out);\n    }\n    c.launchThreads(-1);\n\n    Thread.sleep(500);\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now close(false)\");\n    }\n    c.close(false);\n\n    c.joinThreads();\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: done join threads\");\n    }\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(500);\n\n    // Close w/o first stopping/joining the threads\n    c.close(false);\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c498d3f8d75170b121f5eda2c6210ac5beb5d411","date":1289726298,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    if (VERBOSE) {\n      c.writer2.setInfoStream(System.out);\n    }\n    c.launchThreads(-1);\n\n    Thread.sleep(500);\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now close(false)\");\n    }\n    c.close(false);\n\n    c.joinThreads();\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: done join threads\");\n    }\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(500);\n\n    // Close w/o first stopping/joining the threads\n    c.close(false);\n\n    c.joinThreads();\n\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8cac9bbcf5acbef2d0d83f6e9e32a22d71301db5","date":1290247889,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    if (VERBOSE) {\n      c.writer2.setInfoStream(System.out);\n    }\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now close(false)\");\n    }\n    c.close(false);\n\n    c.joinThreads();\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: done join threads\");\n    }\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    if (VERBOSE) {\n      c.writer2.setInfoStream(System.out);\n    }\n    c.launchThreads(-1);\n\n    Thread.sleep(500);\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now close(false)\");\n    }\n    c.close(false);\n\n    c.joinThreads();\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: done join threads\");\n    }\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    if (VERBOSE) {\n      c.writer2.setInfoStream(System.out);\n    }\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now close(false)\");\n    }\n    c.close(false);\n\n    c.joinThreads();\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: done join threads\");\n    }\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    if (VERBOSE) {\n      c.writer2.setInfoStream(System.out);\n    }\n    c.launchThreads(-1);\n\n    Thread.sleep(500);\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now close(false)\");\n    }\n    c.close(false);\n\n    c.joinThreads();\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: done join threads\");\n    }\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    if (VERBOSE) {\n      c.writer2.setInfoStream(System.out);\n    }\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now close(false)\");\n    }\n    c.close(false);\n\n    c.joinThreads();\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: done join threads\");\n    }\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff6fd241dc6610f7f81b62e3ba4cedf105939623","date":1307331653,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    if (VERBOSE) {\n      c.writer2.setInfoStream(System.out);\n    }\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now close(false)\");\n    }\n    c.close(false);\n\n    c.joinThreads();\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: done join threads\");\n    }\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    if (VERBOSE) {\n      c.writer2.setInfoStream(System.out);\n    }\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now close(false)\");\n    }\n    c.close(false);\n\n    c.joinThreads();\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: done join threads\");\n    }\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79c2cb24929f2649a8875fb629086171f914d5ce","date":1307332717,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    if (VERBOSE) {\n      c.writer2.setInfoStream(System.out);\n    }\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now close(false)\");\n    }\n    c.close(false);\n\n    c.joinThreads();\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: done join threads\");\n    }\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    if (VERBOSE) {\n      c.writer2.setInfoStream(System.out);\n    }\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now close(false)\");\n    }\n    c.close(false);\n\n    c.joinThreads();\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: done join threads\");\n    }\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    if (VERBOSE) {\n      c.writer2.setInfoStream(System.out);\n    }\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now close(false)\");\n    }\n    c.close(false);\n\n    c.joinThreads();\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: done join threads\");\n    }\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    if (VERBOSE) {\n      c.writer2.setInfoStream(System.out);\n    }\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now close(false)\");\n    }\n    c.close(false);\n\n    c.joinThreads();\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: done join threads\");\n    }\n    _TestUtil.checkIndex(c.dir2);\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now close(false)\");\n    }\n    c.close(false);\n\n    c.joinThreads();\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: done join threads\");\n    }\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    if (VERBOSE) {\n      c.writer2.setInfoStream(System.out);\n    }\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now close(false)\");\n    }\n    c.close(false);\n\n    c.joinThreads();\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: done join threads\");\n    }\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithCloseNoWait().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now close(false)\");\n    }\n    c.close(false);\n\n    c.joinThreads();\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: done join threads\");\n    }\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithCloseNoWait() throws Throwable {\n\n    final int NUM_COPY = 50;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now close(false)\");\n    }\n    c.close(false);\n\n    c.joinThreads();\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: done join threads\");\n    }\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["8cac9bbcf5acbef2d0d83f6e9e32a22d71301db5"],"2a186ae8733084223c22044e935e4ef848a143d1":["fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"c498d3f8d75170b121f5eda2c6210ac5beb5d411":["85a883878c0af761245ab048babc63d099f835f3","2a186ae8733084223c22044e935e4ef848a143d1"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["06584e6e98d592b34e1329b384182f368d2025e8"],"06584e6e98d592b34e1329b384182f368d2025e8":["ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"8cac9bbcf5acbef2d0d83f6e9e32a22d71301db5":["2a186ae8733084223c22044e935e4ef848a143d1"],"85a883878c0af761245ab048babc63d099f835f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8cac9bbcf5acbef2d0d83f6e9e32a22d71301db5"],"79c2cb24929f2649a8875fb629086171f914d5ce":["8cac9bbcf5acbef2d0d83f6e9e32a22d71301db5","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd4c4b2a55a46d2c45e3de4514f08e33215caa21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["3bb13258feba31ab676502787ab2e1779f129b7a","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"3bb13258feba31ab676502787ab2e1779f129b7a":["c498d3f8d75170b121f5eda2c6210ac5beb5d411","8cac9bbcf5acbef2d0d83f6e9e32a22d71301db5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["06584e6e98d592b34e1329b384182f368d2025e8","79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"2a186ae8733084223c22044e935e4ef848a143d1":["c498d3f8d75170b121f5eda2c6210ac5beb5d411","8cac9bbcf5acbef2d0d83f6e9e32a22d71301db5"],"c498d3f8d75170b121f5eda2c6210ac5beb5d411":["3bb13258feba31ab676502787ab2e1779f129b7a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06584e6e98d592b34e1329b384182f368d2025e8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8cac9bbcf5acbef2d0d83f6e9e32a22d71301db5":["ff6fd241dc6610f7f81b62e3ba4cedf105939623","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","79c2cb24929f2649a8875fb629086171f914d5ce","3bb13258feba31ab676502787ab2e1779f129b7a"],"85a883878c0af761245ab048babc63d099f835f3":["c498d3f8d75170b121f5eda2c6210ac5beb5d411"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"79c2cb24929f2649a8875fb629086171f914d5ce":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"fd4c4b2a55a46d2c45e3de4514f08e33215caa21":["2a186ae8733084223c22044e935e4ef848a143d1","85a883878c0af761245ab048babc63d099f835f3"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"3bb13258feba31ab676502787ab2e1779f129b7a":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}