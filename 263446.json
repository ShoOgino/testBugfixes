{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testAddTooManyPerPolicy().mjava","commits":[{"id":"bf944dd765bc5c354c5262f39a74f6def5dbcd53","date":1593045208,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testAddTooManyPerPolicy().mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  public void testAddTooManyPerPolicy() {\n    Map<String, Object> m = (Map<String, Object>) loadFromResource(\"testAddTooManyPerPolicy.json\");\n    SolrCloudManager cloudManagerFromDiagnostics = createCloudManagerFromDiagnostics(m);\n    AutoScalingConfig autoScalingConfig = new AutoScalingConfig((Map<String, Object>) getObjectByPath(m, false, \"diagnostics/config\"));\n    SolrException exp =  expectThrows(SolrException.class, () -> PolicyHelper.getReplicaLocations(\"TooManyPerPolicy\", autoScalingConfig, cloudManagerFromDiagnostics,\n            EMPTY_MAP, Collections.singletonList(\"shard1\"), 1, 0, 0, null));\n    assertTrue(exp.getMessage().contains(\"No node can satisfy the rules\"));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testAddTooManyPerPolicy().mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings({\"unchecked\"})\n  public void testAddTooManyPerPolicy() {\n    Map<String, Object> m = (Map<String, Object>) loadFromResource(\"testAddTooManyPerPolicy.json\");\n    SolrCloudManager cloudManagerFromDiagnostics = createCloudManagerFromDiagnostics(m);\n    AutoScalingConfig autoScalingConfig = new AutoScalingConfig((Map<String, Object>) getObjectByPath(m, false, \"diagnostics/config\"));\n    SolrException exp =  expectThrows(SolrException.class, () -> PolicyHelper.getReplicaLocations(\"TooManyPerPolicy\", autoScalingConfig, cloudManagerFromDiagnostics,\n            EMPTY_MAP, Collections.singletonList(\"shard1\"), 1, 0, 0, null));\n    assertTrue(exp.getMessage().contains(\"No node can satisfy the rules\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["bf944dd765bc5c354c5262f39a74f6def5dbcd53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bf944dd765bc5c354c5262f39a74f6def5dbcd53":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bf944dd765bc5c354c5262f39a74f6def5dbcd53"],"bf944dd765bc5c354c5262f39a74f6def5dbcd53":["3f504512a03d978990cbff30db0522b354e846db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}