{"path":"lucene/core/src/test/org/apache/lucene/search/TestCachingWrapperFilter#testDense().mjava","commits":[{"id":"49a8cbd66bc94e18d7b9087e42dbc6cc0ee0c161","date":1378462032,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestCachingWrapperFilter#testDense().mjava","pathOld":"/dev/null","sourceNew":"  /** test dense filters (match entire index) */\n  public void testDense() throws Exception {\n    Query query = new MatchAllDocsQuery();\n    Filter expected = new QueryWrapperFilter(query);\n    Filter actual = new CachingWrapperFilter(expected);\n    assertFilterEquals(expected, actual);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5eed7b3a60b52b9f1c32db9c49da397e06f88af","date":1417105424,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestCachingWrapperFilter#testDense().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestCachingWrapperFilter#testDense().mjava","sourceNew":"  /** test dense filters (match entire index) */\n  public void testDense() throws Exception {\n    Query query = new MatchAllDocsQuery();\n    Filter expected = new QueryWrapperFilter(query);\n    Filter actual = new CachingWrapperFilter(expected, FilterCachingPolicy.ALWAYS_CACHE);\n    assertFilterEquals(expected, actual);\n  }\n\n","sourceOld":"  /** test dense filters (match entire index) */\n  public void testDense() throws Exception {\n    Query query = new MatchAllDocsQuery();\n    Filter expected = new QueryWrapperFilter(query);\n    Filter actual = new CachingWrapperFilter(expected);\n    assertFilterEquals(expected, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60596f28be69b10c37a56a303c2dbea07b2ca4ba","date":1425060541,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestCachingWrapperQuery#testDense().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestCachingWrapperFilter#testDense().mjava","sourceNew":"  /** test dense filters (match entire index) */\n  public void testDense() throws Exception {\n    Query query = new MatchAllDocsQuery();\n    Filter expected = new QueryWrapperFilter(query);\n    Query cached = new CachingWrapperQuery(expected, MAYBE_CACHE_POLICY);\n    assertQueryEquals(expected, cached);\n  }\n\n","sourceOld":"  /** test dense filters (match entire index) */\n  public void testDense() throws Exception {\n    Query query = new MatchAllDocsQuery();\n    Filter expected = new QueryWrapperFilter(query);\n    Filter actual = new CachingWrapperFilter(expected, FilterCachingPolicy.ALWAYS_CACHE);\n    assertFilterEquals(expected, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestCachingWrapperFilter#testDense().mjava","sourceNew":null,"sourceOld":"  /** test dense filters (match entire index) */\n  public void testDense() throws Exception {\n    Query query = new MatchAllDocsQuery();\n    Filter expected = new QueryWrapperFilter(query);\n    Filter actual = new CachingWrapperFilter(expected, FilterCachingPolicy.ALWAYS_CACHE);\n    assertFilterEquals(expected, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["e5eed7b3a60b52b9f1c32db9c49da397e06f88af","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["e5eed7b3a60b52b9f1c32db9c49da397e06f88af"],"e5eed7b3a60b52b9f1c32db9c49da397e06f88af":["49a8cbd66bc94e18d7b9087e42dbc6cc0ee0c161"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"49a8cbd66bc94e18d7b9087e42dbc6cc0ee0c161":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60596f28be69b10c37a56a303c2dbea07b2ca4ba"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e5eed7b3a60b52b9f1c32db9c49da397e06f88af":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["49a8cbd66bc94e18d7b9087e42dbc6cc0ee0c161"],"49a8cbd66bc94e18d7b9087e42dbc6cc0ee0c161":["e5eed7b3a60b52b9f1c32db9c49da397e06f88af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}