{"path":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepSkipListWriter#resetSkip(IntIndexOutput.Index,IntIndexOutput.Index,IntIndexOutput.Index).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepSkipListWriter#resetSkip(IntIndexOutput.Index,IntIndexOutput.Index,IntIndexOutput.Index).mjava","pathOld":"/dev/null","sourceNew":"  // Called @ start of new term\n  protected void resetSkip(IntIndexOutput.Index topDocIndex, IntIndexOutput.Index topFreqIndex, IntIndexOutput.Index topPosIndex)\n    throws IOException {\n    super.resetSkip();\n\n    Arrays.fill(lastSkipDoc, 0);\n    Arrays.fill(lastSkipPayloadLength, -1);  // we don't have to write the first length in the skip list\n    for(int i=0;i<numberOfSkipLevels;i++) {\n      docIndex[i].set(topDocIndex);\n      if (freqOutput != null) {\n        freqIndex[i].set(topFreqIndex);\n      }\n      if (posOutput != null) {\n        posIndex[i].set(topPosIndex);\n      }\n    }\n    if (payloadOutput != null) {\n      Arrays.fill(lastSkipPayloadPointer, payloadOutput.getFilePointer());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepSkipListWriter#resetSkip(IntIndexOutput.Index,IntIndexOutput.Index,IntIndexOutput.Index).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepSkipListWriter#resetSkip(IntIndexOutput.Index,IntIndexOutput.Index,IntIndexOutput.Index).mjava","sourceNew":"  // Called @ start of new term\n  protected void resetSkip(IntIndexOutput.Index topDocIndex, IntIndexOutput.Index topFreqIndex, IntIndexOutput.Index topPosIndex)\n    throws IOException {\n    super.resetSkip();\n\n    Arrays.fill(lastSkipDoc, 0);\n    Arrays.fill(lastSkipPayloadLength, -1);  // we don't have to write the first length in the skip list\n    for(int i=0;i<numberOfSkipLevels;i++) {\n      docIndex[i].copyFrom(topDocIndex, true);\n      if (freqOutput != null) {\n        freqIndex[i].copyFrom(topFreqIndex, true);\n      }\n      if (posOutput != null) {\n        posIndex[i].copyFrom(topPosIndex, true);\n      }\n    }\n    if (payloadOutput != null) {\n      Arrays.fill(lastSkipPayloadPointer, payloadOutput.getFilePointer());\n    }\n  }\n\n","sourceOld":"  // Called @ start of new term\n  protected void resetSkip(IntIndexOutput.Index topDocIndex, IntIndexOutput.Index topFreqIndex, IntIndexOutput.Index topPosIndex)\n    throws IOException {\n    super.resetSkip();\n\n    Arrays.fill(lastSkipDoc, 0);\n    Arrays.fill(lastSkipPayloadLength, -1);  // we don't have to write the first length in the skip list\n    for(int i=0;i<numberOfSkipLevels;i++) {\n      docIndex[i].set(topDocIndex);\n      if (freqOutput != null) {\n        freqIndex[i].set(topFreqIndex);\n      }\n      if (posOutput != null) {\n        posIndex[i].set(topPosIndex);\n      }\n    }\n    if (payloadOutput != null) {\n      Arrays.fill(lastSkipPayloadPointer, payloadOutput.getFilePointer());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/sep/SepSkipListWriter#resetSkip(IntIndexOutput.Index,IntIndexOutput.Index,IntIndexOutput.Index).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepSkipListWriter#resetSkip(IntIndexOutput.Index,IntIndexOutput.Index,IntIndexOutput.Index).mjava","sourceNew":"  // Called @ start of new term\n  protected void resetSkip(IntIndexOutput.Index topDocIndex, IntIndexOutput.Index topFreqIndex, IntIndexOutput.Index topPosIndex)\n    throws IOException {\n    super.resetSkip();\n\n    Arrays.fill(lastSkipDoc, 0);\n    Arrays.fill(lastSkipPayloadLength, -1);  // we don't have to write the first length in the skip list\n    for(int i=0;i<numberOfSkipLevels;i++) {\n      docIndex[i].copyFrom(topDocIndex, true);\n      if (freqOutput != null) {\n        freqIndex[i].copyFrom(topFreqIndex, true);\n      }\n      if (posOutput != null) {\n        posIndex[i].copyFrom(topPosIndex, true);\n      }\n    }\n    if (payloadOutput != null) {\n      Arrays.fill(lastSkipPayloadPointer, payloadOutput.getFilePointer());\n    }\n  }\n\n","sourceOld":"  // Called @ start of new term\n  protected void resetSkip(IntIndexOutput.Index topDocIndex, IntIndexOutput.Index topFreqIndex, IntIndexOutput.Index topPosIndex)\n    throws IOException {\n    super.resetSkip();\n\n    Arrays.fill(lastSkipDoc, 0);\n    Arrays.fill(lastSkipPayloadLength, -1);  // we don't have to write the first length in the skip list\n    for(int i=0;i<numberOfSkipLevels;i++) {\n      docIndex[i].copyFrom(topDocIndex, true);\n      if (freqOutput != null) {\n        freqIndex[i].copyFrom(topFreqIndex, true);\n      }\n      if (posOutput != null) {\n        posIndex[i].copyFrom(topPosIndex, true);\n      }\n    }\n    if (payloadOutput != null) {\n      Arrays.fill(lastSkipPayloadPointer, payloadOutput.getFilePointer());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}