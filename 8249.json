{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,int,int,int,int).mjava","commits":[{"id":"61c45e99cf6676da48f19d7511c73712ad39402b","date":1495508331,"type":1,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,int,int,int,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,int,int).mjava","sourceNew":"    private Create(String collection, String config, int numShards, int numNrtReplicas, int numTlogReplicas, int numPullReplicas) { // TODO: maybe add other constructors\n      super(CollectionAction.CREATE, SolrIdentifierValidator.validateCollectionName(collection));\n      this.configName = config;\n      this.numShards = numShards;\n      this.nrtReplicas = numNrtReplicas;\n      this.pullReplicas = numPullReplicas;\n      this.tlogReplicas = numTlogReplicas;\n    }\n\n","sourceOld":"    private Create(String collection, String config, int numShards, int numReplicas) {\n      super(CollectionAction.CREATE, SolrIdentifierValidator.validateCollectionName(collection));\n      this.configName = config;\n      this.numShards = numShards;\n      this.replicationFactor = numReplicas;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac97ea104d893f16aab430d9904473bc1f233f3c","date":1496249396,"type":5,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,String,Integer,String,Integer,Integer,Integer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,int,int,int,int).mjava","sourceNew":"    private Create(String collection, String config, String routerName, Integer numShards, String shards, Integer numNrtReplicas, Integer  numTlogReplicas, Integer numPullReplicas) {\n      super(CollectionAction.CREATE, SolrIdentifierValidator.validateCollectionName(collection));\n      // NOTE: there's very little we can assert about the args because nothing but \"collection\" is required by the server\n      if ((null != shards) && (null != numShards)) {\n        throw new IllegalArgumentException(\"Can not specify both a numShards and a list of shards\");\n      }\n      this.configName = config;\n      this.routerName = routerName;\n      this.numShards = numShards;\n      this.setShards(shards);\n      this.nrtReplicas = numNrtReplicas;\n      this.tlogReplicas = numTlogReplicas;\n      this.pullReplicas = numPullReplicas;\n    }\n\n","sourceOld":"    private Create(String collection, String config, int numShards, int numNrtReplicas, int numTlogReplicas, int numPullReplicas) { // TODO: maybe add other constructors\n      super(CollectionAction.CREATE, SolrIdentifierValidator.validateCollectionName(collection));\n      this.configName = config;\n      this.numShards = numShards;\n      this.nrtReplicas = numNrtReplicas;\n      this.pullReplicas = numPullReplicas;\n      this.tlogReplicas = numTlogReplicas;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3217321f3e1d7922898c6c633d17acfa840d6875","date":1496257480,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,String,Integer,String,Integer,Integer,Integer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,int,int,int,int).mjava","sourceNew":"    private Create(String collection, String config, String routerName, Integer numShards, String shards, Integer numNrtReplicas, Integer  numTlogReplicas, Integer numPullReplicas) {\n      super(CollectionAction.CREATE, SolrIdentifierValidator.validateCollectionName(collection));\n      // NOTE: there's very little we can assert about the args because nothing but \"collection\" is required by the server\n      if ((null != shards) && (null != numShards)) {\n        throw new IllegalArgumentException(\"Can not specify both a numShards and a list of shards\");\n      }\n      this.configName = config;\n      this.routerName = routerName;\n      this.numShards = numShards;\n      this.setShards(shards);\n      this.nrtReplicas = numNrtReplicas;\n      this.tlogReplicas = numTlogReplicas;\n      this.pullReplicas = numPullReplicas;\n    }\n\n","sourceOld":"    private Create(String collection, String config, int numShards, int numNrtReplicas, int numTlogReplicas, int numPullReplicas) { // TODO: maybe add other constructors\n      super(CollectionAction.CREATE, SolrIdentifierValidator.validateCollectionName(collection));\n      this.configName = config;\n      this.numShards = numShards;\n      this.nrtReplicas = numNrtReplicas;\n      this.pullReplicas = numPullReplicas;\n      this.tlogReplicas = numTlogReplicas;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","date":1496281877,"type":5,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,String,Integer,String,Integer,Integer,Integer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,int,int,int,int).mjava","sourceNew":"    private Create(String collection, String config, String routerName, Integer numShards, String shards, Integer numNrtReplicas, Integer  numTlogReplicas, Integer numPullReplicas) {\n      super(CollectionAction.CREATE, SolrIdentifierValidator.validateCollectionName(collection));\n      // NOTE: there's very little we can assert about the args because nothing but \"collection\" is required by the server\n      if ((null != shards) && (null != numShards)) {\n        throw new IllegalArgumentException(\"Can not specify both a numShards and a list of shards\");\n      }\n      this.configName = config;\n      this.routerName = routerName;\n      this.numShards = numShards;\n      this.setShards(shards);\n      this.nrtReplicas = numNrtReplicas;\n      this.tlogReplicas = numTlogReplicas;\n      this.pullReplicas = numPullReplicas;\n    }\n\n","sourceOld":"    private Create(String collection, String config, int numShards, int numNrtReplicas, int numTlogReplicas, int numPullReplicas) { // TODO: maybe add other constructors\n      super(CollectionAction.CREATE, SolrIdentifierValidator.validateCollectionName(collection));\n      this.configName = config;\n      this.numShards = numShards;\n      this.nrtReplicas = numNrtReplicas;\n      this.pullReplicas = numPullReplicas;\n      this.tlogReplicas = numTlogReplicas;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"61c45e99cf6676da48f19d7511c73712ad39402b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ac97ea104d893f16aab430d9904473bc1f233f3c":["61c45e99cf6676da48f19d7511c73712ad39402b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3217321f3e1d7922898c6c633d17acfa840d6875":["61c45e99cf6676da48f19d7511c73712ad39402b","ac97ea104d893f16aab430d9904473bc1f233f3c"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["61c45e99cf6676da48f19d7511c73712ad39402b","3217321f3e1d7922898c6c633d17acfa840d6875"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3217321f3e1d7922898c6c633d17acfa840d6875"]},"commit2Childs":{"61c45e99cf6676da48f19d7511c73712ad39402b":["ac97ea104d893f16aab430d9904473bc1f233f3c","3217321f3e1d7922898c6c633d17acfa840d6875","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"ac97ea104d893f16aab430d9904473bc1f233f3c":["3217321f3e1d7922898c6c633d17acfa840d6875"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["61c45e99cf6676da48f19d7511c73712ad39402b"],"3217321f3e1d7922898c6c633d17acfa840d6875":["42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}