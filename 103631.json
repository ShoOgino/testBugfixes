{"path":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","pathOld":"solr/src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","sourceNew":"  @Test\n  public void testConfig()\n  {\n    SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","sourceOld":"  @Test\n  public void testConfig()\n  {\n    SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","pathOld":"solr/src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","sourceNew":"  @Test\n  public void testConfig()\n  {\n    SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","sourceOld":"  @Test\n  public void testConfig()\n  {\n    SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","pathOld":"solr/src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","sourceNew":"  @Test\n  public void testConfig()\n  {\n    SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","sourceOld":"  @Test\n  public void testConfig()\n  {\n    SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd905c4a79d42991e9ab7416d8acee9b43bd7511","date":1365248927,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","sourceNew":"  @Test\n  public void testConfig()\n  {\n    DefaultSolrHighlighter highlighter = (DefaultSolrHighlighter) HighlightComponent.getHighlighter(h.getCore());\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","sourceOld":"  @Test\n  public void testConfig()\n  {\n    SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","sourceNew":"  @Test\n  public void testConfig()\n  {\n    DefaultSolrHighlighter highlighter = (DefaultSolrHighlighter) HighlightComponent.getHighlighter(h.getCore());\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","sourceOld":"  @Test\n  public void testConfig()\n  {\n    DefaultSolrHighlighter highlighter = (DefaultSolrHighlighter) HighlightComponent.getHighlighter(h.getCore());\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","sourceNew":"  @Test\n  public void testConfig()\n  {\n    DefaultSolrHighlighter highlighter = (DefaultSolrHighlighter) HighlightComponent.getHighlighter(h.getCore());\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","sourceOld":"  @Test\n  public void testConfig()\n  {\n    DefaultSolrHighlighter highlighter = (DefaultSolrHighlighter) HighlightComponent.getHighlighter(h.getCore());\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"943562acd5eb31fa2fb7384927091158a85ce9fe","date":1428934087,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","sourceNew":"  @Test\n  public void testConfig()\n  {\n    DefaultSolrHighlighter highlighter = (DefaultSolrHighlighter) HighlightComponent.getHighlighter(h.getCore());\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue(gap instanceof GapFragmenter);\n    assertTrue(regex instanceof RegexFragmenter);\n  }\n\n","sourceOld":"  @Test\n  public void testConfig()\n  {\n    DefaultSolrHighlighter highlighter = (DefaultSolrHighlighter) HighlightComponent.getHighlighter(h.getCore());\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"943562acd5eb31fa2fb7384927091158a85ce9fe":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["dd905c4a79d42991e9ab7416d8acee9b43bd7511","19275ba31e621f6da1b83bf13af75233876fd3d4"],"dd905c4a79d42991e9ab7416d8acee9b43bd7511":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["dd905c4a79d42991e9ab7416d8acee9b43bd7511"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["943562acd5eb31fa2fb7384927091158a85ce9fe"]},"commit2Childs":{"943562acd5eb31fa2fb7384927091158a85ce9fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"dd905c4a79d42991e9ab7416d8acee9b43bd7511":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["dd905c4a79d42991e9ab7416d8acee9b43bd7511"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["943562acd5eb31fa2fb7384927091158a85ce9fe","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}