{"path":"src/java/org/apache/lucene/queryParser/QueryParserTokenManager#jjFillToken().mjava","commits":[{"id":"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef","date":1063245093,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParserTokenManager#jjFillToken().mjava","pathOld":"/dev/null","sourceNew":"protected Token jjFillToken()\n{\n   Token t = Token.newToken(jjmatchedKind);\n   t.kind = jjmatchedKind;\n   String im = jjstrLiteralImages[jjmatchedKind];\n   t.image = (im == null) ? input_stream.GetImage() : im;\n   t.beginLine = input_stream.getBeginLine();\n   t.beginColumn = input_stream.getBeginColumn();\n   t.endLine = input_stream.getEndLine();\n   t.endColumn = input_stream.getEndColumn();\n   return t;\n}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b33dc4652df2747e38f9782fde82bd426b77c538","date":1221599001,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParserTokenManager#jjFillToken().mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParserTokenManager#jjFillToken().mjava","sourceNew":"protected Token jjFillToken()\n{\n   final Token t;\n   final String curTokenImage;\n   final int beginLine;\n   final int endLine;\n   final int beginColumn;\n   final int endColumn;\n   String im = jjstrLiteralImages[jjmatchedKind];\n   curTokenImage = (im == null) ? input_stream.GetImage() : im;\n   beginLine = input_stream.getBeginLine();\n   beginColumn = input_stream.getBeginColumn();\n   endLine = input_stream.getEndLine();\n   endColumn = input_stream.getEndColumn();\n   t = Token.newToken(jjmatchedKind, curTokenImage);\n\n   t.beginLine = beginLine;\n   t.endLine = endLine;\n   t.beginColumn = beginColumn;\n   t.endColumn = endColumn;\n\n   return t;\n}\n\n","sourceOld":"protected Token jjFillToken()\n{\n   Token t = Token.newToken(jjmatchedKind);\n   t.kind = jjmatchedKind;\n   String im = jjstrLiteralImages[jjmatchedKind];\n   t.image = (im == null) ? input_stream.GetImage() : im;\n   t.beginLine = input_stream.getBeginLine();\n   t.beginColumn = input_stream.getBeginColumn();\n   t.endLine = input_stream.getEndLine();\n   t.endColumn = input_stream.getEndColumn();\n   return t;\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParserTokenManager#jjFillToken().mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParserTokenManager#jjFillToken().mjava","sourceNew":"protected Token jjFillToken()\n{\n   final Token t;\n   final String curTokenImage;\n   final int beginLine;\n   final int endLine;\n   final int beginColumn;\n   final int endColumn;\n   String im = jjstrLiteralImages[jjmatchedKind];\n   curTokenImage = (im == null) ? input_stream.GetImage() : im;\n   beginLine = input_stream.getBeginLine();\n   beginColumn = input_stream.getBeginColumn();\n   endLine = input_stream.getEndLine();\n   endColumn = input_stream.getEndColumn();\n   t = Token.newToken(jjmatchedKind, curTokenImage);\n\n   t.beginLine = beginLine;\n   t.endLine = endLine;\n   t.beginColumn = beginColumn;\n   t.endColumn = endColumn;\n\n   return t;\n}\n\n","sourceOld":"protected Token jjFillToken()\n{\n   final Token t;\n   final String curTokenImage;\n   final int beginLine;\n   final int endLine;\n   final int beginColumn;\n   final int endColumn;\n   String im = jjstrLiteralImages[jjmatchedKind];\n   curTokenImage = (im == null) ? input_stream.GetImage() : im;\n   beginLine = input_stream.getBeginLine();\n   beginColumn = input_stream.getBeginColumn();\n   endLine = input_stream.getEndLine();\n   endColumn = input_stream.getEndColumn();\n   t = Token.newToken(jjmatchedKind, curTokenImage);\n\n   t.beginLine = beginLine;\n   t.endLine = endLine;\n   t.beginColumn = beginColumn;\n   t.endColumn = endColumn;\n\n   return t;\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b33dc4652df2747e38f9782fde82bd426b77c538":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b33dc4652df2747e38f9782fde82bd426b77c538"]},"commit2Childs":{"b33dc4652df2747e38f9782fde82bd426b77c538":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["b33dc4652df2747e38f9782fde82bd426b77c538"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}