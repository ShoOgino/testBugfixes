{"path":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeTermSortedSetBytes().mjava","commits":[{"id":"81d695ea56e846db8af5ac4e15826d341ef894e1","date":1361067281,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeTermSortedSetBytes().mjava","pathOld":"/dev/null","sourceNew":"  public void testTooLargeTermSortedSetBytes() throws IOException {\n    assumeTrue(\"codec does not support SORTED_SET\", defaultCodecSupportsSortedSet());\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new SortedSetDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    iwriter.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ddbb72a33557d2b5bc22ee95daf3281c43560502","date":1361334582,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeTermSortedSetBytes().mjava","pathOld":"/dev/null","sourceNew":"  public void testTooLargeTermSortedSetBytes() throws IOException {\n    assumeTrue(\"codec does not support SORTED_SET\", defaultCodecSupportsSortedSet());\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new SortedSetDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    iwriter.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeTermSortedSetBytes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeTermSortedSetBytes().mjava","sourceNew":"  public void testTooLargeTermSortedSetBytes() throws IOException {\n    assumeTrue(\"codec does not support SORTED_SET\", defaultCodecSupportsSortedSet());\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new SortedSetDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    iwriter.shutdown();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTooLargeTermSortedSetBytes() throws IOException {\n    assumeTrue(\"codec does not support SORTED_SET\", defaultCodecSupportsSortedSet());\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new SortedSetDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    iwriter.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15b65fdb55ac25c30b38ad720f9cf68c69647a31","date":1398941528,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeTermSortedSetBytes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeTermSortedSetBytes().mjava","sourceNew":"  public void testTooLargeTermSortedSetBytes() throws IOException {\n    assumeTrue(\"codec does not support SORTED_SET\", defaultCodecSupportsSortedSet());\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"dv\", new BytesRef(\"just fine\")));\n    iwriter.addDocument(doc);\n    \n    doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new SortedSetDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    IndexReader ir = iwriter.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    iwriter.shutdown();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTooLargeTermSortedSetBytes() throws IOException {\n    assumeTrue(\"codec does not support SORTED_SET\", defaultCodecSupportsSortedSet());\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new SortedSetDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    iwriter.shutdown();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeTermSortedSetBytes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeTermSortedSetBytes().mjava","sourceNew":"  public void testTooLargeTermSortedSetBytes() throws IOException {\n    assumeTrue(\"codec does not support SORTED_SET\", defaultCodecSupportsSortedSet());\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"dv\", new BytesRef(\"just fine\")));\n    iwriter.addDocument(doc);\n    \n    doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new SortedSetDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    IndexReader ir = iwriter.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    iwriter.shutdown();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTooLargeTermSortedSetBytes() throws IOException {\n    assumeTrue(\"codec does not support SORTED_SET\", defaultCodecSupportsSortedSet());\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"dv\", new BytesRef(\"just fine\")));\n    iwriter.addDocument(doc);\n    \n    doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new SortedSetDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    IndexReader ir = iwriter.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    iwriter.shutdown();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeTermSortedSetBytes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeTermSortedSetBytes().mjava","sourceNew":"  public void testTooLargeTermSortedSetBytes() throws IOException {\n    assumeTrue(\"codec does not support SORTED_SET\", defaultCodecSupportsSortedSet());\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"dv\", new BytesRef(\"just fine\")));\n    iwriter.addDocument(doc);\n    \n    doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new SortedSetDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    IndexReader ir = iwriter.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    iwriter.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTooLargeTermSortedSetBytes() throws IOException {\n    assumeTrue(\"codec does not support SORTED_SET\", defaultCodecSupportsSortedSet());\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"dv\", new BytesRef(\"just fine\")));\n    iwriter.addDocument(doc);\n    \n    doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new SortedSetDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    IndexReader ir = iwriter.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    iwriter.shutdown();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad2a673349939e48652bf304cccf673c3412198f","date":1409585169,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeTermSortedSetBytes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeTermSortedSetBytes().mjava","sourceNew":"  public void testTooLargeTermSortedSetBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"dv\", new BytesRef(\"just fine\")));\n    iwriter.addDocument(doc);\n    \n    doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new SortedSetDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    IndexReader ir = iwriter.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    iwriter.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTooLargeTermSortedSetBytes() throws IOException {\n    assumeTrue(\"codec does not support SORTED_SET\", defaultCodecSupportsSortedSet());\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"dv\", new BytesRef(\"just fine\")));\n    iwriter.addDocument(doc);\n    \n    doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new SortedSetDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    IndexReader ir = iwriter.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    iwriter.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeTermSortedSetBytes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeTermSortedSetBytes().mjava","sourceNew":"  public void testTooLargeTermSortedSetBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"dv\", new BytesRef(\"just fine\")));\n    iwriter.addDocument(doc);\n    \n    doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new SortedSetDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    IndexReader ir = iwriter.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    iwriter.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTooLargeTermSortedSetBytes() throws IOException {\n    assumeTrue(\"codec does not support SORTED_SET\", defaultCodecSupportsSortedSet());\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"dv\", new BytesRef(\"just fine\")));\n    iwriter.addDocument(doc);\n    \n    doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new SortedSetDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    IndexReader ir = iwriter.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    iwriter.close();\n    directory.close();\n  }\n\n","bugFix":["81d695ea56e846db8af5ac4e15826d341ef894e1"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeTermSortedSetBytes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeTermSortedSetBytes().mjava","sourceNew":"  public void testTooLargeTermSortedSetBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"dv\", new BytesRef(\"just fine\")));\n    iwriter.addDocument(doc);\n    \n    Document hugeDoc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    hugeDoc.add(new SortedSetDocValuesField(\"dv\", b));\n    expectThrows(IllegalArgumentException.class, () -> {\n      iwriter.addDocument(hugeDoc);\n    });\n\n    IndexReader ir = iwriter.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    iwriter.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTooLargeTermSortedSetBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"dv\", new BytesRef(\"just fine\")));\n    iwriter.addDocument(doc);\n    \n    doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new SortedSetDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    IndexReader ir = iwriter.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    iwriter.close();\n    directory.close();\n  }\n\n","bugFix":["81d695ea56e846db8af5ac4e15826d341ef894e1","15b65fdb55ac25c30b38ad720f9cf68c69647a31"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"15b65fdb55ac25c30b38ad720f9cf68c69647a31":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"81d695ea56e846db8af5ac4e15826d341ef894e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["15b65fdb55ac25c30b38ad720f9cf68c69647a31"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"ad2a673349939e48652bf304cccf673c3412198f":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","81d695ea56e846db8af5ac4e15826d341ef894e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["d0ef034a4f10871667ae75181537775ddcf8ade4","ad2a673349939e48652bf304cccf673c3412198f"]},"commit2Childs":{"15b65fdb55ac25c30b38ad720f9cf68c69647a31":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"81d695ea56e846db8af5ac4e15826d341ef894e1":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["81d695ea56e846db8af5ac4e15826d341ef894e1","ddbb72a33557d2b5bc22ee95daf3281c43560502"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ad2a673349939e48652bf304cccf673c3412198f","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["15b65fdb55ac25c30b38ad720f9cf68c69647a31"],"ad2a673349939e48652bf304cccf673c3412198f":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["05fe562aa248790944d43cdd478f512572835ba0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}