{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#shutdown().mjava","commits":[{"id":"ab7c44f042551b225652a1a28543d31994f3a994","date":1339479909,"type":1,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#shutdown().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#close().mjava","sourceNew":"  @Override\n  public void shutdown() {\n    if (zkStateReader != null) {\n      synchronized(this) {\n        if (zkStateReader!= null)\n          zkStateReader.close();\n        zkStateReader = null;\n      }\n    }\n    if (myClient!=null) {\n      myClient.getConnectionManager().shutdown();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    if (zkStateReader != null) {\n      synchronized(this) {\n        if (zkStateReader!= null)\n          zkStateReader.close();\n        zkStateReader = null;\n      }\n    }\n    if (myClient!=null) {\n      myClient.getConnectionManager().shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1","date":1378862385,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#shutdown().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#shutdown().mjava","sourceNew":"  @Override\n  public void shutdown() {\n    if (zkStateReader != null) {\n      synchronized(this) {\n        if (zkStateReader!= null)\n          zkStateReader.close();\n        zkStateReader = null;\n      }\n    }\n    if (myClient!=null) {\n      myClient.getConnectionManager().shutdown();\n    }\n\n    if(this.threadPool != null && !this.threadPool.isShutdown()) {\n      this.threadPool.shutdown();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void shutdown() {\n    if (zkStateReader != null) {\n      synchronized(this) {\n        if (zkStateReader!= null)\n          zkStateReader.close();\n        zkStateReader = null;\n      }\n    }\n    if (myClient!=null) {\n      myClient.getConnectionManager().shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4fb788ea821fd2677915770f1cada8122fce2cce","date":1379008291,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#shutdown().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#shutdown().mjava","sourceNew":"  @Override\n  public void shutdown() {\n    if (zkStateReader != null) {\n      synchronized(this) {\n        if (zkStateReader!= null)\n          zkStateReader.close();\n        zkStateReader = null;\n      }\n    }\n    \n    if (shutdownLBHttpSolrServer) {\n      lbServer.shutdown();\n    }\n    \n    if (myClient!=null) {\n      myClient.getConnectionManager().shutdown();\n    }\n\n    if(this.threadPool != null && !this.threadPool.isShutdown()) {\n      this.threadPool.shutdown();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void shutdown() {\n    if (zkStateReader != null) {\n      synchronized(this) {\n        if (zkStateReader!= null)\n          zkStateReader.close();\n        zkStateReader = null;\n      }\n    }\n    if (myClient!=null) {\n      myClient.getConnectionManager().shutdown();\n    }\n\n    if(this.threadPool != null && !this.threadPool.isShutdown()) {\n      this.threadPool.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"791652abeeebb8642f54a7b42ca914c55805479a","date":1413382171,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#shutdown().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#shutdown().mjava","sourceNew":"  @Override\n  public void shutdown() {\n    if (zkStateReader != null) {\n      synchronized(this) {\n        if (zkStateReader!= null)\n          zkStateReader.close();\n        zkStateReader = null;\n      }\n    }\n    \n    if (shutdownLBHttpSolrServer) {\n      lbServer.shutdown();\n    }\n    \n    if (clientIsInternal && myClient!=null) {\n      myClient.getConnectionManager().shutdown();\n    }\n\n    if(this.threadPool != null && !this.threadPool.isShutdown()) {\n      this.threadPool.shutdown();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void shutdown() {\n    if (zkStateReader != null) {\n      synchronized(this) {\n        if (zkStateReader!= null)\n          zkStateReader.close();\n        zkStateReader = null;\n      }\n    }\n    \n    if (shutdownLBHttpSolrServer) {\n      lbServer.shutdown();\n    }\n    \n    if (myClient!=null) {\n      myClient.getConnectionManager().shutdown();\n    }\n\n    if(this.threadPool != null && !this.threadPool.isShutdown()) {\n      this.threadPool.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","date":1413458798,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#shutdown().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#shutdown().mjava","sourceNew":"  @Override\n  public void shutdown() {\n    if (zkStateReader != null) {\n      synchronized(this) {\n        if (zkStateReader!= null)\n          zkStateReader.close();\n        zkStateReader = null;\n      }\n    }\n    \n    if (shutdownLBHttpSolrServer) {\n      lbServer.shutdown();\n    }\n    \n    if (clientIsInternal && myClient!=null) {\n      myClient.getConnectionManager().shutdown();\n    }\n\n    if(this.threadPool != null && !this.threadPool.isShutdown()) {\n      this.threadPool.shutdown();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void shutdown() {\n    if (zkStateReader != null) {\n      synchronized(this) {\n        if (zkStateReader!= null)\n          zkStateReader.close();\n        zkStateReader = null;\n      }\n    }\n    \n    if (shutdownLBHttpSolrServer) {\n      lbServer.shutdown();\n    }\n    \n    if (myClient!=null) {\n      myClient.getConnectionManager().shutdown();\n    }\n\n    if(this.threadPool != null && !this.threadPool.isShutdown()) {\n      this.threadPool.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient#shutdown().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#shutdown().mjava","sourceNew":"  @Override\n  public void shutdown() {\n    if (zkStateReader != null) {\n      synchronized(this) {\n        if (zkStateReader!= null)\n          zkStateReader.close();\n        zkStateReader = null;\n      }\n    }\n    \n    if (shutdownLBHttpSolrServer) {\n      lbClient.shutdown();\n    }\n    \n    if (clientIsInternal && myClient!=null) {\n      myClient.getConnectionManager().shutdown();\n    }\n\n    if(this.threadPool != null && !this.threadPool.isShutdown()) {\n      this.threadPool.shutdown();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void shutdown() {\n    if (zkStateReader != null) {\n      synchronized(this) {\n        if (zkStateReader!= null)\n          zkStateReader.close();\n        zkStateReader = null;\n      }\n    }\n    \n    if (shutdownLBHttpSolrServer) {\n      lbServer.shutdown();\n    }\n    \n    if (clientIsInternal && myClient!=null) {\n      myClient.getConnectionManager().shutdown();\n    }\n\n    if(this.threadPool != null && !this.threadPool.isShutdown()) {\n      this.threadPool.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84":["4fb788ea821fd2677915770f1cada8122fce2cce","791652abeeebb8642f54a7b42ca914c55805479a"],"4fb788ea821fd2677915770f1cada8122fce2cce":["d5fc588fc7c6e55c0d778665292d023bf8d5f3b1"],"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1":["ab7c44f042551b225652a1a28543d31994f3a994"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["791652abeeebb8642f54a7b42ca914c55805479a"],"ab7c44f042551b225652a1a28543d31994f3a994":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"791652abeeebb8642f54a7b42ca914c55805479a":["4fb788ea821fd2677915770f1cada8122fce2cce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84":[],"4fb788ea821fd2677915770f1cada8122fce2cce":["c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","791652abeeebb8642f54a7b42ca914c55805479a"],"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1":["4fb788ea821fd2677915770f1cada8122fce2cce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ab7c44f042551b225652a1a28543d31994f3a994"],"ab7c44f042551b225652a1a28543d31994f3a994":["d5fc588fc7c6e55c0d778665292d023bf8d5f3b1"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"791652abeeebb8642f54a7b42ca914c55805479a":["c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}