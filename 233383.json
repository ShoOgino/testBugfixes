{"path":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","commits":[{"id":"9882ec7961965d6ac6203049795d94c122015950","date":1355244469,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","pathOld":"/dev/null","sourceNew":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter(\"body\");\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8bb94551de83b33535d086e8d4222fa6d0c4cfc0","date":1357181547,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","sourceNew":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter(\"body\");\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dd906cf99495baaa13945b26300a973c89ce3222","date":1357185632,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","sourceNew":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", positionsType);\n    Field title = new StringField(\"title\", \"\", Field.Store.YES);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    \n    try {\n      highlighter.highlight(\"title\", new TermQuery(new Term(\"title\", \"test\")), searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4b3d16cba9355e2e97962eb1c441bbd0b6735c15","date":1357426290,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","sourceNew":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", positionsType);\n    Field title = new StringField(\"title\", \"\", Field.Store.YES);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    \n    try {\n      highlighter.highlight(\"title\", new TermQuery(new Term(\"title\", \"test\")), searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", positionsType);\n    Field title = new StringField(\"title\", \"\", Field.Store.YES);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    \n    try {\n      highlighter.highlight(\"title\", new TermQuery(new Term(\"title\", \"test\")), searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["dd906cf99495baaa13945b26300a973c89ce3222"],"9882ec7961965d6ac6203049795d94c122015950":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8bb94551de83b33535d086e8d4222fa6d0c4cfc0":["9882ec7961965d6ac6203049795d94c122015950"],"dd906cf99495baaa13945b26300a973c89ce3222":["8bb94551de83b33535d086e8d4222fa6d0c4cfc0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4b3d16cba9355e2e97962eb1c441bbd0b6735c15"]},"commit2Childs":{"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9882ec7961965d6ac6203049795d94c122015950":["8bb94551de83b33535d086e8d4222fa6d0c4cfc0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9882ec7961965d6ac6203049795d94c122015950"],"8bb94551de83b33535d086e8d4222fa6d0c4cfc0":["dd906cf99495baaa13945b26300a973c89ce3222"],"dd906cf99495baaa13945b26300a973c89ce3222":["4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}