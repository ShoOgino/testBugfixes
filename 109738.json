{"path":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,String).mjava","commits":[{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,String).mjava","pathOld":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,String,Version).mjava","sourceNew":"  /**\n   * Creates a filter with a given dictionary resource.\n   *\n   * @param in input token stream.\n   * @param dict Dictionary resource from classpath.\n   */\n  public MorfologikFilter(final TokenStream in, final String dict) {\n    super(in);\n    this.input = in;\n\n    // SOLR-4007: temporarily substitute context class loader to allow finding dictionary resources.\n    Thread me = Thread.currentThread();\n    ClassLoader cl = me.getContextClassLoader();\n    try {\n      me.setContextClassLoader(morfologik.stemming.Dictionary.class.getClassLoader());\n      this.stemmer = new DictionaryLookup(morfologik.stemming.Dictionary.getForLanguage(dict));\n      this.lemmaList = Collections.emptyList();\n    } finally {\n      me.setContextClassLoader(cl);\n    }  \n  }\n\n","sourceOld":"  /**\n   * Creates a filter with a given dictionary resource.\n   *\n   * @param in input token stream.\n   * @param dict Dictionary resource from classpath.\n   * @param version Lucene version compatibility for lowercasing.\n   */\n  public MorfologikFilter(final TokenStream in, final String dict, final Version version) {\n    super(in);\n    this.input = in;\n\n    // SOLR-4007: temporarily substitute context class loader to allow finding dictionary resources.\n    Thread me = Thread.currentThread();\n    ClassLoader cl = me.getContextClassLoader();\n    try {\n      me.setContextClassLoader(morfologik.stemming.Dictionary.class.getClassLoader());\n      this.stemmer = new DictionaryLookup(morfologik.stemming.Dictionary.getForLanguage(dict));\n      this.charUtils = CharacterUtils.getInstance(version);\n      this.lemmaList = Collections.emptyList();\n    } finally {\n      me.setContextClassLoader(cl);\n    }  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,String,Version).mjava","pathOld":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,String).mjava","sourceNew":"  /**\n   * Creates a filter with a given dictionary resource.\n   *\n   * @param in input token stream.\n   * @param dict Dictionary resource from classpath.\n   * @param version Lucene version compatibility for lowercasing.\n   */\n  public MorfologikFilter(final TokenStream in, final String dict, final Version version) {\n    super(in);\n    this.input = in;\n\n    // SOLR-4007: temporarily substitute context class loader to allow finding dictionary resources.\n    Thread me = Thread.currentThread();\n    ClassLoader cl = me.getContextClassLoader();\n    try {\n      me.setContextClassLoader(morfologik.stemming.Dictionary.class.getClassLoader());\n      this.stemmer = new DictionaryLookup(morfologik.stemming.Dictionary.getForLanguage(dict));\n      this.charUtils = CharacterUtils.getInstance(version);\n      this.lemmaList = Collections.emptyList();\n    } finally {\n      me.setContextClassLoader(cl);\n    }  \n  }\n\n","sourceOld":"  /**\n   * Creates a filter with a given dictionary resource.\n   *\n   * @param in input token stream.\n   * @param dict Dictionary resource from classpath.\n   */\n  public MorfologikFilter(final TokenStream in, final String dict) {\n    super(in);\n    this.input = in;\n\n    // SOLR-4007: temporarily substitute context class loader to allow finding dictionary resources.\n    Thread me = Thread.currentThread();\n    ClassLoader cl = me.getContextClassLoader();\n    try {\n      me.setContextClassLoader(morfologik.stemming.Dictionary.class.getClassLoader());\n      this.stemmer = new DictionaryLookup(morfologik.stemming.Dictionary.getForLanguage(dict));\n      this.lemmaList = Collections.emptyList();\n    } finally {\n      me.setContextClassLoader(cl);\n    }  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":1,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,String).mjava","pathOld":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,String,Version).mjava","sourceNew":"  /**\n   * Creates a filter with a given dictionary resource.\n   *\n   * @param in input token stream.\n   * @param dict Dictionary resource from classpath.\n   */\n  public MorfologikFilter(final TokenStream in, final String dict) {\n    super(in);\n    this.input = in;\n\n    // SOLR-4007: temporarily substitute context class loader to allow finding dictionary resources.\n    Thread me = Thread.currentThread();\n    ClassLoader cl = me.getContextClassLoader();\n    try {\n      me.setContextClassLoader(morfologik.stemming.Dictionary.class.getClassLoader());\n      this.stemmer = new DictionaryLookup(morfologik.stemming.Dictionary.getForLanguage(dict));\n      this.lemmaList = Collections.emptyList();\n    } finally {\n      me.setContextClassLoader(cl);\n    }  \n  }\n\n","sourceOld":"  /**\n   * Creates a filter with a given dictionary resource.\n   *\n   * @param in input token stream.\n   * @param dict Dictionary resource from classpath.\n   * @param version Lucene version compatibility for lowercasing.\n   */\n  public MorfologikFilter(final TokenStream in, final String dict, final Version version) {\n    super(in);\n    this.input = in;\n\n    // SOLR-4007: temporarily substitute context class loader to allow finding dictionary resources.\n    Thread me = Thread.currentThread();\n    ClassLoader cl = me.getContextClassLoader();\n    try {\n      me.setContextClassLoader(morfologik.stemming.Dictionary.class.getClassLoader());\n      this.stemmer = new DictionaryLookup(morfologik.stemming.Dictionary.getForLanguage(dict));\n      this.charUtils = CharacterUtils.getInstance(version);\n      this.lemmaList = Collections.emptyList();\n    } finally {\n      me.setContextClassLoader(cl);\n    }  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be02602f4203e9265241c49aeffae7886bb60b47","date":1441206053,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,String).mjava","pathOld":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,String).mjava","sourceNew":"  /**\n   * Creates a filter with a given dictionary resource.\n   *\n   * @param in input token stream.\n   * @param dict Dictionary resource from classpath.\n   */\n  public MorfologikFilter(final TokenStream in, final String dict) {\n    super(in);\n    this.input = in;\n    this.stemmer = new DictionaryLookup(morfologik.stemming.Dictionary.getForLanguage(dict));\n    this.lemmaList = Collections.emptyList();\n  }\n\n","sourceOld":"  /**\n   * Creates a filter with a given dictionary resource.\n   *\n   * @param in input token stream.\n   * @param dict Dictionary resource from classpath.\n   */\n  public MorfologikFilter(final TokenStream in, final String dict) {\n    super(in);\n    this.input = in;\n\n    // SOLR-4007: temporarily substitute context class loader to allow finding dictionary resources.\n    Thread me = Thread.currentThread();\n    ClassLoader cl = me.getContextClassLoader();\n    try {\n      me.setContextClassLoader(morfologik.stemming.Dictionary.class.getClassLoader());\n      this.stemmer = new DictionaryLookup(morfologik.stemming.Dictionary.getForLanguage(dict));\n      this.lemmaList = Collections.emptyList();\n    } finally {\n      me.setContextClassLoader(cl);\n    }  \n  }\n\n","bugFix":null,"bugIntro":["b8322efc01a53e6f06cd7d11b9823c491c0aaf84"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b8322efc01a53e6f06cd7d11b9823c491c0aaf84","date":1441227220,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,String).mjava","pathOld":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,String).mjava","sourceNew":"  /**\n   * Creates a filter with a given dictionary resource.\n   *\n   * @param in input token stream.\n   * @param dictResource Dictionary resource name in classpath.\n   */\n  public MorfologikFilter(final TokenStream in, final String dictResource) {\n    this(in, MorfologikFilterFactory.DEFAULT_DICTIONARY_RESOURCE.equals(dictResource) ?\n        DictionaryHolder.DEFAULT_DICT : loadDictionaryResource(dictResource));\n  }\n\n","sourceOld":"  /**\n   * Creates a filter with a given dictionary resource.\n   *\n   * @param in input token stream.\n   * @param dict Dictionary resource from classpath.\n   */\n  public MorfologikFilter(final TokenStream in, final String dict) {\n    super(in);\n    this.input = in;\n    this.stemmer = new DictionaryLookup(morfologik.stemming.Dictionary.getForLanguage(dict));\n    this.lemmaList = Collections.emptyList();\n  }\n\n","bugFix":["379db3ad24c4f0214f30a122265a6d6be003a99d","be02602f4203e9265241c49aeffae7886bb60b47"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"764c03efd7b564bc3dcdfe6a13f26035c8971596","date":1444295847,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a filter with a given dictionary resource.\n   *\n   * @param in input token stream.\n   * @param dictResource Dictionary resource name in classpath.\n   */\n  public MorfologikFilter(final TokenStream in, final String dictResource) {\n    this(in, MorfologikFilterFactory.DEFAULT_DICTIONARY_RESOURCE.equals(dictResource) ?\n        DictionaryHolder.DEFAULT_DICT : loadDictionaryResource(dictResource));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"764c03efd7b564bc3dcdfe6a13f26035c8971596":["b8322efc01a53e6f06cd7d11b9823c491c0aaf84"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be02602f4203e9265241c49aeffae7886bb60b47":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"b8322efc01a53e6f06cd7d11b9823c491c0aaf84":["be02602f4203e9265241c49aeffae7886bb60b47"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["764c03efd7b564bc3dcdfe6a13f26035c8971596"]},"commit2Childs":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"764c03efd7b564bc3dcdfe6a13f26035c8971596":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["be02602f4203e9265241c49aeffae7886bb60b47"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"be02602f4203e9265241c49aeffae7886bb60b47":["b8322efc01a53e6f06cd7d11b9823c491c0aaf84"],"b8322efc01a53e6f06cd7d11b9823c491c0aaf84":["764c03efd7b564bc3dcdfe6a13f26035c8971596"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}