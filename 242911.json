{"path":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery#testCustomExternalQuery().mjava","commits":[{"id":"f5d8d97303550346f85fd577f90d64cf196cebd1","date":1262890343,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery#testCustomExternalQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testCustomExternalQuery() throws Exception {\n    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, TEXT_FIELD,anlzr); \n    String qtxt = \"first aid text\"; // from the doc texts in FunctionQuerySetup.\n    Query q1 = qp.parse(qtxt); \n    \n    final Query q = new CustomExternalQuery(q1);\n    log(q);\n\n    IndexSearcher s = new IndexSearcher(dir);\n    TopDocs hits = s.search(q, 1000);\n    assertEquals(N_DOCS, hits.totalHits);\n    for(int i=0;i<N_DOCS;i++) {\n      final int doc = hits.scoreDocs[i].doc;\n      final float score = hits.scoreDocs[i].score;\n      assertEquals(\"doc=\" + doc, (float) 1+(4*doc) % N_DOCS, score, 0.0001);\n    }\n    s.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery#testCustomExternalQuery().mjava","pathOld":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery#testCustomExternalQuery().mjava","sourceNew":"  public void testCustomExternalQuery() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, TEXT_FIELD,anlzr); \n    String qtxt = \"first aid text\"; // from the doc texts in FunctionQuerySetup.\n    Query q1 = qp.parse(qtxt); \n    \n    final Query q = new CustomExternalQuery(q1);\n    log(q);\n\n    IndexSearcher s = new IndexSearcher(dir);\n    TopDocs hits = s.search(q, 1000);\n    assertEquals(N_DOCS, hits.totalHits);\n    for(int i=0;i<N_DOCS;i++) {\n      final int doc = hits.scoreDocs[i].doc;\n      final float score = hits.scoreDocs[i].score;\n      assertEquals(\"doc=\" + doc, (float) 1+(4*doc) % N_DOCS, score, 0.0001);\n    }\n    s.close();\n  }\n\n","sourceOld":"  public void testCustomExternalQuery() throws Exception {\n    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, TEXT_FIELD,anlzr); \n    String qtxt = \"first aid text\"; // from the doc texts in FunctionQuerySetup.\n    Query q1 = qp.parse(qtxt); \n    \n    final Query q = new CustomExternalQuery(q1);\n    log(q);\n\n    IndexSearcher s = new IndexSearcher(dir);\n    TopDocs hits = s.search(q, 1000);\n    assertEquals(N_DOCS, hits.totalHits);\n    for(int i=0;i<N_DOCS;i++) {\n      final int doc = hits.scoreDocs[i].doc;\n      final float score = hits.scoreDocs[i].score;\n      assertEquals(\"doc=\" + doc, (float) 1+(4*doc) % N_DOCS, score, 0.0001);\n    }\n    s.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"670ff998bdf1eabbee220939bf16cd6595ba15c7","date":1266827225,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery#testCustomExternalQuery().mjava","pathOld":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery#testCustomExternalQuery().mjava","sourceNew":"  @Test\n  public void testCustomExternalQuery() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, TEXT_FIELD,anlzr); \n    String qtxt = \"first aid text\"; // from the doc texts in FunctionQuerySetup.\n    Query q1 = qp.parse(qtxt); \n    \n    final Query q = new CustomExternalQuery(q1);\n    log(q);\n\n    IndexSearcher s = new IndexSearcher(dir);\n    TopDocs hits = s.search(q, 1000);\n    assertEquals(N_DOCS, hits.totalHits);\n    for(int i=0;i<N_DOCS;i++) {\n      final int doc = hits.scoreDocs[i].doc;\n      final float score = hits.scoreDocs[i].score;\n      assertEquals(\"doc=\" + doc, (float) 1+(4*doc) % N_DOCS, score, 0.0001);\n    }\n    s.close();\n  }\n\n","sourceOld":"  public void testCustomExternalQuery() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, TEXT_FIELD,anlzr); \n    String qtxt = \"first aid text\"; // from the doc texts in FunctionQuerySetup.\n    Query q1 = qp.parse(qtxt); \n    \n    final Query q = new CustomExternalQuery(q1);\n    log(q);\n\n    IndexSearcher s = new IndexSearcher(dir);\n    TopDocs hits = s.search(q, 1000);\n    assertEquals(N_DOCS, hits.totalHits);\n    for(int i=0;i<N_DOCS;i++) {\n      final int doc = hits.scoreDocs[i].doc;\n      final float score = hits.scoreDocs[i].score;\n      assertEquals(\"doc=\" + doc, (float) 1+(4*doc) % N_DOCS, score, 0.0001);\n    }\n    s.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/function/TestCustomScoreQuery#testCustomExternalQuery().mjava","pathOld":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery#testCustomExternalQuery().mjava","sourceNew":"  @Test\n  public void testCustomExternalQuery() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, TEXT_FIELD,anlzr); \n    String qtxt = \"first aid text\"; // from the doc texts in FunctionQuerySetup.\n    Query q1 = qp.parse(qtxt); \n    \n    final Query q = new CustomExternalQuery(q1);\n    log(q);\n\n    IndexSearcher s = new IndexSearcher(dir);\n    TopDocs hits = s.search(q, 1000);\n    assertEquals(N_DOCS, hits.totalHits);\n    for(int i=0;i<N_DOCS;i++) {\n      final int doc = hits.scoreDocs[i].doc;\n      final float score = hits.scoreDocs[i].score;\n      assertEquals(\"doc=\" + doc, (float) 1+(4*doc) % N_DOCS, score, 0.0001);\n    }\n    s.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCustomExternalQuery() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, TEXT_FIELD,anlzr); \n    String qtxt = \"first aid text\"; // from the doc texts in FunctionQuerySetup.\n    Query q1 = qp.parse(qtxt); \n    \n    final Query q = new CustomExternalQuery(q1);\n    log(q);\n\n    IndexSearcher s = new IndexSearcher(dir);\n    TopDocs hits = s.search(q, 1000);\n    assertEquals(N_DOCS, hits.totalHits);\n    for(int i=0;i<N_DOCS;i++) {\n      final int doc = hits.scoreDocs[i].doc;\n      final float score = hits.scoreDocs[i].score;\n      assertEquals(\"doc=\" + doc, (float) 1+(4*doc) % N_DOCS, score, 0.0001);\n    }\n    s.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"670ff998bdf1eabbee220939bf16cd6595ba15c7":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["f5d8d97303550346f85fd577f90d64cf196cebd1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f5d8d97303550346f85fd577f90d64cf196cebd1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["670ff998bdf1eabbee220939bf16cd6595ba15c7"]},"commit2Childs":{"670ff998bdf1eabbee220939bf16cd6595ba15c7":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["670ff998bdf1eabbee220939bf16cd6595ba15c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f5d8d97303550346f85fd577f90d64cf196cebd1"],"f5d8d97303550346f85fd577f90d64cf196cebd1":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}