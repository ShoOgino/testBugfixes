{"path":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.PendingBlock#append(Builder[Pair[BytesRef,Long]],FST[Pair[BytesRef,Long]],IntsRef).mjava","commits":[{"id":"f838187609fee3a1afa5f162f93c796046242c84","date":1406216791,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.PendingBlock#append(Builder[Pair[BytesRef,Long]],FST[Pair[BytesRef,Long]],IntsRef).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.PendingBlock#append(Builder[Pair[BytesRef,Long]],FST[Pair[BytesRef,Long]]).mjava","sourceNew":"    // TODO: maybe we could add bulk-add method to\n    // Builder?  Takes FST and unions it w/ current\n    // FST.\n    private void append(Builder<Pair<BytesRef,Long>> builder, FST<Pair<BytesRef,Long>> subIndex, IntsRef scratchIntsRef) throws IOException {\n      final BytesRefFSTEnum<Pair<BytesRef,Long>> subIndexEnum = new BytesRefFSTEnum<>(subIndex);\n      BytesRefFSTEnum.InputOutput<Pair<BytesRef,Long>> indexEnt;\n      while((indexEnt = subIndexEnum.next()) != null) {\n        //if (DEBUG) {\n        //  System.out.println(\"      add sub=\" + indexEnt.input + \" \" + indexEnt.input + \" output=\" + indexEnt.output);\n        //}\n        builder.add(Util.toIntsRef(indexEnt.input, scratchIntsRef), indexEnt.output);\n      }\n    }\n\n","sourceOld":"    // TODO: maybe we could add bulk-add method to\n    // Builder?  Takes FST and unions it w/ current\n    // FST.\n    private void append(Builder<Pair<BytesRef,Long>> builder, FST<Pair<BytesRef,Long>> subIndex) throws IOException {\n      final BytesRefFSTEnum<Pair<BytesRef,Long>> subIndexEnum = new BytesRefFSTEnum<>(subIndex);\n      BytesRefFSTEnum.InputOutput<Pair<BytesRef,Long>> indexEnt;\n      while((indexEnt = subIndexEnum.next()) != null) {\n        //if (DEBUG) {\n        //  System.out.println(\"      add sub=\" + indexEnt.input + \" \" + indexEnt.input + \" output=\" + indexEnt.output);\n        //}\n        builder.add(Util.toIntsRef(indexEnt.input, scratchIntsRef), indexEnt.output);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.PendingBlock#append(Builder[Pair[BytesRef,Long]],FST[Pair[BytesRef,Long]],IntsRefBuilder).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.PendingBlock#append(Builder[Pair[BytesRef,Long]],FST[Pair[BytesRef,Long]],IntsRef).mjava","sourceNew":"    // TODO: maybe we could add bulk-add method to\n    // Builder?  Takes FST and unions it w/ current\n    // FST.\n    private void append(Builder<Pair<BytesRef,Long>> builder, FST<Pair<BytesRef,Long>> subIndex, IntsRefBuilder scratchIntsRef) throws IOException {\n      final BytesRefFSTEnum<Pair<BytesRef,Long>> subIndexEnum = new BytesRefFSTEnum<>(subIndex);\n      BytesRefFSTEnum.InputOutput<Pair<BytesRef,Long>> indexEnt;\n      while((indexEnt = subIndexEnum.next()) != null) {\n        //if (DEBUG) {\n        //  System.out.println(\"      add sub=\" + indexEnt.input + \" \" + indexEnt.input + \" output=\" + indexEnt.output);\n        //}\n        builder.add(Util.toIntsRef(indexEnt.input, scratchIntsRef), indexEnt.output);\n      }\n    }\n\n","sourceOld":"    // TODO: maybe we could add bulk-add method to\n    // Builder?  Takes FST and unions it w/ current\n    // FST.\n    private void append(Builder<Pair<BytesRef,Long>> builder, FST<Pair<BytesRef,Long>> subIndex, IntsRef scratchIntsRef) throws IOException {\n      final BytesRefFSTEnum<Pair<BytesRef,Long>> subIndexEnum = new BytesRefFSTEnum<>(subIndex);\n      BytesRefFSTEnum.InputOutput<Pair<BytesRef,Long>> indexEnt;\n      while((indexEnt = subIndexEnum.next()) != null) {\n        //if (DEBUG) {\n        //  System.out.println(\"      add sub=\" + indexEnt.input + \" \" + indexEnt.input + \" output=\" + indexEnt.output);\n        //}\n        builder.add(Util.toIntsRef(indexEnt.input, scratchIntsRef), indexEnt.output);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["f838187609fee3a1afa5f162f93c796046242c84"],"f838187609fee3a1afa5f162f93c796046242c84":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f838187609fee3a1afa5f162f93c796046242c84"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f838187609fee3a1afa5f162f93c796046242c84":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}