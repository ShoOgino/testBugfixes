{"path":"lucene/src/java/org/apache/lucene/util/BytesRefHash#get(int).mjava","commits":[{"id":"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","date":1286023472,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/BytesRefHash#get(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the {@link BytesRef} value for the given ord.\n   * <p>\n   * Note: the given ord must be a positive integer less that the current size (\n   * {@link #size()})\n   * </p>\n   * \n   * @param ord\n   *          the ord\n   * \n   * @return a BytesRef instance for the given ord\n   */\n  public BytesRef get(int ord) {\n    assert bytesStart != null : \"bytesStart is null - not initialized\";\n    assert ord < bytesStart.length: \"ord exceeeds byteStart len: \" + bytesStart.length;\n    return pool.setBytesRef(scratch1, bytesStart[ord]);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb189bc11e1880ca8686216e1af74536edab3b1c","date":1287051106,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/BytesRefHash#get(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BytesRefHash#get(int).mjava","sourceNew":"  /**\n   * Populates and returns a {@link BytesRef} with the bytes for the given ord.\n   * <p>\n   * Note: the given ord must be a positive integer less that the current size (\n   * {@link #size()})\n   * </p>\n   *\n   * @param ord the ord\n   * @param ref the {@link BytesRef} to populate\n   * \n   * @return the given BytesRef instance populated with the bytes for the given ord\n   */\n  public BytesRef get(int ord, BytesRef ref) {\n    assert bytesStart != null : \"bytesStart is null - not initialized\";\n    assert ord < bytesStart.length: \"ord exceeeds byteStart len: \" + bytesStart.length;\n    return pool.setBytesRef(ref, bytesStart[ord]);\n  }\n\n","sourceOld":"  /**\n   * Returns the {@link BytesRef} value for the given ord.\n   * <p>\n   * Note: the given ord must be a positive integer less that the current size (\n   * {@link #size()})\n   * </p>\n   * \n   * @param ord\n   *          the ord\n   * \n   * @return a BytesRef instance for the given ord\n   */\n  public BytesRef get(int ord) {\n    assert bytesStart != null : \"bytesStart is null - not initialized\";\n    assert ord < bytesStart.length: \"ord exceeeds byteStart len: \" + bytesStart.length;\n    return pool.setBytesRef(scratch1, bytesStart[ord]);\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4","d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/BytesRefHash#get(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BytesRefHash#get(int).mjava","sourceNew":"  /**\n   * Populates and returns a {@link BytesRef} with the bytes for the given ord.\n   * <p>\n   * Note: the given ord must be a positive integer less that the current size (\n   * {@link #size()})\n   * </p>\n   *\n   * @param ord the ord\n   * @param ref the {@link BytesRef} to populate\n   * \n   * @return the given BytesRef instance populated with the bytes for the given ord\n   */\n  public BytesRef get(int ord, BytesRef ref) {\n    assert bytesStart != null : \"bytesStart is null - not initialized\";\n    assert ord < bytesStart.length: \"ord exceeeds byteStart len: \" + bytesStart.length;\n    return pool.setBytesRef(ref, bytesStart[ord]);\n  }\n\n","sourceOld":"  /**\n   * Returns the {@link BytesRef} value for the given ord.\n   * <p>\n   * Note: the given ord must be a positive integer less that the current size (\n   * {@link #size()})\n   * </p>\n   * \n   * @param ord\n   *          the ord\n   * \n   * @return a BytesRef instance for the given ord\n   */\n  public BytesRef get(int ord) {\n    assert bytesStart != null : \"bytesStart is null - not initialized\";\n    assert ord < bytesStart.length: \"ord exceeeds byteStart len: \" + bytesStart.length;\n    return pool.setBytesRef(scratch1, bytesStart[ord]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","fb189bc11e1880ca8686216e1af74536edab3b1c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb189bc11e1880ca8686216e1af74536edab3b1c"],"fb189bc11e1880ca8686216e1af74536edab3b1c":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392"]},"commit2Childs":{"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","fb189bc11e1880ca8686216e1af74536edab3b1c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"fb189bc11e1880ca8686216e1af74536edab3b1c":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}