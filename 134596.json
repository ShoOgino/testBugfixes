{"path":"solr/core/src/java/org/apache/solr/handler/JsonLoader#processUpdate().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/JsonLoader#processUpdate().mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#processUpdate().mjava","sourceNew":"  @SuppressWarnings(\"fallthrough\")\n  void processUpdate() throws IOException\n  {\n    int ev = parser.nextEvent();\n    while( ev != JSONParser.EOF ) {\n      \n      switch( ev )\n      {\n        case JSONParser.ARRAY_START:\n          handleAdds();\n          break;\n\n      case JSONParser.STRING:\n        if( parser.wasKey() ) {\n          String v = parser.getString();\n          if( v.equals( XmlUpdateRequestHandler.ADD ) ) {\n            int ev2 = parser.nextEvent();\n            if (ev2 == JSONParser.OBJECT_START) {\n              processor.processAdd( parseAdd() );\n            } else if (ev2 == JSONParser.ARRAY_START) {\n              handleAdds();\n            } else {\n              assertEvent(ev2, JSONParser.OBJECT_START);\n            }\n          }\n          else if( v.equals( XmlUpdateRequestHandler.COMMIT ) ) {\n            CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n            cmd.waitSearcher = true;\n            parseCommitOptions( cmd );\n            processor.processCommit( cmd );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.OPTIMIZE ) ) {\n            CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n            cmd.waitSearcher = true;\n            parseCommitOptions( cmd );\n            processor.processCommit( cmd );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.DELETE ) ) {\n            processor.processDelete( parseDelete() );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.ROLLBACK ) ) {\n            processor.processRollback( parseRollback() );\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n          }\n          break;\n        }\n        // fall through\n\n      case JSONParser.LONG:\n      case JSONParser.NUMBER:\n      case JSONParser.BIGNUMBER:\n      case JSONParser.BOOLEAN:\n        log.info( \"can't have a value here! \"\n            +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n        \n      case JSONParser.OBJECT_START:\n      case JSONParser.OBJECT_END:\n      case JSONParser.ARRAY_END:\n        break;\n        \n      default:\n        log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n        break;\n      }\n      // read the next event\n      ev = parser.nextEvent();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"fallthrough\")\n  void processUpdate() throws IOException\n  {\n    int ev = parser.nextEvent();\n    while( ev != JSONParser.EOF ) {\n      \n      switch( ev )\n      {\n        case JSONParser.ARRAY_START:\n          handleAdds();\n          break;\n\n      case JSONParser.STRING:\n        if( parser.wasKey() ) {\n          String v = parser.getString();\n          if( v.equals( XmlUpdateRequestHandler.ADD ) ) {\n            int ev2 = parser.nextEvent();\n            if (ev2 == JSONParser.OBJECT_START) {\n              processor.processAdd( parseAdd() );\n            } else if (ev2 == JSONParser.ARRAY_START) {\n              handleAdds();\n            } else {\n              assertEvent(ev2, JSONParser.OBJECT_START);\n            }\n          }\n          else if( v.equals( XmlUpdateRequestHandler.COMMIT ) ) {\n            CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n            cmd.waitSearcher = true;\n            parseCommitOptions( cmd );\n            processor.processCommit( cmd );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.OPTIMIZE ) ) {\n            CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n            cmd.waitSearcher = true;\n            parseCommitOptions( cmd );\n            processor.processCommit( cmd );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.DELETE ) ) {\n            processor.processDelete( parseDelete() );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.ROLLBACK ) ) {\n            processor.processRollback( parseRollback() );\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n          }\n          break;\n        }\n        // fall through\n\n      case JSONParser.LONG:\n      case JSONParser.NUMBER:\n      case JSONParser.BIGNUMBER:\n      case JSONParser.BOOLEAN:\n        log.info( \"can't have a value here! \"\n            +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n        \n      case JSONParser.OBJECT_START:\n      case JSONParser.OBJECT_END:\n      case JSONParser.ARRAY_END:\n        break;\n        \n      default:\n        log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n        break;\n      }\n      // read the next event\n      ev = parser.nextEvent();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/JsonLoader#processUpdate().mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#processUpdate().mjava","sourceNew":"  @SuppressWarnings(\"fallthrough\")\n  void processUpdate() throws IOException\n  {\n    int ev = parser.nextEvent();\n    while( ev != JSONParser.EOF ) {\n      \n      switch( ev )\n      {\n        case JSONParser.ARRAY_START:\n          handleAdds();\n          break;\n\n      case JSONParser.STRING:\n        if( parser.wasKey() ) {\n          String v = parser.getString();\n          if( v.equals( XmlUpdateRequestHandler.ADD ) ) {\n            int ev2 = parser.nextEvent();\n            if (ev2 == JSONParser.OBJECT_START) {\n              processor.processAdd( parseAdd() );\n            } else if (ev2 == JSONParser.ARRAY_START) {\n              handleAdds();\n            } else {\n              assertEvent(ev2, JSONParser.OBJECT_START);\n            }\n          }\n          else if( v.equals( XmlUpdateRequestHandler.COMMIT ) ) {\n            CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n            cmd.waitSearcher = true;\n            parseCommitOptions( cmd );\n            processor.processCommit( cmd );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.OPTIMIZE ) ) {\n            CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n            cmd.waitSearcher = true;\n            parseCommitOptions( cmd );\n            processor.processCommit( cmd );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.DELETE ) ) {\n            processor.processDelete( parseDelete() );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.ROLLBACK ) ) {\n            processor.processRollback( parseRollback() );\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n          }\n          break;\n        }\n        // fall through\n\n      case JSONParser.LONG:\n      case JSONParser.NUMBER:\n      case JSONParser.BIGNUMBER:\n      case JSONParser.BOOLEAN:\n        log.info( \"can't have a value here! \"\n            +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n        \n      case JSONParser.OBJECT_START:\n      case JSONParser.OBJECT_END:\n      case JSONParser.ARRAY_END:\n        break;\n        \n      default:\n        log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n        break;\n      }\n      // read the next event\n      ev = parser.nextEvent();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"fallthrough\")\n  void processUpdate() throws IOException\n  {\n    int ev = parser.nextEvent();\n    while( ev != JSONParser.EOF ) {\n      \n      switch( ev )\n      {\n        case JSONParser.ARRAY_START:\n          handleAdds();\n          break;\n\n      case JSONParser.STRING:\n        if( parser.wasKey() ) {\n          String v = parser.getString();\n          if( v.equals( XmlUpdateRequestHandler.ADD ) ) {\n            int ev2 = parser.nextEvent();\n            if (ev2 == JSONParser.OBJECT_START) {\n              processor.processAdd( parseAdd() );\n            } else if (ev2 == JSONParser.ARRAY_START) {\n              handleAdds();\n            } else {\n              assertEvent(ev2, JSONParser.OBJECT_START);\n            }\n          }\n          else if( v.equals( XmlUpdateRequestHandler.COMMIT ) ) {\n            CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n            cmd.waitSearcher = true;\n            parseCommitOptions( cmd );\n            processor.processCommit( cmd );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.OPTIMIZE ) ) {\n            CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n            cmd.waitSearcher = true;\n            parseCommitOptions( cmd );\n            processor.processCommit( cmd );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.DELETE ) ) {\n            processor.processDelete( parseDelete() );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.ROLLBACK ) ) {\n            processor.processRollback( parseRollback() );\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n          }\n          break;\n        }\n        // fall through\n\n      case JSONParser.LONG:\n      case JSONParser.NUMBER:\n      case JSONParser.BIGNUMBER:\n      case JSONParser.BOOLEAN:\n        log.info( \"can't have a value here! \"\n            +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n        \n      case JSONParser.OBJECT_START:\n      case JSONParser.OBJECT_END:\n      case JSONParser.ARRAY_END:\n        break;\n        \n      default:\n        log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n        break;\n      }\n      // read the next event\n      ev = parser.nextEvent();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/JsonLoader#processUpdate().mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#processUpdate().mjava","sourceNew":"  @SuppressWarnings(\"fallthrough\")\n  void processUpdate() throws IOException\n  {\n    int ev = parser.nextEvent();\n    while( ev != JSONParser.EOF ) {\n      \n      switch( ev )\n      {\n        case JSONParser.ARRAY_START:\n          handleAdds();\n          break;\n\n      case JSONParser.STRING:\n        if( parser.wasKey() ) {\n          String v = parser.getString();\n          if( v.equals( XmlUpdateRequestHandler.ADD ) ) {\n            int ev2 = parser.nextEvent();\n            if (ev2 == JSONParser.OBJECT_START) {\n              processor.processAdd( parseAdd() );\n            } else if (ev2 == JSONParser.ARRAY_START) {\n              handleAdds();\n            } else {\n              assertEvent(ev2, JSONParser.OBJECT_START);\n            }\n          }\n          else if( v.equals( XmlUpdateRequestHandler.COMMIT ) ) {\n            CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n            cmd.waitSearcher = true;\n            parseCommitOptions( cmd );\n            processor.processCommit( cmd );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.OPTIMIZE ) ) {\n            CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n            cmd.waitSearcher = true;\n            parseCommitOptions( cmd );\n            processor.processCommit( cmd );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.DELETE ) ) {\n            processor.processDelete( parseDelete() );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.ROLLBACK ) ) {\n            processor.processRollback( parseRollback() );\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n          }\n          break;\n        }\n        // fall through\n\n      case JSONParser.LONG:\n      case JSONParser.NUMBER:\n      case JSONParser.BIGNUMBER:\n      case JSONParser.BOOLEAN:\n        log.info( \"can't have a value here! \"\n            +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n        \n      case JSONParser.OBJECT_START:\n      case JSONParser.OBJECT_END:\n      case JSONParser.ARRAY_END:\n        break;\n        \n      default:\n        log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n        break;\n      }\n      // read the next event\n      ev = parser.nextEvent();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"fallthrough\")\n  void processUpdate() throws IOException\n  {\n    int ev = parser.nextEvent();\n    while( ev != JSONParser.EOF ) {\n      \n      switch( ev )\n      {\n        case JSONParser.ARRAY_START:\n          handleAdds();\n          break;\n\n      case JSONParser.STRING:\n        if( parser.wasKey() ) {\n          String v = parser.getString();\n          if( v.equals( XmlUpdateRequestHandler.ADD ) ) {\n            int ev2 = parser.nextEvent();\n            if (ev2 == JSONParser.OBJECT_START) {\n              processor.processAdd( parseAdd() );\n            } else if (ev2 == JSONParser.ARRAY_START) {\n              handleAdds();\n            } else {\n              assertEvent(ev2, JSONParser.OBJECT_START);\n            }\n          }\n          else if( v.equals( XmlUpdateRequestHandler.COMMIT ) ) {\n            CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n            cmd.waitSearcher = true;\n            parseCommitOptions( cmd );\n            processor.processCommit( cmd );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.OPTIMIZE ) ) {\n            CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n            cmd.waitSearcher = true;\n            parseCommitOptions( cmd );\n            processor.processCommit( cmd );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.DELETE ) ) {\n            processor.processDelete( parseDelete() );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.ROLLBACK ) ) {\n            processor.processRollback( parseRollback() );\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n          }\n          break;\n        }\n        // fall through\n\n      case JSONParser.LONG:\n      case JSONParser.NUMBER:\n      case JSONParser.BIGNUMBER:\n      case JSONParser.BOOLEAN:\n        log.info( \"can't have a value here! \"\n            +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n        \n      case JSONParser.OBJECT_START:\n      case JSONParser.OBJECT_END:\n      case JSONParser.ARRAY_END:\n        break;\n        \n      default:\n        log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n        break;\n      }\n      // read the next event\n      ev = parser.nextEvent();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd5c2a6d346a6df2ab9e4081a999fdcbdab28974","date":1314737184,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/JsonLoader#processUpdate().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/JsonLoader#processUpdate().mjava","sourceNew":"  @SuppressWarnings(\"fallthrough\")\n  void processUpdate() throws IOException\n  {\n    int ev = parser.nextEvent();\n    while( ev != JSONParser.EOF ) {\n      \n      switch( ev )\n      {\n        case JSONParser.ARRAY_START:\n          handleAdds();\n          break;\n\n      case JSONParser.STRING:\n        if( parser.wasKey() ) {\n          String v = parser.getString();\n          if( v.equals( XmlUpdateRequestHandler.ADD ) ) {\n            int ev2 = parser.nextEvent();\n            if (ev2 == JSONParser.OBJECT_START) {\n              processor.processAdd( parseAdd() );\n            } else if (ev2 == JSONParser.ARRAY_START) {\n              handleAdds();\n            } else {\n              assertEvent(ev2, JSONParser.OBJECT_START);\n            }\n          }\n          else if( v.equals( XmlUpdateRequestHandler.COMMIT ) ) {\n            CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n            cmd.waitSearcher = true;\n            parseCommitOptions( cmd );\n            processor.processCommit( cmd );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.OPTIMIZE ) ) {\n            CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n            cmd.waitSearcher = true;\n            parseCommitOptions( cmd );\n            processor.processCommit( cmd );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.DELETE ) ) {\n            processor.processDelete( parseDelete() );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.ROLLBACK ) ) {\n            processor.processRollback( parseRollback() );\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n          }\n          break;\n        }\n        // fall through\n\n      case JSONParser.LONG:\n      case JSONParser.NUMBER:\n      case JSONParser.BIGNUMBER:\n      case JSONParser.BOOLEAN:\n      case JSONParser.NULL:\n        log.info( \"can't have a value here! \"\n            +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n        \n      case JSONParser.OBJECT_START:\n      case JSONParser.OBJECT_END:\n      case JSONParser.ARRAY_END:\n        break;\n        \n      default:\n        log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n        break;\n      }\n      // read the next event\n      ev = parser.nextEvent();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"fallthrough\")\n  void processUpdate() throws IOException\n  {\n    int ev = parser.nextEvent();\n    while( ev != JSONParser.EOF ) {\n      \n      switch( ev )\n      {\n        case JSONParser.ARRAY_START:\n          handleAdds();\n          break;\n\n      case JSONParser.STRING:\n        if( parser.wasKey() ) {\n          String v = parser.getString();\n          if( v.equals( XmlUpdateRequestHandler.ADD ) ) {\n            int ev2 = parser.nextEvent();\n            if (ev2 == JSONParser.OBJECT_START) {\n              processor.processAdd( parseAdd() );\n            } else if (ev2 == JSONParser.ARRAY_START) {\n              handleAdds();\n            } else {\n              assertEvent(ev2, JSONParser.OBJECT_START);\n            }\n          }\n          else if( v.equals( XmlUpdateRequestHandler.COMMIT ) ) {\n            CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n            cmd.waitSearcher = true;\n            parseCommitOptions( cmd );\n            processor.processCommit( cmd );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.OPTIMIZE ) ) {\n            CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n            cmd.waitSearcher = true;\n            parseCommitOptions( cmd );\n            processor.processCommit( cmd );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.DELETE ) ) {\n            processor.processDelete( parseDelete() );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.ROLLBACK ) ) {\n            processor.processRollback( parseRollback() );\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n          }\n          break;\n        }\n        // fall through\n\n      case JSONParser.LONG:\n      case JSONParser.NUMBER:\n      case JSONParser.BIGNUMBER:\n      case JSONParser.BOOLEAN:\n        log.info( \"can't have a value here! \"\n            +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n        \n      case JSONParser.OBJECT_START:\n      case JSONParser.OBJECT_END:\n      case JSONParser.ARRAY_END:\n        break;\n        \n      default:\n        log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n        break;\n      }\n      // read the next event\n      ev = parser.nextEvent();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"042e4d934397657ba04c82b46cc5665076bc5c58","date":1336511170,"type":4,"author":"Ryan McKinley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/JsonLoader#processUpdate().mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings(\"fallthrough\")\n  void processUpdate() throws IOException\n  {\n    int ev = parser.nextEvent();\n    while( ev != JSONParser.EOF ) {\n      \n      switch( ev )\n      {\n        case JSONParser.ARRAY_START:\n          handleAdds();\n          break;\n\n      case JSONParser.STRING:\n        if( parser.wasKey() ) {\n          String v = parser.getString();\n          if( v.equals( XmlUpdateRequestHandler.ADD ) ) {\n            int ev2 = parser.nextEvent();\n            if (ev2 == JSONParser.OBJECT_START) {\n              processor.processAdd( parseAdd() );\n            } else if (ev2 == JSONParser.ARRAY_START) {\n              handleAdds();\n            } else {\n              assertEvent(ev2, JSONParser.OBJECT_START);\n            }\n          }\n          else if( v.equals( XmlUpdateRequestHandler.COMMIT ) ) {\n            CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n            cmd.waitSearcher = true;\n            parseCommitOptions( cmd );\n            processor.processCommit( cmd );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.OPTIMIZE ) ) {\n            CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n            cmd.waitSearcher = true;\n            parseCommitOptions( cmd );\n            processor.processCommit( cmd );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.DELETE ) ) {\n            processor.processDelete( parseDelete() );\n          }\n          else if( v.equals( XmlUpdateRequestHandler.ROLLBACK ) ) {\n            processor.processRollback( parseRollback() );\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n          }\n          break;\n        }\n        // fall through\n\n      case JSONParser.LONG:\n      case JSONParser.NUMBER:\n      case JSONParser.BIGNUMBER:\n      case JSONParser.BOOLEAN:\n      case JSONParser.NULL:\n        log.info( \"can't have a value here! \"\n            +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n        \n      case JSONParser.OBJECT_START:\n      case JSONParser.OBJECT_END:\n      case JSONParser.ARRAY_END:\n        break;\n        \n      default:\n        log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n        break;\n      }\n      // read the next event\n      ev = parser.nextEvent();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"042e4d934397657ba04c82b46cc5665076bc5c58":["dd5c2a6d346a6df2ab9e4081a999fdcbdab28974"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"dd5c2a6d346a6df2ab9e4081a999fdcbdab28974":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["042e4d934397657ba04c82b46cc5665076bc5c58"]},"commit2Childs":{"042e4d934397657ba04c82b46cc5665076bc5c58":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["dd5c2a6d346a6df2ab9e4081a999fdcbdab28974"],"dd5c2a6d346a6df2ab9e4081a999fdcbdab28974":["042e4d934397657ba04c82b46cc5665076bc5c58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}