{"path":"backwards/src/test/org/apache/lucene/store/MockRAMDirectory#crash().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/store/MockRAMDirectory#crash().mjava","pathOld":"/dev/null","sourceNew":"  /** Simulates a crash of OS or machine by overwriting\n   *  unsynced files. */\n  public synchronized void crash() throws IOException {\n    crashed = true;\n    openFiles = new HashMap();\n    Iterator<String> it = unSyncedFiles.iterator();\n    unSyncedFiles = new HashSet();\n    int count = 0;\n    while(it.hasNext()) {\n      String name = it.next();\n      RAMFile file = fileMap.get(name);\n      if (count % 3 == 0) {\n        deleteFile(name, true);\n      } else if (count % 3 == 1) {\n        // Zero out file entirely\n        final int numBuffers = file.numBuffers();\n        for(int i=0;i<numBuffers;i++) {\n          byte[] buffer = file.getBuffer(i);\n          Arrays.fill(buffer, (byte) 0);\n        }\n      } else if (count % 3 == 2) {\n        // Truncate the file:\n        file.setLength(file.getLength()/2);\n      }\n      count++;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/store/MockRAMDirectory#crash().mjava","pathOld":"backwards/src/test/org/apache/lucene/store/MockRAMDirectory#crash().mjava","sourceNew":"  /** Simulates a crash of OS or machine by overwriting\n   *  unsynced files. */\n  public synchronized void crash() throws IOException {\n    crashed = true;\n    openFiles = new HashMap();\n    Iterator<String> it = unSyncedFiles.iterator();\n    unSyncedFiles = new HashSet();\n    int count = 0;\n    while(it.hasNext()) {\n      String name = it.next();\n      RAMFile file = fileMap.get(name);\n      if (count % 3 == 0) {\n        deleteFile(name, true);\n      } else if (count % 3 == 1) {\n        // Zero out file entirely\n        final int numBuffers = file.numBuffers();\n        for(int i=0;i<numBuffers;i++) {\n          byte[] buffer = file.getBuffer(i);\n          Arrays.fill(buffer, (byte) 0);\n        }\n      } else if (count % 3 == 2) {\n        // Truncate the file:\n        file.setLength(file.getLength()/2);\n      }\n      count++;\n    }\n  }\n\n","sourceOld":"  /** Simulates a crash of OS or machine by overwriting\n   *  unsynced files. */\n  public synchronized void crash() throws IOException {\n    crashed = true;\n    openFiles = new HashMap();\n    Iterator<String> it = unSyncedFiles.iterator();\n    unSyncedFiles = new HashSet();\n    int count = 0;\n    while(it.hasNext()) {\n      String name = it.next();\n      RAMFile file = fileMap.get(name);\n      if (count % 3 == 0) {\n        deleteFile(name, true);\n      } else if (count % 3 == 1) {\n        // Zero out file entirely\n        final int numBuffers = file.numBuffers();\n        for(int i=0;i<numBuffers;i++) {\n          byte[] buffer = file.getBuffer(i);\n          Arrays.fill(buffer, (byte) 0);\n        }\n      } else if (count % 3 == 2) {\n        // Truncate the file:\n        file.setLength(file.getLength()/2);\n      }\n      count++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}