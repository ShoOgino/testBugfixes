{"path":"lucene/src/test-framework/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilder.State#equals(Object).mjava","commits":[{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilder.State#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Two states are equal if:\n     * <ul>\n     * <li>they have an identical number of outgoing transitions, labeled with\n     * the same labels</li>\n     * <li>corresponding outgoing transitions lead to the same states (to states\n     * with an identical right-language).\n     * </ul>\n     */\n    @Override\n    public boolean equals(Object obj) {\n      final State other = (State) obj;\n      return is_final == other.is_final\n          && Arrays.equals(this.labels, other.labels)\n          && referenceEquals(this.states, other.states);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilder.State#equals(Object).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilder.State#equals(Object).mjava","sourceNew":"    /**\n     * Two states are equal if:\n     * <ul>\n     * <li>they have an identical number of outgoing transitions, labeled with\n     * the same labels</li>\n     * <li>corresponding outgoing transitions lead to the same states (to states\n     * with an identical right-language).\n     * </ul>\n     */\n    @Override\n    public boolean equals(Object obj) {\n      final State other = (State) obj;\n      return is_final == other.is_final\n          && Arrays.equals(this.labels, other.labels)\n          && referenceEquals(this.states, other.states);\n    }\n\n","sourceOld":"    /**\n     * Two states are equal if:\n     * <ul>\n     * <li>they have an identical number of outgoing transitions, labeled with\n     * the same labels</li>\n     * <li>corresponding outgoing transitions lead to the same states (to states\n     * with an identical right-language).\n     * </ul>\n     */\n    @Override\n    public boolean equals(Object obj) {\n      final State other = (State) obj;\n      return is_final == other.is_final\n          && Arrays.equals(this.labels, other.labels)\n          && referenceEquals(this.states, other.states);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7b91922b55d15444d554721b352861d028eb8278":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["7b91922b55d15444d554721b352861d028eb8278"],"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}