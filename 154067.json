{"path":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testGetSumDocFreq().mjava","commits":[{"id":"10cc809885aee4d16fe14baa327d43c5592ec55c","date":1363795545,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testGetSumDocFreq().mjava","pathOld":"/dev/null","sourceNew":"  public void testGetSumDocFreq() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newTextField(\"f\", \"a\", Field.Store.NO));\n    writer.addDocument(d);\n    d = new Document();\n    d.add(newTextField(\"f\", \"b\", Field.Store.NO));\n    writer.addDocument(d);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    try {\n      // Make sure codec impls getSumDocFreq (eg PreFlex doesn't)\n      Assume.assumeTrue(r.getSumDocFreq(\"f\") != -1);\n      assertEquals(2, r.getSumDocFreq(\"f\"));\n    } finally {\n      r.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testGetSumDocFreq().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testGetSumDocFreq().mjava","sourceNew":"  public void testGetSumDocFreq() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newTextField(\"f\", \"a\", Field.Store.NO));\n    writer.addDocument(d);\n    d = new Document();\n    d.add(newTextField(\"f\", \"b\", Field.Store.NO));\n    writer.addDocument(d);\n    DirectoryReader r = writer.getReader();\n    writer.shutdown();\n    try {\n      // Make sure codec impls getSumDocFreq (eg PreFlex doesn't)\n      Assume.assumeTrue(r.getSumDocFreq(\"f\") != -1);\n      assertEquals(2, r.getSumDocFreq(\"f\"));\n    } finally {\n      r.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testGetSumDocFreq() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newTextField(\"f\", \"a\", Field.Store.NO));\n    writer.addDocument(d);\n    d = new Document();\n    d.add(newTextField(\"f\", \"b\", Field.Store.NO));\n    writer.addDocument(d);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    try {\n      // Make sure codec impls getSumDocFreq (eg PreFlex doesn't)\n      Assume.assumeTrue(r.getSumDocFreq(\"f\") != -1);\n      assertEquals(2, r.getSumDocFreq(\"f\"));\n    } finally {\n      r.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testGetSumDocFreq().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testGetSumDocFreq().mjava","sourceNew":"  public void testGetSumDocFreq() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newTextField(\"f\", \"a\", Field.Store.NO));\n    writer.addDocument(d);\n    d = new Document();\n    d.add(newTextField(\"f\", \"b\", Field.Store.NO));\n    writer.addDocument(d);\n    DirectoryReader r = writer.getReader();\n    writer.shutdown();\n    try {\n      // Make sure codec impls getSumDocFreq (eg PreFlex doesn't)\n      Assume.assumeTrue(r.getSumDocFreq(\"f\") != -1);\n      assertEquals(2, r.getSumDocFreq(\"f\"));\n    } finally {\n      r.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testGetSumDocFreq() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newTextField(\"f\", \"a\", Field.Store.NO));\n    writer.addDocument(d);\n    d = new Document();\n    d.add(newTextField(\"f\", \"b\", Field.Store.NO));\n    writer.addDocument(d);\n    DirectoryReader r = writer.getReader();\n    writer.shutdown();\n    try {\n      // Make sure codec impls getSumDocFreq (eg PreFlex doesn't)\n      Assume.assumeTrue(r.getSumDocFreq(\"f\") != -1);\n      assertEquals(2, r.getSumDocFreq(\"f\"));\n    } finally {\n      r.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testGetSumDocFreq().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testGetSumDocFreq().mjava","sourceNew":"  public void testGetSumDocFreq() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newTextField(\"f\", \"a\", Field.Store.NO));\n    writer.addDocument(d);\n    d = new Document();\n    d.add(newTextField(\"f\", \"b\", Field.Store.NO));\n    writer.addDocument(d);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    try {\n      // Make sure codec impls getSumDocFreq (eg PreFlex doesn't)\n      Assume.assumeTrue(r.getSumDocFreq(\"f\") != -1);\n      assertEquals(2, r.getSumDocFreq(\"f\"));\n    } finally {\n      r.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testGetSumDocFreq() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newTextField(\"f\", \"a\", Field.Store.NO));\n    writer.addDocument(d);\n    d = new Document();\n    d.add(newTextField(\"f\", \"b\", Field.Store.NO));\n    writer.addDocument(d);\n    DirectoryReader r = writer.getReader();\n    writer.shutdown();\n    try {\n      // Make sure codec impls getSumDocFreq (eg PreFlex doesn't)\n      Assume.assumeTrue(r.getSumDocFreq(\"f\") != -1);\n      assertEquals(2, r.getSumDocFreq(\"f\"));\n    } finally {\n      r.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"10cc809885aee4d16fe14baa327d43c5592ec55c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["10cc809885aee4d16fe14baa327d43c5592ec55c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"10cc809885aee4d16fe14baa327d43c5592ec55c":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["10cc809885aee4d16fe14baa327d43c5592ec55c"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}