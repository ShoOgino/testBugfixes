{"path":"sandbox/contributions/webcrawler-LARM/src/hplb/xml/NodeListImpl#insert(int,Node).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/hplb/xml/NodeListImpl#insert(int,Node).mjava","pathOld":"/dev/null","sourceNew":"    // XXX: TEST THIS METHOD!!!\n    public synchronized Node insert(int index, Node newNode) {\n        Node res = null;\n        if (index < 0 || index > count) {\n            throw new IndexOutOfBoundsException(\"\"+index);\n        } else if (index == count) {\n            add(newNode);\n        } else {\n            int len = elms.length;\n            if (len == count) {\n                Node[] e = new Node[len * 2];\n                System.arraycopy(elms, 0, e, 0, index);\n                System.arraycopy(elms, index, e, index+1, count-index);\n                elms = e;\n            } else {\n                System.arraycopy(elms, index, elms, index+1, count-index);\n            }\n            res = elms[index];\n            elms[index] = newNode;\n            count++;\n        }\n        return res;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e","date":1022957716,"type":4,"author":"cmarschner","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/hplb/xml/NodeListImpl#insert(int,Node).mjava","sourceNew":null,"sourceOld":"    // XXX: TEST THIS METHOD!!!\n    public synchronized Node insert(int index, Node newNode) {\n        Node res = null;\n        if (index < 0 || index > count) {\n            throw new IndexOutOfBoundsException(\"\"+index);\n        } else if (index == count) {\n            add(newNode);\n        } else {\n            int len = elms.length;\n            if (len == count) {\n                Node[] e = new Node[len * 2];\n                System.arraycopy(elms, 0, e, 0, index);\n                System.arraycopy(elms, index, e, index+1, count-index);\n                elms = e;\n            } else {\n                System.arraycopy(elms, index, elms, index+1, count-index);\n            }\n            res = elms[index];\n            elms[index] = newNode;\n            count++;\n        }\n        return res;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e":["05d36e0b328ec96237035fbcca240e73631396e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e"]},"commit2Childs":{"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"05d36e0b328ec96237035fbcca240e73631396e5":["12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}