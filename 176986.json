{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#createData(String,byte[],CreateMode).mjava","commits":[{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#createData(String,byte[],CreateMode).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String createData(String path, byte[] data, CreateMode mode) throws AlreadyExistsException, NoSuchElementException, IOException {\n    if ((CreateMode.EPHEMERAL == mode || CreateMode.PERSISTENT == mode) && hasData(path)) {\n      throw new AlreadyExistsException(path);\n    }\n    // check if parent exists\n    String relPath = path.charAt(0) == '/' ? path.substring(1) : path;\n    if (relPath.length() > 0) { // non-root path - check if parent exists\n      String[] elements = relPath.split(\"/\");\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < elements.length - 1; i++) {\n        sb.append('/');\n        sb.append(elements[i]);\n      }\n      if (!hasData(sb.toString())) {\n        throw new NoSuchElementException(sb.toString());\n      }\n    }\n    Node n = null;\n    multiLock.lock();\n    try {\n      n = traverse(path, true, mode);\n    } finally {\n      multiLock.unlock();\n    }\n    try {\n      n.setData(data, -1);\n      return n.path;\n    } catch (BadVersionException e) {\n      // not happening\n      return null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59537ce20cda704e6ff3cb03706b6507b289ed81","date":1544700454,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#createData(String,byte[],CreateMode).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#createData(String,byte[],CreateMode).mjava","sourceNew":"  @Override\n  public String createData(String path, byte[] data, CreateMode mode) throws AlreadyExistsException, NoSuchElementException, IOException {\n    if ((CreateMode.EPHEMERAL == mode || CreateMode.PERSISTENT == mode) && hasData(path)) {\n      throw new AlreadyExistsException(path);\n    }\n\n    String relPath = path.charAt(0) == '/' ? path.substring(1) : path;\n    if (relPath.length() == 0) {\n      // TODO should trying to create a root node throw an exception since its always init'd in the ctor?\n      return null;\n    }\n\n    // non-root-node.  Make sure parent exists.\n    String[] elements = relPath.split(\"/\");\n    StringBuilder parentStringBuilder = new StringBuilder();\n    for (int i = 0; i < elements.length - 1; i++) {\n      parentStringBuilder.append('/');\n      parentStringBuilder.append(elements[i]);\n    }\n    if (!hasData(parentStringBuilder.toString())) {\n      throw new NoSuchElementException(parentStringBuilder.toString());\n    }\n\n    multiLock.lock();\n    try {\n      String nodeName = elements[elements.length-1];\n      Node parentNode = traverse(parentStringBuilder.toString(), false, mode);\n      Node childNode = createNode(parentNode, mode, parentStringBuilder.append(\"/\"), nodeName, false);\n      childNode.setData(data, -1);\n      parentNode.setChild(childNode.name, childNode);\n      return childNode.path;\n    } catch (BadVersionException e) {\n      // not happening\n      return null;\n    } finally {\n      multiLock.unlock();\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public String createData(String path, byte[] data, CreateMode mode) throws AlreadyExistsException, NoSuchElementException, IOException {\n    if ((CreateMode.EPHEMERAL == mode || CreateMode.PERSISTENT == mode) && hasData(path)) {\n      throw new AlreadyExistsException(path);\n    }\n    // check if parent exists\n    String relPath = path.charAt(0) == '/' ? path.substring(1) : path;\n    if (relPath.length() > 0) { // non-root path - check if parent exists\n      String[] elements = relPath.split(\"/\");\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < elements.length - 1; i++) {\n        sb.append('/');\n        sb.append(elements[i]);\n      }\n      if (!hasData(sb.toString())) {\n        throw new NoSuchElementException(sb.toString());\n      }\n    }\n    Node n = null;\n    multiLock.lock();\n    try {\n      n = traverse(path, true, mode);\n    } finally {\n      multiLock.unlock();\n    }\n    try {\n      n.setData(data, -1);\n      return n.path;\n    } catch (BadVersionException e) {\n      // not happening\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"981ac5de1bb1519ec139561c7f9b76f07db46a7b","date":1545332945,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#createData(String,byte[],CreateMode).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#createData(String,byte[],CreateMode).mjava","sourceNew":"  @Override\n  public String createData(String path, byte[] data, CreateMode mode) throws AlreadyExistsException, NoSuchElementException, IOException {\n    if ((CreateMode.EPHEMERAL == mode || CreateMode.PERSISTENT == mode) && hasData(path)) {\n      throw new AlreadyExistsException(path);\n    }\n\n    String relPath = path.charAt(0) == '/' ? path.substring(1) : path;\n    if (relPath.length() == 0) { //Trying to create root-node, return null.\n      // TODO should trying to create a root node throw an exception since its always init'd in the ctor?\n      return null;\n    }\n\n    String[] elements = relPath.split(\"/\");\n    StringBuilder parentStringBuilder = new StringBuilder();\n    Node parentNode = null;\n    if (elements.length == 1) { // Direct descendant of '/'.\n      parentNode = getRoot();\n    } else { // Indirect descendant of '/', lookup parent node\n      for (int i = 0; i < elements.length - 1; i++) {\n        parentStringBuilder.append('/');\n        parentStringBuilder.append(elements[i]);\n      }\n      if (!hasData(parentStringBuilder.toString())) {\n        throw new NoSuchElementException(parentStringBuilder.toString());\n      }\n      parentNode = traverse(parentStringBuilder.toString(), false, mode);\n    }\n\n    multiLock.lock();\n    try {\n      String nodeName = elements[elements.length-1];\n      Node childNode = createNode(parentNode, mode, parentStringBuilder.append(\"/\"), nodeName, false);\n      childNode.setData(data, -1);\n      parentNode.setChild(childNode.name, childNode);\n      return childNode.path;\n    } catch (BadVersionException e) {\n      // not happening\n      return null;\n    } finally {\n      multiLock.unlock();\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public String createData(String path, byte[] data, CreateMode mode) throws AlreadyExistsException, NoSuchElementException, IOException {\n    if ((CreateMode.EPHEMERAL == mode || CreateMode.PERSISTENT == mode) && hasData(path)) {\n      throw new AlreadyExistsException(path);\n    }\n\n    String relPath = path.charAt(0) == '/' ? path.substring(1) : path;\n    if (relPath.length() == 0) {\n      // TODO should trying to create a root node throw an exception since its always init'd in the ctor?\n      return null;\n    }\n\n    // non-root-node.  Make sure parent exists.\n    String[] elements = relPath.split(\"/\");\n    StringBuilder parentStringBuilder = new StringBuilder();\n    for (int i = 0; i < elements.length - 1; i++) {\n      parentStringBuilder.append('/');\n      parentStringBuilder.append(elements[i]);\n    }\n    if (!hasData(parentStringBuilder.toString())) {\n      throw new NoSuchElementException(parentStringBuilder.toString());\n    }\n\n    multiLock.lock();\n    try {\n      String nodeName = elements[elements.length-1];\n      Node parentNode = traverse(parentStringBuilder.toString(), false, mode);\n      Node childNode = createNode(parentNode, mode, parentStringBuilder.append(\"/\"), nodeName, false);\n      childNode.setData(data, -1);\n      parentNode.setChild(childNode.name, childNode);\n      return childNode.path;\n    } catch (BadVersionException e) {\n      // not happening\n      return null;\n    } finally {\n      multiLock.unlock();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59506fa452342983f7cd1faf6d27274c658f3e09","date":1545397484,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#createData(String,byte[],CreateMode).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#createData(String,byte[],CreateMode).mjava","sourceNew":"  @Override\n  public String createData(String path, byte[] data, CreateMode mode) throws AlreadyExistsException, NoSuchElementException, IOException {\n    if ((CreateMode.EPHEMERAL == mode || CreateMode.PERSISTENT == mode) && hasData(path)) {\n      throw new AlreadyExistsException(path);\n    }\n\n    String relPath = path.charAt(0) == '/' ? path.substring(1) : path;\n    if (relPath.length() == 0) { //Trying to create root-node, return null.\n      // TODO should trying to create a root node throw an exception since its always init'd in the ctor?\n      return null;\n    }\n\n    String[] elements = relPath.split(\"/\");\n    StringBuilder parentStringBuilder = new StringBuilder();\n    Node parentNode = null;\n    if (elements.length == 1) { // Direct descendant of '/'.\n      parentNode = getRoot();\n    } else { // Indirect descendant of '/', lookup parent node\n      for (int i = 0; i < elements.length - 1; i++) {\n        parentStringBuilder.append('/');\n        parentStringBuilder.append(elements[i]);\n      }\n      if (!hasData(parentStringBuilder.toString())) {\n        throw new NoSuchElementException(parentStringBuilder.toString());\n      }\n      parentNode = traverse(parentStringBuilder.toString(), false, mode);\n    }\n\n    multiLock.lock();\n    try {\n      String nodeName = elements[elements.length-1];\n      Node childNode = createNode(parentNode, mode, parentStringBuilder.append(\"/\"), nodeName, data,false);\n      parentNode.setChild(childNode.name, childNode);\n      return childNode.path;\n    } finally {\n      multiLock.unlock();\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public String createData(String path, byte[] data, CreateMode mode) throws AlreadyExistsException, NoSuchElementException, IOException {\n    if ((CreateMode.EPHEMERAL == mode || CreateMode.PERSISTENT == mode) && hasData(path)) {\n      throw new AlreadyExistsException(path);\n    }\n\n    String relPath = path.charAt(0) == '/' ? path.substring(1) : path;\n    if (relPath.length() == 0) { //Trying to create root-node, return null.\n      // TODO should trying to create a root node throw an exception since its always init'd in the ctor?\n      return null;\n    }\n\n    String[] elements = relPath.split(\"/\");\n    StringBuilder parentStringBuilder = new StringBuilder();\n    Node parentNode = null;\n    if (elements.length == 1) { // Direct descendant of '/'.\n      parentNode = getRoot();\n    } else { // Indirect descendant of '/', lookup parent node\n      for (int i = 0; i < elements.length - 1; i++) {\n        parentStringBuilder.append('/');\n        parentStringBuilder.append(elements[i]);\n      }\n      if (!hasData(parentStringBuilder.toString())) {\n        throw new NoSuchElementException(parentStringBuilder.toString());\n      }\n      parentNode = traverse(parentStringBuilder.toString(), false, mode);\n    }\n\n    multiLock.lock();\n    try {\n      String nodeName = elements[elements.length-1];\n      Node childNode = createNode(parentNode, mode, parentStringBuilder.append(\"/\"), nodeName, false);\n      childNode.setData(data, -1);\n      parentNode.setChild(childNode.name, childNode);\n      return childNode.path;\n    } catch (BadVersionException e) {\n      // not happening\n      return null;\n    } finally {\n      multiLock.unlock();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5","date":1556572478,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#createData(String,byte[],CreateMode).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#createData(String,byte[],CreateMode).mjava","sourceNew":"  @Override\n  public String createData(String path, byte[] data, CreateMode mode) throws AlreadyExistsException, NoSuchElementException, IOException {\n    if ((CreateMode.EPHEMERAL == mode || CreateMode.PERSISTENT == mode) && hasData(path)) {\n      throw new AlreadyExistsException(path);\n    }\n\n    String relPath = path.charAt(0) == '/' ? path.substring(1) : path;\n    if (relPath.length() == 0) { //Trying to create root-node, return null.\n      // TODO should trying to create a root node throw an exception since its always init'd in the ctor?\n      return null;\n    }\n\n    String[] elements = relPath.split(\"/\");\n    StringBuilder parentStringBuilder = new StringBuilder();\n    Node parentNode = null;\n    if (elements.length == 1) { // Direct descendant of '/'.\n      parentNode = getRoot();\n    } else { // Indirect descendant of '/', lookup parent node\n      for (int i = 0; i < elements.length - 1; i++) {\n        parentStringBuilder.append('/');\n        parentStringBuilder.append(elements[i]);\n      }\n      if (!hasData(parentStringBuilder.toString())) {\n        throw new NoSuchElementException(parentStringBuilder.toString());\n      }\n      parentNode = traverse(parentStringBuilder.toString(), false, mode);\n    }\n\n    multiLock.lock();\n    try {\n      String nodeName = elements[elements.length-1];\n      Node childNode = createNode(parentNode, mode, parentStringBuilder.append(\"/\"), nodeName, data,false);\n      parentNode.setChild(childNode.name, childNode);\n      return childNode.path;\n    } finally {\n      multiLock.unlock();\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public String createData(String path, byte[] data, CreateMode mode) throws AlreadyExistsException, NoSuchElementException, IOException {\n    if ((CreateMode.EPHEMERAL == mode || CreateMode.PERSISTENT == mode) && hasData(path)) {\n      throw new AlreadyExistsException(path);\n    }\n\n    String relPath = path.charAt(0) == '/' ? path.substring(1) : path;\n    if (relPath.length() == 0) { //Trying to create root-node, return null.\n      // TODO should trying to create a root node throw an exception since its always init'd in the ctor?\n      return null;\n    }\n\n    String[] elements = relPath.split(\"/\");\n    StringBuilder parentStringBuilder = new StringBuilder();\n    Node parentNode = null;\n    if (elements.length == 1) { // Direct descendant of '/'.\n      parentNode = getRoot();\n    } else { // Indirect descendant of '/', lookup parent node\n      for (int i = 0; i < elements.length - 1; i++) {\n        parentStringBuilder.append('/');\n        parentStringBuilder.append(elements[i]);\n      }\n      if (!hasData(parentStringBuilder.toString())) {\n        throw new NoSuchElementException(parentStringBuilder.toString());\n      }\n      parentNode = traverse(parentStringBuilder.toString(), false, mode);\n    }\n\n    multiLock.lock();\n    try {\n      String nodeName = elements[elements.length-1];\n      Node childNode = createNode(parentNode, mode, parentStringBuilder.append(\"/\"), nodeName, data,false);\n      parentNode.setChild(childNode.name, childNode);\n      return childNode.path;\n    } finally {\n      multiLock.unlock();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"59537ce20cda704e6ff3cb03706b6507b289ed81":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"981ac5de1bb1519ec139561c7f9b76f07db46a7b":["59537ce20cda704e6ff3cb03706b6507b289ed81"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["59506fa452342983f7cd1faf6d27274c658f3e09"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"59506fa452342983f7cd1faf6d27274c658f3e09":["981ac5de1bb1519ec139561c7f9b76f07db46a7b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"]},"commit2Childs":{"59537ce20cda704e6ff3cb03706b6507b289ed81":["981ac5de1bb1519ec139561c7f9b76f07db46a7b"],"981ac5de1bb1519ec139561c7f9b76f07db46a7b":["59506fa452342983f7cd1faf6d27274c658f3e09"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["59537ce20cda704e6ff3cb03706b6507b289ed81"],"59506fa452342983f7cd1faf6d27274c658f3e09":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}