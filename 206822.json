{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/StreamingTest#testReducerStream().mjava","commits":[{"id":"42f03b407cd85abd6edd2a1fe7cab9990164aa4b","date":1427303865,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/StreamingTest#testReducerStream().mjava","pathOld":"/dev/null","sourceNew":"  private void testReducerStream() throws Exception {\n\n    indexr(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\");\n    indexr(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\");\n    indexr(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\");\n    indexr(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\");\n    indexr(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\");\n    indexr(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\");\n    indexr(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\");\n    indexr(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\");\n    indexr(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\");\n    indexr(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\");\n\n    commit();\n\n    String zkHost = zkServer.getZkAddress();\n\n    //Test with spaces in the parameter lists.\n    Map paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s, a_i,  a_f\",\"sort\", \"a_s asc  ,  a_f   asc\");\n    CloudSolrStream stream = new CloudSolrStream(zkHost, \"collection1\", paramsA);\n    ReducerStream rstream = new ReducerStream(stream, new AscFieldComp(\"a_s\"));\n\n    List<Tuple> tuples = getTuples(rstream);\n\n    assert(tuples.size() == 3);\n    assertOrder(tuples, 0,3,4);\n\n    Tuple t0 = tuples.get(0);\n    List<Map> maps0 = t0.getMaps();\n    assertMaps(maps0, 0, 2,1, 9);\n\n    Tuple t1 = tuples.get(1);\n    List<Map> maps1 = t1.getMaps();\n    assertMaps(maps1, 3, 5, 7, 8);\n\n    Tuple t2 = tuples.get(2);\n    List<Map> maps2 = t2.getMaps();\n    assertMaps(maps2, 4, 6);\n\n\n\n    del(\"*:*\");\n    commit();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["74a180a9264fddbaf4727f75ded3b11d6b8f2bf7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/StreamingTest#testReducerStream().mjava","pathOld":"/dev/null","sourceNew":"  private void testReducerStream() throws Exception {\n\n    indexr(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\");\n    indexr(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\");\n    indexr(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\");\n    indexr(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\");\n    indexr(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\");\n    indexr(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\");\n    indexr(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\");\n    indexr(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\");\n    indexr(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\");\n    indexr(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\");\n\n    commit();\n\n    String zkHost = zkServer.getZkAddress();\n\n    //Test with spaces in the parameter lists.\n    Map paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s, a_i,  a_f\",\"sort\", \"a_s asc  ,  a_f   asc\");\n    CloudSolrStream stream = new CloudSolrStream(zkHost, \"collection1\", paramsA);\n    ReducerStream rstream = new ReducerStream(stream, new AscFieldComp(\"a_s\"));\n\n    List<Tuple> tuples = getTuples(rstream);\n\n    assert(tuples.size() == 3);\n    assertOrder(tuples, 0,3,4);\n\n    Tuple t0 = tuples.get(0);\n    List<Map> maps0 = t0.getMaps();\n    assertMaps(maps0, 0, 2,1, 9);\n\n    Tuple t1 = tuples.get(1);\n    List<Map> maps1 = t1.getMaps();\n    assertMaps(maps1, 3, 5, 7, 8);\n\n    Tuple t2 = tuples.get(2);\n    List<Map> maps2 = t2.getMaps();\n    assertMaps(maps2, 4, 6);\n\n\n\n    del(\"*:*\");\n    commit();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6127e3b5c60a3982abec2dfd5c289d3f6a64194d","date":1428333164,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/StreamingTest#testReducerStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/StreamingTest#testReducerStream().mjava","sourceNew":"  private void testReducerStream() throws Exception {\n\n    indexr(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\");\n    indexr(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\");\n    indexr(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\");\n    indexr(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\");\n    indexr(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\");\n    indexr(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\");\n    indexr(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\");\n    indexr(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\");\n    indexr(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\");\n    indexr(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\");\n\n    commit();\n\n    String zkHost = zkServer.getZkAddress();\n\n    //Test with spaces in the parameter lists.\n    Map paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s, a_i,  a_f\",\"sort\", \"a_s asc  ,  a_f   asc\");\n    CloudSolrStream stream = new CloudSolrStream(zkHost, \"collection1\", paramsA);\n    ReducerStream rstream = new ReducerStream(stream, new AscFieldComp(\"a_s\"));\n\n    List<Tuple> tuples = getTuples(rstream);\n\n    assert(tuples.size() == 3);\n    assertOrder(tuples, 0,3,4);\n\n    Tuple t0 = tuples.get(0);\n    List<Map> maps0 = t0.getMaps();\n    assertMaps(maps0, 0, 2, 1, 9);\n\n    Tuple t1 = tuples.get(1);\n    List<Map> maps1 = t1.getMaps();\n    assertMaps(maps1, 3, 5, 7, 8);\n\n    Tuple t2 = tuples.get(2);\n    List<Map> maps2 = t2.getMaps();\n    assertMaps(maps2, 4, 6);\n\n\n\n    del(\"*:*\");\n    commit();\n  }\n\n","sourceOld":"  private void testReducerStream() throws Exception {\n\n    indexr(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\");\n    indexr(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\");\n    indexr(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\");\n    indexr(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\");\n    indexr(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\");\n    indexr(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\");\n    indexr(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\");\n    indexr(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\");\n    indexr(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\");\n    indexr(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\");\n\n    commit();\n\n    String zkHost = zkServer.getZkAddress();\n\n    //Test with spaces in the parameter lists.\n    Map paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s, a_i,  a_f\",\"sort\", \"a_s asc  ,  a_f   asc\");\n    CloudSolrStream stream = new CloudSolrStream(zkHost, \"collection1\", paramsA);\n    ReducerStream rstream = new ReducerStream(stream, new AscFieldComp(\"a_s\"));\n\n    List<Tuple> tuples = getTuples(rstream);\n\n    assert(tuples.size() == 3);\n    assertOrder(tuples, 0,3,4);\n\n    Tuple t0 = tuples.get(0);\n    List<Map> maps0 = t0.getMaps();\n    assertMaps(maps0, 0, 2,1, 9);\n\n    Tuple t1 = tuples.get(1);\n    List<Map> maps1 = t1.getMaps();\n    assertMaps(maps1, 3, 5, 7, 8);\n\n    Tuple t2 = tuples.get(2);\n    List<Map> maps2 = t2.getMaps();\n    assertMaps(maps2, 4, 6);\n\n\n\n    del(\"*:*\");\n    commit();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f00f1c5fad501b66705121feb623f8cfbb6712f9","date":1431347838,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#testReducerStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/StreamingTest#testReducerStream().mjava","sourceNew":"  private void testReducerStream() throws Exception {\n\n    indexr(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\");\n    indexr(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\");\n    indexr(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\");\n    indexr(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\");\n    indexr(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\");\n    indexr(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\");\n    indexr(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\");\n    indexr(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\");\n    indexr(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\");\n    indexr(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\");\n\n    commit();\n\n    String zkHost = zkServer.getZkAddress();\n    streamFactory.withCollectionZkHost(\"collection1\", zkHost);\n\n    //Test with spaces in the parameter lists.\n    Map paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s, a_i,  a_f\",\"sort\", \"a_s asc  ,  a_f   asc\");\n    CloudSolrStream stream = new CloudSolrStream(zkHost, \"collection1\", paramsA);\n    ReducerStream rstream = new ReducerStream(stream, new FieldComparator(\"a_s\",ComparatorOrder.ASCENDING));\n\n    List<Tuple> tuples = getTuples(rstream);\n\n    assert(tuples.size() == 3);\n    assertOrder(tuples, 0,3,4);\n\n    Tuple t0 = tuples.get(0);\n    List<Map> maps0 = t0.getMaps();\n    assertMaps(maps0, 0, 2, 1, 9);\n\n    Tuple t1 = tuples.get(1);\n    List<Map> maps1 = t1.getMaps();\n    assertMaps(maps1, 3, 5, 7, 8);\n\n    Tuple t2 = tuples.get(2);\n    List<Map> maps2 = t2.getMaps();\n    assertMaps(maps2, 4, 6);\n\n\n\n    del(\"*:*\");\n    commit();\n  }\n\n","sourceOld":"  private void testReducerStream() throws Exception {\n\n    indexr(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\");\n    indexr(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\");\n    indexr(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\");\n    indexr(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\");\n    indexr(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\");\n    indexr(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\");\n    indexr(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\");\n    indexr(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\");\n    indexr(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\");\n    indexr(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\");\n\n    commit();\n\n    String zkHost = zkServer.getZkAddress();\n\n    //Test with spaces in the parameter lists.\n    Map paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s, a_i,  a_f\",\"sort\", \"a_s asc  ,  a_f   asc\");\n    CloudSolrStream stream = new CloudSolrStream(zkHost, \"collection1\", paramsA);\n    ReducerStream rstream = new ReducerStream(stream, new AscFieldComp(\"a_s\"));\n\n    List<Tuple> tuples = getTuples(rstream);\n\n    assert(tuples.size() == 3);\n    assertOrder(tuples, 0,3,4);\n\n    Tuple t0 = tuples.get(0);\n    List<Map> maps0 = t0.getMaps();\n    assertMaps(maps0, 0, 2, 1, 9);\n\n    Tuple t1 = tuples.get(1);\n    List<Map> maps1 = t1.getMaps();\n    assertMaps(maps1, 3, 5, 7, 8);\n\n    Tuple t2 = tuples.get(2);\n    List<Map> maps2 = t2.getMaps();\n    assertMaps(maps2, 4, 6);\n\n\n\n    del(\"*:*\");\n    commit();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"f00f1c5fad501b66705121feb623f8cfbb6712f9":["6127e3b5c60a3982abec2dfd5c289d3f6a64194d"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","42f03b407cd85abd6edd2a1fe7cab9990164aa4b"],"42f03b407cd85abd6edd2a1fe7cab9990164aa4b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6127e3b5c60a3982abec2dfd5c289d3f6a64194d":["42f03b407cd85abd6edd2a1fe7cab9990164aa4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f00f1c5fad501b66705121feb623f8cfbb6712f9"]},"commit2Childs":{"f00f1c5fad501b66705121feb623f8cfbb6712f9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"42f03b407cd85abd6edd2a1fe7cab9990164aa4b":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","6127e3b5c60a3982abec2dfd5c289d3f6a64194d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","42f03b407cd85abd6edd2a1fe7cab9990164aa4b"],"6127e3b5c60a3982abec2dfd5c289d3f6a64194d":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}