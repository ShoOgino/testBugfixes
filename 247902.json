{"path":"solr/core/src/test/org/apache/solr/cloud/TestRebalanceLeaders#setPropWithAdminRequest(Slice,Replica,String).mjava","commits":[{"id":"73fd358e8ec697393d56617f4d9cedaca74dca14","date":1547954439,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRebalanceLeaders#setPropWithAdminRequest(Slice,Replica,String).mjava","pathOld":"/dev/null","sourceNew":"  void setPropWithAdminRequest(Slice slice, Replica rep, String prop) throws IOException, SolrServerException {\n    boolean setUnique = (prop.toLowerCase(Locale.ROOT).equals(\"preferredleader\") == false);\n    CollectionAdminRequest.AddReplicaProp addProp =\n        CollectionAdminRequest.addReplicaProperty(COLLECTION_NAME, slice.getName(), rep.getName(), prop, \"true\");\n    if (setUnique) {\n      addProp.setShardUnique(true);\n    }\n    CollectionAdminResponse resp = addProp.process(cluster.getSolrClient());\n    assertEquals(0, resp.getStatus());\n    String propLC = prop.toLowerCase(Locale.ROOT);\n    waitForState(\"Expecting property '\" + prop + \"'to appear on replica \" + rep.getName(), COLLECTION_NAME,\n        (n, c) -> \"true\".equals(c.getReplica(rep.getName()).getProperty(propLC)));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c89f1ef80a9432f4eabaeda9a1e135cd72e60836","date":1547972642,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRebalanceLeaders#setPropWithAdminRequest(Slice,Replica,String).mjava","pathOld":"/dev/null","sourceNew":"  void setPropWithAdminRequest(Slice slice, Replica rep, String prop) throws IOException, SolrServerException {\n    boolean setUnique = (prop.toLowerCase(Locale.ROOT).equals(\"preferredleader\") == false);\n    CollectionAdminRequest.AddReplicaProp addProp =\n        CollectionAdminRequest.addReplicaProperty(COLLECTION_NAME, slice.getName(), rep.getName(), prop, \"true\");\n    if (setUnique) {\n      addProp.setShardUnique(true);\n    }\n    CollectionAdminResponse resp = addProp.process(cluster.getSolrClient());\n    assertEquals(0, resp.getStatus());\n    String propLC = prop.toLowerCase(Locale.ROOT);\n    waitForState(\"Expecting property '\" + prop + \"'to appear on replica \" + rep.getName(), COLLECTION_NAME,\n        (n, c) -> \"true\".equals(c.getReplica(rep.getName()).getProperty(propLC)));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","73fd358e8ec697393d56617f4d9cedaca74dca14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"73fd358e8ec697393d56617f4d9cedaca74dca14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73fd358e8ec697393d56617f4d9cedaca74dca14"]},"commit2Childs":{"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","73fd358e8ec697393d56617f4d9cedaca74dca14"],"73fd358e8ec697393d56617f4d9cedaca74dca14":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}