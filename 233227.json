{"path":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","commits":[{"id":"979e22aa7c63c9dc651adf861610c7e444d45832","date":1454615713,"type":1,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1704c078ec59838c9d95d5bf5738b393b537494","date":1454693901,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62615e56c1409ee481e76cb3b7ba152e325d9241","date":1456163070,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"419a8f52c6635419beb951255cacbbb281044c57","date":1456189353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"268f09ed3a9a9b77003b15a5ae30386dc4e3721f","date":1483992000,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoMBean.Category.REPLICATION.toString(), this);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoMBean.Category.REPLICATION.toString(), this);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoMBean.Category.REPLICATION.toString(), this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"729cb470f975115d4c60517b2cb7c42e37a7a2e1","date":1492041760,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);\n  }\n\n","bugFix":null,"bugIntro":["3646ead588297558973dbd1162e69791e822b944"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoMBean.Category.REPLICATION.toString(), this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3646ead588297558973dbd1162e69791e822b944","date":1525482176,"type":3,"author":"Mark Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreContainer().getUpdateShardHandler().getDefaultHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);\n  }\n\n","bugFix":["729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7","date":1529486762,"type":5,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreContainer().getUpdateShardHandler().getDefaultHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n    this.updater = new Updater(msg(), core);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreContainer().getUpdateShardHandler().getDefaultHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","sourceNew":null,"sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreContainer().getUpdateShardHandler().getDefaultHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","sourceNew":null,"sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreContainer().getUpdateShardHandler().getDefaultHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["268f09ed3a9a9b77003b15a5ae30386dc4e3721f"],"268f09ed3a9a9b77003b15a5ae30386dc4e3721f":["419a8f52c6635419beb951255cacbbb281044c57"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","979e22aa7c63c9dc651adf861610c7e444d45832"],"419a8f52c6635419beb951255cacbbb281044c57":["979e22aa7c63c9dc651adf861610c7e444d45832","62615e56c1409ee481e76cb3b7ba152e325d9241"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["419a8f52c6635419beb951255cacbbb281044c57","268f09ed3a9a9b77003b15a5ae30386dc4e3721f"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["816521ebaad5add9cb96bb88c577394e2938c40b"],"816521ebaad5add9cb96bb88c577394e2938c40b":["268f09ed3a9a9b77003b15a5ae30386dc4e3721f"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["3646ead588297558973dbd1162e69791e822b944","ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7"],"3646ead588297558973dbd1162e69791e822b944":["729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"979e22aa7c63c9dc651adf861610c7e444d45832":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b1704c078ec59838c9d95d5bf5738b393b537494":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","979e22aa7c63c9dc651adf861610c7e444d45832"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7"],"ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7":["3646ead588297558973dbd1162e69791e822b944"],"62615e56c1409ee481e76cb3b7ba152e325d9241":["979e22aa7c63c9dc651adf861610c7e444d45832"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["3646ead588297558973dbd1162e69791e822b944","ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"268f09ed3a9a9b77003b15a5ae30386dc4e3721f":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","816521ebaad5add9cb96bb88c577394e2938c40b"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"419a8f52c6635419beb951255cacbbb281044c57":["268f09ed3a9a9b77003b15a5ae30386dc4e3721f","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["3646ead588297558973dbd1162e69791e822b944"],"816521ebaad5add9cb96bb88c577394e2938c40b":["729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"3646ead588297558973dbd1162e69791e822b944":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","979e22aa7c63c9dc651adf861610c7e444d45832","b1704c078ec59838c9d95d5bf5738b393b537494"],"979e22aa7c63c9dc651adf861610c7e444d45832":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","419a8f52c6635419beb951255cacbbb281044c57","b1704c078ec59838c9d95d5bf5738b393b537494","62615e56c1409ee481e76cb3b7ba152e325d9241"],"b1704c078ec59838c9d95d5bf5738b393b537494":[],"62615e56c1409ee481e76cb3b7ba152e325d9241":["419a8f52c6635419beb951255cacbbb281044c57"],"ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","1e6acbaae7af722f17204ceccf0f7db5753eccf3","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","b1704c078ec59838c9d95d5bf5738b393b537494","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}