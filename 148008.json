{"path":"solr/solrj/src/java/org/apache/solr/recipe/Clause#parse(String,Map).mjava","commits":[{"id":"a834430db908aba7bd03ef98a893e56e820672c5","date":1490096578,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/recipe/Clause#parse(String,Map).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/recipe/Clause#parse(String,Object).mjava","sourceNew":"  Condition parse(String s, Map m) {\n    Object expectedVal = null;\n    Object val = m.get(s);\n    try {\n      String conditionName = s.trim();\n      String value = val == null ? null : String.valueOf(val).trim();\n      Operand operand = null;\n      if ((expectedVal = Operand.ANY.parse(value)) != null) {\n        operand = Operand.ANY;\n      } else if ((expectedVal = NOT_EQUAL.parse(value)) != null) {\n        operand = NOT_EQUAL;\n      } else if ((expectedVal = GREATER_THAN.parse(value)) != null) {\n        operand = GREATER_THAN;\n      } else if ((expectedVal = LESS_THAN.parse(value)) != null) {\n        operand = LESS_THAN;\n      } else {\n        operand = EQUAL;\n        expectedVal = EQUAL.parse(value);\n      }\n\n      return new Condition(conditionName, expectedVal, operand);\n\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"Invalid tag : \" + s + \":\" + val, e);\n    }\n  }\n\n","sourceOld":"  Condition parse(String s, Object o) {\n    Object expectedVal;\n    String value = null;\n    try {\n      String conditionName = s.trim();\n      value = String.valueOf(o).trim();\n      Operand operand = null;\n      if ((expectedVal = NOT_EQUAL.match(value)) != null) {\n        operand = NOT_EQUAL;\n      } else if ((expectedVal = GREATER_THAN.match(value)) != null) {\n        operand = GREATER_THAN;\n      } else if ((expectedVal = LESS_THAN.match(value)) != null) {\n        operand = LESS_THAN;\n      } else {\n        operand = EQUAL;\n        expectedVal = EQUAL.match(value);\n      }\n\n      return new Condition(conditionName, expectedVal, operand);\n\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"Invalid tag : \" + s + \":\" + value, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65b36a7cc02287c46274765c657d23db7e5ce163","date":1490601578,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/recipe/Clause#parse(String,Map).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/recipe/Clause#parse(String,Map).mjava","sourceNew":"  Condition parse(String s, Map m) {\n    Object expectedVal = null;\n    Object val = m.get(s);\n    try {\n      String conditionName = s.trim();\n      String value = val == null ? null : String.valueOf(val).trim();\n      Operand operand = null;\n      if ((expectedVal = WILDCARD.parse(value)) != null) {\n        operand = WILDCARD;\n      } else if ((expectedVal = NOT_EQUAL.parse(value)) != null) {\n        operand = NOT_EQUAL;\n      } else if ((expectedVal = GREATER_THAN.parse(value)) != null) {\n        operand = GREATER_THAN;\n      } else if ((expectedVal = LESS_THAN.parse(value)) != null) {\n        operand = LESS_THAN;\n      } else {\n        operand = EQUAL;\n        expectedVal = EQUAL.parse(value);\n      }\n\n      return new Condition(conditionName, expectedVal, operand);\n\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"Invalid tag : \" + s + \":\" + val, e);\n    }\n  }\n\n","sourceOld":"  Condition parse(String s, Map m) {\n    Object expectedVal = null;\n    Object val = m.get(s);\n    try {\n      String conditionName = s.trim();\n      String value = val == null ? null : String.valueOf(val).trim();\n      Operand operand = null;\n      if ((expectedVal = Operand.ANY.parse(value)) != null) {\n        operand = Operand.ANY;\n      } else if ((expectedVal = NOT_EQUAL.parse(value)) != null) {\n        operand = NOT_EQUAL;\n      } else if ((expectedVal = GREATER_THAN.parse(value)) != null) {\n        operand = GREATER_THAN;\n      } else if ((expectedVal = LESS_THAN.parse(value)) != null) {\n        operand = LESS_THAN;\n      } else {\n        operand = EQUAL;\n        expectedVal = EQUAL.parse(value);\n      }\n\n      return new Condition(conditionName, expectedVal, operand);\n\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"Invalid tag : \" + s + \":\" + val, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e12a337a9a98e388c3a5bca9c8256d21c13781f9","date":1492093671,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/recipe/Clause#parse(String,Map).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/recipe/Clause#parse(String,Map).mjava","sourceNew":"  static Condition parse(String s, Map m) {\n    Object expectedVal = null;\n    Object val = m.get(s);\n    try {\n      String conditionName = s.trim();\n      String value = val == null ? null : String.valueOf(val).trim();\n      Operand operand = null;\n      if ((expectedVal = WILDCARD.parse(value)) != null) {\n        operand = WILDCARD;\n      } else if ((expectedVal = NOT_EQUAL.parse(value)) != null) {\n        operand = NOT_EQUAL;\n      } else if ((expectedVal = GREATER_THAN.parse(value)) != null) {\n        operand = GREATER_THAN;\n      } else if ((expectedVal = LESS_THAN.parse(value)) != null) {\n        operand = LESS_THAN;\n      } else {\n        operand = EQUAL;\n        expectedVal = EQUAL.parse(value);\n      }\n\n      return new Condition(conditionName, expectedVal, operand);\n\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"Invalid tag : \" + s + \":\" + val, e);\n    }\n  }\n\n","sourceOld":"  Condition parse(String s, Map m) {\n    Object expectedVal = null;\n    Object val = m.get(s);\n    try {\n      String conditionName = s.trim();\n      String value = val == null ? null : String.valueOf(val).trim();\n      Operand operand = null;\n      if ((expectedVal = WILDCARD.parse(value)) != null) {\n        operand = WILDCARD;\n      } else if ((expectedVal = NOT_EQUAL.parse(value)) != null) {\n        operand = NOT_EQUAL;\n      } else if ((expectedVal = GREATER_THAN.parse(value)) != null) {\n        operand = GREATER_THAN;\n      } else if ((expectedVal = LESS_THAN.parse(value)) != null) {\n        operand = LESS_THAN;\n      } else {\n        operand = EQUAL;\n        expectedVal = EQUAL.parse(value);\n      }\n\n      return new Condition(conditionName, expectedVal, operand);\n\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"Invalid tag : \" + s + \":\" + val, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"653c1ca305e0065ee988a09e59c8316b8cde02fd","date":1492506780,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#parse(String,Map).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/recipe/Clause#parse(String,Map).mjava","sourceNew":"  static Condition parse(String s, Map m) {\n    Object expectedVal = null;\n    Object val = m.get(s);\n    try {\n      String conditionName = s.trim();\n      String value = val == null ? null : String.valueOf(val).trim();\n      Operand operand = null;\n      if ((expectedVal = WILDCARD.parse(value)) != null) {\n        operand = WILDCARD;\n      } else if ((expectedVal = NOT_EQUAL.parse(value)) != null) {\n        operand = NOT_EQUAL;\n      } else if ((expectedVal = GREATER_THAN.parse(value)) != null) {\n        operand = GREATER_THAN;\n      } else if ((expectedVal = LESS_THAN.parse(value)) != null) {\n        operand = LESS_THAN;\n      } else {\n        operand = EQUAL;\n        expectedVal = EQUAL.parse(value);\n      }\n\n      return new Condition(conditionName, expectedVal, operand);\n\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"Invalid tag : \" + s + \":\" + val, e);\n    }\n  }\n\n","sourceOld":"  static Condition parse(String s, Map m) {\n    Object expectedVal = null;\n    Object val = m.get(s);\n    try {\n      String conditionName = s.trim();\n      String value = val == null ? null : String.valueOf(val).trim();\n      Operand operand = null;\n      if ((expectedVal = WILDCARD.parse(value)) != null) {\n        operand = WILDCARD;\n      } else if ((expectedVal = NOT_EQUAL.parse(value)) != null) {\n        operand = NOT_EQUAL;\n      } else if ((expectedVal = GREATER_THAN.parse(value)) != null) {\n        operand = GREATER_THAN;\n      } else if ((expectedVal = LESS_THAN.parse(value)) != null) {\n        operand = LESS_THAN;\n      } else {\n        operand = EQUAL;\n        expectedVal = EQUAL.parse(value);\n      }\n\n      return new Condition(conditionName, expectedVal, operand);\n\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"Invalid tag : \" + s + \":\" + val, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"65b36a7cc02287c46274765c657d23db7e5ce163":["a834430db908aba7bd03ef98a893e56e820672c5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"653c1ca305e0065ee988a09e59c8316b8cde02fd":["e12a337a9a98e388c3a5bca9c8256d21c13781f9"],"e12a337a9a98e388c3a5bca9c8256d21c13781f9":["65b36a7cc02287c46274765c657d23db7e5ce163"],"a834430db908aba7bd03ef98a893e56e820672c5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"65b36a7cc02287c46274765c657d23db7e5ce163":["e12a337a9a98e388c3a5bca9c8256d21c13781f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a834430db908aba7bd03ef98a893e56e820672c5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"653c1ca305e0065ee988a09e59c8316b8cde02fd":[],"e12a337a9a98e388c3a5bca9c8256d21c13781f9":["653c1ca305e0065ee988a09e59c8316b8cde02fd"],"a834430db908aba7bd03ef98a893e56e820672c5":["65b36a7cc02287c46274765c657d23db7e5ce163"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["653c1ca305e0065ee988a09e59c8316b8cde02fd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}