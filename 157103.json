{"path":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/QueryParserWrapper#escape(String).mjava","commits":[{"id":"e8a848e758754282137f42bf85793c278e250390","date":1249640668,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/QueryParserWrapper#escape(String).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/QueryParserWrapper#escape(String).mjava","sourceNew":"  /**\n   * Returns a String where those characters that QueryParser expects to be\n   * escaped are escaped by a preceding <code>\\</code>.\n   */\n  public static String escape(String s) {\n    StringBuffer sb = new StringBuffer();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      // These characters are part of the query syntax and must be escaped\n      if (c == '\\\\' || c == '+' || c == '-' || c == '!' || c == '(' || c == ')'\n          || c == ':' || c == '^' || c == '[' || c == ']' || c == '\\\"'\n          || c == '{' || c == '}' || c == '~' || c == '*' || c == '?'\n          || c == '|' || c == '&') {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  /**\n   * Returns a String where those characters that QueryParser expects to be\n   * escaped are escaped by a preceding <code>\\</code>.\n   */\n  public static String escape(String s) {\n    StringBuffer sb = new StringBuffer();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      // These characters are part of the query syntax and must be escaped\n      if (c == '\\\\' || c == '+' || c == '-' || c == '!' || c == '(' || c == ')'\n          || c == ':' || c == '^' || c == '[' || c == ']' || c == '\\\"'\n          || c == '{' || c == '}' || c == '~' || c == '*' || c == '?'\n          || c == '|' || c == '&') {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c","date":1254521470,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/QueryParserWrapper#escape(String).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/QueryParserWrapper#escape(String).mjava","sourceNew":"  /**\n   * Returns a String where those characters that QueryParser expects to be\n   * escaped are escaped by a preceding <code>\\</code>.\n   */\n  public static String escape(String s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      // These characters are part of the query syntax and must be escaped\n      if (c == '\\\\' || c == '+' || c == '-' || c == '!' || c == '(' || c == ')'\n          || c == ':' || c == '^' || c == '[' || c == ']' || c == '\\\"'\n          || c == '{' || c == '}' || c == '~' || c == '*' || c == '?'\n          || c == '|' || c == '&') {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  /**\n   * Returns a String where those characters that QueryParser expects to be\n   * escaped are escaped by a preceding <code>\\</code>.\n   */\n  public static String escape(String s) {\n    StringBuffer sb = new StringBuffer();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      // These characters are part of the query syntax and must be escaped\n      if (c == '\\\\' || c == '+' || c == '-' || c == '!' || c == '(' || c == ')'\n          || c == ':' || c == '^' || c == '[' || c == ']' || c == '\\\"'\n          || c == '{' || c == '}' || c == '~' || c == '*' || c == '?'\n          || c == '|' || c == '&') {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/QueryParserWrapper#escape(String).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/QueryParserWrapper#escape(String).mjava","sourceNew":"  /**\n   * Returns a String where those characters that QueryParser expects to be\n   * escaped are escaped by a preceding <code>\\</code>.\n   */\n  public static String escape(String s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      // These characters are part of the query syntax and must be escaped\n      if (c == '\\\\' || c == '+' || c == '-' || c == '!' || c == '(' || c == ')'\n          || c == ':' || c == '^' || c == '[' || c == ']' || c == '\\\"'\n          || c == '{' || c == '}' || c == '~' || c == '*' || c == '?'\n          || c == '|' || c == '&') {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  /**\n   * Returns a String where those characters that QueryParser expects to be\n   * escaped are escaped by a preceding <code>\\</code>.\n   */\n  public static String escape(String s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      // These characters are part of the query syntax and must be escaped\n      if (c == '\\\\' || c == '+' || c == '-' || c == '!' || c == '(' || c == ')'\n          || c == ':' || c == '^' || c == '[' || c == ']' || c == '\\\"'\n          || c == '{' || c == '}' || c == '~' || c == '*' || c == '?'\n          || c == '|' || c == '&') {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8a848e758754282137f42bf85793c278e250390":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["e8a848e758754282137f42bf85793c278e250390"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"]},"commit2Childs":{"e8a848e758754282137f42bf85793c278e250390":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e8a848e758754282137f42bf85793c278e250390"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}