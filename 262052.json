{"path":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTerms#iterator().mjava","commits":[{"id":"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82","date":1428522487,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTerms#iterator().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public TermsEnum iterator() throws IOException {\n      TermsEnum termsEnum = super.iterator();\n      assert termsEnum != null;\n      return new AssertingTermsEnum(termsEnum);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"086ffe31d8fba0110227db122974163709ecc1b4","date":1509678141,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTerms#iterator().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTerms#iterator().mjava","sourceNew":"    @Override\n    public TermsEnum iterator() throws IOException {\n      TermsEnum termsEnum = super.iterator();\n      assert termsEnum != null;\n      return new AssertingTermsEnum(termsEnum, hasFreqs());\n    }\n\n","sourceOld":"    @Override\n    public TermsEnum iterator() throws IOException {\n      TermsEnum termsEnum = super.iterator();\n      assert termsEnum != null;\n      return new AssertingTermsEnum(termsEnum);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d523b8189b211dd1630166aa77b8c88bb48b3fcc","date":1510144168,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTerms#iterator().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTerms#iterator().mjava","sourceNew":"    @Override\n    public TermsEnum iterator() throws IOException {\n      TermsEnum termsEnum = super.iterator();\n      assert termsEnum != null;\n      return new AssertingTermsEnum(termsEnum, hasFreqs());\n    }\n\n","sourceOld":"    @Override\n    public TermsEnum iterator() throws IOException {\n      TermsEnum termsEnum = super.iterator();\n      assert termsEnum != null;\n      return new AssertingTermsEnum(termsEnum);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"086ffe31d8fba0110227db122974163709ecc1b4":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82","086ffe31d8fba0110227db122974163709ecc1b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"]},"commit2Childs":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["086ffe31d8fba0110227db122974163709ecc1b4","d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"086ffe31d8fba0110227db122974163709ecc1b4":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}