{"path":"solr/core/src/test/org/apache/hadoop/fs/FileUtil#chmod(String,String,boolean).mjava","commits":[{"id":"6bdf107cf16be0f22504ae184fed81596665a244","date":1576012524,"type":0,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/fs/FileUtil#chmod(String,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Change the permissions on a file / directory, recursively, if\n   * needed.\n   * @param filename name of the file whose permissions are to change\n   * @param perm permission string\n   * @param recursive true, if permissions should be changed recursively\n   * @return the exit code from the command.\n   * @throws IOException exception on chmod\n   */\n  public static int chmod(String filename, String perm, boolean recursive)\n      throws IOException {\n    String [] cmd = Shell.getSetPermissionCommand(perm, recursive);\n    String[] args = new String[cmd.length + 1];\n    System.arraycopy(cmd, 0, args, 0, cmd.length);\n    args[cmd.length] = new File(filename).getPath();\n    ShellCommandExecutor shExec = new ShellCommandExecutor(args);\n    try {\n      shExec.execute();\n    }catch(IOException e) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"Error while changing permission : \" + filename\n            +\" Exception: \" + StringUtils.stringifyException(e));\n      }\n    }\n    return shExec.getExitCode();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a229cb50768e988c50a2106bdae3a92154f428bf","date":1576051038,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/hadoop/fs/FileUtil#chmod(String,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Change the permissions on a file / directory, recursively, if\n   * needed.\n   * @param filename name of the file whose permissions are to change\n   * @param perm permission string\n   * @param recursive true, if permissions should be changed recursively\n   * @return the exit code from the command.\n   * @throws IOException exception on chmod\n   */\n  public static int chmod(String filename, String perm, boolean recursive)\n      throws IOException {\n    String [] cmd = Shell.getSetPermissionCommand(perm, recursive);\n    String[] args = new String[cmd.length + 1];\n    System.arraycopy(cmd, 0, args, 0, cmd.length);\n    args[cmd.length] = new File(filename).getPath();\n    ShellCommandExecutor shExec = new ShellCommandExecutor(args);\n    try {\n      shExec.execute();\n    }catch(IOException e) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"Error while changing permission : \" + filename\n            +\" Exception: \" + StringUtils.stringifyException(e));\n      }\n    }\n    return shExec.getExitCode();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/fs/FileUtil#chmod(String,String,boolean).mjava","pathOld":"solr/core/src/test/org/apache/hadoop/fs/FileUtil#chmod(String,String,boolean).mjava","sourceNew":"  /**\n   * Change the permissions on a file / directory, recursively, if\n   * needed.\n   * @param filename name of the file whose permissions are to change\n   * @param perm permission string\n   * @param recursive true, if permissions should be changed recursively\n   * @return the exit code from the command.\n   * @throws IOException exception on chmod\n   */\n  public static int chmod(String filename, String perm, boolean recursive)\n      throws IOException {\n    String [] cmd = Shell.getSetPermissionCommand(perm, recursive);\n    String[] args = new String[cmd.length + 1];\n    System.arraycopy(cmd, 0, args, 0, cmd.length);\n    args[cmd.length] = new File(filename).getPath();\n    ShellCommandExecutor shExec = new ShellCommandExecutor(args);\n    try {\n      shExec.execute();\n    }catch(IOException e) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"Error while changing permission : {} Exception: {}\", filename, StringUtils.stringifyException(e));\n      }\n    }\n    return shExec.getExitCode();\n  }\n\n","sourceOld":"  /**\n   * Change the permissions on a file / directory, recursively, if\n   * needed.\n   * @param filename name of the file whose permissions are to change\n   * @param perm permission string\n   * @param recursive true, if permissions should be changed recursively\n   * @return the exit code from the command.\n   * @throws IOException exception on chmod\n   */\n  public static int chmod(String filename, String perm, boolean recursive)\n      throws IOException {\n    String [] cmd = Shell.getSetPermissionCommand(perm, recursive);\n    String[] args = new String[cmd.length + 1];\n    System.arraycopy(cmd, 0, args, 0, cmd.length);\n    args[cmd.length] = new File(filename).getPath();\n    ShellCommandExecutor shExec = new ShellCommandExecutor(args);\n    try {\n      shExec.execute();\n    }catch(IOException e) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"Error while changing permission : \" + filename\n            +\" Exception: \" + StringUtils.stringifyException(e));\n      }\n    }\n    return shExec.getExitCode();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a229cb50768e988c50a2106bdae3a92154f428bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6bdf107cf16be0f22504ae184fed81596665a244"],"6bdf107cf16be0f22504ae184fed81596665a244":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["6bdf107cf16be0f22504ae184fed81596665a244"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"]},"commit2Childs":{"a229cb50768e988c50a2106bdae3a92154f428bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a229cb50768e988c50a2106bdae3a92154f428bf","6bdf107cf16be0f22504ae184fed81596665a244"],"6bdf107cf16be0f22504ae184fed81596665a244":["a229cb50768e988c50a2106bdae3a92154f428bf","a966532d92cf9ba2856f15a8140151bb6b518e4b"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}