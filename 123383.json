{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ensureOpen().mjava","commits":[{"id":"6549d5ea6b7b25525309b981de3ec92b4dff99d1","date":1408666035,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ensureOpen().mjava","pathOld":"/dev/null","sourceNew":"  private synchronized void ensureOpen() throws IOException {\n    if (writer == null) {\n      if (searcherMgr != null) {\n        searcherMgr.close();\n        searcherMgr = null;\n      }\n      writer = new IndexWriter(dir,\n          getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.CREATE));\n      searcherMgr = new SearcherManager(writer, true, null);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["cae842a2530cf22a621c67912cbf15df484787f6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7b516a692d03225c8f0e81a13ceed2dc32bb457d","date":1453411951,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ensureOpen().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ensureOpen().mjava","sourceNew":"  private synchronized void ensureOpen() throws IOException {\n    if (writer == null) {\n      if (searcherMgr != null) {\n        searcherMgr.close();\n        searcherMgr = null;\n      }\n      writer = new IndexWriter(dir,\n          getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.CREATE));\n      searcherMgr = new SearcherManager(writer, null);\n    }\n  }\n\n","sourceOld":"  private synchronized void ensureOpen() throws IOException {\n    if (writer == null) {\n      if (searcherMgr != null) {\n        searcherMgr.close();\n        searcherMgr = null;\n      }\n      writer = new IndexWriter(dir,\n          getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.CREATE));\n      searcherMgr = new SearcherManager(writer, true, null);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e15af9ab52794c4f3888b19ff3cf55ccea043db2","date":1479337431,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ensureOpen().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ensureOpen().mjava","sourceNew":"  private synchronized void ensureOpen() throws IOException {\n    if (writer == null) {\n      if (DirectoryReader.indexExists(dir)) {\n        // Already built; open it:\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.APPEND));\n      } else {\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.CREATE));\n      }\n      SearcherManager oldSearcherMgr = searcherMgr;\n      searcherMgr = new SearcherManager(writer, null);\n      if (oldSearcherMgr != null) {\n        oldSearcherMgr.close();\n      }\n    }\n  }\n\n","sourceOld":"  private synchronized void ensureOpen() throws IOException {\n    if (writer == null) {\n      if (searcherMgr != null) {\n        searcherMgr.close();\n        searcherMgr = null;\n      }\n      writer = new IndexWriter(dir,\n          getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.CREATE));\n      searcherMgr = new SearcherManager(writer, null);\n    }\n  }\n\n","bugFix":null,"bugIntro":["cae842a2530cf22a621c67912cbf15df484787f6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2e859e664a65796dadf8aaf65db6f66f3a885368","date":1479487334,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ensureOpen().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ensureOpen().mjava","sourceNew":"  private synchronized void ensureOpen() throws IOException {\n    if (writer == null) {\n      if (DirectoryReader.indexExists(dir)) {\n        // Already built; open it:\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.APPEND));\n      } else {\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.CREATE));\n      }\n      SearcherManager oldSearcherMgr = searcherMgr;\n      searcherMgr = new SearcherManager(writer, null);\n      if (oldSearcherMgr != null) {\n        oldSearcherMgr.close();\n      }\n    }\n  }\n\n","sourceOld":"  private synchronized void ensureOpen() throws IOException {\n    if (writer == null) {\n      if (searcherMgr != null) {\n        searcherMgr.close();\n        searcherMgr = null;\n      }\n      writer = new IndexWriter(dir,\n          getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.CREATE));\n      searcherMgr = new SearcherManager(writer, null);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cbf4928b28a4db03465b529b38a64ef29c91735","date":1483044697,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ensureOpen().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ensureOpen().mjava","sourceNew":"  private synchronized void ensureOpen() throws IOException {\n    if (writer == null) {\n      if (DirectoryReader.indexExists(dir)) {\n        // Already built; open it:\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.APPEND));\n      } else {\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.CREATE));\n      }\n      synchronized (searcherMgrLock) {\n        SearcherManager oldSearcherMgr = searcherMgr;\n        searcherMgr = new SearcherManager(writer, null);\n        if (oldSearcherMgr != null) {\n          oldSearcherMgr.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private synchronized void ensureOpen() throws IOException {\n    if (writer == null) {\n      if (DirectoryReader.indexExists(dir)) {\n        // Already built; open it:\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.APPEND));\n      } else {\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.CREATE));\n      }\n      SearcherManager oldSearcherMgr = searcherMgr;\n      searcherMgr = new SearcherManager(writer, null);\n      if (oldSearcherMgr != null) {\n        oldSearcherMgr.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["cae842a2530cf22a621c67912cbf15df484787f6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"de0b5d8cac74be1676bcc2f805bc0d0630176659","date":1483048659,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ensureOpen().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ensureOpen().mjava","sourceNew":"  private synchronized void ensureOpen() throws IOException {\n    if (writer == null) {\n      if (DirectoryReader.indexExists(dir)) {\n        // Already built; open it:\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.APPEND));\n      } else {\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.CREATE));\n      }\n      synchronized (searcherMgrLock) {\n        SearcherManager oldSearcherMgr = searcherMgr;\n        searcherMgr = new SearcherManager(writer, null);\n        if (oldSearcherMgr != null) {\n          oldSearcherMgr.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private synchronized void ensureOpen() throws IOException {\n    if (writer == null) {\n      if (DirectoryReader.indexExists(dir)) {\n        // Already built; open it:\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.APPEND));\n      } else {\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.CREATE));\n      }\n      SearcherManager oldSearcherMgr = searcherMgr;\n      searcherMgr = new SearcherManager(writer, null);\n      if (oldSearcherMgr != null) {\n        oldSearcherMgr.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ensureOpen().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ensureOpen().mjava","sourceNew":"  private synchronized void ensureOpen() throws IOException {\n    if (writer == null) {\n      if (DirectoryReader.indexExists(dir)) {\n        // Already built; open it:\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.APPEND));\n      } else {\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.CREATE));\n      }\n      synchronized (searcherMgrLock) {\n        SearcherManager oldSearcherMgr = searcherMgr;\n        searcherMgr = new SearcherManager(writer, null);\n        if (oldSearcherMgr != null) {\n          oldSearcherMgr.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private synchronized void ensureOpen() throws IOException {\n    if (writer == null) {\n      if (DirectoryReader.indexExists(dir)) {\n        // Already built; open it:\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.APPEND));\n      } else {\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.CREATE));\n      }\n      SearcherManager oldSearcherMgr = searcherMgr;\n      searcherMgr = new SearcherManager(writer, null);\n      if (oldSearcherMgr != null) {\n        oldSearcherMgr.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cae842a2530cf22a621c67912cbf15df484787f6","date":1578529716,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ensureOpen().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ensureOpen().mjava","sourceNew":"  private void ensureOpen() throws IOException {\n    synchronized (searcherMgrLock) {\n      if (writer == null) {\n        if (DirectoryReader.indexExists(dir)) {\n          // Already built; open it:\n          writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.APPEND));\n        } else {\n          writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.CREATE));\n        }\n\n        SearcherManager oldSearcherMgr = searcherMgr;\n        searcherMgr = new SearcherManager(writer, null);\n        if (oldSearcherMgr != null) {\n          oldSearcherMgr.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private synchronized void ensureOpen() throws IOException {\n    if (writer == null) {\n      if (DirectoryReader.indexExists(dir)) {\n        // Already built; open it:\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.APPEND));\n      } else {\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.CREATE));\n      }\n      synchronized (searcherMgrLock) {\n        SearcherManager oldSearcherMgr = searcherMgr;\n        searcherMgr = new SearcherManager(writer, null);\n        if (oldSearcherMgr != null) {\n          oldSearcherMgr.close();\n        }\n      }\n    }\n  }\n\n","bugFix":["e15af9ab52794c4f3888b19ff3cf55ccea043db2","6549d5ea6b7b25525309b981de3ec92b4dff99d1","5cbf4928b28a4db03465b529b38a64ef29c91735"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da93834e39ce341a13e42b611d0a83bd3114bba","date":1578567362,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ensureOpen().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#ensureOpen().mjava","sourceNew":"  private void ensureOpen() throws IOException {\n    synchronized (searcherMgrLock) {\n      if (writer == null) {\n        if (DirectoryReader.indexExists(dir)) {\n          // Already built; open it:\n          writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.APPEND));\n        } else {\n          writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.CREATE));\n        }\n\n        SearcherManager oldSearcherMgr = searcherMgr;\n        searcherMgr = new SearcherManager(writer, null);\n        if (oldSearcherMgr != null) {\n          oldSearcherMgr.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private synchronized void ensureOpen() throws IOException {\n    if (writer == null) {\n      if (DirectoryReader.indexExists(dir)) {\n        // Already built; open it:\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.APPEND));\n      } else {\n        writer = new IndexWriter(dir, getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.CREATE));\n      }\n      synchronized (searcherMgrLock) {\n        SearcherManager oldSearcherMgr = searcherMgr;\n        searcherMgr = new SearcherManager(writer, null);\n        if (oldSearcherMgr != null) {\n          oldSearcherMgr.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"de0b5d8cac74be1676bcc2f805bc0d0630176659":["e15af9ab52794c4f3888b19ff3cf55ccea043db2","5cbf4928b28a4db03465b529b38a64ef29c91735"],"cae842a2530cf22a621c67912cbf15df484787f6":["de0b5d8cac74be1676bcc2f805bc0d0630176659"],"6549d5ea6b7b25525309b981de3ec92b4dff99d1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b516a692d03225c8f0e81a13ceed2dc32bb457d":["6549d5ea6b7b25525309b981de3ec92b4dff99d1"],"1da93834e39ce341a13e42b611d0a83bd3114bba":["de0b5d8cac74be1676bcc2f805bc0d0630176659","cae842a2530cf22a621c67912cbf15df484787f6"],"e15af9ab52794c4f3888b19ff3cf55ccea043db2":["7b516a692d03225c8f0e81a13ceed2dc32bb457d"],"2e859e664a65796dadf8aaf65db6f66f3a885368":["7b516a692d03225c8f0e81a13ceed2dc32bb457d","e15af9ab52794c4f3888b19ff3cf55ccea043db2"],"5cbf4928b28a4db03465b529b38a64ef29c91735":["e15af9ab52794c4f3888b19ff3cf55ccea043db2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cae842a2530cf22a621c67912cbf15df484787f6"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["2e859e664a65796dadf8aaf65db6f66f3a885368","de0b5d8cac74be1676bcc2f805bc0d0630176659"]},"commit2Childs":{"de0b5d8cac74be1676bcc2f805bc0d0630176659":["cae842a2530cf22a621c67912cbf15df484787f6","1da93834e39ce341a13e42b611d0a83bd3114bba","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cae842a2530cf22a621c67912cbf15df484787f6":["1da93834e39ce341a13e42b611d0a83bd3114bba","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6549d5ea6b7b25525309b981de3ec92b4dff99d1":["7b516a692d03225c8f0e81a13ceed2dc32bb457d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6549d5ea6b7b25525309b981de3ec92b4dff99d1"],"7b516a692d03225c8f0e81a13ceed2dc32bb457d":["e15af9ab52794c4f3888b19ff3cf55ccea043db2","2e859e664a65796dadf8aaf65db6f66f3a885368"],"1da93834e39ce341a13e42b611d0a83bd3114bba":[],"e15af9ab52794c4f3888b19ff3cf55ccea043db2":["de0b5d8cac74be1676bcc2f805bc0d0630176659","2e859e664a65796dadf8aaf65db6f66f3a885368","5cbf4928b28a4db03465b529b38a64ef29c91735"],"2e859e664a65796dadf8aaf65db6f66f3a885368":["f03e4bed5023ec3ef93a771b8888cae991cf448d"],"5cbf4928b28a4db03465b529b38a64ef29c91735":["de0b5d8cac74be1676bcc2f805bc0d0630176659"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["1da93834e39ce341a13e42b611d0a83bd3114bba","cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}