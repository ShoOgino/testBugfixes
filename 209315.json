{"path":"lucene/src/java/org/apache/lucene/search/TopFieldCollector.OneComparatorNonScoringCollector#collect(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TopFieldCollector.OneComparatorNonScoringCollector#collect(int).mjava","pathOld":"src/java/org/apache/lucene/search/TopFieldCollector.OneComparatorNonScoringCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) throws IOException {\n      ++totalHits;\n      if (queueFull) {\n        if ((reverseMul * comparator.compareBottom(doc)) <= 0) {\n          // since docs are visited in doc Id order, if compare is 0, it means\n          // this document is largest than anything else in the queue, and\n          // therefore not competitive.\n          return;\n        }\n        \n        // This hit is competitive - replace bottom element in queue & adjustTop\n        comparator.copy(bottom.slot, doc);\n        updateBottom(doc);\n        comparator.setBottom(bottom.slot);\n      } else {\n        // Startup transient: queue hasn't gathered numHits yet\n        final int slot = totalHits - 1;\n        // Copy hit into queue\n        comparator.copy(slot, doc);\n        add(slot, doc, Float.NaN);\n        if (queueFull) {\n          comparator.setBottom(bottom.slot);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) throws IOException {\n      ++totalHits;\n      if (queueFull) {\n        if ((reverseMul * comparator.compareBottom(doc)) <= 0) {\n          // since docs are visited in doc Id order, if compare is 0, it means\n          // this document is largest than anything else in the queue, and\n          // therefore not competitive.\n          return;\n        }\n        \n        // This hit is competitive - replace bottom element in queue & adjustTop\n        comparator.copy(bottom.slot, doc);\n        updateBottom(doc);\n        comparator.setBottom(bottom.slot);\n      } else {\n        // Startup transient: queue hasn't gathered numHits yet\n        final int slot = totalHits - 1;\n        // Copy hit into queue\n        comparator.copy(slot, doc);\n        add(slot, doc, Float.NaN);\n        if (queueFull) {\n          comparator.setBottom(bottom.slot);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector.OneComparatorNonScoringCollector#collect(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TopFieldCollector.OneComparatorNonScoringCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) throws IOException {\n      ++totalHits;\n      if (queueFull) {\n        if ((reverseMul * comparator.compareBottom(doc)) <= 0) {\n          // since docs are visited in doc Id order, if compare is 0, it means\n          // this document is largest than anything else in the queue, and\n          // therefore not competitive.\n          return;\n        }\n        \n        // This hit is competitive - replace bottom element in queue & adjustTop\n        comparator.copy(bottom.slot, doc);\n        updateBottom(doc);\n        comparator.setBottom(bottom.slot);\n      } else {\n        // Startup transient: queue hasn't gathered numHits yet\n        final int slot = totalHits - 1;\n        // Copy hit into queue\n        comparator.copy(slot, doc);\n        add(slot, doc, Float.NaN);\n        if (queueFull) {\n          comparator.setBottom(bottom.slot);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) throws IOException {\n      ++totalHits;\n      if (queueFull) {\n        if ((reverseMul * comparator.compareBottom(doc)) <= 0) {\n          // since docs are visited in doc Id order, if compare is 0, it means\n          // this document is largest than anything else in the queue, and\n          // therefore not competitive.\n          return;\n        }\n        \n        // This hit is competitive - replace bottom element in queue & adjustTop\n        comparator.copy(bottom.slot, doc);\n        updateBottom(doc);\n        comparator.setBottom(bottom.slot);\n      } else {\n        // Startup transient: queue hasn't gathered numHits yet\n        final int slot = totalHits - 1;\n        // Copy hit into queue\n        comparator.copy(slot, doc);\n        add(slot, doc, Float.NaN);\n        if (queueFull) {\n          comparator.setBottom(bottom.slot);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}