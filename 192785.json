{"path":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.getDirectory(newDir);\n    IndexWriter iw = new IndexWriter(dir, new StandardAnalyzer(), new MaxFieldLength(1000));\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.TOKENIZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.TOKENIZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.getDirectory(newDir);\n    IndexWriter iw = new IndexWriter(dir, new StandardAnalyzer(), new MaxFieldLength(1000));\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.TOKENIZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.TOKENIZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.open(newDir);\n    IndexWriter iw = new IndexWriter(dir, new StandardAnalyzer(Version.LUCENE_24), new MaxFieldLength(1000));\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.open(newDir);\n    IndexWriter iw = new IndexWriter(dir, new StandardAnalyzer(Version.LUCENE_24), new MaxFieldLength(1000));\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.open(newDir);\n    IndexWriter iw = new IndexWriter(dir, new StandardAnalyzer(Version.LUCENE_24), new MaxFieldLength(1000));\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"03e1afe8c0b1076348a93edb5be5521059c36541","date":1269445770,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.open(newDir);\n    IndexWriter iw = new IndexWriter(dir, new StandardAnalyzer(Version.LUCENE_24), new MaxFieldLength(1000));\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.open(newDir);\n    IndexWriter iw = new IndexWriter(dir, new StandardAnalyzer(Version.LUCENE_24), new MaxFieldLength(1000));\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.open(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40)).\n            setMaxFieldLength(1000)\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.open(newDir);\n    IndexWriter iw = new IndexWriter(dir, new StandardAnalyzer(Version.LUCENE_24), new MaxFieldLength(1000));\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.open(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40)).\n            setMaxFieldLength(1000)\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.open(newDir);\n    IndexWriter iw = new IndexWriter(dir, new StandardAnalyzer(Version.LUCENE_24), new MaxFieldLength(1000));\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a13a126d15299d5c1e117ea99ddae6fb0fa3f209","date":1291909583,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40)).\n            setMaxFieldLength(1000)\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.open(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40)).\n            setMaxFieldLength(1000)\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40)).\n            setMaxFieldLength(1000)\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.open(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40)).\n            setMaxFieldLength(1000)\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40)).\n            setMaxFieldLength(1000)\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.open(newDir);\n    IndexWriter iw = new IndexWriter(dir, new StandardAnalyzer(Version.LUCENE_24), new MaxFieldLength(1000));\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2047784e704fe141e0ff36affac8a7cb6c7bbec","date":1295352100,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40)).\n            setMaxFieldLength(1000)\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":["0bf41419d452997826ec5f17684993377be77f49","0bf41419d452997826ec5f17684993377be77f49","0bf41419d452997826ec5f17684993377be77f49"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40)).\n            setMaxFieldLength(1000)\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40)).\n            setMaxFieldLength(1000)\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["c2047784e704fe141e0ff36affac8a7cb6c7bbec","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"03e1afe8c0b1076348a93edb5be5521059c36541":["1da8d55113b689b06716246649de6f62430f15c0"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["3bb13258feba31ab676502787ab2e1779f129b7a","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["03e1afe8c0b1076348a93edb5be5521059c36541","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c2047784e704fe141e0ff36affac8a7cb6c7bbec":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3bb13258feba31ab676502787ab2e1779f129b7a":["03e1afe8c0b1076348a93edb5be5521059c36541","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["03e1afe8c0b1076348a93edb5be5521059c36541"]},"commit2Childs":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"03e1afe8c0b1076348a93edb5be5521059c36541":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"1da8d55113b689b06716246649de6f62430f15c0":["03e1afe8c0b1076348a93edb5be5521059c36541"],"c2047784e704fe141e0ff36affac8a7cb6c7bbec":["c26f00b574427b55127e869b935845554afde1fa","e79a6d080bdd5b2a8f56342cf571b5476de04180","c903c3d15906a3da96b8c0c2fb704491005fdbdb","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"3bb13258feba31ab676502787ab2e1779f129b7a":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e79a6d080bdd5b2a8f56342cf571b5476de04180","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}