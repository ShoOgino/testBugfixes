{"path":"contrib/analyzers/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Reader,Side,int).mjava","commits":[{"id":"962b2790491d84618a387a768d018c54e9809f91","date":1166830997,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Reader,Side,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates EdgeNGramTokenizer with given min and max n-grams.\n   * @param input Reader holding the input to be tokenized\n   * @param side the {@link Side} from which to chop off an n-gram \n   * @param gramSize the n-gram size to generate\n   */\n  public EdgeNGramTokenizer(Reader input, Side side, int gramSize) {\n    super(input);\n    if (gramSize < 1) {\n      throw new IllegalArgumentException(\"gramSize must be greater than zero\");\n    }\n    this.gramSize = gramSize;\n    this.side = side;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ef4fb94edc5602b149cbfd43818eccc7e54a0f0","date":1166844994,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Reader,Side,int).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Reader,Side,int).mjava","sourceNew":"  /**\n   * Creates EdgeNGramTokenizer that can generate an n-gram of the given size.\n   * @param input Reader holding the input to be tokenized\n   * @param side the {@link Side} from which to chop off an n-gram \n   * @param gramSize the size of the n-gram to generate\n   */\n  public EdgeNGramTokenizer(Reader input, Side side, int gramSize) {\n    super(input);\n    if (gramSize < 1) {\n      throw new IllegalArgumentException(\"gramSize must be greater than zero\");\n    }\n    this.gramSize = gramSize;\n    this.side = side;\n  }\n\n","sourceOld":"  /**\n   * Creates EdgeNGramTokenizer with given min and max n-grams.\n   * @param input Reader holding the input to be tokenized\n   * @param side the {@link Side} from which to chop off an n-gram \n   * @param gramSize the n-gram size to generate\n   */\n  public EdgeNGramTokenizer(Reader input, Side side, int gramSize) {\n    super(input);\n    if (gramSize < 1) {\n      throw new IllegalArgumentException(\"gramSize must be greater than zero\");\n    }\n    this.gramSize = gramSize;\n    this.side = side;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65611ed302763dd12bf8f4676760c1a4c82761ab","date":1172758977,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Reader,Side,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates EdgeNGramTokenizer that can generate an n-gram of the given size.\n   * @param input Reader holding the input to be tokenized\n   * @param side the {@link Side} from which to chop off an n-gram \n   * @param gramSize the size of the n-gram to generate\n   */\n  public EdgeNGramTokenizer(Reader input, Side side, int gramSize) {\n    super(input);\n    if (gramSize < 1) {\n      throw new IllegalArgumentException(\"gramSize must be greater than zero\");\n    }\n    this.gramSize = gramSize;\n    this.side = side;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"962b2790491d84618a387a768d018c54e9809f91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"65611ed302763dd12bf8f4676760c1a4c82761ab":["7ef4fb94edc5602b149cbfd43818eccc7e54a0f0"],"7ef4fb94edc5602b149cbfd43818eccc7e54a0f0":["962b2790491d84618a387a768d018c54e9809f91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65611ed302763dd12bf8f4676760c1a4c82761ab"]},"commit2Childs":{"962b2790491d84618a387a768d018c54e9809f91":["7ef4fb94edc5602b149cbfd43818eccc7e54a0f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["962b2790491d84618a387a768d018c54e9809f91"],"65611ed302763dd12bf8f4676760c1a4c82761ab":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7ef4fb94edc5602b149cbfd43818eccc7e54a0f0":["65611ed302763dd12bf8f4676760c1a4c82761ab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}