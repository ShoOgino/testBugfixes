{"path":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,PackedInts.Reader,Outputs[T]).mjava","commits":[{"id":"edb74c83fff94196b864e08ca033d92823252cb7","date":1339593164,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,PackedInts.Reader,Outputs[T]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,int[],Outputs[T]).mjava","sourceNew":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, PackedInts.Reader nodeRefToAddress, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    bytes = new byte[128];\n    this.nodeRefToAddress = nodeRefToAddress;\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    writer = new BytesWriter();\n  }\n\n","sourceOld":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, int[] nodeRefToAddress, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    bytes = new byte[128];\n    this.nodeRefToAddress = nodeRefToAddress;\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    writer = new BytesWriter();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb27634f76319b68d6d8fd11a7104d20294722c5","date":1355210077,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,PackedInts.Reader,Outputs[T]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,PackedInts.Reader,Outputs[T]).mjava","sourceNew":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, PackedInts.Reader nodeRefToAddress, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    bytes = new byte[128];\n    this.nodeRefToAddress = nodeRefToAddress;\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    writer = new DefaultBytesWriter();\n  }\n\n","sourceOld":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, PackedInts.Reader nodeRefToAddress, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    bytes = new byte[128];\n    this.nodeRefToAddress = nodeRefToAddress;\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    writer = new BytesWriter();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,PackedInts.Reader,Outputs[T]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,PackedInts.Reader,Outputs[T]).mjava","sourceNew":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, PackedInts.Reader nodeRefToAddress, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    bytes = new byte[128];\n    this.nodeRefToAddress = nodeRefToAddress;\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    writer = new DefaultBytesWriter();\n  }\n\n","sourceOld":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, PackedInts.Reader nodeRefToAddress, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    bytes = new byte[128];\n    this.nodeRefToAddress = nodeRefToAddress;\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    writer = new BytesWriter();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb8af2aec0a8574cf50cad6939d4475179595eca","date":1357675799,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,PackedInts.Reader,Outputs[T]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,PackedInts.Reader,Outputs[T]).mjava","sourceNew":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, PackedInts.Reader nodeRefToAddress, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    bytes = new byte[128];\n    this.nodeRefToAddress = nodeRefToAddress;\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    writer = new DefaultBytesWriter();\n    \n    // NOTE: bogus because this is only used during\n    // building; we need to break out mutable FST from\n    // immutable\n    allowArrayArcs = false;\n  }\n\n","sourceOld":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, PackedInts.Reader nodeRefToAddress, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    bytes = new byte[128];\n    this.nodeRefToAddress = nodeRefToAddress;\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    writer = new DefaultBytesWriter();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,PackedInts.Reader,Outputs[T]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,PackedInts.Reader,Outputs[T]).mjava","sourceNew":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, PackedInts.Reader nodeRefToAddress, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    bytes = new byte[128];\n    this.nodeRefToAddress = nodeRefToAddress;\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    writer = new DefaultBytesWriter();\n    \n    // NOTE: bogus because this is only used during\n    // building; we need to break out mutable FST from\n    // immutable\n    allowArrayArcs = false;\n  }\n\n","sourceOld":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, PackedInts.Reader nodeRefToAddress, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    bytes = new byte[128];\n    this.nodeRefToAddress = nodeRefToAddress;\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    writer = new DefaultBytesWriter();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87e78f3c129251e74ecc2ff73a32de0f27cf09d5","date":1358006150,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,PackedInts.Reader,Outputs[T]).mjava","sourceNew":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    // 32 KB blocks:\n    bytes = new BytesStore(15);\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    \n    // NOTE: bogus because this is only used during\n    // building; we need to break out mutable FST from\n    // immutable\n    allowArrayArcs = false;\n  }\n\n","sourceOld":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, PackedInts.Reader nodeRefToAddress, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    bytes = new byte[128];\n    this.nodeRefToAddress = nodeRefToAddress;\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    writer = new DefaultBytesWriter();\n    \n    // NOTE: bogus because this is only used during\n    // building; we need to break out mutable FST from\n    // immutable\n    allowArrayArcs = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,PackedInts.Reader,Outputs[T]).mjava","sourceNew":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, Outputs<T> outputs, int bytesPageBits) {\n    version = VERSION_CURRENT;\n    packed = true;\n    this.inputType = inputType;\n    bytes = new BytesStore(bytesPageBits);\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    \n    // NOTE: bogus because this is only used during\n    // building; we need to break out mutable FST from\n    // immutable\n    allowArrayArcs = false;\n  }\n\n","sourceOld":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, PackedInts.Reader nodeRefToAddress, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    bytes = new byte[128];\n    this.nodeRefToAddress = nodeRefToAddress;\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    writer = new DefaultBytesWriter();\n    \n    // NOTE: bogus because this is only used during\n    // building; we need to break out mutable FST from\n    // immutable\n    allowArrayArcs = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["edb74c83fff94196b864e08ca033d92823252cb7","cb27634f76319b68d6d8fd11a7104d20294722c5"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["4e6354dd7c71fe122926fc53d7d29f715b1283db","87e78f3c129251e74ecc2ff73a32de0f27cf09d5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fb8af2aec0a8574cf50cad6939d4475179595eca":["cb27634f76319b68d6d8fd11a7104d20294722c5"],"edb74c83fff94196b864e08ca033d92823252cb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"87e78f3c129251e74ecc2ff73a32de0f27cf09d5":["fb8af2aec0a8574cf50cad6939d4475179595eca"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fb8af2aec0a8574cf50cad6939d4475179595eca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["87e78f3c129251e74ecc2ff73a32de0f27cf09d5"],"cb27634f76319b68d6d8fd11a7104d20294722c5":["edb74c83fff94196b864e08ca033d92823252cb7"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["4e6354dd7c71fe122926fc53d7d29f715b1283db"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["edb74c83fff94196b864e08ca033d92823252cb7"],"fb8af2aec0a8574cf50cad6939d4475179595eca":["87e78f3c129251e74ecc2ff73a32de0f27cf09d5","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"edb74c83fff94196b864e08ca033d92823252cb7":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cb27634f76319b68d6d8fd11a7104d20294722c5"],"87e78f3c129251e74ecc2ff73a32de0f27cf09d5":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["8917bfede3b4ca30f4305c1e391e9218959cd723"],"cb27634f76319b68d6d8fd11a7104d20294722c5":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fb8af2aec0a8574cf50cad6939d4475179595eca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}