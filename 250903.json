{"path":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#dumpTokens(String).mjava","commits":[{"id":"43cfa455b570ba7bf8eefe91de210d46c68a0a2a","date":1372853690,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#dumpTokens(String).mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unused\")\n  private void dumpTokens(String input) throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", new StringReader(input));\n    ts.reset();\n\n    MorphosyntacticTagsAttribute attribute = ts.getAttribute(MorphosyntacticTagsAttribute.class);\n    CharTermAttribute charTerm = ts.getAttribute(CharTermAttribute.class);\n    while (ts.incrementToken()) {\n      System.out.println(charTerm.toString() + \" => \" + attribute.getTags());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c83d6c4335f31cae14f625a222bc842f20073dcd","782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c83d6c4335f31cae14f625a222bc842f20073dcd","date":1373306148,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#dumpTokens(String).mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#dumpTokens(String).mjava","sourceNew":"  @SuppressWarnings(\"unused\")\n  private void dumpTokens(String input) throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", input);\n    ts.reset();\n\n    MorphosyntacticTagsAttribute attribute = ts.getAttribute(MorphosyntacticTagsAttribute.class);\n    CharTermAttribute charTerm = ts.getAttribute(CharTermAttribute.class);\n    while (ts.incrementToken()) {\n      System.out.println(charTerm.toString() + \" => \" + attribute.getTags());\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unused\")\n  private void dumpTokens(String input) throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", new StringReader(input));\n    ts.reset();\n\n    MorphosyntacticTagsAttribute attribute = ts.getAttribute(MorphosyntacticTagsAttribute.class);\n    CharTermAttribute charTerm = ts.getAttribute(CharTermAttribute.class);\n    while (ts.incrementToken()) {\n      System.out.println(charTerm.toString() + \" => \" + attribute.getTags());\n    }\n  }\n\n","bugFix":["43cfa455b570ba7bf8eefe91de210d46c68a0a2a"],"bugIntro":["782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#dumpTokens(String).mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unused\")\n  private void dumpTokens(String input) throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", input);\n    ts.reset();\n\n    MorphosyntacticTagsAttribute attribute = ts.getAttribute(MorphosyntacticTagsAttribute.class);\n    CharTermAttribute charTerm = ts.getAttribute(CharTermAttribute.class);\n    while (ts.incrementToken()) {\n      System.out.println(charTerm.toString() + \" => \" + attribute.getTags());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"782ed6a4b4ba50ec19734fc8db4e570ee193d627","date":1381127065,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#dumpTokens(String).mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#dumpTokens(String).mjava","sourceNew":"  @SuppressWarnings(\"unused\")\n  private void dumpTokens(String input) throws IOException {\n    try (TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", input)) {\n      ts.reset();\n\n      MorphosyntacticTagsAttribute attribute = ts.getAttribute(MorphosyntacticTagsAttribute.class);\n      CharTermAttribute charTerm = ts.getAttribute(CharTermAttribute.class);\n      while (ts.incrementToken()) {\n        System.out.println(charTerm.toString() + \" => \" + attribute.getTags());\n      }\n      ts.end();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unused\")\n  private void dumpTokens(String input) throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", input);\n    ts.reset();\n\n    MorphosyntacticTagsAttribute attribute = ts.getAttribute(MorphosyntacticTagsAttribute.class);\n    CharTermAttribute charTerm = ts.getAttribute(CharTermAttribute.class);\n    while (ts.incrementToken()) {\n      System.out.println(charTerm.toString() + \" => \" + attribute.getTags());\n    }\n  }\n\n","bugFix":["43cfa455b570ba7bf8eefe91de210d46c68a0a2a","c83d6c4335f31cae14f625a222bc842f20073dcd"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#dumpTokens(String).mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#dumpTokens(String).mjava","sourceNew":"  @SuppressWarnings(\"unused\")\n  private void dumpTokens(String input) throws IOException {\n    try (Analyzer a = getTestAnalyzer();\n        TokenStream ts = a.tokenStream(\"dummy\", input)) {\n      ts.reset();\n\n      MorphosyntacticTagsAttribute attribute = ts.getAttribute(MorphosyntacticTagsAttribute.class);\n      CharTermAttribute charTerm = ts.getAttribute(CharTermAttribute.class);\n      while (ts.incrementToken()) {\n        System.out.println(charTerm.toString() + \" => \" + attribute.getTags());\n      }\n      ts.end();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unused\")\n  private void dumpTokens(String input) throws IOException {\n    try (TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", input)) {\n      ts.reset();\n\n      MorphosyntacticTagsAttribute attribute = ts.getAttribute(MorphosyntacticTagsAttribute.class);\n      CharTermAttribute charTerm = ts.getAttribute(CharTermAttribute.class);\n      while (ts.incrementToken()) {\n        System.out.println(charTerm.toString() + \" => \" + attribute.getTags());\n      }\n      ts.end();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#dumpTokens(String).mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#dumpTokens(String).mjava","sourceNew":"  @SuppressWarnings(\"unused\")\n  private void dumpTokens(String input) throws IOException {\n    try (Analyzer a = getTestAnalyzer();\n        TokenStream ts = a.tokenStream(\"dummy\", input)) {\n      ts.reset();\n\n      MorphosyntacticTagsAttribute attribute = ts.getAttribute(MorphosyntacticTagsAttribute.class);\n      CharTermAttribute charTerm = ts.getAttribute(CharTermAttribute.class);\n      while (ts.incrementToken()) {\n        System.out.println(charTerm.toString() + \" => \" + attribute.getTags());\n      }\n      ts.end();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unused\")\n  private void dumpTokens(String input) throws IOException {\n    try (TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", input)) {\n      ts.reset();\n\n      MorphosyntacticTagsAttribute attribute = ts.getAttribute(MorphosyntacticTagsAttribute.class);\n      CharTermAttribute charTerm = ts.getAttribute(CharTermAttribute.class);\n      while (ts.incrementToken()) {\n        System.out.println(charTerm.toString() + \" => \" + attribute.getTags());\n      }\n      ts.end();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["782ed6a4b4ba50ec19734fc8db4e570ee193d627","a56958d7f71a28824f20031ffbb2e13502a0274e"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c83d6c4335f31cae14f625a222bc842f20073dcd"],"c83d6c4335f31cae14f625a222bc842f20073dcd":["43cfa455b570ba7bf8eefe91de210d46c68a0a2a"],"43cfa455b570ba7bf8eefe91de210d46c68a0a2a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"782ed6a4b4ba50ec19734fc8db4e570ee193d627":["c83d6c4335f31cae14f625a222bc842f20073dcd"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56958d7f71a28824f20031ffbb2e13502a0274e"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c83d6c4335f31cae14f625a222bc842f20073dcd":["37a0f60745e53927c4c876cfe5b5a58170f0646c","782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","43cfa455b570ba7bf8eefe91de210d46c68a0a2a"],"43cfa455b570ba7bf8eefe91de210d46c68a0a2a":["c83d6c4335f31cae14f625a222bc842f20073dcd"],"782ed6a4b4ba50ec19734fc8db4e570ee193d627":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}