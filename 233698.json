{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/SearchRateTrigger#getConfig().mjava","commits":[{"id":"c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a","date":1524514741,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/SearchRateTrigger#getConfig().mjava","pathOld":"/dev/null","sourceNew":"  @VisibleForTesting\n  Map<String, Object> getConfig() {\n    Map<String, Object> config = new HashMap<>();\n    config.put(\"name\", name);\n    config.put(COLLECTIONS_PROP, collections);\n    config.put(AutoScalingParams.SHARD, shard);\n    config.put(AutoScalingParams.NODE, node);\n    config.put(METRIC_PROP, metric);\n    config.put(MAX_OPS_PROP, maxOps);\n    config.put(MIN_REPLICAS_PROP, minReplicas);\n    config.put(ABOVE_RATE_PROP, aboveRate);\n    config.put(BELOW_RATE_PROP, belowRate);\n    config.put(ABOVE_OP_PROP, aboveOp);\n    config.put(ABOVE_NODE_OP_PROP, aboveNodeOp);\n    config.put(BELOW_OP_PROP, belowOp);\n    config.put(BELOW_NODE_OP_PROP, belowNodeOp);\n    return config;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"042b92cf48996255bedb0c3c4bf772d7e06e4dea","date":1534272102,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/SearchRateTrigger#getConfig().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/SearchRateTrigger#getConfig().mjava","sourceNew":"  @VisibleForTesting\n  Map<String, Object> getConfig() {\n    Map<String, Object> config = new HashMap<>();\n    config.put(\"name\", name);\n    config.put(COLLECTIONS_PROP, collections);\n    config.put(AutoScalingParams.SHARD, shard);\n    config.put(AutoScalingParams.NODE, node);\n    config.put(METRIC_PROP, metric);\n    config.put(MAX_OPS_PROP, maxOps);\n    config.put(MIN_REPLICAS_PROP, minReplicas);\n    config.put(ABOVE_RATE_PROP, aboveRate);\n    config.put(BELOW_RATE_PROP, belowRate);\n    config.put(ABOVE_NODE_RATE_PROP, aboveNodeRate);\n    config.put(BELOW_NODE_RATE_PROP, belowNodeRate);\n    config.put(ABOVE_OP_PROP, aboveOp);\n    config.put(ABOVE_NODE_OP_PROP, aboveNodeOp);\n    config.put(BELOW_OP_PROP, belowOp);\n    config.put(BELOW_NODE_OP_PROP, belowNodeOp);\n    return config;\n  }\n\n","sourceOld":"  @VisibleForTesting\n  Map<String, Object> getConfig() {\n    Map<String, Object> config = new HashMap<>();\n    config.put(\"name\", name);\n    config.put(COLLECTIONS_PROP, collections);\n    config.put(AutoScalingParams.SHARD, shard);\n    config.put(AutoScalingParams.NODE, node);\n    config.put(METRIC_PROP, metric);\n    config.put(MAX_OPS_PROP, maxOps);\n    config.put(MIN_REPLICAS_PROP, minReplicas);\n    config.put(ABOVE_RATE_PROP, aboveRate);\n    config.put(BELOW_RATE_PROP, belowRate);\n    config.put(ABOVE_OP_PROP, aboveOp);\n    config.put(ABOVE_NODE_OP_PROP, aboveNodeOp);\n    config.put(BELOW_OP_PROP, belowOp);\n    config.put(BELOW_NODE_OP_PROP, belowNodeOp);\n    return config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/SearchRateTrigger#getConfig().mjava","sourceNew":null,"sourceOld":"  @VisibleForTesting\n  Map<String, Object> getConfig() {\n    Map<String, Object> config = new HashMap<>();\n    config.put(\"name\", name);\n    config.put(COLLECTIONS_PROP, collections);\n    config.put(AutoScalingParams.SHARD, shard);\n    config.put(AutoScalingParams.NODE, node);\n    config.put(METRIC_PROP, metric);\n    config.put(MAX_OPS_PROP, maxOps);\n    config.put(MIN_REPLICAS_PROP, minReplicas);\n    config.put(ABOVE_RATE_PROP, aboveRate);\n    config.put(BELOW_RATE_PROP, belowRate);\n    config.put(ABOVE_NODE_RATE_PROP, aboveNodeRate);\n    config.put(BELOW_NODE_RATE_PROP, belowNodeRate);\n    config.put(ABOVE_OP_PROP, aboveOp);\n    config.put(ABOVE_NODE_OP_PROP, aboveNodeOp);\n    config.put(BELOW_OP_PROP, belowOp);\n    config.put(BELOW_NODE_OP_PROP, belowNodeOp);\n    return config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"042b92cf48996255bedb0c3c4bf772d7e06e4dea":["c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a"],"c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3f504512a03d978990cbff30db0522b354e846db":["042b92cf48996255bedb0c3c4bf772d7e06e4dea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"042b92cf48996255bedb0c3c4bf772d7e06e4dea":["3f504512a03d978990cbff30db0522b354e846db"],"c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a":["042b92cf48996255bedb0c3c4bf772d7e06e4dea"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}