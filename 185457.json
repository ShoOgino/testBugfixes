{"path":"src/test/org/apache/lucene/store/TestLockFactory#testStressLocks().mjava","commits":[{"id":"5c6bd70b660528bcf8dd3216ea1f7565ac220a20","date":1156813990,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#testStressLocks().mjava","pathOld":"/dev/null","sourceNew":"    // Verify: do stress test, by opening IndexReaders and\n    // IndexWriters over & over in 2 threads and making sure\n    // no unexpected exceptions are raised:\n    public void testStressLocks() throws IOException {\n\n        String indexDirName = \"index.TestLockFactory6\";\n        FSDirectory fs1 = FSDirectory.getDirectory(indexDirName, true);\n        // fs1.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f118a5ec962b5e2658d313e6f4e6f28faa3bcb39","date":1161023282,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#testStressLocks().mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#testStressLocks().mjava","sourceNew":"    // Verify: do stress test, by opening IndexReaders and\n    // IndexWriters over & over in 2 threads and making sure\n    // no unexpected exceptions are raised:\n    public void testStressLocks() throws IOException {\n      _testStressLocks(null, \"index.TestLockFactory6\");\n    }\n\n","sourceOld":"    // Verify: do stress test, by opening IndexReaders and\n    // IndexWriters over & over in 2 threads and making sure\n    // no unexpected exceptions are raised:\n    public void testStressLocks() throws IOException {\n\n        String indexDirName = \"index.TestLockFactory6\";\n        FSDirectory fs1 = FSDirectory.getDirectory(indexDirName, true);\n        // fs1.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba7fd1181f778e9954547e8e6a47587ebf08e3fb","date":1238267455,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#testStressLocks().mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#testStressLocks().mjava","sourceNew":"    // Verify: do stress test, by opening IndexReaders and\n    // IndexWriters over & over in 2 threads and making sure\n    // no unexpected exceptions are raised:\n    public void testStressLocks() throws Exception {\n      _testStressLocks(null, \"index.TestLockFactory6\");\n    }\n\n","sourceOld":"    // Verify: do stress test, by opening IndexReaders and\n    // IndexWriters over & over in 2 threads and making sure\n    // no unexpected exceptions are raised:\n    public void testStressLocks() throws IOException {\n      _testStressLocks(null, \"index.TestLockFactory6\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f7faff7550034759516ce7f4898cd16c1816cde","date":1245778901,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#testStressLocks().mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#testStressLocks().mjava","sourceNew":"    // Verify: do stress test, by opening IndexReaders and\n    // IndexWriters over & over in 2 threads and making sure\n    // no unexpected exceptions are raised:\n    public void testStressLocks() throws Exception {\n      _testStressLocks(null, _TestUtil.getTempDir(\"index.TestLockFactory6\"));\n    }\n\n","sourceOld":"    // Verify: do stress test, by opening IndexReaders and\n    // IndexWriters over & over in 2 threads and making sure\n    // no unexpected exceptions are raised:\n    public void testStressLocks() throws Exception {\n      _testStressLocks(null, \"index.TestLockFactory6\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testStressLocks().mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#testStressLocks().mjava","sourceNew":"    // Verify: do stress test, by opening IndexReaders and\n    // IndexWriters over & over in 2 threads and making sure\n    // no unexpected exceptions are raised:\n    public void testStressLocks() throws Exception {\n      _testStressLocks(null, _TestUtil.getTempDir(\"index.TestLockFactory6\"));\n    }\n\n","sourceOld":"    // Verify: do stress test, by opening IndexReaders and\n    // IndexWriters over & over in 2 threads and making sure\n    // no unexpected exceptions are raised:\n    public void testStressLocks() throws Exception {\n      _testStressLocks(null, _TestUtil.getTempDir(\"index.TestLockFactory6\"));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5c6bd70b660528bcf8dd3216ea1f7565ac220a20":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f118a5ec962b5e2658d313e6f4e6f28faa3bcb39":["5c6bd70b660528bcf8dd3216ea1f7565ac220a20"],"8f7faff7550034759516ce7f4898cd16c1816cde":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb"],"ba7fd1181f778e9954547e8e6a47587ebf08e3fb":["f118a5ec962b5e2658d313e6f4e6f28faa3bcb39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8f7faff7550034759516ce7f4898cd16c1816cde"]},"commit2Childs":{"5c6bd70b660528bcf8dd3216ea1f7565ac220a20":["f118a5ec962b5e2658d313e6f4e6f28faa3bcb39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5c6bd70b660528bcf8dd3216ea1f7565ac220a20"],"f118a5ec962b5e2658d313e6f4e6f28faa3bcb39":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb"],"8f7faff7550034759516ce7f4898cd16c1816cde":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ba7fd1181f778e9954547e8e6a47587ebf08e3fb":["8f7faff7550034759516ce7f4898cd16c1816cde"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}