{"path":"solr/core/src/java/org/apache/solr/schema/ZkIndexSchemaReader#command().mjava","commits":[{"id":"1596015c8bad249c0b9a52182de1d47e1d56fdde","date":1412350121,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/ZkIndexSchemaReader#command().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Called after a ZooKeeper session expiration occurs; need to re-create the watcher and update the current\n   * schema from ZooKeeper.\n   */\n  @Override\n  public void command() {\n    try {\n      // setup a new watcher to get notified when the managed schema changes\n      createSchemaWatcher();\n      // force update now as the schema may have changed while our zk session was expired\n      updateSchema(null, -1);\n    } catch (Exception exc) {\n      log.error(\"Failed to update managed-schema watcher after session expiration due to: \"+exc, exc);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["dbf14a58688f4f8d0fa6375733fbe8cfed9aac43"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/ZkIndexSchemaReader#command().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Called after a ZooKeeper session expiration occurs; need to re-create the watcher and update the current\n   * schema from ZooKeeper.\n   */\n  @Override\n  public void command() {\n    try {\n      // setup a new watcher to get notified when the managed schema changes\n      createSchemaWatcher();\n      // force update now as the schema may have changed while our zk session was expired\n      updateSchema(null, -1);\n    } catch (Exception exc) {\n      log.error(\"Failed to update managed-schema watcher after session expiration due to: \"+exc, exc);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbf14a58688f4f8d0fa6375733fbe8cfed9aac43","date":1498572460,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/ZkIndexSchemaReader#command().mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/ZkIndexSchemaReader#command().mjava","sourceNew":"  /**\n   * Called after a ZooKeeper session expiration occurs; need to re-create the watcher and update the current\n   * schema from ZooKeeper.\n   */\n  @Override\n  public void command() {\n    try {\n      // setup a new watcher to get notified when the managed schema changes\n      schemaWatcher = createSchemaWatcher();\n      // force update now as the schema may have changed while our zk session was expired\n      updateSchema(null, -1);\n    } catch (Exception exc) {\n      log.error(\"Failed to update managed-schema watcher after session expiration due to: \"+exc, exc);\n    }\n  }\n\n","sourceOld":"  /**\n   * Called after a ZooKeeper session expiration occurs; need to re-create the watcher and update the current\n   * schema from ZooKeeper.\n   */\n  @Override\n  public void command() {\n    try {\n      // setup a new watcher to get notified when the managed schema changes\n      createSchemaWatcher();\n      // force update now as the schema may have changed while our zk session was expired\n      updateSchema(null, -1);\n    } catch (Exception exc) {\n      log.error(\"Failed to update managed-schema watcher after session expiration due to: \"+exc, exc);\n    }\n  }\n\n","bugFix":["1596015c8bad249c0b9a52182de1d47e1d56fdde"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98f11c416d30e556e0004a9a84960702d12d35b1","date":1498628359,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/ZkIndexSchemaReader#command().mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/ZkIndexSchemaReader#command().mjava","sourceNew":"  /**\n   * Called after a ZooKeeper session expiration occurs; need to re-create the watcher and update the current\n   * schema from ZooKeeper.\n   */\n  @Override\n  public void command() {\n    try {\n      // setup a new watcher to get notified when the managed schema changes\n      schemaWatcher = createSchemaWatcher();\n      // force update now as the schema may have changed while our zk session was expired\n      updateSchema(null, -1);\n    } catch (Exception exc) {\n      log.error(\"Failed to update managed-schema watcher after session expiration due to: \"+exc, exc);\n    }\n  }\n\n","sourceOld":"  /**\n   * Called after a ZooKeeper session expiration occurs; need to re-create the watcher and update the current\n   * schema from ZooKeeper.\n   */\n  @Override\n  public void command() {\n    try {\n      // setup a new watcher to get notified when the managed schema changes\n      createSchemaWatcher();\n      // force update now as the schema may have changed while our zk session was expired\n      updateSchema(null, -1);\n    } catch (Exception exc) {\n      log.error(\"Failed to update managed-schema watcher after session expiration due to: \"+exc, exc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/ZkIndexSchemaReader#command().mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/ZkIndexSchemaReader#command().mjava","sourceNew":"  /**\n   * Called after a ZooKeeper session expiration occurs; need to re-create the watcher and update the current\n   * schema from ZooKeeper.\n   */\n  @Override\n  public void command() {\n    try {\n      // setup a new watcher to get notified when the managed schema changes\n      schemaWatcher = createSchemaWatcher();\n      // force update now as the schema may have changed while our zk session was expired\n      updateSchema(null, -1);\n    } catch (Exception exc) {\n      log.error(\"Failed to update managed-schema watcher after session expiration due to: \"+exc, exc);\n    }\n  }\n\n","sourceOld":"  /**\n   * Called after a ZooKeeper session expiration occurs; need to re-create the watcher and update the current\n   * schema from ZooKeeper.\n   */\n  @Override\n  public void command() {\n    try {\n      // setup a new watcher to get notified when the managed schema changes\n      createSchemaWatcher();\n      // force update now as the schema may have changed while our zk session was expired\n      updateSchema(null, -1);\n    } catch (Exception exc) {\n      log.error(\"Failed to update managed-schema watcher after session expiration due to: \"+exc, exc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9df8125ba9193a2e2e285ed92157810b1952a244","date":1587326330,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/ZkIndexSchemaReader#command().mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/ZkIndexSchemaReader#command().mjava","sourceNew":"  /**\n   * Called after a ZooKeeper session expiration occurs; need to re-create the watcher and update the current\n   * schema from ZooKeeper.\n   */\n  @Override\n  public void command() {\n    try {\n      // setup a new watcher to get notified when the managed schema changes\n      schemaWatcher = createSchemaWatcher();\n      // force update now as the schema may have changed while our zk session was expired\n      updateSchema(null, -1);\n    } catch (Exception exc) {\n      log.error(\"Failed to update managed-schema watcher after session expiration due to: {}\", exc);\n    }\n  }\n\n","sourceOld":"  /**\n   * Called after a ZooKeeper session expiration occurs; need to re-create the watcher and update the current\n   * schema from ZooKeeper.\n   */\n  @Override\n  public void command() {\n    try {\n      // setup a new watcher to get notified when the managed schema changes\n      schemaWatcher = createSchemaWatcher();\n      // force update now as the schema may have changed while our zk session was expired\n      updateSchema(null, -1);\n    } catch (Exception exc) {\n      log.error(\"Failed to update managed-schema watcher after session expiration due to: \"+exc, exc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1596015c8bad249c0b9a52182de1d47e1d56fdde":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dbf14a58688f4f8d0fa6375733fbe8cfed9aac43":["1596015c8bad249c0b9a52182de1d47e1d56fdde"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1596015c8bad249c0b9a52182de1d47e1d56fdde"],"28288370235ed02234a64753cdbf0c6ec096304a":["1596015c8bad249c0b9a52182de1d47e1d56fdde","dbf14a58688f4f8d0fa6375733fbe8cfed9aac43"],"98f11c416d30e556e0004a9a84960702d12d35b1":["1596015c8bad249c0b9a52182de1d47e1d56fdde","dbf14a58688f4f8d0fa6375733fbe8cfed9aac43"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9df8125ba9193a2e2e285ed92157810b1952a244"],"9df8125ba9193a2e2e285ed92157810b1952a244":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"1596015c8bad249c0b9a52182de1d47e1d56fdde":["dbf14a58688f4f8d0fa6375733fbe8cfed9aac43","d9a47902d6207303f5ed3e7aaca62ca33433af66","28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"dbf14a58688f4f8d0fa6375733fbe8cfed9aac43":["28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1596015c8bad249c0b9a52182de1d47e1d56fdde","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"28288370235ed02234a64753cdbf0c6ec096304a":["9df8125ba9193a2e2e285ed92157810b1952a244"],"98f11c416d30e556e0004a9a84960702d12d35b1":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9df8125ba9193a2e2e285ed92157810b1952a244":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["d9a47902d6207303f5ed3e7aaca62ca33433af66","98f11c416d30e556e0004a9a84960702d12d35b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}