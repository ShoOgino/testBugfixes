{"path":"src/java/org/apache/solr/analysis/TrieQueryTokenizerFactory#create(Reader).mjava","commits":[{"id":"1d6ca4f6b8a27a0523251c56d0abeb659ef5c1b0","date":1236796963,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/TrieQueryTokenizerFactory#create(Reader).mjava","pathOld":"/dev/null","sourceNew":"  public TokenStream create(Reader reader) {\n    try {\n      return new TrieQueryTokenizer(reader, type);\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unable to create TrieQueryTokenizer\", e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d72e3710bede9618eb9b2b5c6936369f3d3f9579"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d72e3710bede9618eb9b2b5c6936369f3d3f9579","date":1239534189,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/TrieQueryTokenizerFactory#create(Reader).mjava","pathOld":"src/java/org/apache/solr/analysis/TrieQueryTokenizerFactory#create(Reader).mjava","sourceNew":"  public TokenStream create(Reader reader) {\n    try {\n      StringBuilder builder = new StringBuilder();\n      char[] buf = new char[8];\n      int len;\n      while ((len = reader.read(buf)) != -1)\n        builder.append(buf, 0, len);\n      String value, number = builder.toString();\n      switch (type) {\n        case INTEGER:\n          value = TrieUtils.intToPrefixCoded(Integer.parseInt(number));\n          break;\n        case FLOAT:\n          value = TrieUtils.intToPrefixCoded(TrieUtils.floatToSortableInt(Float.parseFloat(number)));\n          break;\n        case LONG:\n          value = TrieUtils.longToPrefixCoded(Long.parseLong(number));\n          break;\n        case DOUBLE:\n          value = TrieUtils.longToPrefixCoded(TrieUtils.doubleToSortableLong(Double.parseDouble(number)));\n          break;\n        case DATE:\n          value = TrieUtils.longToPrefixCoded(dateField.parseMath(null, number).getTime());\n          break;\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field\");\n      }\n      return new KeywordTokenizer(new StringReader(value));\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unable to create trie query tokenizer\", e);\n    }\n  }\n\n","sourceOld":"  public TokenStream create(Reader reader) {\n    try {\n      return new TrieQueryTokenizer(reader, type);\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unable to create TrieQueryTokenizer\", e);\n    }\n  }\n\n","bugFix":["1d6ca4f6b8a27a0523251c56d0abeb659ef5c1b0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e77721aaf23393f6ea7926045ae6f8efea0ce8e","date":1247678464,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/analysis/TrieQueryTokenizerFactory#create(Reader).mjava","sourceNew":null,"sourceOld":"  public TokenStream create(Reader reader) {\n    try {\n      StringBuilder builder = new StringBuilder();\n      char[] buf = new char[8];\n      int len;\n      while ((len = reader.read(buf)) != -1)\n        builder.append(buf, 0, len);\n      String value, number = builder.toString();\n      switch (type) {\n        case INTEGER:\n          value = TrieUtils.intToPrefixCoded(Integer.parseInt(number));\n          break;\n        case FLOAT:\n          value = TrieUtils.intToPrefixCoded(TrieUtils.floatToSortableInt(Float.parseFloat(number)));\n          break;\n        case LONG:\n          value = TrieUtils.longToPrefixCoded(Long.parseLong(number));\n          break;\n        case DOUBLE:\n          value = TrieUtils.longToPrefixCoded(TrieUtils.doubleToSortableLong(Double.parseDouble(number)));\n          break;\n        case DATE:\n          value = TrieUtils.longToPrefixCoded(dateField.parseMath(null, number).getTime());\n          break;\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field\");\n      }\n      return new KeywordTokenizer(new StringReader(value));\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unable to create trie query tokenizer\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e77721aaf23393f6ea7926045ae6f8efea0ce8e":["d72e3710bede9618eb9b2b5c6936369f3d3f9579"],"d72e3710bede9618eb9b2b5c6936369f3d3f9579":["1d6ca4f6b8a27a0523251c56d0abeb659ef5c1b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"1d6ca4f6b8a27a0523251c56d0abeb659ef5c1b0":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1e77721aaf23393f6ea7926045ae6f8efea0ce8e":[],"d72e3710bede9618eb9b2b5c6936369f3d3f9579":["1e77721aaf23393f6ea7926045ae6f8efea0ce8e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["1d6ca4f6b8a27a0523251c56d0abeb659ef5c1b0"],"1d6ca4f6b8a27a0523251c56d0abeb659ef5c1b0":["d72e3710bede9618eb9b2b5c6936369f3d3f9579"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e77721aaf23393f6ea7926045ae6f8efea0ce8e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}