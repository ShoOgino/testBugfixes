{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchStemFilter#next(Token).mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchStemFilter#next(Token).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemFilter#next(Token).mjava","sourceNew":"  /**\n   * @return Returns the next token in the stream, or null at EOS\n   */\n  public Token next(Token reusableToken) throws IOException {\n    assert reusableToken != null;\n    Token nextToken = input.next(reusableToken);\n    if (nextToken == null)\n      return null;\n\n    String term = nextToken.term();\n\n    // Check the exclusion table.\n    if (exclusions == null || !exclusions.contains(term)) {\n      String s = stemmer.stem(term);\n      // If not stemmed, don't waste the time adjusting the token.\n      if ((s != null) && !s.equals(term))\n        nextToken.setTermBuffer(s);\n    }\n    return nextToken;\n  }\n\n","sourceOld":"  /**\n   * @return Returns the next token in the stream, or null at EOS\n   */\n  public Token next(Token reusableToken) throws IOException {\n    assert reusableToken != null;\n    Token nextToken = input.next(reusableToken);\n    if (nextToken == null)\n      return null;\n\n    String term = nextToken.term();\n\n    // Check the exclusion table.\n    if (exclusions == null || !exclusions.contains(term)) {\n      String s = stemmer.stem(term);\n      // If not stemmed, don't waste the time adjusting the token.\n      if ((s != null) && !s.equals(term))\n        nextToken.setTermBuffer(s);\n    }\n    return nextToken;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b5756469957918cac40a831acec9cf01c8c2bb3","date":1249167152,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchStemFilter#next(Token).mjava","sourceNew":null,"sourceOld":"  /**\n   * @return Returns the next token in the stream, or null at EOS\n   */\n  public Token next(Token reusableToken) throws IOException {\n    assert reusableToken != null;\n    Token nextToken = input.next(reusableToken);\n    if (nextToken == null)\n      return null;\n\n    String term = nextToken.term();\n\n    // Check the exclusion table.\n    if (exclusions == null || !exclusions.contains(term)) {\n      String s = stemmer.stem(term);\n      // If not stemmed, don't waste the time adjusting the token.\n      if ((s != null) && !s.equals(term))\n        nextToken.setTermBuffer(s);\n    }\n    return nextToken;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9b5756469957918cac40a831acec9cf01c8c2bb3":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9b5756469957918cac40a831acec9cf01c8c2bb3"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"9b5756469957918cac40a831acec9cf01c8c2bb3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}