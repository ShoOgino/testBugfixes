{"path":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/AbstractVisitingPrefixTreeQuery.VisitorTemplate#visitPrefix(Cell).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/AbstractVisitingPrefixTreeQuery.VisitorTemplate#visitPrefix(Cell).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractVisitingPrefixTreeQuery.VisitorTemplate#visitPrefix(Cell).mjava","sourceNew":"    /**\n     * Visit an indexed non-leaf cell. The presence of a prefix cell implies\n     * there are leaf cells at further levels. The cell passed should have it's\n     * {@link org.apache.lucene.spatial.prefix.tree.Cell#getShapeRel()} set\n     * relative to the filtered shape.\n     *\n     * @param cell An intersecting cell; not a leaf.\n     * @return true to descend to more levels.\n     */\n    protected abstract boolean visitPrefix(Cell cell) throws IOException;\n\n","sourceOld":"    /**\n     * Visit an indexed non-leaf cell. The presence of a prefix cell implies\n     * there are leaf cells at further levels. The cell passed should have it's\n     * {@link org.apache.lucene.spatial.prefix.tree.Cell#getShapeRel()} set\n     * relative to the filtered shape.\n     *\n     * @param cell An intersecting cell; not a leaf.\n     * @return true to descend to more levels.\n     */\n    protected abstract boolean visitPrefix(Cell cell) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/AbstractVisitingPrefixTreeQuery.VisitorTemplate#visitPrefix(Cell).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractVisitingPrefixTreeQuery.VisitorTemplate#visitPrefix(Cell).mjava","sourceNew":"    /**\n     * Visit an indexed non-leaf cell. The presence of a prefix cell implies\n     * there are leaf cells at further levels. The cell passed should have it's\n     * {@link org.apache.lucene.spatial.prefix.tree.Cell#getShapeRel()} set\n     * relative to the filtered shape.\n     *\n     * @param cell An intersecting cell; not a leaf.\n     * @return true to descend to more levels.\n     */\n    protected abstract boolean visitPrefix(Cell cell) throws IOException;\n\n","sourceOld":"    /**\n     * Visit an indexed non-leaf cell. The presence of a prefix cell implies\n     * there are leaf cells at further levels. The cell passed should have it's\n     * {@link org.apache.lucene.spatial.prefix.tree.Cell#getShapeRel()} set\n     * relative to the filtered shape.\n     *\n     * @param cell An intersecting cell; not a leaf.\n     * @return true to descend to more levels.\n     */\n    protected abstract boolean visitPrefix(Cell cell) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}