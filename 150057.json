{"path":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#tryNewResource(String,String).mjava","commits":[{"id":"04effb6bae0254b6d8632d67c1ec9121b33aa56e","date":1463009303,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#tryNewResource(String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Helper utility for building resources from arbitrary user input paths/urls\n   * if input is null, returns null; otherwise attempts to build Resource and verifies that Resource exists.\n   */\n  private static final Resource tryNewResource(String userInput, String type) {\n    if (null == userInput) {\n      return null;\n    }\n    Resource result;\n    try {\n      result = Resource.newResource(userInput);\n    } catch (MalformedURLException e) {\n      throw new IllegalArgumentException(\"Can't build \" + type + \" Resource: \" + e.getMessage(), e);\n    }\n    if (! result.exists()) {\n      throw new IllegalArgumentException(type + \" Resource does not exist \" + result.getName());\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#tryNewResource(String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Helper utility for building resources from arbitrary user input paths/urls\n   * if input is null, returns null; otherwise attempts to build Resource and verifies that Resource exists.\n   */\n  private static final Resource tryNewResource(String userInput, String type) {\n    if (null == userInput) {\n      return null;\n    }\n    Resource result;\n    try {\n      result = Resource.newResource(userInput);\n    } catch (MalformedURLException e) {\n      throw new IllegalArgumentException(\"Can't build \" + type + \" Resource: \" + e.getMessage(), e);\n    }\n    if (! result.exists()) {\n      throw new IllegalArgumentException(type + \" Resource does not exist \" + result.getName());\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#tryNewResource(String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Helper utility for building resources from arbitrary user input paths/urls\n   * if input is null, returns null; otherwise attempts to build Resource and verifies that Resource exists.\n   */\n  private static final Resource tryNewResource(String userInput, String type) {\n    if (null == userInput) {\n      return null;\n    }\n    Resource result;\n    try {\n      result = Resource.newResource(userInput);\n    } catch (MalformedURLException e) {\n      throw new IllegalArgumentException(\"Can't build \" + type + \" Resource: \" + e.getMessage(), e);\n    }\n    if (! result.exists()) {\n      throw new IllegalArgumentException(type + \" Resource does not exist \" + result.getName());\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"269c5aee1e7702d512e3f45bf1f01afd15a2af5f","date":1516133643,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#tryNewResource(String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#tryNewResource(String,String).mjava","sourceNew":"  /**\n   * Helper utility for building resources from arbitrary user input paths/urls\n   * if input is null, returns null; otherwise attempts to build Resource and verifies that Resource exists.\n   */\n  private static final Resource tryNewResource(String userInput, String type) {\n    if (null == userInput) {\n      return null;\n    }\n    Resource result;\n    try {\n      result = Resource.newResource(userInput);\n    } catch (IOException e) {\n      throw new IllegalArgumentException(\"Can't build \" + type + \" Resource: \" + e.getMessage(), e);\n    }\n    if (! result.exists()) {\n      throw new IllegalArgumentException(type + \" Resource does not exist \" + result.getName());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Helper utility for building resources from arbitrary user input paths/urls\n   * if input is null, returns null; otherwise attempts to build Resource and verifies that Resource exists.\n   */\n  private static final Resource tryNewResource(String userInput, String type) {\n    if (null == userInput) {\n      return null;\n    }\n    Resource result;\n    try {\n      result = Resource.newResource(userInput);\n    } catch (MalformedURLException e) {\n      throw new IllegalArgumentException(\"Can't build \" + type + \" Resource: \" + e.getMessage(), e);\n    }\n    if (! result.exists()) {\n      throw new IllegalArgumentException(type + \" Resource does not exist \" + result.getName());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#tryNewResource(String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#tryNewResource(String,String).mjava","sourceNew":"  /**\n   * Helper utility for building resources from arbitrary user input paths/urls\n   * if input is null, returns null; otherwise attempts to build Resource and verifies that Resource exists.\n   */\n  private static final Resource tryNewResource(String userInput, String type) {\n    if (null == userInput) {\n      return null;\n    }\n    Resource result;\n    try {\n      result = Resource.newResource(userInput);\n    } catch (IOException e) {\n      throw new IllegalArgumentException(\"Can't build \" + type + \" Resource: \" + e.getMessage(), e);\n    }\n    if (! result.exists()) {\n      throw new IllegalArgumentException(type + \" Resource does not exist \" + result.getName());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Helper utility for building resources from arbitrary user input paths/urls\n   * if input is null, returns null; otherwise attempts to build Resource and verifies that Resource exists.\n   */\n  private static final Resource tryNewResource(String userInput, String type) {\n    if (null == userInput) {\n      return null;\n    }\n    Resource result;\n    try {\n      result = Resource.newResource(userInput);\n    } catch (MalformedURLException e) {\n      throw new IllegalArgumentException(\"Can't build \" + type + \" Resource: \" + e.getMessage(), e);\n    }\n    if (! result.exists()) {\n      throw new IllegalArgumentException(type + \" Resource does not exist \" + result.getName());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e67ae138c1173c6193dbcfd9a94142b99ed2a0c5","date":1524429517,"type":4,"author":"Chris Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#tryNewResource(String,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Helper utility for building resources from arbitrary user input paths/urls\n   * if input is null, returns null; otherwise attempts to build Resource and verifies that Resource exists.\n   */\n  private static final Resource tryNewResource(String userInput, String type) {\n    if (null == userInput) {\n      return null;\n    }\n    Resource result;\n    try {\n      result = Resource.newResource(userInput);\n    } catch (IOException e) {\n      throw new IllegalArgumentException(\"Can't build \" + type + \" Resource: \" + e.getMessage(), e);\n    }\n    if (! result.exists()) {\n      throw new IllegalArgumentException(type + \" Resource does not exist \" + result.getName());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["d470c8182e92b264680e34081b75e70a9f2b3c89","269c5aee1e7702d512e3f45bf1f01afd15a2af5f"],"e67ae138c1173c6193dbcfd9a94142b99ed2a0c5":["b94236357aaa22b76c10629851fe4e376e0cea82"],"269c5aee1e7702d512e3f45bf1f01afd15a2af5f":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"04effb6bae0254b6d8632d67c1ec9121b33aa56e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e67ae138c1173c6193dbcfd9a94142b99ed2a0c5"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","04effb6bae0254b6d8632d67c1ec9121b33aa56e"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["e67ae138c1173c6193dbcfd9a94142b99ed2a0c5"],"e67ae138c1173c6193dbcfd9a94142b99ed2a0c5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"269c5aee1e7702d512e3f45bf1f01afd15a2af5f":["b94236357aaa22b76c10629851fe4e376e0cea82"],"04effb6bae0254b6d8632d67c1ec9121b33aa56e":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["04effb6bae0254b6d8632d67c1ec9121b33aa56e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["b94236357aaa22b76c10629851fe4e376e0cea82","269c5aee1e7702d512e3f45bf1f01afd15a2af5f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}