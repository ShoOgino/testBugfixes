{"path":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#makeLock(String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#makeLock(String).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/store/MockDirectoryWrapper#makeLock(String).mjava","sourceNew":"  @Override\n  public synchronized Lock makeLock(String name) {\n    maybeYield();\n    return delegate.makeLock(name);\n  }\n\n","sourceOld":"  @Override\n  public synchronized Lock makeLock(String name) {\n    maybeYield();\n    return delegate.makeLock(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0cc32d96f128d1904bfd6876bf8b7e4620ed8da0","date":1345003667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#makeLock(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#makeLock(String).mjava","sourceNew":"  @Override\n  public synchronized Lock makeLock(String name) {\n    maybeYield();\n    return getLockFactory().makeLock(name);\n  }\n\n","sourceOld":"  @Override\n  public synchronized Lock makeLock(String name) {\n    maybeYield();\n    return delegate.makeLock(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","date":1345029782,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#makeLock(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#makeLock(String).mjava","sourceNew":"  @Override\n  public synchronized Lock makeLock(String name) {\n    maybeYield();\n    return getLockFactory().makeLock(name);\n  }\n\n","sourceOld":"  @Override\n  public synchronized Lock makeLock(String name) {\n    maybeYield();\n    return delegate.makeLock(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b05c56a41b733e02a189c48895922b5bd8c7f3d1","date":1345033322,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#makeLock(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#makeLock(String).mjava","sourceNew":"  @Override\n  public synchronized Lock makeLock(String name) {\n    maybeYield();\n    return getLockFactory().makeLock(name);\n  }\n\n","sourceOld":"  @Override\n  public synchronized Lock makeLock(String name) {\n    maybeYield();\n    return delegate.makeLock(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285cdc737de75b7cc7c284a156b20214deb67bca","date":1415535483,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#makeLock(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#makeLock(String).mjava","sourceNew":"  @Override\n  public synchronized Lock makeLock(String name) {\n    maybeYield();\n    if (wrapLocking) {\n      return new AssertingLock(super.makeLock(name), name);\n    } else {\n      return super.makeLock(name);\n    }\n  }\n\n","sourceOld":"  @Override\n  public synchronized Lock makeLock(String name) {\n    maybeYield();\n    return getLockFactory().makeLock(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"618635065f043788c9e034f96ca5cd5cea1b4592","date":1433442044,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#makeLock(String).mjava","sourceNew":null,"sourceOld":"  @Override\n  public synchronized Lock makeLock(String name) {\n    maybeYield();\n    if (wrapLocking) {\n      return new AssertingLock(super.makeLock(name), name);\n    } else {\n      return super.makeLock(name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"618635065f043788c9e034f96ca5cd5cea1b4592":["285cdc737de75b7cc7c284a156b20214deb67bca"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","0cc32d96f128d1904bfd6876bf8b7e4620ed8da0"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"285cdc737de75b7cc7c284a156b20214deb67bca":["0cc32d96f128d1904bfd6876bf8b7e4620ed8da0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","0cc32d96f128d1904bfd6876bf8b7e4620ed8da0"],"0cc32d96f128d1904bfd6876bf8b7e4620ed8da0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["618635065f043788c9e034f96ca5cd5cea1b4592"]},"commit2Childs":{"618635065f043788c9e034f96ca5cd5cea1b4592":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","0cc32d96f128d1904bfd6876bf8b7e4620ed8da0"],"285cdc737de75b7cc7c284a156b20214deb67bca":["618635065f043788c9e034f96ca5cd5cea1b4592"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":[],"0cc32d96f128d1904bfd6876bf8b7e4620ed8da0":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","285cdc737de75b7cc7c284a156b20214deb67bca","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}