{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runTool(CommandLine).mjava","commits":[{"id":"3d1db6f36874f1979916ccb702329fbb09602af8","date":1421105614,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runTool(CommandLine).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int runTool(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", \"http://localhost:8983/solr\");\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      int result = -1;\n      Tool tool = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool();\n        } else {\n          tool = new CreateCoreTool();\n        }\n        result = tool.runTool(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["22440a249a0bc8ef779d5a60720725614a9460d4","72c5a4ac2903750897fc029f40c01fd88a29815a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"72c5a4ac2903750897fc029f40c01fd88a29815a","date":1422370832,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runTool(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runTool(CommandLine).mjava","sourceNew":"    @Override\n    public int runTool(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", \"http://localhost:8983/solr\");\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      int result = -1;\n      Tool tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool();\n        } else {\n          tool = new CreateCoreTool();\n        }\n        result = tool.runTool(cli);\n      } catch (Exception exc) {\n        System.err.println(\"ERROR: create failed due to: \"+exc.getMessage());\n        System.err.println();\n        result = 1;\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public int runTool(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", \"http://localhost:8983/solr\");\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      int result = -1;\n      Tool tool = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool();\n        } else {\n          tool = new CreateCoreTool();\n        }\n        result = tool.runTool(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return result;\n    }\n\n","bugFix":["3d1db6f36874f1979916ccb702329fbb09602af8"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"22440a249a0bc8ef779d5a60720725614a9460d4","date":1432375174,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runTool(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runTool(CommandLine).mjava","sourceNew":"    @Override\n    public int runTool(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      int result = -1;\n      Tool tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool();\n        } else {\n          tool = new CreateCoreTool();\n        }\n        result = tool.runTool(cli);\n      } catch (Exception exc) {\n        System.err.println(\"ERROR: create failed due to: \"+exc.getMessage());\n        System.err.println();\n        result = 1;\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public int runTool(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", \"http://localhost:8983/solr\");\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      int result = -1;\n      Tool tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool();\n        } else {\n          tool = new CreateCoreTool();\n        }\n        result = tool.runTool(cli);\n      } catch (Exception exc) {\n        System.err.println(\"ERROR: create failed due to: \"+exc.getMessage());\n        System.err.println();\n        result = 1;\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return result;\n    }\n\n","bugFix":["3d1db6f36874f1979916ccb702329fbb09602af8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ca20be81c9284c840498143264e583ccbb8525a","date":1438705932,"type":5,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateTool#runTool(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      Tool tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool(stdout);\n        } else {\n          tool = new CreateCoreTool(stdout);\n        }\n        tool.runTool(cli);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","sourceOld":"    @Override\n    public int runTool(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      int result = -1;\n      Tool tool = null;\n      try {\n        Map<String, Object> systemInfo = getJson(httpClient, systemInfoUrl, 2);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          tool = new CreateCollectionTool();\n        } else {\n          tool = new CreateCoreTool();\n        }\n        result = tool.runTool(cli);\n      } catch (Exception exc) {\n        System.err.println(\"ERROR: create failed due to: \"+exc.getMessage());\n        System.err.println();\n        result = 1;\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return result;\n    }\n\n","bugFix":null,"bugIntro":["6b7179395314ddf699861fdd8c18857152660e84"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"4ca20be81c9284c840498143264e583ccbb8525a":["22440a249a0bc8ef779d5a60720725614a9460d4"],"3d1db6f36874f1979916ccb702329fbb09602af8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"22440a249a0bc8ef779d5a60720725614a9460d4":["72c5a4ac2903750897fc029f40c01fd88a29815a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"72c5a4ac2903750897fc029f40c01fd88a29815a":["3d1db6f36874f1979916ccb702329fbb09602af8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4ca20be81c9284c840498143264e583ccbb8525a"]},"commit2Childs":{"4ca20be81c9284c840498143264e583ccbb8525a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3d1db6f36874f1979916ccb702329fbb09602af8":["72c5a4ac2903750897fc029f40c01fd88a29815a"],"22440a249a0bc8ef779d5a60720725614a9460d4":["4ca20be81c9284c840498143264e583ccbb8525a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3d1db6f36874f1979916ccb702329fbb09602af8"],"72c5a4ac2903750897fc029f40c01fd88a29815a":["22440a249a0bc8ef779d5a60720725614a9460d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}