{"path":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],int).mjava","commits":[{"id":"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0","date":1358188277,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T]).mjava","sourceNew":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, Outputs<T> outputs, int bytesPageBits) {\n    version = VERSION_CURRENT;\n    packed = true;\n    this.inputType = inputType;\n    bytes = new BytesStore(bytesPageBits);\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    \n    // NOTE: bogus because this is only used during\n    // building; we need to break out mutable FST from\n    // immutable\n    allowArrayArcs = false;\n  }\n\n","sourceOld":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, Outputs<T> outputs) {\n    version = VERSION_CURRENT;\n    packed = true;\n    this.inputType = inputType;\n    // 32 KB blocks:\n    bytes = new BytesStore(15);\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    \n    // NOTE: bogus because this is only used during\n    // building; we need to break out mutable FST from\n    // immutable\n    allowArrayArcs = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,PackedInts.Reader,Outputs[T]).mjava","sourceNew":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, Outputs<T> outputs, int bytesPageBits) {\n    version = VERSION_CURRENT;\n    packed = true;\n    this.inputType = inputType;\n    bytes = new BytesStore(bytesPageBits);\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    \n    // NOTE: bogus because this is only used during\n    // building; we need to break out mutable FST from\n    // immutable\n    allowArrayArcs = false;\n  }\n\n","sourceOld":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, PackedInts.Reader nodeRefToAddress, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    bytes = new byte[128];\n    this.nodeRefToAddress = nodeRefToAddress;\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    writer = new DefaultBytesWriter();\n    \n    // NOTE: bogus because this is only used during\n    // building; we need to break out mutable FST from\n    // immutable\n    allowArrayArcs = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1abb939fb41b2fe4f89fd518f3da288c0213341d","date":1435657417,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],int).mjava","sourceNew":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, Outputs<T> outputs, int bytesPageBits) {\n    version = VERSION_CURRENT;\n    packed = true;\n    this.inputType = inputType;\n    bytesArray = null;\n    bytes = new BytesStore(bytesPageBits);\n    this.outputs = outputs;\n  }\n\n","sourceOld":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, Outputs<T> outputs, int bytesPageBits) {\n    version = VERSION_CURRENT;\n    packed = true;\n    this.inputType = inputType;\n    bytes = new BytesStore(bytesPageBits);\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    \n    // NOTE: bogus because this is only used during\n    // building; we need to break out mutable FST from\n    // immutable\n    allowArrayArcs = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6244579a467d5f2673ac98265d74bddbea1a8114","date":1478786509,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],int).mjava","sourceNew":"  // make a new empty FST, for building; Builder invokes\n  // this ctor\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, int bytesPageBits) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    version = VERSION_CURRENT;\n    bytesArray = null;\n    bytes = new BytesStore(bytesPageBits);\n    // pad: ensure no node gets address 0 which is reserved to mean\n    // the stop state w/ no arcs\n    bytes.writeByte((byte) 0);\n\n    emptyOutput = null;\n  }\n\n","sourceOld":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, Outputs<T> outputs, int bytesPageBits) {\n    version = VERSION_CURRENT;\n    packed = true;\n    this.inputType = inputType;\n    bytesArray = null;\n    bytes = new BytesStore(bytesPageBits);\n    this.outputs = outputs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],int).mjava","sourceNew":"  // make a new empty FST, for building; Builder invokes\n  // this ctor\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, int bytesPageBits) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    version = VERSION_CURRENT;\n    bytesArray = null;\n    bytes = new BytesStore(bytesPageBits);\n    // pad: ensure no node gets address 0 which is reserved to mean\n    // the stop state w/ no arcs\n    bytes.writeByte((byte) 0);\n\n    emptyOutput = null;\n  }\n\n","sourceOld":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, Outputs<T> outputs, int bytesPageBits) {\n    version = VERSION_CURRENT;\n    packed = true;\n    this.inputType = inputType;\n    bytesArray = null;\n    bytes = new BytesStore(bytesPageBits);\n    this.outputs = outputs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dcc12263939c1d6c4b4a2015f67d1b6d97f375a4","date":1550598742,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],int).mjava","sourceNew":"  // make a new empty FST, for building; Builder invokes\n  // this ctor\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, int bytesPageBits) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    version = VERSION_CURRENT;\n    fstStore = null;\n    bytes = new BytesStore(bytesPageBits);\n    // pad: ensure no node gets address 0 which is reserved to mean\n    // the stop state w/ no arcs\n    bytes.writeByte((byte) 0);\n\n    emptyOutput = null;\n  }\n\n","sourceOld":"  // make a new empty FST, for building; Builder invokes\n  // this ctor\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, int bytesPageBits) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    version = VERSION_CURRENT;\n    bytesArray = null;\n    bytes = new BytesStore(bytesPageBits);\n    // pad: ensure no node gets address 0 which is reserved to mean\n    // the stop state w/ no arcs\n    bytes.writeByte((byte) 0);\n\n    emptyOutput = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54204c8a3ca26aeafd273139fc29baf70d0f6786","date":1564170395,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],int).mjava","sourceNew":"  // make a new empty FST, for building; Builder invokes this\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, int bytesPageBits) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    fstStore = null;\n    bytes = new BytesStore(bytesPageBits);\n    // pad: ensure no node gets address 0 which is reserved to mean\n    // the stop state w/ no arcs\n    bytes.writeByte((byte) 0);\n    emptyOutput = null;\n  }\n\n","sourceOld":"  // make a new empty FST, for building; Builder invokes\n  // this ctor\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, int bytesPageBits) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    version = VERSION_CURRENT;\n    fstStore = null;\n    bytes = new BytesStore(bytesPageBits);\n    // pad: ensure no node gets address 0 which is reserved to mean\n    // the stop state w/ no arcs\n    bytes.writeByte((byte) 0);\n\n    emptyOutput = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],int).mjava","sourceNew":"  // make a new empty FST, for building; Builder invokes this\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, int bytesPageBits) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    fstStore = null;\n    bytes = new BytesStore(bytesPageBits);\n    // pad: ensure no node gets address 0 which is reserved to mean\n    // the stop state w/ no arcs\n    bytes.writeByte((byte) 0);\n    emptyOutput = null;\n  }\n\n","sourceOld":"  // make a new empty FST, for building; Builder invokes\n  // this ctor\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, int bytesPageBits) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    version = VERSION_CURRENT;\n    fstStore = null;\n    bytes = new BytesStore(bytesPageBits);\n    // pad: ensure no node gets address 0 which is reserved to mean\n    // the stop state w/ no arcs\n    bytes.writeByte((byte) 0);\n\n    emptyOutput = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54204c8a3ca26aeafd273139fc29baf70d0f6786":["dcc12263939c1d6c4b4a2015f67d1b6d97f375a4"],"1abb939fb41b2fe4f89fd518f3da288c0213341d":["d3c397b1515e745d8b12d70edfc0e17cb7eac7f0"],"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d3c397b1515e745d8b12d70edfc0e17cb7eac7f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6244579a467d5f2673ac98265d74bddbea1a8114":["1abb939fb41b2fe4f89fd518f3da288c0213341d"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["1abb939fb41b2fe4f89fd518f3da288c0213341d","6244579a467d5f2673ac98265d74bddbea1a8114"],"f8061ddd97f3352007d927dae445884a6f3d857b":["dcc12263939c1d6c4b4a2015f67d1b6d97f375a4","54204c8a3ca26aeafd273139fc29baf70d0f6786"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54204c8a3ca26aeafd273139fc29baf70d0f6786"],"dcc12263939c1d6c4b4a2015f67d1b6d97f375a4":["6244579a467d5f2673ac98265d74bddbea1a8114"]},"commit2Childs":{"54204c8a3ca26aeafd273139fc29baf70d0f6786":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1abb939fb41b2fe4f89fd518f3da288c0213341d":["6244579a467d5f2673ac98265d74bddbea1a8114","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0":["1abb939fb41b2fe4f89fd518f3da288c0213341d","8917bfede3b4ca30f4305c1e391e9218959cd723"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3c397b1515e745d8b12d70edfc0e17cb7eac7f0","8917bfede3b4ca30f4305c1e391e9218959cd723"],"6244579a467d5f2673ac98265d74bddbea1a8114":["199dfa410f1fdbfd3294106b04096cce5ed34b21","dcc12263939c1d6c4b4a2015f67d1b6d97f375a4"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"dcc12263939c1d6c4b4a2015f67d1b6d97f375a4":["54204c8a3ca26aeafd273139fc29baf70d0f6786","f8061ddd97f3352007d927dae445884a6f3d857b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","199dfa410f1fdbfd3294106b04096cce5ed34b21","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}