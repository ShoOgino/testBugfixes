{"path":"sandbox/contributions/hilighter/src/java/org/apache/lucene/search/highlight/HighlighterTest#testMultiSearcher().mjava","commits":[{"id":"e3847974308b7ee4bf1bd64ab343a6758eb9ccb1","date":1081469776,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/hilighter/src/java/org/apache/lucene/search/highlight/HighlighterTest#testMultiSearcher().mjava","pathOld":"/dev/null","sourceNew":"\tpublic void testMultiSearcher() throws Exception\n\t{\n\t\t//setup index 1\n\t\tRAMDirectory ramDir1 = new RAMDirectory();\n\t\tIndexWriter writer1 = new IndexWriter(ramDir1, new StandardAnalyzer(), true);\n\t\tDocument d = new Document();\n\t\tField f = new Field(FIELD_NAME, \"multiOne\", true, true, true);\n\t\td.add(f);\t\t\n\t\twriter1.addDocument(d);\n\t\twriter1.optimize();\n\t\twriter1.close();\n\t\tIndexReader reader1 = IndexReader.open(ramDir1);\n\n\t\t//setup index 2\n\t\tRAMDirectory ramDir2 = new RAMDirectory();\n\t\tIndexWriter writer2 = new IndexWriter(ramDir2, new StandardAnalyzer(), true);\n\t\td = new Document();\n\t\tf = new Field(FIELD_NAME, \"multiTwo\", true, true, true);\n\t\td.add(f);\t\t\n\t\twriter2.addDocument(d);\n\t\twriter2.optimize();\n\t\twriter2.close();\n\t\tIndexReader reader2 = IndexReader.open(ramDir2);\n\n\t\t\n\n\t\tIndexSearcher searchers[]=new IndexSearcher[2]; \n\t\tsearchers[0] = new IndexSearcher(ramDir1);\n\t\tsearchers[1] = new IndexSearcher(ramDir2);\n\t\tMultiSearcher multiSearcher=new MultiSearcher(searchers);\n\t\tquery = QueryParser.parse(\"multi*\", FIELD_NAME, new StandardAnalyzer());\n\t\tSystem.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n\t\t//at this point the multisearcher calls combine(query[])\n\t\thits = multiSearcher.search(query);\n\n\t\t//query = QueryParser.parse(\"multi*\", FIELD_NAME, new StandardAnalyzer());\n\t\tQuery expandedQueries[]=new Query[2];\n\t\texpandedQueries[0]=query.rewrite(reader1);\n\t\texpandedQueries[1]=query.rewrite(reader2);\n\t\tquery=query.combine(expandedQueries);\n\t\t\n\t\t\n\t\t//create an instance of the highlighter with the tags used to surround highlighted text\n\t\tHighlighter highlighter =\n\t\t\tnew Highlighter(this,new QueryScorer(query));\n\n\t\tfor (int i = 0; i < hits.length(); i++)\n\t\t{\n\t\t\tString text = hits.doc(i).get(FIELD_NAME);\n\t\t\tTokenStream tokenStream=analyzer.tokenStream(FIELD_NAME,new StringReader(text));\n\t\t\tString highlightedText = highlighter.getBestFragment(tokenStream,text);\n\t\t\tSystem.out.println(highlightedText);\n\t\t}\n\t\tassertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\", numHighlights == 2);\t\t\n\t\t\n\t\t\n\t\t\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e36e216d6ddce8d71e813a8b0d29d42d4c5025b9","date":1081470820,"type":4,"author":"Erik Hatcher","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/hilighter/src/java/org/apache/lucene/search/highlight/HighlighterTest#testMultiSearcher().mjava","sourceNew":null,"sourceOld":"\tpublic void testMultiSearcher() throws Exception\n\t{\n\t\t//setup index 1\n\t\tRAMDirectory ramDir1 = new RAMDirectory();\n\t\tIndexWriter writer1 = new IndexWriter(ramDir1, new StandardAnalyzer(), true);\n\t\tDocument d = new Document();\n\t\tField f = new Field(FIELD_NAME, \"multiOne\", true, true, true);\n\t\td.add(f);\t\t\n\t\twriter1.addDocument(d);\n\t\twriter1.optimize();\n\t\twriter1.close();\n\t\tIndexReader reader1 = IndexReader.open(ramDir1);\n\n\t\t//setup index 2\n\t\tRAMDirectory ramDir2 = new RAMDirectory();\n\t\tIndexWriter writer2 = new IndexWriter(ramDir2, new StandardAnalyzer(), true);\n\t\td = new Document();\n\t\tf = new Field(FIELD_NAME, \"multiTwo\", true, true, true);\n\t\td.add(f);\t\t\n\t\twriter2.addDocument(d);\n\t\twriter2.optimize();\n\t\twriter2.close();\n\t\tIndexReader reader2 = IndexReader.open(ramDir2);\n\n\t\t\n\n\t\tIndexSearcher searchers[]=new IndexSearcher[2]; \n\t\tsearchers[0] = new IndexSearcher(ramDir1);\n\t\tsearchers[1] = new IndexSearcher(ramDir2);\n\t\tMultiSearcher multiSearcher=new MultiSearcher(searchers);\n\t\tquery = QueryParser.parse(\"multi*\", FIELD_NAME, new StandardAnalyzer());\n\t\tSystem.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n\t\t//at this point the multisearcher calls combine(query[])\n\t\thits = multiSearcher.search(query);\n\n\t\t//query = QueryParser.parse(\"multi*\", FIELD_NAME, new StandardAnalyzer());\n\t\tQuery expandedQueries[]=new Query[2];\n\t\texpandedQueries[0]=query.rewrite(reader1);\n\t\texpandedQueries[1]=query.rewrite(reader2);\n\t\tquery=query.combine(expandedQueries);\n\t\t\n\t\t\n\t\t//create an instance of the highlighter with the tags used to surround highlighted text\n\t\tHighlighter highlighter =\n\t\t\tnew Highlighter(this,new QueryScorer(query));\n\n\t\tfor (int i = 0; i < hits.length(); i++)\n\t\t{\n\t\t\tString text = hits.doc(i).get(FIELD_NAME);\n\t\t\tTokenStream tokenStream=analyzer.tokenStream(FIELD_NAME,new StringReader(text));\n\t\t\tString highlightedText = highlighter.getBestFragment(tokenStream,text);\n\t\t\tSystem.out.println(highlightedText);\n\t\t}\n\t\tassertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\", numHighlights == 2);\t\t\n\t\t\n\t\t\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e36e216d6ddce8d71e813a8b0d29d42d4c5025b9":["e3847974308b7ee4bf1bd64ab343a6758eb9ccb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e36e216d6ddce8d71e813a8b0d29d42d4c5025b9"],"e3847974308b7ee4bf1bd64ab343a6758eb9ccb1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3847974308b7ee4bf1bd64ab343a6758eb9ccb1"],"e36e216d6ddce8d71e813a8b0d29d42d4c5025b9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e3847974308b7ee4bf1bd64ab343a6758eb9ccb1":["e36e216d6ddce8d71e813a8b0d29d42d4c5025b9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}