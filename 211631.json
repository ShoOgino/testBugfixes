{"path":"solr/solrj/src/test/org/apache/solr/recipe/TestPolicy#testOperands().mjava","commits":[{"id":"752049b8e30557f067592844bff40caaea288062","date":1490707105,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/recipe/TestPolicy#testOperands().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/recipe/TestRuleSorter#testOperands().mjava","sourceNew":"  public void testOperands() {\n    Clause c = new Clause((Map<String, Object>) Utils.fromJSONString(\"{replica:'<2', node:'#ANY'}\"));\n    assertFalse(c.replica.isPass(3));\n    assertFalse(c.replica.isPass(2));\n    assertTrue(c.replica.isPass(1));\n\n    c = new Clause((Map<String, Object>) Utils.fromJSONString(\"{replica:'>2', node:'#ANY'}\"));\n    assertTrue(c.replica.isPass(3));\n    assertFalse(c.replica.isPass(2));\n    assertFalse(c.replica.isPass(1));\n\n    c = new Clause((Map<String, Object>) Utils.fromJSONString(\"{nodeRole:'!overseer'}\"));\n    assertTrue(c.tag.isPass(\"OVERSEER\"));\n    assertFalse(c.tag.isPass(\"overseer\"));\n\n\n  }\n\n","sourceOld":"  public void testOperands() {\n    Clause c = new Clause((Map<String, Object>) Utils.fromJSONString(\"{replica:'<2', node:'#ANY'}\"));\n    assertFalse(c.replica.isPass(3));\n    assertFalse(c.replica.isPass(2));\n    assertTrue(c.replica.isPass(1));\n\n    c = new Clause((Map<String, Object>) Utils.fromJSONString(\"{replica:'>2', node:'#ANY'}\"));\n    assertTrue(c.replica.isPass(3));\n    assertFalse(c.replica.isPass(2));\n    assertFalse(c.replica.isPass(1));\n\n    c = new Clause((Map<String, Object>) Utils.fromJSONString(\"{nodeRole:'!overseer'}\"));\n    assertTrue(c.tag.isPass(\"OVERSEER\"));\n    assertFalse(c.tag.isPass(\"overseer\"));\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf","date":1491191579,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/recipe/TestPolicy#testOperands().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/recipe/TestPolicy#testOperands().mjava","sourceNew":"  public void testOperands() {\n    Clause c = new Clause((Map<String, Object>) Utils.fromJSONString(\"{replica:'<2', node:'#ANY'}\"));\n    assertFalse(c.replica.isPass(3));\n    assertFalse(c.replica.isPass(2));\n    assertTrue(c.replica.isPass(1));\n\n    c = new Clause((Map<String, Object>) Utils.fromJSONString(\"{replica:'>2', node:'#ANY'}\"));\n    assertTrue(c.replica.isPass(3));\n    assertFalse(c.replica.isPass(2));\n    assertFalse(c.replica.isPass(1));\n\n    c = new Clause((Map<String, Object>) Utils.fromJSONString(\"{nodeRole:'!overseer'}\"));\n    assertTrue(c.tag.isPass(\"OVERSEER\"));\n    assertFalse(c.tag.isPass(\"overseer\"));\n  }\n\n","sourceOld":"  public void testOperands() {\n    Clause c = new Clause((Map<String, Object>) Utils.fromJSONString(\"{replica:'<2', node:'#ANY'}\"));\n    assertFalse(c.replica.isPass(3));\n    assertFalse(c.replica.isPass(2));\n    assertTrue(c.replica.isPass(1));\n\n    c = new Clause((Map<String, Object>) Utils.fromJSONString(\"{replica:'>2', node:'#ANY'}\"));\n    assertTrue(c.replica.isPass(3));\n    assertFalse(c.replica.isPass(2));\n    assertFalse(c.replica.isPass(1));\n\n    c = new Clause((Map<String, Object>) Utils.fromJSONString(\"{nodeRole:'!overseer'}\"));\n    assertTrue(c.tag.isPass(\"OVERSEER\"));\n    assertFalse(c.tag.isPass(\"overseer\"));\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"653c1ca305e0065ee988a09e59c8316b8cde02fd","date":1492506780,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/autoscaling/TestPolicy#testOperands().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/recipe/TestPolicy#testOperands().mjava","sourceNew":"  public void testOperands() {\n    Clause c = new Clause((Map<String, Object>) Utils.fromJSONString(\"{replica:'<2', node:'#ANY'}\"));\n    assertFalse(c.replica.isPass(3));\n    assertFalse(c.replica.isPass(2));\n    assertTrue(c.replica.isPass(1));\n\n    c = new Clause((Map<String, Object>) Utils.fromJSONString(\"{replica:'>2', node:'#ANY'}\"));\n    assertTrue(c.replica.isPass(3));\n    assertFalse(c.replica.isPass(2));\n    assertFalse(c.replica.isPass(1));\n\n    c = new Clause((Map<String, Object>) Utils.fromJSONString(\"{nodeRole:'!overseer'}\"));\n    assertTrue(c.tag.isPass(\"OVERSEER\"));\n    assertFalse(c.tag.isPass(\"overseer\"));\n  }\n\n","sourceOld":"  public void testOperands() {\n    Clause c = new Clause((Map<String, Object>) Utils.fromJSONString(\"{replica:'<2', node:'#ANY'}\"));\n    assertFalse(c.replica.isPass(3));\n    assertFalse(c.replica.isPass(2));\n    assertTrue(c.replica.isPass(1));\n\n    c = new Clause((Map<String, Object>) Utils.fromJSONString(\"{replica:'>2', node:'#ANY'}\"));\n    assertTrue(c.replica.isPass(3));\n    assertFalse(c.replica.isPass(2));\n    assertFalse(c.replica.isPass(1));\n\n    c = new Clause((Map<String, Object>) Utils.fromJSONString(\"{nodeRole:'!overseer'}\"));\n    assertTrue(c.tag.isPass(\"OVERSEER\"));\n    assertFalse(c.tag.isPass(\"overseer\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"752049b8e30557f067592844bff40caaea288062":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"653c1ca305e0065ee988a09e59c8316b8cde02fd":["ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf"],"ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf":["752049b8e30557f067592844bff40caaea288062"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"752049b8e30557f067592844bff40caaea288062":["ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["752049b8e30557f067592844bff40caaea288062","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"653c1ca305e0065ee988a09e59c8316b8cde02fd":[],"ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf":["653c1ca305e0065ee988a09e59c8316b8cde02fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["653c1ca305e0065ee988a09e59c8316b8cde02fd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}