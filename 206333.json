{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testEmpty().mjava","commits":[{"id":"04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3","date":1412358952,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testEmpty().mjava","pathOld":"/dev/null","sourceNew":"  // test that empty CFS is empty\n  public void testEmpty() throws IOException {\n    Directory dir = newDirectory();\n    \n    final SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.<String>emptyList(), MergeState.CheckAbort.NONE, IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    assertEquals(0, cfs.listAll().length);\n    cfs.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0e288a70f2f9b7ebd3942d8608636fe6f825894","date":1412362601,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testEmpty().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testEmpty().mjava","sourceNew":"  // test that empty CFS is empty\n  public void testEmpty() throws IOException {\n    Directory dir = newDirectory();\n    \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.<String>emptyList(), MergeState.CheckAbort.NONE, IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    assertEquals(0, cfs.listAll().length);\n    cfs.close();\n    dir.close();\n  }\n\n","sourceOld":"  // test that empty CFS is empty\n  public void testEmpty() throws IOException {\n    Directory dir = newDirectory();\n    \n    final SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.<String>emptyList(), MergeState.CheckAbort.NONE, IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    assertEquals(0, cfs.listAll().length);\n    cfs.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testEmpty().mjava","pathOld":"/dev/null","sourceNew":"  // test that empty CFS is empty\n  public void testEmpty() throws IOException {\n    Directory dir = newDirectory();\n    \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.<String>emptyList(), MergeState.CheckAbort.NONE, IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    assertEquals(0, cfs.listAll().length);\n    cfs.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5faf65b6692f15cca0f87bf8666c87899afc619f","date":1420468108,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testEmpty().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testEmpty().mjava","sourceNew":"  // test that empty CFS is empty\n  public void testEmpty() throws IOException {\n    Directory dir = newDirectory();\n    \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.<String>emptyList(), IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    assertEquals(0, cfs.listAll().length);\n    cfs.close();\n    dir.close();\n  }\n\n","sourceOld":"  // test that empty CFS is empty\n  public void testEmpty() throws IOException {\n    Directory dir = newDirectory();\n    \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.<String>emptyList(), MergeState.CheckAbort.NONE, IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    assertEquals(0, cfs.listAll().length);\n    cfs.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75d243fa001c0783996918dbbe60b55cbaeeff46","date":1422502815,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testEmpty().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testEmpty().mjava","sourceNew":"  // test that empty CFS is empty\n  public void testEmpty() throws IOException {\n    Directory dir = newDirectory();\n    \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.setFiles(Collections.emptySet());\n    si.getCodec().compoundFormat().write(dir, si, IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    assertEquals(0, cfs.listAll().length);\n    cfs.close();\n    dir.close();\n  }\n\n","sourceOld":"  // test that empty CFS is empty\n  public void testEmpty() throws IOException {\n    Directory dir = newDirectory();\n    \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.<String>emptyList(), IOContext.DEFAULT);\n    Directory cfs = si.getCodec().compoundFormat().getCompoundReader(dir, si, IOContext.DEFAULT);\n    assertEquals(0, cfs.listAll().length);\n    cfs.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e288a70f2f9b7ebd3942d8608636fe6f825894"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5faf65b6692f15cca0f87bf8666c87899afc619f":["9bb9a29a5e71a90295f175df8919802993142c9a"],"75d243fa001c0783996918dbbe60b55cbaeeff46":["5faf65b6692f15cca0f87bf8666c87899afc619f"],"a0e288a70f2f9b7ebd3942d8608636fe6f825894":["04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["75d243fa001c0783996918dbbe60b55cbaeeff46"]},"commit2Childs":{"04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3":["a0e288a70f2f9b7ebd3942d8608636fe6f825894"],"9bb9a29a5e71a90295f175df8919802993142c9a":["5faf65b6692f15cca0f87bf8666c87899afc619f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3","9bb9a29a5e71a90295f175df8919802993142c9a"],"5faf65b6692f15cca0f87bf8666c87899afc619f":["75d243fa001c0783996918dbbe60b55cbaeeff46"],"75d243fa001c0783996918dbbe60b55cbaeeff46":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e288a70f2f9b7ebd3942d8608636fe6f825894":["9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}