{"path":"lucene/src/test/org/apache/lucene/store/MockRAMDirectory#sync(Collection[String]).mjava","commits":[{"id":"e4b4e97a5e8ab5b96cc56c561131d720c756756b","date":1269362401,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/MockRAMDirectory#sync(Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public synchronized void sync(Collection<String> names) throws IOException {\n    for (String name : names)\n      maybeThrowDeterministicException();\n    if (crashed)\n      throw new IOException(\"cannot sync after crash\");\n    unSyncedFiles.removeAll(names);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/MockDirectoryWrapper#sync(Collection[String]).mjava","pathOld":"lucene/src/test/org/apache/lucene/store/MockRAMDirectory#sync(Collection[String]).mjava","sourceNew":"  @Override\n  public synchronized void sync(Collection<String> names) throws IOException {\n    for (String name : names)\n      maybeThrowDeterministicException();\n    if (crashed)\n      throw new IOException(\"cannot sync after crash\");\n    unSyncedFiles.removeAll(names);\n    delegate.sync(names);\n  }\n\n","sourceOld":"  @Override\n  public synchronized void sync(Collection<String> names) throws IOException {\n    for (String name : names)\n      maybeThrowDeterministicException();\n    if (crashed)\n      throw new IOException(\"cannot sync after crash\");\n    unSyncedFiles.removeAll(names);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/store/MockRAMDirectory#sync(Collection[String]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public synchronized void sync(Collection<String> names) throws IOException {\n    for (String name : names)\n      maybeThrowDeterministicException();\n    if (crashed)\n      throw new IOException(\"cannot sync after crash\");\n    unSyncedFiles.removeAll(names);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a05409176bd65129d67a785ee70e881e238a9aef":["e4b4e97a5e8ab5b96cc56c561131d720c756756b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e4b4e97a5e8ab5b96cc56c561131d720c756756b","a05409176bd65129d67a785ee70e881e238a9aef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a05409176bd65129d67a785ee70e881e238a9aef"],"e4b4e97a5e8ab5b96cc56c561131d720c756756b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e4b4e97a5e8ab5b96cc56c561131d720c756756b"],"a05409176bd65129d67a785ee70e881e238a9aef":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"e4b4e97a5e8ab5b96cc56c561131d720c756756b":["a05409176bd65129d67a785ee70e881e238a9aef","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}