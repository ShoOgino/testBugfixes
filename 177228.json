{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cn/ChineseAnalyzer#reusableTokenStream(String,Reader).mjava","commits":[{"id":"18359c8e12d55f66c27cfe7babe86283f06a6aa5","date":1250426225,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cn/ChineseAnalyzer#reusableTokenStream(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"    /**\n    * Returns a (possibly reused) TokenStream which tokenizes all the text in the\n    * provided Reader.\n    * \n    * @return A TokenStream build from a ChineseTokenizer filtered with\n    *         ChineseFilter.\n    */\n    public final TokenStream reusableTokenStream(String fieldName, Reader reader)\n      throws IOException {\n      /* tokenStream() is final, no back compat issue */\n      SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n      if (streams == null) {\n        streams = new SavedStreams();\n        streams.source = new ChineseTokenizer(reader);\n        streams.result = new ChineseFilter(streams.source);\n        setPreviousTokenStream(streams);\n      } else {\n        streams.source.reset(reader);\n      }\n      return streams.result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45b06c3ff8a4d9d3d751dd311e51c59303c2719c","date":1250600126,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cn/ChineseAnalyzer#reusableTokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cn/ChineseAnalyzer#reusableTokenStream(String,Reader).mjava","sourceNew":"    /**\n    * Returns a (possibly reused) {@link TokenStream} which tokenizes all the text in the\n    * provided {@link Reader}.\n    * \n    * @return A {@link TokenStream} built from a {@link ChineseTokenizer} \n    *   filtered with {@link ChineseFilter}.\n    */\n    public final TokenStream reusableTokenStream(String fieldName, Reader reader)\n      throws IOException {\n      /* tokenStream() is final, no back compat issue */\n      SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n      if (streams == null) {\n        streams = new SavedStreams();\n        streams.source = new ChineseTokenizer(reader);\n        streams.result = new ChineseFilter(streams.source);\n        setPreviousTokenStream(streams);\n      } else {\n        streams.source.reset(reader);\n      }\n      return streams.result;\n    }\n\n","sourceOld":"    /**\n    * Returns a (possibly reused) TokenStream which tokenizes all the text in the\n    * provided Reader.\n    * \n    * @return A TokenStream build from a ChineseTokenizer filtered with\n    *         ChineseFilter.\n    */\n    public final TokenStream reusableTokenStream(String fieldName, Reader reader)\n      throws IOException {\n      /* tokenStream() is final, no back compat issue */\n      SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n      if (streams == null) {\n        streams = new SavedStreams();\n        streams.source = new ChineseTokenizer(reader);\n        streams.result = new ChineseFilter(streams.source);\n        setPreviousTokenStream(streams);\n      } else {\n        streams.source.reset(reader);\n      }\n      return streams.result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cn/ChineseAnalyzer#reusableTokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cn/ChineseAnalyzer#reusableTokenStream(String,Reader).mjava","sourceNew":"    /**\n    * Returns a (possibly reused) {@link TokenStream} which tokenizes all the text in the\n    * provided {@link Reader}.\n    * \n    * @return A {@link TokenStream} built from a {@link ChineseTokenizer} \n    *   filtered with {@link ChineseFilter}.\n    */\n    @Override\n    public final TokenStream reusableTokenStream(String fieldName, Reader reader)\n      throws IOException {\n      /* tokenStream() is final, no back compat issue */\n      SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n      if (streams == null) {\n        streams = new SavedStreams();\n        streams.source = new ChineseTokenizer(reader);\n        streams.result = new ChineseFilter(streams.source);\n        setPreviousTokenStream(streams);\n      } else {\n        streams.source.reset(reader);\n      }\n      return streams.result;\n    }\n\n","sourceOld":"    /**\n    * Returns a (possibly reused) {@link TokenStream} which tokenizes all the text in the\n    * provided {@link Reader}.\n    * \n    * @return A {@link TokenStream} built from a {@link ChineseTokenizer} \n    *   filtered with {@link ChineseFilter}.\n    */\n    public final TokenStream reusableTokenStream(String fieldName, Reader reader)\n      throws IOException {\n      /* tokenStream() is final, no back compat issue */\n      SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n      if (streams == null) {\n        streams = new SavedStreams();\n        streams.source = new ChineseTokenizer(reader);\n        streams.result = new ChineseFilter(streams.source);\n        setPreviousTokenStream(streams);\n      } else {\n        streams.source.reset(reader);\n      }\n      return streams.result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc5fbfd4c64963aba52713a4496522540294d69","date":1262508497,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cn/ChineseAnalyzer#reusableTokenStream(String,Reader).mjava","sourceNew":null,"sourceOld":"    /**\n    * Returns a (possibly reused) {@link TokenStream} which tokenizes all the text in the\n    * provided {@link Reader}.\n    * \n    * @return A {@link TokenStream} built from a {@link ChineseTokenizer} \n    *   filtered with {@link ChineseFilter}.\n    */\n    @Override\n    public final TokenStream reusableTokenStream(String fieldName, Reader reader)\n      throws IOException {\n      /* tokenStream() is final, no back compat issue */\n      SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n      if (streams == null) {\n        streams = new SavedStreams();\n        streams.source = new ChineseTokenizer(reader);\n        streams.result = new ChineseFilter(streams.source);\n        setPreviousTokenStream(streams);\n      } else {\n        streams.source.reset(reader);\n      }\n      return streams.result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"18359c8e12d55f66c27cfe7babe86283f06a6aa5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["45b06c3ff8a4d9d3d751dd311e51c59303c2719c"],"45b06c3ff8a4d9d3d751dd311e51c59303c2719c":["18359c8e12d55f66c27cfe7babe86283f06a6aa5"],"ddc5fbfd4c64963aba52713a4496522540294d69":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc5fbfd4c64963aba52713a4496522540294d69"]},"commit2Childs":{"18359c8e12d55f66c27cfe7babe86283f06a6aa5":["45b06c3ff8a4d9d3d751dd311e51c59303c2719c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["18359c8e12d55f66c27cfe7babe86283f06a6aa5"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["ddc5fbfd4c64963aba52713a4496522540294d69"],"45b06c3ff8a4d9d3d751dd311e51c59303c2719c":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"ddc5fbfd4c64963aba52713a4496522540294d69":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}