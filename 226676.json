{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"modules/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SimpleSpatialFieldInfo fieldInfo = new SimpleSpatialFieldInfo(\"geo\");\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx));\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new Field(\"name\", \"Los Angeles\", StringField.TYPE_STORED));\n    losAngeles.add(prefixGridStrategy.createField(fieldInfo, point, true, true));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SimpleSpatialFieldInfo fieldInfo = new SimpleSpatialFieldInfo(\"geo\");\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx));\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new Field(\"name\", \"Los Angeles\", StringField.TYPE_STORED));\n    losAngeles.add(prefixGridStrategy.createField(fieldInfo, point, true, true));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SimpleSpatialFieldInfo fieldInfo = new SimpleSpatialFieldInfo(\"geo\");\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx));\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    losAngeles.add(prefixGridStrategy.createField(fieldInfo, point, true, true));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SimpleSpatialFieldInfo fieldInfo = new SimpleSpatialFieldInfo(\"geo\");\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx));\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new Field(\"name\", \"Los Angeles\", StringField.TYPE_STORED));\n    losAngeles.add(prefixGridStrategy.createField(fieldInfo, point, true, true));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":["b17c5c53627893d93f9261826cc6d9c447c5ee3a"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0415a016b37e58a017fed0a91234f733ab359971","date":1341458183,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    losAngeles.add(prefixGridStrategy.createField(point, true, true));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SimpleSpatialFieldInfo fieldInfo = new SimpleSpatialFieldInfo(\"geo\");\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx));\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    losAngeles.add(prefixGridStrategy.createField(fieldInfo, point, true, true));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"399d569d88e65d963440cdd3a3e2d5f7cdd1bd42","date":1341987627,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    losAngeles.add(prefixGridStrategy.createField(point));\n    losAngeles.add(prefixGridStrategy.createStoredField(point));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    losAngeles.add(prefixGridStrategy.createField(point, true, true));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":["df0750324176e07de4ead8572b1b011a640f4635"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"df0750324176e07de4ead8572b1b011a640f4635","date":1341988119,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    losAngeles.add(prefixGridStrategy.createField(point));\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), ctx.toString(point)));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    losAngeles.add(prefixGridStrategy.createField(point));\n    losAngeles.add(prefixGridStrategy.createStoredField(point));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":["399d569d88e65d963440cdd3a3e2d5f7cdd1bd42"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"42ea82a615127d578d4d21a6743834c45fa10468","date":1342101990,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (IndexableField field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), ctx.toString(point)));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    losAngeles.add(prefixGridStrategy.createField(point));\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), ctx.toString(point)));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (IndexableField field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), ctx.toString(point)));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SimpleSpatialFieldInfo fieldInfo = new SimpleSpatialFieldInfo(\"geo\");\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx));\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    losAngeles.add(prefixGridStrategy.createField(fieldInfo, point, true, true));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (IndexableField field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), ctx.toString(point)));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    losAngeles.add(prefixGridStrategy.createField(point, true, true));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"409324b31a1419d7c05a38211168cf317e39be77","date":1344866765,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), ctx.toString(point)));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (IndexableField field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), ctx.toString(point)));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), ctx.toString(point)));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (IndexableField field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), ctx.toString(point)));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"da956410d7a790f567af4e7e94584fb0930212f2","date":1346859431,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SpatialContext.GEO;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = ctx.makePoint(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), ctx.toString(point)));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), ctx.toString(point)));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"46e67dde361bddc1a35dc332c2a1e553d7a8ebd7","date":1347426169,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SpatialContext.GEO;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = ctx.makePoint(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), ctx.toString(point)));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"Intersects(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SpatialContext.GEO;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = ctx.makePoint(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), ctx.toString(point)));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":["b17c5c53627893d93f9261826cc6d9c447c5ee3a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003","date":1390592414,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SpatialContext.GEO;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = ctx.makePoint(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), point.toString()));//just for diagnostics\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"Intersects(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SpatialContext.GEO;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = ctx.makePoint(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), ctx.toString(point)));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"Intersects(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SpatialContext.GEO;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = ctx.makePoint(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), point.toString()));//just for diagnostics\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"Intersects(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SpatialContext.GEO;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = ctx.makePoint(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), point.toString()));//just for diagnostics\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"Intersects(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SpatialContext.GEO;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = ctx.makePoint(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), point.toString()));//just for diagnostics\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"Intersects(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SpatialContext.GEO;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = ctx.makePoint(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), point.toString()));//just for diagnostics\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"Intersects(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0415a016b37e58a017fed0a91234f733ab359971":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"409324b31a1419d7c05a38211168cf317e39be77":["aba371508186796cc6151d8223a5b4e16d02e26e"],"af2638813028b254a88b418ebeafb541afb49653":["6bc65e9e84ac8f81b0861d2c7d8f56715adbf003","112d77ac8d3e10a362516ad834c9a11d35c94234"],"da956410d7a790f567af4e7e94584fb0930212f2":["1d028314cced5858683a1bb4741423d0f934257b"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["6bc65e9e84ac8f81b0861d2c7d8f56715adbf003"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d028314cced5858683a1bb4741423d0f934257b":["42ea82a615127d578d4d21a6743834c45fa10468","409324b31a1419d7c05a38211168cf317e39be77"],"aba371508186796cc6151d8223a5b4e16d02e26e":["0415a016b37e58a017fed0a91234f733ab359971","42ea82a615127d578d4d21a6743834c45fa10468"],"399d569d88e65d963440cdd3a3e2d5f7cdd1bd42":["0415a016b37e58a017fed0a91234f733ab359971"],"46e67dde361bddc1a35dc332c2a1e553d7a8ebd7":["da956410d7a790f567af4e7e94584fb0930212f2"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["04f07771a2a7dd3a395700665ed839c3dae2def2","42ea82a615127d578d4d21a6743834c45fa10468"],"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003":["46e67dde361bddc1a35dc332c2a1e553d7a8ebd7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"42ea82a615127d578d4d21a6743834c45fa10468":["df0750324176e07de4ead8572b1b011a640f4635"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"],"df0750324176e07de4ead8572b1b011a640f4635":["399d569d88e65d963440cdd3a3e2d5f7cdd1bd42"]},"commit2Childs":{"0415a016b37e58a017fed0a91234f733ab359971":["aba371508186796cc6151d8223a5b4e16d02e26e","399d569d88e65d963440cdd3a3e2d5f7cdd1bd42"],"409324b31a1419d7c05a38211168cf317e39be77":["1d028314cced5858683a1bb4741423d0f934257b"],"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"da956410d7a790f567af4e7e94584fb0930212f2":["46e67dde361bddc1a35dc332c2a1e553d7a8ebd7"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["0415a016b37e58a017fed0a91234f733ab359971","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"1d028314cced5858683a1bb4741423d0f934257b":["da956410d7a790f567af4e7e94584fb0930212f2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"aba371508186796cc6151d8223a5b4e16d02e26e":["409324b31a1419d7c05a38211168cf317e39be77"],"399d569d88e65d963440cdd3a3e2d5f7cdd1bd42":["df0750324176e07de4ead8572b1b011a640f4635"],"46e67dde361bddc1a35dc332c2a1e553d7a8ebd7":["6bc65e9e84ac8f81b0861d2c7d8f56715adbf003"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"42ea82a615127d578d4d21a6743834c45fa10468":["1d028314cced5858683a1bb4741423d0f934257b","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"df0750324176e07de4ead8572b1b011a640f4635":["42ea82a615127d578d4d21a6743834c45fa10468"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}