{"path":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","commits":[{"id":"7f4e54ed7cef46f86888b5fb547594f62160395c","date":1340006971,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms and queries are applied and flushed.\n   * <p>\n   * Disabled by default (writer flushes by RAM usage).\n   * <p>\n   * NOTE: This setting won't trigger a segment flush.\n   * \n   * <p>\n   * Takes effect immediately, but only the next time a document is added,\n   * updated or deleted.\n   * \n   * @throws IllegalArgumentException\n   *           if maxBufferedDeleteTerms is enabled but smaller than 1\n   * \n   * @see #setRAMBufferSizeMB\n   */\n  public LiveIndexWriterConfig setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    if (maxBufferedDeleteTerms != IndexWriterConfig.DISABLE_AUTO_FLUSH && maxBufferedDeleteTerms < 1) {\n      throw new IllegalArgumentException(\"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    }\n    this.maxBufferedDeleteTerms = maxBufferedDeleteTerms;\n    return this;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","sourceNew":"  /**\n   * Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms and queries are applied and flushed.\n   * <p>\n   * Disabled by default (writer flushes by RAM usage).\n   * <p>\n   * NOTE: This setting won't trigger a segment flush.\n   * \n   * <p>\n   * Takes effect immediately, but only the next time a document is added,\n   * updated or deleted.\n   * \n   * @throws IllegalArgumentException\n   *           if maxBufferedDeleteTerms is enabled but smaller than 1\n   * \n   * @see #setRAMBufferSizeMB\n   */\n  public LiveIndexWriterConfig setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    if (maxBufferedDeleteTerms != IndexWriterConfig.DISABLE_AUTO_FLUSH && maxBufferedDeleteTerms < 1) {\n      throw new IllegalArgumentException(\"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    }\n    this.maxBufferedDeleteTerms = maxBufferedDeleteTerms;\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms and queries are applied and flushed.\n   * <p>\n   * Disabled by default (writer flushes by RAM usage).\n   * <p>\n   * NOTE: This setting won't trigger a segment flush.\n   * \n   * <p>\n   * Takes effect immediately, but only the next time a document is added,\n   * updated or deleted.\n   * \n   * @throws IllegalArgumentException\n   *           if maxBufferedDeleteTerms is enabled but smaller than 1\n   * \n   * @see #setRAMBufferSizeMB\n   */\n  public LiveIndexWriterConfig setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    if (maxBufferedDeleteTerms != IndexWriterConfig.DISABLE_AUTO_FLUSH && maxBufferedDeleteTerms < 1) {\n      throw new IllegalArgumentException(\"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    }\n    this.maxBufferedDeleteTerms = maxBufferedDeleteTerms;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"758b67c292d546f06d958a30c05b76e3987a11de","date":1375382531,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","sourceNew":"  /**\n   * Determines the maximum number of delete-by-term operations that will be\n   * buffered before both the buffered in-memory delete terms and queries are\n   * applied and flushed.\n   * <p>\n   * Disabled by default (writer flushes by RAM usage).\n   * <p>\n   * NOTE: This setting won't trigger a segment flush.\n   * \n   * <p>\n   * Takes effect immediately, but only the next time a document is added,\n   * updated or deleted. Also, if you only delete-by-query, this setting has no\n   * effect, i.e. delete queries are buffered until the next segment is flushed.\n   * \n   * @throws IllegalArgumentException\n   *           if maxBufferedDeleteTerms is enabled but smaller than 1\n   * \n   * @see #setRAMBufferSizeMB\n   */\n  public LiveIndexWriterConfig setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    if (maxBufferedDeleteTerms != IndexWriterConfig.DISABLE_AUTO_FLUSH && maxBufferedDeleteTerms < 1) {\n      throw new IllegalArgumentException(\"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    }\n    this.maxBufferedDeleteTerms = maxBufferedDeleteTerms;\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms and queries are applied and flushed.\n   * <p>\n   * Disabled by default (writer flushes by RAM usage).\n   * <p>\n   * NOTE: This setting won't trigger a segment flush.\n   * \n   * <p>\n   * Takes effect immediately, but only the next time a document is added,\n   * updated or deleted.\n   * \n   * @throws IllegalArgumentException\n   *           if maxBufferedDeleteTerms is enabled but smaller than 1\n   * \n   * @see #setRAMBufferSizeMB\n   */\n  public LiveIndexWriterConfig setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    if (maxBufferedDeleteTerms != IndexWriterConfig.DISABLE_AUTO_FLUSH && maxBufferedDeleteTerms < 1) {\n      throw new IllegalArgumentException(\"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    }\n    this.maxBufferedDeleteTerms = maxBufferedDeleteTerms;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","sourceNew":"  /**\n   * Determines the maximum number of delete-by-term operations that will be\n   * buffered before both the buffered in-memory delete terms and queries are\n   * applied and flushed.\n   * <p>\n   * Disabled by default (writer flushes by RAM usage).\n   * <p>\n   * NOTE: This setting won't trigger a segment flush.\n   * \n   * <p>\n   * Takes effect immediately, but only the next time a document is added,\n   * updated or deleted. Also, if you only delete-by-query, this setting has no\n   * effect, i.e. delete queries are buffered until the next segment is flushed.\n   * \n   * @throws IllegalArgumentException\n   *           if maxBufferedDeleteTerms is enabled but smaller than 1\n   * \n   * @see #setRAMBufferSizeMB\n   */\n  public LiveIndexWriterConfig setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    if (maxBufferedDeleteTerms != IndexWriterConfig.DISABLE_AUTO_FLUSH && maxBufferedDeleteTerms < 1) {\n      throw new IllegalArgumentException(\"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    }\n    this.maxBufferedDeleteTerms = maxBufferedDeleteTerms;\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms and queries are applied and flushed.\n   * <p>\n   * Disabled by default (writer flushes by RAM usage).\n   * <p>\n   * NOTE: This setting won't trigger a segment flush.\n   * \n   * <p>\n   * Takes effect immediately, but only the next time a document is added,\n   * updated or deleted.\n   * \n   * @throws IllegalArgumentException\n   *           if maxBufferedDeleteTerms is enabled but smaller than 1\n   * \n   * @see #setRAMBufferSizeMB\n   */\n  public LiveIndexWriterConfig setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    if (maxBufferedDeleteTerms != IndexWriterConfig.DISABLE_AUTO_FLUSH && maxBufferedDeleteTerms < 1) {\n      throw new IllegalArgumentException(\"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    }\n    this.maxBufferedDeleteTerms = maxBufferedDeleteTerms;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Determines the maximum number of delete-by-term operations that will be\n   * buffered before both the buffered in-memory delete terms and queries are\n   * applied and flushed.\n   * <p>\n   * Disabled by default (writer flushes by RAM usage).\n   * <p>\n   * NOTE: This setting won't trigger a segment flush.\n   * \n   * <p>\n   * Takes effect immediately, but only the next time a document is added,\n   * updated or deleted. Also, if you only delete-by-query, this setting has no\n   * effect, i.e. delete queries are buffered until the next segment is flushed.\n   * \n   * @throws IllegalArgumentException\n   *           if maxBufferedDeleteTerms is enabled but smaller than 1\n   * \n   * @see #setRAMBufferSizeMB\n   */\n  public LiveIndexWriterConfig setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    if (maxBufferedDeleteTerms != IndexWriterConfig.DISABLE_AUTO_FLUSH && maxBufferedDeleteTerms < 1) {\n      throw new IllegalArgumentException(\"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    }\n    this.maxBufferedDeleteTerms = maxBufferedDeleteTerms;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Determines the maximum number of delete-by-term operations that will be\n   * buffered before both the buffered in-memory delete terms and queries are\n   * applied and flushed.\n   * <p>\n   * Disabled by default (writer flushes by RAM usage).\n   * <p>\n   * NOTE: This setting won't trigger a segment flush.\n   * \n   * <p>\n   * Takes effect immediately, but only the next time a document is added,\n   * updated or deleted. Also, if you only delete-by-query, this setting has no\n   * effect, i.e. delete queries are buffered until the next segment is flushed.\n   * \n   * @throws IllegalArgumentException\n   *           if maxBufferedDeleteTerms is enabled but smaller than 1\n   * \n   * @see #setRAMBufferSizeMB\n   */\n  public LiveIndexWriterConfig setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    if (maxBufferedDeleteTerms != IndexWriterConfig.DISABLE_AUTO_FLUSH && maxBufferedDeleteTerms < 1) {\n      throw new IllegalArgumentException(\"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    }\n    this.maxBufferedDeleteTerms = maxBufferedDeleteTerms;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Determines the maximum number of delete-by-term operations that will be\n   * buffered before both the buffered in-memory delete terms and queries are\n   * applied and flushed.\n   * <p>\n   * Disabled by default (writer flushes by RAM usage).\n   * <p>\n   * NOTE: This setting won't trigger a segment flush.\n   * \n   * <p>\n   * Takes effect immediately, but only the next time a document is added,\n   * updated or deleted. Also, if you only delete-by-query, this setting has no\n   * effect, i.e. delete queries are buffered until the next segment is flushed.\n   * \n   * @throws IllegalArgumentException\n   *           if maxBufferedDeleteTerms is enabled but smaller than 1\n   * \n   * @see #setRAMBufferSizeMB\n   */\n  public LiveIndexWriterConfig setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    if (maxBufferedDeleteTerms != IndexWriterConfig.DISABLE_AUTO_FLUSH && maxBufferedDeleteTerms < 1) {\n      throw new IllegalArgumentException(\"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    }\n    this.maxBufferedDeleteTerms = maxBufferedDeleteTerms;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"758b67c292d546f06d958a30c05b76e3987a11de":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["758b67c292d546f06d958a30c05b76e3987a11de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7f4e54ed7cef46f86888b5fb547594f62160395c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["7f4e54ed7cef46f86888b5fb547594f62160395c"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["7f4e54ed7cef46f86888b5fb547594f62160395c"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["758b67c292d546f06d958a30c05b76e3987a11de","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["758b67c292d546f06d958a30c05b76e3987a11de","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"758b67c292d546f06d958a30c05b76e3987a11de":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7f4e54ed7cef46f86888b5fb547594f62160395c"],"7f4e54ed7cef46f86888b5fb547594f62160395c":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["758b67c292d546f06d958a30c05b76e3987a11de"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}