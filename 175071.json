{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedInputIterator#decodeContexts(BytesRef,ByteArrayDataInput).mjava","commits":[{"id":"58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b","date":1395588343,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedInputIterator#decodeContexts(BytesRef,ByteArrayDataInput).mjava","pathOld":"/dev/null","sourceNew":"  /** decodes the contexts at the current position */\n  protected Set<BytesRef> decodeContexts(BytesRef scratch, ByteArrayDataInput tmpInput) {\n    tmpInput.reset(scratch.bytes);\n    tmpInput.skipBytes(scratch.length - 2); //skip to context set size\n    short ctxSetSize = tmpInput.readShort();\n    scratch.length -= 2;\n    final Set<BytesRef> contextSet = new HashSet<>();\n    for (short i = 0; i < ctxSetSize; i++) {\n      tmpInput.setPosition(scratch.length - 2);\n      short curContextLength = tmpInput.readShort();\n      scratch.length -= 2;\n      tmpInput.setPosition(scratch.length - curContextLength);\n      BytesRef contextSpare = new BytesRef(curContextLength);\n      tmpInput.readBytes(contextSpare.bytes, 0, curContextLength);\n      contextSpare.length = curContextLength;\n      contextSet.add(contextSpare);\n      scratch.length -= curContextLength;\n    }\n    return contextSet;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73860c1174109b7d888d50a10088afb18293b153","date":1457392330,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedInputIterator#decodeContexts(BytesRef,ByteArrayDataInput).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedInputIterator#decodeContexts(BytesRef,ByteArrayDataInput).mjava","sourceNew":"  /** decodes the contexts at the current position */\n  protected Set<BytesRef> decodeContexts(BytesRef scratch, ByteArrayDataInput tmpInput) {\n    tmpInput.reset(scratch.bytes, scratch.offset, scratch.length);\n    tmpInput.skipBytes(scratch.length - 2); //skip to context set size\n    short ctxSetSize = tmpInput.readShort();\n    scratch.length -= 2;\n    final Set<BytesRef> contextSet = new HashSet<>();\n    for (short i = 0; i < ctxSetSize; i++) {\n      tmpInput.setPosition(scratch.offset + scratch.length - 2);\n      short curContextLength = tmpInput.readShort();\n      scratch.length -= 2;\n      tmpInput.setPosition(scratch.offset + scratch.length - curContextLength);\n      BytesRef contextSpare = new BytesRef(curContextLength);\n      tmpInput.readBytes(contextSpare.bytes, 0, curContextLength);\n      contextSpare.length = curContextLength;\n      contextSet.add(contextSpare);\n      scratch.length -= curContextLength;\n    }\n    return contextSet;\n  }\n\n","sourceOld":"  /** decodes the contexts at the current position */\n  protected Set<BytesRef> decodeContexts(BytesRef scratch, ByteArrayDataInput tmpInput) {\n    tmpInput.reset(scratch.bytes);\n    tmpInput.skipBytes(scratch.length - 2); //skip to context set size\n    short ctxSetSize = tmpInput.readShort();\n    scratch.length -= 2;\n    final Set<BytesRef> contextSet = new HashSet<>();\n    for (short i = 0; i < ctxSetSize; i++) {\n      tmpInput.setPosition(scratch.length - 2);\n      short curContextLength = tmpInput.readShort();\n      scratch.length -= 2;\n      tmpInput.setPosition(scratch.length - curContextLength);\n      BytesRef contextSpare = new BytesRef(curContextLength);\n      tmpInput.readBytes(contextSpare.bytes, 0, curContextLength);\n      contextSpare.length = curContextLength;\n      contextSet.add(contextSpare);\n      scratch.length -= curContextLength;\n    }\n    return contextSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"73860c1174109b7d888d50a10088afb18293b153":["58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73860c1174109b7d888d50a10088afb18293b153"]},"commit2Childs":{"58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b":["73860c1174109b7d888d50a10088afb18293b153"],"73860c1174109b7d888d50a10088afb18293b153":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}