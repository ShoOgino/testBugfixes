{"path":"lucene/test-framework/src/java/org/apache/lucene/store/CorruptingIndexOutput#corruptFile().mjava","commits":[{"id":"950b7a6881d14da782b60444c11295e3ec50d41a","date":1458379095,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/CorruptingIndexOutput#corruptFile().mjava","pathOld":"/dev/null","sourceNew":"  protected void corruptFile() throws IOException {\n    // Now corrupt the specfied byte:\n    String newTempName;\n    try(IndexOutput tmpOut = dir.createTempOutput(\"tmp\", \"tmp\", IOContext.DEFAULT);\n        IndexInput in = dir.openInput(out.getName(), IOContext.DEFAULT)) {\n      newTempName = tmpOut.getName();\n\n      if (byteToCorrupt >= in.length()) {\n        throw new IllegalArgumentException(\"byteToCorrupt=\" + byteToCorrupt + \" but file \\\"\" + out.getName() + \"\\\" is only length=\" + in.length());\n      }\n\n      tmpOut.copyBytes(in, byteToCorrupt);\n      // Flip the 0th bit:\n      tmpOut.writeByte((byte) (in.readByte() ^ 1));\n      tmpOut.copyBytes(in, in.length()-byteToCorrupt-1);\n    }\n\n    // Delete original and copy corrupt version back:\n    dir.deleteFile(out.getName());\n    dir.copyFrom(dir, newTempName, out.getName(), IOContext.DEFAULT);\n    dir.deleteFile(newTempName);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"950b7a6881d14da782b60444c11295e3ec50d41a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["950b7a6881d14da782b60444c11295e3ec50d41a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["950b7a6881d14da782b60444c11295e3ec50d41a"],"950b7a6881d14da782b60444c11295e3ec50d41a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}