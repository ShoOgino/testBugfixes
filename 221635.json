{"path":"src/test/org/apache/solr/BasicFunctionalityTest#testSimpleFacetCountsWithLimits().mjava","commits":[{"id":"d1b4f9f023bf5098df34505adf1ed91daa67c239","date":1157655314,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/solr/BasicFunctionalityTest#testSimpleFacetCountsWithLimits().mjava","pathOld":"/dev/null","sourceNew":"  public void testSimpleFacetCountsWithLimits() {\n    assertU(adoc(\"id\", \"1\",  \"t_s\", \"A\"));\n    assertU(adoc(\"id\", \"2\",  \"t_s\", \"B\"));\n    assertU(adoc(\"id\", \"3\",  \"t_s\", \"C\"));\n    assertU(adoc(\"id\", \"4\",  \"t_s\", \"C\"));\n    assertU(adoc(\"id\", \"5\",  \"t_s\", \"D\"));\n    assertU(adoc(\"id\", \"6\",  \"t_s\", \"E\"));\n    assertU(adoc(\"id\", \"7\",  \"t_s\", \"E\"));\n    assertU(adoc(\"id\", \"8\",  \"t_s\", \"E\"));\n    assertU(adoc(\"id\", \"9\",  \"t_s\", \"F\"));\n    assertU(adoc(\"id\", \"10\", \"t_s\", \"G\"));\n    assertU(adoc(\"id\", \"11\", \"t_s\", \"G\"));\n    assertU(adoc(\"id\", \"12\", \"t_s\", \"G\"));\n    assertU(adoc(\"id\", \"13\", \"t_s\", \"G\"));\n    assertU(adoc(\"id\", \"14\", \"t_s\", \"G\"));\n    assertU(commit());\n \n    assertQ(\"check counts for unlimited facet\",\n            req(\"q\", \"id:[* TO *]\"\n                ,\"facet\", \"true\"\n                ,\"facet.field\", \"t_s\"\n                )\n            ,\"*[count(//lst[@name='facet_fields']/lst[@name='t_s']/int)=7]\"\n \n            ,\"//lst[@name='t_s']/int[@name='G'][.='5']\"\n            ,\"//lst[@name='t_s']/int[@name='E'][.='3']\"\n            ,\"//lst[@name='t_s']/int[@name='C'][.='2']\"\n \n            ,\"//lst[@name='t_s']/int[@name='A'][.='1']\"\n            ,\"//lst[@name='t_s']/int[@name='B'][.='1']\"\n            ,\"//lst[@name='t_s']/int[@name='D'][.='1']\"\n            ,\"//lst[@name='t_s']/int[@name='F'][.='1']\"\n            );\n \n    assertQ(\"check counts for facet with generous limit\",\n            req(\"q\", \"id:[* TO *]\"\n                ,\"facet\", \"true\"\n                ,\"facet.limit\", \"100\"\n                ,\"facet.field\", \"t_s\"\n                )\n            ,\"*[count(//lst[@name='facet_fields']/lst[@name='t_s']/int)=7]\"\n \n            ,\"//lst[@name='t_s']/int[1][@name='G'][.='5']\"\n            ,\"//lst[@name='t_s']/int[2][@name='E'][.='3']\"\n            ,\"//lst[@name='t_s']/int[3][@name='C'][.='2']\"\n \n            ,\"//lst[@name='t_s']/int[@name='A'][.='1']\"\n            ,\"//lst[@name='t_s']/int[@name='B'][.='1']\"\n            ,\"//lst[@name='t_s']/int[@name='D'][.='1']\"\n            ,\"//lst[@name='t_s']/int[@name='F'][.='1']\"\n            );\n \n    assertQ(\"check counts for limited facet\",\n            req(\"q\", \"id:[* TO *]\"\n                ,\"facet\", \"true\"\n                ,\"facet.limit\", \"2\"\n                ,\"facet.field\", \"t_s\"\n                )\n            ,\"*[count(//lst[@name='facet_fields']/lst[@name='t_s']/int)=2]\"\n \n            ,\"//lst[@name='t_s']/int[1][@name='G'][.='5']\"\n            ,\"//lst[@name='t_s']/int[2][@name='E'][.='3']\"\n            );\n \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9691bd012f05632bf944115412ed90daae112f68","date":1168971974,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/solr/BasicFunctionalityTest#testSimpleFacetCountsWithLimits().mjava","sourceNew":null,"sourceOld":"  public void testSimpleFacetCountsWithLimits() {\n    assertU(adoc(\"id\", \"1\",  \"t_s\", \"A\"));\n    assertU(adoc(\"id\", \"2\",  \"t_s\", \"B\"));\n    assertU(adoc(\"id\", \"3\",  \"t_s\", \"C\"));\n    assertU(adoc(\"id\", \"4\",  \"t_s\", \"C\"));\n    assertU(adoc(\"id\", \"5\",  \"t_s\", \"D\"));\n    assertU(adoc(\"id\", \"6\",  \"t_s\", \"E\"));\n    assertU(adoc(\"id\", \"7\",  \"t_s\", \"E\"));\n    assertU(adoc(\"id\", \"8\",  \"t_s\", \"E\"));\n    assertU(adoc(\"id\", \"9\",  \"t_s\", \"F\"));\n    assertU(adoc(\"id\", \"10\", \"t_s\", \"G\"));\n    assertU(adoc(\"id\", \"11\", \"t_s\", \"G\"));\n    assertU(adoc(\"id\", \"12\", \"t_s\", \"G\"));\n    assertU(adoc(\"id\", \"13\", \"t_s\", \"G\"));\n    assertU(adoc(\"id\", \"14\", \"t_s\", \"G\"));\n    assertU(commit());\n \n    assertQ(\"check counts for unlimited facet\",\n            req(\"q\", \"id:[* TO *]\"\n                ,\"facet\", \"true\"\n                ,\"facet.field\", \"t_s\"\n                )\n            ,\"*[count(//lst[@name='facet_fields']/lst[@name='t_s']/int)=7]\"\n \n            ,\"//lst[@name='t_s']/int[@name='G'][.='5']\"\n            ,\"//lst[@name='t_s']/int[@name='E'][.='3']\"\n            ,\"//lst[@name='t_s']/int[@name='C'][.='2']\"\n \n            ,\"//lst[@name='t_s']/int[@name='A'][.='1']\"\n            ,\"//lst[@name='t_s']/int[@name='B'][.='1']\"\n            ,\"//lst[@name='t_s']/int[@name='D'][.='1']\"\n            ,\"//lst[@name='t_s']/int[@name='F'][.='1']\"\n            );\n \n    assertQ(\"check counts for facet with generous limit\",\n            req(\"q\", \"id:[* TO *]\"\n                ,\"facet\", \"true\"\n                ,\"facet.limit\", \"100\"\n                ,\"facet.field\", \"t_s\"\n                )\n            ,\"*[count(//lst[@name='facet_fields']/lst[@name='t_s']/int)=7]\"\n \n            ,\"//lst[@name='t_s']/int[1][@name='G'][.='5']\"\n            ,\"//lst[@name='t_s']/int[2][@name='E'][.='3']\"\n            ,\"//lst[@name='t_s']/int[3][@name='C'][.='2']\"\n \n            ,\"//lst[@name='t_s']/int[@name='A'][.='1']\"\n            ,\"//lst[@name='t_s']/int[@name='B'][.='1']\"\n            ,\"//lst[@name='t_s']/int[@name='D'][.='1']\"\n            ,\"//lst[@name='t_s']/int[@name='F'][.='1']\"\n            );\n \n    assertQ(\"check counts for limited facet\",\n            req(\"q\", \"id:[* TO *]\"\n                ,\"facet\", \"true\"\n                ,\"facet.limit\", \"2\"\n                ,\"facet.field\", \"t_s\"\n                )\n            ,\"*[count(//lst[@name='facet_fields']/lst[@name='t_s']/int)=2]\"\n \n            ,\"//lst[@name='t_s']/int[1][@name='G'][.='5']\"\n            ,\"//lst[@name='t_s']/int[2][@name='E'][.='3']\"\n            );\n \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d1b4f9f023bf5098df34505adf1ed91daa67c239":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9691bd012f05632bf944115412ed90daae112f68":["d1b4f9f023bf5098df34505adf1ed91daa67c239"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d1b4f9f023bf5098df34505adf1ed91daa67c239":["9691bd012f05632bf944115412ed90daae112f68"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["d1b4f9f023bf5098df34505adf1ed91daa67c239"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9691bd012f05632bf944115412ed90daae112f68":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9691bd012f05632bf944115412ed90daae112f68","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}