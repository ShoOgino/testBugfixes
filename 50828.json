{"path":"src/java/org/apache/lucene/search/payloads/BoostingTermQuery.BoostingTermWeight.BoostingSpanScorer#setFreqCurrentDoc().mjava","commits":[{"id":"32c97797222c63ae0cce3322818565bdb8d2b8c9","date":1177418982,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/payloads/BoostingTermQuery.BoostingTermWeight.BoostingSpanScorer#setFreqCurrentDoc().mjava","pathOld":"/dev/null","sourceNew":"      /**\n       * Go to the next document\n       * \n       */\n      /*public boolean next() throws IOException {\n\n        boolean result = super.next();\n        //set the payload.  super.next() properly increments the term positions\n        if (result) {\n          //Load the payloads for all \n          processPayload();\n        }\n\n        return result;\n      }\n\n      public boolean skipTo(int target) throws IOException {\n        boolean result = super.skipTo(target);\n\n        if (result) {\n          processPayload();\n        }\n\n        return result;\n      }*/\n\n      protected boolean setFreqCurrentDoc() throws IOException {\n        if (!more) {\n          return false;\n        }\n        doc = spans.doc();\n        freq = 0.0f;\n        payloadScore = 0;\n        payloadsSeen = 0;\n        Similarity similarity1 = getSimilarity();\n        while (more && doc == spans.doc()) {\n          int matchLength = spans.end() - spans.start();\n\n          freq += similarity1.sloppyFreq(matchLength);\n          processPayload(similarity1);\n\n          more = spans.next();//this moves positions to the next match in this document\n        }\n        return more || (freq != 0);\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06f5af8fa7a16166f381f1d6e6cb65994c4df253","date":1197321700,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/payloads/BoostingTermQuery.BoostingTermWeight.BoostingSpanScorer#setFreqCurrentDoc().mjava","pathOld":"src/java/org/apache/lucene/search/payloads/BoostingTermQuery.BoostingTermWeight.BoostingSpanScorer#setFreqCurrentDoc().mjava","sourceNew":"      protected boolean setFreqCurrentDoc() throws IOException {\n        if (!more) {\n          return false;\n        }\n        doc = spans.doc();\n        freq = 0.0f;\n        payloadScore = 0;\n        payloadsSeen = 0;\n        Similarity similarity1 = getSimilarity();\n        while (more && doc == spans.doc()) {\n          int matchLength = spans.end() - spans.start();\n\n          freq += similarity1.sloppyFreq(matchLength);\n          processPayload(similarity1);\n\n          more = spans.next();//this moves positions to the next match in this document\n        }\n        return more || (freq != 0);\n      }\n\n","sourceOld":"      /**\n       * Go to the next document\n       * \n       */\n      /*public boolean next() throws IOException {\n\n        boolean result = super.next();\n        //set the payload.  super.next() properly increments the term positions\n        if (result) {\n          //Load the payloads for all \n          processPayload();\n        }\n\n        return result;\n      }\n\n      public boolean skipTo(int target) throws IOException {\n        boolean result = super.skipTo(target);\n\n        if (result) {\n          processPayload();\n        }\n\n        return result;\n      }*/\n\n      protected boolean setFreqCurrentDoc() throws IOException {\n        if (!more) {\n          return false;\n        }\n        doc = spans.doc();\n        freq = 0.0f;\n        payloadScore = 0;\n        payloadsSeen = 0;\n        Similarity similarity1 = getSimilarity();\n        while (more && doc == spans.doc()) {\n          int matchLength = spans.end() - spans.start();\n\n          freq += similarity1.sloppyFreq(matchLength);\n          processPayload(similarity1);\n\n          more = spans.next();//this moves positions to the next match in this document\n        }\n        return more || (freq != 0);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c94837f36779069fd9b6b70e462b57515473d88","date":1249677298,"type":5,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/payloads/BoostingFunctionTermQuery.BoostingFunctionTermWeight.BoostingFunctionSpanScorer#setFreqCurrentDoc().mjava","pathOld":"src/java/org/apache/lucene/search/payloads/BoostingTermQuery.BoostingTermWeight.BoostingSpanScorer#setFreqCurrentDoc().mjava","sourceNew":"      protected boolean setFreqCurrentDoc() throws IOException {\n        if (!more) {\n          return false;\n        }\n        doc = spans.doc();\n        freq = 0.0f;\n        payloadScore = 0;\n        payloadsSeen = 0;\n        Similarity similarity1 = getSimilarity();\n        while (more && doc == spans.doc()) {\n          int matchLength = spans.end() - spans.start();\n\n          freq += similarity1.sloppyFreq(matchLength);\n          processPayload(similarity1);\n\n          more = spans.next();//this moves positions to the next match in this document\n        }\n        return more || (freq != 0);\n      }\n\n","sourceOld":"      protected boolean setFreqCurrentDoc() throws IOException {\n        if (!more) {\n          return false;\n        }\n        doc = spans.doc();\n        freq = 0.0f;\n        payloadScore = 0;\n        payloadsSeen = 0;\n        Similarity similarity1 = getSimilarity();\n        while (more && doc == spans.doc()) {\n          int matchLength = spans.end() - spans.start();\n\n          freq += similarity1.sloppyFreq(matchLength);\n          processPayload(similarity1);\n\n          more = spans.next();//this moves positions to the next match in this document\n        }\n        return more || (freq != 0);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c94837f36779069fd9b6b70e462b57515473d88":["06f5af8fa7a16166f381f1d6e6cb65994c4df253"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"06f5af8fa7a16166f381f1d6e6cb65994c4df253":["32c97797222c63ae0cce3322818565bdb8d2b8c9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4c94837f36779069fd9b6b70e462b57515473d88"],"32c97797222c63ae0cce3322818565bdb8d2b8c9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4c94837f36779069fd9b6b70e462b57515473d88":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["32c97797222c63ae0cce3322818565bdb8d2b8c9"],"06f5af8fa7a16166f381f1d6e6cb65994c4df253":["4c94837f36779069fd9b6b70e462b57515473d88"],"32c97797222c63ae0cce3322818565bdb8d2b8c9":["06f5af8fa7a16166f381f1d6e6cb65994c4df253"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}