{"path":"lucene/core/src/java/org/apache/lucene/index/PrefixCodedTerms.Builder#sharedPrefix(BytesRef,BytesRef).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PrefixCodedTerms.Builder#sharedPrefix(BytesRef,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/PrefixCodedTerms.Builder#sharedPrefix(BytesRef,BytesRef).mjava","sourceNew":"    private int sharedPrefix(BytesRef term1, BytesRef term2) {\n      int pos1 = 0;\n      int pos1End = pos1 + Math.min(term1.length, term2.length);\n      int pos2 = 0;\n      while(pos1 < pos1End) {\n        if (term1.bytes[term1.offset + pos1] != term2.bytes[term2.offset + pos2]) {\n          return pos1;\n        }\n        pos1++;\n        pos2++;\n      }\n      return pos1;\n    }\n\n","sourceOld":"    private int sharedPrefix(BytesRef term1, BytesRef term2) {\n      int pos1 = 0;\n      int pos1End = pos1 + Math.min(term1.length, term2.length);\n      int pos2 = 0;\n      while(pos1 < pos1End) {\n        if (term1.bytes[term1.offset + pos1] != term2.bytes[term2.offset + pos2]) {\n          return pos1;\n        }\n        pos1++;\n        pos2++;\n      }\n      return pos1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"456d7e7092cb043c740b4674301660ee8abc26fe","date":1517645879,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/PrefixCodedTerms.Builder#sharedPrefix(BytesRef,BytesRef).mjava","sourceNew":null,"sourceOld":"    private int sharedPrefix(BytesRef term1, BytesRef term2) {\n      int pos1 = 0;\n      int pos1End = pos1 + Math.min(term1.length, term2.length);\n      int pos2 = 0;\n      while(pos1 < pos1End) {\n        if (term1.bytes[term1.offset + pos1] != term2.bytes[term2.offset + pos2]) {\n          return pos1;\n        }\n        pos1++;\n        pos2++;\n      }\n      return pos1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"456d7e7092cb043c740b4674301660ee8abc26fe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["456d7e7092cb043c740b4674301660ee8abc26fe"]},"commit2Childs":{"456d7e7092cb043c740b4674301660ee8abc26fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["456d7e7092cb043c740b4674301660ee8abc26fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}