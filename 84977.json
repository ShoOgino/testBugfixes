{"path":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/util/UnknownDictionaryBuilder#readDictionaryFile(Path,String).mjava","commits":[{"id":"e3010cab237afb0b81c042f263115756e3cc6d67","date":1564503244,"type":0,"author":"Namgyu Kim","isMerge":false,"pathNew":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/util/UnknownDictionaryBuilder#readDictionaryFile(Path,String).mjava","pathOld":"/dev/null","sourceNew":"  private UnknownDictionaryWriter readDictionaryFile(Path path, String encoding) throws IOException {\n    UnknownDictionaryWriter dictionary = new UnknownDictionaryWriter(5 * 1024 * 1024);\n\n    List<String[]> lines = new ArrayList<>();\n    try (Reader reader = Files.newBufferedReader(path, Charset.forName(encoding));\n         LineNumberReader lineReader = new LineNumberReader(reader)) {\n\n      dictionary.put(CSVUtil.parse(NGRAM_DICTIONARY_ENTRY));\n\n      String line;\n      while ((line = lineReader.readLine()) != null) {\n        // note: unk.def only has 10 fields, it simplifies the writer to just append empty reading and pronunciation,\n        // even though the unknown dictionary returns hardcoded null here.\n        final String[] parsed = CSVUtil.parse(line + \",*,*\"); // Probably we don't need to validate entry\n        lines.add(parsed);\n      }\n    }\n\n    lines.sort(Comparator.comparingInt(entry -> CharacterDefinition.lookupCharacterClass(entry[0])));\n\n    for (String[] entry : lines) {\n      dictionary.put(entry);\n    }\n\n    return dictionary;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":0,"author":"Atri Sharma","isMerge":true,"pathNew":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/util/UnknownDictionaryBuilder#readDictionaryFile(Path,String).mjava","pathOld":"/dev/null","sourceNew":"  private UnknownDictionaryWriter readDictionaryFile(Path path, String encoding) throws IOException {\n    UnknownDictionaryWriter dictionary = new UnknownDictionaryWriter(5 * 1024 * 1024);\n\n    List<String[]> lines = new ArrayList<>();\n    try (Reader reader = Files.newBufferedReader(path, Charset.forName(encoding));\n         LineNumberReader lineReader = new LineNumberReader(reader)) {\n\n      dictionary.put(CSVUtil.parse(NGRAM_DICTIONARY_ENTRY));\n\n      String line;\n      while ((line = lineReader.readLine()) != null) {\n        // note: unk.def only has 10 fields, it simplifies the writer to just append empty reading and pronunciation,\n        // even though the unknown dictionary returns hardcoded null here.\n        final String[] parsed = CSVUtil.parse(line + \",*,*\"); // Probably we don't need to validate entry\n        lines.add(parsed);\n      }\n    }\n\n    lines.sort(Comparator.comparingInt(entry -> CharacterDefinition.lookupCharacterClass(entry[0])));\n\n    for (String[] entry : lines) {\n      dictionary.put(entry);\n    }\n\n    return dictionary;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e3010cab237afb0b81c042f263115756e3cc6d67":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8061ddd97f3352007d927dae445884a6f3d857b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e3010cab237afb0b81c042f263115756e3cc6d67"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e3010cab237afb0b81c042f263115756e3cc6d67"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3010cab237afb0b81c042f263115756e3cc6d67","f8061ddd97f3352007d927dae445884a6f3d857b"],"e3010cab237afb0b81c042f263115756e3cc6d67":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}