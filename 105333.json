{"path":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testWrongParameterType().mjava","commits":[{"id":"54f629ff4f718e546432fdf8588060658f1eebe9","date":1379187237,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testWrongParameterType().mjava","pathOld":"/dev/null","sourceNew":"  /** wrong param type: must be doubles */\n  public void testWrongParameterType() throws Exception {\n    Map<String,Method> functions = new HashMap<String,Method>();\n    functions.put(\"foo\", getClass().getMethod(\"bogusParameterType\", String.class));\n    try {\n      JavascriptCompiler.compile(\"foo(2)\", functions, getClass().getClassLoader());\n      fail();\n    } catch (IllegalArgumentException e) {\n      assertTrue(e.getMessage().contains(\"must take only double parameters\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f0e44787cffbb978aa2182761e3f9b184545a1e","date":1379265303,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testWrongParameterType().mjava","pathOld":"/dev/null","sourceNew":"  /** wrong param type: must be doubles */\n  public void testWrongParameterType() throws Exception {\n    Map<String,Method> functions = new HashMap<String,Method>();\n    functions.put(\"foo\", getClass().getMethod(\"bogusParameterType\", String.class));\n    try {\n      JavascriptCompiler.compile(\"foo(2)\", functions, getClass().getClassLoader());\n      fail();\n    } catch (IllegalArgumentException e) {\n      assertTrue(e.getMessage().contains(\"must take only double parameters\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testWrongParameterType().mjava","pathOld":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testWrongParameterType().mjava","sourceNew":"  /** wrong param type: must be doubles */\n  public void testWrongParameterType() throws Exception {\n    Map<String,Method> functions = new HashMap<>();\n    functions.put(\"foo\", getClass().getMethod(\"bogusParameterType\", String.class));\n    try {\n      JavascriptCompiler.compile(\"foo(2)\", functions, getClass().getClassLoader());\n      fail();\n    } catch (IllegalArgumentException e) {\n      assertTrue(e.getMessage().contains(\"must take only double parameters\"));\n    }\n  }\n\n","sourceOld":"  /** wrong param type: must be doubles */\n  public void testWrongParameterType() throws Exception {\n    Map<String,Method> functions = new HashMap<String,Method>();\n    functions.put(\"foo\", getClass().getMethod(\"bogusParameterType\", String.class));\n    try {\n      JavascriptCompiler.compile(\"foo(2)\", functions, getClass().getClassLoader());\n      fail();\n    } catch (IllegalArgumentException e) {\n      assertTrue(e.getMessage().contains(\"must take only double parameters\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testWrongParameterType().mjava","pathOld":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testWrongParameterType().mjava","sourceNew":"  /** wrong param type: must be doubles */\n  public void testWrongParameterType() throws Exception {\n    Map<String,Method> functions = new HashMap<>();\n    functions.put(\"foo\", getClass().getMethod(\"bogusParameterType\", String.class));\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      JavascriptCompiler.compile(\"foo(2)\", functions, getClass().getClassLoader());\n    });\n    assertTrue(expected.getMessage().contains(\"must take only double parameters\"));\n  }\n\n","sourceOld":"  /** wrong param type: must be doubles */\n  public void testWrongParameterType() throws Exception {\n    Map<String,Method> functions = new HashMap<>();\n    functions.put(\"foo\", getClass().getMethod(\"bogusParameterType\", String.class));\n    try {\n      JavascriptCompiler.compile(\"foo(2)\", functions, getClass().getClassLoader());\n      fail();\n    } catch (IllegalArgumentException e) {\n      assertTrue(e.getMessage().contains(\"must take only double parameters\"));\n    }\n  }\n\n","bugFix":["54f629ff4f718e546432fdf8588060658f1eebe9"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"54f629ff4f718e546432fdf8588060658f1eebe9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","54f629ff4f718e546432fdf8588060658f1eebe9"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["05fe562aa248790944d43cdd478f512572835ba0"],"54f629ff4f718e546432fdf8588060658f1eebe9":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54f629ff4f718e546432fdf8588060658f1eebe9","5f0e44787cffbb978aa2182761e3f9b184545a1e"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}