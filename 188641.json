{"path":"lucene/facet/src/java/org/apache/lucene/facet/DrillSideways#buildFacetsResult(FacetsCollector,FacetsCollector[],String[]).mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillSideways#buildFacetsResult(FacetsCollector,FacetsCollector[],String[]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillSideways#buildFacetsResult(SimpleFacetsCollector,SimpleFacetsCollector[],String[]).mjava","sourceNew":"  /** Subclass can override to customize per-dim Facets\n   *  impl. */\n  protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n\n    Facets drillDownFacets;\n    Map<String,Facets> drillSidewaysFacets = new HashMap<String,Facets>();\n\n    if (taxoReader != null) {\n      drillDownFacets = new FastTaxonomyFacetCounts(taxoReader, config, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new FastTaxonomyFacetCounts(taxoReader, config, drillSideways[i]));\n        }\n      }\n    } else {\n      drillDownFacets = new SortedSetDocValuesFacetCounts(state, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new SortedSetDocValuesFacetCounts(state, drillSideways[i]));\n        }\n      }\n    }\n\n    if (drillSidewaysFacets.isEmpty()) {\n      return drillDownFacets;\n    } else {\n      return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n    }\n  }\n\n","sourceOld":"  /** Subclass can override to customize per-dim Facets\n   *  impl. */\n  protected Facets buildFacetsResult(SimpleFacetsCollector drillDowns, SimpleFacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n\n    Facets drillDownFacets;\n    Map<String,Facets> drillSidewaysFacets = new HashMap<String,Facets>();\n\n    if (taxoReader != null) {\n      drillDownFacets = new FastTaxonomyFacetCounts(taxoReader, config, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new FastTaxonomyFacetCounts(taxoReader, config, drillSideways[i]));\n        }\n      }\n    } else {\n      drillDownFacets = new SortedSetDocValuesFacetCounts(state, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new SortedSetDocValuesFacetCounts(state, drillSideways[i]));\n        }\n      }\n    }\n\n    if (drillSidewaysFacets.isEmpty()) {\n      return drillDownFacets;\n    } else {\n      return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillSideways#buildFacetsResult(FacetsCollector,FacetsCollector[],String[]).mjava","pathOld":"/dev/null","sourceNew":"  /** Subclass can override to customize per-dim Facets\n   *  impl. */\n  protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n\n    Facets drillDownFacets;\n    Map<String,Facets> drillSidewaysFacets = new HashMap<String,Facets>();\n\n    if (taxoReader != null) {\n      drillDownFacets = new FastTaxonomyFacetCounts(taxoReader, config, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new FastTaxonomyFacetCounts(taxoReader, config, drillSideways[i]));\n        }\n      }\n    } else {\n      drillDownFacets = new SortedSetDocValuesFacetCounts(state, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new SortedSetDocValuesFacetCounts(state, drillSideways[i]));\n        }\n      }\n    }\n\n    if (drillSidewaysFacets.isEmpty()) {\n      return drillDownFacets;\n    } else {\n      return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillSideways#buildFacetsResult(FacetsCollector,FacetsCollector[],String[]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/DrillSideways#buildFacetsResult(FacetsCollector,FacetsCollector[],String[]).mjava","sourceNew":"  /** Subclass can override to customize per-dim Facets\n   *  impl. */\n  protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n\n    Facets drillDownFacets;\n    Map<String,Facets> drillSidewaysFacets = new HashMap<>();\n\n    if (taxoReader != null) {\n      drillDownFacets = new FastTaxonomyFacetCounts(taxoReader, config, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new FastTaxonomyFacetCounts(taxoReader, config, drillSideways[i]));\n        }\n      }\n    } else {\n      drillDownFacets = new SortedSetDocValuesFacetCounts(state, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new SortedSetDocValuesFacetCounts(state, drillSideways[i]));\n        }\n      }\n    }\n\n    if (drillSidewaysFacets.isEmpty()) {\n      return drillDownFacets;\n    } else {\n      return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n    }\n  }\n\n","sourceOld":"  /** Subclass can override to customize per-dim Facets\n   *  impl. */\n  protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n\n    Facets drillDownFacets;\n    Map<String,Facets> drillSidewaysFacets = new HashMap<String,Facets>();\n\n    if (taxoReader != null) {\n      drillDownFacets = new FastTaxonomyFacetCounts(taxoReader, config, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new FastTaxonomyFacetCounts(taxoReader, config, drillSideways[i]));\n        }\n      }\n    } else {\n      drillDownFacets = new SortedSetDocValuesFacetCounts(state, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new SortedSetDocValuesFacetCounts(state, drillSideways[i]));\n        }\n      }\n    }\n\n    if (drillSidewaysFacets.isEmpty()) {\n      return drillDownFacets;\n    } else {\n      return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91eb857a56b1a3a6659c666f88e2398347fc1c5a","date":1483442809,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillSideways#buildFacetsResult(FacetsCollector,FacetsCollector[],String[]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/DrillSideways#buildFacetsResult(FacetsCollector,FacetsCollector[],String[]).mjava","sourceNew":"  /**\n   * Subclass can override to customize per-dim Facets\n   * impl.\n   */\n  protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways,\n          String[] drillSidewaysDims) throws IOException {\n\n    Facets drillDownFacets;\n    Map<String, Facets> drillSidewaysFacets = new HashMap<>();\n\n    if (taxoReader != null) {\n      drillDownFacets = new FastTaxonomyFacetCounts(taxoReader, config, drillDowns);\n      if (drillSideways != null) {\n        for (int i = 0; i < drillSideways.length; i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                  new FastTaxonomyFacetCounts(taxoReader, config, drillSideways[i]));\n        }\n      }\n    } else {\n      drillDownFacets = new SortedSetDocValuesFacetCounts(state, drillDowns);\n      if (drillSideways != null) {\n        for (int i = 0; i < drillSideways.length; i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i], new SortedSetDocValuesFacetCounts(state, drillSideways[i]));\n        }\n      }\n    }\n\n    if (drillSidewaysFacets.isEmpty()) {\n      return drillDownFacets;\n    } else {\n      return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n    }\n  }\n\n","sourceOld":"  /** Subclass can override to customize per-dim Facets\n   *  impl. */\n  protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n\n    Facets drillDownFacets;\n    Map<String,Facets> drillSidewaysFacets = new HashMap<>();\n\n    if (taxoReader != null) {\n      drillDownFacets = new FastTaxonomyFacetCounts(taxoReader, config, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new FastTaxonomyFacetCounts(taxoReader, config, drillSideways[i]));\n        }\n      }\n    } else {\n      drillDownFacets = new SortedSetDocValuesFacetCounts(state, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new SortedSetDocValuesFacetCounts(state, drillSideways[i]));\n        }\n      }\n    }\n\n    if (drillSidewaysFacets.isEmpty()) {\n      return drillDownFacets;\n    } else {\n      return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillSideways#buildFacetsResult(FacetsCollector,FacetsCollector[],String[]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/DrillSideways#buildFacetsResult(FacetsCollector,FacetsCollector[],String[]).mjava","sourceNew":"  /**\n   * Subclass can override to customize per-dim Facets\n   * impl.\n   */\n  protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways,\n          String[] drillSidewaysDims) throws IOException {\n\n    Facets drillDownFacets;\n    Map<String, Facets> drillSidewaysFacets = new HashMap<>();\n\n    if (taxoReader != null) {\n      drillDownFacets = new FastTaxonomyFacetCounts(taxoReader, config, drillDowns);\n      if (drillSideways != null) {\n        for (int i = 0; i < drillSideways.length; i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                  new FastTaxonomyFacetCounts(taxoReader, config, drillSideways[i]));\n        }\n      }\n    } else {\n      drillDownFacets = new SortedSetDocValuesFacetCounts(state, drillDowns);\n      if (drillSideways != null) {\n        for (int i = 0; i < drillSideways.length; i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i], new SortedSetDocValuesFacetCounts(state, drillSideways[i]));\n        }\n      }\n    }\n\n    if (drillSidewaysFacets.isEmpty()) {\n      return drillDownFacets;\n    } else {\n      return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n    }\n  }\n\n","sourceOld":"  /** Subclass can override to customize per-dim Facets\n   *  impl. */\n  protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n\n    Facets drillDownFacets;\n    Map<String,Facets> drillSidewaysFacets = new HashMap<>();\n\n    if (taxoReader != null) {\n      drillDownFacets = new FastTaxonomyFacetCounts(taxoReader, config, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new FastTaxonomyFacetCounts(taxoReader, config, drillSideways[i]));\n        }\n      }\n    } else {\n      drillDownFacets = new SortedSetDocValuesFacetCounts(state, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new SortedSetDocValuesFacetCounts(state, drillSideways[i]));\n        }\n      }\n    }\n\n    if (drillSidewaysFacets.isEmpty()) {\n      return drillDownFacets;\n    } else {\n      return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"91eb857a56b1a3a6659c666f88e2398347fc1c5a":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91eb857a56b1a3a6659c666f88e2398347fc1c5a"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","91eb857a56b1a3a6659c666f88e2398347fc1c5a"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["91eb857a56b1a3a6659c666f88e2398347fc1c5a","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","3cc728b07df73b197e6d940d27f9b08b63918f13"],"21d36d0db865f7b84026b447bec653469a6e66df":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"91eb857a56b1a3a6659c666f88e2398347fc1c5a":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}