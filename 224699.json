{"path":"src/test/org/apache/lucene/analysis/de/TestGermanStemFilter#testStemming().mjava","commits":[{"id":"2b931c24582f6cc20fad808932c4bb3bb687de56","date":1091962527,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/de/TestGermanStemFilter#testStemming().mjava","pathOld":"/dev/null","sourceNew":"  public void testStemming() {\n    try {\n      // read test cases from external file:\n      File dataDir = new File(System.getProperty(\"dataDir\"));\n      File testFile = new File(dataDir, \"org/apache/lucene/analysis/de/data.txt\");\n      FileInputStream fis = new FileInputStream(testFile);\n      InputStreamReader isr = new InputStreamReader(fis, \"iso-8859-1\");\n      BufferedReader breader = new BufferedReader(isr);\n      while(true) {\n        String line = breader.readLine();\n        if (line == null)\n          break;\n        line = line.trim();\n        if (line.startsWith(\"#\") || line.equals(\"\"))\n          continue;    // ignore comments and empty lines\n        String[] parts = line.split(\";\");\n        //System.out.println(parts[0] + \" -- \" + parts[1]);\n        check(parts[0], parts[1]);\n      }\n      breader.close();\n      isr.close();\n      fis.close();\n    } catch (IOException e) {\n       e.printStackTrace();\n       fail();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea99135fc04aa54c2d67af117ae5fd9d35bcab7b","date":1092164678,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/de/TestGermanStemFilter#testStemming().mjava","pathOld":"src/test/org/apache/lucene/analysis/de/TestGermanStemFilter#testStemming().mjava","sourceNew":"  public void testStemming() {\n    try {\n      // read test cases from external file:\n      File dataDir = new File(System.getProperty(\"dataDir\", \"./bin\"));\n      File testFile = new File(dataDir, \"org/apache/lucene/analysis/de/data.txt\");\n      FileInputStream fis = new FileInputStream(testFile);\n      InputStreamReader isr = new InputStreamReader(fis, \"iso-8859-1\");\n      BufferedReader breader = new BufferedReader(isr);\n      while(true) {\n        String line = breader.readLine();\n        if (line == null)\n          break;\n        line = line.trim();\n        if (line.startsWith(\"#\") || line.equals(\"\"))\n          continue;    // ignore comments and empty lines\n        String[] parts = line.split(\";\");\n        //System.out.println(parts[0] + \" -- \" + parts[1]);\n        check(parts[0], parts[1]);\n      }\n      breader.close();\n      isr.close();\n      fis.close();\n    } catch (IOException e) {\n       e.printStackTrace();\n       fail();\n    }\n  }\n\n","sourceOld":"  public void testStemming() {\n    try {\n      // read test cases from external file:\n      File dataDir = new File(System.getProperty(\"dataDir\"));\n      File testFile = new File(dataDir, \"org/apache/lucene/analysis/de/data.txt\");\n      FileInputStream fis = new FileInputStream(testFile);\n      InputStreamReader isr = new InputStreamReader(fis, \"iso-8859-1\");\n      BufferedReader breader = new BufferedReader(isr);\n      while(true) {\n        String line = breader.readLine();\n        if (line == null)\n          break;\n        line = line.trim();\n        if (line.startsWith(\"#\") || line.equals(\"\"))\n          continue;    // ignore comments and empty lines\n        String[] parts = line.split(\";\");\n        //System.out.println(parts[0] + \" -- \" + parts[1]);\n        check(parts[0], parts[1]);\n      }\n      breader.close();\n      isr.close();\n      fis.close();\n    } catch (IOException e) {\n       e.printStackTrace();\n       fail();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba8b5470cf673e04acfd3b9de8ef167c7a00582","date":1092688356,"type":4,"author":"Daniel Naber","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/analysis/de/TestGermanStemFilter#testStemming().mjava","sourceNew":null,"sourceOld":"  public void testStemming() {\n    try {\n      // read test cases from external file:\n      File dataDir = new File(System.getProperty(\"dataDir\", \"./bin\"));\n      File testFile = new File(dataDir, \"org/apache/lucene/analysis/de/data.txt\");\n      FileInputStream fis = new FileInputStream(testFile);\n      InputStreamReader isr = new InputStreamReader(fis, \"iso-8859-1\");\n      BufferedReader breader = new BufferedReader(isr);\n      while(true) {\n        String line = breader.readLine();\n        if (line == null)\n          break;\n        line = line.trim();\n        if (line.startsWith(\"#\") || line.equals(\"\"))\n          continue;    // ignore comments and empty lines\n        String[] parts = line.split(\";\");\n        //System.out.println(parts[0] + \" -- \" + parts[1]);\n        check(parts[0], parts[1]);\n      }\n      breader.close();\n      isr.close();\n      fis.close();\n    } catch (IOException e) {\n       e.printStackTrace();\n       fail();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2b931c24582f6cc20fad808932c4bb3bb687de56":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9ba8b5470cf673e04acfd3b9de8ef167c7a00582":["ea99135fc04aa54c2d67af117ae5fd9d35bcab7b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ea99135fc04aa54c2d67af117ae5fd9d35bcab7b":["2b931c24582f6cc20fad808932c4bb3bb687de56"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba8b5470cf673e04acfd3b9de8ef167c7a00582"]},"commit2Childs":{"2b931c24582f6cc20fad808932c4bb3bb687de56":["ea99135fc04aa54c2d67af117ae5fd9d35bcab7b"],"9ba8b5470cf673e04acfd3b9de8ef167c7a00582":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2b931c24582f6cc20fad808932c4bb3bb687de56"],"ea99135fc04aa54c2d67af117ae5fd9d35bcab7b":["9ba8b5470cf673e04acfd3b9de8ef167c7a00582"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}