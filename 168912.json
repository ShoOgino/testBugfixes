{"path":"lucene/core/src/test/org/apache/lucene/search/TestCachingWrapperQuery#assertQueryEquals(Query,Query).mjava","commits":[{"id":"60596f28be69b10c37a56a303c2dbea07b2ca4ba","date":1425060541,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestCachingWrapperQuery#assertQueryEquals(Query,Query).mjava","pathOld":"/dev/null","sourceNew":"  private void assertQueryEquals(Query f1, Query f2) throws Exception {\n    // wrap into CSQ so that scores are not needed\n    TopDocs hits1 = is.search(new ConstantScoreQuery(f1), ir.maxDoc());\n    TopDocs hits2 = is.search(new ConstantScoreQuery(f2), ir.maxDoc());\n    assertEquals(hits1.totalHits, hits2.totalHits);\n    CheckHits.checkEqual(f1, hits1.scoreDocs, hits2.scoreDocs);\n    // now do it again to confirm caching works\n    TopDocs hits3 = is.search(new ConstantScoreQuery(f1), ir.maxDoc());\n    TopDocs hits4 = is.search(new ConstantScoreQuery(f2), ir.maxDoc());\n    assertEquals(hits3.totalHits, hits4.totalHits);\n    CheckHits.checkEqual(f1, hits3.scoreDocs, hits4.scoreDocs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestCachingWrapperQuery#assertQueryEquals(Query,Query).mjava","pathOld":"/dev/null","sourceNew":"  private void assertQueryEquals(Query f1, Query f2) throws Exception {\n    // wrap into CSQ so that scores are not needed\n    TopDocs hits1 = is.search(new ConstantScoreQuery(f1), ir.maxDoc());\n    TopDocs hits2 = is.search(new ConstantScoreQuery(f2), ir.maxDoc());\n    assertEquals(hits1.totalHits, hits2.totalHits);\n    CheckHits.checkEqual(f1, hits1.scoreDocs, hits2.scoreDocs);\n    // now do it again to confirm caching works\n    TopDocs hits3 = is.search(new ConstantScoreQuery(f1), ir.maxDoc());\n    TopDocs hits4 = is.search(new ConstantScoreQuery(f2), ir.maxDoc());\n    assertEquals(hits3.totalHits, hits4.totalHits);\n    CheckHits.checkEqual(f1, hits3.scoreDocs, hits4.scoreDocs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cfc8e07724f6bd95be343b1c03ae917c9de69cc","date":1446026743,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestCachingWrapperQuery#assertQueryEquals(Query,Query).mjava","sourceNew":null,"sourceOld":"  private void assertQueryEquals(Query f1, Query f2) throws Exception {\n    // wrap into CSQ so that scores are not needed\n    TopDocs hits1 = is.search(new ConstantScoreQuery(f1), ir.maxDoc());\n    TopDocs hits2 = is.search(new ConstantScoreQuery(f2), ir.maxDoc());\n    assertEquals(hits1.totalHits, hits2.totalHits);\n    CheckHits.checkEqual(f1, hits1.scoreDocs, hits2.scoreDocs);\n    // now do it again to confirm caching works\n    TopDocs hits3 = is.search(new ConstantScoreQuery(f1), ir.maxDoc());\n    TopDocs hits4 = is.search(new ConstantScoreQuery(f2), ir.maxDoc());\n    assertEquals(hits3.totalHits, hits4.totalHits);\n    CheckHits.checkEqual(f1, hits3.scoreDocs, hits4.scoreDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"4cfc8e07724f6bd95be343b1c03ae917c9de69cc":["60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4cfc8e07724f6bd95be343b1c03ae917c9de69cc"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4cfc8e07724f6bd95be343b1c03ae917c9de69cc"],"4cfc8e07724f6bd95be343b1c03ae917c9de69cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}