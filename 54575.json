{"path":"solr/src/java/org/apache/solr/handler/JsonLoader#assertNextEvent(int).mjava","commits":[{"id":"19b15db2edd4d6bec35a41e44d8f1afe6384a905","date":1305144174,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/JsonLoader#assertNextEvent(int).mjava","pathOld":"/dev/null","sourceNew":"  int assertNextEvent(int expected ) throws IOException\n  {\n    int got = parser.nextEvent();\n    assertEvent(got, expected);\n    return got;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/JsonLoader#assertNextEvent(int).mjava","pathOld":"/dev/null","sourceNew":"  int assertNextEvent(int expected ) throws IOException\n  {\n    int got = parser.nextEvent();\n    assertEvent(got, expected);\n    return got;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/JsonLoader#assertNextEvent(int).mjava","pathOld":"/dev/null","sourceNew":"  int assertNextEvent(int expected ) throws IOException\n  {\n    int got = parser.nextEvent();\n    assertEvent(got, expected);\n    return got;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/JsonLoader#assertNextEvent(int).mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#assertNextEvent(int).mjava","sourceNew":"  int assertNextEvent(int expected ) throws IOException\n  {\n    int got = parser.nextEvent();\n    assertEvent(got, expected);\n    return got;\n  }\n\n","sourceOld":"  int assertNextEvent(int expected ) throws IOException\n  {\n    int got = parser.nextEvent();\n    assertEvent(got, expected);\n    return got;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/JsonLoader#assertNextEvent(int).mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#assertNextEvent(int).mjava","sourceNew":"  int assertNextEvent(int expected ) throws IOException\n  {\n    int got = parser.nextEvent();\n    assertEvent(got, expected);\n    return got;\n  }\n\n","sourceOld":"  int assertNextEvent(int expected ) throws IOException\n  {\n    int got = parser.nextEvent();\n    assertEvent(got, expected);\n    return got;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/JsonLoader#assertNextEvent(int).mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#assertNextEvent(int).mjava","sourceNew":"  int assertNextEvent(int expected ) throws IOException\n  {\n    int got = parser.nextEvent();\n    assertEvent(got, expected);\n    return got;\n  }\n\n","sourceOld":"  int assertNextEvent(int expected ) throws IOException\n  {\n    int got = parser.nextEvent();\n    assertEvent(got, expected);\n    return got;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"19b15db2edd4d6bec35a41e44d8f1afe6384a905":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a3776dccca01c11e7046323cfad46a3b4a471233"],"c26f00b574427b55127e869b935845554afde1fa":["19b15db2edd4d6bec35a41e44d8f1afe6384a905","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","19b15db2edd4d6bec35a41e44d8f1afe6384a905"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","19b15db2edd4d6bec35a41e44d8f1afe6384a905"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["19b15db2edd4d6bec35a41e44d8f1afe6384a905"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"19b15db2edd4d6bec35a41e44d8f1afe6384a905":["c26f00b574427b55127e869b935845554afde1fa","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["19b15db2edd4d6bec35a41e44d8f1afe6384a905","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}