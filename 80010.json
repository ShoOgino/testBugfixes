{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor.UppercaseTransformer#transformRow(Map[String,Object],Context).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor.UppercaseTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor.UppercaseTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"    @Override\n    public Object transformRow(Map<String, Object> row, Context context) {\n      for (Map.Entry<String, Object> entry : row.entrySet()) {\n        Object val = entry.getValue();\n        if (val instanceof String) {\n          String s = (String) val;\n          entry.setValue(s.toUpperCase(Locale.ENGLISH));\n        }\n      }\n      return row;\n    }\n\n","sourceOld":"    @Override\n    public Object transformRow(Map<String, Object> row, Context context) {\n      for (Map.Entry<String, Object> entry : row.entrySet()) {\n        Object val = entry.getValue();\n        if (val instanceof String) {\n          String s = (String) val;\n          entry.setValue(s.toUpperCase(Locale.ENGLISH));\n        }\n      }\n      return row;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor.UppercaseTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor.UppercaseTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"    @Override\n    public Object transformRow(Map<String, Object> row, Context context) {\n      for (Map.Entry<String, Object> entry : row.entrySet()) {\n        Object val = entry.getValue();\n        if (val instanceof String) {\n          String s = (String) val;\n          entry.setValue(s.toUpperCase(Locale.ENGLISH));\n        }\n      }\n      return row;\n    }\n\n","sourceOld":"    @Override\n    public Object transformRow(Map<String, Object> row, Context context) {\n      for (Map.Entry<String, Object> entry : row.entrySet()) {\n        Object val = entry.getValue();\n        if (val instanceof String) {\n          String s = (String) val;\n          entry.setValue(s.toUpperCase(Locale.ENGLISH));\n        }\n      }\n      return row;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9279c7cd47f17e1e8b674a3741ff5f040bc680be","date":1341675760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor.UppercaseTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor.UppercaseTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"    @Override\n    public Object transformRow(Map<String, Object> row, Context context) {\n      for (Map.Entry<String, Object> entry : row.entrySet()) {\n        Object val = entry.getValue();\n        if (val instanceof String) {\n          String s = (String) val;\n          entry.setValue(s.toUpperCase(Locale.ROOT));\n        }\n      }\n      return row;\n    }\n\n","sourceOld":"    @Override\n    public Object transformRow(Map<String, Object> row, Context context) {\n      for (Map.Entry<String, Object> entry : row.entrySet()) {\n        Object val = entry.getValue();\n        if (val instanceof String) {\n          String s = (String) val;\n          entry.setValue(s.toUpperCase(Locale.ENGLISH));\n        }\n      }\n      return row;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor.UppercaseTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor.UppercaseTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"    @Override\n    public Object transformRow(Map<String, Object> row, Context context) {\n      for (Map.Entry<String, Object> entry : row.entrySet()) {\n        Object val = entry.getValue();\n        if (val instanceof String) {\n          String s = (String) val;\n          entry.setValue(s.toUpperCase(Locale.ROOT));\n        }\n      }\n      return row;\n    }\n\n","sourceOld":"    @Override\n    public Object transformRow(Map<String, Object> row, Context context) {\n      for (Map.Entry<String, Object> entry : row.entrySet()) {\n        Object val = entry.getValue();\n        if (val instanceof String) {\n          String s = (String) val;\n          entry.setValue(s.toUpperCase(Locale.ENGLISH));\n        }\n      }\n      return row;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor.UppercaseTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor.UppercaseTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"    @Override\n    public Object transformRow(Map<String, Object> row, Context context) {\n      for (Map.Entry<String, Object> entry : row.entrySet()) {\n        Object val = entry.getValue();\n        if (val instanceof String) {\n          String s = (String) val;\n          entry.setValue(s.toUpperCase(Locale.ROOT));\n        }\n      }\n      return row;\n    }\n\n","sourceOld":"    @Override\n    public Object transformRow(Map<String, Object> row, Context context) {\n      for (Map.Entry<String, Object> entry : row.entrySet()) {\n        Object val = entry.getValue();\n        if (val instanceof String) {\n          String s = (String) val;\n          entry.setValue(s.toUpperCase(Locale.ENGLISH));\n        }\n      }\n      return row;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor.UppercaseTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor.UppercaseTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"    @Override\n    public Object transformRow(Map<String, Object> row, Context context) {\n      for (Map.Entry<String, Object> entry : row.entrySet()) {\n        Object val = entry.getValue();\n        if (val instanceof String) {\n          String s = (String) val;\n          entry.setValue(s.toUpperCase(Locale.ROOT));\n        }\n      }\n      return row;\n    }\n\n","sourceOld":"    @Override\n    public Object transformRow(Map<String, Object> row, Context context) {\n      for (Map.Entry<String, Object> entry : row.entrySet()) {\n        Object val = entry.getValue();\n        if (val instanceof String) {\n          String s = (String) val;\n          entry.setValue(s.toUpperCase(Locale.ENGLISH));\n        }\n      }\n      return row;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"baf341ad3a1a8fb73fb37091af85f8aef0398367","date":1352222680,"type":4,"author":"James Dyer","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor.UppercaseTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":null,"sourceOld":"    @Override\n    public Object transformRow(Map<String, Object> row, Context context) {\n      for (Map.Entry<String, Object> entry : row.entrySet()) {\n        Object val = entry.getValue();\n        if (val instanceof String) {\n          String s = (String) val;\n          entry.setValue(s.toUpperCase(Locale.ROOT));\n        }\n      }\n      return row;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c26f00b574427b55127e869b935845554afde1fa","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"baf341ad3a1a8fb73fb37091af85f8aef0398367":["2acf500f78aa12b92e371fd89c719291986b6b90"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["c26f00b574427b55127e869b935845554afde1fa"],"2acf500f78aa12b92e371fd89c719291986b6b90":["c26f00b574427b55127e869b935845554afde1fa","9279c7cd47f17e1e8b674a3741ff5f040bc680be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["baf341ad3a1a8fb73fb37091af85f8aef0398367"],"46d8ada1fff8d18cb197c38c7983225162599948":["c26f00b574427b55127e869b935845554afde1fa","2acf500f78aa12b92e371fd89c719291986b6b90"]},"commit2Childs":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["fe33227f6805edab2036cbb80645cc4e2d1fa424","9279c7cd47f17e1e8b674a3741ff5f040bc680be","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"baf341ad3a1a8fb73fb37091af85f8aef0398367":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["2acf500f78aa12b92e371fd89c719291986b6b90"],"2acf500f78aa12b92e371fd89c719291986b6b90":["fe33227f6805edab2036cbb80645cc4e2d1fa424","baf341ad3a1a8fb73fb37091af85f8aef0398367","46d8ada1fff8d18cb197c38c7983225162599948"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}