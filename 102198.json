{"path":"lucene/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoEmptyAndNonEmptyByteArrays().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoEmptyAndNonEmptyByteArrays().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoEmptyAndNonEmptyByteArrays().mjava","sourceNew":"  @Test\n  public void testTwoEmptyAndNonEmptyByteArrays() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    EnhancementsIndexingParams indexingParams = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy1(),\n          new CategoryEnhancementDummy3());\n\n    // add document with a category containing data for both enhancements\n    List<CategoryPath> categoryPaths = new ArrayList<CategoryPath>();\n    categoryPaths.add(new CategoryPath(\"a\", \"b\"));\n\n    RandomIndexWriter indexWriter = new RandomIndexWriter(random(), indexDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)));\n    TaxonomyWriter taxo = new DirectoryTaxonomyWriter(taxoDir);\n\n    // a category document builder will add the categories to a document\n    // once build() is called\n    Document doc = new Document();\n    indexWriter.addDocument(new EnhancementsDocumentBuilder(taxo,\n        indexingParams).setCategoryPaths(categoryPaths).build(doc));\n\n    IndexReader indexReader = indexWriter.getReader();\n    indexWriter.close();\n\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"a\",\"b\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n\n    assertTrue(\"EnhancementsPayloadIterator failure\", iterator.init());\n    assertTrue(\"Missing document 0\", iterator.setdoc(0));\n    assertNull(\"Unexpected data for CategoryEnhancementDummy2\", iterator\n        .getCategoryData(new CategoryEnhancementDummy1()));\n    byte[] dummy3 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy3());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy3\", Arrays\n        .equals(dummy3, CategoryEnhancementDummy3.CATEGORY_TOKEN_BYTES));\n    indexReader.close();\n    indexDir.close();\n    taxo.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testTwoEmptyAndNonEmptyByteArrays() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    EnhancementsIndexingParams indexingParams = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy1(),\n          new CategoryEnhancementDummy3());\n\n    // add document with a category containing data for both enhancements\n    List<CategoryPath> categoryPaths = new ArrayList<CategoryPath>();\n    categoryPaths.add(new CategoryPath(\"a\", \"b\"));\n\n    RandomIndexWriter indexWriter = new RandomIndexWriter(random(), indexDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)));\n    TaxonomyWriter taxo = new DirectoryTaxonomyWriter(taxoDir);\n\n    // a category document builder will add the categories to a document\n    // once build() is called\n    Document doc = new Document();\n    indexWriter.addDocument(new EnhancementsDocumentBuilder(taxo,\n        indexingParams).setCategoryPaths(categoryPaths).build(doc));\n\n    IndexReader indexReader = indexWriter.getReader();\n    indexWriter.close();\n\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"a\",\"b\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n\n    assertTrue(\"EnhancementsPayloadIterator failure\", iterator.init());\n    assertTrue(\"Missing document 0\", iterator.setdoc(0));\n    assertNull(\"Unexpected data for CategoryEnhancementDummy2\", iterator\n        .getCategoryData(new CategoryEnhancementDummy1()));\n    byte[] dummy3 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy3());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy3\", Arrays\n        .equals(dummy3, CategoryEnhancementDummy3.CATEGORY_TOKEN_BYTES));\n    indexReader.close();\n    indexDir.close();\n    taxo.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4c6c7f3cda7a0595cabd16e5e9107ca29852708","date":1355402234,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoEmptyAndNonEmptyByteArrays().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoEmptyAndNonEmptyByteArrays().mjava","sourceNew":"  @Test\n  public void testTwoEmptyAndNonEmptyByteArrays() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    EnhancementsIndexingParams indexingParams = new EnhancementsIndexingParams(\n        new CategoryEnhancementDummy1(), new CategoryEnhancementDummy3());\n\n    // add document with a category containing data for both enhancements\n    List<CategoryPath> categoryPaths = new ArrayList<CategoryPath>();\n    categoryPaths.add(new CategoryPath(\"a\", \"b\"));\n\n    RandomIndexWriter indexWriter = new RandomIndexWriter(random(), indexDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)));\n    TaxonomyWriter taxo = new DirectoryTaxonomyWriter(taxoDir);\n\n    // a category document builder will add the categories to a document\n    // once build() is called\n    Document doc = new Document();\n    indexWriter.addDocument(new EnhancementsDocumentBuilder(taxo,\n        indexingParams).setCategoryPaths(categoryPaths).build(doc));\n\n    IndexReader indexReader = indexWriter.getReader();\n    indexWriter.close();\n\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"a\",\"b\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n\n    assertTrue(\"EnhancementsPayloadIterator failure\", iterator.init());\n    assertTrue(\"Missing document 0\", iterator.setdoc(0));\n    assertNull(\"Unexpected data for CategoryEnhancementDummy2\", iterator\n        .getCategoryData(new CategoryEnhancementDummy1()));\n    byte[] dummy3 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy3());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy3\", Arrays\n        .equals(dummy3, CategoryEnhancementDummy3.CATEGORY_TOKEN_BYTES));\n    indexReader.close();\n    indexDir.close();\n    taxo.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testTwoEmptyAndNonEmptyByteArrays() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    EnhancementsIndexingParams indexingParams = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy1(),\n          new CategoryEnhancementDummy3());\n\n    // add document with a category containing data for both enhancements\n    List<CategoryPath> categoryPaths = new ArrayList<CategoryPath>();\n    categoryPaths.add(new CategoryPath(\"a\", \"b\"));\n\n    RandomIndexWriter indexWriter = new RandomIndexWriter(random(), indexDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)));\n    TaxonomyWriter taxo = new DirectoryTaxonomyWriter(taxoDir);\n\n    // a category document builder will add the categories to a document\n    // once build() is called\n    Document doc = new Document();\n    indexWriter.addDocument(new EnhancementsDocumentBuilder(taxo,\n        indexingParams).setCategoryPaths(categoryPaths).build(doc));\n\n    IndexReader indexReader = indexWriter.getReader();\n    indexWriter.close();\n\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"a\",\"b\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n\n    assertTrue(\"EnhancementsPayloadIterator failure\", iterator.init());\n    assertTrue(\"Missing document 0\", iterator.setdoc(0));\n    assertNull(\"Unexpected data for CategoryEnhancementDummy2\", iterator\n        .getCategoryData(new CategoryEnhancementDummy1()));\n    byte[] dummy3 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy3());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy3\", Arrays\n        .equals(dummy3, CategoryEnhancementDummy3.CATEGORY_TOKEN_BYTES));\n    indexReader.close();\n    indexDir.close();\n    taxo.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a1037d9031f9702ee6912f8751ef1d5320da6d9","date":1357217787,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoEmptyAndNonEmptyByteArrays().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testTwoEmptyAndNonEmptyByteArrays() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    EnhancementsIndexingParams indexingParams = new EnhancementsIndexingParams(\n        new CategoryEnhancementDummy1(), new CategoryEnhancementDummy3());\n\n    // add document with a category containing data for both enhancements\n    List<CategoryPath> categoryPaths = new ArrayList<CategoryPath>();\n    categoryPaths.add(new CategoryPath(\"a\", \"b\"));\n\n    RandomIndexWriter indexWriter = new RandomIndexWriter(random(), indexDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)));\n    TaxonomyWriter taxo = new DirectoryTaxonomyWriter(taxoDir);\n\n    // a category document builder will add the categories to a document\n    // once build() is called\n    Document doc = new Document();\n    indexWriter.addDocument(new EnhancementsDocumentBuilder(taxo,\n        indexingParams).setCategoryPaths(categoryPaths).build(doc));\n\n    IndexReader indexReader = indexWriter.getReader();\n    indexWriter.close();\n\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"a\",\"b\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n\n    assertTrue(\"EnhancementsPayloadIterator failure\", iterator.init());\n    assertTrue(\"Missing document 0\", iterator.setdoc(0));\n    assertNull(\"Unexpected data for CategoryEnhancementDummy2\", iterator\n        .getCategoryData(new CategoryEnhancementDummy1()));\n    byte[] dummy3 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy3());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy3\", Arrays\n        .equals(dummy3, CategoryEnhancementDummy3.CATEGORY_TOKEN_BYTES));\n    indexReader.close();\n    indexDir.close();\n    taxo.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoEmptyAndNonEmptyByteArrays().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testTwoEmptyAndNonEmptyByteArrays() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    EnhancementsIndexingParams indexingParams = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy1(),\n          new CategoryEnhancementDummy3());\n\n    // add document with a category containing data for both enhancements\n    List<CategoryPath> categoryPaths = new ArrayList<CategoryPath>();\n    categoryPaths.add(new CategoryPath(\"a\", \"b\"));\n\n    RandomIndexWriter indexWriter = new RandomIndexWriter(random(), indexDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)));\n    TaxonomyWriter taxo = new DirectoryTaxonomyWriter(taxoDir);\n\n    // a category document builder will add the categories to a document\n    // once build() is called\n    Document doc = new Document();\n    indexWriter.addDocument(new EnhancementsDocumentBuilder(taxo,\n        indexingParams).setCategoryPaths(categoryPaths).build(doc));\n\n    IndexReader indexReader = indexWriter.getReader();\n    indexWriter.close();\n\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"a\",\"b\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n\n    assertTrue(\"EnhancementsPayloadIterator failure\", iterator.init());\n    assertTrue(\"Missing document 0\", iterator.setdoc(0));\n    assertNull(\"Unexpected data for CategoryEnhancementDummy2\", iterator\n        .getCategoryData(new CategoryEnhancementDummy1()));\n    byte[] dummy3 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy3());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy3\", Arrays\n        .equals(dummy3, CategoryEnhancementDummy3.CATEGORY_TOKEN_BYTES));\n    indexReader.close();\n    indexDir.close();\n    taxo.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7a1037d9031f9702ee6912f8751ef1d5320da6d9"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}