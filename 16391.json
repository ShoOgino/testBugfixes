{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/DirectJsonQueryRequestFacetingIntegrationTest#testFacetWithDomainWidenedUsingExcludeTagsToIgnoreFilters().mjava","commits":[{"id":"e361c91e3f3d36ea61c7ab9f2d4459792480783e","date":1541904265,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/DirectJsonQueryRequestFacetingIntegrationTest#testFacetWithDomainWidenedUsingExcludeTagsToIgnoreFilters().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFacetWithDomainWidenedUsingExcludeTagsToIgnoreFilters() throws Exception {\n    final String jsonBody = String.join(\"\\n\",\"{\",\n        \"  'query': '*:*',\",\n        \"  'filter': {'#on_shelf': 'inStock:true'},\",\n        \"  'facet': {\",\n        \"    'in_stock_only': {\",\n        \"      'type': 'terms',\",\n        \"      'field': 'cat',\",\n        \"      'limit': 2\",\n        \"    }\",\n        \"    'all': {\",\n        \"      'type': 'terms',\",\n        \"      'field': 'cat',\",\n        \"      'limit': 2,\",\n        \"      'domain': {\",\n        \"        'excludeTags': 'on_shelf'\",\n        \"      }\",\n        \"    }\",\n        \"  }\",\n        \"}\");\n    final DirectJsonQueryRequest request = new DirectJsonQueryRequest(jsonBody);\n    QueryResponse response = request.process(cluster.getSolrClient(), COLLECTION_NAME);\n\n    assertEquals(0, response.getStatus());\n    final SolrDocumentList returnedDocs = response.getResults();\n    assertEquals(NUM_IN_STOCK, returnedDocs.getNumFound());\n    assertEquals(10, returnedDocs.size());\n    final NamedList<Object> rawResponse = response.getResponse();\n\n    assertHasFacetWithBucketValues(rawResponse,\"in_stock_only\",\n        new FacetBucket(\"electronics\",8),\n        new FacetBucket(\"currency\", 4));\n    assertHasFacetWithBucketValues(rawResponse,\"all\",\n        new FacetBucket(\"electronics\",12),\n        new FacetBucket(\"currency\", 4));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07feaa572dd3645c2013be127176350b3f4cd6a2","date":1542492880,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/DirectJsonQueryRequestFacetingIntegrationTest#testFacetWithDomainWidenedUsingExcludeTagsToIgnoreFilters().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/DirectJsonQueryRequestFacetingIntegrationTest#testFacetWithDomainWidenedUsingExcludeTagsToIgnoreFilters().mjava","sourceNew":"  @Test\n  public void testFacetWithDomainWidenedUsingExcludeTagsToIgnoreFilters() throws Exception {\n    final String jsonBody = String.join(\"\\n\",\"{\",\n        \"  'query': '*:*',\",\n        \"  'filter': {'#on_shelf': 'inStock:true'},\",\n        \"  'facet': {\",\n        \"    'in_stock_only': {\",\n        \"      'type': 'terms',\",\n        \"      'field': 'cat',\",\n        \"      'limit': 2\",\n        \"    }\",\n        \"    'all': {\",\n        \"      'type': 'terms',\",\n        \"      'field': 'cat',\",\n        \"      'limit': 2,\",\n        \"      'domain': {\",\n        \"        'excludeTags': 'on_shelf'\",\n        \"      }\",\n        \"    }\",\n        \"  }\",\n        \"}\");\n    final DirectJsonQueryRequest request = new DirectJsonQueryRequest(jsonBody);\n\n    QueryResponse response = request.process(cluster.getSolrClient(), COLLECTION_NAME);\n\n    assertExpectedDocumentsFoundAndReturned(response, NUM_IN_STOCK, 10);\n    final NestableJsonFacet topLevelFacetData = response.getJsonFacetingResponse();\n    assertHasFacetWithBucketValues(topLevelFacetData,\"in_stock_only\",\n        new FacetBucket(\"electronics\",8),\n        new FacetBucket(\"currency\", 4));\n    assertHasFacetWithBucketValues(topLevelFacetData,\"all\",\n        new FacetBucket(\"electronics\",12),\n        new FacetBucket(\"currency\", 4));\n  }\n\n","sourceOld":"  @Test\n  public void testFacetWithDomainWidenedUsingExcludeTagsToIgnoreFilters() throws Exception {\n    final String jsonBody = String.join(\"\\n\",\"{\",\n        \"  'query': '*:*',\",\n        \"  'filter': {'#on_shelf': 'inStock:true'},\",\n        \"  'facet': {\",\n        \"    'in_stock_only': {\",\n        \"      'type': 'terms',\",\n        \"      'field': 'cat',\",\n        \"      'limit': 2\",\n        \"    }\",\n        \"    'all': {\",\n        \"      'type': 'terms',\",\n        \"      'field': 'cat',\",\n        \"      'limit': 2,\",\n        \"      'domain': {\",\n        \"        'excludeTags': 'on_shelf'\",\n        \"      }\",\n        \"    }\",\n        \"  }\",\n        \"}\");\n    final DirectJsonQueryRequest request = new DirectJsonQueryRequest(jsonBody);\n    QueryResponse response = request.process(cluster.getSolrClient(), COLLECTION_NAME);\n\n    assertEquals(0, response.getStatus());\n    final SolrDocumentList returnedDocs = response.getResults();\n    assertEquals(NUM_IN_STOCK, returnedDocs.getNumFound());\n    assertEquals(10, returnedDocs.size());\n    final NamedList<Object> rawResponse = response.getResponse();\n\n    assertHasFacetWithBucketValues(rawResponse,\"in_stock_only\",\n        new FacetBucket(\"electronics\",8),\n        new FacetBucket(\"currency\", 4));\n    assertHasFacetWithBucketValues(rawResponse,\"all\",\n        new FacetBucket(\"electronics\",12),\n        new FacetBucket(\"currency\", 4));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e361c91e3f3d36ea61c7ab9f2d4459792480783e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["07feaa572dd3645c2013be127176350b3f4cd6a2"],"07feaa572dd3645c2013be127176350b3f4cd6a2":["e361c91e3f3d36ea61c7ab9f2d4459792480783e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e361c91e3f3d36ea61c7ab9f2d4459792480783e"],"e361c91e3f3d36ea61c7ab9f2d4459792480783e":["07feaa572dd3645c2013be127176350b3f4cd6a2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"07feaa572dd3645c2013be127176350b3f4cd6a2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}