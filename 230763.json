{"path":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#tokenStream(String,Reader).mjava","commits":[{"id":"838eb4e82b036bedc8730b5d97f5ae1d4a0d906b","date":1074593221,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#tokenStream(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Creates a TokenStream which tokenizes all the text in the provided Reader.\n\t *\n\t * @return  A TokenStream build from a StandardTokenizer filtered with\n\t * \t\t\tStandardFilter, StopFilter, FrenchStemFilter and LowerCaseFilter\n\t */\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n\t\tTokenStream result = new StandardTokenizer( reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new StopFilter( result, stoptable );\n\t\tresult = new FrenchStemFilter( result, excltable );\n\t\t// Convert to lowercase after stemming!\n\t\tresult = new LowerCaseFilter( result );\n\t\treturn result;\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36f8536aad2e65f5a64d8784afd359db1b1f62d2","date":1074804556,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#tokenStream(String,Reader).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   *\n   * @return  A TokenStream build from a StandardTokenizer filtered with\n   * \t\t\tStandardFilter, StopFilter, FrenchStemFilter and LowerCaseFilter\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n\n    if (fieldName == null)\n      throw new IllegalArgumentException\n        (\"fieldName must not be null\");\n    if (reader == null) throw new IllegalArgumentException(\"reader must not be null\");\n\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new FrenchStemFilter(result, excltable);\n    // Convert to lowercase after stemming!\n    result = new LowerCaseFilter(result);\n    return result;\n  }\n\n","sourceOld":"\t/**\n\t * Creates a TokenStream which tokenizes all the text in the provided Reader.\n\t *\n\t * @return  A TokenStream build from a StandardTokenizer filtered with\n\t * \t\t\tStandardFilter, StopFilter, FrenchStemFilter and LowerCaseFilter\n\t */\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n\t\tTokenStream result = new StandardTokenizer( reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new StopFilter( result, stoptable );\n\t\tresult = new FrenchStemFilter( result, excltable );\n\t\t// Convert to lowercase after stemming!\n\t\tresult = new LowerCaseFilter( result );\n\t\treturn result;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a28f2a02242055cc5e2dde7ed01137cf7ea6e3c1","date":1074862174,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#tokenStream(String,Reader).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"\t/**\n\t * Creates a TokenStream which tokenizes all the text in the provided Reader.\n\t *\n\t * @return  A TokenStream build from a StandardTokenizer filtered with\n\t * \t\t\tStandardFilter, StopFilter, FrenchStemFilter and LowerCaseFilter\n\t */\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n\t\t\n\t\tif (fieldName==null) throw new IllegalArgumentException(\"fieldName must not be null\");\n\t\tif (reader==null) throw new IllegalArgumentException(\"readermust not be null\");\n\t\t\t\t\n\t\tTokenStream result = new StandardTokenizer( reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new StopFilter( result, stoptable );\n\t\tresult = new FrenchStemFilter( result, excltable );\n\t\t// Convert to lowercase after stemming!\n\t\tresult = new LowerCaseFilter( result );\n\t\treturn result;\n\t}\n\n","sourceOld":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   *\n   * @return  A TokenStream build from a StandardTokenizer filtered with\n   * \t\t\tStandardFilter, StopFilter, FrenchStemFilter and LowerCaseFilter\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n\n    if (fieldName == null)\n      throw new IllegalArgumentException\n        (\"fieldName must not be null\");\n    if (reader == null) throw new IllegalArgumentException(\"reader must not be null\");\n\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new FrenchStemFilter(result, excltable);\n    // Convert to lowercase after stemming!\n    result = new LowerCaseFilter(result);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79a4babde9a4de13b09d3bcfdad856df5f211846","date":1079106779,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#tokenStream(String,Reader).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   *\n   * @return A TokenStream build from a StandardTokenizer filtered with\n   *         StandardFilter, StopFilter, FrenchStemFilter and LowerCaseFilter\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n\n    if (fieldName == null) throw new IllegalArgumentException(\"fieldName must not be null\");\n    if (reader == null) throw new IllegalArgumentException(\"readermust not be null\");\n\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new FrenchStemFilter(result, excltable);\n    // Convert to lowercase after stemming!\n    result = new LowerCaseFilter(result);\n    return result;\n  }\n\n","sourceOld":"\t/**\n\t * Creates a TokenStream which tokenizes all the text in the provided Reader.\n\t *\n\t * @return  A TokenStream build from a StandardTokenizer filtered with\n\t * \t\t\tStandardFilter, StopFilter, FrenchStemFilter and LowerCaseFilter\n\t */\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n\t\t\n\t\tif (fieldName==null) throw new IllegalArgumentException(\"fieldName must not be null\");\n\t\tif (reader==null) throw new IllegalArgumentException(\"readermust not be null\");\n\t\t\t\t\n\t\tTokenStream result = new StandardTokenizer( reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new StopFilter( result, stoptable );\n\t\tresult = new FrenchStemFilter( result, excltable );\n\t\t// Convert to lowercase after stemming!\n\t\tresult = new LowerCaseFilter( result );\n\t\treturn result;\n\t}\n\n","bugFix":null,"bugIntro":["c83a2e572295a9d2b63506929926d0522f61d386"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#tokenStream(String,Reader).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   *\n   * @return A TokenStream build from a StandardTokenizer filtered with\n   *         StandardFilter, StopFilter, FrenchStemFilter and LowerCaseFilter\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n\n    if (fieldName == null) throw new IllegalArgumentException(\"fieldName must not be null\");\n    if (reader == null) throw new IllegalArgumentException(\"readermust not be null\");\n\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new FrenchStemFilter(result, excltable);\n    // Convert to lowercase after stemming!\n    result = new LowerCaseFilter(result);\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   *\n   * @return A TokenStream build from a StandardTokenizer filtered with\n   *         StandardFilter, StopFilter, FrenchStemFilter and LowerCaseFilter\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n\n    if (fieldName == null) throw new IllegalArgumentException(\"fieldName must not be null\");\n    if (reader == null) throw new IllegalArgumentException(\"readermust not be null\");\n\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new StopFilter(result, stoptable);\n    result = new FrenchStemFilter(result, excltable);\n    // Convert to lowercase after stemming!\n    result = new LowerCaseFilter(result);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["79a4babde9a4de13b09d3bcfdad856df5f211846"],"838eb4e82b036bedc8730b5d97f5ae1d4a0d906b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a28f2a02242055cc5e2dde7ed01137cf7ea6e3c1":["36f8536aad2e65f5a64d8784afd359db1b1f62d2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"79a4babde9a4de13b09d3bcfdad856df5f211846":["a28f2a02242055cc5e2dde7ed01137cf7ea6e3c1"],"36f8536aad2e65f5a64d8784afd359db1b1f62d2":["838eb4e82b036bedc8730b5d97f5ae1d4a0d906b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"838eb4e82b036bedc8730b5d97f5ae1d4a0d906b":["36f8536aad2e65f5a64d8784afd359db1b1f62d2"],"a28f2a02242055cc5e2dde7ed01137cf7ea6e3c1":["79a4babde9a4de13b09d3bcfdad856df5f211846"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["838eb4e82b036bedc8730b5d97f5ae1d4a0d906b"],"79a4babde9a4de13b09d3bcfdad856df5f211846":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"36f8536aad2e65f5a64d8784afd359db1b1f62d2":["a28f2a02242055cc5e2dde7ed01137cf7ea6e3c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}