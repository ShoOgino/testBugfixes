{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer#StreamingUpdateSolrServer(String,HttpClient,int,int).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer#StreamingUpdateSolrServer(String,HttpClient,int,int).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer#StreamingUpdateSolrServer(String,HttpClient,int,int).mjava","sourceNew":"  /**\n   * Uses the supplied HttpClient to send documents to the Solr server, the HttpClient should be instantiated using a\n   * MultiThreadedHttpConnectionManager.\n   */\n  public StreamingUpdateSolrServer(String solrServerUrl, HttpClient client, int queueSize, int threadCount) throws MalformedURLException {\n    super(solrServerUrl, client);\n    queue = new LinkedBlockingQueue<UpdateRequest>(queueSize);\n    this.threadCount = threadCount;\n    runners = new LinkedList<Runner>();\n  }\n\n","sourceOld":"  /**\n   * Uses the supplied HttpClient to send documents to the Solr server, the HttpClient should be instantiated using a\n   * MultiThreadedHttpConnectionManager.\n   */\n  public StreamingUpdateSolrServer(String solrServerUrl, HttpClient client, int queueSize, int threadCount) throws MalformedURLException {\n    super(solrServerUrl, client);\n    queue = new LinkedBlockingQueue<UpdateRequest>(queueSize);\n    this.threadCount = threadCount;\n    runners = new LinkedList<Runner>();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer#StreamingUpdateSolrServer(String,HttpClient,int,int).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer#StreamingUpdateSolrServer(String,HttpClient,int,int).mjava","sourceNew":"  /**\n   * Uses the supplied HttpClient to send documents to the Solr server, the HttpClient should be instantiated using a\n   * MultiThreadedHttpConnectionManager.\n   */\n  public StreamingUpdateSolrServer(String solrServerUrl, HttpClient client, int queueSize, int threadCount) throws MalformedURLException {\n    super(solrServerUrl, client);\n    queue = new LinkedBlockingQueue<UpdateRequest>(queueSize);\n    this.threadCount = threadCount;\n    runners = new LinkedList<Runner>();\n  }\n\n","sourceOld":"  /**\n   * Uses the supplied HttpClient to send documents to the Solr server, the HttpClient should be instantiated using a\n   * MultiThreadedHttpConnectionManager.\n   */\n  public StreamingUpdateSolrServer(String solrServerUrl, HttpClient client, int queueSize, int threadCount) throws MalformedURLException {\n    super(solrServerUrl, client);\n    queue = new LinkedBlockingQueue<UpdateRequest>(queueSize);\n    this.threadCount = threadCount;\n    runners = new LinkedList<Runner>();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer#StreamingUpdateSolrServer(String,HttpClient,int,int).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer#StreamingUpdateSolrServer(String,HttpClient,int,int).mjava","sourceNew":"  /**\n   * Uses the supplied HttpClient to send documents to the Solr server, the HttpClient should be instantiated using a\n   * MultiThreadedHttpConnectionManager.\n   */\n  public StreamingUpdateSolrServer(String solrServerUrl, HttpClient client, int queueSize, int threadCount) throws MalformedURLException {\n    super(solrServerUrl, client);\n    queue = new LinkedBlockingQueue<UpdateRequest>(queueSize);\n    this.threadCount = threadCount;\n    runners = new LinkedList<Runner>();\n  }\n\n","sourceOld":"  /**\n   * Uses the supplied HttpClient to send documents to the Solr server, the HttpClient should be instantiated using a\n   * MultiThreadedHttpConnectionManager.\n   */\n  public StreamingUpdateSolrServer(String solrServerUrl, HttpClient client, int queueSize, int threadCount) throws MalformedURLException {\n    super(solrServerUrl, client);\n    queue = new LinkedBlockingQueue<UpdateRequest>(queueSize);\n    this.threadCount = threadCount;\n    runners = new LinkedList<Runner>();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":5,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,HttpClient,int,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer#StreamingUpdateSolrServer(String,HttpClient,int,int).mjava","sourceNew":"  /**\n   * Uses the supplied HttpClient to send documents to the Solr server, the\n   * HttpClient should be instantiated using a \n   * ThreadSafeClientConnManager.\n   */\n  public ConcurrentUpdateSolrServer(String solrServerUrl,\n      HttpClient client, int queueSize, int threadCount)\n      throws MalformedURLException {\n    this.server = new HttpSolrServer(solrServerUrl, client);\n    this.server.setFollowRedirects(false);\n    queue = new LinkedBlockingQueue<UpdateRequest>(queueSize);\n    this.threadCount = threadCount;\n    runners = new LinkedList<Runner>();\n  }\n\n","sourceOld":"  /**\n   * Uses the supplied HttpClient to send documents to the Solr server, the HttpClient should be instantiated using a\n   * MultiThreadedHttpConnectionManager.\n   */\n  public StreamingUpdateSolrServer(String solrServerUrl, HttpClient client, int queueSize, int threadCount) throws MalformedURLException {\n    super(solrServerUrl, client);\n    queue = new LinkedBlockingQueue<UpdateRequest>(queueSize);\n    this.threadCount = threadCount;\n    runners = new LinkedList<Runner>();\n  }\n\n","bugFix":null,"bugIntro":["91e069c492cf4895697ef7b81df0ffb9a8bd4b48","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}