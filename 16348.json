{"path":"src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","commits":[{"id":"89c6cddeaca06bbdbcc65b2c527e8e2d2a573772","date":1244536603,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","pathOld":"/dev/null","sourceNew":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      registry.put(name, (T) resourceLoader.newInstance(c.getName()));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d65be9efd1a01c467bd685fd63511b92311257f5","date":1253066235,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","sourceNew":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = (T) resourceLoader.newInstance(c.getName());\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","sourceOld":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      registry.put(name, (T) resourceLoader.newInstance(c.getName()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6036b7cd3ea2bcc0e2a9530a27c6c4b98805ebc","date":1253460658,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","sourceNew":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      registry.put(name, (T) resourceLoader.newInstance(c.getName()));\n    }\n  }\n\n","sourceOld":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = (T) resourceLoader.newInstance(c.getName());\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["efde1ddfc9d0125b5cccad6d1130f34fa0b33d61"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"efde1ddfc9d0125b5cccad6d1130f34fa0b33d61","date":1253593710,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","sourceNew":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = (T) resourceLoader.newInstance(c.getName());\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","sourceOld":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      registry.put(name, (T) resourceLoader.newInstance(c.getName()));\n    }\n  }\n\n","bugFix":["b6036b7cd3ea2bcc0e2a9530a27c6c4b98805ebc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#[T]_addIfNotPresent(Map[String,T],String,Class[#-extends-T]).mjava","sourceNew":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = (T) resourceLoader.newInstance(c.getName());\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","sourceOld":"  private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){\n    if(!registry.containsKey(name)){\n      T searchComp = (T) resourceLoader.newInstance(c.getName());\n      registry.put(name, searchComp);\n      if (searchComp instanceof SolrInfoMBean){\n        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d65be9efd1a01c467bd685fd63511b92311257f5":["89c6cddeaca06bbdbcc65b2c527e8e2d2a573772"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"89c6cddeaca06bbdbcc65b2c527e8e2d2a573772":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["efde1ddfc9d0125b5cccad6d1130f34fa0b33d61"],"efde1ddfc9d0125b5cccad6d1130f34fa0b33d61":["b6036b7cd3ea2bcc0e2a9530a27c6c4b98805ebc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b6036b7cd3ea2bcc0e2a9530a27c6c4b98805ebc":["d65be9efd1a01c467bd685fd63511b92311257f5"]},"commit2Childs":{"d65be9efd1a01c467bd685fd63511b92311257f5":["b6036b7cd3ea2bcc0e2a9530a27c6c4b98805ebc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["89c6cddeaca06bbdbcc65b2c527e8e2d2a573772"],"89c6cddeaca06bbdbcc65b2c527e8e2d2a573772":["d65be9efd1a01c467bd685fd63511b92311257f5"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"efde1ddfc9d0125b5cccad6d1130f34fa0b33d61":["ad94625fb8d088209f46650c8097196fec67f00c"],"b6036b7cd3ea2bcc0e2a9530a27c6c4b98805ebc":["efde1ddfc9d0125b5cccad6d1130f34fa0b33d61"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}