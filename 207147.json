{"path":"src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#addUTF8Token(int).mjava","commits":[{"id":"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4","date":1206538765,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#addUTF8Token(int).mjava","pathOld":"/dev/null","sourceNew":"    private int addUTF8Token(int start) {\n      final int end = start + nextInt(20);\n      if (buffer.length < 1+end) {\n        char[] newBuffer = new char[(int) ((1+end)*1.25)];\n        System.arraycopy(buffer, 0, newBuffer, 0, buffer.length);\n        buffer = newBuffer;\n      }\n\n      for(int i=start;i<end;i++) {\n        int t = nextInt(6);\n        if (0 == t && i < end-1) {\n          // Make a surrogate pair\n          // High surrogate\n          buffer[i++] = (char) nextInt(0xd800, 0xdc00);\n          // Low surrogate\n          buffer[i] = (char) nextInt(0xdc00, 0xe000);\n        } else if (t <= 1)\n          buffer[i] = (char) nextInt(0x80);\n        else if (2 == t)\n          buffer[i] = (char) nextInt(0x80, 0x800);\n        else if (3 == t)\n          buffer[i] = (char) nextInt(0x800, 0xd800);\n        else if (4 == t)\n          buffer[i] = (char) nextInt(0xe000, 0xffff);\n        else if (5 == t) {\n          // Illegal unpaired surrogate\n          if (r.nextBoolean())\n            buffer[i] = (char) nextInt(0xd800, 0xdc00);\n          else\n            buffer[i] = (char) nextInt(0xdc00, 0xe000);\n        }\n      }\n      buffer[end] = ' ';\n      return 1+end;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#addUTF8Token(int).mjava","pathOld":"src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#addUTF8Token(int).mjava","sourceNew":"    private int addUTF8Token(int start) {\n      final int end = start + nextInt(20);\n      if (buffer.length < 1+end) {\n        char[] newBuffer = new char[(int) ((1+end)*1.25)];\n        System.arraycopy(buffer, 0, newBuffer, 0, buffer.length);\n        buffer = newBuffer;\n      }\n\n      for(int i=start;i<end;i++) {\n        int t = nextInt(6);\n        if (0 == t && i < end-1) {\n          // Make a surrogate pair\n          // High surrogate\n          buffer[i++] = (char) nextInt(0xd800, 0xdc00);\n          // Low surrogate\n          buffer[i] = (char) nextInt(0xdc00, 0xe000);\n        } else if (t <= 1)\n          buffer[i] = (char) nextInt(0x80);\n        else if (2 == t)\n          buffer[i] = (char) nextInt(0x80, 0x800);\n        else if (3 == t)\n          buffer[i] = (char) nextInt(0x800, 0xd800);\n        else if (4 == t)\n          buffer[i] = (char) nextInt(0xe000, 0xffff);\n        else if (5 == t) {\n          // Illegal unpaired surrogate\n          if (r.nextBoolean())\n            buffer[i] = (char) nextInt(0xd800, 0xdc00);\n          else\n            buffer[i] = (char) nextInt(0xdc00, 0xe000);\n        }\n      }\n      buffer[end] = ' ';\n      return 1+end;\n    }\n\n","sourceOld":"    private int addUTF8Token(int start) {\n      final int end = start + nextInt(20);\n      if (buffer.length < 1+end) {\n        char[] newBuffer = new char[(int) ((1+end)*1.25)];\n        System.arraycopy(buffer, 0, newBuffer, 0, buffer.length);\n        buffer = newBuffer;\n      }\n\n      for(int i=start;i<end;i++) {\n        int t = nextInt(6);\n        if (0 == t && i < end-1) {\n          // Make a surrogate pair\n          // High surrogate\n          buffer[i++] = (char) nextInt(0xd800, 0xdc00);\n          // Low surrogate\n          buffer[i] = (char) nextInt(0xdc00, 0xe000);\n        } else if (t <= 1)\n          buffer[i] = (char) nextInt(0x80);\n        else if (2 == t)\n          buffer[i] = (char) nextInt(0x80, 0x800);\n        else if (3 == t)\n          buffer[i] = (char) nextInt(0x800, 0xd800);\n        else if (4 == t)\n          buffer[i] = (char) nextInt(0xe000, 0xffff);\n        else if (5 == t) {\n          // Illegal unpaired surrogate\n          if (r.nextBoolean())\n            buffer[i] = (char) nextInt(0xd800, 0xdc00);\n          else\n            buffer[i] = (char) nextInt(0xdc00, 0xe000);\n        }\n      }\n      buffer[end] = ' ';\n      return 1+end;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}