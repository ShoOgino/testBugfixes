{"path":"lucene/spatial3d/src/java/org/apache/lucene/bkdtree3d/Geo3DDocValuesConsumer#Geo3DDocValuesConsumer(Directory,String,PlanetModel,DocValuesConsumer,SegmentWriteState,int,int).mjava","commits":[{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/bkdtree3d/Geo3DDocValuesConsumer#Geo3DDocValuesConsumer(Directory,String,PlanetModel,DocValuesConsumer,SegmentWriteState,int,int).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/bkdtree3d/Geo3DDocValuesConsumer#Geo3DDocValuesConsumer(PlanetModel,DocValuesConsumer,SegmentWriteState,int,int).mjava","sourceNew":"  public Geo3DDocValuesConsumer(Directory tempDir, String tempFileNamePrefix, PlanetModel planetModel, DocValuesConsumer delegate,\n                                SegmentWriteState state, int maxPointsInLeafNode, int maxPointsSortInHeap) throws IOException {\n    BKD3DTreeWriter.verifyParams(maxPointsInLeafNode, maxPointsSortInHeap);\n    this.tempDir = tempDir;\n    this.tempFileNamePrefix = tempFileNamePrefix;\n    this.delegate = delegate;\n    this.maxPointsInLeafNode = maxPointsInLeafNode;\n    this.maxPointsSortInHeap = maxPointsSortInHeap;\n    this.state = state;\n    String datFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, Geo3DDocValuesFormat.DATA_EXTENSION);\n    out = state.directory.createOutput(datFileName, state.context);\n    CodecUtil.writeIndexHeader(out, Geo3DDocValuesFormat.DATA_CODEC_NAME, Geo3DDocValuesFormat.DATA_VERSION_CURRENT,\n                               state.segmentInfo.getId(), state.segmentSuffix);\n\n    // We write the max for this PlanetModel into the index so we know we are decoding correctly at search time, and so we can also do\n    // best-effort check that the search time PlanetModel \"matches\":\n    out.writeLong(Double.doubleToLongBits(planetModel.getMaximumMagnitude()));\n  }\n\n","sourceOld":"  public Geo3DDocValuesConsumer(PlanetModel planetModel, DocValuesConsumer delegate, SegmentWriteState state, int maxPointsInLeafNode, int maxPointsSortInHeap) throws IOException {\n    BKD3DTreeWriter.verifyParams(maxPointsInLeafNode, maxPointsSortInHeap);\n    this.delegate = delegate;\n    this.maxPointsInLeafNode = maxPointsInLeafNode;\n    this.maxPointsSortInHeap = maxPointsSortInHeap;\n    this.state = state;\n    String datFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, Geo3DDocValuesFormat.DATA_EXTENSION);\n    out = state.directory.createOutput(datFileName, state.context);\n    CodecUtil.writeIndexHeader(out, Geo3DDocValuesFormat.DATA_CODEC_NAME, Geo3DDocValuesFormat.DATA_VERSION_CURRENT,\n                               state.segmentInfo.getId(), state.segmentSuffix);\n\n    // We write the max for this PlanetModel into the index so we know we are decoding correctly at search time, and so we can also do\n    // best-effort check that the search time PlanetModel \"matches\":\n    out.writeLong(Double.doubleToLongBits(planetModel.getMaximumMagnitude()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1904709ea0185dc04e3d77ea01c79e909caf2796","date":1447006699,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/bkdtree3d/Geo3DDocValuesConsumer#Geo3DDocValuesConsumer(Directory,String,PlanetModel,DocValuesConsumer,SegmentWriteState,int,int).mjava","sourceNew":null,"sourceOld":"  public Geo3DDocValuesConsumer(Directory tempDir, String tempFileNamePrefix, PlanetModel planetModel, DocValuesConsumer delegate,\n                                SegmentWriteState state, int maxPointsInLeafNode, int maxPointsSortInHeap) throws IOException {\n    BKD3DTreeWriter.verifyParams(maxPointsInLeafNode, maxPointsSortInHeap);\n    this.tempDir = tempDir;\n    this.tempFileNamePrefix = tempFileNamePrefix;\n    this.delegate = delegate;\n    this.maxPointsInLeafNode = maxPointsInLeafNode;\n    this.maxPointsSortInHeap = maxPointsSortInHeap;\n    this.state = state;\n    String datFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, Geo3DDocValuesFormat.DATA_EXTENSION);\n    out = state.directory.createOutput(datFileName, state.context);\n    CodecUtil.writeIndexHeader(out, Geo3DDocValuesFormat.DATA_CODEC_NAME, Geo3DDocValuesFormat.DATA_VERSION_CURRENT,\n                               state.segmentInfo.getId(), state.segmentSuffix);\n\n    // We write the max for this PlanetModel into the index so we know we are decoding correctly at search time, and so we can also do\n    // best-effort check that the search time PlanetModel \"matches\":\n    out.writeLong(Double.doubleToLongBits(planetModel.getMaximumMagnitude()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1904709ea0185dc04e3d77ea01c79e909caf2796":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1904709ea0185dc04e3d77ea01c79e909caf2796"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"1904709ea0185dc04e3d77ea01c79e909caf2796":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}