{"path":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNorms(FieldInfo,LeafReader,PrintStream).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNorms(FieldInfo,LeafReader,PrintStream).mjava","pathOld":"/dev/null","sourceNew":"  private static void checkNorms(FieldInfo fi, LeafReader reader, PrintStream infoStream) throws IOException {\n    switch(fi.getNormType()) {\n      case NUMERIC:\n        checkNumericDocValues(fi.name, reader, reader.getNormValues(fi.name), new Bits.MatchAllBits(reader.maxDoc()));\n        break;\n      default:\n        throw new AssertionError(\"wtf: \" + fi.getNormType());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05da2d758a6089e737cdfc230e57a51b472b94b6","date":1413392310,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNorms(FieldInfo,LeafReader,PrintStream).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNorms(FieldInfo,LeafReader,PrintStream).mjava","sourceNew":"  private static void checkNorms(FieldInfo fi, LeafReader reader, PrintStream infoStream) throws IOException {\n    if (fi.hasNorms()) {\n      checkNumericDocValues(fi.name, reader, reader.getNormValues(fi.name), new Bits.MatchAllBits(reader.maxDoc()));\n    }\n  }\n\n","sourceOld":"  private static void checkNorms(FieldInfo fi, LeafReader reader, PrintStream infoStream) throws IOException {\n    switch(fi.getNormType()) {\n      case NUMERIC:\n        checkNumericDocValues(fi.name, reader, reader.getNormValues(fi.name), new Bits.MatchAllBits(reader.maxDoc()));\n        break;\n      default:\n        throw new AssertionError(\"wtf: \" + fi.getNormType());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","date":1413458798,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNorms(FieldInfo,LeafReader,PrintStream).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNorms(FieldInfo,LeafReader,PrintStream).mjava","sourceNew":"  private static void checkNorms(FieldInfo fi, LeafReader reader, PrintStream infoStream) throws IOException {\n    if (fi.hasNorms()) {\n      checkNumericDocValues(fi.name, reader, reader.getNormValues(fi.name), new Bits.MatchAllBits(reader.maxDoc()));\n    }\n  }\n\n","sourceOld":"  private static void checkNorms(FieldInfo fi, LeafReader reader, PrintStream infoStream) throws IOException {\n    switch(fi.getNormType()) {\n      case NUMERIC:\n        checkNumericDocValues(fi.name, reader, reader.getNormValues(fi.name), new Bits.MatchAllBits(reader.maxDoc()));\n        break;\n      default:\n        throw new AssertionError(\"wtf: \" + fi.getNormType());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8eb2b2b0fce1c4d4ca3b6c6eaa30498066be47d6","date":1425345513,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNorms(FieldInfo,LeafReader,PrintStream).mjava","sourceNew":null,"sourceOld":"  private static void checkNorms(FieldInfo fi, LeafReader reader, PrintStream infoStream) throws IOException {\n    if (fi.hasNorms()) {\n      checkNumericDocValues(fi.name, reader, reader.getNormValues(fi.name), new Bits.MatchAllBits(reader.maxDoc()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNorms(FieldInfo,LeafReader,PrintStream).mjava","sourceNew":null,"sourceOld":"  private static void checkNorms(FieldInfo fi, LeafReader reader, PrintStream infoStream) throws IOException {\n    if (fi.hasNorms()) {\n      checkNumericDocValues(fi.name, reader, reader.getNormValues(fi.name), new Bits.MatchAllBits(reader.maxDoc()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8eb2b2b0fce1c4d4ca3b6c6eaa30498066be47d6":["05da2d758a6089e737cdfc230e57a51b472b94b6"],"05da2d758a6089e737cdfc230e57a51b472b94b6":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["05da2d758a6089e737cdfc230e57a51b472b94b6","8eb2b2b0fce1c4d4ca3b6c6eaa30498066be47d6"],"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84":["c9fb5f46e264daf5ba3860defe623a89d202dd87","05da2d758a6089e737cdfc230e57a51b472b94b6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8eb2b2b0fce1c4d4ca3b6c6eaa30498066be47d6"]},"commit2Childs":{"8eb2b2b0fce1c4d4ca3b6c6eaa30498066be47d6":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05da2d758a6089e737cdfc230e57a51b472b94b6":["8eb2b2b0fce1c4d4ca3b6c6eaa30498066be47d6","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["05da2d758a6089e737cdfc230e57a51b472b94b6","c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}