{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/ext/TestExtendableQueryParser#testUnescapedExtDelimiter().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/ext/TestExtendableQueryParser#testUnescapedExtDelimiter().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/ext/TestExtendableQueryParser#testUnescapedExtDelimiter().mjava","sourceNew":"  public void testUnescapedExtDelimiter() throws Exception {\n    Extensions ext = newExtensions(':');\n    ext.add(\"testExt\", new ExtensionStub());\n    ExtendableQueryParser parser = (ExtendableQueryParser) getParser(null, ext);\n    try {\n      parser.parse(\"aField:testExt:\\\"foo \\\\& bar\\\"\");\n      fail(\"extension field delimiter is not escaped\");\n    } catch (ParseException e) {\n    }\n  }\n\n","sourceOld":"  public void testUnescapedExtDelimiter() throws Exception {\n    Extensions ext = newExtensions(':');\n    ext.add(\"testExt\", new ExtensionStub());\n    ExtendableQueryParser parser = (ExtendableQueryParser) getParser(null, ext);\n    try {\n      parser.parse(\"aField:testExt:\\\"foo \\\\& bar\\\"\");\n      fail(\"extension field delimiter is not escaped\");\n    } catch (ParseException e) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/ext/TestExtendableQueryParser#testUnescapedExtDelimiter().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/ext/TestExtendableQueryParser#testUnescapedExtDelimiter().mjava","sourceNew":"  public void testUnescapedExtDelimiter() throws Exception {\n    Extensions ext = newExtensions(':');\n    ext.add(\"testExt\", new ExtensionStub());\n    ExtendableQueryParser parser = (ExtendableQueryParser) getParser(null, ext);\n    expectThrows(ParseException.class, () -> {\n      parser.parse(\"aField:testExt:\\\"foo \\\\& bar\\\"\");\n    });\n  }\n\n","sourceOld":"  public void testUnescapedExtDelimiter() throws Exception {\n    Extensions ext = newExtensions(':');\n    ext.add(\"testExt\", new ExtensionStub());\n    ExtendableQueryParser parser = (ExtendableQueryParser) getParser(null, ext);\n    try {\n      parser.parse(\"aField:testExt:\\\"foo \\\\& bar\\\"\");\n      fail(\"extension field delimiter is not escaped\");\n    } catch (ParseException e) {\n    }\n  }\n\n","bugFix":["8d43be4aa22695313abd1d6ce020b0dce895caea"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["05fe562aa248790944d43cdd478f512572835ba0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}