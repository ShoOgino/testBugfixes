{"path":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","sourceNew":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) {\n    try {\n      for (int i = 0; i < 60; i++) {//Simple docs\n        Document doc = new Document();\n        doc.add(newField(FIELD, Integer.toString(i), StringField.TYPE_STORED));\n        writer.addDocument(doc);\n      }\n      if (fullMerge) {\n        writer.forceMerge(1);\n      }\n      writer.close();\n\n      BooleanQuery booleanQuery = new BooleanQuery();\n      booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n      IndexReader reader = IndexReader.open(directory);\n      IndexSearcher indexSearcher = new IndexSearcher(reader);\n      ScoreDoc[] hits = indexSearcher.search(booleanQuery, filter, 1000).scoreDocs;\n      assertEquals(\"Number of matched documents\", 1, hits.length);\n      reader.close();\n    }\n    catch (IOException e) {\n      fail(e.getMessage());\n    }\n    \n  }\n\n","sourceOld":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) {\n    try {\n      for (int i = 0; i < 60; i++) {//Simple docs\n        Document doc = new Document();\n        doc.add(newField(FIELD, Integer.toString(i), StringField.TYPE_STORED));\n        writer.addDocument(doc);\n      }\n      if (fullMerge) {\n        writer.forceMerge(1);\n      }\n      writer.close();\n\n      BooleanQuery booleanQuery = new BooleanQuery();\n      booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n      IndexReader reader = IndexReader.open(directory);\n      IndexSearcher indexSearcher = new IndexSearcher(reader);\n      ScoreDoc[] hits = indexSearcher.search(booleanQuery, filter, 1000).scoreDocs;\n      assertEquals(\"Number of matched documents\", 1, hits.length);\n      reader.close();\n    }\n    catch (IOException e) {\n      fail(e.getMessage());\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","sourceNew":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) {\n    try {\n      for (int i = 0; i < 60; i++) {//Simple docs\n        Document doc = new Document();\n        doc.add(newField(FIELD, Integer.toString(i), StringField.TYPE_STORED));\n        writer.addDocument(doc);\n      }\n      if (fullMerge) {\n        writer.forceMerge(1);\n      }\n      writer.close();\n\n      BooleanQuery booleanQuery = new BooleanQuery();\n      booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n      IndexReader reader = DirectoryReader.open(directory);\n      IndexSearcher indexSearcher = new IndexSearcher(reader);\n      ScoreDoc[] hits = indexSearcher.search(booleanQuery, filter, 1000).scoreDocs;\n      assertEquals(\"Number of matched documents\", 1, hits.length);\n      reader.close();\n    }\n    catch (IOException e) {\n      fail(e.getMessage());\n    }\n    \n  }\n\n","sourceOld":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) {\n    try {\n      for (int i = 0; i < 60; i++) {//Simple docs\n        Document doc = new Document();\n        doc.add(newField(FIELD, Integer.toString(i), StringField.TYPE_STORED));\n        writer.addDocument(doc);\n      }\n      if (fullMerge) {\n        writer.forceMerge(1);\n      }\n      writer.close();\n\n      BooleanQuery booleanQuery = new BooleanQuery();\n      booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n      IndexReader reader = IndexReader.open(directory);\n      IndexSearcher indexSearcher = new IndexSearcher(reader);\n      ScoreDoc[] hits = indexSearcher.search(booleanQuery, filter, 1000).scoreDocs;\n      assertEquals(\"Number of matched documents\", 1, hits.length);\n      reader.close();\n    }\n    catch (IOException e) {\n      fail(e.getMessage());\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","sourceNew":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) {\n    try {\n      for (int i = 0; i < 60; i++) {//Simple docs\n        Document doc = new Document();\n        doc.add(newStringField(FIELD, Integer.toString(i), Field.Store.YES));\n        writer.addDocument(doc);\n      }\n      if (fullMerge) {\n        writer.forceMerge(1);\n      }\n      writer.close();\n\n      BooleanQuery booleanQuery = new BooleanQuery();\n      booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n      IndexReader reader = DirectoryReader.open(directory);\n      IndexSearcher indexSearcher = new IndexSearcher(reader);\n      ScoreDoc[] hits = indexSearcher.search(booleanQuery, filter, 1000).scoreDocs;\n      assertEquals(\"Number of matched documents\", 1, hits.length);\n      reader.close();\n    }\n    catch (IOException e) {\n      fail(e.getMessage());\n    }\n    \n  }\n\n","sourceOld":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) {\n    try {\n      for (int i = 0; i < 60; i++) {//Simple docs\n        Document doc = new Document();\n        doc.add(newField(FIELD, Integer.toString(i), StringField.TYPE_STORED));\n        writer.addDocument(doc);\n      }\n      if (fullMerge) {\n        writer.forceMerge(1);\n      }\n      writer.close();\n\n      BooleanQuery booleanQuery = new BooleanQuery();\n      booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n      IndexReader reader = DirectoryReader.open(directory);\n      IndexSearcher indexSearcher = new IndexSearcher(reader);\n      ScoreDoc[] hits = indexSearcher.search(booleanQuery, filter, 1000).scoreDocs;\n      assertEquals(\"Number of matched documents\", 1, hits.length);\n      reader.close();\n    }\n    catch (IOException e) {\n      fail(e.getMessage());\n    }\n    \n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173","date":1365631993,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","sourceNew":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) {\n    try {\n      for (int i = 0; i < 60; i++) {//Simple docs\n        Document doc = new Document();\n        doc.add(newStringField(FIELD, Integer.toString(i), Field.Store.YES));\n        writer.addDocument(doc);\n      }\n      if (fullMerge) {\n        writer.forceMerge(1);\n      }\n      writer.close();\n\n      BooleanQuery booleanQuery = new BooleanQuery();\n      booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n      IndexReader reader = DirectoryReader.open(directory);\n      IndexSearcher indexSearcher = newSearcher(reader);\n      ScoreDoc[] hits = indexSearcher.search(booleanQuery, filter, 1000).scoreDocs;\n      assertEquals(\"Number of matched documents\", 1, hits.length);\n      reader.close();\n    }\n    catch (IOException e) {\n      fail(e.getMessage());\n    }\n    \n  }\n\n","sourceOld":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) {\n    try {\n      for (int i = 0; i < 60; i++) {//Simple docs\n        Document doc = new Document();\n        doc.add(newStringField(FIELD, Integer.toString(i), Field.Store.YES));\n        writer.addDocument(doc);\n      }\n      if (fullMerge) {\n        writer.forceMerge(1);\n      }\n      writer.close();\n\n      BooleanQuery booleanQuery = new BooleanQuery();\n      booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n      IndexReader reader = DirectoryReader.open(directory);\n      IndexSearcher indexSearcher = new IndexSearcher(reader);\n      ScoreDoc[] hits = indexSearcher.search(booleanQuery, filter, 1000).scoreDocs;\n      assertEquals(\"Number of matched documents\", 1, hits.length);\n      reader.close();\n    }\n    catch (IOException e) {\n      fail(e.getMessage());\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2821810e3dd9809a8fd40ee8a49bed97491001d","date":1366918025,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","sourceNew":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) throws IOException {\n    for (int i = 0; i < 60; i++) {//Simple docs\n      Document doc = new Document();\n      doc.add(newStringField(FIELD, Integer.toString(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    if (fullMerge) {\n      writer.forceMerge(1);\n    }\n    writer.close();\n\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n    IndexReader reader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = newSearcher(reader);\n    ScoreDoc[] hits = indexSearcher.search(booleanQuery, filter, 1000).scoreDocs;\n    assertEquals(\"Number of matched documents\", 1, hits.length);\n    reader.close();\n  }\n\n","sourceOld":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) {\n    try {\n      for (int i = 0; i < 60; i++) {//Simple docs\n        Document doc = new Document();\n        doc.add(newStringField(FIELD, Integer.toString(i), Field.Store.YES));\n        writer.addDocument(doc);\n      }\n      if (fullMerge) {\n        writer.forceMerge(1);\n      }\n      writer.close();\n\n      BooleanQuery booleanQuery = new BooleanQuery();\n      booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n      IndexReader reader = DirectoryReader.open(directory);\n      IndexSearcher indexSearcher = newSearcher(reader);\n      ScoreDoc[] hits = indexSearcher.search(booleanQuery, filter, 1000).scoreDocs;\n      assertEquals(\"Number of matched documents\", 1, hits.length);\n      reader.close();\n    }\n    catch (IOException e) {\n      fail(e.getMessage());\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","sourceNew":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) throws IOException {\n    for (int i = 0; i < 60; i++) {//Simple docs\n      Document doc = new Document();\n      doc.add(newStringField(FIELD, Integer.toString(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    if (fullMerge) {\n      writer.forceMerge(1);\n    }\n    writer.shutdown();\n\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n    IndexReader reader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = newSearcher(reader);\n    ScoreDoc[] hits = indexSearcher.search(booleanQuery, filter, 1000).scoreDocs;\n    assertEquals(\"Number of matched documents\", 1, hits.length);\n    reader.close();\n  }\n\n","sourceOld":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) throws IOException {\n    for (int i = 0; i < 60; i++) {//Simple docs\n      Document doc = new Document();\n      doc.add(newStringField(FIELD, Integer.toString(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    if (fullMerge) {\n      writer.forceMerge(1);\n    }\n    writer.close();\n\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n    IndexReader reader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = newSearcher(reader);\n    ScoreDoc[] hits = indexSearcher.search(booleanQuery, filter, 1000).scoreDocs;\n    assertEquals(\"Number of matched documents\", 1, hits.length);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","sourceNew":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) throws IOException {\n    for (int i = 0; i < 60; i++) {//Simple docs\n      Document doc = new Document();\n      doc.add(newStringField(FIELD, Integer.toString(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    if (fullMerge) {\n      writer.forceMerge(1);\n    }\n    writer.close();\n\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n    IndexReader reader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = newSearcher(reader);\n    ScoreDoc[] hits = indexSearcher.search(booleanQuery, filter, 1000).scoreDocs;\n    assertEquals(\"Number of matched documents\", 1, hits.length);\n    reader.close();\n  }\n\n","sourceOld":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) throws IOException {\n    for (int i = 0; i < 60; i++) {//Simple docs\n      Document doc = new Document();\n      doc.add(newStringField(FIELD, Integer.toString(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    if (fullMerge) {\n      writer.forceMerge(1);\n    }\n    writer.shutdown();\n\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n    IndexReader reader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = newSearcher(reader);\n    ScoreDoc[] hits = indexSearcher.search(booleanQuery, filter, 1000).scoreDocs;\n    assertEquals(\"Number of matched documents\", 1, hits.length);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","sourceNew":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) throws IOException {\n    for (int i = 0; i < 60; i++) {//Simple docs\n      Document doc = new Document();\n      doc.add(newStringField(FIELD, Integer.toString(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    if (fullMerge) {\n      writer.forceMerge(1);\n    }\n    writer.close();\n\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n    IndexReader reader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = newSearcher(reader);\n    ScoreDoc[] hits = indexSearcher.search(new FilteredQuery(booleanQuery, filter), 1000).scoreDocs;\n    assertEquals(\"Number of matched documents\", 1, hits.length);\n    reader.close();\n  }\n\n","sourceOld":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) throws IOException {\n    for (int i = 0; i < 60; i++) {//Simple docs\n      Document doc = new Document();\n      doc.add(newStringField(FIELD, Integer.toString(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    if (fullMerge) {\n      writer.forceMerge(1);\n    }\n    writer.close();\n\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n    IndexReader reader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = newSearcher(reader);\n    ScoreDoc[] hits = indexSearcher.search(booleanQuery, filter, 1000).scoreDocs;\n    assertEquals(\"Number of matched documents\", 1, hits.length);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","sourceNew":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) throws IOException {\n    for (int i = 0; i < 60; i++) {//Simple docs\n      Document doc = new Document();\n      doc.add(newStringField(FIELD, Integer.toString(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    if (fullMerge) {\n      writer.forceMerge(1);\n    }\n    writer.close();\n\n    BooleanQuery.Builder booleanQuery = new BooleanQuery.Builder();\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n    IndexReader reader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = newSearcher(reader);\n    ScoreDoc[] hits = indexSearcher.search(new FilteredQuery(booleanQuery.build(), filter), 1000).scoreDocs;\n    assertEquals(\"Number of matched documents\", 1, hits.length);\n    reader.close();\n  }\n\n","sourceOld":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) throws IOException {\n    for (int i = 0; i < 60; i++) {//Simple docs\n      Document doc = new Document();\n      doc.add(newStringField(FIELD, Integer.toString(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    if (fullMerge) {\n      writer.forceMerge(1);\n    }\n    writer.close();\n\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n    IndexReader reader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = newSearcher(reader);\n    ScoreDoc[] hits = indexSearcher.search(new FilteredQuery(booleanQuery, filter), 1000).scoreDocs;\n    assertEquals(\"Number of matched documents\", 1, hits.length);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1db68e96dd908fcd79ef809095822736aa601d08","date":1434630596,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#searchFiltered(IndexWriter,Directory,Filter,boolean).mjava","sourceNew":null,"sourceOld":"  public void searchFiltered(IndexWriter writer, Directory directory, Filter filter, boolean fullMerge) throws IOException {\n    for (int i = 0; i < 60; i++) {//Simple docs\n      Document doc = new Document();\n      doc.add(newStringField(FIELD, Integer.toString(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    if (fullMerge) {\n      writer.forceMerge(1);\n    }\n    writer.close();\n\n    BooleanQuery.Builder booleanQuery = new BooleanQuery.Builder();\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"36\")), BooleanClause.Occur.SHOULD);\n     \n     \n    IndexReader reader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = newSearcher(reader);\n    ScoreDoc[] hits = indexSearcher.search(new FilteredQuery(booleanQuery.build(), filter), 1000).scoreDocs;\n    assertEquals(\"Number of matched documents\", 1, hits.length);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"1db68e96dd908fcd79ef809095822736aa601d08":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["c2821810e3dd9809a8fd40ee8a49bed97491001d"],"c2821810e3dd9809a8fd40ee8a49bed97491001d":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173"],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1db68e96dd908fcd79ef809095822736aa601d08"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["1db68e96dd908fcd79ef809095822736aa601d08"],"1db68e96dd908fcd79ef809095822736aa601d08":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"c2821810e3dd9809a8fd40ee8a49bed97491001d":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["c2821810e3dd9809a8fd40ee8a49bed97491001d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}