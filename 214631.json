{"path":"lucene/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits liveDocs) throws IOException {\n      this.liveDocs = liveDocs;\n      this.indexOptions = fieldInfo.indexOptions;\n      omitTF = indexOptions == IndexOptions.DOCS_ONLY;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = -1;\n      accum = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits liveDocs) throws IOException {\n      this.liveDocs = liveDocs;\n      this.indexOptions = fieldInfo.indexOptions;\n      omitTF = indexOptions == IndexOptions.DOCS_ONLY;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = -1;\n      accum = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits liveDocs) throws IOException {\n      this.liveDocs = liveDocs;\n      this.indexOptions = fieldInfo.indexOptions;\n      omitTF = indexOptions == IndexOptions.DOCS_ONLY;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = -1;\n      accum = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits liveDocs) throws IOException {\n      this.liveDocs = liveDocs;\n      this.indexOptions = fieldInfo.indexOptions;\n      omitTF = indexOptions == IndexOptions.DOCS_ONLY;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = -1;\n      accum = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}