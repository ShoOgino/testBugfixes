{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getInterletterValues(String).mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getInterletterValues(String).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getInterletterValues(String).mjava","sourceNew":"  protected static String getInterletterValues(String pat) {\n    StringBuilder il = new StringBuilder();\n    String word = pat + \"a\"; // add dummy letter to serve as sentinel\n    int len = word.length();\n    for (int i = 0; i < len; i++) {\n      char c = word.charAt(i);\n      if (Character.isDigit(c)) {\n        il.append(c);\n        i++;\n      } else {\n        il.append('0');\n      }\n    }\n    return il.toString();\n  }\n\n","sourceOld":"  protected static String getInterletterValues(String pat) {\n    StringBuilder il = new StringBuilder();\n    String word = pat + \"a\"; // add dummy letter to serve as sentinel\n    int len = word.length();\n    for (int i = 0; i < len; i++) {\n      char c = word.charAt(i);\n      if (Character.isDigit(c)) {\n        il.append(c);\n        i++;\n      } else {\n        il.append('0');\n      }\n    }\n    return il.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getInterletterValues(String).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getInterletterValues(String).mjava","sourceNew":"  protected static String getInterletterValues(String pat) {\n    StringBuilder il = new StringBuilder();\n    String word = pat + \"a\"; // add dummy letter to serve as sentinel\n    int len = word.length();\n    for (int i = 0; i < len; i++) {\n      char c = word.charAt(i);\n      if (Character.isDigit(c)) {\n        il.append(c);\n        i++;\n      } else {\n        il.append('0');\n      }\n    }\n    return il.toString();\n  }\n\n","sourceOld":"  protected static String getInterletterValues(String pat) {\n    StringBuilder il = new StringBuilder();\n    String word = pat + \"a\"; // add dummy letter to serve as sentinel\n    int len = word.length();\n    for (int i = 0; i < len; i++) {\n      char c = word.charAt(i);\n      if (Character.isDigit(c)) {\n        il.append(c);\n        i++;\n      } else {\n        il.append('0');\n      }\n    }\n    return il.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}