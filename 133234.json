{"path":"lucene/core/src/java/org/apache/lucene/index/TermStates#get(LeafReaderContext).mjava","commits":[{"id":"a6e9f769521480a623f897c0d59089b919fa4239","date":1515161835,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermStates#get(LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the {@link TermState} for a leaf reader context or <code>null</code> if no\n   * {@link TermState} for the context was registered.\n   * \n   * @param ctx\n   *          the {@link LeafReaderContext} to get the {@link TermState} for.\n   * @return the {@link TermState} for the given readers ord or <code>null</code> if no\n   *         {@link TermState} for the reader was registered\n   */\n  public TermState get(LeafReaderContext ctx) throws IOException {\n    assert ctx.ord >= 0 && ctx.ord < states.length;\n    if (term == null)\n      return states[ctx.ord];\n    if (this.states[ctx.ord] == null) {\n      TermsEnum te = loadTermsEnum(ctx, term);\n      this.states[ctx.ord] = te == null ? EMPTY_TERMSTATE : te.termState();\n    }\n    if (this.states[ctx.ord] == EMPTY_TERMSTATE)\n      return null;\n    return this.states[ctx.ord];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermStates#get(LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the {@link TermState} for a leaf reader context or <code>null</code> if no\n   * {@link TermState} for the context was registered.\n   * \n   * @param ctx\n   *          the {@link LeafReaderContext} to get the {@link TermState} for.\n   * @return the {@link TermState} for the given readers ord or <code>null</code> if no\n   *         {@link TermState} for the reader was registered\n   */\n  public TermState get(LeafReaderContext ctx) throws IOException {\n    assert ctx.ord >= 0 && ctx.ord < states.length;\n    if (term == null)\n      return states[ctx.ord];\n    if (this.states[ctx.ord] == null) {\n      TermsEnum te = loadTermsEnum(ctx, term);\n      this.states[ctx.ord] = te == null ? EMPTY_TERMSTATE : te.termState();\n    }\n    if (this.states[ctx.ord] == EMPTY_TERMSTATE)\n      return null;\n    return this.states[ctx.ord];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a6e9f769521480a623f897c0d59089b919fa4239"],"a6e9f769521480a623f897c0d59089b919fa4239":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a6e9f769521480a623f897c0d59089b919fa4239":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","a6e9f769521480a623f897c0d59089b919fa4239"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}