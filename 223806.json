{"path":"solr/core/src/test/org/apache/solr/analysis/TestKuromojiTokenizerFactory#testMode().mjava","commits":[{"id":"d2edad55e764cf8cf53361659f41b1d162694184","date":1328458562,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestKuromojiTokenizerFactory#testMode().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test mode parameter: specifying normal mode\n   */\n  public void testMode() throws IOException {\n    KuromojiTokenizerFactory factory = new KuromojiTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"mode\", \"normal\");\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(null, null));\n    TokenStream ts = factory.create(new StringReader(\"シニアソフトウェアエンジニア\"));\n    assertTokenStreamContents(ts,\n        new String[] { \"シニアソフトウェアエンジニア\" }\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98d45c1ff2c99694b6de2201175f9b8b8b27b597","date":1332757908,"type":3,"author":"Christian Moen","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestKuromojiTokenizerFactory#testMode().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestKuromojiTokenizerFactory#testMode().mjava","sourceNew":"  /**\n   * Test mode parameter: specifying normal mode\n   */\n  public void testMode() throws IOException {\n    JapaneseTokenizerFactory factory = new JapaneseTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"mode\", \"normal\");\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(null, null));\n    TokenStream ts = factory.create(new StringReader(\"シニアソフトウェアエンジニア\"));\n    assertTokenStreamContents(ts,\n        new String[] { \"シニアソフトウェアエンジニア\" }\n    );\n  }\n\n","sourceOld":"  /**\n   * Test mode parameter: specifying normal mode\n   */\n  public void testMode() throws IOException {\n    KuromojiTokenizerFactory factory = new KuromojiTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"mode\", \"normal\");\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(null, null));\n    TokenStream ts = factory.create(new StringReader(\"シニアソフトウェアエンジニア\"));\n    assertTokenStreamContents(ts,\n        new String[] { \"シニアソフトウェアエンジニア\" }\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ce511b88510766951528ad497e1886e27b7688e4","date":1332778117,"type":5,"author":"Christian Moen","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestJapaneseTokenizerFactory#testMode().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestKuromojiTokenizerFactory#testMode().mjava","sourceNew":"  /**\n   * Test mode parameter: specifying normal mode\n   */\n  public void testMode() throws IOException {\n    JapaneseTokenizerFactory factory = new JapaneseTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"mode\", \"normal\");\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(null, null));\n    TokenStream ts = factory.create(new StringReader(\"シニアソフトウェアエンジニア\"));\n    assertTokenStreamContents(ts,\n        new String[] { \"シニアソフトウェアエンジニア\" }\n    );\n  }\n\n","sourceOld":"  /**\n   * Test mode parameter: specifying normal mode\n   */\n  public void testMode() throws IOException {\n    JapaneseTokenizerFactory factory = new JapaneseTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"mode\", \"normal\");\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(null, null));\n    TokenStream ts = factory.create(new StringReader(\"シニアソフトウェアエンジニア\"));\n    assertTokenStreamContents(ts,\n        new String[] { \"シニアソフトウェアエンジニア\" }\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2edad55e764cf8cf53361659f41b1d162694184":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["d2edad55e764cf8cf53361659f41b1d162694184"],"ce511b88510766951528ad497e1886e27b7688e4":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ce511b88510766951528ad497e1886e27b7688e4"]},"commit2Childs":{"d2edad55e764cf8cf53361659f41b1d162694184":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2edad55e764cf8cf53361659f41b1d162694184"],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["ce511b88510766951528ad497e1886e27b7688e4"],"ce511b88510766951528ad497e1886e27b7688e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}