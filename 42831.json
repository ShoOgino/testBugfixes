{"path":"solr/solrj/src/java/org/apache/solr/common/util/ByteUtils#UTF8toUTF16(byte[],int,int,CharArr).mjava","commits":[{"id":"1b52553b383e6cf68c783d177daafd0b32d6347a","date":1327690866,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ByteUtils#UTF8toUTF16(byte[],int,int,CharArr).mjava","pathOld":"/dev/null","sourceNew":"  /** Convert UTF8 bytes into UTF16 characters. */\n  public static void UTF8toUTF16(byte[] utf8, int offset, int len, CharArr out) {\n    // TODO: do in chunks if the input is large\n    out.reserve(len);\n    int n = UTF8toUTF16(utf8, offset, len, out.getArray(), out.getEnd());\n    out.setEnd(out.getEnd() + n);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"014f4a9c44ade09ba9dc8a50d2690f1303cbfaf7","date":1327763052,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ByteUtils#UTF8toUTF16(byte[],int,int,CharArr).mjava","pathOld":"/dev/null","sourceNew":"  /** Convert UTF8 bytes into UTF16 characters. */\n  public static void UTF8toUTF16(byte[] utf8, int offset, int len, CharArr out) {\n    // TODO: do in chunks if the input is large\n    out.reserve(len);\n    int n = UTF8toUTF16(utf8, offset, len, out.getArray(), out.getEnd());\n    out.setEnd(out.getEnd() + n);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ByteUtils#UTF8toUTF16(byte[],int,int,CharArr).mjava","pathOld":"/dev/null","sourceNew":"  /** Convert UTF8 bytes into UTF16 characters. */\n  public static void UTF8toUTF16(byte[] utf8, int offset, int len, CharArr out) {\n    // TODO: do in chunks if the input is large\n    out.reserve(len);\n    int n = UTF8toUTF16(utf8, offset, len, out.getArray(), out.getEnd());\n    out.setEnd(out.getEnd() + n);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1b52553b383e6cf68c783d177daafd0b32d6347a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd92b8bcc88e969302510acf77bd6970da3994c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1b52553b383e6cf68c783d177daafd0b32d6347a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1b52553b383e6cf68c783d177daafd0b32d6347a"],"014f4a9c44ade09ba9dc8a50d2690f1303cbfaf7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1b52553b383e6cf68c783d177daafd0b32d6347a"]},"commit2Childs":{"1b52553b383e6cf68c783d177daafd0b32d6347a":["fd92b8bcc88e969302510acf77bd6970da3994c4","cd5edd1f2b162a5cfa08efd17851a07373a96817","014f4a9c44ade09ba9dc8a50d2690f1303cbfaf7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1b52553b383e6cf68c783d177daafd0b32d6347a","fd92b8bcc88e969302510acf77bd6970da3994c4","014f4a9c44ade09ba9dc8a50d2690f1303cbfaf7"],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"014f4a9c44ade09ba9dc8a50d2690f1303cbfaf7":[]},"heads":["fd92b8bcc88e969302510acf77bd6970da3994c4","cd5edd1f2b162a5cfa08efd17851a07373a96817","014f4a9c44ade09ba9dc8a50d2690f1303cbfaf7"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}