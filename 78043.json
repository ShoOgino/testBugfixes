{"path":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getDocValues(IndexReader,String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getDocValues(IndexReader,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocValuesIndexing#getDocValues(IndexReader,String).mjava","sourceNew":"  private DocValues getDocValues(IndexReader reader, String field) throws IOException {\n    return MultiDocValues.getDocValues(reader, field);\n  }\n\n","sourceOld":"  private DocValues getDocValues(IndexReader reader, String field) throws IOException {\n    return MultiDocValues.getDocValues(reader, field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d91f606c5d64e2c5fcf6065a8b96f9edd88851d7","date":1352213037,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getDocValues(IndexReader,String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getDocValues(IndexReader,String).mjava","sourceNew":"  private DocValues getDocValues(IndexReader reader, String field) throws IOException {\n    final DocValues docValues = MultiDocValues.getDocValues(reader, field);\n    if (docValues == null) {\n      return docValues;\n    }\n    if (rarely()) {\n      docValues.setCache(new NotCachingSourceCache());\n    } else {\n      if (!(docValues.getCache() instanceof DirectSourceCache))  {\n        docValues.setCache(new DirectSourceCache());\n      }\n    }\n    return docValues;\n    }\n\n","sourceOld":"  private DocValues getDocValues(IndexReader reader, String field) throws IOException {\n    return MultiDocValues.getDocValues(reader, field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad7de846867bd14c63f9dd19df082f72c5ea9c54","date":1355517454,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getDocValues(IndexReader,String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getDocValues(IndexReader,String).mjava","sourceNew":"  private DocValues getDocValues(IndexReader reader, String field) throws IOException {\n    final DocValues docValues = MultiDocValues.getDocValues(reader, field);\n    if (docValues == null) {\n      return docValues;\n    }\n    if (rarely()) {\n      docValues.setCache(new NotCachingSourceCache());\n    } else {\n      if (!(docValues.getCache() instanceof DirectSourceCache))  {\n        docValues.setCache(new DirectSourceCache());\n      }\n    }\n    return docValues;\n  }\n\n","sourceOld":"  private DocValues getDocValues(IndexReader reader, String field) throws IOException {\n    final DocValues docValues = MultiDocValues.getDocValues(reader, field);\n    if (docValues == null) {\n      return docValues;\n    }\n    if (rarely()) {\n      docValues.setCache(new NotCachingSourceCache());\n    } else {\n      if (!(docValues.getCache() instanceof DirectSourceCache))  {\n        docValues.setCache(new DirectSourceCache());\n      }\n    }\n    return docValues;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"841532e4eb1e16e53a6f7a438ec2079ff981b192","date":1358288582,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getDocValues(IndexReader,String).mjava","sourceNew":null,"sourceOld":"  private DocValues getDocValues(IndexReader reader, String field) throws IOException {\n    final DocValues docValues = MultiDocValues.getDocValues(reader, field);\n    if (docValues == null) {\n      return docValues;\n    }\n    if (rarely()) {\n      docValues.setCache(new NotCachingSourceCache());\n    } else {\n      if (!(docValues.getCache() instanceof DirectSourceCache))  {\n        docValues.setCache(new DirectSourceCache());\n      }\n    }\n    return docValues;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#getDocValues(IndexReader,String).mjava","sourceNew":null,"sourceOld":"  private DocValues getDocValues(IndexReader reader, String field) throws IOException {\n    final DocValues docValues = MultiDocValues.getDocValues(reader, field);\n    if (docValues == null) {\n      return docValues;\n    }\n    if (rarely()) {\n      docValues.setCache(new NotCachingSourceCache());\n    } else {\n      if (!(docValues.getCache() instanceof DirectSourceCache))  {\n        docValues.setCache(new DirectSourceCache());\n      }\n    }\n    return docValues;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["d91f606c5d64e2c5fcf6065a8b96f9edd88851d7","841532e4eb1e16e53a6f7a438ec2079ff981b192"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ad7de846867bd14c63f9dd19df082f72c5ea9c54":["d91f606c5d64e2c5fcf6065a8b96f9edd88851d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"841532e4eb1e16e53a6f7a438ec2079ff981b192":["ad7de846867bd14c63f9dd19df082f72c5ea9c54"],"d91f606c5d64e2c5fcf6065a8b96f9edd88851d7":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d91f606c5d64e2c5fcf6065a8b96f9edd88851d7"],"ad7de846867bd14c63f9dd19df082f72c5ea9c54":["841532e4eb1e16e53a6f7a438ec2079ff981b192"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"841532e4eb1e16e53a6f7a438ec2079ff981b192":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d91f606c5d64e2c5fcf6065a8b96f9edd88851d7":["d4d69c535930b5cce125cff868d40f6373dc27d4","ad7de846867bd14c63f9dd19df082f72c5ea9c54"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}