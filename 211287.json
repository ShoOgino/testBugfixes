{"path":"solr/core/src/java/org/apache/solr/cloud/CreateAliasCmd#checkForAlias(String,String).mjava","commits":[{"id":"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76","date":1471585465,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CreateAliasCmd#checkForAlias(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#checkForAlias(String,String).mjava","sourceNew":"  private void checkForAlias(String name, String value) {\n\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases;\n    while (!timeout.hasTimedOut()) {\n      aliases = ocmh.zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","sourceOld":"  private void checkForAlias(String name, String value) {\n\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases;\n    while (! timeout.hasTimedOut()) {\n      aliases = zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CreateAliasCmd#checkForAlias(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#checkForAlias(String,String).mjava","sourceNew":"  private void checkForAlias(String name, String value) {\n\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases;\n    while (!timeout.hasTimedOut()) {\n      aliases = ocmh.zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","sourceOld":"  private void checkForAlias(String name, String value) {\n\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases;\n    while (! timeout.hasTimedOut()) {\n      aliases = zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CreateAliasCmd#checkForAlias(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void checkForAlias(String name, String value) {\n\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases;\n    while (!timeout.hasTimedOut()) {\n      aliases = ocmh.zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b824daa61db3f30b91a22213d6c04e1fa2e2b06","date":1508385744,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CreateAliasCmd#checkForAlias(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CreateAliasCmd#checkForAlias(String,String).mjava","sourceNew":"  private void checkForAlias(String name, String value) {\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    boolean success = false;\n    while (!timeout.hasTimedOut()) {\n      String collections = ocmh.zkStateReader.getAliases().getCollectionAliasMap().get(name);\n      if (Objects.equals(collections, value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","sourceOld":"  private void checkForAlias(String name, String value) {\n\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases;\n    while (!timeout.hasTimedOut()) {\n      aliases = ocmh.zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"215e40821821b2df2e69355e208532c05ef095a5","date":1510858642,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/CreateAliasCmd#checkForAlias(String,String).mjava","sourceNew":null,"sourceOld":"  private void checkForAlias(String name, String value) {\n    TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n    boolean success = false;\n    while (!timeout.hasTimedOut()) {\n      String collections = ocmh.zkStateReader.getAliases().getCollectionAliasMap().get(name);\n      if (Objects.equals(collections, value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"215e40821821b2df2e69355e208532c05ef095a5":["6b824daa61db3f30b91a22213d6c04e1fa2e2b06"],"6b824daa61db3f30b91a22213d6c04e1fa2e2b06":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","66e0b82bd39567aa2bf534e5282d05fb4a4a2c76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["215e40821821b2df2e69355e208532c05ef095a5"]},"commit2Childs":{"215e40821821b2df2e69355e208532c05ef095a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6b824daa61db3f30b91a22213d6c04e1fa2e2b06":["215e40821821b2df2e69355e208532c05ef095a5"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["6b824daa61db3f30b91a22213d6c04e1fa2e2b06","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["403d05f7f8d69b65659157eff1bc1d2717f04c66","66e0b82bd39567aa2bf534e5282d05fb4a4a2c76","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}