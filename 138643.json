{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","sourceNew":"  public void testTokenEndingWithWordComponentOfMinimumLength() throws Exception {\n    CharArraySet dict = makeDictionary(\"ab\", \"cd\", \"ef\");\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT,\n      new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        new StringReader(\n          \"abcdef\")\n        ),\n      dict,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n\n    assertTokenStreamContents(tf,\n      new String[] { \"abcdef\", \"ab\", \"cd\", \"ef\" },\n      new int[] { 0, 0, 2, 4},\n      new int[] { 6, 2, 4, 6},\n      new int[] { 1, 0, 0, 0}\n      );\n  }\n\n","sourceOld":"  public void testTokenEndingWithWordComponentOfMinimumLength() throws Exception {\n    CharArraySet dict = makeDictionary(\"ab\", \"cd\", \"ef\");\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT,\n      new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        new StringReader(\n          \"abcdef\")\n        ),\n      dict,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n\n    assertTokenStreamContents(tf,\n      new String[] { \"abcdef\", \"ab\", \"cd\", \"ef\" },\n      new int[] { 0, 0, 2, 4},\n      new int[] { 6, 2, 4, 6},\n      new int[] { 1, 0, 0, 0}\n      );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1497255a2ce11dc672a80859c79fabe7efa51d2e","date":1369725708,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","sourceNew":"  public void testTokenEndingWithWordComponentOfMinimumLength() throws Exception {\n    CharArraySet dict = makeDictionary(\"ab\", \"cd\", \"ef\");\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT,\n      new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        new StringReader(\n          \"abcdef\")\n        ),\n      dict,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n\n    assertTokenStreamContents(tf,\n      new String[] { \"abcdef\", \"ab\", \"cd\", \"ef\" },\n      new int[] { 0, 0, 0, 0},\n      new int[] { 6, 6, 6, 6},\n      new int[] { 1, 0, 0, 0}\n      );\n  }\n\n","sourceOld":"  public void testTokenEndingWithWordComponentOfMinimumLength() throws Exception {\n    CharArraySet dict = makeDictionary(\"ab\", \"cd\", \"ef\");\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT,\n      new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        new StringReader(\n          \"abcdef\")\n        ),\n      dict,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n\n    assertTokenStreamContents(tf,\n      new String[] { \"abcdef\", \"ab\", \"cd\", \"ef\" },\n      new int[] { 0, 0, 2, 4},\n      new int[] { 6, 2, 4, 6},\n      new int[] { 1, 0, 0, 0}\n      );\n  }\n\n","bugFix":["1e15bea9339982eec538668b67ae252b28e0003e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","sourceNew":"  public void testTokenEndingWithWordComponentOfMinimumLength() throws Exception {\n    CharArraySet dict = makeDictionary(\"ab\", \"cd\", \"ef\");\n\n    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT);\n    tokenizer.setReader(new StringReader(\"abcdef\"));\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT,\n      tokenizer,\n      dict,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n\n    assertTokenStreamContents(tf,\n      new String[] { \"abcdef\", \"ab\", \"cd\", \"ef\" },\n      new int[] { 0, 0, 0, 0},\n      new int[] { 6, 6, 6, 6},\n      new int[] { 1, 0, 0, 0}\n      );\n  }\n\n","sourceOld":"  public void testTokenEndingWithWordComponentOfMinimumLength() throws Exception {\n    CharArraySet dict = makeDictionary(\"ab\", \"cd\", \"ef\");\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT,\n      new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        new StringReader(\n          \"abcdef\")\n        ),\n      dict,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n\n    assertTokenStreamContents(tf,\n      new String[] { \"abcdef\", \"ab\", \"cd\", \"ef\" },\n      new int[] { 0, 0, 0, 0},\n      new int[] { 6, 6, 6, 6},\n      new int[] { 1, 0, 0, 0}\n      );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75","date":1399205975,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","sourceNew":"  public void testTokenEndingWithWordComponentOfMinimumLength() throws Exception {\n    CharArraySet dict = makeDictionary(\"ab\", \"cd\", \"ef\");\n\n    Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n    tokenizer.setReader(new StringReader(\"abcdef\"));\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT,\n      tokenizer,\n      dict,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n\n    assertTokenStreamContents(tf,\n      new String[] { \"abcdef\", \"ab\", \"cd\", \"ef\" },\n      new int[] { 0, 0, 0, 0},\n      new int[] { 6, 6, 6, 6},\n      new int[] { 1, 0, 0, 0}\n      );\n  }\n\n","sourceOld":"  public void testTokenEndingWithWordComponentOfMinimumLength() throws Exception {\n    CharArraySet dict = makeDictionary(\"ab\", \"cd\", \"ef\");\n\n    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT);\n    tokenizer.setReader(new StringReader(\"abcdef\"));\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT,\n      tokenizer,\n      dict,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n\n    assertTokenStreamContents(tf,\n      new String[] { \"abcdef\", \"ab\", \"cd\", \"ef\" },\n      new int[] { 0, 0, 0, 0},\n      new int[] { 6, 6, 6, 6},\n      new int[] { 1, 0, 0, 0}\n      );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","sourceNew":"  public void testTokenEndingWithWordComponentOfMinimumLength() throws Exception {\n    CharArraySet dict = makeDictionary(\"ab\", \"cd\", \"ef\");\n\n    Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n    tokenizer.setReader(new StringReader(\"abcdef\"));\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(\n      tokenizer,\n      dict,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n\n    assertTokenStreamContents(tf,\n      new String[] { \"abcdef\", \"ab\", \"cd\", \"ef\" },\n      new int[] { 0, 0, 0, 0},\n      new int[] { 6, 6, 6, 6},\n      new int[] { 1, 0, 0, 0}\n      );\n  }\n\n","sourceOld":"  public void testTokenEndingWithWordComponentOfMinimumLength() throws Exception {\n    CharArraySet dict = makeDictionary(\"ab\", \"cd\", \"ef\");\n\n    Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n    tokenizer.setReader(new StringReader(\"abcdef\"));\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT,\n      tokenizer,\n      dict,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n\n    assertTokenStreamContents(tf,\n      new String[] { \"abcdef\", \"ab\", \"cd\", \"ef\" },\n      new int[] { 0, 0, 0, 0},\n      new int[] { 6, 6, 6, 6},\n      new int[] { 1, 0, 0, 0}\n      );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1497255a2ce11dc672a80859c79fabe7efa51d2e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["1497255a2ce11dc672a80859c79fabe7efa51d2e"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75"],"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["379db3ad24c4f0214f30a122265a6d6be003a99d"]},"commit2Childs":{"1497255a2ce11dc672a80859c79fabe7efa51d2e":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["1497255a2ce11dc672a80859c79fabe7efa51d2e"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}