{"path":"lucene/src/test/org/apache/lucene/index/TestNorms#addDocs(Directory,int,boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNorms#addDocs(Directory,int,boolean).mjava","pathOld":"src/test/org/apache/lucene/index/TestNorms#addDocs(Directory,int,boolean).mjava","sourceNew":"  private void addDocs(Directory dir, int ndocs, boolean compound) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.APPEND)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(compound);\n    lmp.setUseCompoundDocStore(compound);\n    for (int i = 0; i < ndocs; i++) {\n      iw.addDocument(newDoc());\n    }\n    iw.close();\n  }\n\n","sourceOld":"  private void addDocs(Directory dir, int ndocs, boolean compound) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.APPEND)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(compound);\n    lmp.setUseCompoundDocStore(compound);\n    for (int i = 0; i < ndocs; i++) {\n      iw.addDocument(newDoc());\n    }\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ab99e8c71442b92c320e218141dee04a9b91ce8","date":1269203801,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNorms#addDocs(Directory,int,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNorms#addDocs(Directory,int,boolean).mjava","sourceNew":"  private void addDocs(Directory dir, int ndocs, boolean compound) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.APPEND)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(compound);\n    lmp.setUseCompoundDocStore(compound);\n    for (int i = 0; i < ndocs; i++) {\n      iw.addDocument(newDoc());\n    }\n    iw.close();\n  }\n\n","sourceOld":"  private void addDocs(Directory dir, int ndocs, boolean compound) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.APPEND)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(compound);\n    lmp.setUseCompoundDocStore(compound);\n    for (int i = 0; i < ndocs; i++) {\n      iw.addDocument(newDoc());\n    }\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8dc26bfa5ebbc55b5a04fbec545dfcec647b046b","date":1280297653,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNorms#addDocs(Directory,int,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNorms#addDocs(Directory,int,boolean).mjava","sourceNew":"  private void addDocs(Directory dir, int ndocs, boolean compound) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.APPEND)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(compound);\n    for (int i = 0; i < ndocs; i++) {\n      iw.addDocument(newDoc());\n    }\n    iw.close();\n  }\n\n","sourceOld":"  private void addDocs(Directory dir, int ndocs, boolean compound) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.APPEND)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(compound);\n    lmp.setUseCompoundDocStore(compound);\n    for (int i = 0; i < ndocs; i++) {\n      iw.addDocument(newDoc());\n    }\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNorms#addDocs(Random,Directory,int,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNorms#addDocs(Directory,int,boolean).mjava","sourceNew":"  private void addDocs(Random random, Directory dir, int ndocs, boolean compound) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.APPEND)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(compound);\n    lmp.setUseCompoundDocStore(compound);\n    for (int i = 0; i < ndocs; i++) {\n      iw.addDocument(newDoc());\n    }\n    iw.close();\n  }\n\n","sourceOld":"  private void addDocs(Directory dir, int ndocs, boolean compound) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.APPEND)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(compound);\n    lmp.setUseCompoundDocStore(compound);\n    for (int i = 0; i < ndocs; i++) {\n      iw.addDocument(newDoc());\n    }\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestNorms#addDocs(Directory,int,boolean).mjava","sourceNew":null,"sourceOld":"  private void addDocs(Directory dir, int ndocs, boolean compound) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.APPEND)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(compound);\n    for (int i = 0; i < ndocs; i++) {\n      iw.addDocument(newDoc());\n    }\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7ab99e8c71442b92c320e218141dee04a9b91ce8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["8dc26bfa5ebbc55b5a04fbec545dfcec647b046b","b21422ff1d1d56499dec481f193b402e5e8def5b"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"8dc26bfa5ebbc55b5a04fbec545dfcec647b046b":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7ab99e8c71442b92c320e218141dee04a9b91ce8":["b21422ff1d1d56499dec481f193b402e5e8def5b","8dc26bfa5ebbc55b5a04fbec545dfcec647b046b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"8dc26bfa5ebbc55b5a04fbec545dfcec647b046b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}