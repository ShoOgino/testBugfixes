{"path":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#getReaderForField(String).mjava","commits":[{"id":"296b8b38a87feb478921f77834a2302dfe77641c","date":1209506838,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#getReaderForField(String).mjava","pathOld":"/dev/null","sourceNew":"  private IndexReader getReaderForField(String field) {\r\n    IndexReader reader = (IndexReader) readers.get(field);\r\n    if (reader == null) {\r\n      MemoryIndex indexer = new MemoryIndex();\r\n      indexer.addField(field, cachedTokenFilter);\r\n      IndexSearcher searcher = indexer.createSearcher();\r\n      reader = searcher.getIndexReader();\r\n      readers.put(field, reader);\r\n    }\r\n    return reader;\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5d934099a6f0a3ae0285025a1e1b61b7b05fed8f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5d934099a6f0a3ae0285025a1e1b61b7b05fed8f","date":1211715535,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#getReaderForField(String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#getReaderForField(String).mjava","sourceNew":"  private IndexReader getReaderForField(String field) {\n    IndexReader reader = (IndexReader) readers.get(field);\n    if (reader == null) {\n      MemoryIndex indexer = new MemoryIndex();\n      indexer.addField(field, cachedTokenFilter);\n      IndexSearcher searcher = indexer.createSearcher();\n      reader = searcher.getIndexReader();\n      readers.put(field, reader);\n    }\n    return reader;\n  }\n\n","sourceOld":"  private IndexReader getReaderForField(String field) {\r\n    IndexReader reader = (IndexReader) readers.get(field);\r\n    if (reader == null) {\r\n      MemoryIndex indexer = new MemoryIndex();\r\n      indexer.addField(field, cachedTokenFilter);\r\n      IndexSearcher searcher = indexer.createSearcher();\r\n      reader = searcher.getIndexReader();\r\n      readers.put(field, reader);\r\n    }\r\n    return reader;\r\n  }\r\n\n","bugFix":["296b8b38a87feb478921f77834a2302dfe77641c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"943c3f9cf96b8df37f4273d66a66182e2a669467","date":1249394171,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#getReaderForField(String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#getReaderForField(String).mjava","sourceNew":"  private IndexReader getReaderForField(String field) throws IOException {\n    if(!cachedTokenStream && !(tokenStream instanceof CachingTokenFilter)) {\n      tokenStream = new CachingTokenFilter(tokenStream);\n      cachedTokenStream = true;\n    }\n    IndexReader reader = (IndexReader) readers.get(field);\n    if (reader == null) {\n      MemoryIndex indexer = new MemoryIndex();\n      indexer.addField(field, tokenStream);\n      tokenStream.reset();\n      IndexSearcher searcher = indexer.createSearcher();\n      reader = searcher.getIndexReader();\n      readers.put(field, reader);\n    }\n\n    return reader;\n  }\n\n","sourceOld":"  private IndexReader getReaderForField(String field) {\n    IndexReader reader = (IndexReader) readers.get(field);\n    if (reader == null) {\n      MemoryIndex indexer = new MemoryIndex();\n      indexer.addField(field, cachedTokenFilter);\n      IndexSearcher searcher = indexer.createSearcher();\n      reader = searcher.getIndexReader();\n      readers.put(field, reader);\n    }\n    return reader;\n  }\n\n","bugFix":null,"bugIntro":["72c9f3c6ae2c62a0bde2527e5bbd05ff35ab662a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"72c9f3c6ae2c62a0bde2527e5bbd05ff35ab662a","date":1251484267,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#getReaderForField(String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#getReaderForField(String).mjava","sourceNew":"  private IndexReader getReaderForField(String field) throws IOException {\n    if(wrapToCaching && !cachedTokenStream && !(tokenStream instanceof CachingTokenFilter)) {\n      tokenStream = new CachingTokenFilter(tokenStream);\n      cachedTokenStream = true;\n    }\n    IndexReader reader = (IndexReader) readers.get(field);\n    if (reader == null) {\n      MemoryIndex indexer = new MemoryIndex();\n      indexer.addField(field, tokenStream);\n      tokenStream.reset();\n      IndexSearcher searcher = indexer.createSearcher();\n      reader = searcher.getIndexReader();\n      readers.put(field, reader);\n    }\n\n    return reader;\n  }\n\n","sourceOld":"  private IndexReader getReaderForField(String field) throws IOException {\n    if(!cachedTokenStream && !(tokenStream instanceof CachingTokenFilter)) {\n      tokenStream = new CachingTokenFilter(tokenStream);\n      cachedTokenStream = true;\n    }\n    IndexReader reader = (IndexReader) readers.get(field);\n    if (reader == null) {\n      MemoryIndex indexer = new MemoryIndex();\n      indexer.addField(field, tokenStream);\n      tokenStream.reset();\n      IndexSearcher searcher = indexer.createSearcher();\n      reader = searcher.getIndexReader();\n      readers.put(field, reader);\n    }\n\n    return reader;\n  }\n\n","bugFix":["943c3f9cf96b8df37f4273d66a66182e2a669467"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ffdf794cee8d43eb612df752c592cef2dc3e75ae","date":1256465578,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#getReaderForField(String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#getReaderForField(String).mjava","sourceNew":"  private IndexReader getReaderForField(String field) throws IOException {\n    if(wrapToCaching && !cachedTokenStream && !(tokenStream instanceof CachingTokenFilter)) {\n      tokenStream = new CachingTokenFilter(tokenStream);\n      cachedTokenStream = true;\n    }\n    IndexReader reader = readers.get(field);\n    if (reader == null) {\n      MemoryIndex indexer = new MemoryIndex();\n      indexer.addField(field, tokenStream);\n      tokenStream.reset();\n      IndexSearcher searcher = indexer.createSearcher();\n      reader = searcher.getIndexReader();\n      readers.put(field, reader);\n    }\n\n    return reader;\n  }\n\n","sourceOld":"  private IndexReader getReaderForField(String field) throws IOException {\n    if(wrapToCaching && !cachedTokenStream && !(tokenStream instanceof CachingTokenFilter)) {\n      tokenStream = new CachingTokenFilter(tokenStream);\n      cachedTokenStream = true;\n    }\n    IndexReader reader = (IndexReader) readers.get(field);\n    if (reader == null) {\n      MemoryIndex indexer = new MemoryIndex();\n      indexer.addField(field, tokenStream);\n      tokenStream.reset();\n      IndexSearcher searcher = indexer.createSearcher();\n      reader = searcher.getIndexReader();\n      readers.put(field, reader);\n    }\n\n    return reader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#getReaderForField(String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#getReaderForField(String).mjava","sourceNew":"  private IndexReader getReaderForField(String field) throws IOException {\n    if(wrapToCaching && !cachedTokenStream && !(tokenStream instanceof CachingTokenFilter)) {\n      tokenStream = new CachingTokenFilter(tokenStream);\n      cachedTokenStream = true;\n    }\n    IndexReader reader = readers.get(field);\n    if (reader == null) {\n      MemoryIndex indexer = new MemoryIndex();\n      indexer.addField(field, tokenStream);\n      tokenStream.reset();\n      IndexSearcher searcher = indexer.createSearcher();\n      reader = searcher.getIndexReader();\n      readers.put(field, reader);\n    }\n\n    return reader;\n  }\n\n","sourceOld":"  private IndexReader getReaderForField(String field) throws IOException {\n    if(wrapToCaching && !cachedTokenStream && !(tokenStream instanceof CachingTokenFilter)) {\n      tokenStream = new CachingTokenFilter(tokenStream);\n      cachedTokenStream = true;\n    }\n    IndexReader reader = readers.get(field);\n    if (reader == null) {\n      MemoryIndex indexer = new MemoryIndex();\n      indexer.addField(field, tokenStream);\n      tokenStream.reset();\n      IndexSearcher searcher = indexer.createSearcher();\n      reader = searcher.getIndexReader();\n      readers.put(field, reader);\n    }\n\n    return reader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ffdf794cee8d43eb612df752c592cef2dc3e75ae":["72c9f3c6ae2c62a0bde2527e5bbd05ff35ab662a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"72c9f3c6ae2c62a0bde2527e5bbd05ff35ab662a":["943c3f9cf96b8df37f4273d66a66182e2a669467"],"5d934099a6f0a3ae0285025a1e1b61b7b05fed8f":["296b8b38a87feb478921f77834a2302dfe77641c"],"943c3f9cf96b8df37f4273d66a66182e2a669467":["5d934099a6f0a3ae0285025a1e1b61b7b05fed8f"],"296b8b38a87feb478921f77834a2302dfe77641c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ffdf794cee8d43eb612df752c592cef2dc3e75ae"]},"commit2Childs":{"ffdf794cee8d43eb612df752c592cef2dc3e75ae":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["296b8b38a87feb478921f77834a2302dfe77641c"],"72c9f3c6ae2c62a0bde2527e5bbd05ff35ab662a":["ffdf794cee8d43eb612df752c592cef2dc3e75ae"],"5d934099a6f0a3ae0285025a1e1b61b7b05fed8f":["943c3f9cf96b8df37f4273d66a66182e2a669467"],"943c3f9cf96b8df37f4273d66a66182e2a669467":["72c9f3c6ae2c62a0bde2527e5bbd05ff35ab662a"],"296b8b38a87feb478921f77834a2302dfe77641c":["5d934099a6f0a3ae0285025a1e1b61b7b05fed8f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}