{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParser#Modifiers().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParser#Modifiers().mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParser#Modifiers().mjava","sourceNew":"  final public ModifierQueryNode.Modifier Modifiers() throws ParseException {\n  ModifierQueryNode.Modifier ret = ModifierQueryNode.Modifier.MOD_NONE;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case NOT:\n    case PLUS:\n    case MINUS:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case PLUS:\n        jj_consume_token(PLUS);\n              ret = ModifierQueryNode.Modifier.MOD_REQ;\n        break;\n      case MINUS:\n        jj_consume_token(MINUS);\n                 ret = ModifierQueryNode.Modifier.MOD_NOT;\n        break;\n      case NOT:\n        jj_consume_token(NOT);\n               ret = ModifierQueryNode.Modifier.MOD_NOT;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      break;\n    default:\n      jj_la1[3] = jj_gen;\n      ;\n    }\n    {if (true) return ret;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public ModifierQueryNode.Modifier Modifiers() throws ParseException {\n  ModifierQueryNode.Modifier ret = ModifierQueryNode.Modifier.MOD_NONE;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case NOT:\n    case PLUS:\n    case MINUS:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case PLUS:\n        jj_consume_token(PLUS);\n              ret = ModifierQueryNode.Modifier.MOD_REQ;\n        break;\n      case MINUS:\n        jj_consume_token(MINUS);\n                 ret = ModifierQueryNode.Modifier.MOD_NOT;\n        break;\n      case NOT:\n        jj_consume_token(NOT);\n               ret = ModifierQueryNode.Modifier.MOD_NOT;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      break;\n    default:\n      jj_la1[3] = jj_gen;\n      ;\n    }\n    {if (true) return ret;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"383e6510a01a27ea3d860472f33049ed2c766e15","date":1424161215,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParser#Modifiers().mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParser#Modifiers().mjava","sourceNew":"  final public ModifierQueryNode.Modifier Modifiers() throws ParseException {\n  ModifierQueryNode.Modifier ret = ModifierQueryNode.Modifier.MOD_NONE;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case NOT:\n    case PLUS:\n    case MINUS:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case PLUS:\n        jj_consume_token(PLUS);\n              ret = ModifierQueryNode.Modifier.MOD_REQ;\n        break;\n      case MINUS:\n        jj_consume_token(MINUS);\n                 ret = ModifierQueryNode.Modifier.MOD_NOT;\n        break;\n      case NOT:\n        jj_consume_token(NOT);\n               ret = ModifierQueryNode.Modifier.MOD_NOT;\n        break;\n      default:\n        jj_la1[0] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      break;\n    default:\n      jj_la1[1] = jj_gen;\n      ;\n    }\n    {if (true) return ret;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public ModifierQueryNode.Modifier Modifiers() throws ParseException {\n  ModifierQueryNode.Modifier ret = ModifierQueryNode.Modifier.MOD_NONE;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case NOT:\n    case PLUS:\n    case MINUS:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case PLUS:\n        jj_consume_token(PLUS);\n              ret = ModifierQueryNode.Modifier.MOD_REQ;\n        break;\n      case MINUS:\n        jj_consume_token(MINUS);\n                 ret = ModifierQueryNode.Modifier.MOD_NOT;\n        break;\n      case NOT:\n        jj_consume_token(NOT);\n               ret = ModifierQueryNode.Modifier.MOD_NOT;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      break;\n    default:\n      jj_la1[3] = jj_gen;\n      ;\n    }\n    {if (true) return ret;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":["f15bad88fcdb5cb75a8cd9f5dea23a87a3b04b6b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4bf8c857cdf9b9be903cae84ef15985ad090a05","date":1600342158,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParser#Modifiers().mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParser#Modifiers().mjava","sourceNew":"  final public ModifierQueryNode.Modifier Modifiers() throws ParseException {ModifierQueryNode.Modifier ret = ModifierQueryNode.Modifier.MOD_NONE;\n    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {\n    case NOT:\n    case PLUS:\n    case MINUS:{\n      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {\n      case PLUS:{\n        jj_consume_token(PLUS);\nret = ModifierQueryNode.Modifier.MOD_REQ;\n        break;\n        }\n      case MINUS:{\n        jj_consume_token(MINUS);\nret = ModifierQueryNode.Modifier.MOD_NOT;\n        break;\n        }\n      case NOT:{\n        jj_consume_token(NOT);\nret = ModifierQueryNode.Modifier.MOD_NOT;\n        break;\n        }\n      default:\n        jj_la1[0] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      break;\n      }\n    default:\n      jj_la1[1] = jj_gen;\n      ;\n    }\n{if (\"\" != null) return ret;}\n    throw new Error(\"Missing return statement in function\");\n}\n\n","sourceOld":"  final public ModifierQueryNode.Modifier Modifiers() throws ParseException {\n  ModifierQueryNode.Modifier ret = ModifierQueryNode.Modifier.MOD_NONE;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case NOT:\n    case PLUS:\n    case MINUS:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case PLUS:\n        jj_consume_token(PLUS);\n              ret = ModifierQueryNode.Modifier.MOD_REQ;\n        break;\n      case MINUS:\n        jj_consume_token(MINUS);\n                 ret = ModifierQueryNode.Modifier.MOD_NOT;\n        break;\n      case NOT:\n        jj_consume_token(NOT);\n               ret = ModifierQueryNode.Modifier.MOD_NOT;\n        break;\n      default:\n        jj_la1[0] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      break;\n    default:\n      jj_la1[1] = jj_gen;\n      ;\n    }\n    {if (true) return ret;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfb61e2d7e18571ab4a1eaf5a50a11519e9d79f9","date":1600414700,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParser#Modifiers().mjava","sourceNew":null,"sourceOld":"  final public ModifierQueryNode.Modifier Modifiers() throws ParseException {ModifierQueryNode.Modifier ret = ModifierQueryNode.Modifier.MOD_NONE;\n    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {\n    case NOT:\n    case PLUS:\n    case MINUS:{\n      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {\n      case PLUS:{\n        jj_consume_token(PLUS);\nret = ModifierQueryNode.Modifier.MOD_REQ;\n        break;\n        }\n      case MINUS:{\n        jj_consume_token(MINUS);\nret = ModifierQueryNode.Modifier.MOD_NOT;\n        break;\n        }\n      case NOT:{\n        jj_consume_token(NOT);\nret = ModifierQueryNode.Modifier.MOD_NOT;\n        break;\n        }\n      default:\n        jj_la1[0] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      break;\n      }\n    default:\n      jj_la1[1] = jj_gen;\n      ;\n    }\n{if (\"\" != null) return ret;}\n    throw new Error(\"Missing return statement in function\");\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c4bf8c857cdf9b9be903cae84ef15985ad090a05":["383e6510a01a27ea3d860472f33049ed2c766e15"],"cfb61e2d7e18571ab4a1eaf5a50a11519e9d79f9":["c4bf8c857cdf9b9be903cae84ef15985ad090a05"],"383e6510a01a27ea3d860472f33049ed2c766e15":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cfb61e2d7e18571ab4a1eaf5a50a11519e9d79f9"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["383e6510a01a27ea3d860472f33049ed2c766e15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"c4bf8c857cdf9b9be903cae84ef15985ad090a05":["cfb61e2d7e18571ab4a1eaf5a50a11519e9d79f9"],"383e6510a01a27ea3d860472f33049ed2c766e15":["c4bf8c857cdf9b9be903cae84ef15985ad090a05"],"cfb61e2d7e18571ab4a1eaf5a50a11519e9d79f9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}