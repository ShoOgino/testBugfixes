{"path":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#getObj(RestTestHarness,String,String).mjava","commits":[{"id":"4a54d9ede1b7f2f026639186eb07f3f314d87d9a","date":1412176848,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#getObj(RestTestHarness,String,String).mjava","pathOld":"/dev/null","sourceNew":"  public static Map getObj(RestTestHarness restHarness, String fld, String key) throws Exception {\n    Map map = getRespMap(restHarness);\n    List l = (List) ((Map)map.get(\"schema\")).get(key);\n    for (Object o : l) {\n      Map m = (Map) o;\n      if(fld.equals(m.get(\"name\"))) return m;\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#getObj(RestTestHarness,String,String).mjava","pathOld":"/dev/null","sourceNew":"  public static Map getObj(RestTestHarness restHarness, String fld, String key) throws Exception {\n    Map map = getRespMap(restHarness);\n    List l = (List) ((Map)map.get(\"schema\")).get(key);\n    for (Object o : l) {\n      Map m = (Map) o;\n      if(fld.equals(m.get(\"name\"))) return m;\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeeea2295d6355a29e259130a5c48ace73022d7c","date":1426569216,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#getObj(RestTestHarness,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#getObj(RestTestHarness,String,String).mjava","sourceNew":"  public static Map getObj(RestTestHarness restHarness, String fld, String key) throws Exception {\n    Map map = getRespMap(restHarness);\n    List l = (List) ((Map)map.get(\"schema\")).get(key);\n    for (Object o : l) {\n      Map m = (Map) o;\n      if (fld.equals(m.get(\"name\"))) \n        return m;\n    }\n    return null;\n  }\n\n","sourceOld":"  public static Map getObj(RestTestHarness restHarness, String fld, String key) throws Exception {\n    Map map = getRespMap(restHarness);\n    List l = (List) ((Map)map.get(\"schema\")).get(key);\n    for (Object o : l) {\n      Map m = (Map) o;\n      if(fld.equals(m.get(\"name\"))) return m;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#getObj(RestTestHarness,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#getObj(RestTestHarness,String,String).mjava","sourceNew":"  public static Map getObj(RestTestHarness restHarness, String fld, String key) throws Exception {\n    Map map = getRespMap(restHarness);\n    List l = (List) ((Map)map.get(\"schema\")).get(key);\n    for (Object o : l) {\n      Map m = (Map) o;\n      if (fld.equals(m.get(\"name\"))) \n        return m;\n    }\n    return null;\n  }\n\n","sourceOld":"  public static Map getObj(RestTestHarness restHarness, String fld, String key) throws Exception {\n    Map map = getRespMap(restHarness);\n    List l = (List) ((Map)map.get(\"schema\")).get(key);\n    for (Object o : l) {\n      Map m = (Map) o;\n      if(fld.equals(m.get(\"name\"))) return m;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#getObj(RestTestHarness,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#getObj(RestTestHarness,String,String).mjava","sourceNew":"  @SuppressWarnings({\"rawtypes\"})\n  public static Map getObj(RestTestHarness restHarness, String fld, String key) throws Exception {\n    Map map = getRespMap(restHarness);\n    List l = (List) ((Map)map.get(\"schema\")).get(key);\n    for (Object o : l) {\n      @SuppressWarnings({\"rawtypes\"})Map m = (Map) o;\n      if (fld.equals(m.get(\"name\"))) \n        return m;\n    }\n    return null;\n  }\n\n","sourceOld":"  public static Map getObj(RestTestHarness restHarness, String fld, String key) throws Exception {\n    Map map = getRespMap(restHarness);\n    List l = (List) ((Map)map.get(\"schema\")).get(key);\n    for (Object o : l) {\n      Map m = (Map) o;\n      if (fld.equals(m.get(\"name\"))) \n        return m;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["4a54d9ede1b7f2f026639186eb07f3f314d87d9a","eeeea2295d6355a29e259130a5c48ace73022d7c"],"eeeea2295d6355a29e259130a5c48ace73022d7c":["4a54d9ede1b7f2f026639186eb07f3f314d87d9a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4a54d9ede1b7f2f026639186eb07f3f314d87d9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4a54d9ede1b7f2f026639186eb07f3f314d87d9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["eeeea2295d6355a29e259130a5c48ace73022d7c"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"eeeea2295d6355a29e259130a5c48ace73022d7c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e98520789adb1d5ad05afb4956eca0944a929688"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4a54d9ede1b7f2f026639186eb07f3f314d87d9a","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"4a54d9ede1b7f2f026639186eb07f3f314d87d9a":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","eeeea2295d6355a29e259130a5c48ace73022d7c","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}