{"path":"solr/core/src/java/org/apache/solr/search/join/FiltersQParser#exclude(Map[Query,Occur]).mjava","commits":[{"id":"5f7c69c29432074b666568db5e84001acd540dee","date":1520745905,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/FiltersQParser#exclude(Map[Query,Occur]).mjava","pathOld":"/dev/null","sourceNew":"  protected void exclude(Map<Query,Occur> clauses) {\n    Set<String> tagsToExclude = new HashSet<>();\n    String excludeTags = localParams.get(\"excludeTags\");\n    if (excludeTags != null) {\n      tagsToExclude.addAll(StrUtils.splitSmart(excludeTags, ','));\n    }\n    @SuppressWarnings(\"rawtypes\")\n    Map tagMap = (Map) req.getContext().get(\"tags\");\n    if (tagMap != null && !tagMap.isEmpty() && !tagsToExclude.isEmpty()) {\n      clauses.keySet().removeAll(excludeSet(tagMap, tagsToExclude));\n    } // else no filters were tagged\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b2cebce8aded9fff0c315c32efe811679c29d47","date":1593532507,"type":5,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/FiltersQParser#exclude(Collection[QParser]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/FiltersQParser#exclude(Map[Query,Occur]).mjava","sourceNew":"  protected void exclude(Collection<QParser> clauses) {\n    Set<String> tagsToExclude = new HashSet<>();\n    String excludeTags = localParams.get(\"excludeTags\");\n    if (excludeTags != null) {\n      tagsToExclude.addAll(StrUtils.splitSmart(excludeTags, ','));\n    }\n    @SuppressWarnings(\"rawtypes\")\n    Map tagMap = (Map) req.getContext().get(\"tags\");\n    final Collection<QParser> excludeSet;\n    if (tagMap != null && !tagMap.isEmpty() && !tagsToExclude.isEmpty()) {\n      excludeSet = excludeSet(tagMap, tagsToExclude);\n    } else {\n      excludeSet = Collections.emptySet();\n    }\n    clauses.removeAll(excludeSet);\n  }\n\n","sourceOld":"  protected void exclude(Map<Query,Occur> clauses) {\n    Set<String> tagsToExclude = new HashSet<>();\n    String excludeTags = localParams.get(\"excludeTags\");\n    if (excludeTags != null) {\n      tagsToExclude.addAll(StrUtils.splitSmart(excludeTags, ','));\n    }\n    @SuppressWarnings(\"rawtypes\")\n    Map tagMap = (Map) req.getContext().get(\"tags\");\n    if (tagMap != null && !tagMap.isEmpty() && !tagsToExclude.isEmpty()) {\n      clauses.keySet().removeAll(excludeSet(tagMap, tagsToExclude));\n    } // else no filters were tagged\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5b2cebce8aded9fff0c315c32efe811679c29d47":["5f7c69c29432074b666568db5e84001acd540dee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f7c69c29432074b666568db5e84001acd540dee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5b2cebce8aded9fff0c315c32efe811679c29d47"]},"commit2Childs":{"5b2cebce8aded9fff0c315c32efe811679c29d47":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f7c69c29432074b666568db5e84001acd540dee"],"5f7c69c29432074b666568db5e84001acd540dee":["5b2cebce8aded9fff0c315c32efe811679c29d47"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}