{"path":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepSkipListReader#setLastSkipData(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepSkipListReader#setLastSkipData(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/sep/SepSkipListReader#setLastSkipData(int).mjava","sourceNew":"  @Override\n  protected void setLastSkipData(int level) {\n    super.setLastSkipData(level);\n\n    lastPayloadPointer = payloadPointer[level];\n    lastPayloadLength = payloadLength[level];\n    if (freqIndex != null) {\n      lastFreqIndex.set(freqIndex[level]);\n    }\n    lastDocIndex.set(docIndex[level]);\n    if (lastPosIndex != null) {\n      lastPosIndex.set(posIndex[level]);\n    }\n\n    if (level > 0) {\n      if (freqIndex != null) {\n        freqIndex[level-1].set(freqIndex[level]);\n      }\n      docIndex[level-1].set(docIndex[level]);\n      if (posIndex != null) {\n        posIndex[level-1].set(posIndex[level]);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void setLastSkipData(int level) {\n    super.setLastSkipData(level);\n\n    lastPayloadPointer = payloadPointer[level];\n    lastPayloadLength = payloadLength[level];\n    if (freqIndex != null) {\n      lastFreqIndex.set(freqIndex[level]);\n    }\n    lastDocIndex.set(docIndex[level]);\n    if (lastPosIndex != null) {\n      lastPosIndex.set(posIndex[level]);\n    }\n\n    if (level > 0) {\n      if (freqIndex != null) {\n        freqIndex[level-1].set(freqIndex[level]);\n      }\n      docIndex[level-1].set(docIndex[level]);\n      if (posIndex != null) {\n        posIndex[level-1].set(posIndex[level]);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f47dffe94742dac475f14312c342244a094323d3","date":1341398316,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepSkipListReader#setLastSkipData(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepSkipListReader#setLastSkipData(int).mjava","sourceNew":"  @Override\n  protected void setLastSkipData(int level) {\n    super.setLastSkipData(level);\n\n    lastPayloadPointer = payloadPointer[level];\n    lastPayloadLength = payloadLength[level];\n    if (freqIndex != null) {\n      lastFreqIndex.copyFrom(freqIndex[level]);\n    }\n    lastDocIndex.copyFrom(docIndex[level]);\n    if (lastPosIndex != null) {\n      lastPosIndex.copyFrom(posIndex[level]);\n    }\n\n    if (level > 0) {\n      if (freqIndex != null) {\n        freqIndex[level-1].copyFrom(freqIndex[level]);\n      }\n      docIndex[level-1].copyFrom(docIndex[level]);\n      if (posIndex != null) {\n        posIndex[level-1].copyFrom(posIndex[level]);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void setLastSkipData(int level) {\n    super.setLastSkipData(level);\n\n    lastPayloadPointer = payloadPointer[level];\n    lastPayloadLength = payloadLength[level];\n    if (freqIndex != null) {\n      lastFreqIndex.set(freqIndex[level]);\n    }\n    lastDocIndex.set(docIndex[level]);\n    if (lastPosIndex != null) {\n      lastPosIndex.set(posIndex[level]);\n    }\n\n    if (level > 0) {\n      if (freqIndex != null) {\n        freqIndex[level-1].set(freqIndex[level]);\n      }\n      docIndex[level-1].set(docIndex[level]);\n      if (posIndex != null) {\n        posIndex[level-1].set(posIndex[level]);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8615860cb50aefb8eebca1d1b3893dbe21cf126","date":1345550448,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepSkipListReader#setLastSkipData(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepSkipListReader#setLastSkipData(int).mjava","sourceNew":"  @Override\n  protected void setLastSkipData(int level) {\n    super.setLastSkipData(level);\n\n    lastPayloadPointer = payloadPointer[level];\n    lastPayloadLength = payloadLength[level];\n    if (freqIndex != null) {\n      lastFreqIndex.copyFrom(freqIndex[level]);\n    }\n    lastDocIndex.copyFrom(docIndex[level]);\n    if (lastPosIndex != null) {\n      lastPosIndex.copyFrom(posIndex[level]);\n    }\n\n    if (level > 0) {\n      if (freqIndex != null) {\n        freqIndex[level-1].copyFrom(freqIndex[level]);\n      }\n      docIndex[level-1].copyFrom(docIndex[level]);\n      if (posIndex != null) {\n        posIndex[level-1].copyFrom(posIndex[level]);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void setLastSkipData(int level) {\n    super.setLastSkipData(level);\n\n    lastPayloadPointer = payloadPointer[level];\n    lastPayloadLength = payloadLength[level];\n    if (freqIndex != null) {\n      lastFreqIndex.set(freqIndex[level]);\n    }\n    lastDocIndex.set(docIndex[level]);\n    if (lastPosIndex != null) {\n      lastPosIndex.set(posIndex[level]);\n    }\n\n    if (level > 0) {\n      if (freqIndex != null) {\n        freqIndex[level-1].set(freqIndex[level]);\n      }\n      docIndex[level-1].set(docIndex[level]);\n      if (posIndex != null) {\n        posIndex[level-1].set(posIndex[level]);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepSkipListReader#setLastSkipData(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepSkipListReader#setLastSkipData(int).mjava","sourceNew":"  @Override\n  protected void setLastSkipData(int level) {\n    super.setLastSkipData(level);\n\n    lastPayloadPointer = payloadPointer[level];\n    lastPayloadLength = payloadLength[level];\n    if (freqIndex != null) {\n      lastFreqIndex.copyFrom(freqIndex[level]);\n    }\n    lastDocIndex.copyFrom(docIndex[level]);\n    if (lastPosIndex != null) {\n      lastPosIndex.copyFrom(posIndex[level]);\n    }\n\n    if (level > 0) {\n      if (freqIndex != null) {\n        freqIndex[level-1].copyFrom(freqIndex[level]);\n      }\n      docIndex[level-1].copyFrom(docIndex[level]);\n      if (posIndex != null) {\n        posIndex[level-1].copyFrom(posIndex[level]);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void setLastSkipData(int level) {\n    super.setLastSkipData(level);\n\n    lastPayloadPointer = payloadPointer[level];\n    lastPayloadLength = payloadLength[level];\n    if (freqIndex != null) {\n      lastFreqIndex.set(freqIndex[level]);\n    }\n    lastDocIndex.set(docIndex[level]);\n    if (lastPosIndex != null) {\n      lastPosIndex.set(posIndex[level]);\n    }\n\n    if (level > 0) {\n      if (freqIndex != null) {\n        freqIndex[level-1].set(freqIndex[level]);\n      }\n      docIndex[level-1].set(docIndex[level]);\n      if (posIndex != null) {\n        posIndex[level-1].set(posIndex[level]);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/SepSkipListReader#setLastSkipData(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepSkipListReader#setLastSkipData(int).mjava","sourceNew":"  @Override\n  protected void setLastSkipData(int level) {\n    super.setLastSkipData(level);\n\n    lastPayloadPointer = payloadPointer[level];\n    lastPayloadLength = payloadLength[level];\n    if (freqIndex != null) {\n      lastFreqIndex.copyFrom(freqIndex[level]);\n    }\n    lastDocIndex.copyFrom(docIndex[level]);\n    if (lastPosIndex != null) {\n      lastPosIndex.copyFrom(posIndex[level]);\n    }\n\n    if (level > 0) {\n      if (freqIndex != null) {\n        freqIndex[level-1].copyFrom(freqIndex[level]);\n      }\n      docIndex[level-1].copyFrom(docIndex[level]);\n      if (posIndex != null) {\n        posIndex[level-1].copyFrom(posIndex[level]);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void setLastSkipData(int level) {\n    super.setLastSkipData(level);\n\n    lastPayloadPointer = payloadPointer[level];\n    lastPayloadLength = payloadLength[level];\n    if (freqIndex != null) {\n      lastFreqIndex.copyFrom(freqIndex[level]);\n    }\n    lastDocIndex.copyFrom(docIndex[level]);\n    if (lastPosIndex != null) {\n      lastPosIndex.copyFrom(posIndex[level]);\n    }\n\n    if (level > 0) {\n      if (freqIndex != null) {\n        freqIndex[level-1].copyFrom(freqIndex[level]);\n      }\n      docIndex[level-1].copyFrom(docIndex[level]);\n      if (posIndex != null) {\n        posIndex[level-1].copyFrom(posIndex[level]);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"f47dffe94742dac475f14312c342244a094323d3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","f47dffe94742dac475f14312c342244a094323d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"f47dffe94742dac475f14312c342244a094323d3":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["001b25b42373b22a52f399dbf072f1224632e8e6","f47dffe94742dac475f14312c342244a094323d3","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["001b25b42373b22a52f399dbf072f1224632e8e6","3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}