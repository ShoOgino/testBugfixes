{"path":"solr/src/test/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","commits":[{"id":"1a1f2fd9c5ec6d68e6c57de139a66673b613e13b","date":1290540872,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean).mjava","sourceNew":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","sourceOld":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst);\n    }\n\n    return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d20d5e40789b1c42f4f926e3174b271256c43657","date":1301641092,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","sourceOld":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b09c7419b92e982a901698cb401ce22ac35e4b04","date":1301668869,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","sourceOld":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","sourceOld":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","sourceOld":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a1f2fd9c5ec6d68e6c57de139a66673b613e13b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["3bb13258feba31ab676502787ab2e1779f129b7a","b09c7419b92e982a901698cb401ce22ac35e4b04"],"b09c7419b92e982a901698cb401ce22ac35e4b04":["1a1f2fd9c5ec6d68e6c57de139a66673b613e13b"],"d20d5e40789b1c42f4f926e3174b271256c43657":["1a1f2fd9c5ec6d68e6c57de139a66673b613e13b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1a1f2fd9c5ec6d68e6c57de139a66673b613e13b"],"45669a651c970812a680841b97a77cce06af559f":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b09c7419b92e982a901698cb401ce22ac35e4b04"],"3bb13258feba31ab676502787ab2e1779f129b7a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1a1f2fd9c5ec6d68e6c57de139a66673b613e13b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b09c7419b92e982a901698cb401ce22ac35e4b04"]},"commit2Childs":{"1a1f2fd9c5ec6d68e6c57de139a66673b613e13b":["b09c7419b92e982a901698cb401ce22ac35e4b04","d20d5e40789b1c42f4f926e3174b271256c43657","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1a1f2fd9c5ec6d68e6c57de139a66673b613e13b","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"b09c7419b92e982a901698cb401ce22ac35e4b04":["135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d20d5e40789b1c42f4f926e3174b271256c43657":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["45669a651c970812a680841b97a77cce06af559f"],"45669a651c970812a680841b97a77cce06af559f":[],"3bb13258feba31ab676502787ab2e1779f129b7a":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d20d5e40789b1c42f4f926e3174b271256c43657","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}