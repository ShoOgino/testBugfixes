{"path":"src/test/org/apache/lucene/store/_TestHelper#isFSInputStreamOpen(InputStream).mjava","commits":[{"id":"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1","date":1064527311,"type":0,"author":"Dmitry Serebrennikov","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/_TestHelper#isFSInputStreamOpen(InputStream).mjava","pathOld":"/dev/null","sourceNew":"    /** Given an instance of FSDirectory.FSInputStream, this method returns\n     *  true if the underlying file descriptor is valid, and false otherwise.\n     *  This can be used to determine if the OS file has been closed.\n     *  The descriptor becomes invalid when the non-clone instance of the \n     *  FSInputStream that owns this descriptor is closed. However, the\n     *  descriptor may possibly become invalid in other ways as well.\n     */\n    public static boolean isFSInputStreamOpen(InputStream is)\n    throws IOException\n    {\n        if (isFSInputStream(is)) {\n            FSInputStream fis = (FSInputStream) is;\n            return fis.isFDValid();\n        } else {\n            return false;\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1acbe60842541f8c38e2d60b03591478c9f91546","date":1066055498,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/_TestHelper#isFSInputStreamOpen(InputStream).mjava","pathOld":"src/test/org/apache/lucene/store/_TestHelper#isFSInputStreamOpen(InputStream).mjava","sourceNew":"    /** Given an instance of FSDirectory.FSInputStream, this method returns\n     *  true if the underlying file descriptor is valid, and false otherwise.\n     *  This can be used to determine if the OS file has been closed.\n     *  The descriptor becomes invalid when the non-clone instance of the\n     *  FSInputStream that owns this descriptor is closed. However, the\n     *  descriptor may possibly become invalid in other ways as well.\n     */\n    public static boolean isFSInputStreamOpen(InputStream is)\n    throws IOException\n    {\n        if (isFSInputStream(is)) {\n            FSInputStream fis = (FSInputStream) is;\n            return fis.isFDValid();\n        } else {\n            return false;\n        }\n    }\n\n","sourceOld":"    /** Given an instance of FSDirectory.FSInputStream, this method returns\n     *  true if the underlying file descriptor is valid, and false otherwise.\n     *  This can be used to determine if the OS file has been closed.\n     *  The descriptor becomes invalid when the non-clone instance of the \n     *  FSInputStream that owns this descriptor is closed. However, the\n     *  descriptor may possibly become invalid in other ways as well.\n     */\n    public static boolean isFSInputStreamOpen(InputStream is)\n    throws IOException\n    {\n        if (isFSInputStream(is)) {\n            FSInputStream fis = (FSInputStream) is;\n            return fis.isFDValid();\n        } else {\n            return false;\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":5,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/_TestHelper#isFSInputStreamOpen(IndexInput).mjava","pathOld":"src/test/org/apache/lucene/store/_TestHelper#isFSInputStreamOpen(InputStream).mjava","sourceNew":"    /** Given an instance of FSDirectory.FSInputStream, this method returns\n     *  true if the underlying file descriptor is valid, and false otherwise.\n     *  This can be used to determine if the OS file has been closed.\n     *  The descriptor becomes invalid when the non-clone instance of the\n     *  FSInputStream that owns this descriptor is closed. However, the\n     *  descriptor may possibly become invalid in other ways as well.\n     */\n    public static boolean isFSInputStreamOpen(IndexInput is)\n    throws IOException\n    {\n        if (isFSInputStream(is)) {\n            FSInputStream fis = (FSInputStream) is;\n            return fis.isFDValid();\n        } else {\n            return false;\n        }\n    }\n\n","sourceOld":"    /** Given an instance of FSDirectory.FSInputStream, this method returns\n     *  true if the underlying file descriptor is valid, and false otherwise.\n     *  This can be used to determine if the OS file has been closed.\n     *  The descriptor becomes invalid when the non-clone instance of the\n     *  FSInputStream that owns this descriptor is closed. However, the\n     *  descriptor may possibly become invalid in other ways as well.\n     */\n    public static boolean isFSInputStreamOpen(InputStream is)\n    throws IOException\n    {\n        if (isFSInputStream(is)) {\n            FSInputStream fis = (FSInputStream) is;\n            return fis.isFDValid();\n        } else {\n            return false;\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e971ba25509e21a130fef61f0687be0446ca27a0":["1acbe60842541f8c38e2d60b03591478c9f91546"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1acbe60842541f8c38e2d60b03591478c9f91546":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e971ba25509e21a130fef61f0687be0446ca27a0"]},"commit2Childs":{"e971ba25509e21a130fef61f0687be0446ca27a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"1acbe60842541f8c38e2d60b03591478c9f91546":["e971ba25509e21a130fef61f0687be0446ca27a0"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["1acbe60842541f8c38e2d60b03591478c9f91546"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}