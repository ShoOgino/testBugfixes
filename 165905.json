{"path":"lucene/src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos,IOContext).mjava","commits":[{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","sourceNew":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos, IOContext context) throws IOException {\n    boolean success = false;\n    try {\n      // Open files for TermVector storage\n      tvx = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION), context);\n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION), context);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION), context);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, tvx, tvd, tvf);\n      }\n    }\n\n    this.fieldInfos = fieldInfos;\n  }\n\n","sourceOld":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos) throws IOException {\n    boolean success = false;\n    try {\n      // Open files for TermVector storage\n      tvx = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, tvx, tvd, tvf);\n      }\n    }\n\n    this.fieldInfos = fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","sourceNew":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos, IOContext context) throws IOException {\n    boolean success = false;\n    try {\n      // Open files for TermVector storage\n      tvx = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION), context);\n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION), context);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION), context);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, tvx, tvd, tvf);\n      }\n    }\n\n    this.fieldInfos = fieldInfos;\n  }\n\n","sourceOld":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos) throws IOException {\n    boolean success = false;\n    try {\n      // Open files for TermVector storage\n      tvx = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, tvx, tvd, tvf);\n      }\n    }\n\n    this.fieldInfos = fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos).mjava","sourceNew":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos, IOContext context) throws IOException {\n    boolean success = false;\n    try {\n      // Open files for TermVector storage\n      tvx = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION), context);\n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION), context);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION), context);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, tvx, tvd, tvf);\n      }\n    }\n\n    this.fieldInfos = fieldInfos;\n  }\n\n","sourceOld":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos) throws IOException {\n    boolean success = false;\n    try {\n      // Open files for TermVector storage\n      tvx = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, tvx, tvd, tvf);\n      }\n    }\n\n    this.fieldInfos = fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24230fe54121f9be9d85f2c2067536296785e421","date":1314462346,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos,IOContext).mjava","sourceNew":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos, IOContext context) throws IOException {\n    boolean success = false;\n    try {\n      // Open files for TermVector storage\n      tvx = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION), context);\n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION), context);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION), context);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(tvx, tvd, tvf);\n      }\n    }\n\n    this.fieldInfos = fieldInfos;\n  }\n\n","sourceOld":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos, IOContext context) throws IOException {\n    boolean success = false;\n    try {\n      // Open files for TermVector storage\n      tvx = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION), context);\n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION), context);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION), context);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, tvx, tvd, tvf);\n      }\n    }\n\n    this.fieldInfos = fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultTermVectorsWriter#DefaultTermVectorsWriter(Directory,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsWriter#TermVectorsWriter(Directory,String,FieldInfos,IOContext).mjava","sourceNew":"  public DefaultTermVectorsWriter(Directory directory, String segment, IOContext context) throws IOException {\n    this.directory = directory;\n    this.segment = segment;\n    boolean success = false;\n    try {\n      // Open files for TermVector storage\n      tvx = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", DefaultTermVectorsReader.VECTORS_INDEX_EXTENSION), context);\n      tvx.writeInt(DefaultTermVectorsReader.FORMAT_CURRENT);\n      tvd = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", DefaultTermVectorsReader.VECTORS_DOCUMENTS_EXTENSION), context);\n      tvd.writeInt(DefaultTermVectorsReader.FORMAT_CURRENT);\n      tvf = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", DefaultTermVectorsReader.VECTORS_FIELDS_EXTENSION), context);\n      tvf.writeInt(DefaultTermVectorsReader.FORMAT_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(tvx, tvd, tvf);\n      }\n    }\n  }\n\n","sourceOld":"  public TermVectorsWriter(Directory directory, String segment,\n                           FieldInfos fieldInfos, IOContext context) throws IOException {\n    boolean success = false;\n    try {\n      // Open files for TermVector storage\n      tvx = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION), context);\n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION), context);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION), context);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(tvx, tvd, tvf);\n      }\n    }\n\n    this.fieldInfos = fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24230fe54121f9be9d85f2c2067536296785e421":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["24230fe54121f9be9d85f2c2067536296785e421"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc749c053615f5871f3b95715fe292f34e70a53"]},"commit2Childs":{"24230fe54121f9be9d85f2c2067536296785e421":["3cc749c053615f5871f3b95715fe292f34e70a53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd","5d004d0e0b3f65bb40da76d476d659d7888270e8","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"3cc749c053615f5871f3b95715fe292f34e70a53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["24230fe54121f9be9d85f2c2067536296785e421","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}