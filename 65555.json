{"path":"lucene/src/java/org/apache/lucene/index/IndexReader#fields().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#fields().mjava","pathOld":"/dev/null","sourceNew":"  /** Flex API: returns {@link Fields} for this reader.\n   *  This method may return null if the reader has no\n   *  postings.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need a {@link Fields} for such a reader,\n   * use {@link MultiFields#getFields}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public Fields fields() throws IOException {\n    return new LegacyFields(this);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20cf910d1892b0a0ff8543ec4551b6df2dc3de40","date":1275769896,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#fields().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#fields().mjava","sourceNew":"  /** Flex API: returns {@link Fields} for this reader.\n   *  This method may return null if the reader has no\n   *  postings.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need a {@link Fields} for such a reader,\n   * use {@link MultiFields#getFields}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract Fields fields() throws IOException;\n\n","sourceOld":"  /** Flex API: returns {@link Fields} for this reader.\n   *  This method may return null if the reader has no\n   *  postings.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need a {@link Fields} for such a reader,\n   * use {@link MultiFields#getFields}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public Fields fields() throws IOException {\n    return new LegacyFields(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0150c6e116b24d66f02d63fcb0758f336e8791e2","date":1307283797,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#fields().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#fields().mjava","sourceNew":"  /**\n   * Returns {@link Fields} for this reader.\n   * This method may return null if the reader has no\n   * postings.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need a {@link Fields} for such a reader,\n   * use {@link MultiFields#getFields}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract Fields fields() throws IOException;\n\n","sourceOld":"  /** Flex API: returns {@link Fields} for this reader.\n   *  This method may return null if the reader has no\n   *  postings.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need a {@link Fields} for such a reader,\n   * use {@link MultiFields#getFields}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract Fields fields() throws IOException;\n\n","bugFix":null,"bugIntro":["8028ab7a24273833d53d35eb160dba5b57283cf5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#fields().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#fields().mjava","sourceNew":"  /**\n   * Returns {@link Fields} for this reader.\n   * This method may return null if the reader has no\n   * postings.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need a {@link Fields} for such a reader,\n   * use {@link MultiFields#getFields}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract Fields fields() throws IOException;\n\n","sourceOld":"  /** Flex API: returns {@link Fields} for this reader.\n   *  This method may return null if the reader has no\n   *  postings.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need a {@link Fields} for such a reader,\n   * use {@link MultiFields#getFields}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract Fields fields() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#fields().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#fields().mjava","sourceNew":"  /**\n   * Returns {@link Fields} for this reader.\n   * This method may return null if the reader has no\n   * postings.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need a {@link Fields} for such a reader,\n   * use {@link MultiFields#getFields}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract Fields fields() throws IOException;\n\n","sourceOld":"  /** Flex API: returns {@link Fields} for this reader.\n   *  This method may return null if the reader has no\n   *  postings.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need a {@link Fields} for such a reader,\n   * use {@link MultiFields#getFields}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract Fields fields() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/AtomicIndexReader#fields().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#fields().mjava","sourceNew":"  /**\n   * Returns {@link Fields} for this reader.\n   * This method may return null if the reader has no\n   * postings.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need a {@link Fields} for such a reader,\n   * use {@link MultiFields#getFields}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract Fields fields() throws IOException;\n\n","sourceOld":"  /**\n   * Returns {@link Fields} for this reader.\n   * This method may return null if the reader has no\n   * postings.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need a {@link Fields} for such a reader,\n   * use {@link MultiFields#getFields}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract Fields fields() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#fields().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns {@link Fields} for this reader.\n   * This method may return null if the reader has no\n   * postings.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need a {@link Fields} for such a reader,\n   * use {@link MultiFields#getFields}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract Fields fields() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["20cf910d1892b0a0ff8543ec4551b6df2dc3de40","2e8d7ba2175f47e280231533f7d3016249cea88b"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["20cf910d1892b0a0ff8543ec4551b6df2dc3de40","0150c6e116b24d66f02d63fcb0758f336e8791e2"],"0150c6e116b24d66f02d63fcb0758f336e8791e2":["20cf910d1892b0a0ff8543ec4551b6df2dc3de40"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"20cf910d1892b0a0ff8543ec4551b6df2dc3de40":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["2e8d7ba2175f47e280231533f7d3016249cea88b","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["2e8d7ba2175f47e280231533f7d3016249cea88b"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","5cab9a86bd67202d20b6adc463008c8e982b070a","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"0150c6e116b24d66f02d63fcb0758f336e8791e2":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["20cf910d1892b0a0ff8543ec4551b6df2dc3de40"],"20cf910d1892b0a0ff8543ec4551b6df2dc3de40":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","0150c6e116b24d66f02d63fcb0758f336e8791e2"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}