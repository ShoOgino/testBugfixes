{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetResultsHandler#fetchPartitionResult(FacetArrays,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetResultsHandler#fetchPartitionResult(FacetArrays,int).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/search/FacetResultsHandler#fetchPartitionResult(FacetArrays,int).mjava","sourceNew":"  /**\n   * Fetch results of a single partition, given facet arrays for that partition,\n   * and based on the matching documents and faceted search parameters.\n   * \n   * @param arrays\n   *          facet arrays for the certain partition\n   * @param offset\n   *          offset in input arrays where partition starts\n   * @return temporary facet result, potentially, to be passed back to\n   *         <b>this</b> result handler for merging, or <b>null</b> in case that\n   *         constructor parameter, <code>facetRequest</code>, requests an\n   *         illegal FacetResult, like, e.g., a root node category path that\n   *         does not exist in constructor parameter <code>taxonomyReader</code>\n   *         .\n   * @throws IOException\n   *           on error\n   */\n  public abstract IntermediateFacetResult fetchPartitionResult(FacetArrays arrays, int offset) throws IOException;\n\n","sourceOld":"  /**\n   * Fetch results of a single partition, given facet arrays for that partition,\n   * and based on the matching documents and faceted search parameters.\n   * \n   * @param arrays\n   *          facet arrays for the certain partition\n   * @param offset\n   *          offset in input arrays where partition starts\n   * @return temporary facet result, potentially, to be passed back to\n   *         <b>this</b> result handler for merging, or <b>null</b> in case that\n   *         constructor parameter, <code>facetRequest</code>, requests an\n   *         illegal FacetResult, like, e.g., a root node category path that\n   *         does not exist in constructor parameter <code>taxonomyReader</code>\n   *         .\n   * @throws IOException\n   *           on error\n   */\n  public abstract IntermediateFacetResult fetchPartitionResult(FacetArrays arrays, int offset) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"571abba77e55fea386a38c0024f72ffa5b37a9ad","date":1360272747,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/partitions/search/PartitionsFacetResultsHandler#fetchPartitionResult(int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetResultsHandler#fetchPartitionResult(FacetArrays,int).mjava","sourceNew":"  /**\n   * Fetch results of a single partition, given facet arrays for that partition,\n   * and based on the matching documents and faceted search parameters.\n   * @param offset\n   *          offset in input arrays where partition starts\n   * \n   * @return temporary facet result, potentially, to be passed back to\n   *         <b>this</b> result handler for merging, or <b>null</b> in case that\n   *         constructor parameter, <code>facetRequest</code>, requests an\n   *         illegal FacetResult, like, e.g., a root node category path that\n   *         does not exist in constructor parameter <code>taxonomyReader</code>\n   *         .\n   * @throws IOException\n   *           on error\n   */\n  public abstract IntermediateFacetResult fetchPartitionResult(int offset) throws IOException;\n\n","sourceOld":"  /**\n   * Fetch results of a single partition, given facet arrays for that partition,\n   * and based on the matching documents and faceted search parameters.\n   * \n   * @param arrays\n   *          facet arrays for the certain partition\n   * @param offset\n   *          offset in input arrays where partition starts\n   * @return temporary facet result, potentially, to be passed back to\n   *         <b>this</b> result handler for merging, or <b>null</b> in case that\n   *         constructor parameter, <code>facetRequest</code>, requests an\n   *         illegal FacetResult, like, e.g., a root node category path that\n   *         does not exist in constructor parameter <code>taxonomyReader</code>\n   *         .\n   * @throws IOException\n   *           on error\n   */\n  public abstract IntermediateFacetResult fetchPartitionResult(FacetArrays arrays, int offset) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"571abba77e55fea386a38c0024f72ffa5b37a9ad":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["571abba77e55fea386a38c0024f72ffa5b37a9ad"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["571abba77e55fea386a38c0024f72ffa5b37a9ad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"571abba77e55fea386a38c0024f72ffa5b37a9ad":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}