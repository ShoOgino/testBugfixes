{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/UniformSplitTermsWriter#validateSettings(int,int).mjava","commits":[{"id":"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89","date":1567784912,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/UniformSplitTermsWriter#validateSettings(int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Validates the {@link #UniformSplitTermsWriter(PostingsWriterBase, SegmentWriteState, int, int, BlockEncoder) constructor}\n   * settings.\n   *\n   * @param targetNumBlockLines Target number of lines per block.\n   *                            Must be strictly greater than 0.\n   * @param deltaNumLines       Maximum allowed delta variation of the number of lines per block.\n   *                            Must be greater than or equal to 0 and strictly less than {@code targetNumBlockLines}.\n   *                            Additionally, {@code targetNumBlockLines} + {@code deltaNumLines} must be less than\n   *                            or equal to {@link #MAX_NUM_BLOCK_LINES}.\n   */\n  protected static void validateSettings(int targetNumBlockLines, int deltaNumLines) {\n    if (targetNumBlockLines <= 0) {\n      throw new IllegalArgumentException(\"Invalid negative or nul targetNumBlockLines=\" + targetNumBlockLines);\n    }\n    if (deltaNumLines < 0) {\n      throw new IllegalArgumentException(\"Invalid negative deltaNumLines=\" + deltaNumLines);\n    }\n    if (deltaNumLines >= targetNumBlockLines) {\n      throw new IllegalArgumentException(\"Invalid too large deltaNumLines=\" + deltaNumLines\n          + \", it must be < targetNumBlockLines=\" + targetNumBlockLines);\n    }\n    if (targetNumBlockLines + deltaNumLines > UniformSplitTermsWriter.MAX_NUM_BLOCK_LINES) {\n      throw new IllegalArgumentException(\"Invalid (targetNumBlockLines + deltaNumLines)=\"\n          + (targetNumBlockLines + deltaNumLines) + \", it must be <= MAX_NUM_BLOCK_LINES=\"\n          + UniformSplitTermsWriter.MAX_NUM_BLOCK_LINES);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}