{"path":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","commits":[{"id":"b47dabfbaff6449eedcd4321017ab2f73dfa06ab","date":1360797548,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","pathOld":"/dev/null","sourceNew":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    iwc.setMergeScheduler(new TrackingCMS());\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    for(int i=0;i<100000;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      doc.add(newTextField(\"field\", \"here is some text\", Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    w.close();\n    d.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["575cc56db877892d1e21debb443892a9b775fe33"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3b41f996b22bd5518650f897d050088ff808ec03","date":1360969107,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","pathOld":"/dev/null","sourceNew":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    iwc.setMergeScheduler(new TrackingCMS());\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    for(int i=0;i<100000;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      doc.add(newTextField(\"field\", \"here is some text\", Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    w.close();\n    d.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"575cc56db877892d1e21debb443892a9b775fe33","date":1361116844,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","sourceNew":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    iwc.setMergeScheduler(new TrackingCMS());\n    if (_TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    RandomIndexWriter w = new RandomIndexWriter(random(), d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    iwc.setMergeScheduler(new TrackingCMS());\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    for(int i=0;i<100000;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      doc.add(newTextField(\"field\", \"here is some text\", Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    w.close();\n    d.close();\n  }\n\n","bugFix":["b47dabfbaff6449eedcd4321017ab2f73dfa06ab"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c8567c25c02eeeb3e719841606a1269f3538ca","date":1361155063,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","sourceNew":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    iwc.setMergeScheduler(new TrackingCMS());\n    if (_TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    RandomIndexWriter w = new RandomIndexWriter(random(), d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    iwc.setMergeScheduler(new TrackingCMS());\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    for(int i=0;i<100000;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      doc.add(newTextField(\"field\", \"here is some text\", Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06698263c5125d11a04df79637e84372de4ac797","date":1361452578,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","sourceNew":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    iwc.setMergeScheduler(new TrackingCMS());\n    if (_TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    RandomIndexWriter w = new RandomIndexWriter(random(), d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    assertTrue(((TrackingCMS) iwc.getMergeScheduler()).totMergedBytes != 0);\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    iwc.setMergeScheduler(new TrackingCMS());\n    if (_TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    RandomIndexWriter w = new RandomIndexWriter(random(), d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70790b11e79a0366b21b2cc5b82d03b6fddcef81","date":1364594206,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","sourceNew":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    iwc.setMergeScheduler(new TrackingCMS());\n    if (_TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    RandomIndexWriter w = new RandomIndexWriter(random(), d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    assertTrue(((TrackingCMS) w.w.getConfig().getMergeScheduler()).totMergedBytes != 0);\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    iwc.setMergeScheduler(new TrackingCMS());\n    if (_TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    RandomIndexWriter w = new RandomIndexWriter(random(), d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    assertTrue(((TrackingCMS) iwc.getMergeScheduler()).totMergedBytes != 0);\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","sourceNew":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    iwc.setMergeScheduler(new TrackingCMS());\n    if (TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    RandomIndexWriter w = new RandomIndexWriter(random(), d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    assertTrue(((TrackingCMS) w.w.getConfig().getMergeScheduler()).totMergedBytes != 0);\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    iwc.setMergeScheduler(new TrackingCMS());\n    if (_TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    RandomIndexWriter w = new RandomIndexWriter(random(), d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    assertTrue(((TrackingCMS) w.w.getConfig().getMergeScheduler()).totMergedBytes != 0);\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","sourceNew":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    iwc.setMergeScheduler(new TrackingCMS());\n    if (TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    RandomIndexWriter w = new RandomIndexWriter(random(), d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    assertTrue(((TrackingCMS) w.w.getConfig().getMergeScheduler()).totMergedBytes != 0);\n    w.shutdown();\n    d.close();\n  }\n\n","sourceOld":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    iwc.setMergeScheduler(new TrackingCMS());\n    if (TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    RandomIndexWriter w = new RandomIndexWriter(random(), d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    assertTrue(((TrackingCMS) w.w.getConfig().getMergeScheduler()).totMergedBytes != 0);\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a677119c295ef994a716ca33562fac8d3bae1bac","date":1399580014,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","sourceNew":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    iwc.setMergeScheduler(new TrackingCMS());\n    if (TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    IndexWriter w = new IndexWriter(d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    assertTrue(((TrackingCMS) w.getConfig().getMergeScheduler()).totMergedBytes != 0);\n    w.shutdown();\n    d.close();\n  }\n\n","sourceOld":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    iwc.setMergeScheduler(new TrackingCMS());\n    if (TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    RandomIndexWriter w = new RandomIndexWriter(random(), d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    assertTrue(((TrackingCMS) w.w.getConfig().getMergeScheduler()).totMergedBytes != 0);\n    w.shutdown();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e31b905ea3fa25222d0062f2fcf9597da32bb5d","date":1403582278,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","sourceNew":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    CountDownLatch atLeastOneMerge = new CountDownLatch(1);\n    iwc.setMergeScheduler(new TrackingCMS(atLeastOneMerge));\n    if (TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    IndexWriter w = new IndexWriter(d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    atLeastOneMerge.await();\n    assertTrue(((TrackingCMS) w.getConfig().getMergeScheduler()).totMergedBytes != 0);\n    w.shutdown();\n    d.close();\n  }\n\n","sourceOld":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    iwc.setMergeScheduler(new TrackingCMS());\n    if (TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    IndexWriter w = new IndexWriter(d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    assertTrue(((TrackingCMS) w.getConfig().getMergeScheduler()).totMergedBytes != 0);\n    w.shutdown();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","sourceNew":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    CountDownLatch atLeastOneMerge = new CountDownLatch(1);\n    iwc.setMergeScheduler(new TrackingCMS(atLeastOneMerge));\n    if (TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    IndexWriter w = new IndexWriter(d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    atLeastOneMerge.await();\n    assertTrue(((TrackingCMS) w.getConfig().getMergeScheduler()).totMergedBytes != 0);\n    w.shutdown();\n    d.close();\n  }\n\n","sourceOld":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    CountDownLatch atLeastOneMerge = new CountDownLatch(1);\n    iwc.setMergeScheduler(new TrackingCMS(atLeastOneMerge));\n    if (TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    IndexWriter w = new IndexWriter(d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    atLeastOneMerge.await();\n    assertTrue(((TrackingCMS) w.getConfig().getMergeScheduler()).totMergedBytes != 0);\n    w.shutdown();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","sourceNew":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    CountDownLatch atLeastOneMerge = new CountDownLatch(1);\n    iwc.setMergeScheduler(new TrackingCMS(atLeastOneMerge));\n    if (TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    IndexWriter w = new IndexWriter(d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    atLeastOneMerge.await();\n    assertTrue(((TrackingCMS) w.getConfig().getMergeScheduler()).totMergedBytes != 0);\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    CountDownLatch atLeastOneMerge = new CountDownLatch(1);\n    iwc.setMergeScheduler(new TrackingCMS(atLeastOneMerge));\n    if (TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    IndexWriter w = new IndexWriter(d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    atLeastOneMerge.await();\n    assertTrue(((TrackingCMS) w.getConfig().getMergeScheduler()).totMergedBytes != 0);\n    w.shutdown();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e49088db00ea6cb232fbde9c8c646c721d4d049f","date":1411433559,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","sourceNew":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    CountDownLatch atLeastOneMerge = new CountDownLatch(1);\n    iwc.setMergeScheduler(new TrackingCMS(atLeastOneMerge));\n    if (TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(TestUtil.alwaysPostingsFormat(TestUtil.getDefaultPostingsFormat()));\n    }\n    IndexWriter w = new IndexWriter(d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    atLeastOneMerge.await();\n    assertTrue(((TrackingCMS) w.getConfig().getMergeScheduler()).totMergedBytes != 0);\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    CountDownLatch atLeastOneMerge = new CountDownLatch(1);\n    iwc.setMergeScheduler(new TrackingCMS(atLeastOneMerge));\n    if (TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    }\n    IndexWriter w = new IndexWriter(d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    atLeastOneMerge.await();\n    assertTrue(((TrackingCMS) w.getConfig().getMergeScheduler()).totMergedBytes != 0);\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f","date":1579652839,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testTotalBytesSize().mjava","sourceNew":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    CountDownLatch atLeastOneMerge = new CountDownLatch(1);\n    iwc.setMergeScheduler(new TrackingCMS(atLeastOneMerge));\n    if (TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(TestUtil.alwaysPostingsFormat(TestUtil.getDefaultPostingsFormat()));\n    }\n    IndexWriter w = new IndexWriter(d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    atLeastOneMerge.await();\n    assertTrue(((TrackingCMS) w.getConfig().getMergeScheduler()).totMergedBytes != 0);\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testTotalBytesSize() throws Exception {\n    Directory d = newDirectory();\n    if (d instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)d).setThrottling(MockDirectoryWrapper.Throttling.NEVER);\n    }\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(5);\n    CountDownLatch atLeastOneMerge = new CountDownLatch(1);\n    iwc.setMergeScheduler(new TrackingCMS(atLeastOneMerge));\n    if (TestUtil.getPostingsFormat(\"id\").equals(\"SimpleText\")) {\n      // no\n      iwc.setCodec(TestUtil.alwaysPostingsFormat(TestUtil.getDefaultPostingsFormat()));\n    }\n    IndexWriter w = new IndexWriter(d, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n\n      if (random().nextBoolean()) {\n        w.deleteDocuments(new Term(\"id\", \"\"+random().nextInt(i+1)));\n      }\n    }\n    atLeastOneMerge.await();\n    assertTrue(((TrackingCMS) w.getConfig().getMergeScheduler()).totMergedBytes != 0);\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f":["e49088db00ea6cb232fbde9c8c646c721d4d049f"],"70790b11e79a0366b21b2cc5b82d03b6fddcef81":["06698263c5125d11a04df79637e84372de4ac797"],"e49088db00ea6cb232fbde9c8c646c721d4d049f":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["0e31b905ea3fa25222d0062f2fcf9597da32bb5d"],"06698263c5125d11a04df79637e84372de4ac797":["575cc56db877892d1e21debb443892a9b775fe33"],"6613659748fe4411a7dcf85266e55db1f95f7315":["70790b11e79a0366b21b2cc5b82d03b6fddcef81"],"a677119c295ef994a716ca33562fac8d3bae1bac":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"575cc56db877892d1e21debb443892a9b775fe33":["b47dabfbaff6449eedcd4321017ab2f73dfa06ab"],"09c8567c25c02eeeb3e719841606a1269f3538ca":["3b41f996b22bd5518650f897d050088ff808ec03","575cc56db877892d1e21debb443892a9b775fe33"],"3b41f996b22bd5518650f897d050088ff808ec03":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b47dabfbaff6449eedcd4321017ab2f73dfa06ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["6613659748fe4411a7dcf85266e55db1f95f7315"],"0e31b905ea3fa25222d0062f2fcf9597da32bb5d":["a677119c295ef994a716ca33562fac8d3bae1bac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f"],"b47dabfbaff6449eedcd4321017ab2f73dfa06ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"70790b11e79a0366b21b2cc5b82d03b6fddcef81":["6613659748fe4411a7dcf85266e55db1f95f7315"],"e49088db00ea6cb232fbde9c8c646c721d4d049f":["fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"06698263c5125d11a04df79637e84372de4ac797":["70790b11e79a0366b21b2cc5b82d03b6fddcef81"],"6613659748fe4411a7dcf85266e55db1f95f7315":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a677119c295ef994a716ca33562fac8d3bae1bac":["0e31b905ea3fa25222d0062f2fcf9597da32bb5d"],"575cc56db877892d1e21debb443892a9b775fe33":["06698263c5125d11a04df79637e84372de4ac797","09c8567c25c02eeeb3e719841606a1269f3538ca"],"09c8567c25c02eeeb3e719841606a1269f3538ca":[],"3b41f996b22bd5518650f897d050088ff808ec03":["09c8567c25c02eeeb3e719841606a1269f3538ca"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b41f996b22bd5518650f897d050088ff808ec03","b47dabfbaff6449eedcd4321017ab2f73dfa06ab"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["e49088db00ea6cb232fbde9c8c646c721d4d049f"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["a677119c295ef994a716ca33562fac8d3bae1bac"],"0e31b905ea3fa25222d0062f2fcf9597da32bb5d":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"b47dabfbaff6449eedcd4321017ab2f73dfa06ab":["575cc56db877892d1e21debb443892a9b775fe33","3b41f996b22bd5518650f897d050088ff808ec03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09c8567c25c02eeeb3e719841606a1269f3538ca","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}