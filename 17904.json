{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/response/SuggesterResponse#SuggesterResponse(Map[String,NamedList[Object]]).mjava","commits":[{"id":"096ce9d7ec9914ca48a630b7686cc0a413cb74d7","date":1437121947,"type":0,"author":"Tommaso Teofili","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/SuggesterResponse#SuggesterResponse(Map[String,NamedList[Object]]).mjava","pathOld":"/dev/null","sourceNew":"  public SuggesterResponse(Map<String, NamedList<Object>> suggestInfo) {\n    for (Map.Entry<String, NamedList<Object>> entry : suggestInfo.entrySet()) {\n      SimpleOrderedMap suggestionsNode = (SimpleOrderedMap) entry.getValue().getVal(0);\n      List<SimpleOrderedMap> suggestionListToParse;\n      List<Suggestion> suggestionList = new LinkedList<>();\n      if (suggestionsNode != null) {\n\n        suggestionListToParse = (List<SimpleOrderedMap>) suggestionsNode.get(SUGGESTIONS_NODE_NAME);\n        for (SimpleOrderedMap suggestion : suggestionListToParse) {\n          String term = (String) suggestion.get(TERM_NODE_NAME);\n          long weight = (long) suggestion.get(WEIGHT_NODE_NAME);\n          String payload = (String) suggestion.get(PAYLOAD_NODE_NAME);\n\n          Suggestion parsedSuggestion = new Suggestion(term, weight, payload);\n          suggestionList.add(parsedSuggestion);\n        }\n        suggestionsPerDictionary.put(entry.getKey(), suggestionList);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9dec2d3920a73691e8110290418baf8efad1303","date":1437131425,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/SuggesterResponse#SuggesterResponse(Map[String,NamedList[Object]]).mjava","pathOld":"/dev/null","sourceNew":"  public SuggesterResponse(Map<String, NamedList<Object>> suggestInfo) {\n    for (Map.Entry<String, NamedList<Object>> entry : suggestInfo.entrySet()) {\n      SimpleOrderedMap suggestionsNode = (SimpleOrderedMap) entry.getValue().getVal(0);\n      List<SimpleOrderedMap> suggestionListToParse;\n      List<Suggestion> suggestionList = new LinkedList<>();\n      if (suggestionsNode != null) {\n\n        suggestionListToParse = (List<SimpleOrderedMap>) suggestionsNode.get(SUGGESTIONS_NODE_NAME);\n        for (SimpleOrderedMap suggestion : suggestionListToParse) {\n          String term = (String) suggestion.get(TERM_NODE_NAME);\n          long weight = (long) suggestion.get(WEIGHT_NODE_NAME);\n          String payload = (String) suggestion.get(PAYLOAD_NODE_NAME);\n\n          Suggestion parsedSuggestion = new Suggestion(term, weight, payload);\n          suggestionList.add(parsedSuggestion);\n        }\n        suggestionsPerDictionary.put(entry.getKey(), suggestionList);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7dfea4f7c80813344b0152e37fc18b31369e8ff","date":1592136683,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/SuggesterResponse#SuggesterResponse(Map[String,NamedList[Object]]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/response/SuggesterResponse#SuggesterResponse(Map[String,NamedList[Object]]).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public SuggesterResponse(Map<String, NamedList<Object>> suggestInfo) {\n    for (Map.Entry<String, NamedList<Object>> entry : suggestInfo.entrySet()) {\n      SimpleOrderedMap suggestionsNode = (SimpleOrderedMap) entry.getValue().getVal(0);\n      List<SimpleOrderedMap> suggestionListToParse;\n      List<Suggestion> suggestionList = new LinkedList<>();\n      if (suggestionsNode != null) {\n\n        suggestionListToParse = (List<SimpleOrderedMap>) suggestionsNode.get(SUGGESTIONS_NODE_NAME);\n        for (SimpleOrderedMap suggestion : suggestionListToParse) {\n          String term = (String) suggestion.get(TERM_NODE_NAME);\n          long weight = (long) suggestion.get(WEIGHT_NODE_NAME);\n          String payload = (String) suggestion.get(PAYLOAD_NODE_NAME);\n\n          Suggestion parsedSuggestion = new Suggestion(term, weight, payload);\n          suggestionList.add(parsedSuggestion);\n        }\n        suggestionsPerDictionary.put(entry.getKey(), suggestionList);\n      }\n    }\n  }\n\n","sourceOld":"  public SuggesterResponse(Map<String, NamedList<Object>> suggestInfo) {\n    for (Map.Entry<String, NamedList<Object>> entry : suggestInfo.entrySet()) {\n      SimpleOrderedMap suggestionsNode = (SimpleOrderedMap) entry.getValue().getVal(0);\n      List<SimpleOrderedMap> suggestionListToParse;\n      List<Suggestion> suggestionList = new LinkedList<>();\n      if (suggestionsNode != null) {\n\n        suggestionListToParse = (List<SimpleOrderedMap>) suggestionsNode.get(SUGGESTIONS_NODE_NAME);\n        for (SimpleOrderedMap suggestion : suggestionListToParse) {\n          String term = (String) suggestion.get(TERM_NODE_NAME);\n          long weight = (long) suggestion.get(WEIGHT_NODE_NAME);\n          String payload = (String) suggestion.get(PAYLOAD_NODE_NAME);\n\n          Suggestion parsedSuggestion = new Suggestion(term, weight, payload);\n          suggestionList.add(parsedSuggestion);\n        }\n        suggestionsPerDictionary.put(entry.getKey(), suggestionList);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["096ce9d7ec9914ca48a630b7686cc0a413cb74d7"],"f9dec2d3920a73691e8110290418baf8efad1303":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","096ce9d7ec9914ca48a630b7686cc0a413cb74d7"],"096ce9d7ec9914ca48a630b7686cc0a413cb74d7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f9dec2d3920a73691e8110290418baf8efad1303","096ce9d7ec9914ca48a630b7686cc0a413cb74d7"],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f9dec2d3920a73691e8110290418baf8efad1303":[],"096ce9d7ec9914ca48a630b7686cc0a413cb74d7":["a7dfea4f7c80813344b0152e37fc18b31369e8ff","f9dec2d3920a73691e8110290418baf8efad1303"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f9dec2d3920a73691e8110290418baf8efad1303","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}