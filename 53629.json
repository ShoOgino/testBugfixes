{"path":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#HaversineConstFunction(double,double,VectorValueSource).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#HaversineConstFunction(double,double,VectorValueSource).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#HaversineConstFunction(double,double,VectorValueSource).mjava","sourceNew":"  public HaversineConstFunction(double latCenter, double lonCenter, VectorValueSource vs) {\n    this.latCenter = latCenter;\n    this.lonCenter = lonCenter;\n    this.p2 = vs;\n    this.latSource = p2.getSources().get(0);\n    this.lonSource = p2.getSources().get(1);\n    this.latCenterRad_cos = Math.cos(latCenter * DistanceUtils.DEGREES_TO_RADIANS);\n  }\n\n","sourceOld":"  public HaversineConstFunction(double latCenter, double lonCenter, VectorValueSource vs) {\n    this.latCenter = latCenter;\n    this.lonCenter = lonCenter;\n    this.p2 = vs;\n    this.latSource = p2.getSources().get(0);\n    this.lonSource = p2.getSources().get(1);\n    this.latCenterRad_cos = Math.cos(latCenter * DistanceUtils.DEGREES_TO_RADIANS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#HaversineConstFunction(double,double,VectorValueSource).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#HaversineConstFunction(double,double,VectorValueSource).mjava","sourceNew":"  public HaversineConstFunction(double latCenter, double lonCenter, VectorValueSource vs) {\n    this.latCenter = latCenter;\n    this.lonCenter = lonCenter;\n    this.p2 = vs;\n    this.latSource = p2.getSources().get(0);\n    this.lonSource = p2.getSources().get(1);\n    this.latCenterRad_cos = Math.cos(latCenter * DistanceUtils.DEGREES_TO_RADIANS);\n  }\n\n","sourceOld":"  public HaversineConstFunction(double latCenter, double lonCenter, VectorValueSource vs) {\n    this.latCenter = latCenter;\n    this.lonCenter = lonCenter;\n    this.p2 = vs;\n    this.latSource = p2.getSources().get(0);\n    this.lonSource = p2.getSources().get(1);\n    this.latCenterRad_cos = Math.cos(latCenter * DistanceUtils.DEGREES_TO_RADIANS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#HaversineConstFunction(double,double,VectorValueSource).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#HaversineConstFunction(double,double,VectorValueSource).mjava","sourceNew":"  public HaversineConstFunction(double latCenter, double lonCenter, VectorValueSource vs) {\n    this.latCenter = latCenter;\n    this.lonCenter = lonCenter;\n    this.p2 = vs;\n    this.latSource = p2.getSources().get(0);\n    this.lonSource = p2.getSources().get(1);\n    this.latCenterRad_cos = Math.cos(latCenter * DistanceUtils.DEGREES_TO_RADIANS);\n  }\n\n","sourceOld":"  public HaversineConstFunction(double latCenter, double lonCenter, VectorValueSource vs) {\n    this.latCenter = latCenter;\n    this.lonCenter = lonCenter;\n    this.p2 = vs;\n    this.latSource = p2.getSources().get(0);\n    this.lonSource = p2.getSources().get(1);\n    this.latCenterRad_cos = Math.cos(latCenter * DistanceUtils.DEGREES_TO_RADIANS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3859e567816d5987602f2a7ae2469fcdf17f745e","date":1329895924,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#HaversineConstFunction(double,double,VectorValueSource).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#HaversineConstFunction(double,double,VectorValueSource).mjava","sourceNew":"  public HaversineConstFunction(double latCenter, double lonCenter, VectorValueSource vs) {\n    this.latCenter = latCenter;\n    this.lonCenter = lonCenter;\n    this.p2 = vs;\n    this.latSource = p2.getSources().get(0);\n    this.lonSource = p2.getSources().get(1);\n    this.latCenterRad_cos = Math.cos(Math.toRadians(latCenter));\n  }\n\n","sourceOld":"  public HaversineConstFunction(double latCenter, double lonCenter, VectorValueSource vs) {\n    this.latCenter = latCenter;\n    this.lonCenter = lonCenter;\n    this.p2 = vs;\n    this.latSource = p2.getSources().get(0);\n    this.lonSource = p2.getSources().get(1);\n    this.latCenterRad_cos = Math.cos(latCenter * DistanceUtils.DEGREES_TO_RADIANS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e47768b261c28e7e6032060e8331475c81057953","date":1331681297,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#HaversineConstFunction(double,double,VectorValueSource).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#HaversineConstFunction(double,double,VectorValueSource).mjava","sourceNew":"  public HaversineConstFunction(double latCenter, double lonCenter, VectorValueSource vs) {\n    this.latCenter = latCenter;\n    this.lonCenter = lonCenter;\n    this.p2 = vs;\n    this.latSource = p2.getSources().get(0);\n    this.lonSource = p2.getSources().get(1);\n    this.latCenterRad_cos = Math.cos(Math.toRadians(latCenter));\n  }\n\n","sourceOld":"  public HaversineConstFunction(double latCenter, double lonCenter, VectorValueSource vs) {\n    this.latCenter = latCenter;\n    this.lonCenter = lonCenter;\n    this.p2 = vs;\n    this.latSource = p2.getSources().get(0);\n    this.lonSource = p2.getSources().get(1);\n    this.latCenterRad_cos = Math.cos(latCenter * DistanceUtils.DEGREES_TO_RADIANS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8726333bca804ff1ebd79d1310561641b5dfcb9e","date":1331697951,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#HaversineConstFunction(double,double,VectorValueSource).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#HaversineConstFunction(double,double,VectorValueSource).mjava","sourceNew":"  public HaversineConstFunction(double latCenter, double lonCenter, VectorValueSource vs) {\n    this.latCenter = latCenter;\n    this.lonCenter = lonCenter;\n    this.p2 = vs;\n    this.latSource = p2.getSources().get(0);\n    this.lonSource = p2.getSources().get(1);\n    this.latCenterRad_cos = Math.cos(latCenter * DEGREES_TO_RADIANS);\n  }\n\n","sourceOld":"  public HaversineConstFunction(double latCenter, double lonCenter, VectorValueSource vs) {\n    this.latCenter = latCenter;\n    this.lonCenter = lonCenter;\n    this.p2 = vs;\n    this.latSource = p2.getSources().get(0);\n    this.lonSource = p2.getSources().get(1);\n    this.latCenterRad_cos = Math.cos(Math.toRadians(latCenter));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#HaversineConstFunction(double,double,VectorValueSource).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#HaversineConstFunction(double,double,VectorValueSource).mjava","sourceNew":"  public HaversineConstFunction(double latCenter, double lonCenter, VectorValueSource vs) {\n    this.latCenter = latCenter;\n    this.lonCenter = lonCenter;\n    this.p2 = vs;\n    this.latSource = p2.getSources().get(0);\n    this.lonSource = p2.getSources().get(1);\n    this.latCenterRad_cos = Math.cos(latCenter * DEGREES_TO_RADIANS);\n  }\n\n","sourceOld":"  public HaversineConstFunction(double latCenter, double lonCenter, VectorValueSource vs) {\n    this.latCenter = latCenter;\n    this.lonCenter = lonCenter;\n    this.p2 = vs;\n    this.latSource = p2.getSources().get(0);\n    this.lonSource = p2.getSources().get(1);\n    this.latCenterRad_cos = Math.cos(latCenter * DEGREES_TO_RADIANS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#HaversineConstFunction(double,double,VectorValueSource).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#HaversineConstFunction(double,double,VectorValueSource).mjava","sourceNew":"  public HaversineConstFunction(double latCenter, double lonCenter, VectorValueSource vs) {\n    this.latCenter = latCenter;\n    this.lonCenter = lonCenter;\n    this.p2 = vs;\n    this.latSource = p2.getSources().get(0);\n    this.lonSource = p2.getSources().get(1);\n    this.latCenterRad_cos = Math.cos(latCenter * DEGREES_TO_RADIANS);\n  }\n\n","sourceOld":"  public HaversineConstFunction(double latCenter, double lonCenter, VectorValueSource vs) {\n    this.latCenter = latCenter;\n    this.lonCenter = lonCenter;\n    this.p2 = vs;\n    this.latSource = p2.getSources().get(0);\n    this.lonSource = p2.getSources().get(1);\n    this.latCenterRad_cos = Math.cos(latCenter * DEGREES_TO_RADIANS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["8726333bca804ff1ebd79d1310561641b5dfcb9e","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8726333bca804ff1ebd79d1310561641b5dfcb9e":["e47768b261c28e7e6032060e8331475c81057953"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["8726333bca804ff1ebd79d1310561641b5dfcb9e"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e47768b261c28e7e6032060e8331475c81057953":["c26f00b574427b55127e869b935845554afde1fa","3859e567816d5987602f2a7ae2469fcdf17f745e"],"3859e567816d5987602f2a7ae2469fcdf17f745e":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19275ba31e621f6da1b83bf13af75233876fd3d4"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["e47768b261c28e7e6032060e8331475c81057953","3859e567816d5987602f2a7ae2469fcdf17f745e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"8726333bca804ff1ebd79d1310561641b5dfcb9e":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"e47768b261c28e7e6032060e8331475c81057953":["8726333bca804ff1ebd79d1310561641b5dfcb9e"],"3859e567816d5987602f2a7ae2469fcdf17f745e":["e47768b261c28e7e6032060e8331475c81057953"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}