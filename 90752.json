{"path":"modules/spatial/strategy/src/java/org/apache/lucene/spatial/strategy/util/CachingDoubleValueSource#getValues(Map,AtomicReaderContext).mjava","commits":[{"id":"c2047ba81272a0c4edeb11b1c7810ee23ba73502","date":1329808655,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial/strategy/src/java/org/apache/lucene/spatial/strategy/util/CachingDoubleValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/spatial-TEMP/src/java/org/apache/lucene/spatial/strategy/util/CachingDoubleValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final int base = readerContext.docBase;\n    final FunctionValues vals = source.getValues(context,readerContext);\n    return new FunctionValues() {\n\n      @Override\n      public double doubleVal(int doc) {\n        Integer key = Integer.valueOf( base+doc );\n        Double v = cache.get( key );\n        if( v == null ) {\n          v = Double.valueOf( vals.doubleVal(doc) );\n          cache.put( key, v );\n        }\n        return v.doubleValue();\n      }\n\n      @Override\n      public float floatVal(int doc) {\n        return (float)doubleVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return doubleVal(doc)+\"\";\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final int base = readerContext.docBase;\n    final FunctionValues vals = source.getValues(context,readerContext);\n    return new FunctionValues() {\n\n      @Override\n      public double doubleVal(int doc) {\n        Integer key = Integer.valueOf( base+doc );\n        Double v = cache.get( key );\n        if( v == null ) {\n          v = Double.valueOf( vals.doubleVal(doc) );\n          cache.put( key, v );\n        }\n        return v.doubleValue();\n      }\n\n      @Override\n      public float floatVal(int doc) {\n        return (float)doubleVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return doubleVal(doc)+\"\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a24bff9b8b5990b2e39206b8742b848c8d88181","date":1330491455,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial/src/java/org/apache/lucene/spatial/strategy/util/CachingDoubleValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/spatial/strategy/src/java/org/apache/lucene/spatial/strategy/util/CachingDoubleValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final int base = readerContext.docBase;\n    final FunctionValues vals = source.getValues(context,readerContext);\n    return new FunctionValues() {\n\n      @Override\n      public double doubleVal(int doc) {\n        Integer key = Integer.valueOf( base+doc );\n        Double v = cache.get( key );\n        if( v == null ) {\n          v = Double.valueOf( vals.doubleVal(doc) );\n          cache.put( key, v );\n        }\n        return v.doubleValue();\n      }\n\n      @Override\n      public float floatVal(int doc) {\n        return (float)doubleVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return doubleVal(doc)+\"\";\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final int base = readerContext.docBase;\n    final FunctionValues vals = source.getValues(context,readerContext);\n    return new FunctionValues() {\n\n      @Override\n      public double doubleVal(int doc) {\n        Integer key = Integer.valueOf( base+doc );\n        Double v = cache.get( key );\n        if( v == null ) {\n          v = Double.valueOf( vals.doubleVal(doc) );\n          cache.put( key, v );\n        }\n        return v.doubleValue();\n      }\n\n      @Override\n      public float floatVal(int doc) {\n        return (float)doubleVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return doubleVal(doc)+\"\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6a24bff9b8b5990b2e39206b8742b848c8d88181":["c2047ba81272a0c4edeb11b1c7810ee23ba73502"],"c2047ba81272a0c4edeb11b1c7810ee23ba73502":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6a24bff9b8b5990b2e39206b8742b848c8d88181":[],"c2047ba81272a0c4edeb11b1c7810ee23ba73502":["6a24bff9b8b5990b2e39206b8742b848c8d88181"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c2047ba81272a0c4edeb11b1c7810ee23ba73502","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6a24bff9b8b5990b2e39206b8742b848c8d88181","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}