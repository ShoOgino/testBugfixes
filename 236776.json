{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest#deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema().mjava","commits":[{"id":"c6ff97491f7791aa98e90d71c4c7fee58688c37b","date":1434817448,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest#deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema() throws Exception {\n    String srcFieldName = \"copyfield\";\n    String destFieldName1 = \"destField1\", destFieldName2 = \"destField2\";\n    SchemaRequest.DeleteCopyField deleteCopyFieldsRequest =\n        new SchemaRequest.DeleteCopyField(srcFieldName,\n            Arrays.asList(destFieldName1, destFieldName2));\n    SchemaResponse.UpdateResponse deleteCopyFieldResponse = deleteCopyFieldsRequest.process(getSolrClient());\n    assertNotNull(deleteCopyFieldResponse.getResponse().get(\"errors\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc375e2ab3b7cc0344f8cd85189e42b87fce01a3","date":1515516930,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest#deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest#deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema().mjava","sourceNew":"  @Test\n  public void deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema() throws Exception {\n    String srcFieldName = \"copyfield\";\n    String destFieldName1 = \"destField1\", destFieldName2 = \"destField2\";\n    SchemaRequest.DeleteCopyField deleteCopyFieldsRequest =\n        new SchemaRequest.DeleteCopyField(srcFieldName,\n            Arrays.asList(destFieldName1, destFieldName2));\n    assertFailedSchemaResponse(() -> deleteCopyFieldsRequest.process(getSolrClient()),\n        \"Copy field directive not found: '\" + srcFieldName + \"' -> '\" + destFieldName1 + \"'\");\n  }\n\n","sourceOld":"  @Test\n  public void deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema() throws Exception {\n    String srcFieldName = \"copyfield\";\n    String destFieldName1 = \"destField1\", destFieldName2 = \"destField2\";\n    SchemaRequest.DeleteCopyField deleteCopyFieldsRequest =\n        new SchemaRequest.DeleteCopyField(srcFieldName,\n            Arrays.asList(destFieldName1, destFieldName2));\n    SchemaResponse.UpdateResponse deleteCopyFieldResponse = deleteCopyFieldsRequest.process(getSolrClient());\n    assertNotNull(deleteCopyFieldResponse.getResponse().get(\"errors\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest#deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest#deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema().mjava","sourceNew":"  @Test\n  public void deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema() throws Exception {\n    String srcFieldName = \"copyfield\";\n    String destFieldName1 = \"destField1\", destFieldName2 = \"destField2\";\n    SchemaRequest.DeleteCopyField deleteCopyFieldsRequest =\n        new SchemaRequest.DeleteCopyField(srcFieldName,\n            Arrays.asList(destFieldName1, destFieldName2));\n    assertFailedSchemaResponse(() -> deleteCopyFieldsRequest.process(getSolrClient()),\n        \"Copy field directive not found: '\" + srcFieldName + \"' -> '\" + destFieldName1 + \"'\");\n  }\n\n","sourceOld":"  @Test\n  public void deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema() throws Exception {\n    String srcFieldName = \"copyfield\";\n    String destFieldName1 = \"destField1\", destFieldName2 = \"destField2\";\n    SchemaRequest.DeleteCopyField deleteCopyFieldsRequest =\n        new SchemaRequest.DeleteCopyField(srcFieldName,\n            Arrays.asList(destFieldName1, destFieldName2));\n    SchemaResponse.UpdateResponse deleteCopyFieldResponse = deleteCopyFieldsRequest.process(getSolrClient());\n    assertNotNull(deleteCopyFieldResponse.getResponse().get(\"errors\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["c6ff97491f7791aa98e90d71c4c7fee58688c37b","dc375e2ab3b7cc0344f8cd85189e42b87fce01a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dc375e2ab3b7cc0344f8cd85189e42b87fce01a3":["c6ff97491f7791aa98e90d71c4c7fee58688c37b"],"c6ff97491f7791aa98e90d71c4c7fee58688c37b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c6ff97491f7791aa98e90d71c4c7fee58688c37b"],"dc375e2ab3b7cc0344f8cd85189e42b87fce01a3":["b94236357aaa22b76c10629851fe4e376e0cea82"],"c6ff97491f7791aa98e90d71c4c7fee58688c37b":["b94236357aaa22b76c10629851fe4e376e0cea82","dc375e2ab3b7cc0344f8cd85189e42b87fce01a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}