{"path":"solr/core/src/test/org/apache/solr/util/SolrLogPostToolTest#testUpdateRecords().mjava","commits":[{"id":"2e38054de362483189e0fdd850b779ed766aa7aa","date":1578059239,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/SolrLogPostToolTest#testUpdateRecords().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testUpdateRecords() throws Exception{\n    String record = \"2019-12-25 20:38:23.498 INFO  (qtp2103763750-126) [c:logs3 s:shard1 r:core_node2 x:logs3_shard1_replica_n1] o.a.s.u.p.LogUpdateProcessorFactory [logs3_shard1_replica_n1]  webapp=/solr path=/update params={commitWithin=1000&overwrite=true&wt=json&_=1577306114481}{deleteByQuery=*:* (-1653925534487281664)} 0 11\\n\" +\n                    \"2019-12-25 20:42:13.411 INFO  (qtp2103763750-303) [c:logs5 s:shard1 r:core_node2 x:logs5_shard1_replica_n1] o.a.s.u.p.LogUpdateProcessorFactory [logs5_shard1_replica_n1]  webapp=/solr path=/update params={commitWithin=1000&overwrite=true&wt=json&_=1577306114481}{delete=[03bbe975-728a-4df8-aa25-fe25049dc0ef (-1653925775577972736)]} 0 1\\n\";\n    List<SolrInputDocument> docs = readDocs(record);\n    assertEquals(docs.size(), 2);\n    SolrInputDocument doc = docs.get(0);\n    SolrInputField date = doc.getField(\"date_dt\");\n    SolrInputField type = doc.getField(\"type_s\");\n    SolrInputField core = doc.getField(\"core_s\");\n    SolrInputField collection = doc.getField(\"collection_s\");\n    assertEquals(date.getValue(), \"2019-12-25T20:38:23.498\");\n    assertEquals(type.getValue(), \"deleteByQuery\");\n    assertEquals(collection.getValue(), \"logs3\");\n    assertEquals(core.getValue(), \"logs3_shard1_replica_n1\");\n\n    SolrInputDocument doc1 = docs.get(1);\n    SolrInputField date1 = doc1.getField(\"date_dt\");\n    SolrInputField type1 = doc1.getField(\"type_s\");\n    SolrInputField core1 = doc1.getField(\"core_s\");\n    SolrInputField collection1= doc1.getField(\"collection_s\");\n    assertEquals(date1.getValue(), \"2019-12-25T20:42:13.411\");\n    assertEquals(type1.getValue(), \"delete\");\n    assertEquals(collection1.getValue(), \"logs5\");\n    assertEquals(core1.getValue(), \"logs5_shard1_replica_n1\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca62564055241632cd20d65b5ecb8c8e93bd60c4","date":1578383112,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/SolrLogPostToolTest#testUpdateRecords().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testUpdateRecords() throws Exception{\n    String record = \"2019-12-25 20:38:23.498 INFO  (qtp2103763750-126) [c:logs3 s:shard1 r:core_node2 x:logs3_shard1_replica_n1] o.a.s.u.p.LogUpdateProcessorFactory [logs3_shard1_replica_n1]  webapp=/solr path=/update params={commitWithin=1000&overwrite=true&wt=json&_=1577306114481}{deleteByQuery=*:* (-1653925534487281664)} 0 11\\n\" +\n                    \"2019-12-25 20:42:13.411 INFO  (qtp2103763750-303) [c:logs5 s:shard1 r:core_node2 x:logs5_shard1_replica_n1] o.a.s.u.p.LogUpdateProcessorFactory [logs5_shard1_replica_n1]  webapp=/solr path=/update params={commitWithin=1000&overwrite=true&wt=json&_=1577306114481}{delete=[03bbe975-728a-4df8-aa25-fe25049dc0ef (-1653925775577972736)]} 0 1\\n\";\n    List<SolrInputDocument> docs = readDocs(record);\n    assertEquals(docs.size(), 2);\n    SolrInputDocument doc = docs.get(0);\n    SolrInputField date = doc.getField(\"date_dt\");\n    SolrInputField type = doc.getField(\"type_s\");\n    SolrInputField core = doc.getField(\"core_s\");\n    SolrInputField collection = doc.getField(\"collection_s\");\n    assertEquals(date.getValue(), \"2019-12-25T20:38:23.498\");\n    assertEquals(type.getValue(), \"deleteByQuery\");\n    assertEquals(collection.getValue(), \"logs3\");\n    assertEquals(core.getValue(), \"logs3_shard1_replica_n1\");\n\n    SolrInputDocument doc1 = docs.get(1);\n    SolrInputField date1 = doc1.getField(\"date_dt\");\n    SolrInputField type1 = doc1.getField(\"type_s\");\n    SolrInputField core1 = doc1.getField(\"core_s\");\n    SolrInputField collection1= doc1.getField(\"collection_s\");\n    assertEquals(date1.getValue(), \"2019-12-25T20:42:13.411\");\n    assertEquals(type1.getValue(), \"delete\");\n    assertEquals(collection1.getValue(), \"logs5\");\n    assertEquals(core1.getValue(), \"logs5_shard1_replica_n1\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2e38054de362483189e0fdd850b779ed766aa7aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ca62564055241632cd20d65b5ecb8c8e93bd60c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e38054de362483189e0fdd850b779ed766aa7aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2e38054de362483189e0fdd850b779ed766aa7aa"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2e38054de362483189e0fdd850b779ed766aa7aa","ca62564055241632cd20d65b5ecb8c8e93bd60c4"],"2e38054de362483189e0fdd850b779ed766aa7aa":["ca62564055241632cd20d65b5ecb8c8e93bd60c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ca62564055241632cd20d65b5ecb8c8e93bd60c4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ca62564055241632cd20d65b5ecb8c8e93bd60c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}