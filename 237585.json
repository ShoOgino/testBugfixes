{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterTwice3().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterTwice3().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterTwice3().mjava","sourceNew":"  /**\n   * testWriterTwice3 is yet another test which tests creating a taxonomy\n   * in two separate writing sessions. This test used to fail because of\n   * a bug involving commit(), explained below, and now should succeed.\n   * \n   * @throws Exception\n   */\n  @Test\n  public void testWriterTwice3() throws Exception {\n    Directory indexDir = newDirectory();\n    // First, create and fill the taxonomy\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    // Now, open the same taxonomy and add the same categories again.\n    // After a few categories, the LuceneTaxonomyWriter implementation\n    // will stop looking for each category on disk, and rather read them\n    // all into memory and close it's reader. The bug was that it closed\n    // the reader, but forgot that it did (because it didn't set the reader\n    // reference to null).\n    tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    // Add one new category, just to make commit() do something:\n    tw.addCategory(new CategoryPath(\"hi\"));\n    // Do a commit(). Here was a bug - if tw had a reader open, it should\n    // be reopened after the commit. However, in our case the reader should\n    // not be open (as explained above) but because it was not set to null,\n    // we forgot that, tried to reopen it, and got an AlreadyClosedException.\n    tw.commit();\n    assertEquals(expectedCategories.length+1, tw.getSize());    \n    tw.close();\n    indexDir.close();\n  }  \n\n","sourceOld":"  /**\n   * testWriterTwice3 is yet another test which tests creating a taxonomy\n   * in two separate writing sessions. This test used to fail because of\n   * a bug involving commit(), explained below, and now should succeed.\n   * \n   * @throws Exception\n   */\n  @Test\n  public void testWriterTwice3() throws Exception {\n    Directory indexDir = newDirectory();\n    // First, create and fill the taxonomy\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    // Now, open the same taxonomy and add the same categories again.\n    // After a few categories, the LuceneTaxonomyWriter implementation\n    // will stop looking for each category on disk, and rather read them\n    // all into memory and close it's reader. The bug was that it closed\n    // the reader, but forgot that it did (because it didn't set the reader\n    // reference to null).\n    tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    // Add one new category, just to make commit() do something:\n    tw.addCategory(new CategoryPath(\"hi\"));\n    // Do a commit(). Here was a bug - if tw had a reader open, it should\n    // be reopened after the commit. However, in our case the reader should\n    // not be open (as explained above) but because it was not set to null,\n    // we forgot that, tried to reopen it, and got an AlreadyClosedException.\n    tw.commit();\n    assertEquals(expectedCategories.length+1, tw.getSize());    \n    tw.close();\n    indexDir.close();\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterTwice3().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterTwice3().mjava","sourceNew":"  /**\n   * testWriterTwice3 is yet another test which tests creating a taxonomy\n   * in two separate writing sessions. This test used to fail because of\n   * a bug involving commit(), explained below, and now should succeed.\n   */\n  @Test\n  public void testWriterTwice3() throws Exception {\n    Directory indexDir = newDirectory();\n    // First, create and fill the taxonomy\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    // Now, open the same taxonomy and add the same categories again.\n    // After a few categories, the LuceneTaxonomyWriter implementation\n    // will stop looking for each category on disk, and rather read them\n    // all into memory and close it's reader. The bug was that it closed\n    // the reader, but forgot that it did (because it didn't set the reader\n    // reference to null).\n    tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    // Add one new category, just to make commit() do something:\n    tw.addCategory(new CategoryPath(\"hi\"));\n    // Do a commit(). Here was a bug - if tw had a reader open, it should\n    // be reopened after the commit. However, in our case the reader should\n    // not be open (as explained above) but because it was not set to null,\n    // we forgot that, tried to reopen it, and got an AlreadyClosedException.\n    tw.commit();\n    assertEquals(expectedCategories.length+1, tw.getSize());    \n    tw.close();\n    indexDir.close();\n  }  \n\n","sourceOld":"  /**\n   * testWriterTwice3 is yet another test which tests creating a taxonomy\n   * in two separate writing sessions. This test used to fail because of\n   * a bug involving commit(), explained below, and now should succeed.\n   * \n   * @throws Exception\n   */\n  @Test\n  public void testWriterTwice3() throws Exception {\n    Directory indexDir = newDirectory();\n    // First, create and fill the taxonomy\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    // Now, open the same taxonomy and add the same categories again.\n    // After a few categories, the LuceneTaxonomyWriter implementation\n    // will stop looking for each category on disk, and rather read them\n    // all into memory and close it's reader. The bug was that it closed\n    // the reader, but forgot that it did (because it didn't set the reader\n    // reference to null).\n    tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    // Add one new category, just to make commit() do something:\n    tw.addCategory(new CategoryPath(\"hi\"));\n    // Do a commit(). Here was a bug - if tw had a reader open, it should\n    // be reopened after the commit. However, in our case the reader should\n    // not be open (as explained above) but because it was not set to null,\n    // we forgot that, tried to reopen it, and got an AlreadyClosedException.\n    tw.commit();\n    assertEquals(expectedCategories.length+1, tw.getSize());    \n    tw.close();\n    indexDir.close();\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterTwice3().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterTwice3().mjava","sourceNew":"  /**\n   * testWriterTwice3 is yet another test which tests creating a taxonomy\n   * in two separate writing sessions. This test used to fail because of\n   * a bug involving commit(), explained below, and now should succeed.\n   */\n  @Test\n  public void testWriterTwice3() throws Exception {\n    Directory indexDir = newDirectory();\n    // First, create and fill the taxonomy\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    // Now, open the same taxonomy and add the same categories again.\n    // After a few categories, the LuceneTaxonomyWriter implementation\n    // will stop looking for each category on disk, and rather read them\n    // all into memory and close it's reader. The bug was that it closed\n    // the reader, but forgot that it did (because it didn't set the reader\n    // reference to null).\n    tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    // Add one new category, just to make commit() do something:\n    tw.addCategory(new FacetLabel(\"hi\"));\n    // Do a commit(). Here was a bug - if tw had a reader open, it should\n    // be reopened after the commit. However, in our case the reader should\n    // not be open (as explained above) but because it was not set to null,\n    // we forgot that, tried to reopen it, and got an AlreadyClosedException.\n    tw.commit();\n    assertEquals(expectedCategories.length+1, tw.getSize());    \n    tw.close();\n    indexDir.close();\n  }  \n\n","sourceOld":"  /**\n   * testWriterTwice3 is yet another test which tests creating a taxonomy\n   * in two separate writing sessions. This test used to fail because of\n   * a bug involving commit(), explained below, and now should succeed.\n   */\n  @Test\n  public void testWriterTwice3() throws Exception {\n    Directory indexDir = newDirectory();\n    // First, create and fill the taxonomy\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    // Now, open the same taxonomy and add the same categories again.\n    // After a few categories, the LuceneTaxonomyWriter implementation\n    // will stop looking for each category on disk, and rather read them\n    // all into memory and close it's reader. The bug was that it closed\n    // the reader, but forgot that it did (because it didn't set the reader\n    // reference to null).\n    tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    // Add one new category, just to make commit() do something:\n    tw.addCategory(new CategoryPath(\"hi\"));\n    // Do a commit(). Here was a bug - if tw had a reader open, it should\n    // be reopened after the commit. However, in our case the reader should\n    // not be open (as explained above) but because it was not set to null,\n    // we forgot that, tried to reopen it, and got an AlreadyClosedException.\n    tw.commit();\n    assertEquals(expectedCategories.length+1, tw.getSize());    \n    tw.close();\n    indexDir.close();\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterTwice3().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterTwice3().mjava","sourceNew":"  /**\n   * testWriterTwice3 is yet another test which tests creating a taxonomy\n   * in two separate writing sessions. This test used to fail because of\n   * a bug involving commit(), explained below, and now should succeed.\n   */\n  @Test\n  public void testWriterTwice3() throws Exception {\n    Directory indexDir = newDirectory();\n    // First, create and fill the taxonomy\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    // Now, open the same taxonomy and add the same categories again.\n    // After a few categories, the LuceneTaxonomyWriter implementation\n    // will stop looking for each category on disk, and rather read them\n    // all into memory and close it's reader. The bug was that it closed\n    // the reader, but forgot that it did (because it didn't set the reader\n    // reference to null).\n    tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    // Add one new category, just to make commit() do something:\n    tw.addCategory(new FacetLabel(\"hi\"));\n    // Do a commit(). Here was a bug - if tw had a reader open, it should\n    // be reopened after the commit. However, in our case the reader should\n    // not be open (as explained above) but because it was not set to null,\n    // we forgot that, tried to reopen it, and got an AlreadyClosedException.\n    tw.commit();\n    assertEquals(expectedCategories.length+1, tw.getSize());    \n    tw.close();\n    indexDir.close();\n  }  \n\n","sourceOld":"  /**\n   * testWriterTwice3 is yet another test which tests creating a taxonomy\n   * in two separate writing sessions. This test used to fail because of\n   * a bug involving commit(), explained below, and now should succeed.\n   */\n  @Test\n  public void testWriterTwice3() throws Exception {\n    Directory indexDir = newDirectory();\n    // First, create and fill the taxonomy\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    // Now, open the same taxonomy and add the same categories again.\n    // After a few categories, the LuceneTaxonomyWriter implementation\n    // will stop looking for each category on disk, and rather read them\n    // all into memory and close it's reader. The bug was that it closed\n    // the reader, but forgot that it did (because it didn't set the reader\n    // reference to null).\n    tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    // Add one new category, just to make commit() do something:\n    tw.addCategory(new CategoryPath(\"hi\"));\n    // Do a commit(). Here was a bug - if tw had a reader open, it should\n    // be reopened after the commit. However, in our case the reader should\n    // not be open (as explained above) but because it was not set to null,\n    // we forgot that, tried to reopen it, and got an AlreadyClosedException.\n    tw.commit();\n    assertEquals(expectedCategories.length+1, tw.getSize());    \n    tw.close();\n    indexDir.close();\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterTwice3().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterTwice3().mjava","sourceNew":"  /**\n   * testWriterTwice3 is yet another test which tests creating a taxonomy\n   * in two separate writing sessions. This test used to fail because of\n   * a bug involving commit(), explained below, and now should succeed.\n   */\n  @Test\n  public void testWriterTwice3() throws Exception {\n    Directory indexDir = newDirectory();\n    // First, create and fill the taxonomy\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    // Now, open the same taxonomy and add the same categories again.\n    // After a few categories, the LuceneTaxonomyWriter implementation\n    // will stop looking for each category on disk, and rather read them\n    // all into memory and close its reader. The bug was that it closed\n    // the reader, but forgot that it did (because it didn't set the reader\n    // reference to null).\n    tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    // Add one new category, just to make commit() do something:\n    tw.addCategory(new FacetLabel(\"hi\"));\n    // Do a commit(). Here was a bug - if tw had a reader open, it should\n    // be reopened after the commit. However, in our case the reader should\n    // not be open (as explained above) but because it was not set to null,\n    // we forgot that, tried to reopen it, and got an AlreadyClosedException.\n    tw.commit();\n    assertEquals(expectedCategories.length+1, tw.getSize());    \n    tw.close();\n    indexDir.close();\n  }  \n\n","sourceOld":"  /**\n   * testWriterTwice3 is yet another test which tests creating a taxonomy\n   * in two separate writing sessions. This test used to fail because of\n   * a bug involving commit(), explained below, and now should succeed.\n   */\n  @Test\n  public void testWriterTwice3() throws Exception {\n    Directory indexDir = newDirectory();\n    // First, create and fill the taxonomy\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    // Now, open the same taxonomy and add the same categories again.\n    // After a few categories, the LuceneTaxonomyWriter implementation\n    // will stop looking for each category on disk, and rather read them\n    // all into memory and close it's reader. The bug was that it closed\n    // the reader, but forgot that it did (because it didn't set the reader\n    // reference to null).\n    tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    // Add one new category, just to make commit() do something:\n    tw.addCategory(new FacetLabel(\"hi\"));\n    // Do a commit(). Here was a bug - if tw had a reader open, it should\n    // be reopened after the commit. However, in our case the reader should\n    // not be open (as explained above) but because it was not set to null,\n    // we forgot that, tried to reopen it, and got an AlreadyClosedException.\n    tw.commit();\n    assertEquals(expectedCategories.length+1, tw.getSize());    \n    tw.close();\n    indexDir.close();\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}