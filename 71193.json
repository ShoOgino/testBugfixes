{"path":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#verifyTermDocs(Directory,Term,int).mjava","commits":[{"id":"0eab5479eeaba1914f4cd6b6bca566976c31075c","date":1162241544,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#verifyTermDocs(Directory,Term,int).mjava","pathOld":"/dev/null","sourceNew":"  private void verifyTermDocs(Directory dir, Term term, int numDocs)\n      throws IOException {\n    IndexReader reader = IndexReader.open(dir);\n    TermDocs termDocs = reader.termDocs(term);\n    int count = 0;\n    while (termDocs.next())\n      count++;\n    assertEquals(numDocs, count);\n    reader.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#verifyTermDocs(Directory,Term,int).mjava","pathOld":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#verifyTermDocs(Directory,Term,int).mjava","sourceNew":"  private void verifyTermDocs(Directory dir, Term term, int numDocs)\n      throws IOException {\n    IndexReader reader = IndexReader.open(dir, true);\n    TermDocs termDocs = reader.termDocs(term);\n    int count = 0;\n    while (termDocs.next())\n      count++;\n    assertEquals(numDocs, count);\n    reader.close();\n  }\n\n","sourceOld":"  private void verifyTermDocs(Directory dir, Term term, int numDocs)\n      throws IOException {\n    IndexReader reader = IndexReader.open(dir);\n    TermDocs termDocs = reader.termDocs(term);\n    int count = 0;\n    while (termDocs.next())\n      count++;\n    assertEquals(numDocs, count);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#verifyTermDocs(Directory,Term,int).mjava","pathOld":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#verifyTermDocs(Directory,Term,int).mjava","sourceNew":"  private void verifyTermDocs(Directory dir, Term term, int numDocs)\n      throws IOException {\n    IndexReader reader = IndexReader.open(dir, true);\n    TermDocs termDocs = reader.termDocs(term);\n    int count = 0;\n    while (termDocs.next())\n      count++;\n    assertEquals(numDocs, count);\n    reader.close();\n  }\n\n","sourceOld":"  private void verifyTermDocs(Directory dir, Term term, int numDocs)\n      throws IOException {\n    IndexReader reader = IndexReader.open(dir);\n    TermDocs termDocs = reader.termDocs(term);\n    int count = 0;\n    while (termDocs.next())\n      count++;\n    assertEquals(numDocs, count);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#verifyTermDocs(Directory,Term,int).mjava","pathOld":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#verifyTermDocs(Directory,Term,int).mjava","sourceNew":"  private void verifyTermDocs(Directory dir, Term term, int numDocs)\n      throws IOException {\n    IndexReader reader = IndexReader.open(dir, true);\n    TermDocs termDocs = reader.termDocs(term);\n    int count = 0;\n    while (termDocs.next())\n      count++;\n    assertEquals(numDocs, count);\n    reader.close();\n  }\n\n","sourceOld":"  private void verifyTermDocs(Directory dir, Term term, int numDocs)\n      throws IOException {\n    IndexReader reader = IndexReader.open(dir, true);\n    TermDocs termDocs = reader.termDocs(term);\n    int count = 0;\n    while (termDocs.next())\n      count++;\n    assertEquals(numDocs, count);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0eab5479eeaba1914f4cd6b6bca566976c31075c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["0eab5479eeaba1914f4cd6b6bca566976c31075c","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"0eab5479eeaba1914f4cd6b6bca566976c31075c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0a046c0c310bc77931fc8441bd920053b607dd14"]},"commit2Childs":{"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0eab5479eeaba1914f4cd6b6bca566976c31075c"],"0a046c0c310bc77931fc8441bd920053b607dd14":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0eab5479eeaba1914f4cd6b6bca566976c31075c":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","0a046c0c310bc77931fc8441bd920053b607dd14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}