{"path":"solr/core/src/java/org/apache/solr/update/UpdateLog.RecentUpdates#getDeleteByQuery(long).mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog.RecentUpdates#getDeleteByQuery(long).mjava","pathOld":"/dev/null","sourceNew":"    /** Returns the list of deleteByQueries that happened after the given version */\n    public List<Object> getDeleteByQuery(long afterVersion) {\n      List<Object> result = new ArrayList<Object>(deleteByQueryList.size());\n      for (Update update : deleteByQueryList) {\n        if (Math.abs(update.version) > afterVersion) {\n          Object dbq = update.log.lookup(update.pointer);\n          result.add(dbq);\n        }\n      }\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog.RecentUpdates#getDeleteByQuery(long).mjava","pathOld":"/dev/null","sourceNew":"    /** Returns the list of deleteByQueries that happened after the given version */\n    public List<Object> getDeleteByQuery(long afterVersion) {\n      List<Object> result = new ArrayList<Object>(deleteByQueryList.size());\n      for (Update update : deleteByQueryList) {\n        if (Math.abs(update.version) > afterVersion) {\n          Object dbq = update.log.lookup(update.pointer);\n          result.add(dbq);\n        }\n      }\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog.RecentUpdates#getDeleteByQuery(long).mjava","pathOld":"/dev/null","sourceNew":"    /** Returns the list of deleteByQueries that happened after the given version */\n    public List<Object> getDeleteByQuery(long afterVersion) {\n      List<Object> result = new ArrayList<Object>(deleteByQueryList.size());\n      for (Update update : deleteByQueryList) {\n        if (Math.abs(update.version) > afterVersion) {\n          Object dbq = update.log.lookup(update.pointer);\n          result.add(dbq);\n        }\n      }\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog.RecentUpdates#getDeleteByQuery(long).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog.RecentUpdates#getDeleteByQuery(long).mjava","sourceNew":"    /** Returns the list of deleteByQueries that happened after the given version */\n    public List<Object> getDeleteByQuery(long afterVersion) {\n      List<Object> result = new ArrayList<>(deleteByQueryList.size());\n      for (Update update : deleteByQueryList) {\n        if (Math.abs(update.version) > afterVersion) {\n          Object dbq = update.log.lookup(update.pointer);\n          result.add(dbq);\n        }\n      }\n      return result;\n    }\n\n","sourceOld":"    /** Returns the list of deleteByQueries that happened after the given version */\n    public List<Object> getDeleteByQuery(long afterVersion) {\n      List<Object> result = new ArrayList<Object>(deleteByQueryList.size());\n      for (Update update : deleteByQueryList) {\n        if (Math.abs(update.version) > afterVersion) {\n          Object dbq = update.log.lookup(update.pointer);\n          result.add(dbq);\n        }\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}