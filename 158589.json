{"path":"lucene/contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#addToken(SegToken).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#addToken(SegToken).mjava","pathOld":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#addToken(SegToken).mjava","sourceNew":"  /**\n   * Add a {@link SegToken} to the mapping, creating a new mapping at the token's startOffset if one does not exist. \n   * @param token {@link SegToken}\n   */\n  public void addToken(SegToken token) {\n    int s = token.startOffset;\n    if (!isStartExist(s)) {\n      ArrayList<SegToken> newlist = new ArrayList<SegToken>();\n      newlist.add(token);\n      tokenListTable.put(s, newlist);\n    } else {\n      List<SegToken> tokenList = tokenListTable.get(s);\n      tokenList.add(token);\n    }\n    if (s > maxStart)\n      maxStart = s;\n  }\n\n","sourceOld":"  /**\n   * Add a {@link SegToken} to the mapping, creating a new mapping at the token's startOffset if one does not exist. \n   * @param token {@link SegToken}\n   */\n  public void addToken(SegToken token) {\n    int s = token.startOffset;\n    if (!isStartExist(s)) {\n      ArrayList<SegToken> newlist = new ArrayList<SegToken>();\n      newlist.add(token);\n      tokenListTable.put(s, newlist);\n    } else {\n      List<SegToken> tokenList = tokenListTable.get(s);\n      tokenList.add(token);\n    }\n    if (s > maxStart)\n      maxStart = s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#addToken(SegToken).mjava","pathOld":"lucene/contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#addToken(SegToken).mjava","sourceNew":"  /**\n   * Add a {@link SegToken} to the mapping, creating a new mapping at the token's startOffset if one does not exist. \n   * @param token {@link SegToken}\n   */\n  public void addToken(SegToken token) {\n    int s = token.startOffset;\n    if (!isStartExist(s)) {\n      ArrayList<SegToken> newlist = new ArrayList<SegToken>();\n      newlist.add(token);\n      tokenListTable.put(s, newlist);\n    } else {\n      List<SegToken> tokenList = tokenListTable.get(s);\n      tokenList.add(token);\n    }\n    if (s > maxStart)\n      maxStart = s;\n  }\n\n","sourceOld":"  /**\n   * Add a {@link SegToken} to the mapping, creating a new mapping at the token's startOffset if one does not exist. \n   * @param token {@link SegToken}\n   */\n  public void addToken(SegToken token) {\n    int s = token.startOffset;\n    if (!isStartExist(s)) {\n      ArrayList<SegToken> newlist = new ArrayList<SegToken>();\n      newlist.add(token);\n      tokenListTable.put(s, newlist);\n    } else {\n      List<SegToken> tokenList = tokenListTable.get(s);\n      tokenList.add(token);\n    }\n    if (s > maxStart)\n      maxStart = s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}