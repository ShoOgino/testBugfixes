{"path":"lucene/classification/src/java/org/apache/lucene/classification/BooleanPerceptronClassifier#updateWeights(LeafReader,TermsEnum,int,Boolean,SortedMap[String,Double],double,boolean).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/BooleanPerceptronClassifier#updateWeights(LeafReader,TermsEnum,int,Boolean,SortedMap[String,Double],double,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private TermsEnum updateWeights(LeafReader leafReader, TermsEnum reuse,\n      int docId, Boolean assignedClass, SortedMap<String,Double> weights,\n      double modifier, boolean updateFST) throws IOException {\n    TermsEnum cte = textTerms.iterator(reuse);\n\n    // get the doc term vectors\n    Terms terms = leafReader.getTermVector(docId, textFieldName);\n\n    if (terms == null) {\n      throw new IOException(\"term vectors must be stored for field \"\n          + textFieldName);\n    }\n\n    TermsEnum termsEnum = terms.iterator(null);\n\n    BytesRef term;\n\n    while ((term = termsEnum.next()) != null) {\n      cte.seekExact(term);\n      if (assignedClass != null) {\n        long termFreqLocal = termsEnum.totalTermFreq();\n        // update weights\n        Long previousValue = Util.get(fst, term);\n        String termString = term.utf8ToString();\n        weights.put(termString, previousValue + modifier * termFreqLocal);\n      }\n    }\n    if (updateFST) {\n      updateFST(weights);\n    }\n    reuse = cte;\n    return reuse;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e9c8ade373b2cc85c2a51c4f5961bb0695cc44","date":1415781486,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/BooleanPerceptronClassifier#updateWeights(LeafReader,TermsEnum,int,Boolean,SortedMap[String,Double],double,boolean).mjava","pathOld":"lucene/classification/src/java/org/apache/lucene/classification/BooleanPerceptronClassifier#updateWeights(LeafReader,TermsEnum,int,Boolean,SortedMap[String,Double],double,boolean).mjava","sourceNew":"  private TermsEnum updateWeights(LeafReader leafReader, TermsEnum reuse,\n                                  int docId, Boolean assignedClass, SortedMap<String, Double> weights,\n                                  double modifier, boolean updateFST) throws IOException {\n    TermsEnum cte = textTerms.iterator(reuse);\n\n    // get the doc term vectors\n    Terms terms = leafReader.getTermVector(docId, textFieldName);\n\n    if (terms == null) {\n      throw new IOException(\"term vectors must be stored for field \"\n          + textFieldName);\n    }\n\n    TermsEnum termsEnum = terms.iterator(null);\n\n    BytesRef term;\n\n    while ((term = termsEnum.next()) != null) {\n      cte.seekExact(term);\n      if (assignedClass != null) {\n        long termFreqLocal = termsEnum.totalTermFreq();\n        // update weights\n        Long previousValue = Util.get(fst, term);\n        String termString = term.utf8ToString();\n        weights.put(termString, previousValue + modifier * termFreqLocal);\n      }\n    }\n    if (updateFST) {\n      updateFST(weights);\n    }\n    reuse = cte;\n    return reuse;\n  }\n\n","sourceOld":"  private TermsEnum updateWeights(LeafReader leafReader, TermsEnum reuse,\n      int docId, Boolean assignedClass, SortedMap<String,Double> weights,\n      double modifier, boolean updateFST) throws IOException {\n    TermsEnum cte = textTerms.iterator(reuse);\n\n    // get the doc term vectors\n    Terms terms = leafReader.getTermVector(docId, textFieldName);\n\n    if (terms == null) {\n      throw new IOException(\"term vectors must be stored for field \"\n          + textFieldName);\n    }\n\n    TermsEnum termsEnum = terms.iterator(null);\n\n    BytesRef term;\n\n    while ((term = termsEnum.next()) != null) {\n      cte.seekExact(term);\n      if (assignedClass != null) {\n        long termFreqLocal = termsEnum.totalTermFreq();\n        // update weights\n        Long previousValue = Util.get(fst, term);\n        String termString = term.utf8ToString();\n        weights.put(termString, previousValue + modifier * termFreqLocal);\n      }\n    }\n    if (updateFST) {\n      updateFST(weights);\n    }\n    reuse = cte;\n    return reuse;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82","date":1428522487,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/BooleanPerceptronClassifier#updateWeights(LeafReader,int,Boolean,SortedMap[String,Double],double,boolean).mjava","pathOld":"lucene/classification/src/java/org/apache/lucene/classification/BooleanPerceptronClassifier#updateWeights(LeafReader,TermsEnum,int,Boolean,SortedMap[String,Double],double,boolean).mjava","sourceNew":"  private void updateWeights(LeafReader leafReader,\n                             int docId, Boolean assignedClass, SortedMap<String, Double> weights,\n                             double modifier, boolean updateFST) throws IOException {\n    TermsEnum cte = textTerms.iterator();\n\n    // get the doc term vectors\n    Terms terms = leafReader.getTermVector(docId, textFieldName);\n\n    if (terms == null) {\n      throw new IOException(\"term vectors must be stored for field \"\n          + textFieldName);\n    }\n\n    TermsEnum termsEnum = terms.iterator();\n\n    BytesRef term;\n\n    while ((term = termsEnum.next()) != null) {\n      cte.seekExact(term);\n      if (assignedClass != null) {\n        long termFreqLocal = termsEnum.totalTermFreq();\n        // update weights\n        Long previousValue = Util.get(fst, term);\n        String termString = term.utf8ToString();\n        weights.put(termString, previousValue + modifier * termFreqLocal);\n      }\n    }\n    if (updateFST) {\n      updateFST(weights);\n    }\n  }\n\n","sourceOld":"  private TermsEnum updateWeights(LeafReader leafReader, TermsEnum reuse,\n                                  int docId, Boolean assignedClass, SortedMap<String, Double> weights,\n                                  double modifier, boolean updateFST) throws IOException {\n    TermsEnum cte = textTerms.iterator(reuse);\n\n    // get the doc term vectors\n    Terms terms = leafReader.getTermVector(docId, textFieldName);\n\n    if (terms == null) {\n      throw new IOException(\"term vectors must be stored for field \"\n          + textFieldName);\n    }\n\n    TermsEnum termsEnum = terms.iterator(null);\n\n    BytesRef term;\n\n    while ((term = termsEnum.next()) != null) {\n      cte.seekExact(term);\n      if (assignedClass != null) {\n        long termFreqLocal = termsEnum.totalTermFreq();\n        // update weights\n        Long previousValue = Util.get(fst, term);\n        String termString = term.utf8ToString();\n        weights.put(termString, previousValue + modifier * termFreqLocal);\n      }\n    }\n    if (updateFST) {\n      updateFST(weights);\n    }\n    reuse = cte;\n    return reuse;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["e7e9c8ade373b2cc85c2a51c4f5961bb0695cc44"],"e7e9c8ade373b2cc85c2a51c4f5961bb0695cc44":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"]},"commit2Childs":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e7e9c8ade373b2cc85c2a51c4f5961bb0695cc44":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["e7e9c8ade373b2cc85c2a51c4f5961bb0695cc44"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}