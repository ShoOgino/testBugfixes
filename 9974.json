{"path":"lucene/core/src/java/org/apache/lucene/util/Accountables#namedAccountables(String,Map[#,#-extends-Accountable]).mjava","commits":[{"id":"0936055c0eed56be3e4ae5c9db5b0e355390736a","date":1410874015,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/Accountables#namedAccountables(String,Map[#,#-extends-Accountable]).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Converts a map of resources to a collection. \n   * <p>\n   * The resource descriptions are constructed in this format:\n   * {@code prefix 'key' [toString()]}\n   * <p>\n   * This is a point-in-time type safe view: consumers \n   * will not be able to cast or manipulate the resources in any way.\n   */\n  public static Collection<Accountable> namedAccountables(String prefix, Map<?,? extends Accountable> in) {\n    List<Accountable> resources = new ArrayList<>();\n    for (Map.Entry<?,? extends Accountable> kv : in.entrySet()) {\n      resources.add(namedAccountable(prefix + \" '\" + kv.getKey() + \"'\", kv.getValue()));\n    }\n    Collections.sort(resources, new Comparator<Accountable>() {\n      @Override\n      public int compare(Accountable o1, Accountable o2) {\n        return o1.toString().compareTo(o2.toString());\n      }\n    });\n    return Collections.unmodifiableList(resources);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0936055c0eed56be3e4ae5c9db5b0e355390736a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0936055c0eed56be3e4ae5c9db5b0e355390736a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0936055c0eed56be3e4ae5c9db5b0e355390736a"],"0936055c0eed56be3e4ae5c9db5b0e355390736a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}