{"path":"lucene/contrib/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.NativeUnixIndexOutput#writeBytes(byte[],int,int).mjava","commits":[{"id":"d5243f2425292adfa2c094097311654ae59588bc","date":1327855765,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.NativeUnixIndexOutput#writeBytes(byte[],int,int).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory.DirectIOLinuxIndexOutput#writeBytes(byte[],int,int).mjava","sourceNew":"    @Override\n    public void writeBytes(byte[] src, int offset, int len) throws IOException {\n      int toWrite = len;\n      while(true) {\n        final int left = bufferSize - bufferPos;\n        if (left <= toWrite) {\n          buffer.put(src, offset, left);\n          toWrite -= left;\n          offset += left;\n          bufferPos = bufferSize;\n          dump();\n        } else {\n          buffer.put(src, offset, toWrite);\n          bufferPos += toWrite;\n          break;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void writeBytes(byte[] src, int offset, int len) throws IOException {\n      int toWrite = len;\n      while(true) {\n        final int left = bufferSize - bufferPos;\n        if (left <= toWrite) {\n          buffer.put(src, offset, left);\n          toWrite -= left;\n          offset += left;\n          bufferPos = bufferSize;\n          dump();\n        } else {\n          buffer.put(src, offset, toWrite);\n          bufferPos += toWrite;\n          break;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.NativeUnixIndexOutput#writeBytes(byte[],int,int).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory.DirectIOLinuxIndexOutput#writeBytes(byte[],int,int).mjava","sourceNew":"    @Override\n    public void writeBytes(byte[] src, int offset, int len) throws IOException {\n      int toWrite = len;\n      while(true) {\n        final int left = bufferSize - bufferPos;\n        if (left <= toWrite) {\n          buffer.put(src, offset, left);\n          toWrite -= left;\n          offset += left;\n          bufferPos = bufferSize;\n          dump();\n        } else {\n          buffer.put(src, offset, toWrite);\n          bufferPos += toWrite;\n          break;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void writeBytes(byte[] src, int offset, int len) throws IOException {\n      int toWrite = len;\n      while(true) {\n        final int left = bufferSize - bufferPos;\n        if (left <= toWrite) {\n          buffer.put(src, offset, left);\n          toWrite -= left;\n          offset += left;\n          bufferPos = bufferSize;\n          dump();\n        } else {\n          buffer.put(src, offset, toWrite);\n          bufferPos += toWrite;\n          break;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.NativeUnixIndexOutput#writeBytes(byte[],int,int).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory.DirectIOLinuxIndexOutput#writeBytes(byte[],int,int).mjava","sourceNew":"    @Override\n    public void writeBytes(byte[] src, int offset, int len) throws IOException {\n      int toWrite = len;\n      while(true) {\n        final int left = bufferSize - bufferPos;\n        if (left <= toWrite) {\n          buffer.put(src, offset, left);\n          toWrite -= left;\n          offset += left;\n          bufferPos = bufferSize;\n          dump();\n        } else {\n          buffer.put(src, offset, toWrite);\n          bufferPos += toWrite;\n          break;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void writeBytes(byte[] src, int offset, int len) throws IOException {\n      int toWrite = len;\n      while(true) {\n        final int left = bufferSize - bufferPos;\n        if (left <= toWrite) {\n          buffer.put(src, offset, left);\n          toWrite -= left;\n          offset += left;\n          bufferPos = bufferSize;\n          dump();\n        } else {\n          buffer.put(src, offset, toWrite);\n          bufferPos += toWrite;\n          break;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.NativeUnixIndexOutput#writeBytes(byte[],int,int).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.NativeUnixIndexOutput#writeBytes(byte[],int,int).mjava","sourceNew":"    @Override\n    public void writeBytes(byte[] src, int offset, int len) throws IOException {\n      int toWrite = len;\n      while(true) {\n        final int left = bufferSize - bufferPos;\n        if (left <= toWrite) {\n          buffer.put(src, offset, left);\n          toWrite -= left;\n          offset += left;\n          bufferPos = bufferSize;\n          dump();\n        } else {\n          buffer.put(src, offset, toWrite);\n          bufferPos += toWrite;\n          break;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void writeBytes(byte[] src, int offset, int len) throws IOException {\n      int toWrite = len;\n      while(true) {\n        final int left = bufferSize - bufferPos;\n        if (left <= toWrite) {\n          buffer.put(src, offset, left);\n          toWrite -= left;\n          offset += left;\n          bufferPos = bufferSize;\n          dump();\n        } else {\n          buffer.put(src, offset, toWrite);\n          bufferPos += toWrite;\n          break;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d5243f2425292adfa2c094097311654ae59588bc"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d5243f2425292adfa2c094097311654ae59588bc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d5243f2425292adfa2c094097311654ae59588bc"],"d5243f2425292adfa2c094097311654ae59588bc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","d5243f2425292adfa2c094097311654ae59588bc"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"d5243f2425292adfa2c094097311654ae59588bc":["b89678825b68eccaf09e6ab71675fc0b0af1e099","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}