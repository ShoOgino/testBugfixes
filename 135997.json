{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerNodePrioritizer#invokeOverseerOp(String,String).mjava","commits":[{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":1,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerNodePrioritizer#invokeOverseerOp(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#invokeOverseerOp(String,String).mjava","sourceNew":"  private void invokeOverseerOp(String electionNode, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    params.set(\"electionNode\", electionNode);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(LeaderElector.getNodeName(electionNode));\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n    shardHandler.takeCompletedOrError();\n  }\n\n","sourceOld":"  private void invokeOverseerOp(String electionNode, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    params.set(\"electionNode\", electionNode);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(LeaderElector.getNodeName(electionNode));\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n    shardHandler.takeCompletedOrError();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerNodePrioritizer#invokeOverseerOp(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerNodePrioritizer#invokeOverseerOp(String,String).mjava","sourceNew":"  private void invokeOverseerOp(String electionNode, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    ShardHandler shardHandler = ((HttpShardHandlerFactory)shardHandlerFactory).getShardHandler(httpClient);\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    params.set(\"electionNode\", electionNode);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(LeaderElector.getNodeName(electionNode));\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n    shardHandler.takeCompletedOrError();\n  }\n\n","sourceOld":"  private void invokeOverseerOp(String electionNode, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    params.set(\"electionNode\", electionNode);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(LeaderElector.getNodeName(electionNode));\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n    shardHandler.takeCompletedOrError();\n  }\n\n","bugFix":["6f26f74e4969851a019d28f10315cb1c77786f22"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1964c059f45ae1de1877f9f0fe3ca327ea4218e8","date":1594088246,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerNodePrioritizer#invokeOverseerOp(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerNodePrioritizer#invokeOverseerOp(String,String).mjava","sourceNew":"  private void invokeOverseerOp(String electionNode, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    params.set(\"electionNode\", electionNode);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(LeaderElector.getNodeName(electionNode));\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n    shardHandler.takeCompletedOrError();\n  }\n\n","sourceOld":"  private void invokeOverseerOp(String electionNode, String op) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    ShardHandler shardHandler = ((HttpShardHandlerFactory)shardHandlerFactory).getShardHandler(httpClient);\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.OVERSEEROP.toString());\n    params.set(\"op\", op);\n    params.set(\"qt\", adminPath);\n    params.set(\"electionNode\", electionNode);\n    ShardRequest sreq = new ShardRequest();\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(LeaderElector.getNodeName(electionNode));\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    shardHandler.submit(sreq, replica, sreq.params);\n    shardHandler.takeCompletedOrError();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1964c059f45ae1de1877f9f0fe3ca327ea4218e8":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1964c059f45ae1de1877f9f0fe3ca327ea4218e8"]},"commit2Childs":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"1964c059f45ae1de1877f9f0fe3ca327ea4218e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["1964c059f45ae1de1877f9f0fe3ca327ea4218e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}