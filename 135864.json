{"path":"solr/core/src/java/org/apache/solr/core/IndexReaderFactory#newReader(IndexWriter,SolrCore).mjava","commits":[{"id":"65974810aff303cdaecff3dd789ae9353c1d9134","date":1376496589,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/IndexReaderFactory#newReader(IndexWriter,SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new IndexReader instance using the given IndexWriter.\n   * <p>\n   * This is used for opening the initial reader in NRT mode ({@code reopenReaders=true}\n   * in solrconfig.xml)\n   * \n   * @param writer IndexWriter\n   * @param core {@link SolrCore} instance where this reader will be used. NOTE:\n   * this SolrCore instance may not be fully configured yet, but basic things like\n   * {@link SolrCore#getCoreDescriptor()}, {@link SolrCore#getLatestSchema()} and\n   * {@link SolrCore#getSolrConfig()} are valid.\n   * @return An IndexReader instance\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract DirectoryReader newReader(IndexWriter writer, SolrCore core)\n      throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/IndexReaderFactory#newReader(IndexWriter,SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new IndexReader instance using the given IndexWriter.\n   * <p>\n   * This is used for opening the initial reader in NRT mode ({@code reopenReaders=true}\n   * in solrconfig.xml)\n   * \n   * @param writer IndexWriter\n   * @param core {@link SolrCore} instance where this reader will be used. NOTE:\n   * this SolrCore instance may not be fully configured yet, but basic things like\n   * {@link SolrCore#getCoreDescriptor()}, {@link SolrCore#getLatestSchema()} and\n   * {@link SolrCore#getSolrConfig()} are valid.\n   * @return An IndexReader instance\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract DirectoryReader newReader(IndexWriter writer, SolrCore core)\n      throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360","date":1378833548,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/IndexReaderFactory#newReader(IndexWriter,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/IndexReaderFactory#newReader(IndexWriter,SolrCore).mjava","sourceNew":"  /**\n   * Creates a new IndexReader instance using the given IndexWriter.\n   * <p>\n   * This is used for opening the initial reader in NRT mode ({@code nrtMode=true}\n   * in solrconfig.xml)\n   * \n   * @param writer IndexWriter\n   * @param core {@link SolrCore} instance where this reader will be used. NOTE:\n   * this SolrCore instance may not be fully configured yet, but basic things like\n   * {@link SolrCore#getCoreDescriptor()}, {@link SolrCore#getLatestSchema()} and\n   * {@link SolrCore#getSolrConfig()} are valid.\n   * @return An IndexReader instance\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract DirectoryReader newReader(IndexWriter writer, SolrCore core)\n      throws IOException;\n\n","sourceOld":"  /**\n   * Creates a new IndexReader instance using the given IndexWriter.\n   * <p>\n   * This is used for opening the initial reader in NRT mode ({@code reopenReaders=true}\n   * in solrconfig.xml)\n   * \n   * @param writer IndexWriter\n   * @param core {@link SolrCore} instance where this reader will be used. NOTE:\n   * this SolrCore instance may not be fully configured yet, but basic things like\n   * {@link SolrCore#getCoreDescriptor()}, {@link SolrCore#getLatestSchema()} and\n   * {@link SolrCore#getSolrConfig()} are valid.\n   * @return An IndexReader instance\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract DirectoryReader newReader(IndexWriter writer, SolrCore core)\n      throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac2f1cdbdc54a889e88543cc1d939a931cb96883","date":1420554488,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/IndexReaderFactory#newReader(IndexWriter,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/IndexReaderFactory#newReader(IndexWriter,SolrCore).mjava","sourceNew":"  /**\n   * Creates a new IndexReader instance using the given IndexWriter.\n   * <p>\n   * This is used for opening the initial reader in NRT mode\n   *\n   * @param writer IndexWriter\n   * @param core {@link SolrCore} instance where this reader will be used. NOTE:\n   * this SolrCore instance may not be fully configured yet, but basic things like\n   * {@link SolrCore#getCoreDescriptor()}, {@link SolrCore#getLatestSchema()} and\n   * {@link SolrCore#getSolrConfig()} are valid.\n   * @return An IndexReader instance\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract DirectoryReader newReader(IndexWriter writer, SolrCore core)\n      throws IOException;\n\n","sourceOld":"  /**\n   * Creates a new IndexReader instance using the given IndexWriter.\n   * <p>\n   * This is used for opening the initial reader in NRT mode ({@code nrtMode=true}\n   * in solrconfig.xml)\n   * \n   * @param writer IndexWriter\n   * @param core {@link SolrCore} instance where this reader will be used. NOTE:\n   * this SolrCore instance may not be fully configured yet, but basic things like\n   * {@link SolrCore#getCoreDescriptor()}, {@link SolrCore#getLatestSchema()} and\n   * {@link SolrCore#getSolrConfig()} are valid.\n   * @return An IndexReader instance\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract DirectoryReader newReader(IndexWriter writer, SolrCore core)\n      throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","65974810aff303cdaecff3dd789ae9353c1d9134"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"65974810aff303cdaecff3dd789ae9353c1d9134":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360":["65974810aff303cdaecff3dd789ae9353c1d9134"],"ac2f1cdbdc54a889e88543cc1d939a931cb96883":["c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ac2f1cdbdc54a889e88543cc1d939a931cb96883"]},"commit2Childs":{"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","65974810aff303cdaecff3dd789ae9353c1d9134"],"65974810aff303cdaecff3dd789ae9353c1d9134":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360"],"c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360":["ac2f1cdbdc54a889e88543cc1d939a931cb96883"],"ac2f1cdbdc54a889e88543cc1d939a931cb96883":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}