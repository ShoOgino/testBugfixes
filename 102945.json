{"path":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","pathOld":"solr/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","sourceNew":"    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          LOG.warn(\"Could not get attibute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","sourceOld":"    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          LOG.warn(\"Could not get attibute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","pathOld":"solr/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","sourceNew":"    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          LOG.warn(\"Could not get attibute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","sourceOld":"    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          LOG.warn(\"Could not get attibute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","pathOld":"solr/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","sourceNew":"    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          LOG.warn(\"Could not get attibute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","sourceOld":"    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          LOG.warn(\"Could not get attibute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","sourceNew":"    @Override\n    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          LOG.warn(\"Could not get attibute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","sourceOld":"    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          LOG.warn(\"Could not get attibute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","sourceNew":"    @Override\n    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          LOG.warn(\"Could not get attibute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","sourceOld":"    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          LOG.warn(\"Could not get attibute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7cb78328260466f87da6a7a898e9ac8b53a0785","date":1384889993,"type":3,"author":"Shawn Heisey","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","sourceNew":"    @Override\n    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          LOG.warn(\"Could not get attribute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","sourceOld":"    @Override\n    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          LOG.warn(\"Could not get attibute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","sourceNew":"    @Override\n    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          LOG.warn(\"Could not get attribute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","sourceOld":"    @Override\n    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          LOG.warn(\"Could not get attibute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f0c8426396c925de8db3ed3f8ff40fd73670a5c","date":1474556641,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","sourceNew":"    @Override\n    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          log.warn(\"Could not get attribute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","sourceOld":"    @Override\n    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          LOG.warn(\"Could not get attribute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"126d6ad24eed13163ba0959435d5a80e5672837c","date":1474567302,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","sourceNew":"    @Override\n    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          log.warn(\"Could not get attribute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","sourceOld":"    @Override\n    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          LOG.warn(\"Could not get attribute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","sourceNew":"    @Override\n    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          log.warn(\"Could not get attribute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","sourceOld":"    @Override\n    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          LOG.warn(\"Could not get attribute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","sourceNew":"    @Override\n    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          log.warn(\"Could not get attribute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","sourceOld":"    @Override\n    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          LOG.warn(\"Could not get attribute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","sourceNew":null,"sourceOld":"    @Override\n    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          log.warn(\"Could not get attribute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getAttributes(String[]).mjava","sourceNew":null,"sourceOld":"    @Override\n    public AttributeList getAttributes(String[] attributes) {\n      AttributeList list = new AttributeList();\n      for (String attribute : attributes) {\n        try {\n          list.add(new Attribute(attribute, getAttribute(attribute)));\n        } catch (Exception e) {\n          log.warn(\"Could not get attribute \" + attribute);\n        }\n      }\n\n      return list;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["c26f00b574427b55127e869b935845554afde1fa","7530de27b87b961b51f01bd1299b7004d46e8823"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"816521ebaad5add9cb96bb88c577394e2938c40b":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"d7cb78328260466f87da6a7a898e9ac8b53a0785":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7f0c8426396c925de8db3ed3f8ff40fd73670a5c":["d7cb78328260466f87da6a7a898e9ac8b53a0785"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d7cb78328260466f87da6a7a898e9ac8b53a0785","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"126d6ad24eed13163ba0959435d5a80e5672837c":["d7cb78328260466f87da6a7a898e9ac8b53a0785","7f0c8426396c925de8db3ed3f8ff40fd73670a5c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["d7cb78328260466f87da6a7a898e9ac8b53a0785","126d6ad24eed13163ba0959435d5a80e5672837c"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["7530de27b87b961b51f01bd1299b7004d46e8823","d7cb78328260466f87da6a7a898e9ac8b53a0785"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7530de27b87b961b51f01bd1299b7004d46e8823":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["816521ebaad5add9cb96bb88c577394e2938c40b"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"c26f00b574427b55127e869b935845554afde1fa":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"816521ebaad5add9cb96bb88c577394e2938c40b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d7cb78328260466f87da6a7a898e9ac8b53a0785":["7f0c8426396c925de8db3ed3f8ff40fd73670a5c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","126d6ad24eed13163ba0959435d5a80e5672837c","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"7f0c8426396c925de8db3ed3f8ff40fd73670a5c":["126d6ad24eed13163ba0959435d5a80e5672837c"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"126d6ad24eed13163ba0959435d5a80e5672837c":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d7cb78328260466f87da6a7a898e9ac8b53a0785","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","d3fcb70cf561547c7bb1506e0cf32ca7b1287064","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","74f45af4339b0daf7a95c820ab88c1aea74fbce0","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}