{"path":"src/java/org/apache/lucene/index/FieldInfos#FieldInfos(Directory,String).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#FieldInfos(Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  FieldInfos(Directory d, String name) throws IOException {\n    InputStream input = d.openFile(name);\n    try {\n      read(input);\n    } finally {\n      input.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770281b8a8459cafcdd2354b6a06078fea2d83c9","date":1077308096,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#FieldInfos(Directory,String).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#FieldInfos(Directory,String).mjava","sourceNew":"  /**\n   * Construct a FieldInfos object using the directory and the name of the file\n   * InputStream\n   * @param d The directory to open the InputStream from\n   * @param name The name of the file to open the InputStream from in the Directory\n   * @throws IOException\n   * \n   * @see #read\n   */\n  FieldInfos(Directory d, String name) throws IOException {\n    InputStream input = d.openFile(name);\n    try {\n      read(input);\n    } finally {\n      input.close();\n    }\n  }\n\n","sourceOld":"  FieldInfos(Directory d, String name) throws IOException {\n    InputStream input = d.openFile(name);\n    try {\n      read(input);\n    } finally {\n      input.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"591e76e4f4581ee94453dd46609d65b9c2e825ee","date":1092775126,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#FieldInfos(Directory,String).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#FieldInfos(Directory,String).mjava","sourceNew":"  /**\n   * Construct a FieldInfos object using the directory and the name of the file\n   * InputStream\n   * @param d The directory to open the InputStream from\n   * @param name The name of the file to open the InputStream from in the Directory\n   * @throws IOException\n   */\n  FieldInfos(Directory d, String name) throws IOException {\n    InputStream input = d.openFile(name);\n    try {\n      read(input);\n    } finally {\n      input.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Construct a FieldInfos object using the directory and the name of the file\n   * InputStream\n   * @param d The directory to open the InputStream from\n   * @param name The name of the file to open the InputStream from in the Directory\n   * @throws IOException\n   * \n   * @see #read\n   */\n  FieldInfos(Directory d, String name) throws IOException {\n    InputStream input = d.openFile(name);\n    try {\n      read(input);\n    } finally {\n      input.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#FieldInfos(Directory,String).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#FieldInfos(Directory,String).mjava","sourceNew":"  /**\n   * Construct a FieldInfos object using the directory and the name of the file\n   * IndexInput\n   * @param d The directory to open the IndexInput from\n   * @param name The name of the file to open the IndexInput from in the Directory\n   * @throws IOException\n   */\n  FieldInfos(Directory d, String name) throws IOException {\n    IndexInput input = d.openInput(name);\n    try {\n      read(input);\n    } finally {\n      input.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Construct a FieldInfos object using the directory and the name of the file\n   * InputStream\n   * @param d The directory to open the InputStream from\n   * @param name The name of the file to open the InputStream from in the Directory\n   * @throws IOException\n   */\n  FieldInfos(Directory d, String name) throws IOException {\n    InputStream input = d.openFile(name);\n    try {\n      read(input);\n    } finally {\n      input.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bf26a11728ffdf1d7a0eac68fd2cd501d45f367","date":1241174228,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#FieldInfos(Directory,String).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#FieldInfos(Directory,String).mjava","sourceNew":"  /**\n   * Construct a FieldInfos object using the directory and the name of the file\n   * IndexInput\n   * @param d The directory to open the IndexInput from\n   * @param name The name of the file to open the IndexInput from in the Directory\n   * @throws IOException\n   */\n  FieldInfos(Directory d, String name) throws IOException {\n    IndexInput input = d.openInput(name);\n    try {\n      try {\n        read(input, name);\n      } catch (IOException ioe) {\n        if (format == FORMAT_PRE) {\n          // LUCENE-1623: FORMAT_PRE (before there was a\n          // format) may be 2.3.2 (pre-utf8) or 2.4.x (utf8)\n          // encoding; retry with input set to pre-utf8\n          input.seek(0);\n          input.setModifiedUTF8StringsMode();\n          byNumber = new ArrayList();\n          byName = new HashMap();\n          try {\n            read(input, name);\n          } catch (Throwable t) {\n            // Ignore any new exception & throw original IOE\n            throw ioe;\n          }\n        }\n      }\n    } finally {\n      input.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Construct a FieldInfos object using the directory and the name of the file\n   * IndexInput\n   * @param d The directory to open the IndexInput from\n   * @param name The name of the file to open the IndexInput from in the Directory\n   * @throws IOException\n   */\n  FieldInfos(Directory d, String name) throws IOException {\n    IndexInput input = d.openInput(name);\n    try {\n      read(input);\n    } finally {\n      input.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":["179b9f7b359423a2cb80895b6d33c04c005dc0dc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"179b9f7b359423a2cb80895b6d33c04c005dc0dc","date":1241215723,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#FieldInfos(Directory,String).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#FieldInfos(Directory,String).mjava","sourceNew":"  /**\n   * Construct a FieldInfos object using the directory and the name of the file\n   * IndexInput\n   * @param d The directory to open the IndexInput from\n   * @param name The name of the file to open the IndexInput from in the Directory\n   * @throws IOException\n   */\n  FieldInfos(Directory d, String name) throws IOException {\n    IndexInput input = d.openInput(name);\n    try {\n      try {\n        read(input, name);\n      } catch (IOException ioe) {\n        if (format == FORMAT_PRE) {\n          // LUCENE-1623: FORMAT_PRE (before there was a\n          // format) may be 2.3.2 (pre-utf8) or 2.4.x (utf8)\n          // encoding; retry with input set to pre-utf8\n          input.seek(0);\n          input.setModifiedUTF8StringsMode();\n          byNumber.clear();\n          byName.clear();\n          try {\n            read(input, name);\n          } catch (Throwable t) {\n            // Ignore any new exception & throw original IOE\n            throw ioe;\n          }\n        } else {\n          // The IOException cannot be caused by\n          // LUCENE-1623, so re-throw it\n          throw ioe;\n        }\n      }\n    } finally {\n      input.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Construct a FieldInfos object using the directory and the name of the file\n   * IndexInput\n   * @param d The directory to open the IndexInput from\n   * @param name The name of the file to open the IndexInput from in the Directory\n   * @throws IOException\n   */\n  FieldInfos(Directory d, String name) throws IOException {\n    IndexInput input = d.openInput(name);\n    try {\n      try {\n        read(input, name);\n      } catch (IOException ioe) {\n        if (format == FORMAT_PRE) {\n          // LUCENE-1623: FORMAT_PRE (before there was a\n          // format) may be 2.3.2 (pre-utf8) or 2.4.x (utf8)\n          // encoding; retry with input set to pre-utf8\n          input.seek(0);\n          input.setModifiedUTF8StringsMode();\n          byNumber = new ArrayList();\n          byName = new HashMap();\n          try {\n            read(input, name);\n          } catch (Throwable t) {\n            // Ignore any new exception & throw original IOE\n            throw ioe;\n          }\n        }\n      }\n    } finally {\n      input.close();\n    }\n  }\n\n","bugFix":["5bf26a11728ffdf1d7a0eac68fd2cd501d45f367"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#FieldInfos(Directory,String).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#FieldInfos(Directory,String).mjava","sourceNew":"  /**\n   * Construct a FieldInfos object using the directory and the name of the file\n   * IndexInput\n   * @param d The directory to open the IndexInput from\n   * @param name The name of the file to open the IndexInput from in the Directory\n   * @throws IOException\n   */\n  FieldInfos(Directory d, String name) throws IOException {\n    IndexInput input = d.openInput(name);\n    try {\n      try {\n        read(input, name);\n      } catch (IOException ioe) {\n        if (format == FORMAT_PRE) {\n          // LUCENE-1623: FORMAT_PRE (before there was a\n          // format) may be 2.3.2 (pre-utf8) or 2.4.x (utf8)\n          // encoding; retry with input set to pre-utf8\n          input.seek(0);\n          input.setModifiedUTF8StringsMode();\n          byNumber.clear();\n          byName.clear();\n          try {\n            read(input, name);\n          } catch (Throwable t) {\n            // Ignore any new exception & throw original IOE\n            throw ioe;\n          }\n        } else {\n          // The IOException cannot be caused by\n          // LUCENE-1623, so re-throw it\n          throw ioe;\n        }\n      }\n    } finally {\n      input.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Construct a FieldInfos object using the directory and the name of the file\n   * IndexInput\n   * @param d The directory to open the IndexInput from\n   * @param name The name of the file to open the IndexInput from in the Directory\n   * @throws IOException\n   */\n  FieldInfos(Directory d, String name) throws IOException {\n    IndexInput input = d.openInput(name);\n    try {\n      try {\n        read(input, name);\n      } catch (IOException ioe) {\n        if (format == FORMAT_PRE) {\n          // LUCENE-1623: FORMAT_PRE (before there was a\n          // format) may be 2.3.2 (pre-utf8) or 2.4.x (utf8)\n          // encoding; retry with input set to pre-utf8\n          input.seek(0);\n          input.setModifiedUTF8StringsMode();\n          byNumber.clear();\n          byName.clear();\n          try {\n            read(input, name);\n          } catch (Throwable t) {\n            // Ignore any new exception & throw original IOE\n            throw ioe;\n          }\n        } else {\n          // The IOException cannot be caused by\n          // LUCENE-1623, so re-throw it\n          throw ioe;\n        }\n      }\n    } finally {\n      input.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"e971ba25509e21a130fef61f0687be0446ca27a0":["591e76e4f4581ee94453dd46609d65b9c2e825ee"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5bf26a11728ffdf1d7a0eac68fd2cd501d45f367":["e971ba25509e21a130fef61f0687be0446ca27a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"179b9f7b359423a2cb80895b6d33c04c005dc0dc":["5bf26a11728ffdf1d7a0eac68fd2cd501d45f367"],"591e76e4f4581ee94453dd46609d65b9c2e825ee":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["179b9f7b359423a2cb80895b6d33c04c005dc0dc"]},"commit2Childs":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["591e76e4f4581ee94453dd46609d65b9c2e825ee"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"e971ba25509e21a130fef61f0687be0446ca27a0":["5bf26a11728ffdf1d7a0eac68fd2cd501d45f367"],"5bf26a11728ffdf1d7a0eac68fd2cd501d45f367":["179b9f7b359423a2cb80895b6d33c04c005dc0dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"179b9f7b359423a2cb80895b6d33c04c005dc0dc":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"591e76e4f4581ee94453dd46609d65b9c2e825ee":["e971ba25509e21a130fef61f0687be0446ca27a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}