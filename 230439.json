{"path":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#waitForResponse(Predicate[NamedList],SolrRequest,int,int,String).mjava","commits":[{"id":"16a22f8085bb46850c91784e94f7714345011404","date":1533741843,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#waitForResponse(Predicate[NamedList],SolrRequest,int,int,String).mjava","pathOld":"/dev/null","sourceNew":"  protected NamedList waitForResponse(Predicate<NamedList> predicate, SolrRequest request, int intervalInMillis, int numRetries, String messageOnFail) {\n    int i = 0;\n    for (; i < numRetries; i++) {\n      try {\n        NamedList<Object> response = cluster.getSolrClient().request(request);\n        if (predicate.test(response)) return response;\n        Thread.sleep(intervalInMillis);\n      } catch (RuntimeException rte) {\n        throw rte;\n      } catch (Exception e) {\n        throw new RuntimeException(\"error executing request\", e);\n      }\n    }\n    fail(\"Tried \" + i + \" times , could not succeed. \" + messageOnFail);\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b06f42faae0ab79dde1a569756990bb96283580d","date":1566418420,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#waitForResponse(Predicate[NamedList],SolrRequest,int,int,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#waitForResponse(Predicate[NamedList],SolrRequest,int,int,String).mjava","sourceNew":"  protected NamedList waitForResponse(Predicate<NamedList> predicate, SolrRequest request, int intervalInMillis, int numRetries, String messageOnFail) {\n    log.info(\"waitForResponse: {}\", request);\n    int i = 0;\n    for (; i < numRetries; i++) {\n      try {\n        NamedList<Object> response = cluster.getSolrClient().request(request);\n        if (predicate.test(response)) return response;\n        Thread.sleep(intervalInMillis);\n      } catch (RuntimeException rte) {\n        throw rte;\n      } catch (Exception e) {\n        throw new RuntimeException(\"error executing request\", e);\n      }\n    }\n    fail(\"Tried \" + i + \" times , could not succeed. \" + messageOnFail);\n    return null;\n  }\n\n","sourceOld":"  protected NamedList waitForResponse(Predicate<NamedList> predicate, SolrRequest request, int intervalInMillis, int numRetries, String messageOnFail) {\n    int i = 0;\n    for (; i < numRetries; i++) {\n      try {\n        NamedList<Object> response = cluster.getSolrClient().request(request);\n        if (predicate.test(response)) return response;\n        Thread.sleep(intervalInMillis);\n      } catch (RuntimeException rte) {\n        throw rte;\n      } catch (Exception e) {\n        throw new RuntimeException(\"error executing request\", e);\n      }\n    }\n    fail(\"Tried \" + i + \" times , could not succeed. \" + messageOnFail);\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6809a6d7924df2c864d6a5863944aff9dfeb372c","date":1591826750,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#waitForResponse(Predicate[NamedList],SolrRequest,int,int,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#waitForResponse(Predicate[NamedList],SolrRequest,int,int,String).mjava","sourceNew":"  @SuppressWarnings({\"rawtypes\"})\n  protected NamedList waitForResponse(Predicate<NamedList> predicate, SolrRequest request, int intervalInMillis, int numRetries, String messageOnFail) {\n    log.info(\"waitForResponse: {}\", request);\n    int i = 0;\n    for (; i < numRetries; i++) {\n      try {\n        NamedList<Object> response = cluster.getSolrClient().request(request);\n        if (predicate.test(response)) return response;\n        Thread.sleep(intervalInMillis);\n      } catch (RuntimeException rte) {\n        throw rte;\n      } catch (Exception e) {\n        throw new RuntimeException(\"error executing request\", e);\n      }\n    }\n    fail(\"Tried \" + i + \" times , could not succeed. \" + messageOnFail);\n    return null;\n  }\n\n","sourceOld":"  protected NamedList waitForResponse(Predicate<NamedList> predicate, SolrRequest request, int intervalInMillis, int numRetries, String messageOnFail) {\n    log.info(\"waitForResponse: {}\", request);\n    int i = 0;\n    for (; i < numRetries; i++) {\n      try {\n        NamedList<Object> response = cluster.getSolrClient().request(request);\n        if (predicate.test(response)) return response;\n        Thread.sleep(intervalInMillis);\n      } catch (RuntimeException rte) {\n        throw rte;\n      } catch (Exception e) {\n        throw new RuntimeException(\"error executing request\", e);\n      }\n    }\n    fail(\"Tried \" + i + \" times , could not succeed. \" + messageOnFail);\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6809a6d7924df2c864d6a5863944aff9dfeb372c":["b06f42faae0ab79dde1a569756990bb96283580d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b06f42faae0ab79dde1a569756990bb96283580d":["16a22f8085bb46850c91784e94f7714345011404"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6809a6d7924df2c864d6a5863944aff9dfeb372c"],"16a22f8085bb46850c91784e94f7714345011404":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6809a6d7924df2c864d6a5863944aff9dfeb372c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16a22f8085bb46850c91784e94f7714345011404"],"b06f42faae0ab79dde1a569756990bb96283580d":["6809a6d7924df2c864d6a5863944aff9dfeb372c"],"16a22f8085bb46850c91784e94f7714345011404":["b06f42faae0ab79dde1a569756990bb96283580d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}