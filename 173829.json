{"path":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","pathOld":"lucene/contrib/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random());\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = _TestUtil.randomUnicodeString(random());\n      Field field = newField(\"field\", value, StringField.TYPE_STORED);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    splitDoc = _TestUtil.randomUnicodeString(random());\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random());\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = _TestUtil.randomUnicodeString(random());\n      Field field = newField(\"field\", value, StringField.TYPE_STORED);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    splitDoc = _TestUtil.randomUnicodeString(random());\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random());\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = _TestUtil.randomUnicodeString(random());\n      Field field = newStringField(\"field\", value, Field.Store.YES);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    splitDoc = _TestUtil.randomUnicodeString(random());\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random());\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = _TestUtil.randomUnicodeString(random());\n      Field field = newField(\"field\", value, StringField.TYPE_STORED);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    splitDoc = _TestUtil.randomUnicodeString(random());\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random());\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = TestUtil.randomUnicodeString(random());\n      Field field = newStringField(\"field\", value, Field.Store.YES);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    splitDoc = TestUtil.randomUnicodeString(random());\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random());\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = _TestUtil.randomUnicodeString(random());\n      Field field = newStringField(\"field\", value, Field.Store.YES);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    splitDoc = _TestUtil.randomUnicodeString(random());\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random());\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = TestUtil.randomUnicodeString(random());\n      Field field = newStringField(\"field\", value, Field.Store.YES);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    splitDoc = TestUtil.randomUnicodeString(random());\n    reader = iw.getReader();\n    iw.shutdown();\n\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random());\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = TestUtil.randomUnicodeString(random());\n      Field field = newStringField(\"field\", value, Field.Store.YES);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    splitDoc = TestUtil.randomUnicodeString(random());\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random());\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = TestUtil.randomUnicodeString(random());\n      Field field = newStringField(\"field\", value, Field.Store.YES);\n      doc.add(field);\n      Field dvField = new SortedDocValuesField(\"field\", new BytesRef(value));\n      doc.add(dvField);\n      iw.addDocument(doc);\n    }\n    splitDoc = TestUtil.randomUnicodeString(random());\n    reader = iw.getReader();\n    iw.shutdown();\n\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random());\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = TestUtil.randomUnicodeString(random());\n      Field field = newStringField(\"field\", value, Field.Store.YES);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    splitDoc = TestUtil.randomUnicodeString(random());\n    reader = iw.getReader();\n    iw.shutdown();\n\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random());\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = TestUtil.randomUnicodeString(random());\n      Field field = newStringField(\"field\", value, Field.Store.YES);\n      doc.add(field);\n      Field dvField = new SortedDocValuesField(\"field\", new BytesRef(value));\n      doc.add(dvField);\n      iw.addDocument(doc);\n    }\n    splitDoc = TestUtil.randomUnicodeString(random());\n    reader = iw.getReader();\n    iw.shutdown();\n\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random());\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = TestUtil.randomUnicodeString(random());\n      Field field = newStringField(\"field\", value, Field.Store.YES);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    splitDoc = TestUtil.randomUnicodeString(random());\n    reader = iw.getReader();\n    iw.shutdown();\n\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random());\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = TestUtil.randomUnicodeString(random());\n      Field field = newStringField(\"field\", value, Field.Store.YES);\n      doc.add(field);\n      Field dvField = new SortedDocValuesField(\"field\", new BytesRef(value));\n      doc.add(dvField);\n      iw.addDocument(doc);\n    }\n    splitDoc = TestUtil.randomUnicodeString(random());\n    reader = iw.getReader();\n    iw.shutdown();\n\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random());\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = TestUtil.randomUnicodeString(random());\n      Field field = newStringField(\"field\", value, Field.Store.YES);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    splitDoc = TestUtil.randomUnicodeString(random());\n    reader = iw.getReader();\n    iw.shutdown();\n\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random());\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = TestUtil.randomUnicodeString(random());\n      Field field = newStringField(\"field\", value, Field.Store.YES);\n      doc.add(field);\n      Field dvField = new SortedDocValuesField(\"field\", new BytesRef(value));\n      doc.add(dvField);\n      iw.addDocument(doc);\n    }\n    splitDoc = TestUtil.randomUnicodeString(random());\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random());\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = TestUtil.randomUnicodeString(random());\n      Field field = newStringField(\"field\", value, Field.Store.YES);\n      doc.add(field);\n      Field dvField = new SortedDocValuesField(\"field\", new BytesRef(value));\n      doc.add(dvField);\n      iw.addDocument(doc);\n    }\n    splitDoc = TestUtil.randomUnicodeString(random());\n    reader = iw.getReader();\n    iw.shutdown();\n\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59cae262d4251e10e2a034b17c45776f6b4c7e68","date":1424712773,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","sourceNew":null,"sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random());\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = TestUtil.randomUnicodeString(random());\n      Field field = newStringField(\"field\", value, Field.Store.YES);\n      doc.add(field);\n      Field dvField = new SortedDocValuesField(\"field\", new BytesRef(value));\n      doc.add(dvField);\n      iw.addDocument(doc);\n    }\n    splitDoc = TestUtil.randomUnicodeString(random());\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"59cae262d4251e10e2a034b17c45776f6b4c7e68":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"6613659748fe4411a7dcf85266e55db1f95f7315":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["6613659748fe4411a7dcf85266e55db1f95f7315"],"56572ec06f1407c066d6b7399413178b33176cd8":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59cae262d4251e10e2a034b17c45776f6b4c7e68"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["6613659748fe4411a7dcf85266e55db1f95f7315"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"59cae262d4251e10e2a034b17c45776f6b4c7e68":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["d0ef034a4f10871667ae75181537775ddcf8ade4","56572ec06f1407c066d6b7399413178b33176cd8"],"6613659748fe4411a7dcf85266e55db1f95f7315":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["59cae262d4251e10e2a034b17c45776f6b4c7e68"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}