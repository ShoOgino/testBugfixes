{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testNRT().mjava","commits":[{"id":"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1","date":1353511594,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testNRT().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testNRT() throws Exception {\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter writer = new DirectoryTaxonomyWriter(dir);\n    TaxonomyReader reader = new DirectoryTaxonomyReader(writer);\n    \n    CategoryPath cp = new CategoryPath(\"a\");\n    writer.addCategory(cp);\n    TaxonomyReader newReader = TaxonomyReader.openIfChanged(reader);\n    assertNotNull(\"expected a new instance\", newReader);\n    assertEquals(2, newReader.getSize());\n    assertNotSame(TaxonomyReader.INVALID_ORDINAL, newReader.getOrdinal(cp));\n    reader.close();\n    reader = newReader;\n    \n    writer.close();\n    reader.close();\n    \n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testNRT().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testNRT() throws Exception {\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter writer = new DirectoryTaxonomyWriter(dir);\n    TaxonomyReader reader = new DirectoryTaxonomyReader(writer);\n    \n    CategoryPath cp = new CategoryPath(\"a\");\n    writer.addCategory(cp);\n    TaxonomyReader newReader = TaxonomyReader.openIfChanged(reader);\n    assertNotNull(\"expected a new instance\", newReader);\n    assertEquals(2, newReader.getSize());\n    assertNotSame(TaxonomyReader.INVALID_ORDINAL, newReader.getOrdinal(cp));\n    reader.close();\n    reader = newReader;\n    \n    writer.close();\n    reader.close();\n    \n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testNRT().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testNRT().mjava","sourceNew":"  @Test\n  public void testNRT() throws Exception {\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter writer = new DirectoryTaxonomyWriter(dir);\n    TaxonomyReader reader = new DirectoryTaxonomyReader(writer);\n    \n    FacetLabel cp = new FacetLabel(\"a\");\n    writer.addCategory(cp);\n    TaxonomyReader newReader = TaxonomyReader.openIfChanged(reader);\n    assertNotNull(\"expected a new instance\", newReader);\n    assertEquals(2, newReader.getSize());\n    assertNotSame(TaxonomyReader.INVALID_ORDINAL, newReader.getOrdinal(cp));\n    reader.close();\n    reader = newReader;\n    \n    writer.close();\n    reader.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testNRT() throws Exception {\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter writer = new DirectoryTaxonomyWriter(dir);\n    TaxonomyReader reader = new DirectoryTaxonomyReader(writer);\n    \n    CategoryPath cp = new CategoryPath(\"a\");\n    writer.addCategory(cp);\n    TaxonomyReader newReader = TaxonomyReader.openIfChanged(reader);\n    assertNotNull(\"expected a new instance\", newReader);\n    assertEquals(2, newReader.getSize());\n    assertNotSame(TaxonomyReader.INVALID_ORDINAL, newReader.getOrdinal(cp));\n    reader.close();\n    reader = newReader;\n    \n    writer.close();\n    reader.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testNRT().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testNRT().mjava","sourceNew":"  @Test\n  public void testNRT() throws Exception {\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter writer = new DirectoryTaxonomyWriter(dir);\n    TaxonomyReader reader = new DirectoryTaxonomyReader(writer);\n    \n    FacetLabel cp = new FacetLabel(\"a\");\n    writer.addCategory(cp);\n    TaxonomyReader newReader = TaxonomyReader.openIfChanged(reader);\n    assertNotNull(\"expected a new instance\", newReader);\n    assertEquals(2, newReader.getSize());\n    assertNotSame(TaxonomyReader.INVALID_ORDINAL, newReader.getOrdinal(cp));\n    reader.close();\n    reader = newReader;\n    \n    writer.close();\n    reader.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testNRT() throws Exception {\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter writer = new DirectoryTaxonomyWriter(dir);\n    TaxonomyReader reader = new DirectoryTaxonomyReader(writer);\n    \n    CategoryPath cp = new CategoryPath(\"a\");\n    writer.addCategory(cp);\n    TaxonomyReader newReader = TaxonomyReader.openIfChanged(reader);\n    assertNotNull(\"expected a new instance\", newReader);\n    assertEquals(2, newReader.getSize());\n    assertNotSame(TaxonomyReader.INVALID_ORDINAL, newReader.getOrdinal(cp));\n    reader.close();\n    reader = newReader;\n    \n    writer.close();\n    reader.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407687e67faf6e1f02a211ca078d8e3eed631027","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["407687e67faf6e1f02a211ca078d8e3eed631027","3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}