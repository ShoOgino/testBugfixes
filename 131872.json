{"path":"solr/src/test/org/apache/solr/SolrTestCaseJ4#determineSourceHome().mjava","commits":[{"id":"85e42ae02aedcd775cc14af2a510f707dbe60a39","date":1293826640,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/SolrTestCaseJ4#determineSourceHome().mjava","pathOld":"/dev/null","sourceNew":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = getFile(\"solr/conf/\");\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["82f3f6e1a1e11b4620e73bf779193437428d9374","82f3f6e1a1e11b4620e73bf779193437428d9374","82f3f6e1a1e11b4620e73bf779193437428d9374","82f3f6e1a1e11b4620e73bf779193437428d9374","82f3f6e1a1e11b4620e73bf779193437428d9374","82f3f6e1a1e11b4620e73bf779193437428d9374","82f3f6e1a1e11b4620e73bf779193437428d9374","82f3f6e1a1e11b4620e73bf779193437428d9374","82f3f6e1a1e11b4620e73bf779193437428d9374"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/SolrTestCaseJ4#determineSourceHome().mjava","pathOld":"/dev/null","sourceNew":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = getFile(\"solr/conf/\");\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/SolrTestCaseJ4#determineSourceHome().mjava","pathOld":"/dev/null","sourceNew":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = getFile(\"solr/conf/\");\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"556e672e7e64e2efd1c627ef0cf2065302a7e2c2","date":1294264650,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/SolrTestCaseJ4#determineSourceHome().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#determineSourceHome().mjava","sourceNew":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = getFile(\"solr/conf/\").getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","sourceOld":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = getFile(\"solr/conf/\");\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/SolrTestCaseJ4#determineSourceHome().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#determineSourceHome().mjava","sourceNew":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = getFile(\"solr/conf/\").getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","sourceOld":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = getFile(\"solr/conf/\");\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/SolrTestCaseJ4#determineSourceHome().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#determineSourceHome().mjava","sourceNew":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = getFile(\"solr/conf/\").getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","sourceOld":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = getFile(\"solr/conf/\");\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d20d5e40789b1c42f4f926e3174b271256c43657","date":1301641092,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#determineSourceHome().mjava","sourceNew":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = SolrTestCaseJ4.getFile(\"solr/conf\").getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","sourceOld":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = getFile(\"solr/conf/\").getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b09c7419b92e982a901698cb401ce22ac35e4b04","date":1301668869,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#determineSourceHome().mjava","sourceNew":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = SolrTestCaseJ4.getFile(\"solr/conf\").getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","sourceOld":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = getFile(\"solr/conf/\").getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#determineSourceHome().mjava","sourceNew":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = SolrTestCaseJ4.getFile(\"solr/conf\").getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","sourceOld":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = getFile(\"solr/conf/\").getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#determineSourceHome().mjava","sourceNew":null,"sourceOld":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = getFile(\"solr/conf/\").getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","85e42ae02aedcd775cc14af2a510f707dbe60a39"],"556e672e7e64e2efd1c627ef0cf2065302a7e2c2":["85e42ae02aedcd775cc14af2a510f707dbe60a39"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","85e42ae02aedcd775cc14af2a510f707dbe60a39"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["70ad682703b8585f5d0a637efec044d57ec05efb","556e672e7e64e2efd1c627ef0cf2065302a7e2c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","b09c7419b92e982a901698cb401ce22ac35e4b04"],"b09c7419b92e982a901698cb401ce22ac35e4b04":["556e672e7e64e2efd1c627ef0cf2065302a7e2c2"],"d20d5e40789b1c42f4f926e3174b271256c43657":["556e672e7e64e2efd1c627ef0cf2065302a7e2c2"],"85e42ae02aedcd775cc14af2a510f707dbe60a39":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","556e672e7e64e2efd1c627ef0cf2065302a7e2c2"],"45669a651c970812a680841b97a77cce06af559f":["868da859b43505d9d2a023bfeae6dd0c795f5295","b09c7419b92e982a901698cb401ce22ac35e4b04"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b09c7419b92e982a901698cb401ce22ac35e4b04"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"556e672e7e64e2efd1c627ef0cf2065302a7e2c2":["29ef99d61cda9641b6250bf9567329a6e65f901d","b09c7419b92e982a901698cb401ce22ac35e4b04","d20d5e40789b1c42f4f926e3174b271256c43657","868da859b43505d9d2a023bfeae6dd0c795f5295"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","85e42ae02aedcd775cc14af2a510f707dbe60a39"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"b09c7419b92e982a901698cb401ce22ac35e4b04":["135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d20d5e40789b1c42f4f926e3174b271256c43657":[],"85e42ae02aedcd775cc14af2a510f707dbe60a39":["70ad682703b8585f5d0a637efec044d57ec05efb","556e672e7e64e2efd1c627ef0cf2065302a7e2c2","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["45669a651c970812a680841b97a77cce06af559f"],"45669a651c970812a680841b97a77cce06af559f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d20d5e40789b1c42f4f926e3174b271256c43657","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}