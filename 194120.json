{"path":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesStandalone#testMixedInPlaceAndNonInPlaceAtomicUpdates().mjava","commits":[{"id":"415bbbe7da8065dd3c477bdc3c703c6425622998","date":1485393793,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesStandalone#testMixedInPlaceAndNonInPlaceAtomicUpdates().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMixedInPlaceAndNonInPlaceAtomicUpdates() throws Exception {\n    SolrDocument rtgDoc = null;\n    long version1 = addAndGetVersion(sdoc(\"id\", \"1\", \"inplace_updatable_float\", \"100\", \"stored_i\", \"100\"), params());\n\n    version1 = addAndAssertVersion(version1, \"id\", \"1\", \"inplace_updatable_float\", map(\"inc\", \"1\"), \"stored_i\", map(\"inc\", \"1\"));\n    rtgDoc = client.getById(\"1\");\n    assertEquals(101, rtgDoc.getFieldValue(\"stored_i\"));\n    assertEquals(101.0f, rtgDoc.getFieldValue(\"inplace_updatable_float\"));\n    \n    version1 = addAndAssertVersion(version1, \"id\", \"1\", \"inplace_updatable_float\", map(\"inc\", \"1\"));\n    rtgDoc = client.getById(\"1\");\n    assertEquals(101, rtgDoc.getFieldValue(\"stored_i\"));\n    assertEquals(102.0f, rtgDoc.getFieldValue(\"inplace_updatable_float\"));\n\n    version1 = addAndAssertVersion(version1, \"id\", \"1\", \"stored_i\", map(\"inc\", \"1\"));\n    rtgDoc = client.getById(\"1\");\n    assertEquals(102, rtgDoc.getFieldValue(\"stored_i\"));\n    assertEquals(102.0f, rtgDoc.getFieldValue(\"inplace_updatable_float\"));\n\n    assertU(commit(\"softCommit\", \"false\"));\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"id asc\", \"fl\", \"*\"),\n            \"//*[@numFound='1']\",\n            \"//result/doc[1]/float[@name='inplace_updatable_float'][.='102.0']\",\n            \"//result/doc[1]/int[@name='stored_i'][.='102']\",\n            \"//result/doc[1]/long[@name='_version_'][.='\" + version1 + \"']\"\n            );\n\n    // recheck RTG after commit\n    rtgDoc = client.getById(\"1\");\n    assertEquals(102, rtgDoc.getFieldValue(\"stored_i\"));\n    assertEquals(102.0f, rtgDoc.getFieldValue(\"inplace_updatable_float\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"598b5d23aa7c9732bf473c21a9cd309c44599394","date":1485530378,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesStandalone#testMixedInPlaceAndNonInPlaceAtomicUpdates().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMixedInPlaceAndNonInPlaceAtomicUpdates() throws Exception {\n    SolrDocument rtgDoc = null;\n    long version1 = addAndGetVersion(sdoc(\"id\", \"1\", \"inplace_updatable_float\", \"100\", \"stored_i\", \"100\"), params());\n\n    version1 = addAndAssertVersion(version1, \"id\", \"1\", \"inplace_updatable_float\", map(\"inc\", \"1\"), \"stored_i\", map(\"inc\", \"1\"));\n    rtgDoc = client.getById(\"1\");\n    assertEquals(101, rtgDoc.getFieldValue(\"stored_i\"));\n    assertEquals(101.0f, rtgDoc.getFieldValue(\"inplace_updatable_float\"));\n    \n    version1 = addAndAssertVersion(version1, \"id\", \"1\", \"inplace_updatable_float\", map(\"inc\", \"1\"));\n    rtgDoc = client.getById(\"1\");\n    assertEquals(101, rtgDoc.getFieldValue(\"stored_i\"));\n    assertEquals(102.0f, rtgDoc.getFieldValue(\"inplace_updatable_float\"));\n\n    version1 = addAndAssertVersion(version1, \"id\", \"1\", \"stored_i\", map(\"inc\", \"1\"));\n    rtgDoc = client.getById(\"1\");\n    assertEquals(102, rtgDoc.getFieldValue(\"stored_i\"));\n    assertEquals(102.0f, rtgDoc.getFieldValue(\"inplace_updatable_float\"));\n\n    assertU(commit(\"softCommit\", \"false\"));\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"id asc\", \"fl\", \"*\"),\n            \"//*[@numFound='1']\",\n            \"//result/doc[1]/float[@name='inplace_updatable_float'][.='102.0']\",\n            \"//result/doc[1]/int[@name='stored_i'][.='102']\",\n            \"//result/doc[1]/long[@name='_version_'][.='\" + version1 + \"']\"\n            );\n\n    // recheck RTG after commit\n    rtgDoc = client.getById(\"1\");\n    assertEquals(102, rtgDoc.getFieldValue(\"stored_i\"));\n    assertEquals(102.0f, rtgDoc.getFieldValue(\"inplace_updatable_float\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"598b5d23aa7c9732bf473c21a9cd309c44599394":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","415bbbe7da8065dd3c477bdc3c703c6425622998"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["415bbbe7da8065dd3c477bdc3c703c6425622998"]},"commit2Childs":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"598b5d23aa7c9732bf473c21a9cd309c44599394":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["415bbbe7da8065dd3c477bdc3c703c6425622998","598b5d23aa7c9732bf473c21a9cd309c44599394"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}