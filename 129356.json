{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene84/Lucene84PostingsReader.EverythingEnum#refillDocs().mjava","commits":[{"id":"9a0cc86697753659ac5e7f55243ccdcbf44d8a36","date":1574100512,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene84/Lucene84PostingsReader.EverythingEnum#refillDocs().mjava","pathOld":"/dev/null","sourceNew":"    private void refillDocs() throws IOException {\n      final int left = docFreq - docUpto;\n      assert left >= 0;\n\n      if (left >= BLOCK_SIZE) {\n        forDeltaUtil.decodeAndPrefixSum(docIn, accum, docBuffer);\n        pforUtil.decode(docIn, freqBuffer);\n      } else if (docFreq == 1) {\n        docBuffer[0] = singletonDocID;\n        freqBuffer[0] = totalTermFreq;\n        Arrays.fill(docBuffer, 1, BLOCK_SIZE, DocIdSetIterator.NO_MORE_DOCS);\n      } else {\n        readVIntBlock(docIn, docBuffer, freqBuffer, left, true);\n        prefixSum(docBuffer, left, accum);\n        Arrays.fill(docBuffer, left, BLOCK_SIZE, DocIdSetIterator.NO_MORE_DOCS);\n      }\n      accum = docBuffer[BLOCK_SIZE - 1];\n      docBufferUpto = 0;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3270c8036d92f23d84b526bdcb07d645d3102eb7","date":1574438988,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene84/Lucene84PostingsReader.EverythingEnum#refillDocs().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene84/Lucene84PostingsReader.EverythingEnum#refillDocs().mjava","sourceNew":"    private void refillDocs() throws IOException {\n      final int left = docFreq - blockUpto;\n      assert left >= 0;\n\n      if (left >= BLOCK_SIZE) {\n        forDeltaUtil.decodeAndPrefixSum(docIn, accum, docBuffer);\n        pforUtil.decode(docIn, freqBuffer);\n        blockUpto += BLOCK_SIZE;\n      } else if (docFreq == 1) {\n        docBuffer[0] = singletonDocID;\n        freqBuffer[0] = totalTermFreq;\n        docBuffer[1] = NO_MORE_DOCS;\n        blockUpto++;\n      } else {\n        readVIntBlock(docIn, docBuffer, freqBuffer, left, true);\n        prefixSum(docBuffer, left, accum);\n        docBuffer[left] = NO_MORE_DOCS;\n        blockUpto += left;\n      }\n      accum = docBuffer[BLOCK_SIZE - 1];\n      docBufferUpto = 0;\n      assert docBuffer[BLOCK_SIZE] == NO_MORE_DOCS;\n    }\n\n","sourceOld":"    private void refillDocs() throws IOException {\n      final int left = docFreq - docUpto;\n      assert left >= 0;\n\n      if (left >= BLOCK_SIZE) {\n        forDeltaUtil.decodeAndPrefixSum(docIn, accum, docBuffer);\n        pforUtil.decode(docIn, freqBuffer);\n      } else if (docFreq == 1) {\n        docBuffer[0] = singletonDocID;\n        freqBuffer[0] = totalTermFreq;\n        Arrays.fill(docBuffer, 1, BLOCK_SIZE, DocIdSetIterator.NO_MORE_DOCS);\n      } else {\n        readVIntBlock(docIn, docBuffer, freqBuffer, left, true);\n        prefixSum(docBuffer, left, accum);\n        Arrays.fill(docBuffer, left, BLOCK_SIZE, DocIdSetIterator.NO_MORE_DOCS);\n      }\n      accum = docBuffer[BLOCK_SIZE - 1];\n      docBufferUpto = 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3270c8036d92f23d84b526bdcb07d645d3102eb7":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"],"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3270c8036d92f23d84b526bdcb07d645d3102eb7"]},"commit2Childs":{"3270c8036d92f23d84b526bdcb07d645d3102eb7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["3270c8036d92f23d84b526bdcb07d645d3102eb7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}