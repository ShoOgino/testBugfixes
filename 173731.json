{"path":"lucene/contrib/misc/src/java/org/apache/lucene/document/FieldSelectorVisitor.LazyField#LazyField(IndexInput,String,FieldType,int,long,boolean,boolean).mjava","commits":[{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/document/FieldSelectorVisitor.LazyField#LazyField(IndexInput,String,FieldType,int,long,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader.LazyField#LazyField(String,Field.Store,int,long,boolean,boolean).mjava","sourceNew":"    public LazyField(IndexInput in, String name, FieldType ft, int toRead, long pointer, boolean isBinary, boolean cacheResult) {\n      super(name, ft);\n      this.in = in;\n      this.toRead = toRead;\n      this.pointer = pointer;\n      this.isBinary = isBinary;\n      this.cacheResult = cacheResult;\n    }\n\n","sourceOld":"    public LazyField(String name, Field.Store store, int toRead, long pointer, boolean isBinary, boolean cacheResult) {\n      super(name, store, Field.Index.NO, Field.TermVector.NO);\n      this.toRead = toRead;\n      this.pointer = pointer;\n      this.isBinary = isBinary;\n      this.cacheResult = cacheResult;\n      if (isBinary)\n        binaryLength = toRead;\n      lazy = true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/document/FieldSelectorVisitor.LazyField#LazyField(IndexInput,String,FieldType,int,long,boolean,boolean).mjava","sourceNew":null,"sourceOld":"    public LazyField(IndexInput in, String name, FieldType ft, int toRead, long pointer, boolean isBinary, boolean cacheResult) {\n      super(name, ft);\n      this.in = in;\n      this.toRead = toRead;\n      this.pointer = pointer;\n      this.isBinary = isBinary;\n      this.cacheResult = cacheResult;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"06584e6e98d592b34e1329b384182f368d2025e8":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06584e6e98d592b34e1329b384182f368d2025e8"]},"commit2Childs":{"06584e6e98d592b34e1329b384182f368d2025e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["06584e6e98d592b34e1329b384182f368d2025e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}