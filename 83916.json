{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#findDirectory(DataImporter,Map[String,String]).mjava","commits":[{"id":"2a2d5d7d5a5bc6b66022afef3bcc646148c796b2","date":1357911503,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#findDirectory(DataImporter,Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  protected void findDirectory(DataImporter dataImporter, Map<String, String> params) {\n    if(params.get(DIRECTORY) != null) {\n      configDir = params.get(DIRECTORY);\n    } else {\n      SolrCore core = dataImporter.getCore();\n      configDir = (core == null ? \".\" : core.getResourceLoader().getConfigDir());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#findDirectory(DataImporter,Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  protected void findDirectory(DataImporter dataImporter, Map<String, String> params) {\n    if(params.get(DIRECTORY) != null) {\n      configDir = params.get(DIRECTORY);\n    } else {\n      SolrCore core = dataImporter.getCore();\n      configDir = (core == null ? \".\" : core.getResourceLoader().getConfigDir());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19","date":1400739326,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#findDirectory(DataImporter,Map[String,String]).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#findDirectory(DataImporter,Map[String,String]).mjava","sourceNew":"  protected void findDirectory(DataImporter dataImporter, Map<String, String> params) {\n    if(params.get(DIRECTORY) != null) {\n      configDir = params.get(DIRECTORY);\n    } else {\n      SolrCore core = dataImporter.getCore();\n      if (core == null) {\n        configDir = SolrResourceLoader.locateSolrHome();\n      } else {\n        configDir = core.getResourceLoader().getConfigDir();\n      }\n    }\n  }\n\n","sourceOld":"  protected void findDirectory(DataImporter dataImporter, Map<String, String> params) {\n    if(params.get(DIRECTORY) != null) {\n      configDir = params.get(DIRECTORY);\n    } else {\n      SolrCore core = dataImporter.getCore();\n      configDir = (core == null ? \".\" : core.getResourceLoader().getConfigDir());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#findDirectory(DataImporter,Map[String,String]).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#findDirectory(DataImporter,Map[String,String]).mjava","sourceNew":"  protected void findDirectory(DataImporter dataImporter, Map<String, String> params) {\n    if(params.get(DIRECTORY) != null) {\n      configDir = params.get(DIRECTORY);\n    } else {\n      SolrCore core = dataImporter.getCore();\n      if (core == null) {\n        configDir = SolrResourceLoader.locateSolrHome();\n      } else {\n        configDir = core.getResourceLoader().getConfigDir();\n      }\n    }\n  }\n\n","sourceOld":"  protected void findDirectory(DataImporter dataImporter, Map<String, String> params) {\n    if(params.get(DIRECTORY) != null) {\n      configDir = params.get(DIRECTORY);\n    } else {\n      SolrCore core = dataImporter.getCore();\n      configDir = (core == null ? \".\" : core.getResourceLoader().getConfigDir());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#findDirectory(DataImporter,Map[String,String]).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#findDirectory(DataImporter,Map[String,String]).mjava","sourceNew":"  protected void findDirectory(DataImporter dataImporter, Map<String, String> params) {\n    if(params.get(DIRECTORY) != null) {\n      configDir = params.get(DIRECTORY);\n    } else {\n      SolrCore core = dataImporter.getCore();\n      if (core == null) {\n        configDir = SolrResourceLoader.locateSolrHome().toString();\n      } else {\n        configDir = core.getResourceLoader().getConfigDir();\n      }\n    }\n  }\n\n","sourceOld":"  protected void findDirectory(DataImporter dataImporter, Map<String, String> params) {\n    if(params.get(DIRECTORY) != null) {\n      configDir = params.get(DIRECTORY);\n    } else {\n      SolrCore core = dataImporter.getCore();\n      if (core == null) {\n        configDir = SolrResourceLoader.locateSolrHome();\n      } else {\n        configDir = core.getResourceLoader().getConfigDir();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#findDirectory(DataImporter,Map[String,String]).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#findDirectory(DataImporter,Map[String,String]).mjava","sourceNew":"  protected void findDirectory(DataImporter dataImporter, Map<String, String> params) {\n    if(params.get(DIRECTORY) != null) {\n      configDir = params.get(DIRECTORY);\n    } else {\n      SolrCore core = dataImporter.getCore();\n      if (core == null) {\n        configDir = SolrPaths.locateSolrHome().toString();\n      } else {\n        configDir = core.getResourceLoader().getConfigDir();\n      }\n    }\n  }\n\n","sourceOld":"  protected void findDirectory(DataImporter dataImporter, Map<String, String> params) {\n    if(params.get(DIRECTORY) != null) {\n      configDir = params.get(DIRECTORY);\n    } else {\n      SolrCore core = dataImporter.getCore();\n      if (core == null) {\n        configDir = SolrResourceLoader.locateSolrHome().toString();\n      } else {\n        configDir = core.getResourceLoader().getConfigDir();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter#findDirectory(DataImporter,Map[String,String]).mjava","sourceNew":null,"sourceOld":"  protected void findDirectory(DataImporter dataImporter, Map<String, String> params) {\n    if(params.get(DIRECTORY) != null) {\n      configDir = params.get(DIRECTORY);\n    } else {\n      SolrCore core = dataImporter.getCore();\n      if (core == null) {\n        configDir = SolrPaths.locateSolrHome().toString();\n      } else {\n        configDir = core.getResourceLoader().getConfigDir();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"2a2d5d7d5a5bc6b66022afef3bcc646148c796b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7605579001505896d48b07160075a5c8b8e128e":["2a2d5d7d5a5bc6b66022afef3bcc646148c796b2","4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2a2d5d7d5a5bc6b66022afef3bcc646148c796b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19":["2a2d5d7d5a5bc6b66022afef3bcc646148c796b2"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"2a2d5d7d5a5bc6b66022afef3bcc646148c796b2":["b7605579001505896d48b07160075a5c8b8e128e","4e6354dd7c71fe122926fc53d7d29f715b1283db","4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2a2d5d7d5a5bc6b66022afef3bcc646148c796b2","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"b7605579001505896d48b07160075a5c8b8e128e":[],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19":["a626ec4d1c92e59fe390724d6220081047b03ce7","b7605579001505896d48b07160075a5c8b8e128e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7605579001505896d48b07160075a5c8b8e128e","4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}