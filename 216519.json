{"path":"sandbox/contributions/XML-Indexing-Demo/src/java/org/apache/lucenesandbox/xmlindexingdemo/IndexFiles#indexDocs(IndexWriter,File).mjava","commits":[{"id":"8c7ebc820e10871ab86ee5e759583481ab526e45","date":1024671771,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/XML-Indexing-Demo/src/java/org/apache/lucenesandbox/xmlindexingdemo/IndexFiles#indexDocs(IndexWriter,File).mjava","pathOld":"/dev/null","sourceNew":"    public static void indexDocs(IndexWriter writer, File file)\n\tthrows Exception\n    {\n\tif (file.isDirectory())\n\t{\n\t    String[] files = file.list();\n\t    for (int i = 0; i < files.length; i++)\n\t\tindexDocs(writer, new File(file, files[i]));\n\t}\n\telse\n\t{\n\t    System.out.println(\"adding \" + file);\n\t    XMLDocumentHandlerSAX hdlr = new XMLDocumentHandlerSAX(file);\n\t    writer.addDocument(hdlr.getDocument());\n\t    // For DOM, use\n\t    // XMLDocumentHandlerDOM hdlr = new XMLDocumentHandlerDOM();\n\t    // writer.addDocument(hdlr.createXMLDocument(file));\n\t}\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f979ddd9eacc7a679a9f030774cc6ec819fa2558","date":1114819647,"type":4,"author":"Erik Hatcher","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/XML-Indexing-Demo/src/java/org/apache/lucenesandbox/xmlindexingdemo/IndexFiles#indexDocs(IndexWriter,File).mjava","sourceNew":null,"sourceOld":"    public static void indexDocs(IndexWriter writer, File file)\n\tthrows Exception\n    {\n\tif (file.isDirectory())\n\t{\n\t    String[] files = file.list();\n\t    for (int i = 0; i < files.length; i++)\n\t\tindexDocs(writer, new File(file, files[i]));\n\t}\n\telse\n\t{\n\t    System.out.println(\"adding \" + file);\n\t    XMLDocumentHandlerSAX hdlr = new XMLDocumentHandlerSAX(file);\n\t    writer.addDocument(hdlr.getDocument());\n\t    // For DOM, use\n\t    // XMLDocumentHandlerDOM hdlr = new XMLDocumentHandlerDOM();\n\t    // writer.addDocument(hdlr.createXMLDocument(file));\n\t}\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8c7ebc820e10871ab86ee5e759583481ab526e45":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f979ddd9eacc7a679a9f030774cc6ec819fa2558"],"f979ddd9eacc7a679a9f030774cc6ec819fa2558":["8c7ebc820e10871ab86ee5e759583481ab526e45"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c7ebc820e10871ab86ee5e759583481ab526e45"],"8c7ebc820e10871ab86ee5e759583481ab526e45":["f979ddd9eacc7a679a9f030774cc6ec819fa2558"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f979ddd9eacc7a679a9f030774cc6ec819fa2558":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}