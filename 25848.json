{"path":"src/test/org/apache/lucene/store/TestWindowsMMap#randomToken().mjava","commits":[{"id":"53a4a9cf418572414457706fed6284a50f66c8bc","date":1164742078,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestWindowsMMap#randomToken().mjava","pathOld":"/dev/null","sourceNew":"\tprivate String randomToken() {\r\n\t\tint tl = 1 + random.nextInt(7);\r\n\t\tStringBuffer sb = new StringBuffer();\r\n\t\tfor(int cx = 0; cx < tl; cx ++) {\r\n\t\t\tint c = random.nextInt(25);\r\n\t\t\tsb.append(alphabet.substring(c, c+1));\r\n\t\t}\r\n\t\treturn sb.toString();\r\n\t}\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"290c401c31db375e771805c3ba7ac5f64c7370dc","date":1192034795,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestWindowsMMap#randomToken().mjava","pathOld":"src/test/org/apache/lucene/store/TestWindowsMMap#randomToken().mjava","sourceNew":"\tprivate String randomToken() {\n\t\tint tl = 1 + random.nextInt(7);\n\t\tStringBuffer sb = new StringBuffer();\n\t\tfor(int cx = 0; cx < tl; cx ++) {\n\t\t\tint c = random.nextInt(25);\n\t\t\tsb.append(alphabet.substring(c, c+1));\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n","sourceOld":"\tprivate String randomToken() {\r\n\t\tint tl = 1 + random.nextInt(7);\r\n\t\tStringBuffer sb = new StringBuffer();\r\n\t\tfor(int cx = 0; cx < tl; cx ++) {\r\n\t\t\tint c = random.nextInt(25);\r\n\t\t\tsb.append(alphabet.substring(c, c+1));\r\n\t\t}\r\n\t\treturn sb.toString();\r\n\t}\r\n\n","bugFix":["53a4a9cf418572414457706fed6284a50f66c8bc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c","date":1254521470,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestWindowsMMap#randomToken().mjava","pathOld":"src/test/org/apache/lucene/store/TestWindowsMMap#randomToken().mjava","sourceNew":"\tprivate String randomToken() {\n\t\tint tl = 1 + random.nextInt(7);\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(int cx = 0; cx < tl; cx ++) {\n\t\t\tint c = random.nextInt(25);\n\t\t\tsb.append(alphabet.substring(c, c+1));\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n","sourceOld":"\tprivate String randomToken() {\n\t\tint tl = 1 + random.nextInt(7);\n\t\tStringBuffer sb = new StringBuffer();\n\t\tfor(int cx = 0; cx < tl; cx ++) {\n\t\t\tint c = random.nextInt(25);\n\t\t\tsb.append(alphabet.substring(c, c+1));\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestWindowsMMap#randomToken().mjava","pathOld":"src/test/org/apache/lucene/store/TestWindowsMMap#randomToken().mjava","sourceNew":"  private String randomToken() {\n    int tl = 1 + random.nextInt(7);\n    StringBuilder sb = new StringBuilder();\n    for(int cx = 0; cx < tl; cx ++) {\n      int c = random.nextInt(25);\n      sb.append(alphabet.substring(c, c+1));\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"\tprivate String randomToken() {\n\t\tint tl = 1 + random.nextInt(7);\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(int cx = 0; cx < tl; cx ++) {\n\t\t\tint c = random.nextInt(25);\n\t\t\tsb.append(alphabet.substring(c, c+1));\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestWindowsMMap#randomToken().mjava","pathOld":"src/test/org/apache/lucene/store/TestWindowsMMap#randomToken().mjava","sourceNew":"  private String randomToken() {\n    int tl = 1 + random.nextInt(7);\n    StringBuilder sb = new StringBuilder();\n    for(int cx = 0; cx < tl; cx ++) {\n      int c = random.nextInt(25);\n      sb.append(alphabet.substring(c, c+1));\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  private String randomToken() {\n    int tl = 1 + random.nextInt(7);\n    StringBuilder sb = new StringBuilder();\n    for(int cx = 0; cx < tl; cx ++) {\n      int c = random.nextInt(25);\n      sb.append(alphabet.substring(c, c+1));\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"53a4a9cf418572414457706fed6284a50f66c8bc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"290c401c31db375e771805c3ba7ac5f64c7370dc":["53a4a9cf418572414457706fed6284a50f66c8bc"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1326054a8d3aa66382d49decc7f330955c9c6f71"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"53a4a9cf418572414457706fed6284a50f66c8bc":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["53a4a9cf418572414457706fed6284a50f66c8bc"],"290c401c31db375e771805c3ba7ac5f64c7370dc":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}