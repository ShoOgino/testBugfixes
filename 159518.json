{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#init(Version,int,int).mjava","commits":[{"id":"7567347acd9579d742a2ffd4feb1a32062fb1bc3","date":1367935406,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#init(Version,int,int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#init(Version,Side,int,int).mjava","sourceNew":"  private void init(Version version, int minGram, int maxGram) {\n    if (version == null) {\n      throw new IllegalArgumentException(\"version must not be null\");\n    }\n\n    if (minGram < 1) {\n      throw new IllegalArgumentException(\"minGram must be greater than zero\");\n    }\n\n    if (minGram > maxGram) {\n      throw new IllegalArgumentException(\"minGram must not be greater than maxGram\");\n    }\n\n    this.minGram = minGram;\n    this.maxGram = maxGram;\n  }\n\n","sourceOld":"  private void init(Version version, Side side, int minGram, int maxGram) {\n    if (version == null) {\n      throw new IllegalArgumentException(\"version must not be null\");\n    }\n\n    if (side == null) {\n      throw new IllegalArgumentException(\"sideLabel must be either front or back\");\n    }\n\n    if (minGram < 1) {\n      throw new IllegalArgumentException(\"minGram must be greater than zero\");\n    }\n\n    if (minGram > maxGram) {\n      throw new IllegalArgumentException(\"minGram must not be greater than maxGram\");\n    }\n\n    if (version.onOrAfter(Version.LUCENE_44)) {\n      if (side == Side.BACK) {\n        throw new IllegalArgumentException(\"Side.BACK is not supported anymore as of Lucene 4.4\");\n      }\n    } else {\n      maxGram = Math.min(maxGram, 1024);\n    }\n\n    this.version = version;\n    this.minGram = minGram;\n    this.maxGram = maxGram;\n    this.side = side;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704","date":1371043069,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#init(Version,int,int).mjava","sourceNew":null,"sourceOld":"  private void init(Version version, int minGram, int maxGram) {\n    if (version == null) {\n      throw new IllegalArgumentException(\"version must not be null\");\n    }\n\n    if (minGram < 1) {\n      throw new IllegalArgumentException(\"minGram must be greater than zero\");\n    }\n\n    if (minGram > maxGram) {\n      throw new IllegalArgumentException(\"minGram must not be greater than maxGram\");\n    }\n\n    this.minGram = minGram;\n    this.maxGram = maxGram;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704":["7567347acd9579d742a2ffd4feb1a32062fb1bc3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704"],"7567347acd9579d742a2ffd4feb1a32062fb1bc3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7567347acd9579d742a2ffd4feb1a32062fb1bc3"],"7567347acd9579d742a2ffd4feb1a32062fb1bc3":["bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}