{"path":"src/test/org/apache/lucene/store/TestLockFactory#testLockClassProperty().mjava","commits":[{"id":"5c6bd70b660528bcf8dd3216ea1f7565ac220a20","date":1156813990,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#testLockClassProperty().mjava","pathOld":"/dev/null","sourceNew":"    // Verify: setting custom lock factory class (as system property) works:\n    // Verify: FSDirectory does basic locking correctly\n    public void testLockClassProperty() throws IOException {\n        String indexDirName = \"index.TestLockFactory3\";\n\n        System.setProperty(\"org.apache.lucene.store.FSDirectoryLockFactoryClass\",\n                           \"org.apache.lucene.store.NoLockFactory\");\n\n        IndexWriter writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true);\n\n        assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                   NoLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n\n        // Put back to the correct default for subsequent tests:\n        System.setProperty(\"org.apache.lucene.store.FSDirectoryLockFactoryClass\",\n                           \"org.apache.lucene.store.SimpleFSLockFactory\");\n\n        writer.close();\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["088ce71f943a02facdb970ea99322af3d16af6d2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"93a838d8ba57e85e9db126e862958dafc7da4d5b","date":1168639785,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#testLockClassProperty().mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#testLockClassProperty().mjava","sourceNew":"    // Verify: setting custom lock factory class (as system property) works:\n    // Verify: FSDirectory does basic locking correctly\n    public void testLockClassProperty() throws IOException {\n        String indexDirName = \"index.TestLockFactory3\";\n\n        System.setProperty(\"org.apache.lucene.store.FSDirectoryLockFactoryClass\",\n                           \"org.apache.lucene.store.NoLockFactory\");\n\n        IndexWriter writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true);\n\n        assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                   NoLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n\n        // Put back to the correct default for subsequent tests:\n        // System.clearProperty(\"org.apache.lucene.store.FSDirectoryLockFactoryClass\");\n        System.setProperty(\"org.apache.lucene.store.FSDirectoryLockFactoryClass\", \"\");\n\n        writer.close();\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","sourceOld":"    // Verify: setting custom lock factory class (as system property) works:\n    // Verify: FSDirectory does basic locking correctly\n    public void testLockClassProperty() throws IOException {\n        String indexDirName = \"index.TestLockFactory3\";\n\n        System.setProperty(\"org.apache.lucene.store.FSDirectoryLockFactoryClass\",\n                           \"org.apache.lucene.store.NoLockFactory\");\n\n        IndexWriter writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true);\n\n        assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                   NoLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n\n        // Put back to the correct default for subsequent tests:\n        System.setProperty(\"org.apache.lucene.store.FSDirectoryLockFactoryClass\",\n                           \"org.apache.lucene.store.SimpleFSLockFactory\");\n\n        writer.close();\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","bugFix":null,"bugIntro":["088ce71f943a02facdb970ea99322af3d16af6d2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"088ce71f943a02facdb970ea99322af3d16af6d2","date":1172619211,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#testLockClassProperty().mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#testLockClassProperty().mjava","sourceNew":"    // Verify: setting custom lock factory class (as system property) works:\n    // Verify: all 4 builtin LockFactory implementations are\n    //         settable this way \n    // Verify: FSDirectory does basic locking correctly\n    public void testLockClassProperty() throws IOException {\n        String indexDirName = \"index.TestLockFactory3\";\n        String prpName = \"org.apache.lucene.store.FSDirectoryLockFactoryClass\";\n\n        try {\n\n          // NoLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.NoLockFactory\");\n          IndexWriter writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     NoLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n\n          // SingleInstanceLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.SingleInstanceLockFactory\");\n          writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     SingleInstanceLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n\n          // NativeFSLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.NativeFSLockFactory\");\n          writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     NativeFSLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n\n          // SimpleFSLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.SimpleFSLockFactory\");\n          writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     SimpleFSLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n        } finally {\n          // Put back to the correct default for subsequent tests:\n          System.setProperty(\"org.apache.lucene.store.FSDirectoryLockFactoryClass\", \"\");\n        }\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","sourceOld":"    // Verify: setting custom lock factory class (as system property) works:\n    // Verify: FSDirectory does basic locking correctly\n    public void testLockClassProperty() throws IOException {\n        String indexDirName = \"index.TestLockFactory3\";\n\n        System.setProperty(\"org.apache.lucene.store.FSDirectoryLockFactoryClass\",\n                           \"org.apache.lucene.store.NoLockFactory\");\n\n        IndexWriter writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true);\n\n        assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                   NoLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n\n        // Put back to the correct default for subsequent tests:\n        // System.clearProperty(\"org.apache.lucene.store.FSDirectoryLockFactoryClass\");\n        System.setProperty(\"org.apache.lucene.store.FSDirectoryLockFactoryClass\", \"\");\n\n        writer.close();\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","bugFix":["5c6bd70b660528bcf8dd3216ea1f7565ac220a20","93a838d8ba57e85e9db126e862958dafc7da4d5b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"235efcba838a273934c5dd0ef66bb07c7fb0d718","date":1201256475,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#testLockClassProperty().mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#testLockClassProperty().mjava","sourceNew":"    // Verify: setting custom lock factory class (as system property) works:\n    // Verify: all 4 builtin LockFactory implementations are\n    //         settable this way \n    // Verify: FSDirectory does basic locking correctly\n    public void testLockClassProperty() throws IOException {\n        String indexDirName = \"index.TestLockFactory3\";\n        String prpName = \"org.apache.lucene.store.FSDirectoryLockFactoryClass\";\n\n        try {\n\n          // NoLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.NoLockFactory\");\n          IndexWriter writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true,\n                                               IndexWriter.MaxFieldLength.LIMITED);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     NoLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n\n          // SingleInstanceLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.SingleInstanceLockFactory\");\n          writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true,\n                                   IndexWriter.MaxFieldLength.LIMITED);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     SingleInstanceLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n\n          // NativeFSLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.NativeFSLockFactory\");\n          writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true,\n                                   IndexWriter.MaxFieldLength.LIMITED);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     NativeFSLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n\n          // SimpleFSLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.SimpleFSLockFactory\");\n          writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true,\n                                   IndexWriter.MaxFieldLength.LIMITED);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     SimpleFSLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n        } finally {\n          // Put back to the correct default for subsequent tests:\n          System.setProperty(\"org.apache.lucene.store.FSDirectoryLockFactoryClass\", \"\");\n        }\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","sourceOld":"    // Verify: setting custom lock factory class (as system property) works:\n    // Verify: all 4 builtin LockFactory implementations are\n    //         settable this way \n    // Verify: FSDirectory does basic locking correctly\n    public void testLockClassProperty() throws IOException {\n        String indexDirName = \"index.TestLockFactory3\";\n        String prpName = \"org.apache.lucene.store.FSDirectoryLockFactoryClass\";\n\n        try {\n\n          // NoLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.NoLockFactory\");\n          IndexWriter writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     NoLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n\n          // SingleInstanceLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.SingleInstanceLockFactory\");\n          writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     SingleInstanceLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n\n          // NativeFSLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.NativeFSLockFactory\");\n          writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     NativeFSLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n\n          // SimpleFSLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.SimpleFSLockFactory\");\n          writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     SimpleFSLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n        } finally {\n          // Put back to the correct default for subsequent tests:\n          System.setProperty(\"org.apache.lucene.store.FSDirectoryLockFactoryClass\", \"\");\n        }\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f7faff7550034759516ce7f4898cd16c1816cde","date":1245778901,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#testLockClassProperty().mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#testLockClassProperty().mjava","sourceNew":"    // Verify: setting custom lock factory class (as system property) works:\n    // Verify: all 4 builtin LockFactory implementations are\n    //         settable this way \n    // Verify: FSDirectory does basic locking correctly\n    public void testLockClassProperty() throws IOException {\n        File indexDirName = _TestUtil.getTempDir(\"index.TestLockFactory3\");\n        String prpName = \"org.apache.lucene.store.FSDirectoryLockFactoryClass\";\n\n        try {\n\n          // NoLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.NoLockFactory\");\n          IndexWriter writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true,\n                                               IndexWriter.MaxFieldLength.LIMITED);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     NoLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n\n          // SingleInstanceLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.SingleInstanceLockFactory\");\n          writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true,\n                                   IndexWriter.MaxFieldLength.LIMITED);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     SingleInstanceLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n\n          // NativeFSLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.NativeFSLockFactory\");\n          writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true,\n                                   IndexWriter.MaxFieldLength.LIMITED);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     NativeFSLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n\n          // SimpleFSLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.SimpleFSLockFactory\");\n          writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true,\n                                   IndexWriter.MaxFieldLength.LIMITED);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     SimpleFSLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n        } finally {\n          // Put back to the correct default for subsequent tests:\n          System.setProperty(\"org.apache.lucene.store.FSDirectoryLockFactoryClass\", \"\");\n        }\n\n        // Cleanup\n        _TestUtil.rmDir(indexDirName);\n    }\n\n","sourceOld":"    // Verify: setting custom lock factory class (as system property) works:\n    // Verify: all 4 builtin LockFactory implementations are\n    //         settable this way \n    // Verify: FSDirectory does basic locking correctly\n    public void testLockClassProperty() throws IOException {\n        String indexDirName = \"index.TestLockFactory3\";\n        String prpName = \"org.apache.lucene.store.FSDirectoryLockFactoryClass\";\n\n        try {\n\n          // NoLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.NoLockFactory\");\n          IndexWriter writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true,\n                                               IndexWriter.MaxFieldLength.LIMITED);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     NoLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n\n          // SingleInstanceLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.SingleInstanceLockFactory\");\n          writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true,\n                                   IndexWriter.MaxFieldLength.LIMITED);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     SingleInstanceLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n\n          // NativeFSLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.NativeFSLockFactory\");\n          writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true,\n                                   IndexWriter.MaxFieldLength.LIMITED);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     NativeFSLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n\n          // SimpleFSLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.SimpleFSLockFactory\");\n          writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true,\n                                   IndexWriter.MaxFieldLength.LIMITED);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     SimpleFSLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n        } finally {\n          // Put back to the correct default for subsequent tests:\n          System.setProperty(\"org.apache.lucene.store.FSDirectoryLockFactoryClass\", \"\");\n        }\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8","date":1254593002,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#testLockClassProperty().mjava","sourceNew":null,"sourceOld":"    // Verify: setting custom lock factory class (as system property) works:\n    // Verify: all 4 builtin LockFactory implementations are\n    //         settable this way \n    // Verify: FSDirectory does basic locking correctly\n    public void testLockClassProperty() throws IOException {\n        File indexDirName = _TestUtil.getTempDir(\"index.TestLockFactory3\");\n        String prpName = \"org.apache.lucene.store.FSDirectoryLockFactoryClass\";\n\n        try {\n\n          // NoLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.NoLockFactory\");\n          IndexWriter writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true,\n                                               IndexWriter.MaxFieldLength.LIMITED);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     NoLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n\n          // SingleInstanceLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.SingleInstanceLockFactory\");\n          writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true,\n                                   IndexWriter.MaxFieldLength.LIMITED);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     SingleInstanceLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n\n          // NativeFSLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.NativeFSLockFactory\");\n          writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true,\n                                   IndexWriter.MaxFieldLength.LIMITED);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     NativeFSLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n\n          // SimpleFSLockFactory:\n          System.setProperty(prpName, \"org.apache.lucene.store.SimpleFSLockFactory\");\n          writer = new IndexWriter(indexDirName, new WhitespaceAnalyzer(), true,\n                                   IndexWriter.MaxFieldLength.LIMITED);\n          assertTrue(\"FSDirectory did not use correct LockFactory: got \" + writer.getDirectory().getLockFactory(),\n                     SimpleFSLockFactory.class.isInstance(writer.getDirectory().getLockFactory()));\n          writer.close();\n        } finally {\n          // Put back to the correct default for subsequent tests:\n          System.setProperty(\"org.apache.lucene.store.FSDirectoryLockFactoryClass\", \"\");\n        }\n\n        // Cleanup\n        _TestUtil.rmDir(indexDirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5c6bd70b660528bcf8dd3216ea1f7565ac220a20":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"235efcba838a273934c5dd0ef66bb07c7fb0d718":["088ce71f943a02facdb970ea99322af3d16af6d2"],"93a838d8ba57e85e9db126e862958dafc7da4d5b":["5c6bd70b660528bcf8dd3216ea1f7565ac220a20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8":["8f7faff7550034759516ce7f4898cd16c1816cde"],"8f7faff7550034759516ce7f4898cd16c1816cde":["235efcba838a273934c5dd0ef66bb07c7fb0d718"],"088ce71f943a02facdb970ea99322af3d16af6d2":["93a838d8ba57e85e9db126e862958dafc7da4d5b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8"]},"commit2Childs":{"5c6bd70b660528bcf8dd3216ea1f7565ac220a20":["93a838d8ba57e85e9db126e862958dafc7da4d5b"],"235efcba838a273934c5dd0ef66bb07c7fb0d718":["8f7faff7550034759516ce7f4898cd16c1816cde"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5c6bd70b660528bcf8dd3216ea1f7565ac220a20"],"93a838d8ba57e85e9db126e862958dafc7da4d5b":["088ce71f943a02facdb970ea99322af3d16af6d2"],"8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8f7faff7550034759516ce7f4898cd16c1816cde":["8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8"],"088ce71f943a02facdb970ea99322af3d16af6d2":["235efcba838a273934c5dd0ef66bb07c7fb0d718"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}