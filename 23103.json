{"path":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#createLockFactory(String,String).mjava","commits":[{"id":"a0a506fe165b26e024afa1aec8a4a7d758e837ff","date":1410971446,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#createLockFactory(String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new LockFactory for a given path.\n   * @param lockPath the path of the index directory\n   * @param rawLockType A string value as passed in config. Every factory should at least support 'none' to disable locking.\n   * @throws IOException If there is a low-level I/O error.\n   */\n  protected abstract LockFactory createLockFactory(String lockPath, String rawLockType) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285cdc737de75b7cc7c284a156b20214deb67bca","date":1415535483,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#createLockFactory(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#createLockFactory(String,String).mjava","sourceNew":"  /**\n   * Creates a new LockFactory for a given path.\n   * @param rawLockType A string value as passed in config. Every factory should at least support 'none' to disable locking.\n   * @throws IOException If there is a low-level I/O error.\n   */\n  protected abstract LockFactory createLockFactory(String rawLockType) throws IOException;\n\n","sourceOld":"  /**\n   * Creates a new LockFactory for a given path.\n   * @param lockPath the path of the index directory\n   * @param rawLockType A string value as passed in config. Every factory should at least support 'none' to disable locking.\n   * @throws IOException If there is a low-level I/O error.\n   */\n  protected abstract LockFactory createLockFactory(String lockPath, String rawLockType) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0a506fe165b26e024afa1aec8a4a7d758e837ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"285cdc737de75b7cc7c284a156b20214deb67bca":["a0a506fe165b26e024afa1aec8a4a7d758e837ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["285cdc737de75b7cc7c284a156b20214deb67bca"]},"commit2Childs":{"a0a506fe165b26e024afa1aec8a4a7d758e837ff":["285cdc737de75b7cc7c284a156b20214deb67bca"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0a506fe165b26e024afa1aec8a4a7d758e837ff"],"285cdc737de75b7cc7c284a156b20214deb67bca":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}