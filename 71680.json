{"path":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighterRanking#checkDocument(IndexSearcher,int,int).mjava","commits":[{"id":"43ff047e697f5b71d06c7eec1406226951c59b80","date":1356561472,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighterRanking#checkDocument(IndexSearcher,int,int).mjava","pathOld":"/dev/null","sourceNew":"  private void checkDocument(IndexSearcher is, int doc, int maxTopN) throws IOException {\n    for (int ch = 'a'; ch <= 'z'; ch++) {\n      Term term = new Term(\"body\", \"\" + (char)ch);\n      // check a simple term query\n      checkQuery(is, new TermQuery(term), doc, maxTopN);\n      // check a boolean query\n      BooleanQuery bq = new BooleanQuery();\n      bq.add(new TermQuery(term), BooleanClause.Occur.SHOULD);\n      Term nextTerm = new Term(\"body\", \"\" + (char)(ch+1));\n      bq.add(new TermQuery(nextTerm), BooleanClause.Occur.SHOULD);\n      checkQuery(is, bq, doc, maxTopN);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b3d16cba9355e2e97962eb1c441bbd0b6735c15","date":1357426290,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighterRanking#checkDocument(IndexSearcher,int,int).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighterRanking#checkDocument(IndexSearcher,int,int).mjava","sourceNew":"  private void checkDocument(IndexSearcher is, int doc, int maxTopN) throws IOException {\n    for (int ch = 'a'; ch <= 'z'; ch++) {\n      Term term = new Term(\"body\", \"\" + (char)ch);\n      // check a simple term query\n      checkQuery(is, new TermQuery(term), doc, maxTopN);\n      // check a boolean query\n      BooleanQuery bq = new BooleanQuery();\n      bq.add(new TermQuery(term), BooleanClause.Occur.SHOULD);\n      Term nextTerm = new Term(\"body\", \"\" + (char)(ch+1));\n      bq.add(new TermQuery(nextTerm), BooleanClause.Occur.SHOULD);\n      checkQuery(is, bq, doc, maxTopN);\n    }\n  }\n\n","sourceOld":"  private void checkDocument(IndexSearcher is, int doc, int maxTopN) throws IOException {\n    for (int ch = 'a'; ch <= 'z'; ch++) {\n      Term term = new Term(\"body\", \"\" + (char)ch);\n      // check a simple term query\n      checkQuery(is, new TermQuery(term), doc, maxTopN);\n      // check a boolean query\n      BooleanQuery bq = new BooleanQuery();\n      bq.add(new TermQuery(term), BooleanClause.Occur.SHOULD);\n      Term nextTerm = new Term(\"body\", \"\" + (char)(ch+1));\n      bq.add(new TermQuery(nextTerm), BooleanClause.Occur.SHOULD);\n      checkQuery(is, bq, doc, maxTopN);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["43ff047e697f5b71d06c7eec1406226951c59b80"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"43ff047e697f5b71d06c7eec1406226951c59b80":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4b3d16cba9355e2e97962eb1c441bbd0b6735c15"]},"commit2Childs":{"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["43ff047e697f5b71d06c7eec1406226951c59b80"],"43ff047e697f5b71d06c7eec1406226951c59b80":["4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}