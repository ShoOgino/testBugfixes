{"path":"contrib/gdata-server/src/test/org/apache/lucene/gdata/search/TestStandardGdataSearcher#testCollectHits().mjava","commits":[{"id":"09fe963da2613c724ffe82353b4ca2364a1f93c6","date":1155249160,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/test/org/apache/lucene/gdata/search/TestStandardGdataSearcher#testCollectHits().mjava","pathOld":"/dev/null","sourceNew":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.StandardGdataSearcher.collectHits(Hits,\n     * int, int)'\n     */\n    public void testCollectHits() throws IOException {\n        Query q = new TermQuery(new Term(FIELDNAME, FIELDVALUE));\n        Hits hits = this.searcher.get().search(q);\n        assertEquals(amountDocuments, hits.length());\n        List<String> returnValue = this.gdataSearcher.collectHits(hits, 1, 0);\n        assertEquals(hits.doc(0).getField(IndexDocument.FIELD_ENTRY_ID)\n                .stringValue(), returnValue.get(0));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 1, 1);\n        assertEquals(hits.doc(0).getField(IndexDocument.FIELD_ENTRY_ID)\n                .stringValue(), returnValue.get(0));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 1,\n                this.amountDocuments);\n        assertEquals(1, returnValue.size());\n        assertEquals(hits.doc(this.amountDocuments - 1).getField(\n                IndexDocument.FIELD_ENTRY_ID).stringValue(), returnValue.get(0));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 10,\n                this.amountDocuments);\n        assertEquals(1, returnValue.size());\n        assertEquals(hits.doc(this.amountDocuments - 1).getField(\n                IndexDocument.FIELD_ENTRY_ID).stringValue(), returnValue.get(0));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 50, 0);\n        assertEquals(this.amountDocuments, returnValue.size());\n        assertTrue(returnValue.containsAll(this.idlist));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 1, 5);\n        assertEquals(1, returnValue.size());\n        assertEquals(hits.doc(4).getField(IndexDocument.FIELD_ENTRY_ID)\n                .stringValue(), returnValue.get(0));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 50,\n                this.amountDocuments);\n        assertEquals(1, returnValue.size());\n        assertEquals(hits.doc(this.amountDocuments - 1).getField(\n                IndexDocument.FIELD_ENTRY_ID).stringValue(), returnValue.get(0));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 1,\n                this.amountDocuments + 1);\n        assertEquals(0, returnValue.size());\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/search/TestStandardGdataSearcher#testCollectHits().mjava","pathOld":"contrib/gdata-server/src/test/org/apache/lucene/gdata/search/TestStandardGdataSearcher#testCollectHits().mjava","sourceNew":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.StandardGdataSearcher.collectHits(Hits,\n     * int, int)'\n     */\n    public void testCollectHits() throws IOException {\n        Query q = new TermQuery(new Term(FIELDNAME, FIELDVALUE));\n        Hits hits = this.searcher.get().search(q);\n        assertEquals(amountDocuments, hits.length());\n        List<String> returnValue = this.gdataSearcher.collectHits(hits, 1, 0);\n        assertEquals(hits.doc(0).getField(IndexDocument.FIELD_ENTRY_ID)\n                .stringValue(), returnValue.get(0));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 1, 1);\n        assertEquals(hits.doc(0).getField(IndexDocument.FIELD_ENTRY_ID)\n                .stringValue(), returnValue.get(0));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 1,\n                this.amountDocuments);\n        assertEquals(1, returnValue.size());\n        assertEquals(hits.doc(this.amountDocuments - 1).getField(\n                IndexDocument.FIELD_ENTRY_ID).stringValue(), returnValue.get(0));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 10,\n                this.amountDocuments);\n        assertEquals(1, returnValue.size());\n        assertEquals(hits.doc(this.amountDocuments - 1).getField(\n                IndexDocument.FIELD_ENTRY_ID).stringValue(), returnValue.get(0));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 50, 0);\n        assertEquals(this.amountDocuments, returnValue.size());\n        assertTrue(returnValue.containsAll(this.idlist));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 1, 5);\n        assertEquals(1, returnValue.size());\n        assertEquals(hits.doc(4).getField(IndexDocument.FIELD_ENTRY_ID)\n                .stringValue(), returnValue.get(0));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 50,\n                this.amountDocuments);\n        assertEquals(1, returnValue.size());\n        assertEquals(hits.doc(this.amountDocuments - 1).getField(\n                IndexDocument.FIELD_ENTRY_ID).stringValue(), returnValue.get(0));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 1,\n                this.amountDocuments + 1);\n        assertEquals(0, returnValue.size());\n\n    }\n\n","sourceOld":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.StandardGdataSearcher.collectHits(Hits,\n     * int, int)'\n     */\n    public void testCollectHits() throws IOException {\n        Query q = new TermQuery(new Term(FIELDNAME, FIELDVALUE));\n        Hits hits = this.searcher.get().search(q);\n        assertEquals(amountDocuments, hits.length());\n        List<String> returnValue = this.gdataSearcher.collectHits(hits, 1, 0);\n        assertEquals(hits.doc(0).getField(IndexDocument.FIELD_ENTRY_ID)\n                .stringValue(), returnValue.get(0));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 1, 1);\n        assertEquals(hits.doc(0).getField(IndexDocument.FIELD_ENTRY_ID)\n                .stringValue(), returnValue.get(0));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 1,\n                this.amountDocuments);\n        assertEquals(1, returnValue.size());\n        assertEquals(hits.doc(this.amountDocuments - 1).getField(\n                IndexDocument.FIELD_ENTRY_ID).stringValue(), returnValue.get(0));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 10,\n                this.amountDocuments);\n        assertEquals(1, returnValue.size());\n        assertEquals(hits.doc(this.amountDocuments - 1).getField(\n                IndexDocument.FIELD_ENTRY_ID).stringValue(), returnValue.get(0));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 50, 0);\n        assertEquals(this.amountDocuments, returnValue.size());\n        assertTrue(returnValue.containsAll(this.idlist));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 1, 5);\n        assertEquals(1, returnValue.size());\n        assertEquals(hits.doc(4).getField(IndexDocument.FIELD_ENTRY_ID)\n                .stringValue(), returnValue.get(0));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 50,\n                this.amountDocuments);\n        assertEquals(1, returnValue.size());\n        assertEquals(hits.doc(this.amountDocuments - 1).getField(\n                IndexDocument.FIELD_ENTRY_ID).stringValue(), returnValue.get(0));\n\n        returnValue = this.gdataSearcher.collectHits(hits, 1,\n                this.amountDocuments + 1);\n        assertEquals(0, returnValue.size());\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"]},"commit2Childs":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}