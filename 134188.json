{"path":"src/test/org/apache/lucene/search/TestTermRangeQuery.SingleCharAnalyzer.SingleCharTokenizer#reset(Reader).mjava","commits":[{"id":"0f612096ab5275c4821d05f126bf45a89f4782b8","date":1246738452,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermRangeQuery.SingleCharAnalyzer.SingleCharTokenizer#reset(Reader).mjava","pathOld":"src/test/org/apache/lucene/search/TestRangeQuery.SingleCharAnalyzer.SingleCharTokenizer#reset(Reader).mjava","sourceNew":"      public final void reset(Reader reader) throws IOException {\n        super.reset(reader);\n        done = false;\n      }\n\n","sourceOld":"      public final void reset(Reader reader) throws IOException {\n        super.reset(reader);\n        done = false;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermRangeQuery.SingleCharAnalyzer.SingleCharTokenizer#reset(Reader).mjava","pathOld":"src/test/org/apache/lucene/search/TestTermRangeQuery.SingleCharAnalyzer.SingleCharTokenizer#reset(Reader).mjava","sourceNew":"      @Override\n      public final void reset(Reader reader) throws IOException {\n        super.reset(reader);\n        done = false;\n      }\n\n","sourceOld":"      public final void reset(Reader reader) throws IOException {\n        super.reset(reader);\n        done = false;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestTermRangeQuery.SingleCharAnalyzer.SingleCharTokenizer#reset(Reader).mjava","pathOld":"src/test/org/apache/lucene/search/TestTermRangeQuery.SingleCharAnalyzer.SingleCharTokenizer#reset(Reader).mjava","sourceNew":"      @Override\n      public final void reset(Reader reader) throws IOException {\n        super.reset(reader);\n        done = false;\n      }\n\n","sourceOld":"      @Override\n      public final void reset(Reader reader) throws IOException {\n        super.reset(reader);\n        done = false;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["0f612096ab5275c4821d05f126bf45a89f4782b8"],"0f612096ab5275c4821d05f126bf45a89f4782b8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1326054a8d3aa66382d49decc7f330955c9c6f71"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f612096ab5275c4821d05f126bf45a89f4782b8":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f612096ab5275c4821d05f126bf45a89f4782b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}