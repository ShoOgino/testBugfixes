{"path":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/OverviewPanelProvider.Observer#openIndex(LukeState).mjava","commits":[{"id":"f554f2d9b5456248ab6467b9d4f6015686797a6c","date":1554891357,"type":0,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/OverviewPanelProvider.Observer#openIndex(LukeState).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void openIndex(LukeState state) {\n      overviewModel = overviewFactory.newInstance(state.getIndexReader(), state.getIndexPath());\n\n      indexPathLbl.setText(overviewModel.getIndexPath());\n      indexPathLbl.setToolTipText(overviewModel.getIndexPath());\n      numFieldsLbl.setText(Integer.toString(overviewModel.getNumFields()));\n      numDocsLbl.setText(Integer.toString(overviewModel.getNumDocuments()));\n      numTermsLbl.setText(Long.toString(overviewModel.getNumTerms()));\n      String del = overviewModel.hasDeletions() ? String.format(Locale.ENGLISH, \"Yes (%d)\", overviewModel.getNumDeletedDocs()) : \"No\";\n      String opt = overviewModel.isOptimized().map(b -> b ? \"Yes\" : \"No\").orElse(\"?\");\n      delOptLbl.setText(del + \" / \" + opt);\n      indexVerLbl.setText(overviewModel.getIndexVersion().map(v -> Long.toString(v)).orElse(\"?\"));\n      indexFmtLbl.setText(overviewModel.getIndexFormat().orElse(\"\"));\n      dirImplLbl.setText(overviewModel.getDirImpl().orElse(\"\"));\n      commitPointLbl.setText(overviewModel.getCommitDescription().orElse(\"---\"));\n      commitUserDataLbl.setText(overviewModel.getCommitUserData().orElse(\"---\"));\n\n      // term counts table\n      Map<String, Long> termCounts = overviewModel.getSortedTermCounts(TermCountsOrder.COUNT_DESC);\n      long numTerms = overviewModel.getNumTerms();\n      termCountsTable.setModel(new TermCountsTableModel(numTerms, termCounts));\n      termCountsTable.setRowSorter(new TableRowSorter<>(termCountsTable.getModel()));\n      termCountsTable.getColumnModel().getColumn(TermCountsTableModel.Column.NAME.getIndex()).setMaxWidth(TermCountsTableModel.Column.NAME.getColumnWidth());\n      termCountsTable.getColumnModel().getColumn(TermCountsTableModel.Column.TERM_COUNT.getIndex()).setMaxWidth(TermCountsTableModel.Column.TERM_COUNT.getColumnWidth());\n      DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();\n      rightRenderer.setHorizontalAlignment(JLabel.RIGHT);\n      termCountsTable.getColumnModel().getColumn(TermCountsTableModel.Column.RATIO.getIndex()).setCellRenderer(rightRenderer);\n\n      // top terms table\n      topTermsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n      topTermsTable.getColumnModel().getColumn(TopTermsTableModel.Column.RANK.getIndex()).setMaxWidth(TopTermsTableModel.Column.RANK.getColumnWidth());\n      topTermsTable.getColumnModel().getColumn(TopTermsTableModel.Column.FREQ.getIndex()).setMaxWidth(TopTermsTableModel.Column.FREQ.getColumnWidth());\n      topTermsTable.getColumnModel().setColumnMargin(StyleConstants.TABLE_COLUMN_MARGIN_DEFAULT);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f554f2d9b5456248ab6467b9d4f6015686797a6c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}