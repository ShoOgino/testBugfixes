{"path":"solr/core/src/test/org/apache/solr/cloud/TestMultiCoreConfBootstrap#testMultiCoreConfBootstrap().mjava","commits":[{"id":"9896f063d7e42373599b68eb61b173bdb11411c5","date":1330354201,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMultiCoreConfBootstrap#testMultiCoreConfBootstrap().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMultiCoreConfBootstrap() throws Exception {\n    System.setProperty(\"bootstrap_conf\", \"true\");\n    cores = new CoreContainer(home, new File(home, \"solr.xml\"));\n    SolrZkClient zkclient = cores.getZkController().getZkClient();\n    // zkclient.printLayoutToStdOut();\n    \n    assertTrue(zkclient.exists(\"/configs/core1/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core0/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMultiCoreConfBootstrap#testMultiCoreConfBootstrap().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMultiCoreConfBootstrap() throws Exception {\n    System.setProperty(\"bootstrap_conf\", \"true\");\n    cores = new CoreContainer(home, new File(home, \"solr.xml\"));\n    SolrZkClient zkclient = cores.getZkController().getZkClient();\n    // zkclient.printLayoutToStdOut();\n    \n    assertTrue(zkclient.exists(\"/configs/core1/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core0/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c8719b2c0b382be11f5b193b6fc14bc310e906b","date":1344770591,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMultiCoreConfBootstrap#testMultiCoreConfBootstrap().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMultiCoreConfBootstrap#testMultiCoreConfBootstrap().mjava","sourceNew":"  @Test\n  public void testMultiCoreConfBootstrap() throws Exception {\n    System.setProperty(\"bootstrap_conf\", \"true\");\n    cores = new CoreContainer(home, new File(home, \"solr.xml\"));\n    SolrZkClient zkclient = cores.getZkController().getZkClient();\n    // zkclient.printLayoutToStdOut();\n    \n    assertTrue(zkclient.exists(\"/configs/core1/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core0/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    \n    zkclient.close();\n  }\n\n","sourceOld":"  @Test\n  public void testMultiCoreConfBootstrap() throws Exception {\n    System.setProperty(\"bootstrap_conf\", \"true\");\n    cores = new CoreContainer(home, new File(home, \"solr.xml\"));\n    SolrZkClient zkclient = cores.getZkController().getZkClient();\n    // zkclient.printLayoutToStdOut();\n    \n    assertTrue(zkclient.exists(\"/configs/core1/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core0/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMultiCoreConfBootstrap#testMultiCoreConfBootstrap().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMultiCoreConfBootstrap#testMultiCoreConfBootstrap().mjava","sourceNew":"  @Test\n  public void testMultiCoreConfBootstrap() throws Exception {\n    System.setProperty(\"bootstrap_conf\", \"true\");\n    cores = new CoreContainer(home, new File(home, \"solr.xml\"));\n    SolrZkClient zkclient = cores.getZkController().getZkClient();\n    // zkclient.printLayoutToStdOut();\n    \n    assertTrue(zkclient.exists(\"/configs/core1/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core0/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    \n    zkclient.close();\n  }\n\n","sourceOld":"  @Test\n  public void testMultiCoreConfBootstrap() throws Exception {\n    System.setProperty(\"bootstrap_conf\", \"true\");\n    cores = new CoreContainer(home, new File(home, \"solr.xml\"));\n    SolrZkClient zkclient = cores.getZkController().getZkClient();\n    // zkclient.printLayoutToStdOut();\n    \n    assertTrue(zkclient.exists(\"/configs/core1/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core0/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMultiCoreConfBootstrap#testMultiCoreConfBootstrap().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMultiCoreConfBootstrap#testMultiCoreConfBootstrap().mjava","sourceNew":"  @Test\n  public void testMultiCoreConfBootstrap() throws Exception {\n    System.setProperty(\"bootstrap_conf\", \"true\");\n    cores = new CoreContainer(home, new File(home, \"solr.xml\"));\n    SolrZkClient zkclient = cores.getZkController().getZkClient();\n    // zkclient.printLayoutToStdOut();\n    \n    assertTrue(zkclient.exists(\"/configs/core1/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core0/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    \n    zkclient.close();\n  }\n\n","sourceOld":"  @Test\n  public void testMultiCoreConfBootstrap() throws Exception {\n    System.setProperty(\"bootstrap_conf\", \"true\");\n    cores = new CoreContainer(home, new File(home, \"solr.xml\"));\n    SolrZkClient zkclient = cores.getZkController().getZkClient();\n    // zkclient.printLayoutToStdOut();\n    \n    assertTrue(zkclient.exists(\"/configs/core1/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core0/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d264f386d864b5751209060e8886ca9845f70469","date":1372172126,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMultiCoreConfBootstrap#testMultiCoreConfBootstrap().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMultiCoreConfBootstrap#testMultiCoreConfBootstrap().mjava","sourceNew":"  @Test\n  public void testMultiCoreConfBootstrap() throws Exception {\n    System.setProperty(\"bootstrap_conf\", \"true\");\n    cores = CoreContainer.createAndLoad(home, new File(home, \"solr.xml\"));\n    SolrZkClient zkclient = cores.getZkController().getZkClient();\n    // zkclient.printLayoutToStdOut();\n    \n    assertTrue(zkclient.exists(\"/configs/core1/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core0/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    \n    zkclient.close();\n  }\n\n","sourceOld":"  @Test\n  public void testMultiCoreConfBootstrap() throws Exception {\n    System.setProperty(\"bootstrap_conf\", \"true\");\n    cores = new CoreContainer(home, new File(home, \"solr.xml\"));\n    SolrZkClient zkclient = cores.getZkController().getZkClient();\n    // zkclient.printLayoutToStdOut();\n    \n    assertTrue(zkclient.exists(\"/configs/core1/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core0/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    \n    zkclient.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"354983dcdf70c800bf2573d10b54a7391b1dc167","date":1372183171,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMultiCoreConfBootstrap#testMultiCoreConfBootstrap().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMultiCoreConfBootstrap#testMultiCoreConfBootstrap().mjava","sourceNew":"  @Test\n  public void testMultiCoreConfBootstrap() throws Exception {\n    System.setProperty(\"bootstrap_conf\", \"true\");\n    cores = new CoreContainer(home, new File(home, \"solr.xml\"));\n    SolrZkClient zkclient = cores.getZkController().getZkClient();\n    // zkclient.printLayoutToStdOut();\n    \n    assertTrue(zkclient.exists(\"/configs/core1/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core0/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    \n    zkclient.close();\n  }\n\n","sourceOld":"  @Test\n  public void testMultiCoreConfBootstrap() throws Exception {\n    System.setProperty(\"bootstrap_conf\", \"true\");\n    cores = CoreContainer.createAndLoad(home, new File(home, \"solr.xml\"));\n    SolrZkClient zkclient = cores.getZkController().getZkClient();\n    // zkclient.printLayoutToStdOut();\n    \n    assertTrue(zkclient.exists(\"/configs/core1/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core0/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    \n    zkclient.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMultiCoreConfBootstrap#testMultiCoreConfBootstrap().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMultiCoreConfBootstrap#testMultiCoreConfBootstrap().mjava","sourceNew":"  @Test\n  public void testMultiCoreConfBootstrap() throws Exception {\n    System.setProperty(\"bootstrap_conf\", \"true\");\n    cores = CoreContainer.createAndLoad(home, new File(home, \"solr.xml\"));\n    SolrZkClient zkclient = cores.getZkController().getZkClient();\n    // zkclient.printLayoutToStdOut();\n    \n    assertTrue(zkclient.exists(\"/configs/core1/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core0/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    \n    zkclient.close();\n  }\n\n","sourceOld":"  @Test\n  public void testMultiCoreConfBootstrap() throws Exception {\n    System.setProperty(\"bootstrap_conf\", \"true\");\n    cores = new CoreContainer(home, new File(home, \"solr.xml\"));\n    SolrZkClient zkclient = cores.getZkController().getZkClient();\n    // zkclient.printLayoutToStdOut();\n    \n    assertTrue(zkclient.exists(\"/configs/core1/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core0/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    \n    zkclient.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMultiCoreConfBootstrap#testMultiCoreConfBootstrap().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMultiCoreConfBootstrap#testMultiCoreConfBootstrap().mjava","sourceNew":"  @Test\n  public void testMultiCoreConfBootstrap() throws Exception {\n    System.setProperty(\"bootstrap_conf\", \"true\");\n    cores = CoreContainer.createAndLoad(home, new File(home, \"solr.xml\"));\n    SolrZkClient zkclient = cores.getZkController().getZkClient();\n    // zkclient.printLayoutToStdOut();\n    \n    assertTrue(zkclient.exists(\"/configs/core1/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core0/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    \n    zkclient.close();\n  }\n\n","sourceOld":"  @Test\n  public void testMultiCoreConfBootstrap() throws Exception {\n    System.setProperty(\"bootstrap_conf\", \"true\");\n    cores = new CoreContainer(home, new File(home, \"solr.xml\"));\n    SolrZkClient zkclient = cores.getZkController().getZkClient();\n    // zkclient.printLayoutToStdOut();\n    \n    assertTrue(zkclient.exists(\"/configs/core1/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core0/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    \n    zkclient.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6fb75838ea3c6b1fa977394f436bfffb53b417bc","date":1418226395,"type":4,"author":"Timothy Potter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMultiCoreConfBootstrap#testMultiCoreConfBootstrap().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testMultiCoreConfBootstrap() throws Exception {\n    System.setProperty(\"bootstrap_conf\", \"true\");\n    cores = CoreContainer.createAndLoad(home, new File(home, \"solr.xml\"));\n    SolrZkClient zkclient = cores.getZkController().getZkClient();\n    // zkclient.printLayoutToStdOut();\n    \n    assertTrue(zkclient.exists(\"/configs/core1/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core0/solrconfig.xml\", true));\n    assertTrue(zkclient.exists(\"/configs/core1/schema.xml\", true));\n    \n    zkclient.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7116474e2e390259937401cf928323e0cbc75e60":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["9896f063d7e42373599b68eb61b173bdb11411c5","1c8719b2c0b382be11f5b193b6fc14bc310e906b"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["1c8719b2c0b382be11f5b193b6fc14bc310e906b","7116474e2e390259937401cf928323e0cbc75e60"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9896f063d7e42373599b68eb61b173bdb11411c5"],"6fb75838ea3c6b1fa977394f436bfffb53b417bc":["7116474e2e390259937401cf928323e0cbc75e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"354983dcdf70c800bf2573d10b54a7391b1dc167":["d264f386d864b5751209060e8886ca9845f70469"],"d264f386d864b5751209060e8886ca9845f70469":["1c8719b2c0b382be11f5b193b6fc14bc310e906b"],"9896f063d7e42373599b68eb61b173bdb11411c5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["9896f063d7e42373599b68eb61b173bdb11411c5","1c8719b2c0b382be11f5b193b6fc14bc310e906b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6fb75838ea3c6b1fa977394f436bfffb53b417bc"],"1c8719b2c0b382be11f5b193b6fc14bc310e906b":["9896f063d7e42373599b68eb61b173bdb11411c5"]},"commit2Childs":{"7116474e2e390259937401cf928323e0cbc75e60":["37a0f60745e53927c4c876cfe5b5a58170f0646c","6fb75838ea3c6b1fa977394f436bfffb53b417bc"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","9896f063d7e42373599b68eb61b173bdb11411c5"],"6fb75838ea3c6b1fa977394f436bfffb53b417bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["7116474e2e390259937401cf928323e0cbc75e60"],"d264f386d864b5751209060e8886ca9845f70469":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"9896f063d7e42373599b68eb61b173bdb11411c5":["c7869f64c874ebf7f317d22c00baf2b6857797a6","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","1c8719b2c0b382be11f5b193b6fc14bc310e906b"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"1c8719b2c0b382be11f5b193b6fc14bc310e906b":["c7869f64c874ebf7f317d22c00baf2b6857797a6","37a0f60745e53927c4c876cfe5b5a58170f0646c","d264f386d864b5751209060e8886ca9845f70469","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","37a0f60745e53927c4c876cfe5b5a58170f0646c","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}