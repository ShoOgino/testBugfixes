{"path":"modules/spatial/src/main/java/org/apache/lucene/spatial/strategy/util/CachingDoubleValueSource#getValues(Map,AtomicReaderContext).mjava","commits":[{"id":"ef186f4ac90644cd4e8df6b66acb56a52e5ca602","date":1329778037,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/main/java/org/apache/lucene/spatial/strategy/util/CachingDoubleValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/spatial-lucene/src/main/java/org/apache/lucene/spatial/strategy/util/CachingDoubleValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final int base = readerContext.docBase;\n    final FunctionValues vals = source.getValues(context,readerContext);\n    return new FunctionValues() {\n\n      @Override\n      public double doubleVal(int doc) {\n        Integer key = Integer.valueOf( base+doc );\n        Double v = cache.get( key );\n        if( v == null ) {\n          v = Double.valueOf( vals.doubleVal(doc) );\n          cache.put( key, v );\n        }\n        return v.doubleValue();\n      }\n\n      @Override\n      public float floatVal(int doc) {\n        return (float)doubleVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return doubleVal(doc)+\"\";\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final int base = readerContext.docBase;\n    final FunctionValues vals = source.getValues(context,readerContext);\n    return new FunctionValues() {\n\n      @Override\n      public double doubleVal(int doc) {\n        Integer key = Integer.valueOf( base+doc );\n        Double v = cache.get( key );\n        if( v == null ) {\n          v = Double.valueOf( vals.doubleVal(doc) );\n          cache.put( key, v );\n        }\n        return v.doubleValue();\n      }\n\n      @Override\n      public float floatVal(int doc) {\n        return (float)doubleVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return doubleVal(doc)+\"\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"935445a30e9e8dc0240a7c78efc73d08c2faa6a8","date":1329778521,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/java/org/apache/lucene/spatial/strategy/util/CachingDoubleValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/spatial/src/main/java/org/apache/lucene/spatial/strategy/util/CachingDoubleValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final int base = readerContext.docBase;\n    final FunctionValues vals = source.getValues(context,readerContext);\n    return new FunctionValues() {\n\n      @Override\n      public double doubleVal(int doc) {\n        Integer key = Integer.valueOf( base+doc );\n        Double v = cache.get( key );\n        if( v == null ) {\n          v = Double.valueOf( vals.doubleVal(doc) );\n          cache.put( key, v );\n        }\n        return v.doubleValue();\n      }\n\n      @Override\n      public float floatVal(int doc) {\n        return (float)doubleVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return doubleVal(doc)+\"\";\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final int base = readerContext.docBase;\n    final FunctionValues vals = source.getValues(context,readerContext);\n    return new FunctionValues() {\n\n      @Override\n      public double doubleVal(int doc) {\n        Integer key = Integer.valueOf( base+doc );\n        Double v = cache.get( key );\n        if( v == null ) {\n          v = Double.valueOf( vals.doubleVal(doc) );\n          cache.put( key, v );\n        }\n        return v.doubleValue();\n      }\n\n      @Override\n      public float floatVal(int doc) {\n        return (float)doubleVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return doubleVal(doc)+\"\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"935445a30e9e8dc0240a7c78efc73d08c2faa6a8":["ef186f4ac90644cd4e8df6b66acb56a52e5ca602"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ef186f4ac90644cd4e8df6b66acb56a52e5ca602":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"935445a30e9e8dc0240a7c78efc73d08c2faa6a8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ef186f4ac90644cd4e8df6b66acb56a52e5ca602","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ef186f4ac90644cd4e8df6b66acb56a52e5ca602":["935445a30e9e8dc0240a7c78efc73d08c2faa6a8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["935445a30e9e8dc0240a7c78efc73d08c2faa6a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}