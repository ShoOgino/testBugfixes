{"path":"modules/suggest/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setDistance(StringDistance).mjava","commits":[{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setDistance(StringDistance).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setDistance(StringDistance).mjava","sourceNew":"  /**\n   * Set the string distance metric.\n   * The default is {@link #INTERNAL_LEVENSHTEIN}\n   * <p>\n   * Note: because this spellchecker draws its candidates from the\n   * term dictionary using Levenshtein, it works best with an edit-distance-like\n   * string metric. If you use a different metric than the default,\n   * you might want to consider increasing {@link #setMaxInspections(int)}\n   * to draw more candidates for your metric to rank.\n   */\n  public void setDistance(StringDistance distance) {\n    this.distance = distance;\n  }\n\n","sourceOld":"  /**\n   * Set the string distance metric.\n   * The default is {@link #INTERNAL_LEVENSHTEIN}\n   * <p>\n   * Note: because this spellchecker draws its candidates from the\n   * term dictionary using Levenshtein, it works best with an edit-distance-like\n   * string metric. If you use a different metric than the default,\n   * you might want to consider increasing {@link #setMaxInspections(int)}\n   * to draw more candidates for your metric to rank.\n   */\n  public void setDistance(StringDistance distance) {\n    this.distance = distance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setDistance(StringDistance).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setDistance(StringDistance).mjava","sourceNew":"  /**\n   * Set the string distance metric.\n   * The default is {@link #INTERNAL_LEVENSHTEIN}\n   * <p>\n   * Note: because this spellchecker draws its candidates from the\n   * term dictionary using Levenshtein, it works best with an edit-distance-like\n   * string metric. If you use a different metric than the default,\n   * you might want to consider increasing {@link #setMaxInspections(int)}\n   * to draw more candidates for your metric to rank.\n   */\n  public void setDistance(StringDistance distance) {\n    this.distance = distance;\n  }\n\n","sourceOld":"  /**\n   * Set the string distance metric.\n   * The default is {@link #INTERNAL_LEVENSHTEIN}\n   * <p>\n   * Note: because this spellchecker draws its candidates from the\n   * term dictionary using Levenshtein, it works best with an edit-distance-like\n   * string metric. If you use a different metric than the default,\n   * you might want to consider increasing {@link #setMaxInspections(int)}\n   * to draw more candidates for your metric to rank.\n   */\n  public void setDistance(StringDistance distance) {\n    this.distance = distance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setDistance(StringDistance).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setDistance(StringDistance).mjava","sourceNew":"  /**\n   * Set the string distance metric.\n   * The default is {@link #INTERNAL_LEVENSHTEIN}\n   * <p>\n   * Note: because this spellchecker draws its candidates from the\n   * term dictionary using Levenshtein, it works best with an edit-distance-like\n   * string metric. If you use a different metric than the default,\n   * you might want to consider increasing {@link #setMaxInspections(int)}\n   * to draw more candidates for your metric to rank.\n   */\n  public void setDistance(StringDistance distance) {\n    this.distance = distance;\n  }\n\n","sourceOld":"  /**\n   * Set the string distance metric.\n   * The default is {@link #INTERNAL_LEVENSHTEIN}\n   * <p>\n   * Note: because this spellchecker draws its candidates from the\n   * term dictionary using Levenshtein, it works best with an edit-distance-like\n   * string metric. If you use a different metric than the default,\n   * you might want to consider increasing {@link #setMaxInspections(int)}\n   * to draw more candidates for your metric to rank.\n   */\n  public void setDistance(StringDistance distance) {\n    this.distance = distance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3aecf04c2d454cf9e42c4dc50241a8df41f8e6ab","date":1324934316,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setDistance(StringDistance).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setDistance(StringDistance).mjava","sourceNew":"  /**\n   * Set the string distance metric.\n   * The default is {@link #INTERNAL_LEVENSHTEIN}\n   * <p>\n   * Note: because this spellchecker draws its candidates from the term\n   * dictionary using Damerau-Levenshtein, it works best with an edit-distance-like\n   * string metric. If you use a different metric than the default,\n   * you might want to consider increasing {@link #setMaxInspections(int)}\n   * to draw more candidates for your metric to rank.\n   */\n  public void setDistance(StringDistance distance) {\n    this.distance = distance;\n  }\n\n","sourceOld":"  /**\n   * Set the string distance metric.\n   * The default is {@link #INTERNAL_LEVENSHTEIN}\n   * <p>\n   * Note: because this spellchecker draws its candidates from the\n   * term dictionary using Levenshtein, it works best with an edit-distance-like\n   * string metric. If you use a different metric than the default,\n   * you might want to consider increasing {@link #setMaxInspections(int)}\n   * to draw more candidates for your metric to rank.\n   */\n  public void setDistance(StringDistance distance) {\n    this.distance = distance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setDistance(StringDistance).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setDistance(StringDistance).mjava","sourceNew":"  /**\n   * Set the string distance metric.\n   * The default is {@link #INTERNAL_LEVENSHTEIN}\n   * <p>\n   * Note: because this spellchecker draws its candidates from the term\n   * dictionary using Damerau-Levenshtein, it works best with an edit-distance-like\n   * string metric. If you use a different metric than the default,\n   * you might want to consider increasing {@link #setMaxInspections(int)}\n   * to draw more candidates for your metric to rank.\n   */\n  public void setDistance(StringDistance distance) {\n    this.distance = distance;\n  }\n\n","sourceOld":"  /**\n   * Set the string distance metric.\n   * The default is {@link #INTERNAL_LEVENSHTEIN}\n   * <p>\n   * Note: because this spellchecker draws its candidates from the term\n   * dictionary using Damerau-Levenshtein, it works best with an edit-distance-like\n   * string metric. If you use a different metric than the default,\n   * you might want to consider increasing {@link #setMaxInspections(int)}\n   * to draw more candidates for your metric to rank.\n   */\n  public void setDistance(StringDistance distance) {\n    this.distance = distance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3aecf04c2d454cf9e42c4dc50241a8df41f8e6ab"],"e230a61047bc041516c811baa08a7174d6f8322a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e230a61047bc041516c811baa08a7174d6f8322a"],"3aecf04c2d454cf9e42c4dc50241a8df41f8e6ab":["e230a61047bc041516c811baa08a7174d6f8322a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e230a61047bc041516c811baa08a7174d6f8322a":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","3aecf04c2d454cf9e42c4dc50241a8df41f8e6ab","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"3aecf04c2d454cf9e42c4dc50241a8df41f8e6ab":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e230a61047bc041516c811baa08a7174d6f8322a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}