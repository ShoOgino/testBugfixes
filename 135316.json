{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/CoreParserTestIndexData#CoreParserTestIndexData(Analyzer).mjava","commits":[{"id":"5e72e8538028609e81884b15cfd41af2fa71115b","date":1460646191,"type":1,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/CoreParserTestIndexData#CoreParserTestIndexData(Analyzer).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestCoreParser#beforeClass().mjava","sourceNew":"  CoreParserTestIndexData(Analyzer analyzer) throws Exception {\n    BufferedReader d = new BufferedReader(new InputStreamReader(\n        TestCoreParser.class.getResourceAsStream(\"reuters21578.txt\"), StandardCharsets.US_ASCII));\n    dir = LuceneTestCase.newDirectory();\n    IndexWriter writer = new IndexWriter(dir, LuceneTestCase.newIndexWriterConfig(analyzer));\n    String line = d.readLine();\n    while (line != null) {\n      int endOfDate = line.indexOf('\\t');\n      String date = line.substring(0, endOfDate).trim();\n      String content = line.substring(endOfDate).trim();\n      Document doc = new Document();\n      doc.add(LuceneTestCase.newTextField(\"date\", date, Field.Store.YES));\n      doc.add(LuceneTestCase.newTextField(\"contents\", content, Field.Store.YES));\n      doc.add(new LegacyIntField(\"date2\", Integer.valueOf(date), Field.Store.NO));\n      doc.add(new IntPoint(\"date3\", Integer.valueOf(date)));\n      writer.addDocument(doc);\n      line = d.readLine();\n    }\n    d.close();\n    writer.close();\n    reader = DirectoryReader.open(dir);\n    searcher = LuceneTestCase.newSearcher(reader, false);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // TODO: rewrite test (this needs to set QueryParser.enablePositionIncrements, too, for work with CURRENT):\n    analyzer = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true, MockTokenFilter.ENGLISH_STOPSET);\n    //initialize the parser\n    coreParser = new CoreParser(defaultField, analyzer);\n\n    BufferedReader d = new BufferedReader(new InputStreamReader(\n        TestCoreParser.class.getResourceAsStream(\"reuters21578.txt\"), StandardCharsets.US_ASCII));\n    dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(analyzer));\n    String line = d.readLine();\n    while (line != null) {\n      int endOfDate = line.indexOf('\\t');\n      String date = line.substring(0, endOfDate).trim();\n      String content = line.substring(endOfDate).trim();\n      Document doc = new Document();\n      doc.add(newTextField(\"date\", date, Field.Store.YES));\n      doc.add(newTextField(\"contents\", content, Field.Store.YES));\n      doc.add(new LegacyIntField(\"date2\", Integer.valueOf(date), Field.Store.NO));\n      doc.add(new IntPoint(\"date3\", Integer.valueOf(date)));\n      writer.addDocument(doc);\n      line = d.readLine();\n    }\n    d.close();\n    writer.close();\n    reader = DirectoryReader.open(dir);\n    searcher = newSearcher(reader, false);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50b8410419cbbe9d8e1a96c918a951976bffe680","date":1471869553,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/CoreParserTestIndexData#CoreParserTestIndexData(Analyzer).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/CoreParserTestIndexData#CoreParserTestIndexData(Analyzer).mjava","sourceNew":"  CoreParserTestIndexData(Analyzer analyzer) throws Exception {\n    BufferedReader d = new BufferedReader(new InputStreamReader(\n        TestCoreParser.class.getResourceAsStream(\"reuters21578.txt\"), StandardCharsets.US_ASCII));\n    dir = LuceneTestCase.newDirectory();\n    IndexWriter writer = new IndexWriter(dir, LuceneTestCase.newIndexWriterConfig(analyzer));\n    String line = d.readLine();\n    while (line != null) {\n      int endOfDate = line.indexOf('\\t');\n      String date = line.substring(0, endOfDate).trim();\n      String content = line.substring(endOfDate).trim();\n      Document doc = new Document();\n      doc.add(LuceneTestCase.newTextField(\"date\", date, Field.Store.YES));\n      doc.add(LuceneTestCase.newTextField(\"contents\", content, Field.Store.YES));\n      doc.add(new IntPoint(\"date3\", Integer.valueOf(date)));\n      writer.addDocument(doc);\n      line = d.readLine();\n    }\n    d.close();\n    writer.close();\n    reader = DirectoryReader.open(dir);\n    searcher = LuceneTestCase.newSearcher(reader, false);\n  }\n\n","sourceOld":"  CoreParserTestIndexData(Analyzer analyzer) throws Exception {\n    BufferedReader d = new BufferedReader(new InputStreamReader(\n        TestCoreParser.class.getResourceAsStream(\"reuters21578.txt\"), StandardCharsets.US_ASCII));\n    dir = LuceneTestCase.newDirectory();\n    IndexWriter writer = new IndexWriter(dir, LuceneTestCase.newIndexWriterConfig(analyzer));\n    String line = d.readLine();\n    while (line != null) {\n      int endOfDate = line.indexOf('\\t');\n      String date = line.substring(0, endOfDate).trim();\n      String content = line.substring(endOfDate).trim();\n      Document doc = new Document();\n      doc.add(LuceneTestCase.newTextField(\"date\", date, Field.Store.YES));\n      doc.add(LuceneTestCase.newTextField(\"contents\", content, Field.Store.YES));\n      doc.add(new LegacyIntField(\"date2\", Integer.valueOf(date), Field.Store.NO));\n      doc.add(new IntPoint(\"date3\", Integer.valueOf(date)));\n      writer.addDocument(doc);\n      line = d.readLine();\n    }\n    d.close();\n    writer.close();\n    reader = DirectoryReader.open(dir);\n    searcher = LuceneTestCase.newSearcher(reader, false);\n  }\n\n","bugFix":["5e72e8538028609e81884b15cfd41af2fa71115b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c82557b0a8c9d4012f208e5de912ae7500ea351","date":1471888093,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/CoreParserTestIndexData#CoreParserTestIndexData(Analyzer).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/CoreParserTestIndexData#CoreParserTestIndexData(Analyzer).mjava","sourceNew":"  CoreParserTestIndexData(Analyzer analyzer) throws Exception {\n    BufferedReader d = new BufferedReader(new InputStreamReader(\n        TestCoreParser.class.getResourceAsStream(\"reuters21578.txt\"), StandardCharsets.US_ASCII));\n    dir = LuceneTestCase.newDirectory();\n    IndexWriter writer = new IndexWriter(dir, LuceneTestCase.newIndexWriterConfig(analyzer));\n    String line = d.readLine();\n    while (line != null) {\n      int endOfDate = line.indexOf('\\t');\n      String date = line.substring(0, endOfDate).trim();\n      String content = line.substring(endOfDate).trim();\n      Document doc = new Document();\n      doc.add(LuceneTestCase.newTextField(\"date\", date, Field.Store.YES));\n      doc.add(LuceneTestCase.newTextField(\"contents\", content, Field.Store.YES));\n      doc.add(new IntPoint(\"date3\", Integer.valueOf(date)));\n      writer.addDocument(doc);\n      line = d.readLine();\n    }\n    d.close();\n    writer.close();\n    reader = DirectoryReader.open(dir);\n    searcher = LuceneTestCase.newSearcher(reader, false);\n  }\n\n","sourceOld":"  CoreParserTestIndexData(Analyzer analyzer) throws Exception {\n    BufferedReader d = new BufferedReader(new InputStreamReader(\n        TestCoreParser.class.getResourceAsStream(\"reuters21578.txt\"), StandardCharsets.US_ASCII));\n    dir = LuceneTestCase.newDirectory();\n    IndexWriter writer = new IndexWriter(dir, LuceneTestCase.newIndexWriterConfig(analyzer));\n    String line = d.readLine();\n    while (line != null) {\n      int endOfDate = line.indexOf('\\t');\n      String date = line.substring(0, endOfDate).trim();\n      String content = line.substring(endOfDate).trim();\n      Document doc = new Document();\n      doc.add(LuceneTestCase.newTextField(\"date\", date, Field.Store.YES));\n      doc.add(LuceneTestCase.newTextField(\"contents\", content, Field.Store.YES));\n      doc.add(new LegacyIntField(\"date2\", Integer.valueOf(date), Field.Store.NO));\n      doc.add(new IntPoint(\"date3\", Integer.valueOf(date)));\n      writer.addDocument(doc);\n      line = d.readLine();\n    }\n    d.close();\n    writer.close();\n    reader = DirectoryReader.open(dir);\n    searcher = LuceneTestCase.newSearcher(reader, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","date":1472163016,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/CoreParserTestIndexData#CoreParserTestIndexData(Analyzer).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/CoreParserTestIndexData#CoreParserTestIndexData(Analyzer).mjava","sourceNew":"  CoreParserTestIndexData(Analyzer analyzer) throws Exception {\n    BufferedReader d = new BufferedReader(new InputStreamReader(\n        TestCoreParser.class.getResourceAsStream(\"reuters21578.txt\"), StandardCharsets.US_ASCII));\n    dir = LuceneTestCase.newDirectory();\n    IndexWriter writer = new IndexWriter(dir, LuceneTestCase.newIndexWriterConfig(analyzer));\n    String line = d.readLine();\n    while (line != null) {\n      int endOfDate = line.indexOf('\\t');\n      String date = line.substring(0, endOfDate).trim();\n      String content = line.substring(endOfDate).trim();\n      Document doc = new Document();\n      doc.add(LuceneTestCase.newTextField(\"date\", date, Field.Store.YES));\n      doc.add(LuceneTestCase.newTextField(\"contents\", content, Field.Store.YES));\n      doc.add(new IntPoint(\"date3\", Integer.valueOf(date)));\n      writer.addDocument(doc);\n      line = d.readLine();\n    }\n    d.close();\n    writer.close();\n    reader = DirectoryReader.open(dir);\n    searcher = LuceneTestCase.newSearcher(reader, false);\n  }\n\n","sourceOld":"  CoreParserTestIndexData(Analyzer analyzer) throws Exception {\n    BufferedReader d = new BufferedReader(new InputStreamReader(\n        TestCoreParser.class.getResourceAsStream(\"reuters21578.txt\"), StandardCharsets.US_ASCII));\n    dir = LuceneTestCase.newDirectory();\n    IndexWriter writer = new IndexWriter(dir, LuceneTestCase.newIndexWriterConfig(analyzer));\n    String line = d.readLine();\n    while (line != null) {\n      int endOfDate = line.indexOf('\\t');\n      String date = line.substring(0, endOfDate).trim();\n      String content = line.substring(endOfDate).trim();\n      Document doc = new Document();\n      doc.add(LuceneTestCase.newTextField(\"date\", date, Field.Store.YES));\n      doc.add(LuceneTestCase.newTextField(\"contents\", content, Field.Store.YES));\n      doc.add(new LegacyIntField(\"date2\", Integer.valueOf(date), Field.Store.NO));\n      doc.add(new IntPoint(\"date3\", Integer.valueOf(date)));\n      writer.addDocument(doc);\n      line = d.readLine();\n    }\n    d.close();\n    writer.close();\n    reader = DirectoryReader.open(dir);\n    searcher = LuceneTestCase.newSearcher(reader, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/CoreParserTestIndexData#CoreParserTestIndexData(Analyzer).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/CoreParserTestIndexData#CoreParserTestIndexData(Analyzer).mjava","sourceNew":"  CoreParserTestIndexData(Analyzer analyzer) throws Exception {\n    BufferedReader d = new BufferedReader(new InputStreamReader(\n        TestCoreParser.class.getResourceAsStream(\"reuters21578.txt\"), StandardCharsets.US_ASCII));\n    dir = LuceneTestCase.newDirectory();\n    IndexWriter writer = new IndexWriter(dir, LuceneTestCase.newIndexWriterConfig(analyzer));\n    String line = d.readLine();\n    while (line != null) {\n      int endOfDate = line.indexOf('\\t');\n      String date = line.substring(0, endOfDate).trim();\n      String content = line.substring(endOfDate).trim();\n      Document doc = new Document();\n      doc.add(LuceneTestCase.newTextField(\"date\", date, Field.Store.YES));\n      doc.add(LuceneTestCase.newTextField(\"contents\", content, Field.Store.YES));\n      doc.add(new IntPoint(\"date3\", Integer.valueOf(date)));\n      writer.addDocument(doc);\n      line = d.readLine();\n    }\n    d.close();\n    writer.close();\n    reader = DirectoryReader.open(dir);\n    searcher = LuceneTestCase.newSearcher(reader, false);\n  }\n\n","sourceOld":"  CoreParserTestIndexData(Analyzer analyzer) throws Exception {\n    BufferedReader d = new BufferedReader(new InputStreamReader(\n        TestCoreParser.class.getResourceAsStream(\"reuters21578.txt\"), StandardCharsets.US_ASCII));\n    dir = LuceneTestCase.newDirectory();\n    IndexWriter writer = new IndexWriter(dir, LuceneTestCase.newIndexWriterConfig(analyzer));\n    String line = d.readLine();\n    while (line != null) {\n      int endOfDate = line.indexOf('\\t');\n      String date = line.substring(0, endOfDate).trim();\n      String content = line.substring(endOfDate).trim();\n      Document doc = new Document();\n      doc.add(LuceneTestCase.newTextField(\"date\", date, Field.Store.YES));\n      doc.add(LuceneTestCase.newTextField(\"contents\", content, Field.Store.YES));\n      doc.add(new LegacyIntField(\"date2\", Integer.valueOf(date), Field.Store.NO));\n      doc.add(new IntPoint(\"date3\", Integer.valueOf(date)));\n      writer.addDocument(doc);\n      line = d.readLine();\n    }\n    d.close();\n    writer.close();\n    reader = DirectoryReader.open(dir);\n    searcher = LuceneTestCase.newSearcher(reader, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","date":1489572490,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/CoreParserTestIndexData#CoreParserTestIndexData(Analyzer).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/CoreParserTestIndexData#CoreParserTestIndexData(Analyzer).mjava","sourceNew":"  CoreParserTestIndexData(Analyzer analyzer) throws Exception {\n    BufferedReader d = new BufferedReader(new InputStreamReader(\n        TestCoreParser.class.getResourceAsStream(\"reuters21578.txt\"), StandardCharsets.US_ASCII));\n    dir = LuceneTestCase.newDirectory();\n    IndexWriter writer = new IndexWriter(dir, LuceneTestCase.newIndexWriterConfig(analyzer));\n    String line = d.readLine();\n    while (line != null) {\n      int endOfDate = line.indexOf('\\t');\n      String date = line.substring(0, endOfDate).trim();\n      String content = line.substring(endOfDate).trim();\n      Document doc = new Document();\n      doc.add(LuceneTestCase.newTextField(\"date\", date, Field.Store.YES));\n      doc.add(LuceneTestCase.newTextField(\"contents\", content, Field.Store.YES));\n      doc.add(new IntPoint(\"date3\", Integer.parseInt(date)));\n      writer.addDocument(doc);\n      line = d.readLine();\n    }\n    d.close();\n    writer.close();\n    reader = DirectoryReader.open(dir);\n    searcher = LuceneTestCase.newSearcher(reader, false);\n  }\n\n","sourceOld":"  CoreParserTestIndexData(Analyzer analyzer) throws Exception {\n    BufferedReader d = new BufferedReader(new InputStreamReader(\n        TestCoreParser.class.getResourceAsStream(\"reuters21578.txt\"), StandardCharsets.US_ASCII));\n    dir = LuceneTestCase.newDirectory();\n    IndexWriter writer = new IndexWriter(dir, LuceneTestCase.newIndexWriterConfig(analyzer));\n    String line = d.readLine();\n    while (line != null) {\n      int endOfDate = line.indexOf('\\t');\n      String date = line.substring(0, endOfDate).trim();\n      String content = line.substring(endOfDate).trim();\n      Document doc = new Document();\n      doc.add(LuceneTestCase.newTextField(\"date\", date, Field.Store.YES));\n      doc.add(LuceneTestCase.newTextField(\"contents\", content, Field.Store.YES));\n      doc.add(new IntPoint(\"date3\", Integer.valueOf(date)));\n      writer.addDocument(doc);\n      line = d.readLine();\n    }\n    d.close();\n    writer.close();\n    reader = DirectoryReader.open(dir);\n    searcher = LuceneTestCase.newSearcher(reader, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55e0b3830b94d1abce4e32e98cfc875d5b14e76f","date":1489651910,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/CoreParserTestIndexData#CoreParserTestIndexData(Analyzer).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/CoreParserTestIndexData#CoreParserTestIndexData(Analyzer).mjava","sourceNew":"  CoreParserTestIndexData(Analyzer analyzer) throws Exception {\n    BufferedReader d = new BufferedReader(new InputStreamReader(\n        TestCoreParser.class.getResourceAsStream(\"reuters21578.txt\"), StandardCharsets.US_ASCII));\n    dir = LuceneTestCase.newDirectory();\n    IndexWriter writer = new IndexWriter(dir, LuceneTestCase.newIndexWriterConfig(analyzer));\n    String line = d.readLine();\n    while (line != null) {\n      int endOfDate = line.indexOf('\\t');\n      String date = line.substring(0, endOfDate).trim();\n      String content = line.substring(endOfDate).trim();\n      Document doc = new Document();\n      doc.add(LuceneTestCase.newTextField(\"date\", date, Field.Store.YES));\n      doc.add(LuceneTestCase.newTextField(\"contents\", content, Field.Store.YES));\n      doc.add(new IntPoint(\"date3\", Integer.parseInt(date)));\n      writer.addDocument(doc);\n      line = d.readLine();\n    }\n    d.close();\n    writer.close();\n    reader = DirectoryReader.open(dir);\n    searcher = LuceneTestCase.newSearcher(reader, false);\n  }\n\n","sourceOld":"  CoreParserTestIndexData(Analyzer analyzer) throws Exception {\n    BufferedReader d = new BufferedReader(new InputStreamReader(\n        TestCoreParser.class.getResourceAsStream(\"reuters21578.txt\"), StandardCharsets.US_ASCII));\n    dir = LuceneTestCase.newDirectory();\n    IndexWriter writer = new IndexWriter(dir, LuceneTestCase.newIndexWriterConfig(analyzer));\n    String line = d.readLine();\n    while (line != null) {\n      int endOfDate = line.indexOf('\\t');\n      String date = line.substring(0, endOfDate).trim();\n      String content = line.substring(endOfDate).trim();\n      Document doc = new Document();\n      doc.add(LuceneTestCase.newTextField(\"date\", date, Field.Store.YES));\n      doc.add(LuceneTestCase.newTextField(\"contents\", content, Field.Store.YES));\n      doc.add(new IntPoint(\"date3\", Integer.valueOf(date)));\n      writer.addDocument(doc);\n      line = d.readLine();\n    }\n    d.close();\n    writer.close();\n    reader = DirectoryReader.open(dir);\n    searcher = LuceneTestCase.newSearcher(reader, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/CoreParserTestIndexData#CoreParserTestIndexData(Analyzer).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/CoreParserTestIndexData#CoreParserTestIndexData(Analyzer).mjava","sourceNew":"  CoreParserTestIndexData(Analyzer analyzer) throws Exception {\n    BufferedReader d = new BufferedReader(new InputStreamReader(\n        TestCoreParser.class.getResourceAsStream(\"reuters21578.txt\"), StandardCharsets.US_ASCII));\n    dir = LuceneTestCase.newDirectory();\n    IndexWriter writer = new IndexWriter(dir, LuceneTestCase.newIndexWriterConfig(analyzer));\n    String line = d.readLine();\n    while (line != null) {\n      int endOfDate = line.indexOf('\\t');\n      String date = line.substring(0, endOfDate).trim();\n      String content = line.substring(endOfDate).trim();\n      Document doc = new Document();\n      doc.add(LuceneTestCase.newTextField(\"date\", date, Field.Store.YES));\n      doc.add(LuceneTestCase.newTextField(\"contents\", content, Field.Store.YES));\n      doc.add(new IntPoint(\"date3\", Integer.parseInt(date)));\n      writer.addDocument(doc);\n      line = d.readLine();\n    }\n    d.close();\n    writer.close();\n    reader = DirectoryReader.open(dir);\n    searcher = LuceneTestCase.newSearcher(reader, false);\n  }\n\n","sourceOld":"  CoreParserTestIndexData(Analyzer analyzer) throws Exception {\n    BufferedReader d = new BufferedReader(new InputStreamReader(\n        TestCoreParser.class.getResourceAsStream(\"reuters21578.txt\"), StandardCharsets.US_ASCII));\n    dir = LuceneTestCase.newDirectory();\n    IndexWriter writer = new IndexWriter(dir, LuceneTestCase.newIndexWriterConfig(analyzer));\n    String line = d.readLine();\n    while (line != null) {\n      int endOfDate = line.indexOf('\\t');\n      String date = line.substring(0, endOfDate).trim();\n      String content = line.substring(endOfDate).trim();\n      Document doc = new Document();\n      doc.add(LuceneTestCase.newTextField(\"date\", date, Field.Store.YES));\n      doc.add(LuceneTestCase.newTextField(\"contents\", content, Field.Store.YES));\n      doc.add(new IntPoint(\"date3\", Integer.valueOf(date)));\n      writer.addDocument(doc);\n      line = d.readLine();\n    }\n    d.close();\n    writer.close();\n    reader = DirectoryReader.open(dir);\n    searcher = LuceneTestCase.newSearcher(reader, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"0c82557b0a8c9d4012f208e5de912ae7500ea351":["5e72e8538028609e81884b15cfd41af2fa71115b","50b8410419cbbe9d8e1a96c918a951976bffe680"],"50b8410419cbbe9d8e1a96c918a951976bffe680":["5e72e8538028609e81884b15cfd41af2fa71115b"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"5e72e8538028609e81884b15cfd41af2fa71115b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab68488225b6a6c357dda72ed11dedca9914a192":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","55e0b3830b94d1abce4e32e98cfc875d5b14e76f"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["5e72e8538028609e81884b15cfd41af2fa71115b","0c82557b0a8c9d4012f208e5de912ae7500ea351"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5e72e8538028609e81884b15cfd41af2fa71115b","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8"]},"commit2Childs":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0c82557b0a8c9d4012f208e5de912ae7500ea351":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"50b8410419cbbe9d8e1a96c918a951976bffe680":["0c82557b0a8c9d4012f208e5de912ae7500ea351"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["ab68488225b6a6c357dda72ed11dedca9914a192"],"5e72e8538028609e81884b15cfd41af2fa71115b":["0c82557b0a8c9d4012f208e5de912ae7500ea351","50b8410419cbbe9d8e1a96c918a951976bffe680","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5e72e8538028609e81884b15cfd41af2fa71115b"],"ab68488225b6a6c357dda72ed11dedca9914a192":[],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","55e0b3830b94d1abce4e32e98cfc875d5b14e76f","ab68488225b6a6c357dda72ed11dedca9914a192","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab68488225b6a6c357dda72ed11dedca9914a192","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}