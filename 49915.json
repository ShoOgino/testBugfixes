{"path":"solr/core/src/test/org/apache/solr/analysis/TestArabicFilters#testTokenizer().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestArabicFilters#testTokenizer().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestArabicFilters#testTokenizer().mjava","sourceNew":"  /**\n   * Test ArabicLetterTokenizerFactory\n   * @deprecated (3.1) Remove in Lucene 5.0\n   */\n  @Deprecated\n  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer stream = factory.create(reader);\n    assertTokenStreamContents(stream, new String[] {\"الذين\", \"مَلكت\", \"أيمانكم\"});\n  }\n\n","sourceOld":"  /**\n   * Test ArabicLetterTokenizerFactory\n   * @deprecated (3.1) Remove in Lucene 5.0\n   */\n  @Deprecated\n  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer stream = factory.create(reader);\n    assertTokenStreamContents(stream, new String[] {\"الذين\", \"مَلكت\", \"أيمانكم\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestArabicFilters#testTokenizer().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestArabicFilters#testTokenizer().mjava","sourceNew":"  /**\n   * Test ArabicLetterTokenizerFactory\n   * @deprecated (3.1) Remove in Lucene 5.0\n   */\n  @Deprecated\n  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer stream = factory.create(reader);\n    assertTokenStreamContents(stream, new String[] {\"الذين\", \"مَلكت\", \"أيمانكم\"});\n  }\n\n","sourceOld":"  /**\n   * Test ArabicLetterTokenizerFactory\n   * @deprecated (3.1) Remove in Lucene 5.0\n   */\n  @Deprecated\n  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer stream = factory.create(reader);\n    assertTokenStreamContents(stream, new String[] {\"الذين\", \"مَلكت\", \"أيمانكم\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestArabicFilters#testTokenizer().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestArabicFilters#testTokenizer().mjava","sourceNew":"  /**\n   * Test ArabicLetterTokenizerFactory\n   * @deprecated (3.1) Remove in Lucene 5.0\n   */\n  @Deprecated\n  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer stream = factory.create(reader);\n    assertTokenStreamContents(stream, new String[] {\"الذين\", \"مَلكت\", \"أيمانكم\"});\n  }\n\n","sourceOld":"  /**\n   * Test ArabicLetterTokenizerFactory\n   * @deprecated (3.1) Remove in Lucene 5.0\n   */\n  @Deprecated\n  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer stream = factory.create(reader);\n    assertTokenStreamContents(stream, new String[] {\"الذين\", \"مَلكت\", \"أيمانكم\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6d3ad4230a9094e97925f9395cf6db4729284d9","date":1335503918,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestArabicFilters#testTokenizer().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestArabicFilters#testTokenizer().mjava","sourceNew":"  /**\n   * Test ArabicLetterTokenizerFactory\n   * @deprecated (3.1) Remove in Lucene 5.0\n   */\n  @Deprecated\n  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    factory.setLuceneMatchVersion(DEFAULT_VERSION);\n    factory.init(EMPTY_PARAMS);\n    Tokenizer stream = factory.create(reader);\n    assertTokenStreamContents(stream, new String[] {\"الذين\", \"مَلكت\", \"أيمانكم\"});\n  }\n\n","sourceOld":"  /**\n   * Test ArabicLetterTokenizerFactory\n   * @deprecated (3.1) Remove in Lucene 5.0\n   */\n  @Deprecated\n  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer stream = factory.create(reader);\n    assertTokenStreamContents(stream, new String[] {\"الذين\", \"مَلكت\", \"أيمانكم\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92ed69fd02d759d98f62e869eaa64e64e22302bf","date":1336612003,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestArabicFilters#testTokenizer().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestArabicFilters#testTokenizer().mjava","sourceNew":"  /**\n   * Test ArabicLetterTokenizerFactory\n   * @deprecated (3.1) Remove in Lucene 5.0\n   */\n  @Deprecated\n  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    Tokenizer stream = factory.create(reader);\n    assertTokenStreamContents(stream, new String[] {\"الذين\", \"مَلكت\", \"أيمانكم\"});\n  }\n\n","sourceOld":"  /**\n   * Test ArabicLetterTokenizerFactory\n   * @deprecated (3.1) Remove in Lucene 5.0\n   */\n  @Deprecated\n  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    factory.setLuceneMatchVersion(DEFAULT_VERSION);\n    factory.init(EMPTY_PARAMS);\n    Tokenizer stream = factory.create(reader);\n    assertTokenStreamContents(stream, new String[] {\"الذين\", \"مَلكت\", \"أيمانكم\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestArabicFilters#testTokenizer().mjava","sourceNew":null,"sourceOld":"  /**\n   * Test ArabicLetterTokenizerFactory\n   * @deprecated (3.1) Remove in Lucene 5.0\n   */\n  @Deprecated\n  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    Tokenizer stream = factory.create(reader);\n    assertTokenStreamContents(stream, new String[] {\"الذين\", \"مَلكت\", \"أيمانكم\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["92ed69fd02d759d98f62e869eaa64e64e22302bf"],"d6d3ad4230a9094e97925f9395cf6db4729284d9":["c26f00b574427b55127e869b935845554afde1fa"],"92ed69fd02d759d98f62e869eaa64e64e22302bf":["d6d3ad4230a9094e97925f9395cf6db4729284d9"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"]},"commit2Childs":{"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d6d3ad4230a9094e97925f9395cf6db4729284d9":["92ed69fd02d759d98f62e869eaa64e64e22302bf"],"92ed69fd02d759d98f62e869eaa64e64e22302bf":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d6d3ad4230a9094e97925f9395cf6db4729284d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}