{"path":"solr/core/src/test/org/apache/solr/analysis/TestHunspellStemFilterFactory#testStemming().mjava","commits":[{"id":"a327ae471e79ed4301c7f8cad83f53eb246160e8","date":1316884647,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"/dev/null","sourceNew":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    args.put(IndexSchema.LUCENE_MATCH_VERSION_PARAM, DEFAULT_VERSION.name());\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new WhitespaceTokenizer(DEFAULT_VERSION, reader));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2639ce99440b7a55fa879228f7e66c337443e77a","date":1317007442,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    args.put(IndexSchema.LUCENE_MATCH_VERSION_PARAM, DEFAULT_VERSION.name());\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    args.put(IndexSchema.LUCENE_MATCH_VERSION_PARAM, DEFAULT_VERSION.name());\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new WhitespaceTokenizer(DEFAULT_VERSION, reader));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6d3ad4230a9094e97925f9395cf6db4729284d9","date":1335503918,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    factory.setLuceneMatchVersion(DEFAULT_VERSION);\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    args.put(IndexSchema.LUCENE_MATCH_VERSION_PARAM, DEFAULT_VERSION.name());\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92ed69fd02d759d98f62e869eaa64e64e22302bf","date":1336612003,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    factory.setLuceneMatchVersion(DEFAULT_VERSION);\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21591922fb4db3e2a6ffb2cb342b3d61c053a973","date":1340761680,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr/collection1\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr/collection1\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3241e06e642196396b80bb293acd9c0814d079e0","date":1343094999,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr/collection1\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr/collection1\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilterFactory#testStemming().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"test.dic\");\n    args.put(\"affix\", \"test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new ResourceAsStreamResourceLoader(getClass()));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","sourceOld":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr/collection1\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":null,"sourceOld":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr/collection1\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestHunspellStemFilterFactory#testStemming().mjava","sourceNew":null,"sourceOld":"  public void testStemming() throws Exception {\n    HunspellStemFilterFactory factory = new HunspellStemFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"dictionary\", \"hunspell-test.dic\");\n    args.put(\"affix\", \"hunspell-test.aff\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(\"solr/collection1\"));\n    \n    Reader reader = new StringReader(\"abc\");\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, new String[] { \"ab\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a327ae471e79ed4301c7f8cad83f53eb246160e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"21591922fb4db3e2a6ffb2cb342b3d61c053a973":["92ed69fd02d759d98f62e869eaa64e64e22302bf"],"2639ce99440b7a55fa879228f7e66c337443e77a":["a327ae471e79ed4301c7f8cad83f53eb246160e8"],"aba371508186796cc6151d8223a5b4e16d02e26e":["21591922fb4db3e2a6ffb2cb342b3d61c053a973","5a1a22b1ad88b436661458df567f3fdb446392a4"],"d6d3ad4230a9094e97925f9395cf6db4729284d9":["2639ce99440b7a55fa879228f7e66c337443e77a"],"92ed69fd02d759d98f62e869eaa64e64e22302bf":["d6d3ad4230a9094e97925f9395cf6db4729284d9"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["92ed69fd02d759d98f62e869eaa64e64e22302bf","21591922fb4db3e2a6ffb2cb342b3d61c053a973"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["fe33227f6805edab2036cbb80645cc4e2d1fa424","5a1a22b1ad88b436661458df567f3fdb446392a4"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["21591922fb4db3e2a6ffb2cb342b3d61c053a973","3241e06e642196396b80bb293acd9c0814d079e0"],"3241e06e642196396b80bb293acd9c0814d079e0":["21591922fb4db3e2a6ffb2cb342b3d61c053a973"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a1a22b1ad88b436661458df567f3fdb446392a4"]},"commit2Childs":{"a327ae471e79ed4301c7f8cad83f53eb246160e8":["2639ce99440b7a55fa879228f7e66c337443e77a"],"21591922fb4db3e2a6ffb2cb342b3d61c053a973":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","5a1a22b1ad88b436661458df567f3fdb446392a4","3241e06e642196396b80bb293acd9c0814d079e0"],"2639ce99440b7a55fa879228f7e66c337443e77a":["d6d3ad4230a9094e97925f9395cf6db4729284d9"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"d6d3ad4230a9094e97925f9395cf6db4729284d9":["92ed69fd02d759d98f62e869eaa64e64e22302bf"],"92ed69fd02d759d98f62e869eaa64e64e22302bf":["21591922fb4db3e2a6ffb2cb342b3d61c053a973","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a327ae471e79ed4301c7f8cad83f53eb246160e8"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3241e06e642196396b80bb293acd9c0814d079e0":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}