{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SortedMapBackedCache#open(Context).mjava","commits":[{"id":"3337b86edd36607f0208321f1deee79c55e5fd21","date":1321266471,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SortedMapBackedCache#open(Context).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n  public void open(Context context) {\n    checkOpen(false);\n    isOpen = true;\n    if (theMap == null) {\n      theMap = new TreeMap<Object,List<Map<String,Object>>>();\n    }\n    \n    String pkName = CachePropertyUtil.getAttributeValueAsString(context,\n        DIHCacheSupport.CACHE_PRIMARY_KEY);\n    if (pkName != null) {\n      primaryKeyName = pkName;\n    }\n    isReadOnly = false;\n    String readOnlyStr = CachePropertyUtil.getAttributeValueAsString(context,\n        DIHCacheSupport.CACHE_READ_ONLY);\n    if (\"true\".equalsIgnoreCase(readOnlyStr)) {\n      isReadOnly = true;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SortedMapBackedCache#open(Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SortedMapBackedCache#open(Context).mjava","sourceNew":"    @Override\n  public void open(Context context) {\n    checkOpen(false);\n    isOpen = true;\n    if (theMap == null) {\n      theMap = new TreeMap<>();\n    }\n    \n    String pkName = CachePropertyUtil.getAttributeValueAsString(context,\n        DIHCacheSupport.CACHE_PRIMARY_KEY);\n    if (pkName != null) {\n      primaryKeyName = pkName;\n    }\n    isReadOnly = false;\n    String readOnlyStr = CachePropertyUtil.getAttributeValueAsString(context,\n        DIHCacheSupport.CACHE_READ_ONLY);\n    if (\"true\".equalsIgnoreCase(readOnlyStr)) {\n      isReadOnly = true;\n    }\n  }\n\n","sourceOld":"    @Override\n  public void open(Context context) {\n    checkOpen(false);\n    isOpen = true;\n    if (theMap == null) {\n      theMap = new TreeMap<Object,List<Map<String,Object>>>();\n    }\n    \n    String pkName = CachePropertyUtil.getAttributeValueAsString(context,\n        DIHCacheSupport.CACHE_PRIMARY_KEY);\n    if (pkName != null) {\n      primaryKeyName = pkName;\n    }\n    isReadOnly = false;\n    String readOnlyStr = CachePropertyUtil.getAttributeValueAsString(context,\n        DIHCacheSupport.CACHE_READ_ONLY);\n    if (\"true\".equalsIgnoreCase(readOnlyStr)) {\n      isReadOnly = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SortedMapBackedCache#open(Context).mjava","sourceNew":null,"sourceOld":"    @Override\n  public void open(Context context) {\n    checkOpen(false);\n    isOpen = true;\n    if (theMap == null) {\n      theMap = new TreeMap<>();\n    }\n    \n    String pkName = CachePropertyUtil.getAttributeValueAsString(context,\n        DIHCacheSupport.CACHE_PRIMARY_KEY);\n    if (pkName != null) {\n      primaryKeyName = pkName;\n    }\n    isReadOnly = false;\n    String readOnlyStr = CachePropertyUtil.getAttributeValueAsString(context,\n        DIHCacheSupport.CACHE_READ_ONLY);\n    if (\"true\".equalsIgnoreCase(readOnlyStr)) {\n      isReadOnly = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3337b86edd36607f0208321f1deee79c55e5fd21"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"3337b86edd36607f0208321f1deee79c55e5fd21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3337b86edd36607f0208321f1deee79c55e5fd21":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3337b86edd36607f0208321f1deee79c55e5fd21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}