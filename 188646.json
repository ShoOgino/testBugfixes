{"path":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadDisabled().mjava","commits":[{"id":"2c944148a761a75ff64169148c3ff7b6432aed85","date":1530279727,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadDisabled().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testUploadDisabled() throws Exception {\n    try (SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null)) {\n\n      for (boolean enabled: new boolean[] {true, false}) {\n        System.setProperty(\"configset.upload.enabled\", String.valueOf(enabled));\n        try {\n          long statusCode = uploadConfigSet(\"regular\", \"test-enabled-is-\" + enabled, null, null, zkClient);\n          assertEquals(\"ConfigSet upload enabling/disabling not working as expected for enabled=\" + enabled + \".\",\n              enabled? 0l: 400l, statusCode);\n        } finally {\n          System.clearProperty(\"configset.upload.enabled\");\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadDisabled().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testUploadDisabled() throws Exception {\n    try (SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null)) {\n\n      for (boolean enabled: new boolean[] {true, false}) {\n        System.setProperty(\"configset.upload.enabled\", String.valueOf(enabled));\n        try {\n          long statusCode = uploadConfigSet(\"regular\", \"test-enabled-is-\" + enabled, null, null, zkClient);\n          assertEquals(\"ConfigSet upload enabling/disabling not working as expected for enabled=\" + enabled + \".\",\n              enabled? 0l: 400l, statusCode);\n        } finally {\n          System.clearProperty(\"configset.upload.enabled\");\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadDisabled().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testUploadDisabled() throws Exception {\n    try (SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null)) {\n\n      for (boolean enabled: new boolean[] {true, false}) {\n        System.setProperty(\"configset.upload.enabled\", String.valueOf(enabled));\n        try {\n          long statusCode = uploadConfigSet(\"regular\", \"test-enabled-is-\" + enabled, null, null, zkClient);\n          assertEquals(\"ConfigSet upload enabling/disabling not working as expected for enabled=\" + enabled + \".\",\n              enabled? 0l: 400l, statusCode);\n        } finally {\n          System.clearProperty(\"configset.upload.enabled\");\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7612891097d4751617c396cdd7a092833799147","date":1600707827,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadDisabled().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadDisabled().mjava","sourceNew":"  @Test\n  public void testUploadDisabled() throws Exception {\n    try (SolrZkClient zkClient = new SolrZkClient(cluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null)) {\n\n      ignoreException(\"Configset upload feature is disabled\");\n      for (boolean enabled: new boolean[] {true, false}) {\n        System.setProperty(\"configset.upload.enabled\", String.valueOf(enabled));\n        try {\n          long statusCode = uploadConfigSet(\"regular\", \"test-enabled-is-\" + enabled, null, zkClient);\n          assertEquals(\"ConfigSet upload enabling/disabling not working as expected for enabled=\" + enabled + \".\",\n              enabled? 0l: 400l, statusCode);\n        } finally {\n          System.clearProperty(\"configset.upload.enabled\");\n        }\n      }\n      unIgnoreException(\"Configset upload feature is disabled\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testUploadDisabled() throws Exception {\n    try (SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null)) {\n\n      for (boolean enabled: new boolean[] {true, false}) {\n        System.setProperty(\"configset.upload.enabled\", String.valueOf(enabled));\n        try {\n          long statusCode = uploadConfigSet(\"regular\", \"test-enabled-is-\" + enabled, null, null, zkClient);\n          assertEquals(\"ConfigSet upload enabling/disabling not working as expected for enabled=\" + enabled + \".\",\n              enabled? 0l: 400l, statusCode);\n        } finally {\n          System.clearProperty(\"configset.upload.enabled\");\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7612891097d4751617c396cdd7a092833799147":["2c944148a761a75ff64169148c3ff7b6432aed85"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c944148a761a75ff64169148c3ff7b6432aed85"],"2c944148a761a75ff64169148c3ff7b6432aed85":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7612891097d4751617c396cdd7a092833799147"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c944148a761a75ff64169148c3ff7b6432aed85"]},"commit2Childs":{"c7612891097d4751617c396cdd7a092833799147":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"2c944148a761a75ff64169148c3ff7b6432aed85":["c7612891097d4751617c396cdd7a092833799147","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","2c944148a761a75ff64169148c3ff7b6432aed85","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}