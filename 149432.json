{"path":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexFieldsWriter#addField(FieldInfo).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexFieldsWriter#addField(FieldInfo).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#addField(FieldInfo).mjava","sourceNew":"  @Override\n  public TermsConsumer addField(FieldInfo field) throws IOException {\n    assert field.number != -1;\n    //System.out.println(\"w field=\" + field.name + \" storePayload=\" + field.storePayloads + \" number=\" + field.number);\n    return new PreFlexTermsWriter(field);\n  }\n\n","sourceOld":"  @Override\n  public TermsConsumer addField(FieldInfo field) throws IOException {\n    assert field.number != -1;\n    //System.out.println(\"w field=\" + field.name + \" storePayload=\" + field.storePayloads + \" number=\" + field.number);\n    return new PreFlexTermsWriter(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31f025ae60076ae95274433f3fe8e6ace2857a87","date":1326669465,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexFieldsWriter#addField(FieldInfo).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexFieldsWriter#addField(FieldInfo).mjava","sourceNew":"  @Override\n  public TermsConsumer addField(FieldInfo field) throws IOException {\n    assert field.number != -1;\n    if (field.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0) {\n      throw new IllegalArgumentException(\"this codec cannot index offsets\");\n    }\n    //System.out.println(\"w field=\" + field.name + \" storePayload=\" + field.storePayloads + \" number=\" + field.number);\n    return new PreFlexTermsWriter(field);\n  }\n\n","sourceOld":"  @Override\n  public TermsConsumer addField(FieldInfo field) throws IOException {\n    assert field.number != -1;\n    //System.out.println(\"w field=\" + field.name + \" storePayload=\" + field.storePayloads + \" number=\" + field.number);\n    return new PreFlexTermsWriter(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"583596a9662157d0b1a004cc19c70f54e6201e51","date":1326672050,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexFieldsWriter#addField(FieldInfo).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexFieldsWriter#addField(FieldInfo).mjava","sourceNew":"  @Override\n  public TermsConsumer addField(FieldInfo field) throws IOException {\n    assert field.number != -1;\n    if (field.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0) {\n      throw new UnsupportedOperationException(\"this codec cannot index offsets\");\n    }\n    //System.out.println(\"w field=\" + field.name + \" storePayload=\" + field.storePayloads + \" number=\" + field.number);\n    return new PreFlexTermsWriter(field);\n  }\n\n","sourceOld":"  @Override\n  public TermsConsumer addField(FieldInfo field) throws IOException {\n    assert field.number != -1;\n    if (field.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0) {\n      throw new IllegalArgumentException(\"this codec cannot index offsets\");\n    }\n    //System.out.println(\"w field=\" + field.name + \" storePayload=\" + field.storePayloads + \" number=\" + field.number);\n    return new PreFlexTermsWriter(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e8d5a6ffbfa3405d234a87c833741eabed98d13","date":1326725835,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexRWFieldsWriter#addField(FieldInfo).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexFieldsWriter#addField(FieldInfo).mjava","sourceNew":"  @Override\n  public TermsConsumer addField(FieldInfo field) throws IOException {\n    assert field.number != -1;\n    if (field.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0) {\n      throw new IllegalArgumentException(\"this codec cannot index offsets\");\n    }\n    //System.out.println(\"w field=\" + field.name + \" storePayload=\" + field.storePayloads + \" number=\" + field.number);\n    return new PreFlexTermsWriter(field);\n  }\n\n","sourceOld":"  @Override\n  public TermsConsumer addField(FieldInfo field) throws IOException {\n    assert field.number != -1;\n    if (field.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0) {\n      throw new UnsupportedOperationException(\"this codec cannot index offsets\");\n    }\n    //System.out.println(\"w field=\" + field.name + \" storePayload=\" + field.storePayloads + \" number=\" + field.number);\n    return new PreFlexTermsWriter(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"583596a9662157d0b1a004cc19c70f54e6201e51":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["583596a9662157d0b1a004cc19c70f54e6201e51"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"583596a9662157d0b1a004cc19c70f54e6201e51":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["583596a9662157d0b1a004cc19c70f54e6201e51"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}