{"path":"lucene/core/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#createComponents(String).mjava","commits":[{"id":"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345","date":1465936684,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#createComponents(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#createComponents(String).mjava","sourceNew":"  @Override\n  protected TokenStreamComponents createComponents(final String fieldName) {\n    final StandardTokenizer src = new StandardTokenizer();\n    src.setMaxTokenLength(maxTokenLength);\n    TokenStream tok = new StandardFilter(src);\n    tok = new LowerCaseFilter(tok);\n    tok = new StopFilter(tok, stopwords);\n    return new TokenStreamComponents(src, tok) {\n      @Override\n      protected void setReader(final Reader reader) {\n        src.setMaxTokenLength(StandardAnalyzer.this.maxTokenLength);\n        super.setReader(reader);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  protected TokenStreamComponents createComponents(final String fieldName) {\n    final StandardTokenizer src = new StandardTokenizer();\n    src.setMaxTokenLength(maxTokenLength);\n    TokenStream tok = new StandardFilter(src);\n    tok = new LowerCaseFilter(tok);\n    tok = new StopFilter(tok, stopwords);\n    return new TokenStreamComponents(src, tok) {\n      @Override\n      protected void setReader(final Reader reader) {\n        src.setMaxTokenLength(StandardAnalyzer.this.maxTokenLength);\n        super.setReader(reader);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#createComponents(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#createComponents(String).mjava","sourceNew":"  @Override\n  protected TokenStreamComponents createComponents(final String fieldName) {\n    final StandardTokenizer src = new StandardTokenizer();\n    src.setMaxTokenLength(maxTokenLength);\n    TokenStream tok = new StandardFilter(src);\n    tok = new LowerCaseFilter(tok);\n    tok = new StopFilter(tok, stopwords);\n    return new TokenStreamComponents(src, tok) {\n      @Override\n      protected void setReader(final Reader reader) {\n        src.setMaxTokenLength(StandardAnalyzer.this.maxTokenLength);\n        super.setReader(reader);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  protected TokenStreamComponents createComponents(final String fieldName) {\n    final StandardTokenizer src = new StandardTokenizer();\n    src.setMaxTokenLength(maxTokenLength);\n    TokenStream tok = new StandardFilter(src);\n    tok = new LowerCaseFilter(tok);\n    tok = new StopFilter(tok, stopwords);\n    return new TokenStreamComponents(src, tok) {\n      @Override\n      protected void setReader(final Reader reader) {\n        src.setMaxTokenLength(StandardAnalyzer.this.maxTokenLength);\n        super.setReader(reader);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56bed0a9b00f85c91255f5f43b34cbd65fba3c46","date":1491939476,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#createComponents(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#createComponents(String).mjava","sourceNew":"  @Override\n  protected TokenStreamComponents createComponents(final String fieldName) {\n    final StandardTokenizer src = new StandardTokenizer();\n    src.setMaxTokenLength(maxTokenLength);\n    TokenStream tok = new StandardFilter(src);\n    tok = new LowerCaseFilter(tok);\n    tok = new StopFilter(tok, stopwords);\n    return new TokenStreamComponents(src, tok) {\n      @Override\n      protected void setReader(final Reader reader) {\n        // So that if maxTokenLength was changed, the change takes\n        // effect next time tokenStream is called:\n        src.setMaxTokenLength(StandardAnalyzer.this.maxTokenLength);\n        super.setReader(reader);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  protected TokenStreamComponents createComponents(final String fieldName) {\n    final StandardTokenizer src = new StandardTokenizer();\n    src.setMaxTokenLength(maxTokenLength);\n    TokenStream tok = new StandardFilter(src);\n    tok = new LowerCaseFilter(tok);\n    tok = new StopFilter(tok, stopwords);\n    return new TokenStreamComponents(src, tok) {\n      @Override\n      protected void setReader(final Reader reader) {\n        src.setMaxTokenLength(StandardAnalyzer.this.maxTokenLength);\n        super.setReader(reader);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#createComponents(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#createComponents(String).mjava","sourceNew":"  @Override\n  protected TokenStreamComponents createComponents(final String fieldName) {\n    final StandardTokenizer src = new StandardTokenizer();\n    src.setMaxTokenLength(maxTokenLength);\n    TokenStream tok = new StandardFilter(src);\n    tok = new LowerCaseFilter(tok);\n    tok = new StopFilter(tok, stopwords);\n    return new TokenStreamComponents(src, tok) {\n      @Override\n      protected void setReader(final Reader reader) {\n        // So that if maxTokenLength was changed, the change takes\n        // effect next time tokenStream is called:\n        src.setMaxTokenLength(StandardAnalyzer.this.maxTokenLength);\n        super.setReader(reader);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  protected TokenStreamComponents createComponents(final String fieldName) {\n    final StandardTokenizer src = new StandardTokenizer();\n    src.setMaxTokenLength(maxTokenLength);\n    TokenStream tok = new StandardFilter(src);\n    tok = new LowerCaseFilter(tok);\n    tok = new StopFilter(tok, stopwords);\n    return new TokenStreamComponents(src, tok) {\n      @Override\n      protected void setReader(final Reader reader) {\n        src.setMaxTokenLength(StandardAnalyzer.this.maxTokenLength);\n        super.setReader(reader);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a7bf5d44fd9c84c577166b93b23c9774b063d46","date":1530097523,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#createComponents(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#createComponents(String).mjava","sourceNew":"  @Override\n  protected TokenStreamComponents createComponents(final String fieldName) {\n    final StandardTokenizer src = new StandardTokenizer();\n    src.setMaxTokenLength(maxTokenLength);\n    TokenStream tok = new LowerCaseFilter(src);\n    tok = new StopFilter(tok, stopwords);\n    return new TokenStreamComponents(src, tok) {\n      @Override\n      protected void setReader(final Reader reader) {\n        // So that if maxTokenLength was changed, the change takes\n        // effect next time tokenStream is called:\n        src.setMaxTokenLength(StandardAnalyzer.this.maxTokenLength);\n        super.setReader(reader);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  protected TokenStreamComponents createComponents(final String fieldName) {\n    final StandardTokenizer src = new StandardTokenizer();\n    src.setMaxTokenLength(maxTokenLength);\n    TokenStream tok = new StandardFilter(src);\n    tok = new LowerCaseFilter(tok);\n    tok = new StopFilter(tok, stopwords);\n    return new TokenStreamComponents(src, tok) {\n      @Override\n      protected void setReader(final Reader reader) {\n        // So that if maxTokenLength was changed, the change takes\n        // effect next time tokenStream is called:\n        src.setMaxTokenLength(StandardAnalyzer.this.maxTokenLength);\n        super.setReader(reader);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#createComponents(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#createComponents(String).mjava","sourceNew":"  @Override\n  protected TokenStreamComponents createComponents(final String fieldName) {\n    final StandardTokenizer src = new StandardTokenizer();\n    src.setMaxTokenLength(maxTokenLength);\n    TokenStream tok = new LowerCaseFilter(src);\n    tok = new StopFilter(tok, stopwords);\n    return new TokenStreamComponents(src, tok) {\n      @Override\n      protected void setReader(final Reader reader) {\n        // So that if maxTokenLength was changed, the change takes\n        // effect next time tokenStream is called:\n        src.setMaxTokenLength(StandardAnalyzer.this.maxTokenLength);\n        super.setReader(reader);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  protected TokenStreamComponents createComponents(final String fieldName) {\n    final StandardTokenizer src = new StandardTokenizer();\n    src.setMaxTokenLength(maxTokenLength);\n    TokenStream tok = new StandardFilter(src);\n    tok = new LowerCaseFilter(tok);\n    tok = new StopFilter(tok, stopwords);\n    return new TokenStreamComponents(src, tok) {\n      @Override\n      protected void setReader(final Reader reader) {\n        // So that if maxTokenLength was changed, the change takes\n        // effect next time tokenStream is called:\n        src.setMaxTokenLength(StandardAnalyzer.this.maxTokenLength);\n        super.setReader(reader);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#createComponents(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#createComponents(String).mjava","sourceNew":"  @Override\n  protected TokenStreamComponents createComponents(final String fieldName) {\n    final StandardTokenizer src = new StandardTokenizer();\n    src.setMaxTokenLength(maxTokenLength);\n    TokenStream tok = new LowerCaseFilter(src);\n    tok = new StopFilter(tok, stopwords);\n    return new TokenStreamComponents(src, tok) {\n      @Override\n      protected void setReader(final Reader reader) {\n        // So that if maxTokenLength was changed, the change takes\n        // effect next time tokenStream is called:\n        src.setMaxTokenLength(StandardAnalyzer.this.maxTokenLength);\n        super.setReader(reader);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  protected TokenStreamComponents createComponents(final String fieldName) {\n    final StandardTokenizer src = new StandardTokenizer();\n    src.setMaxTokenLength(maxTokenLength);\n    TokenStream tok = new StandardFilter(src);\n    tok = new LowerCaseFilter(tok);\n    tok = new StopFilter(tok, stopwords);\n    return new TokenStreamComponents(src, tok) {\n      @Override\n      protected void setReader(final Reader reader) {\n        // So that if maxTokenLength was changed, the change takes\n        // effect next time tokenStream is called:\n        src.setMaxTokenLength(StandardAnalyzer.this.maxTokenLength);\n        super.setReader(reader);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fac252ef8e3d0bbff9303ffbf675e824a729dfaf","date":1537347776,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#createComponents(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#createComponents(String).mjava","sourceNew":"  @Override\n  protected TokenStreamComponents createComponents(final String fieldName) {\n    final StandardTokenizer src = new StandardTokenizer();\n    src.setMaxTokenLength(maxTokenLength);\n    TokenStream tok = new LowerCaseFilter(src);\n    tok = new StopFilter(tok, stopwords);\n    return new TokenStreamComponents(r -> {\n      src.setMaxTokenLength(StandardAnalyzer.this.maxTokenLength);\n      src.setReader(r);\n    }, tok);\n  }\n\n","sourceOld":"  @Override\n  protected TokenStreamComponents createComponents(final String fieldName) {\n    final StandardTokenizer src = new StandardTokenizer();\n    src.setMaxTokenLength(maxTokenLength);\n    TokenStream tok = new LowerCaseFilter(src);\n    tok = new StopFilter(tok, stopwords);\n    return new TokenStreamComponents(src, tok) {\n      @Override\n      protected void setReader(final Reader reader) {\n        // So that if maxTokenLength was changed, the change takes\n        // effect next time tokenStream is called:\n        src.setMaxTokenLength(StandardAnalyzer.this.maxTokenLength);\n        super.setReader(reader);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["b266fe0ac2172d4ad87cff12bd9bf9f8c8247345"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["56bed0a9b00f85c91255f5f43b34cbd65fba3c46","8a7bf5d44fd9c84c577166b93b23c9774b063d46"],"8a7bf5d44fd9c84c577166b93b23c9774b063d46":["56bed0a9b00f85c91255f5f43b34cbd65fba3c46"],"fac252ef8e3d0bbff9303ffbf675e824a729dfaf":["8a7bf5d44fd9c84c577166b93b23c9774b063d46"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"56bed0a9b00f85c91255f5f43b34cbd65fba3c46":["b266fe0ac2172d4ad87cff12bd9bf9f8c8247345"],"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b266fe0ac2172d4ad87cff12bd9bf9f8c8247345"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fac252ef8e3d0bbff9303ffbf675e824a729dfaf"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["56bed0a9b00f85c91255f5f43b34cbd65fba3c46","8a7bf5d44fd9c84c577166b93b23c9774b063d46"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"8a7bf5d44fd9c84c577166b93b23c9774b063d46":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","fac252ef8e3d0bbff9303ffbf675e824a729dfaf","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"fac252ef8e3d0bbff9303ffbf675e824a729dfaf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b266fe0ac2172d4ad87cff12bd9bf9f8c8247345","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","56bed0a9b00f85c91255f5f43b34cbd65fba3c46","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"56bed0a9b00f85c91255f5f43b34cbd65fba3c46":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","8a7bf5d44fd9c84c577166b93b23c9774b063d46","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}