{"path":"solr/core/src/test/org/apache/solr/update/SolrCmdDistributorTest#testDistribOpenSearcher().mjava","commits":[{"id":"de8b178432c3f622f49a56587c62efe7c95982ad","date":1396456307,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrCmdDistributorTest#testDistribOpenSearcher().mjava","pathOld":"/dev/null","sourceNew":"  private void testDistribOpenSearcher() {\n    SolrCmdDistributor cmdDistrib = new SolrCmdDistributor(updateShardHandler);\n    UpdateRequest updateRequest = new UpdateRequest();\n\n    CommitUpdateCommand ccmd = new CommitUpdateCommand(null, false);\n\n    //test default value (should be true)\n    cmdDistrib.addCommit(updateRequest, ccmd);\n    boolean openSearcher = updateRequest.getParams().getBool(UpdateParams.OPEN_SEARCHER,false);\n    assertTrue(openSearcher);\n\n    //test openSearcher = false\n    ccmd.openSearcher = false;\n    \n    cmdDistrib.addCommit(updateRequest, ccmd);\n    openSearcher = updateRequest.getParams().getBool(UpdateParams.OPEN_SEARCHER,true);\n    assertFalse(openSearcher);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrCmdDistributorTest#testDistribOpenSearcher().mjava","pathOld":"/dev/null","sourceNew":"  private void testDistribOpenSearcher() {\n    SolrCmdDistributor cmdDistrib = new SolrCmdDistributor(updateShardHandler);\n    UpdateRequest updateRequest = new UpdateRequest();\n\n    CommitUpdateCommand ccmd = new CommitUpdateCommand(null, false);\n\n    //test default value (should be true)\n    cmdDistrib.addCommit(updateRequest, ccmd);\n    boolean openSearcher = updateRequest.getParams().getBool(UpdateParams.OPEN_SEARCHER,false);\n    assertTrue(openSearcher);\n\n    //test openSearcher = false\n    ccmd.openSearcher = false;\n    \n    cmdDistrib.addCommit(updateRequest, ccmd);\n    openSearcher = updateRequest.getParams().getBool(UpdateParams.OPEN_SEARCHER,true);\n    assertFalse(openSearcher);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f15af35d55d70c34451f9df5edeaeff6b31f8cbe","date":1519625627,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrCmdDistributorTest#testDistribOpenSearcher().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrCmdDistributorTest#testDistribOpenSearcher().mjava","sourceNew":"  private void testDistribOpenSearcher() {\n    try (SolrCmdDistributor cmdDistrib = new SolrCmdDistributor(updateShardHandler)) {\n      UpdateRequest updateRequest = new UpdateRequest();\n\n      CommitUpdateCommand ccmd = new CommitUpdateCommand(null, false);\n\n      //test default value (should be true)\n      cmdDistrib.addCommit(updateRequest, ccmd);\n      boolean openSearcher = updateRequest.getParams().getBool(UpdateParams.OPEN_SEARCHER, false);\n      assertTrue(openSearcher);\n\n      //test openSearcher = false\n      ccmd.openSearcher = false;\n\n      cmdDistrib.addCommit(updateRequest, ccmd);\n      openSearcher = updateRequest.getParams().getBool(UpdateParams.OPEN_SEARCHER, true);\n      assertFalse(openSearcher);\n    }\n  }\n\n","sourceOld":"  private void testDistribOpenSearcher() {\n    SolrCmdDistributor cmdDistrib = new SolrCmdDistributor(updateShardHandler);\n    UpdateRequest updateRequest = new UpdateRequest();\n\n    CommitUpdateCommand ccmd = new CommitUpdateCommand(null, false);\n\n    //test default value (should be true)\n    cmdDistrib.addCommit(updateRequest, ccmd);\n    boolean openSearcher = updateRequest.getParams().getBool(UpdateParams.OPEN_SEARCHER,false);\n    assertTrue(openSearcher);\n\n    //test openSearcher = false\n    ccmd.openSearcher = false;\n    \n    cmdDistrib.addCommit(updateRequest, ccmd);\n    openSearcher = updateRequest.getParams().getBool(UpdateParams.OPEN_SEARCHER,true);\n    assertFalse(openSearcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","de8b178432c3f622f49a56587c62efe7c95982ad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"de8b178432c3f622f49a56587c62efe7c95982ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["de8b178432c3f622f49a56587c62efe7c95982ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","de8b178432c3f622f49a56587c62efe7c95982ad"],"de8b178432c3f622f49a56587c62efe7c95982ad":["5eb2511ababf862ea11e10761c70ee560cd84510","f15af35d55d70c34451f9df5edeaeff6b31f8cbe"],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}