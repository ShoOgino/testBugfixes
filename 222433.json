{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"/dev/null","sourceNew":"  public static void createCore() throws Exception {\n    solrConfig = h.createConfig(getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"/dev/null","sourceNew":"  public static void createCore() throws Exception {\n    solrConfig = h.createConfig(getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"/dev/null","sourceNew":"  public static void createCore() throws Exception {\n    solrConfig = h.createConfig(getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f08557cdb6c60ac7b88a9342c983a20cd236e74f","date":1330954480,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() throws Exception {\n    solrConfig = TestHarness.createConfig(getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() throws Exception {\n    solrConfig = h.createConfig(getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() throws Exception {\n    solrConfig = TestHarness.createConfig(getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() throws Exception {\n    solrConfig = h.createConfig(getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21591922fb4db3e2a6ffb2cb342b3d61c053a973","date":1340761680,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() throws Exception {\n    solrConfig = TestHarness.createConfig(testSolrHome, getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() throws Exception {\n    solrConfig = TestHarness.createConfig(getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() {\n    solrConfig = TestHarness.createConfig(testSolrHome, getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() throws Exception {\n    solrConfig = TestHarness.createConfig(testSolrHome, getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() {\n    solrConfig = TestHarness.createConfig(testSolrHome, getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() throws Exception {\n    solrConfig = TestHarness.createConfig(getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63bbefe40470804b277907c301a4732f21e8c8d8","date":1347646043,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() {\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() {\n    solrConfig = TestHarness.createConfig(testSolrHome, getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9405f486872f1e416304dfe389741f4ee2f8a4d","date":1351276739,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() {\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() {\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ccf4668aabc4ca5177fedbb7c24ad1d47011385f","date":1363016812,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName,\n            dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? dataDir.getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName,\n            dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? dataDir.getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName,\n            dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? dataDir.getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? dataDir.getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? dataDir.getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? dataDir.getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? initCoreDataDir.getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? dataDir.getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":["9799ebcab48102552d92f7807965a91fb6e116f7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? initCoreDataDir.getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? dataDir.getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5ff704ef91e9ae30ca59babb23ece85720701b60","date":1498684964,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? initCoreDataDir.getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? initCoreDataDir.getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? initCoreDataDir.getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? initCoreDataDir.getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? initCoreDataDir.getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? initCoreDataDir.getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9799ebcab48102552d92f7807965a91fb6e116f7","date":1564676118,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? initAndGetDataDir().getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? initCoreDataDir.getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createCore().mjava","sourceNew":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? initAndGetDataDir().getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","sourceOld":"  public static void createCore() {\n    assertNotNull(testSolrHome);\n    solrConfig = TestHarness.createConfig(testSolrHome, coreName, getSolrConfigFile());\n    h = new TestHarness( coreName, hdfsDataDir == null ? initCoreDataDir.getAbsolutePath() : hdfsDataDir,\n            solrConfig,\n            getSchemaFile());\n    lrf = h.getRequestFactory\n            (\"\",0,20,CommonParams.VERSION,\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["19275ba31e621f6da1b83bf13af75233876fd3d4","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["ccf4668aabc4ca5177fedbb7c24ad1d47011385f","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"ccf4668aabc4ca5177fedbb7c24ad1d47011385f":["d9405f486872f1e416304dfe389741f4ee2f8a4d"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["63bbefe40470804b277907c301a4732f21e8c8d8"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["21591922fb4db3e2a6ffb2cb342b3d61c053a973"],"f2126b84bd093fa3d921582a109a0ee578c28126":["63bbefe40470804b277907c301a4732f21e8c8d8","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"63bbefe40470804b277907c301a4732f21e8c8d8":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["37a0f60745e53927c4c876cfe5b5a58170f0646c","19275ba31e621f6da1b83bf13af75233876fd3d4"],"21591922fb4db3e2a6ffb2cb342b3d61c053a973":["f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"30c8e5574b55d57947e989443dfde611646530ee":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","5ff704ef91e9ae30ca59babb23ece85720701b60"],"f8061ddd97f3352007d927dae445884a6f3d857b":["28288370235ed02234a64753cdbf0c6ec096304a","9799ebcab48102552d92f7807965a91fb6e116f7"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["ccf4668aabc4ca5177fedbb7c24ad1d47011385f"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["f08557cdb6c60ac7b88a9342c983a20cd236e74f","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"9799ebcab48102552d92f7807965a91fb6e116f7":["28288370235ed02234a64753cdbf0c6ec096304a"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9799ebcab48102552d92f7807965a91fb6e116f7"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"]},"commit2Childs":{"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["30c8e5574b55d57947e989443dfde611646530ee","28288370235ed02234a64753cdbf0c6ec096304a","5ff704ef91e9ae30ca59babb23ece85720701b60"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"ccf4668aabc4ca5177fedbb7c24ad1d47011385f":["37a0f60745e53927c4c876cfe5b5a58170f0646c","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["ccf4668aabc4ca5177fedbb7c24ad1d47011385f","f2126b84bd093fa3d921582a109a0ee578c28126"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["63bbefe40470804b277907c301a4732f21e8c8d8","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"63bbefe40470804b277907c301a4732f21e8c8d8":["d9405f486872f1e416304dfe389741f4ee2f8a4d","f2126b84bd093fa3d921582a109a0ee578c28126"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"21591922fb4db3e2a6ffb2cb342b3d61c053a973":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","21591922fb4db3e2a6ffb2cb342b3d61c053a973","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"30c8e5574b55d57947e989443dfde611646530ee":[],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","f8061ddd97f3352007d927dae445884a6f3d857b","9799ebcab48102552d92f7807965a91fb6e116f7"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["37a0f60745e53927c4c876cfe5b5a58170f0646c","19275ba31e621f6da1b83bf13af75233876fd3d4"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","0d22ac6a4146774c1bc8400160fc0b6150294e92","f08557cdb6c60ac7b88a9342c983a20cd236e74f","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"9799ebcab48102552d92f7807965a91fb6e116f7":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","0d22ac6a4146774c1bc8400160fc0b6150294e92","f2126b84bd093fa3d921582a109a0ee578c28126","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","30c8e5574b55d57947e989443dfde611646530ee","f8061ddd97f3352007d927dae445884a6f3d857b","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}