{"path":"src/java/org/apache/lucene/index/SegmentInfo#toString(Directory).mjava","commits":[{"id":"f3c90cbb42694e7f54b3787f4cbb2c820d2ba401","date":1261135797,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#toString(Directory).mjava","pathOld":"/dev/null","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a:c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append(':');\n\n    char cfs;\n    try {\n      if (getUseCompoundFile()) {\n        cfs = 'c';\n      } else {\n        cfs = 'C';\n      }\n    } catch (IOException ioe) {\n      cfs = '?';\n    }\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    int delCount;\n    try {\n      delCount = getDelCount();\n    } catch (IOException ioe) {\n      delCount = -1;\n    }\n    if (delCount != 0) {\n      s.append('/');\n      if (delCount == -1) {\n        s.append('?');\n      } else {\n        s.append(delCount);\n      }\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75269f4dedadda2b3bd49e0e009adf4c158f7a42","date":1261219500,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#toString(Directory).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a:c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append(':');\n\n    char cfs;\n    try {\n      if (getUseCompoundFile()) {\n        cfs = 'c';\n      } else {\n        cfs = 'C';\n      }\n    } catch (IOException ioe) {\n      cfs = '?';\n    }\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    int delCount;\n    try {\n      delCount = getDelCount();\n    } catch (IOException ioe) {\n      delCount = -1;\n    }\n    if (delCount != -1) {\n      delCount += pendingDelCount;\n    }\n    if (delCount != 0) {\n      s.append('/');\n      if (delCount == -1) {\n        s.append('?');\n      } else {\n        s.append(delCount);\n      }\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a:c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append(':');\n\n    char cfs;\n    try {\n      if (getUseCompoundFile()) {\n        cfs = 'c';\n      } else {\n        cfs = 'C';\n      }\n    } catch (IOException ioe) {\n      cfs = '?';\n    }\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    int delCount;\n    try {\n      delCount = getDelCount();\n    } catch (IOException ioe) {\n      delCount = -1;\n    }\n    if (delCount != 0) {\n      s.append('/');\n      if (delCount == -1) {\n        s.append('?');\n      } else {\n        s.append(delCount);\n      }\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f3c90cbb42694e7f54b3787f4cbb2c820d2ba401":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"75269f4dedadda2b3bd49e0e009adf4c158f7a42":["f3c90cbb42694e7f54b3787f4cbb2c820d2ba401"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["75269f4dedadda2b3bd49e0e009adf4c158f7a42"]},"commit2Childs":{"f3c90cbb42694e7f54b3787f4cbb2c820d2ba401":["75269f4dedadda2b3bd49e0e009adf4c158f7a42"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f3c90cbb42694e7f54b3787f4cbb2c820d2ba401"],"75269f4dedadda2b3bd49e0e009adf4c158f7a42":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}