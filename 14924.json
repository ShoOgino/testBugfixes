{"path":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/preflexrw/TermInfosWriter#writeTerm(int,BytesRef).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/preflexrw/TermInfosWriter#writeTerm(int,BytesRef).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/preflexrw/TermInfosWriter#writeTerm(int,BytesRef).mjava","sourceNew":"  private void writeTerm(int fieldNumber, BytesRef term)\n       throws IOException {\n\n    //System.out.println(\"  tiw.write field=\" + fieldNumber + \" term=\" + term.utf8ToString());\n\n    // TODO: UTF16toUTF8 could tell us this prefix\n    // Compute prefix in common with last term:\n    int start = 0;\n    final int limit = term.length < lastTerm.length ? term.length : lastTerm.length;\n    while(start < limit) {\n      if (term.bytes[start+term.offset] != lastTerm.bytes[start+lastTerm.offset])\n        break;\n      start++;\n    }\n\n    final int length = term.length - start;\n    output.writeVInt(start);                     // write shared prefix length\n    output.writeVInt(length);                  // write delta length\n    output.writeBytes(term.bytes, start+term.offset, length);  // write delta bytes\n    output.writeVInt(fieldNumber); // write field num\n    lastTerm.copy(term);\n  }\n\n","sourceOld":"  private void writeTerm(int fieldNumber, BytesRef term)\n       throws IOException {\n\n    //System.out.println(\"  tiw.write field=\" + fieldNumber + \" term=\" + term.utf8ToString());\n\n    // TODO: UTF16toUTF8 could tell us this prefix\n    // Compute prefix in common with last term:\n    int start = 0;\n    final int limit = term.length < lastTerm.length ? term.length : lastTerm.length;\n    while(start < limit) {\n      if (term.bytes[start+term.offset] != lastTerm.bytes[start+lastTerm.offset])\n        break;\n      start++;\n    }\n\n    final int length = term.length - start;\n    output.writeVInt(start);                     // write shared prefix length\n    output.writeVInt(length);                  // write delta length\n    output.writeBytes(term.bytes, start+term.offset, length);  // write delta bytes\n    output.writeVInt(fieldNumber); // write field num\n    lastTerm.copy(term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6e919043fa85ee891123768dd655a98edbbf63c","date":1322225413,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/preflexrw/TermInfosWriter#writeTerm(int,BytesRef).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/preflexrw/TermInfosWriter#writeTerm(int,BytesRef).mjava","sourceNew":"  private void writeTerm(int fieldNumber, BytesRef term)\n       throws IOException {\n\n    //System.out.println(\"  tiw.write field=\" + fieldNumber + \" term=\" + term.utf8ToString());\n\n    // TODO: UTF16toUTF8 could tell us this prefix\n    // Compute prefix in common with last term:\n    int start = 0;\n    final int limit = term.length < lastTerm.length ? term.length : lastTerm.length;\n    while(start < limit) {\n      if (term.bytes[start+term.offset] != lastTerm.bytes[start+lastTerm.offset])\n        break;\n      start++;\n    }\n\n    final int length = term.length - start;\n    output.writeVInt(start);                     // write shared prefix length\n    output.writeVInt(length);                  // write delta length\n    output.writeBytes(term.bytes, start+term.offset, length);  // write delta bytes\n    output.writeVInt(fieldNumber); // write field num\n    lastTerm.copyBytes(term);\n  }\n\n","sourceOld":"  private void writeTerm(int fieldNumber, BytesRef term)\n       throws IOException {\n\n    //System.out.println(\"  tiw.write field=\" + fieldNumber + \" term=\" + term.utf8ToString());\n\n    // TODO: UTF16toUTF8 could tell us this prefix\n    // Compute prefix in common with last term:\n    int start = 0;\n    final int limit = term.length < lastTerm.length ? term.length : lastTerm.length;\n    while(start < limit) {\n      if (term.bytes[start+term.offset] != lastTerm.bytes[start+lastTerm.offset])\n        break;\n      start++;\n    }\n\n    final int length = term.length - start;\n    output.writeVInt(start);                     // write shared prefix length\n    output.writeVInt(length);                  // write delta length\n    output.writeBytes(term.bytes, start+term.offset, length);  // write delta bytes\n    output.writeVInt(fieldNumber); // write field num\n    lastTerm.copy(term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/TermInfosWriter#writeTerm(int,BytesRef).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/preflexrw/TermInfosWriter#writeTerm(int,BytesRef).mjava","sourceNew":"  private void writeTerm(int fieldNumber, BytesRef term)\n       throws IOException {\n\n    //System.out.println(\"  tiw.write field=\" + fieldNumber + \" term=\" + term.utf8ToString());\n\n    // TODO: UTF16toUTF8 could tell us this prefix\n    // Compute prefix in common with last term:\n    int start = 0;\n    final int limit = term.length < lastTerm.length ? term.length : lastTerm.length;\n    while(start < limit) {\n      if (term.bytes[start+term.offset] != lastTerm.bytes[start+lastTerm.offset])\n        break;\n      start++;\n    }\n\n    final int length = term.length - start;\n    output.writeVInt(start);                     // write shared prefix length\n    output.writeVInt(length);                  // write delta length\n    output.writeBytes(term.bytes, start+term.offset, length);  // write delta bytes\n    output.writeVInt(fieldNumber); // write field num\n    lastTerm.copyBytes(term);\n  }\n\n","sourceOld":"  private void writeTerm(int fieldNumber, BytesRef term)\n       throws IOException {\n\n    //System.out.println(\"  tiw.write field=\" + fieldNumber + \" term=\" + term.utf8ToString());\n\n    // TODO: UTF16toUTF8 could tell us this prefix\n    // Compute prefix in common with last term:\n    int start = 0;\n    final int limit = term.length < lastTerm.length ? term.length : lastTerm.length;\n    while(start < limit) {\n      if (term.bytes[start+term.offset] != lastTerm.bytes[start+lastTerm.offset])\n        break;\n      start++;\n    }\n\n    final int length = term.length - start;\n    output.writeVInt(start);                     // write shared prefix length\n    output.writeVInt(length);                  // write delta length\n    output.writeBytes(term.bytes, start+term.offset, length);  // write delta bytes\n    output.writeVInt(fieldNumber); // write field num\n    lastTerm.copyBytes(term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["e6e919043fa85ee891123768dd655a98edbbf63c"],"e6e919043fa85ee891123768dd655a98edbbf63c":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["e6e919043fa85ee891123768dd655a98edbbf63c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6e919043fa85ee891123768dd655a98edbbf63c":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}