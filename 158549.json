{"path":"src/java/org/apache/lucene/index/DirectoryReader#doReopen(SegmentInfos,boolean,boolean).mjava","commits":[{"id":"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1","date":1244392278,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryReader#doReopen(SegmentInfos,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private synchronized DirectoryReader doReopen(SegmentInfos infos, boolean doClone, boolean openReadOnly) throws CorruptIndexException, IOException {\n    DirectoryReader reader;\n\t  if (openReadOnly) {\n      reader = new ReadOnlyDirectoryReader(directory, infos, closeDirectory, subReaders, starts, normsCache, doClone);\n    } else {\n      reader = new DirectoryReader(directory, infos, closeDirectory, subReaders, starts, normsCache, false, doClone);\n    }\n    reader.setDisableFakeNorms(getDisableFakeNorms());\n    return reader;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["406e7055a3e99d3fa6ce49a555a51dd18b321806"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4e54e4a9a2442944e55f58e835877841cdac1271","date":1244628560,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryReader#doReopen(SegmentInfos,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryReader#doReopen(SegmentInfos,boolean,boolean).mjava","sourceNew":"  private synchronized DirectoryReader doReopen(SegmentInfos infos, boolean doClone, boolean openReadOnly) throws CorruptIndexException, IOException {\n    DirectoryReader reader;\n\t  if (openReadOnly) {\n      reader = new ReadOnlyDirectoryReader(directory, infos, subReaders, starts, normsCache, doClone);\n    } else {\n      reader = new DirectoryReader(directory, infos, subReaders, starts, normsCache, false, doClone);\n    }\n    reader.setDisableFakeNorms(getDisableFakeNorms());\n    return reader;\n  }\n\n","sourceOld":"  private synchronized DirectoryReader doReopen(SegmentInfos infos, boolean doClone, boolean openReadOnly) throws CorruptIndexException, IOException {\n    DirectoryReader reader;\n\t  if (openReadOnly) {\n      reader = new ReadOnlyDirectoryReader(directory, infos, closeDirectory, subReaders, starts, normsCache, doClone);\n    } else {\n      reader = new DirectoryReader(directory, infos, closeDirectory, subReaders, starts, normsCache, false, doClone);\n    }\n    reader.setDisableFakeNorms(getDisableFakeNorms());\n    return reader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"961159f13aece73fbb30aea720e77a2237e8bafd","date":1247258916,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryReader#doReopen(SegmentInfos,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryReader#doReopen(SegmentInfos,boolean,boolean).mjava","sourceNew":"  private synchronized DirectoryReader doReopen(SegmentInfos infos, boolean doClone, boolean openReadOnly) throws CorruptIndexException, IOException {\n    DirectoryReader reader;\n    if (openReadOnly) {\n      reader = new ReadOnlyDirectoryReader(directory, infos, subReaders, starts, normsCache, doClone, termInfosIndexDivisor);\n    } else {\n      reader = new DirectoryReader(directory, infos, subReaders, starts, normsCache, false, doClone, termInfosIndexDivisor);\n    }\n    reader.setDisableFakeNorms(getDisableFakeNorms());\n    return reader;\n  }\n\n","sourceOld":"  private synchronized DirectoryReader doReopen(SegmentInfos infos, boolean doClone, boolean openReadOnly) throws CorruptIndexException, IOException {\n    DirectoryReader reader;\n\t  if (openReadOnly) {\n      reader = new ReadOnlyDirectoryReader(directory, infos, subReaders, starts, normsCache, doClone);\n    } else {\n      reader = new DirectoryReader(directory, infos, subReaders, starts, normsCache, false, doClone);\n    }\n    reader.setDisableFakeNorms(getDisableFakeNorms());\n    return reader;\n  }\n\n","bugFix":null,"bugIntro":["406e7055a3e99d3fa6ce49a555a51dd18b321806"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1","date":1255502337,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryReader#doReopen(SegmentInfos,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryReader#doReopen(SegmentInfos,boolean,boolean).mjava","sourceNew":"  private synchronized DirectoryReader doReopen(SegmentInfos infos, boolean doClone, boolean openReadOnly) throws CorruptIndexException, IOException {\n    DirectoryReader reader;\n    if (openReadOnly) {\n      reader = new ReadOnlyDirectoryReader(directory, infos, subReaders, starts, normsCache, doClone, termInfosIndexDivisor);\n    } else {\n      reader = new DirectoryReader(directory, infos, subReaders, starts, normsCache, false, doClone, termInfosIndexDivisor);\n    }\n    return reader;\n  }\n\n","sourceOld":"  private synchronized DirectoryReader doReopen(SegmentInfos infos, boolean doClone, boolean openReadOnly) throws CorruptIndexException, IOException {\n    DirectoryReader reader;\n    if (openReadOnly) {\n      reader = new ReadOnlyDirectoryReader(directory, infos, subReaders, starts, normsCache, doClone, termInfosIndexDivisor);\n    } else {\n      reader = new DirectoryReader(directory, infos, subReaders, starts, normsCache, false, doClone, termInfosIndexDivisor);\n    }\n    reader.setDisableFakeNorms(getDisableFakeNorms());\n    return reader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doReopen(SegmentInfos,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryReader#doReopen(SegmentInfos,boolean,boolean).mjava","sourceNew":"  private synchronized DirectoryReader doReopen(SegmentInfos infos, boolean doClone, boolean openReadOnly) throws CorruptIndexException, IOException {\n    DirectoryReader reader;\n    if (openReadOnly) {\n      reader = new ReadOnlyDirectoryReader(directory, infos, subReaders, starts, normsCache, doClone, termInfosIndexDivisor);\n    } else {\n      reader = new DirectoryReader(directory, infos, subReaders, starts, normsCache, false, doClone, termInfosIndexDivisor);\n    }\n    return reader;\n  }\n\n","sourceOld":"  private synchronized DirectoryReader doReopen(SegmentInfos infos, boolean doClone, boolean openReadOnly) throws CorruptIndexException, IOException {\n    DirectoryReader reader;\n    if (openReadOnly) {\n      reader = new ReadOnlyDirectoryReader(directory, infos, subReaders, starts, normsCache, doClone, termInfosIndexDivisor);\n    } else {\n      reader = new DirectoryReader(directory, infos, subReaders, starts, normsCache, false, doClone, termInfosIndexDivisor);\n    }\n    return reader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"961159f13aece73fbb30aea720e77a2237e8bafd":["4e54e4a9a2442944e55f58e835877841cdac1271"],"4e54e4a9a2442944e55f58e835877841cdac1271":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1":["961159f13aece73fbb30aea720e77a2237e8bafd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1"]},"commit2Childs":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["4e54e4a9a2442944e55f58e835877841cdac1271"],"961159f13aece73fbb30aea720e77a2237e8bafd":["be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"4e54e4a9a2442944e55f58e835877841cdac1271":["961159f13aece73fbb30aea720e77a2237e8bafd"],"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}