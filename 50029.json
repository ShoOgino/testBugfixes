{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testRealtimeGet().mjava","commits":[{"id":"29918ccc4b27ebd261d8446761e5e02666abe893","date":1318552434,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testRealtimeGet().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRealtimeGet() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"DOCID\", 1.0f );\n    doc.addField( \"name\", \"hello\", 1.0f );\n    server.add( doc );\n    server.commit();  // Since the transaction log is disabled in the example, we need to commit\n    \n    SolrQuery q = new SolrQuery();\n    q.setQueryType(\"/get\");\n    q.set(\"id\", \"DOCID\");\n    q.set(\"fl\", \"id,name,aaa:[value v=aaa]\");\n    \n    // First Try with the BinaryResponseParser\n    QueryRequest req = new QueryRequest( q );\n    req.setResponseParser(new BinaryResponseParser());\n    QueryResponse rsp = req.process(server);\n    SolrDocument out = (SolrDocument)rsp.getResponse().get(\"doc\");\n    assertEquals(\"DOCID\", out.get(\"id\"));\n    assertEquals(\"hello\", out.get(\"name\"));\n    assertEquals(\"aaa\", out.get(\"aaa\"));\n\n    // Then with the XMLResponseParser\n    req.setResponseParser(new XMLResponseParser());\n    rsp = req.process(server);\n    out = (SolrDocument)rsp.getResponse().get(\"doc\");\n    assertEquals(\"DOCID\", out.get(\"id\"));\n    assertEquals(\"hello\", out.get(\"name\"));\n    assertEquals(\"aaa\", out.get(\"aaa\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b1572188101e23640cb33ef14d47ac743b5e930","date":1340165824,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testRealtimeGet().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testRealtimeGet().mjava","sourceNew":"  @Test\n  public void testRealtimeGet() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"DOCID\", 1.0f );\n    doc.addField( \"name\", \"hello\", 1.0f );\n    server.add( doc );\n    server.commit();  // Since the transaction log is disabled in the example, we need to commit\n    \n    SolrQuery q = new SolrQuery();\n    q.setRequestHandler(\"/get\");\n    q.set(\"id\", \"DOCID\");\n    q.set(\"fl\", \"id,name,aaa:[value v=aaa]\");\n    \n    // First Try with the BinaryResponseParser\n    QueryRequest req = new QueryRequest( q );\n    req.setResponseParser(new BinaryResponseParser());\n    QueryResponse rsp = req.process(server);\n    SolrDocument out = (SolrDocument)rsp.getResponse().get(\"doc\");\n    assertEquals(\"DOCID\", out.get(\"id\"));\n    assertEquals(\"hello\", out.get(\"name\"));\n    assertEquals(\"aaa\", out.get(\"aaa\"));\n\n    // Then with the XMLResponseParser\n    req.setResponseParser(new XMLResponseParser());\n    rsp = req.process(server);\n    out = (SolrDocument)rsp.getResponse().get(\"doc\");\n    assertEquals(\"DOCID\", out.get(\"id\"));\n    assertEquals(\"hello\", out.get(\"name\"));\n    assertEquals(\"aaa\", out.get(\"aaa\"));\n  }\n\n","sourceOld":"  @Test\n  public void testRealtimeGet() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"DOCID\", 1.0f );\n    doc.addField( \"name\", \"hello\", 1.0f );\n    server.add( doc );\n    server.commit();  // Since the transaction log is disabled in the example, we need to commit\n    \n    SolrQuery q = new SolrQuery();\n    q.setQueryType(\"/get\");\n    q.set(\"id\", \"DOCID\");\n    q.set(\"fl\", \"id,name,aaa:[value v=aaa]\");\n    \n    // First Try with the BinaryResponseParser\n    QueryRequest req = new QueryRequest( q );\n    req.setResponseParser(new BinaryResponseParser());\n    QueryResponse rsp = req.process(server);\n    SolrDocument out = (SolrDocument)rsp.getResponse().get(\"doc\");\n    assertEquals(\"DOCID\", out.get(\"id\"));\n    assertEquals(\"hello\", out.get(\"name\"));\n    assertEquals(\"aaa\", out.get(\"aaa\"));\n\n    // Then with the XMLResponseParser\n    req.setResponseParser(new XMLResponseParser());\n    rsp = req.process(server);\n    out = (SolrDocument)rsp.getResponse().get(\"doc\");\n    assertEquals(\"DOCID\", out.get(\"id\"));\n    assertEquals(\"hello\", out.get(\"name\"));\n    assertEquals(\"aaa\", out.get(\"aaa\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testRealtimeGet().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testRealtimeGet().mjava","sourceNew":"  @Test\n  public void testRealtimeGet() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"DOCID\", 1.0f );\n    doc.addField( \"name\", \"hello\", 1.0f );\n    client.add(doc);\n    client.commit();  // Since the transaction log is disabled in the example, we need to commit\n    \n    SolrQuery q = new SolrQuery();\n    q.setRequestHandler(\"/get\");\n    q.set(\"id\", \"DOCID\");\n    q.set(\"fl\", \"id,name,aaa:[value v=aaa]\");\n    \n    // First Try with the BinaryResponseParser\n    QueryRequest req = new QueryRequest( q );\n    req.setResponseParser(new BinaryResponseParser());\n    QueryResponse rsp = req.process(client);\n    SolrDocument out = (SolrDocument)rsp.getResponse().get(\"doc\");\n    assertEquals(\"DOCID\", out.get(\"id\"));\n    assertEquals(\"hello\", out.get(\"name\"));\n    assertEquals(\"aaa\", out.get(\"aaa\"));\n\n    // Then with the XMLResponseParser\n    req.setResponseParser(new XMLResponseParser());\n    rsp = req.process(client);\n    out = (SolrDocument)rsp.getResponse().get(\"doc\");\n    assertEquals(\"DOCID\", out.get(\"id\"));\n    assertEquals(\"hello\", out.get(\"name\"));\n    assertEquals(\"aaa\", out.get(\"aaa\"));\n  }\n\n","sourceOld":"  @Test\n  public void testRealtimeGet() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"DOCID\", 1.0f );\n    doc.addField( \"name\", \"hello\", 1.0f );\n    server.add( doc );\n    server.commit();  // Since the transaction log is disabled in the example, we need to commit\n    \n    SolrQuery q = new SolrQuery();\n    q.setRequestHandler(\"/get\");\n    q.set(\"id\", \"DOCID\");\n    q.set(\"fl\", \"id,name,aaa:[value v=aaa]\");\n    \n    // First Try with the BinaryResponseParser\n    QueryRequest req = new QueryRequest( q );\n    req.setResponseParser(new BinaryResponseParser());\n    QueryResponse rsp = req.process(server);\n    SolrDocument out = (SolrDocument)rsp.getResponse().get(\"doc\");\n    assertEquals(\"DOCID\", out.get(\"id\"));\n    assertEquals(\"hello\", out.get(\"name\"));\n    assertEquals(\"aaa\", out.get(\"aaa\"));\n\n    // Then with the XMLResponseParser\n    req.setResponseParser(new XMLResponseParser());\n    rsp = req.process(server);\n    out = (SolrDocument)rsp.getResponse().get(\"doc\");\n    assertEquals(\"DOCID\", out.get(\"id\"));\n    assertEquals(\"hello\", out.get(\"name\"));\n    assertEquals(\"aaa\", out.get(\"aaa\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testRealtimeGet().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testRealtimeGet().mjava","sourceNew":"  @Test\n  public void testRealtimeGet() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"DOCID\" );\n    doc.addField( \"name\", \"hello\" );\n    client.add(doc);\n    client.commit();  // Since the transaction log is disabled in the example, we need to commit\n    \n    SolrQuery q = new SolrQuery();\n    q.setRequestHandler(\"/get\");\n    q.set(\"id\", \"DOCID\");\n    q.set(\"fl\", \"id,name,aaa:[value v=aaa]\");\n    \n    // First Try with the BinaryResponseParser\n    QueryRequest req = new QueryRequest( q );\n    req.setResponseParser(new BinaryResponseParser());\n    QueryResponse rsp = req.process(client);\n    SolrDocument out = (SolrDocument)rsp.getResponse().get(\"doc\");\n    assertEquals(\"DOCID\", out.get(\"id\"));\n    assertEquals(\"hello\", out.get(\"name\"));\n    assertEquals(\"aaa\", out.get(\"aaa\"));\n\n    // Then with the XMLResponseParser\n    req.setResponseParser(new XMLResponseParser());\n    rsp = req.process(client);\n    out = (SolrDocument)rsp.getResponse().get(\"doc\");\n    assertEquals(\"DOCID\", out.get(\"id\"));\n    assertEquals(\"hello\", out.get(\"name\"));\n    assertEquals(\"aaa\", out.get(\"aaa\"));\n  }\n\n","sourceOld":"  @Test\n  public void testRealtimeGet() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"DOCID\", 1.0f );\n    doc.addField( \"name\", \"hello\", 1.0f );\n    client.add(doc);\n    client.commit();  // Since the transaction log is disabled in the example, we need to commit\n    \n    SolrQuery q = new SolrQuery();\n    q.setRequestHandler(\"/get\");\n    q.set(\"id\", \"DOCID\");\n    q.set(\"fl\", \"id,name,aaa:[value v=aaa]\");\n    \n    // First Try with the BinaryResponseParser\n    QueryRequest req = new QueryRequest( q );\n    req.setResponseParser(new BinaryResponseParser());\n    QueryResponse rsp = req.process(client);\n    SolrDocument out = (SolrDocument)rsp.getResponse().get(\"doc\");\n    assertEquals(\"DOCID\", out.get(\"id\"));\n    assertEquals(\"hello\", out.get(\"name\"));\n    assertEquals(\"aaa\", out.get(\"aaa\"));\n\n    // Then with the XMLResponseParser\n    req.setResponseParser(new XMLResponseParser());\n    rsp = req.process(client);\n    out = (SolrDocument)rsp.getResponse().get(\"doc\");\n    assertEquals(\"DOCID\", out.get(\"id\"));\n    assertEquals(\"hello\", out.get(\"name\"));\n    assertEquals(\"aaa\", out.get(\"aaa\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29918ccc4b27ebd261d8446761e5e02666abe893":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["7b1572188101e23640cb33ef14d47ac743b5e930"],"acd9883560fd89e6448b2b447302fe543040cd4f":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"],"7b1572188101e23640cb33ef14d47ac743b5e930":["29918ccc4b27ebd261d8446761e5e02666abe893"]},"commit2Childs":{"29918ccc4b27ebd261d8446761e5e02666abe893":["7b1572188101e23640cb33ef14d47ac743b5e930"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29918ccc4b27ebd261d8446761e5e02666abe893"],"bafca15d8e408346a67f4282ad1143b88023893b":["acd9883560fd89e6448b2b447302fe543040cd4f"],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7b1572188101e23640cb33ef14d47ac743b5e930":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}