{"path":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","pathOld":"modules/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","sourceNew":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return script == UScript.HIRAGANA ? WORD_HIRAGANA : WORD_KATAKANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return script == UScript.HANGUL ? WORD_HANGUL : WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","sourceOld":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return script == UScript.HIRAGANA ? WORD_HIRAGANA : WORD_KATAKANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return script == UScript.HANGUL ? WORD_HANGUL : WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9381336c4dc91cc20829fb628036012963dc440","date":1515945231,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","sourceNew":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return script == UScript.HIRAGANA ? WORD_HIRAGANA : WORD_KATAKANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return script == UScript.HANGUL ? WORD_HANGUL : WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      case EMOJI_SEQUENCE_STATUS:\n        return WORD_EMOJI;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","sourceOld":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return script == UScript.HIRAGANA ? WORD_HIRAGANA : WORD_KATAKANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return script == UScript.HANGUL ? WORD_HANGUL : WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","sourceNew":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return script == UScript.HIRAGANA ? WORD_HIRAGANA : WORD_KATAKANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return script == UScript.HANGUL ? WORD_HANGUL : WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      case EMOJI_SEQUENCE_STATUS:\n        return WORD_EMOJI;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","sourceOld":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return script == UScript.HIRAGANA ? WORD_HIRAGANA : WORD_KATAKANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return script == UScript.HANGUL ? WORD_HANGUL : WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcc05d435c845d2b3c7c10faeb6674cc37ad3527","date":1519133993,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","sourceNew":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return script == UScript.HIRAGANA ? WORD_HIRAGANA : WORD_KATAKANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return script == UScript.HANGUL ? WORD_HANGUL : WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","sourceOld":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return script == UScript.HIRAGANA ? WORD_HIRAGANA : WORD_KATAKANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return script == UScript.HANGUL ? WORD_HANGUL : WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      case EMOJI_SEQUENCE_STATUS:\n        return WORD_EMOJI;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a3e7b7017a06c652c79a772b1259178f6908877","date":1522103499,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","sourceNew":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return script == UScript.HIRAGANA ? WORD_HIRAGANA : WORD_KATAKANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return script == UScript.HANGUL ? WORD_HANGUL : WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      case EMOJI_SEQUENCE_STATUS:\n        return WORD_EMOJI;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","sourceOld":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return script == UScript.HIRAGANA ? WORD_HIRAGANA : WORD_KATAKANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return script == UScript.HANGUL ? WORD_HANGUL : WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d61a3e0821ed080b9b21e1328bbaa91dcf79f7d7","date":1522191940,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","sourceNew":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return script == UScript.HIRAGANA ? WORD_HIRAGANA : WORD_KATAKANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return script == UScript.HANGUL ? WORD_HANGUL : WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      case EMOJI_SEQUENCE_STATUS:\n        return WORD_EMOJI;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","sourceOld":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return script == UScript.HIRAGANA ? WORD_HIRAGANA : WORD_KATAKANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return script == UScript.HANGUL ? WORD_HANGUL : WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["b89678825b68eccaf09e6ab71675fc0b0af1e099","a9381336c4dc91cc20829fb628036012963dc440"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1a3e7b7017a06c652c79a772b1259178f6908877":["fcc05d435c845d2b3c7c10faeb6674cc37ad3527"],"fcc05d435c845d2b3c7c10faeb6674cc37ad3527":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9381336c4dc91cc20829fb628036012963dc440":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d61a3e0821ed080b9b21e1328bbaa91dcf79f7d7":["fcc05d435c845d2b3c7c10faeb6674cc37ad3527","1a3e7b7017a06c652c79a772b1259178f6908877"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d61a3e0821ed080b9b21e1328bbaa91dcf79f7d7"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["fcc05d435c845d2b3c7c10faeb6674cc37ad3527"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b94236357aaa22b76c10629851fe4e376e0cea82","a9381336c4dc91cc20829fb628036012963dc440"],"1a3e7b7017a06c652c79a772b1259178f6908877":["d61a3e0821ed080b9b21e1328bbaa91dcf79f7d7"],"fcc05d435c845d2b3c7c10faeb6674cc37ad3527":["1a3e7b7017a06c652c79a772b1259178f6908877","d61a3e0821ed080b9b21e1328bbaa91dcf79f7d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a9381336c4dc91cc20829fb628036012963dc440":["b94236357aaa22b76c10629851fe4e376e0cea82"],"d61a3e0821ed080b9b21e1328bbaa91dcf79f7d7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}