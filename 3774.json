{"path":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/ArabicStemmer#stem().mjava","commits":[{"id":"bb2a201e69f2f98d584c49edff74bbddd0172827","date":1540544025,"type":0,"author":"Ryadh Dahimene","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/ArabicStemmer#stem().mjava","pathOld":"/dev/null","sourceNew":"    public boolean stem() {\n        // (, line 515\n        // set is_noun, line 517\n        B_is_noun = true;\n        // set is_verb, line 518\n        B_is_verb = true;\n        // unset is_defined, line 519\n        B_is_defined = false;\n        // do, line 522\n        int v_1 = cursor;\n        lab0: do {\n            // call Checks1, line 522\n            if (!r_Checks1())\n            {\n                break lab0;\n            }\n        } while (false);\n        cursor = v_1;\n        // do, line 525\n        int v_2 = cursor;\n        lab1: do {\n            // call Normalize_pre, line 525\n            if (!r_Normalize_pre())\n            {\n                break lab1;\n            }\n        } while (false);\n        cursor = v_2;\n        // backwards, line 528\n        limit_backward = cursor;\n        cursor = limit;\n        // (, line 528\n        // do, line 530\n        int v_3 = limit - cursor;\n        lab2: do {\n            // (, line 530\n            // or, line 544\n            lab3: do {\n                int v_4 = limit - cursor;\n                lab4: do {\n                    // (, line 532\n                    // Boolean test is_verb, line 533\n                    if (!(B_is_verb))\n                    {\n                        break lab4;\n                    }\n                    // (, line 534\n                    // or, line 539\n                    lab5: do {\n                        int v_5 = limit - cursor;\n                        lab6: do {\n                            // (, line 535\n                            // (, line 536\n                            // atleast, line 536\n                            {\n                                int v_6 = 1;\n                                // atleast, line 536\n                                replab7: while(true)\n                                {\n                                    int v_7 = limit - cursor;\n                                    lab8: do {\n                                        // call Suffix_Verb_Step1, line 536\n                                        if (!r_Suffix_Verb_Step1())\n                                        {\n                                            break lab8;\n                                        }\n                                        v_6--;\n                                        continue replab7;\n                                    } while (false);\n                                    cursor = limit - v_7;\n                                    break replab7;\n                                }\n                                if (v_6 > 0)\n                                {\n                                    break lab6;\n                                }\n                            }\n                            // (, line 537\n                            // or, line 537\n                            lab9: do {\n                                int v_8 = limit - cursor;\n                                lab10: do {\n                                    // call Suffix_Verb_Step2a, line 537\n                                    if (!r_Suffix_Verb_Step2a())\n                                    {\n                                        break lab10;\n                                    }\n                                    break lab9;\n                                } while (false);\n                                cursor = limit - v_8;\n                                lab11: do {\n                                    // call Suffix_Verb_Step2c, line 537\n                                    if (!r_Suffix_Verb_Step2c())\n                                    {\n                                        break lab11;\n                                    }\n                                    break lab9;\n                                } while (false);\n                                cursor = limit - v_8;\n                                // next, line 537\n                                if (cursor <= limit_backward)\n                                {\n                                    break lab6;\n                                }\n                                cursor--;\n                            } while (false);\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_5;\n                        lab12: do {\n                            // call Suffix_Verb_Step2b, line 539\n                            if (!r_Suffix_Verb_Step2b())\n                            {\n                                break lab12;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_5;\n                        // call Suffix_Verb_Step2a, line 540\n                        if (!r_Suffix_Verb_Step2a())\n                        {\n                            break lab4;\n                        }\n                    } while (false);\n                    break lab3;\n                } while (false);\n                cursor = limit - v_4;\n                lab13: do {\n                    // (, line 544\n                    // Boolean test is_noun, line 545\n                    if (!(B_is_noun))\n                    {\n                        break lab13;\n                    }\n                    // (, line 546\n                    // try, line 548\n                    int v_9 = limit - cursor;\n                    lab14: do {\n                        // (, line 548\n                        // or, line 550\n                        lab15: do {\n                            int v_10 = limit - cursor;\n                            lab16: do {\n                                // call Suffix_Noun_Step2c2, line 549\n                                if (!r_Suffix_Noun_Step2c2())\n                                {\n                                    break lab16;\n                                }\n                                break lab15;\n                            } while (false);\n                            cursor = limit - v_10;\n                            lab17: do {\n                                // (, line 550\n                                // not, line 550\n                                lab18: do {\n                                    // Boolean test is_defined, line 550\n                                    if (!(B_is_defined))\n                                    {\n                                        break lab18;\n                                    }\n                                    break lab17;\n                                } while (false);\n                                // call Suffix_Noun_Step1a, line 550\n                                if (!r_Suffix_Noun_Step1a())\n                                {\n                                    break lab17;\n                                }\n                                // (, line 550\n                                // or, line 552\n                                lab19: do {\n                                    int v_12 = limit - cursor;\n                                    lab20: do {\n                                        // call Suffix_Noun_Step2a, line 551\n                                        if (!r_Suffix_Noun_Step2a())\n                                        {\n                                            break lab20;\n                                        }\n                                        break lab19;\n                                    } while (false);\n                                    cursor = limit - v_12;\n                                    lab21: do {\n                                        // call Suffix_Noun_Step2b, line 552\n                                        if (!r_Suffix_Noun_Step2b())\n                                        {\n                                            break lab21;\n                                        }\n                                        break lab19;\n                                    } while (false);\n                                    cursor = limit - v_12;\n                                    lab22: do {\n                                        // call Suffix_Noun_Step2c1, line 553\n                                        if (!r_Suffix_Noun_Step2c1())\n                                        {\n                                            break lab22;\n                                        }\n                                        break lab19;\n                                    } while (false);\n                                    cursor = limit - v_12;\n                                    // next, line 554\n                                    if (cursor <= limit_backward)\n                                    {\n                                        break lab17;\n                                    }\n                                    cursor--;\n                                } while (false);\n                                break lab15;\n                            } while (false);\n                            cursor = limit - v_10;\n                            lab23: do {\n                                // (, line 555\n                                // call Suffix_Noun_Step1b, line 555\n                                if (!r_Suffix_Noun_Step1b())\n                                {\n                                    break lab23;\n                                }\n                                // (, line 555\n                                // or, line 557\n                                lab24: do {\n                                    int v_13 = limit - cursor;\n                                    lab25: do {\n                                        // call Suffix_Noun_Step2a, line 556\n                                        if (!r_Suffix_Noun_Step2a())\n                                        {\n                                            break lab25;\n                                        }\n                                        break lab24;\n                                    } while (false);\n                                    cursor = limit - v_13;\n                                    lab26: do {\n                                        // call Suffix_Noun_Step2b, line 557\n                                        if (!r_Suffix_Noun_Step2b())\n                                        {\n                                            break lab26;\n                                        }\n                                        break lab24;\n                                    } while (false);\n                                    cursor = limit - v_13;\n                                    // call Suffix_Noun_Step2c1, line 558\n                                    if (!r_Suffix_Noun_Step2c1())\n                                    {\n                                        break lab23;\n                                    }\n                                } while (false);\n                                break lab15;\n                            } while (false);\n                            cursor = limit - v_10;\n                            lab27: do {\n                                // (, line 559\n                                // not, line 559\n                                lab28: do {\n                                    // Boolean test is_defined, line 559\n                                    if (!(B_is_defined))\n                                    {\n                                        break lab28;\n                                    }\n                                    break lab27;\n                                } while (false);\n                                // call Suffix_Noun_Step2a, line 559\n                                if (!r_Suffix_Noun_Step2a())\n                                {\n                                    break lab27;\n                                }\n                                break lab15;\n                            } while (false);\n                            cursor = limit - v_10;\n                            // (, line 560\n                            // call Suffix_Noun_Step2b, line 560\n                            if (!r_Suffix_Noun_Step2b())\n                            {\n                                cursor = limit - v_9;\n                                break lab14;\n                            }\n                        } while (false);\n                    } while (false);\n                    // call Suffix_Noun_Step3, line 562\n                    if (!r_Suffix_Noun_Step3())\n                    {\n                        break lab13;\n                    }\n                    break lab3;\n                } while (false);\n                cursor = limit - v_4;\n                // call Suffix_All_alef_maqsura, line 568\n                if (!r_Suffix_All_alef_maqsura())\n                {\n                    break lab2;\n                }\n            } while (false);\n        } while (false);\n        cursor = limit - v_3;\n        cursor = limit_backward;\n        // do, line 573\n        int v_15 = cursor;\n        lab29: do {\n            // (, line 573\n            // try, line 574\n            int v_16 = cursor;\n            lab30: do {\n                // call Prefix_Step1, line 574\n                if (!r_Prefix_Step1())\n                {\n                    cursor = v_16;\n                    break lab30;\n                }\n            } while (false);\n            // try, line 575\n            int v_17 = cursor;\n            lab31: do {\n                // call Prefix_Step2, line 575\n                if (!r_Prefix_Step2())\n                {\n                    cursor = v_17;\n                    break lab31;\n                }\n            } while (false);\n            // (, line 576\n            // or, line 577\n            lab32: do {\n                int v_18 = cursor;\n                lab33: do {\n                    // call Prefix_Step3a_Noun, line 576\n                    if (!r_Prefix_Step3a_Noun())\n                    {\n                        break lab33;\n                    }\n                    break lab32;\n                } while (false);\n                cursor = v_18;\n                lab34: do {\n                    // (, line 577\n                    // Boolean test is_noun, line 577\n                    if (!(B_is_noun))\n                    {\n                        break lab34;\n                    }\n                    // call Prefix_Step3b_Noun, line 577\n                    if (!r_Prefix_Step3b_Noun())\n                    {\n                        break lab34;\n                    }\n                    break lab32;\n                } while (false);\n                cursor = v_18;\n                // (, line 578\n                // Boolean test is_verb, line 578\n                if (!(B_is_verb))\n                {\n                    break lab29;\n                }\n                // try, line 578\n                int v_19 = cursor;\n                lab35: do {\n                    // call Prefix_Step3_Verb, line 578\n                    if (!r_Prefix_Step3_Verb())\n                    {\n                        cursor = v_19;\n                        break lab35;\n                    }\n                } while (false);\n                // call Prefix_Step4_Verb, line 578\n                if (!r_Prefix_Step4_Verb())\n                {\n                    break lab29;\n                }\n            } while (false);\n        } while (false);\n        cursor = v_15;\n        // do, line 583\n        int v_20 = cursor;\n        lab36: do {\n            // call Normalize_post, line 583\n            if (!r_Normalize_post())\n            {\n                break lab36;\n            }\n        } while (false);\n        cursor = v_20;\n        return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09479cd2de06c67a115b7346a8e5de8af4d62e81","date":1581961081,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/ArabicStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/ArabicStemmer#stem().mjava","sourceNew":"public boolean stem() {\n  B_is_noun = true;\n  B_is_verb = true;\n  B_is_defined = false;\n  int v_1 = cursor;\n  r_Checks1();\n  cursor = v_1;\n  r_Normalize_pre();\n  limit_backward = cursor;\n  cursor = limit;\n  int v_3 = limit - cursor;\n  lab0: {\n    lab1: {\n      int v_4 = limit - cursor;\n      lab2: {\n        if (!(B_is_verb))\n        {\n          break lab2;\n        }\n        lab3: {\n          int v_5 = limit - cursor;\n          lab4: {\n            {\n              int v_6 = 1;\n              while(true)\n              {\n                int v_7 = limit - cursor;\n                lab5: {\n                  if (!r_Suffix_Verb_Step1())\n                  {\n                    break lab5;\n                  }\n                  v_6--;\n                  continue;\n                }\n                cursor = limit - v_7;\n                break;\n              }\n              if (v_6 > 0)\n              {\n                break lab4;\n              }\n            }\n            lab6: {\n              int v_8 = limit - cursor;\n              lab7: {\n                if (!r_Suffix_Verb_Step2a())\n                {\n                  break lab7;\n                }\n                break lab6;\n              }\n              cursor = limit - v_8;\n              lab8: {\n                if (!r_Suffix_Verb_Step2c())\n                {\n                  break lab8;\n                }\n                break lab6;\n              }\n              cursor = limit - v_8;\n              if (cursor <= limit_backward)\n              {\n                break lab4;\n              }\n              cursor--;\n            }\n            break lab3;\n          }\n          cursor = limit - v_5;\n          lab9: {\n            if (!r_Suffix_Verb_Step2b())\n            {\n              break lab9;\n            }\n            break lab3;\n          }\n          cursor = limit - v_5;\n          if (!r_Suffix_Verb_Step2a())\n          {\n            break lab2;\n          }\n        }\n        break lab1;\n      }\n      cursor = limit - v_4;\n      lab10: {\n        if (!(B_is_noun))\n        {\n          break lab10;\n        }\n        int v_9 = limit - cursor;\n        lab11: {\n          lab12: {\n            int v_10 = limit - cursor;\n            lab13: {\n              if (!r_Suffix_Noun_Step2c2())\n              {\n                break lab13;\n              }\n              break lab12;\n            }\n            cursor = limit - v_10;\n            lab14: {\n              lab15: {\n                if (!(B_is_defined))\n                {\n                  break lab15;\n                }\n                break lab14;\n              }\n              if (!r_Suffix_Noun_Step1a())\n              {\n                break lab14;\n              }\n              lab16: {\n                int v_12 = limit - cursor;\n                lab17: {\n                  if (!r_Suffix_Noun_Step2a())\n                  {\n                    break lab17;\n                  }\n                  break lab16;\n                }\n                cursor = limit - v_12;\n                lab18: {\n                  if (!r_Suffix_Noun_Step2b())\n                  {\n                    break lab18;\n                  }\n                  break lab16;\n                }\n                cursor = limit - v_12;\n                lab19: {\n                  if (!r_Suffix_Noun_Step2c1())\n                  {\n                    break lab19;\n                  }\n                  break lab16;\n                }\n                cursor = limit - v_12;\n                if (cursor <= limit_backward)\n                {\n                  break lab14;\n                }\n                cursor--;\n              }\n              break lab12;\n            }\n            cursor = limit - v_10;\n            lab20: {\n              if (!r_Suffix_Noun_Step1b())\n              {\n                break lab20;\n              }\n              lab21: {\n                int v_13 = limit - cursor;\n                lab22: {\n                  if (!r_Suffix_Noun_Step2a())\n                  {\n                    break lab22;\n                  }\n                  break lab21;\n                }\n                cursor = limit - v_13;\n                lab23: {\n                  if (!r_Suffix_Noun_Step2b())\n                  {\n                    break lab23;\n                  }\n                  break lab21;\n                }\n                cursor = limit - v_13;\n                if (!r_Suffix_Noun_Step2c1())\n                {\n                  break lab20;\n                }\n              }\n              break lab12;\n            }\n            cursor = limit - v_10;\n            lab24: {\n              lab25: {\n                if (!(B_is_defined))\n                {\n                  break lab25;\n                }\n                break lab24;\n              }\n              if (!r_Suffix_Noun_Step2a())\n              {\n                break lab24;\n              }\n              break lab12;\n            }\n            cursor = limit - v_10;\n            if (!r_Suffix_Noun_Step2b())\n            {\n              cursor = limit - v_9;\n              break lab11;\n            }\n          }\n        }\n        if (!r_Suffix_Noun_Step3())\n        {\n          break lab10;\n        }\n        break lab1;\n      }\n      cursor = limit - v_4;\n      if (!r_Suffix_All_alef_maqsura())\n      {\n        break lab0;\n      }\n    }\n  }\n  cursor = limit - v_3;\n  cursor = limit_backward;\n  int v_15 = cursor;\n  lab26: {\n    int v_16 = cursor;\n    lab27: {\n      if (!r_Prefix_Step1())\n      {\n        cursor = v_16;\n        break lab27;\n      }\n    }\n    int v_17 = cursor;\n    lab28: {\n      if (!r_Prefix_Step2())\n      {\n        cursor = v_17;\n        break lab28;\n      }\n    }\n    lab29: {\n      int v_18 = cursor;\n      lab30: {\n        if (!r_Prefix_Step3a_Noun())\n        {\n          break lab30;\n        }\n        break lab29;\n      }\n      cursor = v_18;\n      lab31: {\n        if (!(B_is_noun))\n        {\n          break lab31;\n        }\n        if (!r_Prefix_Step3b_Noun())\n        {\n          break lab31;\n        }\n        break lab29;\n      }\n      cursor = v_18;\n      if (!(B_is_verb))\n      {\n        break lab26;\n      }\n      int v_19 = cursor;\n      lab32: {\n        if (!r_Prefix_Step3_Verb())\n        {\n          cursor = v_19;\n          break lab32;\n        }\n      }\n      if (!r_Prefix_Step4_Verb())\n      {\n        break lab26;\n      }\n    }\n  }\n  cursor = v_15;\n  r_Normalize_post();\n  return true;\n}\n\n","sourceOld":"    public boolean stem() {\n        // (, line 515\n        // set is_noun, line 517\n        B_is_noun = true;\n        // set is_verb, line 518\n        B_is_verb = true;\n        // unset is_defined, line 519\n        B_is_defined = false;\n        // do, line 522\n        int v_1 = cursor;\n        lab0: do {\n            // call Checks1, line 522\n            if (!r_Checks1())\n            {\n                break lab0;\n            }\n        } while (false);\n        cursor = v_1;\n        // do, line 525\n        int v_2 = cursor;\n        lab1: do {\n            // call Normalize_pre, line 525\n            if (!r_Normalize_pre())\n            {\n                break lab1;\n            }\n        } while (false);\n        cursor = v_2;\n        // backwards, line 528\n        limit_backward = cursor;\n        cursor = limit;\n        // (, line 528\n        // do, line 530\n        int v_3 = limit - cursor;\n        lab2: do {\n            // (, line 530\n            // or, line 544\n            lab3: do {\n                int v_4 = limit - cursor;\n                lab4: do {\n                    // (, line 532\n                    // Boolean test is_verb, line 533\n                    if (!(B_is_verb))\n                    {\n                        break lab4;\n                    }\n                    // (, line 534\n                    // or, line 539\n                    lab5: do {\n                        int v_5 = limit - cursor;\n                        lab6: do {\n                            // (, line 535\n                            // (, line 536\n                            // atleast, line 536\n                            {\n                                int v_6 = 1;\n                                // atleast, line 536\n                                replab7: while(true)\n                                {\n                                    int v_7 = limit - cursor;\n                                    lab8: do {\n                                        // call Suffix_Verb_Step1, line 536\n                                        if (!r_Suffix_Verb_Step1())\n                                        {\n                                            break lab8;\n                                        }\n                                        v_6--;\n                                        continue replab7;\n                                    } while (false);\n                                    cursor = limit - v_7;\n                                    break replab7;\n                                }\n                                if (v_6 > 0)\n                                {\n                                    break lab6;\n                                }\n                            }\n                            // (, line 537\n                            // or, line 537\n                            lab9: do {\n                                int v_8 = limit - cursor;\n                                lab10: do {\n                                    // call Suffix_Verb_Step2a, line 537\n                                    if (!r_Suffix_Verb_Step2a())\n                                    {\n                                        break lab10;\n                                    }\n                                    break lab9;\n                                } while (false);\n                                cursor = limit - v_8;\n                                lab11: do {\n                                    // call Suffix_Verb_Step2c, line 537\n                                    if (!r_Suffix_Verb_Step2c())\n                                    {\n                                        break lab11;\n                                    }\n                                    break lab9;\n                                } while (false);\n                                cursor = limit - v_8;\n                                // next, line 537\n                                if (cursor <= limit_backward)\n                                {\n                                    break lab6;\n                                }\n                                cursor--;\n                            } while (false);\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_5;\n                        lab12: do {\n                            // call Suffix_Verb_Step2b, line 539\n                            if (!r_Suffix_Verb_Step2b())\n                            {\n                                break lab12;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_5;\n                        // call Suffix_Verb_Step2a, line 540\n                        if (!r_Suffix_Verb_Step2a())\n                        {\n                            break lab4;\n                        }\n                    } while (false);\n                    break lab3;\n                } while (false);\n                cursor = limit - v_4;\n                lab13: do {\n                    // (, line 544\n                    // Boolean test is_noun, line 545\n                    if (!(B_is_noun))\n                    {\n                        break lab13;\n                    }\n                    // (, line 546\n                    // try, line 548\n                    int v_9 = limit - cursor;\n                    lab14: do {\n                        // (, line 548\n                        // or, line 550\n                        lab15: do {\n                            int v_10 = limit - cursor;\n                            lab16: do {\n                                // call Suffix_Noun_Step2c2, line 549\n                                if (!r_Suffix_Noun_Step2c2())\n                                {\n                                    break lab16;\n                                }\n                                break lab15;\n                            } while (false);\n                            cursor = limit - v_10;\n                            lab17: do {\n                                // (, line 550\n                                // not, line 550\n                                lab18: do {\n                                    // Boolean test is_defined, line 550\n                                    if (!(B_is_defined))\n                                    {\n                                        break lab18;\n                                    }\n                                    break lab17;\n                                } while (false);\n                                // call Suffix_Noun_Step1a, line 550\n                                if (!r_Suffix_Noun_Step1a())\n                                {\n                                    break lab17;\n                                }\n                                // (, line 550\n                                // or, line 552\n                                lab19: do {\n                                    int v_12 = limit - cursor;\n                                    lab20: do {\n                                        // call Suffix_Noun_Step2a, line 551\n                                        if (!r_Suffix_Noun_Step2a())\n                                        {\n                                            break lab20;\n                                        }\n                                        break lab19;\n                                    } while (false);\n                                    cursor = limit - v_12;\n                                    lab21: do {\n                                        // call Suffix_Noun_Step2b, line 552\n                                        if (!r_Suffix_Noun_Step2b())\n                                        {\n                                            break lab21;\n                                        }\n                                        break lab19;\n                                    } while (false);\n                                    cursor = limit - v_12;\n                                    lab22: do {\n                                        // call Suffix_Noun_Step2c1, line 553\n                                        if (!r_Suffix_Noun_Step2c1())\n                                        {\n                                            break lab22;\n                                        }\n                                        break lab19;\n                                    } while (false);\n                                    cursor = limit - v_12;\n                                    // next, line 554\n                                    if (cursor <= limit_backward)\n                                    {\n                                        break lab17;\n                                    }\n                                    cursor--;\n                                } while (false);\n                                break lab15;\n                            } while (false);\n                            cursor = limit - v_10;\n                            lab23: do {\n                                // (, line 555\n                                // call Suffix_Noun_Step1b, line 555\n                                if (!r_Suffix_Noun_Step1b())\n                                {\n                                    break lab23;\n                                }\n                                // (, line 555\n                                // or, line 557\n                                lab24: do {\n                                    int v_13 = limit - cursor;\n                                    lab25: do {\n                                        // call Suffix_Noun_Step2a, line 556\n                                        if (!r_Suffix_Noun_Step2a())\n                                        {\n                                            break lab25;\n                                        }\n                                        break lab24;\n                                    } while (false);\n                                    cursor = limit - v_13;\n                                    lab26: do {\n                                        // call Suffix_Noun_Step2b, line 557\n                                        if (!r_Suffix_Noun_Step2b())\n                                        {\n                                            break lab26;\n                                        }\n                                        break lab24;\n                                    } while (false);\n                                    cursor = limit - v_13;\n                                    // call Suffix_Noun_Step2c1, line 558\n                                    if (!r_Suffix_Noun_Step2c1())\n                                    {\n                                        break lab23;\n                                    }\n                                } while (false);\n                                break lab15;\n                            } while (false);\n                            cursor = limit - v_10;\n                            lab27: do {\n                                // (, line 559\n                                // not, line 559\n                                lab28: do {\n                                    // Boolean test is_defined, line 559\n                                    if (!(B_is_defined))\n                                    {\n                                        break lab28;\n                                    }\n                                    break lab27;\n                                } while (false);\n                                // call Suffix_Noun_Step2a, line 559\n                                if (!r_Suffix_Noun_Step2a())\n                                {\n                                    break lab27;\n                                }\n                                break lab15;\n                            } while (false);\n                            cursor = limit - v_10;\n                            // (, line 560\n                            // call Suffix_Noun_Step2b, line 560\n                            if (!r_Suffix_Noun_Step2b())\n                            {\n                                cursor = limit - v_9;\n                                break lab14;\n                            }\n                        } while (false);\n                    } while (false);\n                    // call Suffix_Noun_Step3, line 562\n                    if (!r_Suffix_Noun_Step3())\n                    {\n                        break lab13;\n                    }\n                    break lab3;\n                } while (false);\n                cursor = limit - v_4;\n                // call Suffix_All_alef_maqsura, line 568\n                if (!r_Suffix_All_alef_maqsura())\n                {\n                    break lab2;\n                }\n            } while (false);\n        } while (false);\n        cursor = limit - v_3;\n        cursor = limit_backward;\n        // do, line 573\n        int v_15 = cursor;\n        lab29: do {\n            // (, line 573\n            // try, line 574\n            int v_16 = cursor;\n            lab30: do {\n                // call Prefix_Step1, line 574\n                if (!r_Prefix_Step1())\n                {\n                    cursor = v_16;\n                    break lab30;\n                }\n            } while (false);\n            // try, line 575\n            int v_17 = cursor;\n            lab31: do {\n                // call Prefix_Step2, line 575\n                if (!r_Prefix_Step2())\n                {\n                    cursor = v_17;\n                    break lab31;\n                }\n            } while (false);\n            // (, line 576\n            // or, line 577\n            lab32: do {\n                int v_18 = cursor;\n                lab33: do {\n                    // call Prefix_Step3a_Noun, line 576\n                    if (!r_Prefix_Step3a_Noun())\n                    {\n                        break lab33;\n                    }\n                    break lab32;\n                } while (false);\n                cursor = v_18;\n                lab34: do {\n                    // (, line 577\n                    // Boolean test is_noun, line 577\n                    if (!(B_is_noun))\n                    {\n                        break lab34;\n                    }\n                    // call Prefix_Step3b_Noun, line 577\n                    if (!r_Prefix_Step3b_Noun())\n                    {\n                        break lab34;\n                    }\n                    break lab32;\n                } while (false);\n                cursor = v_18;\n                // (, line 578\n                // Boolean test is_verb, line 578\n                if (!(B_is_verb))\n                {\n                    break lab29;\n                }\n                // try, line 578\n                int v_19 = cursor;\n                lab35: do {\n                    // call Prefix_Step3_Verb, line 578\n                    if (!r_Prefix_Step3_Verb())\n                    {\n                        cursor = v_19;\n                        break lab35;\n                    }\n                } while (false);\n                // call Prefix_Step4_Verb, line 578\n                if (!r_Prefix_Step4_Verb())\n                {\n                    break lab29;\n                }\n            } while (false);\n        } while (false);\n        cursor = v_15;\n        // do, line 583\n        int v_20 = cursor;\n        lab36: do {\n            // call Normalize_post, line 583\n            if (!r_Normalize_post())\n            {\n                break lab36;\n            }\n        } while (false);\n        cursor = v_20;\n        return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb2a201e69f2f98d584c49edff74bbddd0172827":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["bb2a201e69f2f98d584c49edff74bbddd0172827"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09479cd2de06c67a115b7346a8e5de8af4d62e81"]},"commit2Childs":{"bb2a201e69f2f98d584c49edff74bbddd0172827":["09479cd2de06c67a115b7346a8e5de8af4d62e81"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb2a201e69f2f98d584c49edff74bbddd0172827"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}