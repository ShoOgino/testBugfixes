{"path":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldDocValuesFormat.MergeRecordingDocValueFormatWrapper#fieldsConsumer(SegmentWriteState).mjava","commits":[{"id":"132f1575a9078b618f9e1c35ac94f06444006662","date":1475595294,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldDocValuesFormat.MergeRecordingDocValueFormatWrapper#fieldsConsumer(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public DocValuesConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n      final DocValuesConsumer consumer = delegate.fieldsConsumer(state);\n      return new DocValuesConsumer() {\n        @Override\n        public void addNumericField(FieldInfo field, Iterable<Number> values) throws IOException {\n          consumer.addNumericField(field, values);\n        }\n\n        @Override\n        public void addBinaryField(FieldInfo field, Iterable<BytesRef> values) throws IOException {\n          consumer.addBinaryField(field, values);\n        }\n\n        @Override\n        public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n          consumer.addSortedField(field, values, docToOrd);\n        }\n\n        @Override\n        public void addSortedNumericField(FieldInfo field, Iterable<Number> docToValueCount, Iterable<Number> values) throws IOException {\n          consumer.addSortedNumericField(field, docToValueCount, values);\n        }\n\n        @Override\n        public void addSortedSetField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrdCount, Iterable<Number> ords) throws IOException {\n          consumer.addSortedSetField(field, values, docToOrdCount, ords);\n        }\n\n        @Override\n        public void merge(MergeState mergeState) throws IOException {\n          nbMergeCalls++;\n          for (FieldInfo fi : mergeState.mergeFieldInfos) {\n            fieldNames.add(fi.name);\n          }\n          consumer.merge(mergeState);\n        }\n\n        @Override\n        public void close() throws IOException {\n          consumer.close();\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6e879e86865f8d496738d261382aac99f0657e8","date":1475601140,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldDocValuesFormat.MergeRecordingDocValueFormatWrapper#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldDocValuesFormat.MergeRecordingDocValueFormatWrapper#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"    @Override\n    public DocValuesConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n      final DocValuesConsumer consumer = delegate.fieldsConsumer(state);\n      return new DocValuesConsumer() {\n        @Override\n        public void addNumericField(FieldInfo field, DocValuesProducer values) throws IOException {\n          consumer.addNumericField(field, values);\n        }\n\n        @Override\n        public void addBinaryField(FieldInfo field, DocValuesProducer values) throws IOException {\n          consumer.addBinaryField(field, values);\n        }\n\n        @Override\n        public void addSortedField(FieldInfo field, DocValuesProducer values) throws IOException {\n          consumer.addSortedField(field, values);\n        }\n\n        @Override\n        public void addSortedNumericField(FieldInfo field, DocValuesProducer values) throws IOException {\n          consumer.addSortedNumericField(field, values);\n        }\n\n        @Override\n        public void addSortedSetField(FieldInfo field, DocValuesProducer values) throws IOException {\n          consumer.addSortedSetField(field, values);\n        }\n\n        @Override\n        public void merge(MergeState mergeState) throws IOException {\n          nbMergeCalls++;\n          for (FieldInfo fi : mergeState.mergeFieldInfos) {\n            fieldNames.add(fi.name);\n          }\n          consumer.merge(mergeState);\n        }\n\n        @Override\n        public void close() throws IOException {\n          consumer.close();\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public DocValuesConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n      final DocValuesConsumer consumer = delegate.fieldsConsumer(state);\n      return new DocValuesConsumer() {\n        @Override\n        public void addNumericField(FieldInfo field, Iterable<Number> values) throws IOException {\n          consumer.addNumericField(field, values);\n        }\n\n        @Override\n        public void addBinaryField(FieldInfo field, Iterable<BytesRef> values) throws IOException {\n          consumer.addBinaryField(field, values);\n        }\n\n        @Override\n        public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n          consumer.addSortedField(field, values, docToOrd);\n        }\n\n        @Override\n        public void addSortedNumericField(FieldInfo field, Iterable<Number> docToValueCount, Iterable<Number> values) throws IOException {\n          consumer.addSortedNumericField(field, docToValueCount, values);\n        }\n\n        @Override\n        public void addSortedSetField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrdCount, Iterable<Number> ords) throws IOException {\n          consumer.addSortedSetField(field, values, docToOrdCount, ords);\n        }\n\n        @Override\n        public void merge(MergeState mergeState) throws IOException {\n          nbMergeCalls++;\n          for (FieldInfo fi : mergeState.mergeFieldInfos) {\n            fieldNames.add(fi.name);\n          }\n          consumer.merge(mergeState);\n        }\n\n        @Override\n        public void close() throws IOException {\n          consumer.close();\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldDocValuesFormat.MergeRecordingDocValueFormatWrapper#fieldsConsumer(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public DocValuesConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n      final DocValuesConsumer consumer = delegate.fieldsConsumer(state);\n      return new DocValuesConsumer() {\n        @Override\n        public void addNumericField(FieldInfo field, DocValuesProducer values) throws IOException {\n          consumer.addNumericField(field, values);\n        }\n\n        @Override\n        public void addBinaryField(FieldInfo field, DocValuesProducer values) throws IOException {\n          consumer.addBinaryField(field, values);\n        }\n\n        @Override\n        public void addSortedField(FieldInfo field, DocValuesProducer values) throws IOException {\n          consumer.addSortedField(field, values);\n        }\n\n        @Override\n        public void addSortedNumericField(FieldInfo field, DocValuesProducer values) throws IOException {\n          consumer.addSortedNumericField(field, values);\n        }\n\n        @Override\n        public void addSortedSetField(FieldInfo field, DocValuesProducer values) throws IOException {\n          consumer.addSortedSetField(field, values);\n        }\n\n        @Override\n        public void merge(MergeState mergeState) throws IOException {\n          nbMergeCalls++;\n          for (FieldInfo fi : mergeState.mergeFieldInfos) {\n            fieldNames.add(fi.name);\n          }\n          consumer.merge(mergeState);\n        }\n\n        @Override\n        public void close() throws IOException {\n          consumer.close();\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"132f1575a9078b618f9e1c35ac94f06444006662":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6e879e86865f8d496738d261382aac99f0657e8":["132f1575a9078b618f9e1c35ac94f06444006662"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e6e879e86865f8d496738d261382aac99f0657e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e6e879e86865f8d496738d261382aac99f0657e8"]},"commit2Childs":{"132f1575a9078b618f9e1c35ac94f06444006662":["e6e879e86865f8d496738d261382aac99f0657e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["132f1575a9078b618f9e1c35ac94f06444006662","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"e6e879e86865f8d496738d261382aac99f0657e8":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}