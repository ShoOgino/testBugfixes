{"path":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","commits":[{"id":"5f0737567c7196b3ba1a359c2bdf103a3984a55e","date":1275089164,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query, \n     DocList docs, \n     SolrIndexSearcher searcher, \n     IndexSchema schema) throws IOException {\n    \n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd00dd91853514614379b0e680d65bd19cac0f30","date":1283087816,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","sourceOld":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query, \n     DocList docs, \n     SolrIndexSearcher searcher, \n     IndexSchema schema) throws IOException {\n    \n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","sourceOld":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query, \n     DocList docs, \n     SolrIndexSearcher searcher, \n     IndexSchema schema) throws IOException {\n    \n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","sourceOld":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","sourceOld":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplanations(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","sourceOld":"  /**\n   * Generates an NamedList of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList<Explanation> getExplanations\n    (Query query,\n     DocList docs,\n     SolrIndexSearcher searcher,\n     IndexSchema schema) throws IOException {\n\n    NamedList<Explanation> explainList = new SimpleOrderedMap<Explanation>();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      explainList.add(strid, searcher.explain(query, id) );\n    }\n    return explainList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["cd00dd91853514614379b0e680d65bd19cac0f30"],"c26f00b574427b55127e869b935845554afde1fa":["cd00dd91853514614379b0e680d65bd19cac0f30","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["cd00dd91853514614379b0e680d65bd19cac0f30"],"5f0737567c7196b3ba1a359c2bdf103a3984a55e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f0737567c7196b3ba1a359c2bdf103a3984a55e","cd00dd91853514614379b0e680d65bd19cac0f30"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"],"cd00dd91853514614379b0e680d65bd19cac0f30":["5f0737567c7196b3ba1a359c2bdf103a3984a55e"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f0737567c7196b3ba1a359c2bdf103a3984a55e"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"5f0737567c7196b3ba1a359c2bdf103a3984a55e":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd00dd91853514614379b0e680d65bd19cac0f30"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd00dd91853514614379b0e680d65bd19cac0f30":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}