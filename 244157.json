{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13","date":1409346855,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    // TODO: we have the logic in MDW to do this check, and its better, because it knows about files it tried\n    // to delete but couldn't: we should replace this!!!!\n    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      if (dir instanceof MockDirectoryWrapper) {\n        assertFalse(\"test is broken: should disable virus scanner\", ((MockDirectoryWrapper)dir).getEnableVirusScanner());\n      }\n      String[] startFiles = dir.listAll();\n      new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    // TODO: we have the logic in MDW to do this check, and it's better, because it knows about files it tried\n    // to delete but couldn't: we should replace this!!!!\n    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      if (dir instanceof MockDirectoryWrapper) {\n        assertFalse(\"test is broken: should disable virus scanner\", ((MockDirectoryWrapper)dir).getEnableVirusScanner());\n      }\n      String[] startFiles = dir.listAll();\n      new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    // TODO: we have the logic in MDW to do this check, and its better, because it knows about files it tried\n    // to delete but couldn't: we should replace this!!!!\n    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      if (dir instanceof MockDirectoryWrapper) {\n        assertFalse(\"test is broken: should disable virus scanner\", ((MockDirectoryWrapper)dir).getEnableVirusScanner());\n      }\n      String[] startFiles = dir.listAll();\n      new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"  // TODO: we have the logic in MDW to do this check, and it's better, because it knows about files it tried\n  // to delete but couldn't: we should replace this!!!!\n  public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n    String[] startFiles = dir.listAll();\n    new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))).rollback();\n    String[] endFiles = dir.listAll();\n\n    Arrays.sort(startFiles);\n    Arrays.sort(endFiles);\n\n    if (!Arrays.equals(startFiles, endFiles)) {\n      fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n    }\n  }\n\n","sourceOld":"    // TODO: we have the logic in MDW to do this check, and it's better, because it knows about files it tried\n    // to delete but couldn't: we should replace this!!!!\n    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      if (dir instanceof MockDirectoryWrapper) {\n        assertFalse(\"test is broken: should disable virus scanner\", ((MockDirectoryWrapper)dir).getEnableVirusScanner());\n      }\n      String[] startFiles = dir.listAll();\n      new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"  // TODO: we have the logic in MDW to do this check, and it's better, because it knows about files it tried\n  // to delete but couldn't: we should replace this!!!!\n  public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n    String[] startFiles = dir.listAll();\n    new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))).rollback();\n    String[] endFiles = dir.listAll();\n\n    Arrays.sort(startFiles);\n    Arrays.sort(endFiles);\n\n    if (!Arrays.equals(startFiles, endFiles)) {\n      fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n    }\n  }\n\n","sourceOld":"    // TODO: we have the logic in MDW to do this check, and it's better, because it knows about files it tried\n    // to delete but couldn't: we should replace this!!!!\n    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      if (dir instanceof MockDirectoryWrapper) {\n        assertFalse(\"test is broken: should disable virus scanner\", ((MockDirectoryWrapper)dir).getEnableVirusScanner());\n      }\n      String[] startFiles = dir.listAll();\n      new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"  // TODO: we have the logic in MDW to do this check, and it's better, because it knows about files it tried\n  // to delete but couldn't: we should replace this!!!!\n  public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n    String[] startFiles = dir.listAll();\n    new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))).rollback();\n    String[] endFiles = dir.listAll();\n\n    Arrays.sort(startFiles);\n    Arrays.sort(endFiles);\n\n    if (!Arrays.equals(startFiles, endFiles)) {\n      fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n    }\n  }\n\n","sourceOld":"    // TODO: we have the logic in MDW to do this check, and it's better, because it knows about files it tried\n    // to delete but couldn't: we should replace this!!!!\n    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      if (dir instanceof MockDirectoryWrapper) {\n        assertFalse(\"test is broken: should disable virus scanner\", ((MockDirectoryWrapper)dir).getEnableVirusScanner());\n      }\n      String[] startFiles = dir.listAll();\n      new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"  // TODO: we have the logic in MDW to do this check, and it's better, because it knows about files it tried\n  // to delete but couldn't: we should replace this!!!!\n  public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n    String[] startFiles = dir.listAll();\n    new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))).rollback();\n    String[] endFiles = dir.listAll();\n\n    Arrays.sort(startFiles);\n    Arrays.sort(endFiles);\n\n    if (!Arrays.equals(startFiles, endFiles)) {\n      fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n    }\n  }\n\n","sourceOld":"    // TODO: we have the logic in MDW to do this check, and it's better, because it knows about files it tried\n    // to delete but couldn't: we should replace this!!!!\n    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      if (dir instanceof MockDirectoryWrapper) {\n        assertFalse(\"test is broken: should disable virus scanner\", ((MockDirectoryWrapper)dir).getEnableVirusScanner());\n      }\n      String[] startFiles = dir.listAll();\n      new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a207d19eac354d649c3f0e2cce070017c78125e":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","b470f36a9372c97283360b1304eacbde22df6c0d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","b470f36a9372c97283360b1304eacbde22df6c0d"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a207d19eac354d649c3f0e2cce070017c78125e"]},"commit2Childs":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["5a207d19eac354d649c3f0e2cce070017c78125e","b470f36a9372c97283360b1304eacbde22df6c0d","1e6acbaae7af722f17204ceccf0f7db5753eccf3","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"5a207d19eac354d649c3f0e2cce070017c78125e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13"],"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["b470f36a9372c97283360b1304eacbde22df6c0d"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}