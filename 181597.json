{"path":"lucene/backwards/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndexWithVectors().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndexWithVectors().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndexWithVectors().mjava","sourceNew":"  /**\n   * This method creates an empty index (numFields=0, numDocs=0) but is marked\n   * to have TermVectors. Adding this index to another index should not throw\n   * any exception.\n   */\n  public void testEmptyIndexWithVectors() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd1, new SimpleAnalyzer(), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.YES));\n      iw.addDocument(doc);\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.NO));\n      iw.addDocument(doc);\n      iw.close();\n\n      IndexReader ir = IndexReader.open(rd1,false);\n      ir.deleteDocument(0);\n      ir.close();\n\n      iw = new IndexWriter(rd1, new SimpleAnalyzer(), false,\n                           MaxFieldLength.UNLIMITED);\n      iw.optimize();\n      iw.close();\n    }\n\n    RAMDirectory rd2 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd2, new SimpleAnalyzer(), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      iw.addDocument(doc);\n      iw.close();\n    }\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new SimpleAnalyzer(), true,\n                                        MaxFieldLength.UNLIMITED);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\n    // When unpatched, Lucene crashes here with an ArrayIndexOutOfBoundsException (caused by TermVectorsWriter)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\n    // ParallelReader closes any IndexReader you added to it:\n    pr.close();\n\n    rd1.close();\n    rd2.close();\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    \n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n  }\n\n","sourceOld":"  /**\n   * This method creates an empty index (numFields=0, numDocs=0) but is marked\n   * to have TermVectors. Adding this index to another index should not throw\n   * any exception.\n   */\n  public void testEmptyIndexWithVectors() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd1, new SimpleAnalyzer(), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.YES));\n      iw.addDocument(doc);\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.NO));\n      iw.addDocument(doc);\n      iw.close();\n\n      IndexReader ir = IndexReader.open(rd1,false);\n      ir.deleteDocument(0);\n      ir.close();\n\n      iw = new IndexWriter(rd1, new SimpleAnalyzer(), false,\n                           MaxFieldLength.UNLIMITED);\n      iw.optimize();\n      iw.close();\n    }\n\n    RAMDirectory rd2 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd2, new SimpleAnalyzer(), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      iw.addDocument(doc);\n      iw.close();\n    }\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new SimpleAnalyzer(), true,\n                                        MaxFieldLength.UNLIMITED);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\n    // When unpatched, Lucene crashes here with an ArrayIndexOutOfBoundsException (caused by TermVectorsWriter)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\n    // ParallelReader closes any IndexReader you added to it:\n    pr.close();\n\n    rd1.close();\n    rd2.close();\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    \n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndexWithVectors().mjava","sourceNew":null,"sourceOld":"  /**\n   * This method creates an empty index (numFields=0, numDocs=0) but is marked\n   * to have TermVectors. Adding this index to another index should not throw\n   * any exception.\n   */\n  public void testEmptyIndexWithVectors() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd1, new SimpleAnalyzer(), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.YES));\n      iw.addDocument(doc);\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.NO));\n      iw.addDocument(doc);\n      iw.close();\n\n      IndexReader ir = IndexReader.open(rd1,false);\n      ir.deleteDocument(0);\n      ir.close();\n\n      iw = new IndexWriter(rd1, new SimpleAnalyzer(), false,\n                           MaxFieldLength.UNLIMITED);\n      iw.optimize();\n      iw.close();\n    }\n\n    RAMDirectory rd2 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd2, new SimpleAnalyzer(), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      iw.addDocument(doc);\n      iw.close();\n    }\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new SimpleAnalyzer(), true,\n                                        MaxFieldLength.UNLIMITED);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\n    // When unpatched, Lucene crashes here with an ArrayIndexOutOfBoundsException (caused by TermVectorsWriter)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\n    // ParallelReader closes any IndexReader you added to it:\n    pr.close();\n\n    rd1.close();\n    rd2.close();\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    \n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}