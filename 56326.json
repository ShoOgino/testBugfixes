{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyFacetSumValueSource.ScoreValueSource#getValues(Map,AtomicReaderContext).mjava","commits":[{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyFacetSumValueSource.ScoreValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetSumValueSource.ScoreValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FunctionValues getValues(@SuppressWarnings(\"rawtypes\") Map context, AtomicReaderContext readerContext) throws IOException {\n      final Scorer scorer = (Scorer) context.get(\"scorer\");\n      if (scorer == null) {\n        throw new IllegalStateException(\"scores are missing; be sure to pass keepScores=true to FacetsCollector\");\n      }\n      return new DoubleDocValues(this) {\n        @Override\n        public double doubleVal(int document) {\n          try {\n            return scorer.score();\n          } catch (IOException exception) {\n            throw new RuntimeException(exception);\n          }\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public FunctionValues getValues(@SuppressWarnings(\"rawtypes\") Map context, AtomicReaderContext readerContext) throws IOException {\n      final Scorer scorer = (Scorer) context.get(\"scorer\");\n      if (scorer == null) {\n        throw new IllegalStateException(\"scores are missing; be sure to pass keepScores=true to FacetsCollector\");\n      }\n      return new DoubleDocValues(this) {\n        @Override\n        public double doubleVal(int document) {\n          try {\n            return scorer.score();\n          } catch (IOException exception) {\n            throw new RuntimeException(exception);\n          }\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyFacetSumValueSource.ScoreValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FunctionValues getValues(@SuppressWarnings(\"rawtypes\") Map context, AtomicReaderContext readerContext) throws IOException {\n      final Scorer scorer = (Scorer) context.get(\"scorer\");\n      if (scorer == null) {\n        throw new IllegalStateException(\"scores are missing; be sure to pass keepScores=true to FacetsCollector\");\n      }\n      return new DoubleDocValues(this) {\n        @Override\n        public double doubleVal(int document) {\n          try {\n            return scorer.score();\n          } catch (IOException exception) {\n            throw new RuntimeException(exception);\n          }\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyFacetSumValueSource.ScoreValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":null,"sourceOld":"    @Override\n    public FunctionValues getValues(@SuppressWarnings(\"rawtypes\") Map context, AtomicReaderContext readerContext) throws IOException {\n      final Scorer scorer = (Scorer) context.get(\"scorer\");\n      if (scorer == null) {\n        throw new IllegalStateException(\"scores are missing; be sure to pass keepScores=true to FacetsCollector\");\n      }\n      return new DoubleDocValues(this) {\n        @Override\n        public double doubleVal(int document) {\n          try {\n            return scorer.score();\n          } catch (IOException exception) {\n            throw new RuntimeException(exception);\n          }\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4edc984f0f4ac77c37e48ace2932f780f888453c"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4edc984f0f4ac77c37e48ace2932f780f888453c","3cc728b07df73b197e6d940d27f9b08b63918f13"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}