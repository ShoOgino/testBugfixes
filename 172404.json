{"path":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesDistrib#setNullForDVEnabledField().mjava","commits":[{"id":"48924d191f1724fe63df8b6401965b79a2787c71","date":1561368051,"type":0,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesDistrib#setNullForDVEnabledField().mjava","pathOld":"/dev/null","sourceNew":"  private void setNullForDVEnabledField() throws Exception {\n    // to test set=null\n    // should this test be here? As set null would be an atomic update\n    clearIndex();\n    commit();\n\n    buildRandomIndex(0);\n    float inplace_updatable_float = 1;\n\n    // update doc, set\n    index(\"id\", 0, \"inplace_updatable_float\", map(\"set\", inplace_updatable_float));\n\n    LEADER.commit();\n    SolrDocument sdoc = LEADER.getById(\"0\");  // RTG straight from the index\n    assertEquals(inplace_updatable_float, sdoc.get(\"inplace_updatable_float\"));\n    assertEquals(\"title0\", sdoc.get(\"title_s\"));\n    long version0 = (long) sdoc.get(\"_version_\");\n\n    for (SolrClient client : NONLEADERS) {\n      SolrDocument doc = client.getById(String.valueOf(0), params(\"distrib\", \"false\"));\n      assertEquals(inplace_updatable_float, doc.get(\"inplace_updatable_float\"));\n      assertEquals(version0, doc.get(\"_version_\"));\n    }\n\n    index(\"id\", 0, \"inplace_updatable_float\", map(\"set\", null));\n    LEADER.commit();\n\n    sdoc = LEADER.getById(\"0\");  // RTG straight from the index\n    assertNull(sdoc.get(\"inplace_updatable_float\"));\n    assertEquals(\"title0\", sdoc.get(\"title_s\"));\n    long version1 = (long) sdoc.get(\"_version_\");\n\n    for (SolrClient client : NONLEADERS) {\n      SolrDocument doc = client.getById(String.valueOf(0), params(\"distrib\", \"false\"));\n      assertNull(doc.get(\"inplace_updatable_float\"));\n      assertEquals(version1, doc.get(\"_version_\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"48924d191f1724fe63df8b6401965b79a2787c71":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["48924d191f1724fe63df8b6401965b79a2787c71"]},"commit2Childs":{"48924d191f1724fe63df8b6401965b79a2787c71":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["48924d191f1724fe63df8b6401965b79a2787c71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}