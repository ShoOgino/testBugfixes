{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy#makeFilter(SpatialArgs,SimpleSpatialFieldInfo).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy#makeFilter(SpatialArgs,SimpleSpatialFieldInfo).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy#makeFilter(SpatialArgs,SimpleSpatialFieldInfo).mjava","sourceNew":"  @Override\n  public Filter makeFilter(SpatialArgs args, SimpleSpatialFieldInfo fieldInfo) {\n    final SpatialOperation op = args.getOperation();\n    if (! SpatialOperation.is(op, SpatialOperation.IsWithin, SpatialOperation.Intersects, SpatialOperation.BBoxWithin))\n      throw new UnsupportedSpatialOperation(op);\n\n    Shape qshape = args.getShape();\n\n    int detailLevel = grid.getMaxLevelForPrecision(qshape,args.getDistPrecision());\n\n    return new RecursivePrefixTreeFilter(\n        fieldInfo.getFieldName(), grid,qshape, prefixGridScanLevel, detailLevel);\n  }\n\n","sourceOld":"  @Override\n  public Filter makeFilter(SpatialArgs args, SimpleSpatialFieldInfo fieldInfo) {\n    final SpatialOperation op = args.getOperation();\n    if (! SpatialOperation.is(op, SpatialOperation.IsWithin, SpatialOperation.Intersects, SpatialOperation.BBoxWithin))\n      throw new UnsupportedSpatialOperation(op);\n\n    Shape qshape = args.getShape();\n\n    int detailLevel = grid.getMaxLevelForPrecision(qshape,args.getDistPrecision());\n\n    return new RecursivePrefixTreeFilter(\n        fieldInfo.getFieldName(), grid,qshape, prefixGridScanLevel, detailLevel);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"561469a62683fb18474394874c6010a19fb0deb7","date":1340864819,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy#makeFilter(SpatialArgs,SimpleSpatialFieldInfo).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy#makeFilter(SpatialArgs,SimpleSpatialFieldInfo).mjava","sourceNew":"  @Override\n  public Filter makeFilter(SpatialArgs args, SimpleSpatialFieldInfo fieldInfo) {\n    final SpatialOperation op = args.getOperation();\n    if (! SpatialOperation.is(op, SpatialOperation.IsWithin, SpatialOperation.Intersects, SpatialOperation.BBoxWithin, SpatialOperation.BBoxIntersects))\n      throw new UnsupportedSpatialOperation(op);\n\n    Shape shape = args.getShape();\n\n    int detailLevel = grid.getMaxLevelForPrecision(shape,args.getDistPrecision());\n\n    return new RecursivePrefixTreeFilter(\n        fieldInfo.getFieldName(), grid,shape, prefixGridScanLevel, detailLevel);\n  }\n\n","sourceOld":"  @Override\n  public Filter makeFilter(SpatialArgs args, SimpleSpatialFieldInfo fieldInfo) {\n    final SpatialOperation op = args.getOperation();\n    if (! SpatialOperation.is(op, SpatialOperation.IsWithin, SpatialOperation.Intersects, SpatialOperation.BBoxWithin))\n      throw new UnsupportedSpatialOperation(op);\n\n    Shape qshape = args.getShape();\n\n    int detailLevel = grid.getMaxLevelForPrecision(qshape,args.getDistPrecision());\n\n    return new RecursivePrefixTreeFilter(\n        fieldInfo.getFieldName(), grid,qshape, prefixGridScanLevel, detailLevel);\n  }\n\n","bugFix":null,"bugIntro":["6e2410e27320f6aaba450cbf500d7822baf642f8","46e67dde361bddc1a35dc332c2a1e553d7a8ebd7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0415a016b37e58a017fed0a91234f733ab359971","date":1341458183,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy#makeFilter(SpatialArgs).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy#makeFilter(SpatialArgs,SimpleSpatialFieldInfo).mjava","sourceNew":"  @Override\n  public Filter makeFilter(SpatialArgs args) {\n    final SpatialOperation op = args.getOperation();\n    if (! SpatialOperation.is(op, SpatialOperation.IsWithin, SpatialOperation.Intersects, SpatialOperation.BBoxWithin, SpatialOperation.BBoxIntersects))\n      throw new UnsupportedSpatialOperation(op);\n\n    Shape shape = args.getShape();\n\n    int detailLevel = grid.getMaxLevelForPrecision(shape,args.getDistPrecision());\n\n    return new RecursivePrefixTreeFilter(\n        getFieldName(), grid,shape, prefixGridScanLevel, detailLevel);\n  }\n\n","sourceOld":"  @Override\n  public Filter makeFilter(SpatialArgs args, SimpleSpatialFieldInfo fieldInfo) {\n    final SpatialOperation op = args.getOperation();\n    if (! SpatialOperation.is(op, SpatialOperation.IsWithin, SpatialOperation.Intersects, SpatialOperation.BBoxWithin, SpatialOperation.BBoxIntersects))\n      throw new UnsupportedSpatialOperation(op);\n\n    Shape shape = args.getShape();\n\n    int detailLevel = grid.getMaxLevelForPrecision(shape,args.getDistPrecision());\n\n    return new RecursivePrefixTreeFilter(\n        fieldInfo.getFieldName(), grid,shape, prefixGridScanLevel, detailLevel);\n  }\n\n","bugFix":null,"bugIntro":["46e67dde361bddc1a35dc332c2a1e553d7a8ebd7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy#makeFilter(SpatialArgs,SimpleSpatialFieldInfo).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Filter makeFilter(SpatialArgs args, SimpleSpatialFieldInfo fieldInfo) {\n    final SpatialOperation op = args.getOperation();\n    if (! SpatialOperation.is(op, SpatialOperation.IsWithin, SpatialOperation.Intersects, SpatialOperation.BBoxWithin))\n      throw new UnsupportedSpatialOperation(op);\n\n    Shape qshape = args.getShape();\n\n    int detailLevel = grid.getMaxLevelForPrecision(qshape,args.getDistPrecision());\n\n    return new RecursivePrefixTreeFilter(\n        fieldInfo.getFieldName(), grid,qshape, prefixGridScanLevel, detailLevel);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0415a016b37e58a017fed0a91234f733ab359971":["561469a62683fb18474394874c6010a19fb0deb7"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","0415a016b37e58a017fed0a91234f733ab359971"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"561469a62683fb18474394874c6010a19fb0deb7":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0415a016b37e58a017fed0a91234f733ab359971"]},"commit2Childs":{"0415a016b37e58a017fed0a91234f733ab359971":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","561469a62683fb18474394874c6010a19fb0deb7"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"561469a62683fb18474394874c6010a19fb0deb7":["0415a016b37e58a017fed0a91234f733ab359971"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}