{"path":"lucene/src/java/org/apache/lucene/index/TermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","pathOld":"/dev/null","sourceNew":"  /** Get {@link DocsAndPositionsEnum} for the current term.\n   *  Do not call this before calling {@link #next} or\n   *  {@link #seek} for the first time.  This method will\n   *  only return null if positions were not indexed into\n   *  the postings by this codec. */\n  public abstract DocsAndPositionsEnum docsAndPositions(Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9cc9d77712aba3662f24632df7539ab75e3667","date":1309095238,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","sourceNew":"  /** Get {@link DocsAndPositionsEnum} for the current term.\n   *  Do not call this when the enum is unpositioned.\n   *  This method will only return null if positions were\n   *  not indexed into the postings by this codec. */\n  public abstract DocsAndPositionsEnum docsAndPositions(Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException;\n\n","sourceOld":"  /** Get {@link DocsAndPositionsEnum} for the current term.\n   *  Do not call this before calling {@link #next} or\n   *  {@link #seek} for the first time.  This method will\n   *  only return null if positions were not indexed into\n   *  the postings by this codec. */\n  public abstract DocsAndPositionsEnum docsAndPositions(Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","sourceNew":"  /** Get {@link DocsAndPositionsEnum} for the current term.\n   *  Do not call this when the enum is unpositioned.\n   *  This method will only return null if positions were\n   *  not indexed into the postings by this codec. */\n  public abstract DocsAndPositionsEnum docsAndPositions(Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException;\n\n","sourceOld":"  /** Get {@link DocsAndPositionsEnum} for the current term.\n   *  Do not call this before calling {@link #next} or\n   *  {@link #seek} for the first time.  This method will\n   *  only return null if positions were not indexed into\n   *  the postings by this codec. */\n  public abstract DocsAndPositionsEnum docsAndPositions(Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","sourceNew":"  /** Get {@link DocsAndPositionsEnum} for the current term.\n   *  Do not call this when the enum is unpositioned.\n   *  This method will only return null if positions were\n   *  not indexed into the postings by this codec. */\n  public abstract DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException;\n\n","sourceOld":"  /** Get {@link DocsAndPositionsEnum} for the current term.\n   *  Do not call this when the enum is unpositioned.\n   *  This method will only return null if positions were\n   *  not indexed into the postings by this codec. */\n  public abstract DocsAndPositionsEnum docsAndPositions(Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","sourceNew":"  /** Get {@link DocsAndPositionsEnum} for the current term.\n   *  Do not call this when the enum is unpositioned.\n   *  This method will only return null if positions were\n   *  not indexed into the postings by this codec. */\n  public abstract DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException;\n\n","sourceOld":"  /** Get {@link DocsAndPositionsEnum} for the current term.\n   *  Do not call this when the enum is unpositioned.\n   *  This method will only return null if positions were\n   *  not indexed into the postings by this codec. */\n  public abstract DocsAndPositionsEnum docsAndPositions(Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","sourceNew":"  /** Get {@link DocsAndPositionsEnum} for the current term.\n   *  Do not call this when the enum is unpositioned.\n   *  This method will only return null if positions were\n   *  not indexed into the postings by this codec. */\n  public abstract DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException;\n\n","sourceOld":"  /** Get {@link DocsAndPositionsEnum} for the current term.\n   *  Do not call this before calling {@link #next} or\n   *  {@link #seek} for the first time.  This method will\n   *  only return null if positions were not indexed into\n   *  the postings by this codec. */\n  public abstract DocsAndPositionsEnum docsAndPositions(Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb5d524be0e99820a6ae64caad73c342305a8ac5","date":1319134932,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","sourceNew":"  /** Get {@link DocsAndPositionsEnum} for the current term.\n   *  Do not call this when the enum is unpositioned.\n   *  This method will only return null if positions were\n   *  not indexed into the postings by this codec.\n   *  @param liveDocs unset bits are documents that should not\n   *  be returned\n   *  @param reuse pass a prior DocsAndPositionsEnum for possible reuse */\n  public abstract DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException;\n\n","sourceOld":"  /** Get {@link DocsAndPositionsEnum} for the current term.\n   *  Do not call this when the enum is unpositioned.\n   *  This method will only return null if positions were\n   *  not indexed into the postings by this codec. */\n  public abstract DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31f025ae60076ae95274433f3fe8e6ace2857a87","date":1326669465,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","sourceNew":"  /** Get {@link DocsAndPositionsEnum} for the current term.\n   *  Do not call this when the enum is unpositioned.\n   *  This method will only return null if needsOffsets is\n   *  true but offsets were not indexed.\n   *  @param liveDocs unset bits are documents that should not\n   *  be returned\n   *  @param reuse pass a prior DocsAndPositionsEnum for possible reuse\n   *  @param needsOffsets true if offsets are required */\n  public abstract DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, boolean needsOffsets) throws IOException;\n\n","sourceOld":"  /** Get {@link DocsAndPositionsEnum} for the current term.\n   *  Do not call this when the enum is unpositioned.\n   *  This method will only return null if positions were\n   *  not indexed into the postings by this codec.\n   *  @param liveDocs unset bits are documents that should not\n   *  be returned\n   *  @param reuse pass a prior DocsAndPositionsEnum for possible reuse */\n  public abstract DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cb5d524be0e99820a6ae64caad73c342305a8ac5":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["fd9cc9d77712aba3662f24632df7539ab75e3667"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2553b00f699380c64959ccb27991289aae87be2e":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","fd9cc9d77712aba3662f24632df7539ab75e3667"],"fd9cc9d77712aba3662f24632df7539ab75e3667":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["2553b00f699380c64959ccb27991289aae87be2e","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["cb5d524be0e99820a6ae64caad73c342305a8ac5"]},"commit2Childs":{"cb5d524be0e99820a6ae64caad73c342305a8ac5":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["cb5d524be0e99820a6ae64caad73c342305a8ac5","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["2553b00f699380c64959ccb27991289aae87be2e","fd9cc9d77712aba3662f24632df7539ab75e3667","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"2553b00f699380c64959ccb27991289aae87be2e":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"fd9cc9d77712aba3662f24632df7539ab75e3667":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","2553b00f699380c64959ccb27991289aae87be2e"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"31f025ae60076ae95274433f3fe8e6ace2857a87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}