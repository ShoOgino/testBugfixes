{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser#testInvalidPositionsInput().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser#testInvalidPositionsInput().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser#testInvalidPositionsInput().mjava","sourceNew":"  /** parse a syn file with bad syntax */\n  @Test(expected=ParseException.class)\n  public void testInvalidPositionsInput() throws Exception {\n    String testFile = \"testola => the test\";\n    SolrSynonymParser parser = new SolrSynonymParser(true, true, new EnglishAnalyzer(TEST_VERSION_CURRENT));\n    parser.add(new StringReader(testFile));\n  }\n\n","sourceOld":"  /** parse a syn file with bad syntax */\n  @Test(expected=ParseException.class)\n  public void testInvalidPositionsInput() throws Exception {\n    String testFile = \"testola => the test\";\n    SolrSynonymParser parser = new SolrSynonymParser(true, true, new EnglishAnalyzer(TEST_VERSION_CURRENT));\n    parser.add(new StringReader(testFile));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85f3a2d749715373feb8529516e92d3538103525","date":1379624134,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser#testInvalidPositionsInput().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser#testInvalidPositionsInput().mjava","sourceNew":"  /** parse a syn file with bad syntax */\n  @Test(expected=ParseException.class)\n  public void testInvalidPositionsInput() throws Exception {\n    String testFile = \"testola => the test\";\n    SolrSynonymParser parser = new SolrSynonymParser(true, true, new EnglishAnalyzer(TEST_VERSION_CURRENT));\n    parser.parse(new StringReader(testFile));\n  }\n\n","sourceOld":"  /** parse a syn file with bad syntax */\n  @Test(expected=ParseException.class)\n  public void testInvalidPositionsInput() throws Exception {\n    String testFile = \"testola => the test\";\n    SolrSynonymParser parser = new SolrSynonymParser(true, true, new EnglishAnalyzer(TEST_VERSION_CURRENT));\n    parser.add(new StringReader(testFile));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser#testInvalidPositionsInput().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser#testInvalidPositionsInput().mjava","sourceNew":"  /** parse a syn file with bad syntax */\n  @Test(expected=ParseException.class)\n  public void testInvalidPositionsInput() throws Exception {\n    String testFile = \"testola => the test\";\n    SolrSynonymParser parser = new SolrSynonymParser(true, true, new EnglishAnalyzer());\n    parser.parse(new StringReader(testFile));\n  }\n\n","sourceOld":"  /** parse a syn file with bad syntax */\n  @Test(expected=ParseException.class)\n  public void testInvalidPositionsInput() throws Exception {\n    String testFile = \"testola => the test\";\n    SolrSynonymParser parser = new SolrSynonymParser(true, true, new EnglishAnalyzer(TEST_VERSION_CURRENT));\n    parser.parse(new StringReader(testFile));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser#testInvalidPositionsInput().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser#testInvalidPositionsInput().mjava","sourceNew":"  /** parse a syn file with bad syntax */\n  @Test(expected=ParseException.class)\n  public void testInvalidPositionsInput() throws Exception {\n    String testFile = \"testola => the test\";\n    SolrSynonymParser parser = new SolrSynonymParser(true, true, new EnglishAnalyzer(TEST_VERSION_CURRENT));\n    parser.parse(new StringReader(testFile));\n  }\n\n","sourceOld":"  /** parse a syn file with bad syntax */\n  @Test(expected=ParseException.class)\n  public void testInvalidPositionsInput() throws Exception {\n    String testFile = \"testola => the test\";\n    SolrSynonymParser parser = new SolrSynonymParser(true, true, new EnglishAnalyzer());\n    parser.parse(new StringReader(testFile));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser#testInvalidPositionsInput().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser#testInvalidPositionsInput().mjava","sourceNew":"  /** parse a syn file with bad syntax */\n  @Test(expected=ParseException.class)\n  public void testInvalidPositionsInput() throws Exception {\n    String testFile = \"testola => the test\";\n    SolrSynonymParser parser = new SolrSynonymParser(true, true, new EnglishAnalyzer());\n    parser.parse(new StringReader(testFile));\n  }\n\n","sourceOld":"  /** parse a syn file with bad syntax */\n  @Test(expected=ParseException.class)\n  public void testInvalidPositionsInput() throws Exception {\n    String testFile = \"testola => the test\";\n    SolrSynonymParser parser = new SolrSynonymParser(true, true, new EnglishAnalyzer(TEST_VERSION_CURRENT));\n    parser.parse(new StringReader(testFile));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser#testInvalidPositionsInput().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser#testInvalidPositionsInput().mjava","sourceNew":"  /** parse a syn file with bad syntax */\n  public void testInvalidPositionsInput() throws Exception {\n    String testFile = \"testola => the test\";\n    Analyzer analyzer = new EnglishAnalyzer();\n    SolrSynonymParser parser = new SolrSynonymParser(true, true, analyzer);\n    try {\n      parser.parse(new StringReader(testFile));\n      fail(\"didn't get expected exception\");\n    } catch (ParseException expected) {\n      // expected exc\n    }\n    analyzer.close();\n  }\n\n","sourceOld":"  /** parse a syn file with bad syntax */\n  @Test(expected=ParseException.class)\n  public void testInvalidPositionsInput() throws Exception {\n    String testFile = \"testola => the test\";\n    SolrSynonymParser parser = new SolrSynonymParser(true, true, new EnglishAnalyzer());\n    parser.parse(new StringReader(testFile));\n  }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser#testInvalidPositionsInput().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser#testInvalidPositionsInput().mjava","sourceNew":"  /** parse a syn file with bad syntax */\n  public void testInvalidPositionsInput() throws Exception {\n    String testFile = \"testola => the test\";\n    Analyzer analyzer = new EnglishAnalyzer();\n    SolrSynonymParser parser = new SolrSynonymParser(true, true, analyzer);\n    try {\n      parser.parse(new StringReader(testFile));\n      fail(\"didn't get expected exception\");\n    } catch (ParseException expected) {\n      // expected exc\n    }\n    analyzer.close();\n  }\n\n","sourceOld":"  /** parse a syn file with bad syntax */\n  @Test(expected=ParseException.class)\n  public void testInvalidPositionsInput() throws Exception {\n    String testFile = \"testola => the test\";\n    SolrSynonymParser parser = new SolrSynonymParser(true, true, new EnglishAnalyzer());\n    parser.parse(new StringReader(testFile));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser#testInvalidPositionsInput().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser#testInvalidPositionsInput().mjava","sourceNew":"  /** parse a syn file with bad syntax */\n  public void testInvalidPositionsInput() throws Exception {\n    String testFile = \"testola => the test\";\n    Analyzer analyzer = new EnglishAnalyzer();\n    SolrSynonymParser parser = new SolrSynonymParser(true, true, analyzer);\n    expectThrows(ParseException.class, () -> {\n      parser.parse(new StringReader(testFile));\n    });\n    analyzer.close();\n  }\n\n","sourceOld":"  /** parse a syn file with bad syntax */\n  public void testInvalidPositionsInput() throws Exception {\n    String testFile = \"testola => the test\";\n    Analyzer analyzer = new EnglishAnalyzer();\n    SolrSynonymParser parser = new SolrSynonymParser(true, true, analyzer);\n    try {\n      parser.parse(new StringReader(testFile));\n      fail(\"didn't get expected exception\");\n    } catch (ParseException expected) {\n      // expected exc\n    }\n    analyzer.close();\n  }\n\n","bugFix":["a56958d7f71a28824f20031ffbb2e13502a0274e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["85f3a2d749715373feb8529516e92d3538103525"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["379db3ad24c4f0214f30a122265a6d6be003a99d","a56958d7f71a28824f20031ffbb2e13502a0274e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["a56958d7f71a28824f20031ffbb2e13502a0274e"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"85f3a2d749715373feb8529516e92d3538103525":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["85f3a2d749715373feb8529516e92d3538103525"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","05fe562aa248790944d43cdd478f512572835ba0"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"85f3a2d749715373feb8529516e92d3538103525":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}