{"path":"lucene/backwards/src/java/org/apache/lucene/index/DocFieldProcessorPerThread#trimFields(SegmentWriteState).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/DocFieldProcessorPerThread#trimFields(SegmentWriteState).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/DocFieldProcessorPerThread#trimFields(SegmentWriteState).mjava","sourceNew":"  /** If there are fields we've seen but did not see again\n   *  in the last run, then free them up. */\n\n  void trimFields(SegmentWriteState state) {\n\n    for(int i=0;i<fieldHash.length;i++) {\n      DocFieldProcessorPerField perField = fieldHash[i];\n      DocFieldProcessorPerField lastPerField = null;\n\n      while (perField != null) {\n\n        if (perField.lastGen == -1) {\n\n          // This field was not seen since the previous\n          // flush, so, free up its resources now\n\n          // Unhash\n          if (lastPerField == null)\n            fieldHash[i] = perField.next;\n          else\n            lastPerField.next = perField.next;\n\n          if (state.docWriter.infoStream != null)\n            state.docWriter.infoStream.println(\"  purge field=\" + perField.fieldInfo.name);\n\n          totalFieldCount--;\n\n        } else {\n          // Reset\n          perField.lastGen = -1;\n          lastPerField = perField;\n        }\n\n        perField = perField.next;\n      }\n    }\n  }\n\n","sourceOld":"  /** If there are fields we've seen but did not see again\n   *  in the last run, then free them up. */\n\n  void trimFields(SegmentWriteState state) {\n\n    for(int i=0;i<fieldHash.length;i++) {\n      DocFieldProcessorPerField perField = fieldHash[i];\n      DocFieldProcessorPerField lastPerField = null;\n\n      while (perField != null) {\n\n        if (perField.lastGen == -1) {\n\n          // This field was not seen since the previous\n          // flush, so, free up its resources now\n\n          // Unhash\n          if (lastPerField == null)\n            fieldHash[i] = perField.next;\n          else\n            lastPerField.next = perField.next;\n\n          if (state.docWriter.infoStream != null)\n            state.docWriter.infoStream.println(\"  purge field=\" + perField.fieldInfo.name);\n\n          totalFieldCount--;\n\n        } else {\n          // Reset\n          perField.lastGen = -1;\n          lastPerField = perField;\n        }\n\n        perField = perField.next;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/index/DocFieldProcessorPerThread#trimFields(SegmentWriteState).mjava","sourceNew":null,"sourceOld":"  /** If there are fields we've seen but did not see again\n   *  in the last run, then free them up. */\n\n  void trimFields(SegmentWriteState state) {\n\n    for(int i=0;i<fieldHash.length;i++) {\n      DocFieldProcessorPerField perField = fieldHash[i];\n      DocFieldProcessorPerField lastPerField = null;\n\n      while (perField != null) {\n\n        if (perField.lastGen == -1) {\n\n          // This field was not seen since the previous\n          // flush, so, free up its resources now\n\n          // Unhash\n          if (lastPerField == null)\n            fieldHash[i] = perField.next;\n          else\n            lastPerField.next = perField.next;\n\n          if (state.docWriter.infoStream != null)\n            state.docWriter.infoStream.println(\"  purge field=\" + perField.fieldInfo.name);\n\n          totalFieldCount--;\n\n        } else {\n          // Reset\n          perField.lastGen = -1;\n          lastPerField = perField;\n        }\n\n        perField = perField.next;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}