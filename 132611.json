{"path":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testCase().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testCase().mjava","pathOld":"modules/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testCase().mjava","sourceNew":"  /** Test stemming of mixed-case tokens. */\n  public final void testCase() throws IOException {\n    Analyzer a = getTestAnalyzer();\n\n    assertAnalyzesToReuse(a, \"AGD\",      new String[] { \"artykuły gospodarstwa domowego\" });\n    assertAnalyzesToReuse(a, \"agd\",      new String[] { \"artykuły gospodarstwa domowego\" });\n\n    assertAnalyzesToReuse(a, \"Poznania\", new String[] { \"Poznań\" });\n    assertAnalyzesToReuse(a, \"poznania\", new String[] { \"poznać\" });\n\n    assertAnalyzesToReuse(a, \"Aarona\",   new String[] { \"Aaron\" });\n    assertAnalyzesToReuse(a, \"aarona\",   new String[] { \"aarona\" });\n\n    assertAnalyzesToReuse(a, \"Liście\",   new String[] { \"liść\", \"list\", \"lista\" });\n  }\n\n","sourceOld":"  /** Test stemming of mixed-case tokens. */\n  public final void testCase() throws IOException {\n    Analyzer a = getTestAnalyzer();\n\n    assertAnalyzesToReuse(a, \"AGD\",      new String[] { \"artykuły gospodarstwa domowego\" });\n    assertAnalyzesToReuse(a, \"agd\",      new String[] { \"artykuły gospodarstwa domowego\" });\n\n    assertAnalyzesToReuse(a, \"Poznania\", new String[] { \"Poznań\" });\n    assertAnalyzesToReuse(a, \"poznania\", new String[] { \"poznać\" });\n\n    assertAnalyzesToReuse(a, \"Aarona\",   new String[] { \"Aaron\" });\n    assertAnalyzesToReuse(a, \"aarona\",   new String[] { \"aarona\" });\n\n    assertAnalyzesToReuse(a, \"Liście\",   new String[] { \"liść\", \"list\", \"lista\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84ab9fb766b354a9a9f16580a1162aac7ebbfc51","date":1340868936,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testCase().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testCase().mjava","sourceNew":"  /** Test stemming of mixed-case tokens. */\n  public final void testCase() throws IOException {\n    Analyzer a = getTestAnalyzer();\n\n    assertAnalyzesToReuse(a, \"AGD\",      new String[] { \"AGD\", \"artykuły gospodarstwa domowego\" });\n    assertAnalyzesToReuse(a, \"agd\",      new String[] { \"artykuły gospodarstwa domowego\" });\n\n    assertAnalyzesToReuse(a, \"Poznania\", new String[] { \"Poznań\" });\n    assertAnalyzesToReuse(a, \"poznania\", new String[] { \"poznanie\", \"poznać\" });\n\n    assertAnalyzesToReuse(a, \"Aarona\",   new String[] { \"Aaron\" });\n    assertAnalyzesToReuse(a, \"aarona\",   new String[] { \"aarona\" });\n\n    assertAnalyzesToReuse(a, \"Liście\",   new String[] { \"liście\", \"liść\", \"list\", \"lista\" });\n  }\n\n","sourceOld":"  /** Test stemming of mixed-case tokens. */\n  public final void testCase() throws IOException {\n    Analyzer a = getTestAnalyzer();\n\n    assertAnalyzesToReuse(a, \"AGD\",      new String[] { \"artykuły gospodarstwa domowego\" });\n    assertAnalyzesToReuse(a, \"agd\",      new String[] { \"artykuły gospodarstwa domowego\" });\n\n    assertAnalyzesToReuse(a, \"Poznania\", new String[] { \"Poznań\" });\n    assertAnalyzesToReuse(a, \"poznania\", new String[] { \"poznać\" });\n\n    assertAnalyzesToReuse(a, \"Aarona\",   new String[] { \"Aaron\" });\n    assertAnalyzesToReuse(a, \"aarona\",   new String[] { \"aarona\" });\n\n    assertAnalyzesToReuse(a, \"Liście\",   new String[] { \"liść\", \"list\", \"lista\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testCase().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testCase().mjava","sourceNew":"  /** Test stemming of mixed-case tokens. */\n  public final void testCase() throws IOException {\n    Analyzer a = getTestAnalyzer();\n\n    assertAnalyzesToReuse(a, \"AGD\",      new String[] { \"AGD\", \"artykuły gospodarstwa domowego\" });\n    assertAnalyzesToReuse(a, \"agd\",      new String[] { \"artykuły gospodarstwa domowego\" });\n\n    assertAnalyzesToReuse(a, \"Poznania\", new String[] { \"Poznań\" });\n    assertAnalyzesToReuse(a, \"poznania\", new String[] { \"poznanie\", \"poznać\" });\n\n    assertAnalyzesToReuse(a, \"Aarona\",   new String[] { \"Aaron\" });\n    assertAnalyzesToReuse(a, \"aarona\",   new String[] { \"aarona\" });\n\n    assertAnalyzesToReuse(a, \"Liście\",   new String[] { \"liście\", \"liść\", \"list\", \"lista\" });\n  }\n\n","sourceOld":"  /** Test stemming of mixed-case tokens. */\n  public final void testCase() throws IOException {\n    Analyzer a = getTestAnalyzer();\n\n    assertAnalyzesToReuse(a, \"AGD\",      new String[] { \"artykuły gospodarstwa domowego\" });\n    assertAnalyzesToReuse(a, \"agd\",      new String[] { \"artykuły gospodarstwa domowego\" });\n\n    assertAnalyzesToReuse(a, \"Poznania\", new String[] { \"Poznań\" });\n    assertAnalyzesToReuse(a, \"poznania\", new String[] { \"poznać\" });\n\n    assertAnalyzesToReuse(a, \"Aarona\",   new String[] { \"Aaron\" });\n    assertAnalyzesToReuse(a, \"aarona\",   new String[] { \"aarona\" });\n\n    assertAnalyzesToReuse(a, \"Liście\",   new String[] { \"liść\", \"list\", \"lista\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df1b735b811bfe6055a98336ee8dfd1e43cf2dc0","date":1379858263,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testCase().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testCase().mjava","sourceNew":"  /** Test stemming of mixed-case tokens. */\n  public final void testCase() throws IOException {\n    Analyzer a = getTestAnalyzer();\n\n    assertAnalyzesTo(a, \"AGD\",      new String[] { \"AGD\", \"artykuły gospodarstwa domowego\" });\n    assertAnalyzesTo(a, \"agd\",      new String[] { \"artykuły gospodarstwa domowego\" });\n\n    assertAnalyzesTo(a, \"Poznania\", new String[] { \"Poznań\" });\n    assertAnalyzesTo(a, \"poznania\", new String[] { \"poznanie\", \"poznać\" });\n\n    assertAnalyzesTo(a, \"Aarona\",   new String[] { \"Aaron\" });\n    assertAnalyzesTo(a, \"aarona\",   new String[] { \"aarona\" });\n\n    assertAnalyzesTo(a, \"Liście\",   new String[] { \"liście\", \"liść\", \"list\", \"lista\" });\n  }\n\n","sourceOld":"  /** Test stemming of mixed-case tokens. */\n  public final void testCase() throws IOException {\n    Analyzer a = getTestAnalyzer();\n\n    assertAnalyzesToReuse(a, \"AGD\",      new String[] { \"AGD\", \"artykuły gospodarstwa domowego\" });\n    assertAnalyzesToReuse(a, \"agd\",      new String[] { \"artykuły gospodarstwa domowego\" });\n\n    assertAnalyzesToReuse(a, \"Poznania\", new String[] { \"Poznań\" });\n    assertAnalyzesToReuse(a, \"poznania\", new String[] { \"poznanie\", \"poznać\" });\n\n    assertAnalyzesToReuse(a, \"Aarona\",   new String[] { \"Aaron\" });\n    assertAnalyzesToReuse(a, \"aarona\",   new String[] { \"aarona\" });\n\n    assertAnalyzesToReuse(a, \"Liście\",   new String[] { \"liście\", \"liść\", \"list\", \"lista\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testCase().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testCase().mjava","sourceNew":"  /** Test stemming of mixed-case tokens. */\n  public final void testCase() throws IOException {\n    Analyzer a = getTestAnalyzer();\n\n    assertAnalyzesTo(a, \"AGD\",      new String[] { \"AGD\", \"artykuły gospodarstwa domowego\" });\n    assertAnalyzesTo(a, \"agd\",      new String[] { \"artykuły gospodarstwa domowego\" });\n\n    assertAnalyzesTo(a, \"Poznania\", new String[] { \"Poznań\" });\n    assertAnalyzesTo(a, \"poznania\", new String[] { \"poznanie\", \"poznać\" });\n\n    assertAnalyzesTo(a, \"Aarona\",   new String[] { \"Aaron\" });\n    assertAnalyzesTo(a, \"aarona\",   new String[] { \"aarona\" });\n\n    assertAnalyzesTo(a, \"Liście\",   new String[] { \"liście\", \"liść\", \"list\", \"lista\" });\n    a.close();\n  }\n\n","sourceOld":"  /** Test stemming of mixed-case tokens. */\n  public final void testCase() throws IOException {\n    Analyzer a = getTestAnalyzer();\n\n    assertAnalyzesTo(a, \"AGD\",      new String[] { \"AGD\", \"artykuły gospodarstwa domowego\" });\n    assertAnalyzesTo(a, \"agd\",      new String[] { \"artykuły gospodarstwa domowego\" });\n\n    assertAnalyzesTo(a, \"Poznania\", new String[] { \"Poznań\" });\n    assertAnalyzesTo(a, \"poznania\", new String[] { \"poznanie\", \"poznać\" });\n\n    assertAnalyzesTo(a, \"Aarona\",   new String[] { \"Aaron\" });\n    assertAnalyzesTo(a, \"aarona\",   new String[] { \"aarona\" });\n\n    assertAnalyzesTo(a, \"Liście\",   new String[] { \"liście\", \"liść\", \"list\", \"lista\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testCase().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testCase().mjava","sourceNew":"  /** Test stemming of mixed-case tokens. */\n  public final void testCase() throws IOException {\n    Analyzer a = getTestAnalyzer();\n\n    assertAnalyzesTo(a, \"AGD\",      new String[] { \"AGD\", \"artykuły gospodarstwa domowego\" });\n    assertAnalyzesTo(a, \"agd\",      new String[] { \"artykuły gospodarstwa domowego\" });\n\n    assertAnalyzesTo(a, \"Poznania\", new String[] { \"Poznań\" });\n    assertAnalyzesTo(a, \"poznania\", new String[] { \"poznanie\", \"poznać\" });\n\n    assertAnalyzesTo(a, \"Aarona\",   new String[] { \"Aaron\" });\n    assertAnalyzesTo(a, \"aarona\",   new String[] { \"aarona\" });\n\n    assertAnalyzesTo(a, \"Liście\",   new String[] { \"liście\", \"liść\", \"list\", \"lista\" });\n    a.close();\n  }\n\n","sourceOld":"  /** Test stemming of mixed-case tokens. */\n  public final void testCase() throws IOException {\n    Analyzer a = getTestAnalyzer();\n\n    assertAnalyzesTo(a, \"AGD\",      new String[] { \"AGD\", \"artykuły gospodarstwa domowego\" });\n    assertAnalyzesTo(a, \"agd\",      new String[] { \"artykuły gospodarstwa domowego\" });\n\n    assertAnalyzesTo(a, \"Poznania\", new String[] { \"Poznań\" });\n    assertAnalyzesTo(a, \"poznania\", new String[] { \"poznanie\", \"poznać\" });\n\n    assertAnalyzesTo(a, \"Aarona\",   new String[] { \"Aaron\" });\n    assertAnalyzesTo(a, \"aarona\",   new String[] { \"aarona\" });\n\n    assertAnalyzesTo(a, \"Liście\",   new String[] { \"liście\", \"liść\", \"list\", \"lista\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df1b735b811bfe6055a98336ee8dfd1e43cf2dc0":["84ab9fb766b354a9a9f16580a1162aac7ebbfc51"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["df1b735b811bfe6055a98336ee8dfd1e43cf2dc0","a56958d7f71a28824f20031ffbb2e13502a0274e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","84ab9fb766b354a9a9f16580a1162aac7ebbfc51"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"84ab9fb766b354a9a9f16580a1162aac7ebbfc51":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["df1b735b811bfe6055a98336ee8dfd1e43cf2dc0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56958d7f71a28824f20031ffbb2e13502a0274e"]},"commit2Childs":{"df1b735b811bfe6055a98336ee8dfd1e43cf2dc0":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","84ab9fb766b354a9a9f16580a1162aac7ebbfc51"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"84ab9fb766b354a9a9f16580a1162aac7ebbfc51":["df1b735b811bfe6055a98336ee8dfd1e43cf2dc0","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}