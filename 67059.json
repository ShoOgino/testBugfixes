{"path":"src/test/org/apache/lucene/index/TestIndexWriterConfig#testToString().mjava","commits":[{"id":"103e2ec175f1aa5629df5bcd34eb1c53055caeb1","date":1268243753,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterConfig#testToString().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testToString() throws Exception {\n    String str = new IndexWriterConfig(TEST_VERSION_CURRENT).toString();\n    for (Field f : IndexWriterConfig.class.getDeclaredFields()) {\n      int modifiers = f.getModifiers();\n      if (Modifier.isStatic(modifiers) && Modifier.isFinal(modifiers)) {\n        // Skip static final fields, they are only constants\n        continue;\n      } else if (\"indexingChain\".equals(f.getName())) {\n        // indexingChain is a package-private setting and thus is not output by\n        // toString.\n        continue;\n      }\n      assertTrue(f.getName() + \" not found in toString\", str.indexOf(f.getName()) != -1);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterConfig#testToString().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testToString() throws Exception {\n    String str = new IndexWriterConfig(TEST_VERSION_CURRENT).toString();\n    for (Field f : IndexWriterConfig.class.getDeclaredFields()) {\n      int modifiers = f.getModifiers();\n      if (Modifier.isStatic(modifiers) && Modifier.isFinal(modifiers)) {\n        // Skip static final fields, they are only constants\n        continue;\n      } else if (\"indexingChain\".equals(f.getName())) {\n        // indexingChain is a package-private setting and thus is not output by\n        // toString.\n        continue;\n      }\n      assertTrue(f.getName() + \" not found in toString\", str.indexOf(f.getName()) != -1);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterConfig#testToString().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testToString() throws Exception {\n    String str = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).toString();\n    for (Field f : IndexWriterConfig.class.getDeclaredFields()) {\n      int modifiers = f.getModifiers();\n      if (Modifier.isStatic(modifiers) && Modifier.isFinal(modifiers)) {\n        // Skip static final fields, they are only constants\n        continue;\n      } else if (\"indexingChain\".equals(f.getName())) {\n        // indexingChain is a package-private setting and thus is not output by\n        // toString.\n        continue;\n      }\n      assertTrue(f.getName() + \" not found in toString\", str.indexOf(f.getName()) != -1);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testToString().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterConfig#testToString().mjava","sourceNew":"  @Test\n  public void testToString() throws Exception {\n    String str = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).toString();\n    for (Field f : IndexWriterConfig.class.getDeclaredFields()) {\n      int modifiers = f.getModifiers();\n      if (Modifier.isStatic(modifiers) && Modifier.isFinal(modifiers)) {\n        // Skip static final fields, they are only constants\n        continue;\n      } else if (\"indexingChain\".equals(f.getName())) {\n        // indexingChain is a package-private setting and thus is not output by\n        // toString.\n        continue;\n      }\n      assertTrue(f.getName() + \" not found in toString\", str.indexOf(f.getName()) != -1);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testToString() throws Exception {\n    String str = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).toString();\n    for (Field f : IndexWriterConfig.class.getDeclaredFields()) {\n      int modifiers = f.getModifiers();\n      if (Modifier.isStatic(modifiers) && Modifier.isFinal(modifiers)) {\n        // Skip static final fields, they are only constants\n        continue;\n      } else if (\"indexingChain\".equals(f.getName())) {\n        // indexingChain is a package-private setting and thus is not output by\n        // toString.\n        continue;\n      }\n      assertTrue(f.getName() + \" not found in toString\", str.indexOf(f.getName()) != -1);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"103e2ec175f1aa5629df5bcd34eb1c53055caeb1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e52fea2c4081a1e552b98506691990be59503168":["103e2ec175f1aa5629df5bcd34eb1c53055caeb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"103e2ec175f1aa5629df5bcd34eb1c53055caeb1":["e52fea2c4081a1e552b98506691990be59503168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["103e2ec175f1aa5629df5bcd34eb1c53055caeb1"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}