{"path":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#getRespMap(String,RestTestHarness).mjava","commits":[{"id":"531fe719c7218235a679452eb3d137bfd8fc6af1","date":1415191086,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#getRespMap(String,RestTestHarness).mjava","pathOld":"/dev/null","sourceNew":"  public static Map getRespMap(String path, RestTestHarness restHarness) throws Exception {\n    String response = restHarness.query(path);\n    return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8d1f2c78f560980e5822db6905bb3b2f52fdbe5","date":1417094182,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#getRespMap(String,RestTestHarness).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#getRespMap(String,RestTestHarness).mjava","sourceNew":"  public static Map getRespMap(String path, RestTestHarness restHarness) throws Exception {\n    String response = restHarness.query(path);\n    try {\n      return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n    } catch (JSONParser.ParseException e) {\n      return Collections.emptyMap();\n    }\n  }\n\n","sourceOld":"  public static Map getRespMap(String path, RestTestHarness restHarness) throws Exception {\n    String response = restHarness.query(path);\n    return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2d72c3e6563e08675f940d4c74139309c5e3db2","date":1419411068,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#getRespMap(String,RestTestHarness).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#getRespMap(String,RestTestHarness).mjava","sourceNew":"  public static Map getRespMap(String path, RestTestHarness restHarness) throws Exception {\n    String response = restHarness.query(path);\n    try {\n      return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n    } catch (JSONParser.ParseException e) {\n      log.error(response);\n      return Collections.emptyMap();\n    }\n  }\n\n","sourceOld":"  public static Map getRespMap(String path, RestTestHarness restHarness) throws Exception {\n    String response = restHarness.query(path);\n    try {\n      return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n    } catch (JSONParser.ParseException e) {\n      return Collections.emptyMap();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c9780b447ddf847479e7fa9978cb7809a15a0bf","date":1538692320,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#getRespMap(String,RestTestHarness).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#getRespMap(String,RestTestHarness).mjava","sourceNew":"  public static LinkedHashMapWriter getRespMap(String path, RestTestHarness restHarness) throws Exception {\n    String response = restHarness.query(path);\n    try {\n      return (LinkedHashMapWriter) Utils.MAPWRITEROBJBUILDER.apply(Utils.getJSONParser(new StringReader(response))).getVal();\n    } catch (JSONParser.ParseException e) {\n      log.error(response);\n      return new LinkedHashMapWriter();\n    }\n  }\n\n","sourceOld":"  public static Map getRespMap(String path, RestTestHarness restHarness) throws Exception {\n    String response = restHarness.query(path);\n    try {\n      return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n    } catch (JSONParser.ParseException e) {\n      log.error(response);\n      return Collections.emptyMap();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#getRespMap(String,RestTestHarness).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#getRespMap(String,RestTestHarness).mjava","sourceNew":"  @SuppressWarnings({\"rawtypes\"})\n  public static LinkedHashMapWriter getRespMap(String path, RestTestHarness restHarness) throws Exception {\n    String response = restHarness.query(path);\n    try {\n      return (LinkedHashMapWriter) Utils.MAPWRITEROBJBUILDER.apply(Utils.getJSONParser(new StringReader(response))).getVal();\n    } catch (JSONParser.ParseException e) {\n      log.error(response);\n      return new LinkedHashMapWriter();\n    }\n  }\n\n","sourceOld":"  public static LinkedHashMapWriter getRespMap(String path, RestTestHarness restHarness) throws Exception {\n    String response = restHarness.query(path);\n    try {\n      return (LinkedHashMapWriter) Utils.MAPWRITEROBJBUILDER.apply(Utils.getJSONParser(new StringReader(response))).getVal();\n    } catch (JSONParser.ParseException e) {\n      log.error(response);\n      return new LinkedHashMapWriter();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"531fe719c7218235a679452eb3d137bfd8fc6af1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d8d1f2c78f560980e5822db6905bb3b2f52fdbe5":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"9c9780b447ddf847479e7fa9978cb7809a15a0bf":["c2d72c3e6563e08675f940d4c74139309c5e3db2"],"c2d72c3e6563e08675f940d4c74139309c5e3db2":["d8d1f2c78f560980e5822db6905bb3b2f52fdbe5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["9c9780b447ddf847479e7fa9978cb7809a15a0bf"]},"commit2Childs":{"531fe719c7218235a679452eb3d137bfd8fc6af1":["d8d1f2c78f560980e5822db6905bb3b2f52fdbe5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"d8d1f2c78f560980e5822db6905bb3b2f52fdbe5":["c2d72c3e6563e08675f940d4c74139309c5e3db2"],"9c9780b447ddf847479e7fa9978cb7809a15a0bf":["e98520789adb1d5ad05afb4956eca0944a929688"],"c2d72c3e6563e08675f940d4c74139309c5e3db2":["9c9780b447ddf847479e7fa9978cb7809a15a0bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}