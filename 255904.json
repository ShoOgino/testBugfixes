{"path":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#[T-extends-IndexableField]_addDocument(Iterable[T],Analyzer).mjava","commits":[{"id":"31f025ae60076ae95274433f3fe8e6ace2857a87","date":1326669465,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#[T-extends-IndexableField]_addDocument(Iterable[T],Analyzer).mjava","pathOld":"/dev/null","sourceNew":"  public <T extends IndexableField> void addDocument(final Iterable<T> doc, Analyzer a) throws IOException {\n    if (doDocValues && doc instanceof Document) {\n      randomPerDocFieldValues(r, (Document) doc);\n    }\n    if (r.nextInt(5) == 3) {\n      // TODO: maybe, we should simply buffer up added docs\n      // (but we need to clone them), and only when\n      // getReader, commit, etc. are called, we do an\n      // addDocuments?  Would be better testing.\n      w.addDocuments(new Iterable<Iterable<T>>() {\n\n        @Override\n        public Iterator<Iterable<T>> iterator() {\n          return new Iterator<Iterable<T>>() {\n            boolean done;\n            \n            @Override\n            public boolean hasNext() {\n              return !done;\n            }\n\n            @Override\n            public void remove() {\n              throw new UnsupportedOperationException();\n            }\n\n            @Override\n            public Iterable<T> next() {\n              if (done) {\n                throw new IllegalStateException();\n              }\n              done = true;\n              return doc;\n            }\n          };\n        }\n        }, a);\n    } else {\n      w.addDocument(doc, a);\n    }\n    \n    maybeCommit();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["cd659803551ebd8ca09b9e4ad7abd18d3d558f9d","d4d69c535930b5cce125cff868d40f6373dc27d4","d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#[T-extends-IndexableField]_addDocument(Iterable[T],Analyzer).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#[T-extends-IndexableField]_addDocument(Iterable[T],Analyzer).mjava","sourceNew":"  public <T extends IndexableField> void addDocument(final Iterable<T> doc, Analyzer a) throws IOException {\n    if (doDocValues && doc instanceof Document) {\n      randomPerDocFieldValues(r, (Document) doc);\n    }\n    if (r.nextInt(5) == 3) {\n      // TODO: maybe, we should simply buffer up added docs\n      // (but we need to clone them), and only when\n      // getReader, commit, etc. are called, we do an\n      // addDocuments?  Would be better testing.\n      w.addDocuments(new Iterable<Iterable<T>>() {\n\n        @Override\n        public Iterator<Iterable<T>> iterator() {\n          return new Iterator<Iterable<T>>() {\n            boolean done;\n            \n            @Override\n            public boolean hasNext() {\n              return !done;\n            }\n\n            @Override\n            public void remove() {\n              throw new UnsupportedOperationException();\n            }\n\n            @Override\n            public Iterable<T> next() {\n              if (done) {\n                throw new IllegalStateException();\n              }\n              done = true;\n              return doc;\n            }\n          };\n        }\n        }, a);\n    } else {\n      w.addDocument(doc, a);\n    }\n    \n    maybeCommit();\n  }\n\n","sourceOld":"  public <T extends IndexableField> void addDocument(final Iterable<T> doc, Analyzer a) throws IOException {\n    if (doDocValues && doc instanceof Document) {\n      randomPerDocFieldValues(r, (Document) doc);\n    }\n    if (r.nextInt(5) == 3) {\n      // TODO: maybe, we should simply buffer up added docs\n      // (but we need to clone them), and only when\n      // getReader, commit, etc. are called, we do an\n      // addDocuments?  Would be better testing.\n      w.addDocuments(new Iterable<Iterable<T>>() {\n\n        @Override\n        public Iterator<Iterable<T>> iterator() {\n          return new Iterator<Iterable<T>>() {\n            boolean done;\n            \n            @Override\n            public boolean hasNext() {\n              return !done;\n            }\n\n            @Override\n            public void remove() {\n              throw new UnsupportedOperationException();\n            }\n\n            @Override\n            public Iterable<T> next() {\n              if (done) {\n                throw new IllegalStateException();\n              }\n              done = true;\n              return doc;\n            }\n          };\n        }\n        }, a);\n    } else {\n      w.addDocument(doc, a);\n    }\n    \n    maybeCommit();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}