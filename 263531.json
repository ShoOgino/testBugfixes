{"path":"lucene/src/java/org/apache/lucene/search/function/CustomScoreQuery.CustomWeight#scorer(AtomicReaderContext,boolean,boolean).mjava","commits":[{"id":"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","date":1294747166,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/function/CustomScoreQuery.CustomWeight#scorer(AtomicReaderContext,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/function/CustomScoreQuery.CustomWeight#scorer(ReaderContext,boolean,boolean).mjava","sourceNew":"    @Override\n    public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder, boolean topScorer) throws IOException {\n      // Pass true for \"scoresDocsInOrder\", because we\n      // require in-order scoring, even if caller does not,\n      // since we call advance on the valSrcScorers.  Pass\n      // false for \"topScorer\" because we will not invoke\n      // score(Collector) on these scorers:\n      Scorer subQueryScorer = subQueryWeight.scorer(context, true, false);\n      if (subQueryScorer == null) {\n        return null;\n      }\n      Scorer[] valSrcScorers = new Scorer[valSrcWeights.length];\n      for(int i = 0; i < valSrcScorers.length; i++) {\n         valSrcScorers[i] = valSrcWeights[i].scorer(context, true, topScorer);\n      }\n      return new CustomScorer(similarity, context.reader, this, subQueryScorer, valSrcScorers);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(ReaderContext context, boolean scoreDocsInOrder, boolean topScorer) throws IOException {\n      // Pass true for \"scoresDocsInOrder\", because we\n      // require in-order scoring, even if caller does not,\n      // since we call advance on the valSrcScorers.  Pass\n      // false for \"topScorer\" because we will not invoke\n      // score(Collector) on these scorers:\n      Scorer subQueryScorer = subQueryWeight.scorer(context, true, false);\n      if (subQueryScorer == null) {\n        return null;\n      }\n      Scorer[] valSrcScorers = new Scorer[valSrcWeights.length];\n      for(int i = 0; i < valSrcScorers.length; i++) {\n         valSrcScorers[i] = valSrcWeights[i].scorer(context, true, topScorer);\n      }\n      return new CustomScorer(similarity, context.reader, this, subQueryScorer, valSrcScorers);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc63f17f42c64d6ccc8c361cfcdf074f115f770c","date":1294930751,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/function/CustomScoreQuery.CustomWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/function/CustomScoreQuery.CustomWeight#scorer(AtomicReaderContext,boolean,boolean).mjava","sourceNew":"    @Override\n    public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n      // Pass true for \"scoresDocsInOrder\", because we\n      // require in-order scoring, even if caller does not,\n      // since we call advance on the valSrcScorers.  Pass\n      // false for \"topScorer\" because we will not invoke\n      // score(Collector) on these scorers:\n      Scorer subQueryScorer = subQueryWeight.scorer(context, ScorerContext.def());\n      if (subQueryScorer == null) {\n        return null;\n      }\n      Scorer[] valSrcScorers = new Scorer[valSrcWeights.length];\n      for(int i = 0; i < valSrcScorers.length; i++) {\n         valSrcScorers[i] = valSrcWeights[i].scorer(context, scorerContext.scoreDocsInOrder(true));\n      }\n      return new CustomScorer(similarity, context.reader, this, subQueryScorer, valSrcScorers);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder, boolean topScorer) throws IOException {\n      // Pass true for \"scoresDocsInOrder\", because we\n      // require in-order scoring, even if caller does not,\n      // since we call advance on the valSrcScorers.  Pass\n      // false for \"topScorer\" because we will not invoke\n      // score(Collector) on these scorers:\n      Scorer subQueryScorer = subQueryWeight.scorer(context, true, false);\n      if (subQueryScorer == null) {\n        return null;\n      }\n      Scorer[] valSrcScorers = new Scorer[valSrcWeights.length];\n      for(int i = 0; i < valSrcScorers.length; i++) {\n         valSrcScorers[i] = valSrcWeights[i].scorer(context, true, topScorer);\n      }\n      return new CustomScorer(similarity, context.reader, this, subQueryScorer, valSrcScorers);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dc63f17f42c64d6ccc8c361cfcdf074f115f770c":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dc63f17f42c64d6ccc8c361cfcdf074f115f770c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["dc63f17f42c64d6ccc8c361cfcdf074f115f770c"],"dc63f17f42c64d6ccc8c361cfcdf074f115f770c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}