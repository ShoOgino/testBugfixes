{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#next().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#next().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#next().mjava","sourceNew":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        threadDone = false;\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null && !threadDone) {\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n            throw new ThreadInterruptedException(ie);\n          }\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        if (t != null && threadDone) {\n          // The thread has exited yet did not hit end of\n          // data, so this means it hit an exception.  We\n          // throw NoMorDataException here to force\n          // benchmark to stop the current alg:\n          throw new NoMoreDataException();\n        }\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","sourceOld":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        threadDone = false;\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null && !threadDone) {\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n            throw new ThreadInterruptedException(ie);\n          }\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        if (t != null && threadDone) {\n          // The thread has exited yet did not hit end of\n          // data, so this means it hit an exception.  We\n          // throw NoMorDataException here to force\n          // benchmark to stop the current alg:\n          throw new NoMoreDataException();\n        }\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c49feedffe47df314319e4b6a415dde78a67827","date":1354787662,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#next().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#next().mjava","sourceNew":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        threadDone = false;\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null && !threadDone && !stopped) {\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n            throw new ThreadInterruptedException(ie);\n          }\n        }\n        if (tuple != null) {\n          result = tuple;\n          tuple = null;\n          notify();\n          return result;\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        // The thread has exited yet did not hit end of\n        // data, so this means it hit an exception.  We\n        // throw NoMorDataException here to force\n        // benchmark to stop the current alg:\n        throw new NoMoreDataException();\n      }\n    }\n\n","sourceOld":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        threadDone = false;\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null && !threadDone) {\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n            throw new ThreadInterruptedException(ie);\n          }\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        if (t != null && threadDone) {\n          // The thread has exited yet did not hit end of\n          // data, so this means it hit an exception.  We\n          // throw NoMorDataException here to force\n          // benchmark to stop the current alg:\n          throw new NoMoreDataException();\n        }\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#next().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#next().mjava","sourceNew":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        threadDone = false;\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null && !threadDone && !stopped) {\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n            throw new ThreadInterruptedException(ie);\n          }\n        }\n        if (tuple != null) {\n          result = tuple;\n          tuple = null;\n          notify();\n          return result;\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        // The thread has exited yet did not hit end of\n        // data, so this means it hit an exception.  We\n        // throw NoMorDataException here to force\n        // benchmark to stop the current alg:\n        throw new NoMoreDataException();\n      }\n    }\n\n","sourceOld":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        threadDone = false;\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null && !threadDone) {\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n            throw new ThreadInterruptedException(ie);\n          }\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        if (t != null && threadDone) {\n          // The thread has exited yet did not hit end of\n          // data, so this means it hit an exception.  We\n          // throw NoMorDataException here to force\n          // benchmark to stop the current alg:\n          throw new NoMoreDataException();\n        }\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2c49feedffe47df314319e4b6a415dde78a67827":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2c49feedffe47df314319e4b6a415dde78a67827"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2c49feedffe47df314319e4b6a415dde78a67827"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["2c49feedffe47df314319e4b6a415dde78a67827","407687e67faf6e1f02a211ca078d8e3eed631027"],"2c49feedffe47df314319e4b6a415dde78a67827":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}