{"path":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","commits":[{"id":"3c2584ef33a53591fe5e22879fca66515c30ef01","date":1461345701,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/replication\"), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/replication\"), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71475d88ea48a7d9a847f209667255318b3ea4c7","date":1461758968,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","sourceNew":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","sourceOld":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/replication\"), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89fc530b0b90c48296ecc9c7747483cb41c9fefe","date":1462537461,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","sourceNew":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","sourceOld":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","date":1462576651,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","sourceNew":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","sourceOld":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b92f86e90a95b8fc860ddecd9470ffb89a9fa7d","date":1467828398,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","sourceNew":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/terms\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","sourceOld":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11407a855d05b788a5400e8f4ac3083bb258f473","date":1475073244,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","sourceNew":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/terms\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/document\"), \"solr.DocumentAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/field\"), \"solr.FieldAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/debug/dump\"), \"solr.DumpRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","sourceOld":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/terms\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","sourceNew":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/terms\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/document\"), \"solr.DocumentAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/field\"), \"solr.FieldAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/debug/dump\"), \"solr.DumpRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","sourceOld":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/terms\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","sourceNew":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/terms\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/document\"), \"solr.DocumentAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/field\"), \"solr.FieldAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/debug/dump\"), \"solr.DumpRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","sourceOld":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50f05d6b69cfaabd51b5d26cba4e3122f51fff83","date":1478603228,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","sourceNew":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.ExportHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/terms\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/document\"), \"solr.DocumentAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/field\"), \"solr.FieldAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/debug/dump\"), \"solr.DumpRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","sourceOld":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/terms\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/document\"), \"solr.DocumentAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/field\"), \"solr.FieldAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/debug/dump\"), \"solr.DumpRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","sourceNew":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.ExportHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/terms\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/document\"), \"solr.DocumentAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/field\"), \"solr.FieldAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/debug/dump\"), \"solr.DumpRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","sourceOld":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/terms\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/document\"), \"solr.DocumentAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/field\"), \"solr.FieldAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/debug/dump\"), \"solr.DumpRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcf710a8fcd590cf55c855d422c7a10fce3e6117","date":1485842253,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","sourceNew":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.ExportHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/terms\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/document\"), \"solr.DocumentAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/field\"), \"solr.FieldAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/debug/dump\"), \"solr.DumpRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"update\"), \"solr.UpdateRequestHandlerApi\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","sourceOld":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.ExportHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/terms\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/document\"), \"solr.DocumentAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/field\"), \"solr.FieldAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/debug/dump\"), \"solr.DumpRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","sourceNew":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.ExportHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/terms\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/document\"), \"solr.DocumentAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/field\"), \"solr.FieldAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/debug/dump\"), \"solr.DumpRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"update\"), \"solr.UpdateRequestHandlerApi\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","sourceOld":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.ExportHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/terms\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/document\"), \"solr.DocumentAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/field\"), \"solr.FieldAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/debug/dump\"), \"solr.DumpRequestHandler\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4bb866c04f137107dcf5b8f0e5bcee02fc832050","date":1546758709,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","sourceNew":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/health\"), \"solr.HealthCheckHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.ExportHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/terms\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/document\"), \"solr.DocumentAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/field\"), \"solr.FieldAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/debug/dump\"), \"solr.DumpRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"update\"), \"solr.UpdateRequestHandlerApi\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","sourceOld":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.ExportHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/terms\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/document\"), \"solr.DocumentAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/field\"), \"solr.FieldAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/debug/dump\"), \"solr.DumpRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"update\"), \"solr.UpdateRequestHandlerApi\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","bugFix":null,"bugIntro":["434ea3e1b8afaaa792776459544b57703cd6872b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"434ea3e1b8afaaa792776459544b57703cd6872b","date":1598655596,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testImplicitPlugins().mjava","sourceNew":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.ExportHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/terms\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/document\"), \"solr.DocumentAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/field\"), \"solr.FieldAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/debug/dump\"), \"solr.DumpRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"update\"), \"solr.UpdateRequestHandlerApi\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","sourceOld":"  @Test\n  public void testImplicitPlugins() {\n    final SolrCore core = h.getCore();\n    final List<PluginInfo> implicitHandlers = core.getImplicitHandlers();\n\n    final Map<String,String> pathToClassMap = new HashMap<>(implicitHandlers.size());\n    for (PluginInfo implicitHandler : implicitHandlers) {\n      assertEquals(\"wrong type for \"+implicitHandler.toString(),\n          SolrRequestHandler.TYPE, implicitHandler.type);\n      pathToClassMap.put(implicitHandler.name, implicitHandler.className);\n    }\n\n    int ihCount = 0;\n    {\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/health\"), \"solr.HealthCheckHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/file\"), \"solr.ShowFileRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/logging\"), \"solr.LoggingHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/luke\"), \"solr.LukeRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/mbeans\"), \"solr.SolrInfoMBeanHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/ping\"), \"solr.PingRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/plugins\"), \"solr.PluginInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/properties\"), \"solr.PropertiesRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/segments\"), \"solr.SegmentsInfoRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/system\"), \"solr.SystemInfoHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/admin/threads\"), \"solr.ThreadDumpHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/config\"), \"solr.SolrConfigHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/export\"), \"solr.ExportHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/terms\"), \"solr.SearchHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/get\"), \"solr.RealTimeGetHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(ReplicationHandler.PATH), \"solr.ReplicationHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/schema\"), \"solr.SchemaHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/sql\"), \"solr.SQLHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/stream\"), \"solr.StreamHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/graph\"), \"solr.GraphHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/csv\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/update/json/docs\"), \"solr.UpdateRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/document\"), \"solr.DocumentAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/analysis/field\"), \"solr.FieldAnalysisRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"/debug/dump\"), \"solr.DumpRequestHandler\");\n      ++ihCount; assertEquals(pathToClassMap.get(\"update\"), \"solr.UpdateRequestHandlerApi\");\n    }\n    assertEquals(\"wrong number of implicit handlers\", ihCount, implicitHandlers.size());\n  }\n\n","bugFix":["4bb866c04f137107dcf5b8f0e5bcee02fc832050"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"89fc530b0b90c48296ecc9c7747483cb41c9fefe":["71475d88ea48a7d9a847f209667255318b3ea4c7"],"fcf710a8fcd590cf55c855d422c7a10fce3e6117":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3c2584ef33a53591fe5e22879fca66515c30ef01"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["199dfa410f1fdbfd3294106b04096cce5ed34b21","fcf710a8fcd590cf55c855d422c7a10fce3e6117"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","50f05d6b69cfaabd51b5d26cba4e3122f51fff83"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["71475d88ea48a7d9a847f209667255318b3ea4c7","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"3c2584ef33a53591fe5e22879fca66515c30ef01":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"50f05d6b69cfaabd51b5d26cba4e3122f51fff83":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4bb866c04f137107dcf5b8f0e5bcee02fc832050":["fcf710a8fcd590cf55c855d422c7a10fce3e6117"],"434ea3e1b8afaaa792776459544b57703cd6872b":["4bb866c04f137107dcf5b8f0e5bcee02fc832050"],"11407a855d05b788a5400e8f4ac3083bb258f473":["8b92f86e90a95b8fc860ddecd9470ffb89a9fa7d"],"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":["71475d88ea48a7d9a847f209667255318b3ea4c7","89fc530b0b90c48296ecc9c7747483cb41c9fefe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["8b92f86e90a95b8fc860ddecd9470ffb89a9fa7d","11407a855d05b788a5400e8f4ac3083bb258f473"],"8b92f86e90a95b8fc860ddecd9470ffb89a9fa7d":["89fc530b0b90c48296ecc9c7747483cb41c9fefe"],"71475d88ea48a7d9a847f209667255318b3ea4c7":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["434ea3e1b8afaaa792776459544b57703cd6872b"]},"commit2Childs":{"89fc530b0b90c48296ecc9c7747483cb41c9fefe":["a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","8b92f86e90a95b8fc860ddecd9470ffb89a9fa7d"],"fcf710a8fcd590cf55c855d422c7a10fce3e6117":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","4bb866c04f137107dcf5b8f0e5bcee02fc832050"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["71475d88ea48a7d9a847f209667255318b3ea4c7"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["199dfa410f1fdbfd3294106b04096cce5ed34b21"],"3c2584ef33a53591fe5e22879fca66515c30ef01":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"50f05d6b69cfaabd51b5d26cba4e3122f51fff83":["fcf710a8fcd590cf55c855d422c7a10fce3e6117","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"4bb866c04f137107dcf5b8f0e5bcee02fc832050":["434ea3e1b8afaaa792776459544b57703cd6872b"],"434ea3e1b8afaaa792776459544b57703cd6872b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"11407a855d05b788a5400e8f4ac3083bb258f473":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","3c2584ef33a53591fe5e22879fca66515c30ef01"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","50f05d6b69cfaabd51b5d26cba4e3122f51fff83"],"8b92f86e90a95b8fc860ddecd9470ffb89a9fa7d":["11407a855d05b788a5400e8f4ac3083bb258f473","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"71475d88ea48a7d9a847f209667255318b3ea4c7":["89fc530b0b90c48296ecc9c7747483cb41c9fefe","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a8ed5da4b0191db6bc7f77f9feb35da6bd76f904"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}