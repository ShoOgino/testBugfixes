{"path":"src/test/org/apache/solr/analysis/TestPatternReplaceCharFilter#test1block1matchLonger().mjava","commits":[{"id":"b03b7626bae3b34032e501e74788f89a2f50058b","date":1260886439,"type":0,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/TestPatternReplaceCharFilter#test1block1matchLonger().mjava","pathOld":"/dev/null","sourceNew":"  //           11111\n  // 012345678901234\n  // aa bb cc dd\n  // aa##bb###cc dd\n  public void test1block1matchLonger() throws IOException {\n    final String BLOCK = \"aa bb cc dd\";\n    CharStream cs = new PatternReplaceCharFilter( \"(aa)\\\\s+(bb)\\\\s+(cc)\", \"$1##$2###$3\",\n          CharReader.get( new StringReader( BLOCK ) ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    assertTokEqualOff( tokens( \"aa##bb###cc,1,0,8 dd,1,9,11\" ), getTokens( ts ) );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fd023a662cc25ae7e0ad0f33d71c476a16d0579","date":1261403630,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/TestPatternReplaceCharFilter#test1block1matchLonger().mjava","pathOld":"src/test/org/apache/solr/analysis/TestPatternReplaceCharFilter#test1block1matchLonger().mjava","sourceNew":"  //           11111\n  // 012345678901234\n  // aa bb cc dd\n  // aa##bb###cc dd\n  public void test1block1matchLonger() throws IOException {\n    final String BLOCK = \"aa bb cc dd\";\n    CharStream cs = new PatternReplaceCharFilter( \"(aa)\\\\s+(bb)\\\\s+(cc)\", \"$1##$2###$3\",\n          CharReader.get( new StringReader( BLOCK ) ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    assertTokenStreamContents(ts,\n        new String[] { \"aa##bb###cc\", \"dd\" },\n        new int[] { 0, 9 },\n        new int[] { 8, 11 },\n        new int[] { 1, 1 });\n  }\n\n","sourceOld":"  //           11111\n  // 012345678901234\n  // aa bb cc dd\n  // aa##bb###cc dd\n  public void test1block1matchLonger() throws IOException {\n    final String BLOCK = \"aa bb cc dd\";\n    CharStream cs = new PatternReplaceCharFilter( \"(aa)\\\\s+(bb)\\\\s+(cc)\", \"$1##$2###$3\",\n          CharReader.get( new StringReader( BLOCK ) ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    assertTokEqualOff( tokens( \"aa##bb###cc,1,0,8 dd,1,9,11\" ), getTokens( ts ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ea7e2236a3fee360ee12269266653689463f709","date":1262997945,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/TestPatternReplaceCharFilter#test1block1matchLonger().mjava","pathOld":"src/test/org/apache/solr/analysis/TestPatternReplaceCharFilter#test1block1matchLonger().mjava","sourceNew":"  //           11111\n  // 012345678901234\n  // aa bb cc dd\n  // aa##bb###cc dd\n  public void test1block1matchLonger() throws IOException {\n    final String BLOCK = \"aa bb cc dd\";\n    CharStream cs = new PatternReplaceCharFilter( pattern(\"(aa)\\\\s+(bb)\\\\s+(cc)\"), \"$1##$2###$3\",\n          CharReader.get( new StringReader( BLOCK ) ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    assertTokenStreamContents(ts,\n        new String[] { \"aa##bb###cc\", \"dd\" },\n        new int[] { 0, 9 },\n        new int[] { 8, 11 },\n        new int[] { 1, 1 });\n  }\n\n","sourceOld":"  //           11111\n  // 012345678901234\n  // aa bb cc dd\n  // aa##bb###cc dd\n  public void test1block1matchLonger() throws IOException {\n    final String BLOCK = \"aa bb cc dd\";\n    CharStream cs = new PatternReplaceCharFilter( \"(aa)\\\\s+(bb)\\\\s+(cc)\", \"$1##$2###$3\",\n          CharReader.get( new StringReader( BLOCK ) ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    assertTokenStreamContents(ts,\n        new String[] { \"aa##bb###cc\", \"dd\" },\n        new int[] { 0, 9 },\n        new int[] { 8, 11 },\n        new int[] { 1, 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"434d3dd2a84fe27b3101b21528019c74c8534e03","date":1268610420,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/TestPatternReplaceCharFilter#test1block1matchLonger().mjava","pathOld":"src/test/org/apache/solr/analysis/TestPatternReplaceCharFilter#test1block1matchLonger().mjava","sourceNew":"  //           11111\n  // 012345678901234\n  // aa bb cc dd\n  // aa##bb###cc dd\n  public void test1block1matchLonger() throws IOException {\n    final String BLOCK = \"aa bb cc dd\";\n    CharStream cs = new PatternReplaceCharFilter( pattern(\"(aa)\\\\s+(bb)\\\\s+(cc)\"), \"$1##$2###$3\",\n          CharReader.get( new StringReader( BLOCK ) ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    assertTokenStreamContents(ts,\n        new String[] { \"aa##bb###cc\", \"dd\" },\n        new int[] { 0, 9 },\n        new int[] { 8, 11 });\n  }\n\n","sourceOld":"  //           11111\n  // 012345678901234\n  // aa bb cc dd\n  // aa##bb###cc dd\n  public void test1block1matchLonger() throws IOException {\n    final String BLOCK = \"aa bb cc dd\";\n    CharStream cs = new PatternReplaceCharFilter( pattern(\"(aa)\\\\s+(bb)\\\\s+(cc)\"), \"$1##$2###$3\",\n          CharReader.get( new StringReader( BLOCK ) ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    assertTokenStreamContents(ts,\n        new String[] { \"aa##bb###cc\", \"dd\" },\n        new int[] { 0, 9 },\n        new int[] { 8, 11 },\n        new int[] { 1, 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/analysis/TestPatternReplaceCharFilter#test1block1matchLonger().mjava","pathOld":"src/test/org/apache/solr/analysis/TestPatternReplaceCharFilter#test1block1matchLonger().mjava","sourceNew":"  //           11111\n  // 012345678901234\n  // aa bb cc dd\n  // aa##bb###cc dd\n  public void test1block1matchLonger() throws IOException {\n    final String BLOCK = \"aa bb cc dd\";\n    CharStream cs = new PatternReplaceCharFilter( pattern(\"(aa)\\\\s+(bb)\\\\s+(cc)\"), \"$1##$2###$3\",\n          CharReader.get( new StringReader( BLOCK ) ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    assertTokenStreamContents(ts,\n        new String[] { \"aa##bb###cc\", \"dd\" },\n        new int[] { 0, 9 },\n        new int[] { 8, 11 });\n  }\n\n","sourceOld":"  //           11111\n  // 012345678901234\n  // aa bb cc dd\n  // aa##bb###cc dd\n  public void test1block1matchLonger() throws IOException {\n    final String BLOCK = \"aa bb cc dd\";\n    CharStream cs = new PatternReplaceCharFilter( pattern(\"(aa)\\\\s+(bb)\\\\s+(cc)\"), \"$1##$2###$3\",\n          CharReader.get( new StringReader( BLOCK ) ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    assertTokenStreamContents(ts,\n        new String[] { \"aa##bb###cc\", \"dd\" },\n        new int[] { 0, 9 },\n        new int[] { 8, 11 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6ea7e2236a3fee360ee12269266653689463f709":["2fd023a662cc25ae7e0ad0f33d71c476a16d0579"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["434d3dd2a84fe27b3101b21528019c74c8534e03"],"b03b7626bae3b34032e501e74788f89a2f50058b":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"434d3dd2a84fe27b3101b21528019c74c8534e03":["6ea7e2236a3fee360ee12269266653689463f709"],"2fd023a662cc25ae7e0ad0f33d71c476a16d0579":["b03b7626bae3b34032e501e74788f89a2f50058b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6ea7e2236a3fee360ee12269266653689463f709":["434d3dd2a84fe27b3101b21528019c74c8534e03"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["b03b7626bae3b34032e501e74788f89a2f50058b"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"b03b7626bae3b34032e501e74788f89a2f50058b":["2fd023a662cc25ae7e0ad0f33d71c476a16d0579"],"2fd023a662cc25ae7e0ad0f33d71c476a16d0579":["6ea7e2236a3fee360ee12269266653689463f709"],"434d3dd2a84fe27b3101b21528019c74c8534e03":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}