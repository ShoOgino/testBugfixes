{"path":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testCJKBoostedTerm().mjava","commits":[{"id":"2ee056ec8e953928ee49a691090634eed1fa4d6b","date":1274852580,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testCJKBoostedTerm().mjava","pathOld":"/dev/null","sourceNew":"  public void testCJKBoostedTerm() throws Exception {\n    // individual CJK chars as terms\n    Analyzer analyzer = new SimpleCJKAnalyzer();\n    \n    BooleanQuery expected = new BooleanQuery();\n    expected.setBoost(0.5f);\n    expected.add(new TermQuery(new Term(\"field\", \"中\")), BooleanClause.Occur.SHOULD);\n    expected.add(new TermQuery(new Term(\"field\", \"国\")), BooleanClause.Occur.SHOULD);\n    \n    assertEquals(expected, getQuery(\"中国^0.5\", analyzer));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33e4a95ed08968b85d84e9fba82424f1fd945fbb","date":1274878310,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testCJKBoostedTerm().mjava","sourceNew":null,"sourceOld":"  public void testCJKBoostedTerm() throws Exception {\n    // individual CJK chars as terms\n    Analyzer analyzer = new SimpleCJKAnalyzer();\n    \n    BooleanQuery expected = new BooleanQuery();\n    expected.setBoost(0.5f);\n    expected.add(new TermQuery(new Term(\"field\", \"中\")), BooleanClause.Occur.SHOULD);\n    expected.add(new TermQuery(new Term(\"field\", \"国\")), BooleanClause.Occur.SHOULD);\n    \n    assertEquals(expected, getQuery(\"中国^0.5\", analyzer));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f0d8e9a3f2e45eeea14a4803eaac02a0865097","date":1279565910,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testCJKBoostedTerm().mjava","pathOld":"/dev/null","sourceNew":"  public void testCJKBoostedTerm() throws Exception {\n    // individual CJK chars as terms\n    SimpleCJKAnalyzer analyzer = new SimpleCJKAnalyzer();\n    \n    BooleanQuery expected = new BooleanQuery();\n    expected.setBoost(0.5f);\n    expected.add(new TermQuery(new Term(\"field\", \"中\")), BooleanClause.Occur.SHOULD);\n    expected.add(new TermQuery(new Term(\"field\", \"国\")), BooleanClause.Occur.SHOULD);\n    \n    assertEquals(expected, getQuery(\"中国^0.5\", analyzer));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testCJKBoostedTerm().mjava","pathOld":"/dev/null","sourceNew":"  public void testCJKBoostedTerm() throws Exception {\n    // individual CJK chars as terms\n    SimpleCJKAnalyzer analyzer = new SimpleCJKAnalyzer();\n    \n    BooleanQuery expected = new BooleanQuery();\n    expected.setBoost(0.5f);\n    expected.add(new TermQuery(new Term(\"field\", \"中\")), BooleanClause.Occur.SHOULD);\n    expected.add(new TermQuery(new Term(\"field\", \"国\")), BooleanClause.Occur.SHOULD);\n    \n    assertEquals(expected, getQuery(\"中国^0.5\", analyzer));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecaea79e307d83311c31273b0ea89b9fdb0c5a32","date":1287584790,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testCJKBoostedTerm().mjava","sourceNew":null,"sourceOld":"  public void testCJKBoostedTerm() throws Exception {\n    // individual CJK chars as terms\n    SimpleCJKAnalyzer analyzer = new SimpleCJKAnalyzer();\n    \n    BooleanQuery expected = new BooleanQuery();\n    expected.setBoost(0.5f);\n    expected.add(new TermQuery(new Term(\"field\", \"中\")), BooleanClause.Occur.SHOULD);\n    expected.add(new TermQuery(new Term(\"field\", \"国\")), BooleanClause.Occur.SHOULD);\n    \n    assertEquals(expected, getQuery(\"中国^0.5\", analyzer));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8017ab6544f30f93b106e419e7298173bad77f69","date":1287608126,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testCJKBoostedTerm().mjava","sourceNew":null,"sourceOld":"  public void testCJKBoostedTerm() throws Exception {\n    // individual CJK chars as terms\n    SimpleCJKAnalyzer analyzer = new SimpleCJKAnalyzer();\n    \n    BooleanQuery expected = new BooleanQuery();\n    expected.setBoost(0.5f);\n    expected.add(new TermQuery(new Term(\"field\", \"中\")), BooleanClause.Occur.SHOULD);\n    expected.add(new TermQuery(new Term(\"field\", \"国\")), BooleanClause.Occur.SHOULD);\n    \n    assertEquals(expected, getQuery(\"中国^0.5\", analyzer));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testCJKBoostedTerm().mjava","sourceNew":null,"sourceOld":"  public void testCJKBoostedTerm() throws Exception {\n    // individual CJK chars as terms\n    SimpleCJKAnalyzer analyzer = new SimpleCJKAnalyzer();\n    \n    BooleanQuery expected = new BooleanQuery();\n    expected.setBoost(0.5f);\n    expected.add(new TermQuery(new Term(\"field\", \"中\")), BooleanClause.Occur.SHOULD);\n    expected.add(new TermQuery(new Term(\"field\", \"国\")), BooleanClause.Occur.SHOULD);\n    \n    assertEquals(expected, getQuery(\"中国^0.5\", analyzer));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ecaea79e307d83311c31273b0ea89b9fdb0c5a32":["55f0d8e9a3f2e45eeea14a4803eaac02a0865097"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"33e4a95ed08968b85d84e9fba82424f1fd945fbb":["2ee056ec8e953928ee49a691090634eed1fa4d6b"],"2ee056ec8e953928ee49a691090634eed1fa4d6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f4e87790277826a2aea119328600dfb07761f32":["33e4a95ed08968b85d84e9fba82424f1fd945fbb","55f0d8e9a3f2e45eeea14a4803eaac02a0865097"],"8017ab6544f30f93b106e419e7298173bad77f69":["55f0d8e9a3f2e45eeea14a4803eaac02a0865097","ecaea79e307d83311c31273b0ea89b9fdb0c5a32"],"55f0d8e9a3f2e45eeea14a4803eaac02a0865097":["33e4a95ed08968b85d84e9fba82424f1fd945fbb"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","ecaea79e307d83311c31273b0ea89b9fdb0c5a32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ecaea79e307d83311c31273b0ea89b9fdb0c5a32"]},"commit2Childs":{"ecaea79e307d83311c31273b0ea89b9fdb0c5a32":["8017ab6544f30f93b106e419e7298173bad77f69","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2ee056ec8e953928ee49a691090634eed1fa4d6b"],"33e4a95ed08968b85d84e9fba82424f1fd945fbb":["5f4e87790277826a2aea119328600dfb07761f32","55f0d8e9a3f2e45eeea14a4803eaac02a0865097"],"2ee056ec8e953928ee49a691090634eed1fa4d6b":["33e4a95ed08968b85d84e9fba82424f1fd945fbb"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"8017ab6544f30f93b106e419e7298173bad77f69":[],"55f0d8e9a3f2e45eeea14a4803eaac02a0865097":["ecaea79e307d83311c31273b0ea89b9fdb0c5a32","5f4e87790277826a2aea119328600dfb07761f32","8017ab6544f30f93b106e419e7298173bad77f69"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8017ab6544f30f93b106e419e7298173bad77f69","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}