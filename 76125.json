{"path":"solr/core/src/test/org/apache/solr/cloud/cdcr/CdcrReplicationHandlerTest.UpdateThread#run().mjava","commits":[{"id":"e7da9d8536c11576df10e348efa79d2739170936","date":1509475399,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/cdcr/CdcrReplicationHandlerTest.UpdateThread#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CdcrReplicationHandlerTest.UpdateThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int j = numDocs.get(); j < (numDocs.get() + 10); j++) {\n          docs.add(getDoc(id, Integer.toString(j)));\n        }\n        index(SOURCE_COLLECTION, docs);\n        numDocs.getAndAdd(10);\n        log.info(\"Sent batch of {} updates - numDocs:{}\", docs.size(), numDocs);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int j = numDocs.get(); j < (numDocs.get() + 10); j++) {\n          docs.add(getDoc(id, Integer.toString(j)));\n        }\n        index(SOURCE_COLLECTION, docs);\n        numDocs.getAndAdd(10);\n        log.info(\"Sent batch of {} updates - numDocs:{}\", docs.size(), numDocs);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d","date":1509475828,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CdcrReplicationHandlerTest.UpdateThread#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/cdcr/CdcrReplicationHandlerTest.UpdateThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int j = numDocs.get(); j < (numDocs.get() + 10); j++) {\n          docs.add(getDoc(id, Integer.toString(j)));\n        }\n        index(SOURCE_COLLECTION, docs);\n        numDocs.getAndAdd(10);\n        log.info(\"Sent batch of {} updates - numDocs:{}\", docs.size(), numDocs);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int j = numDocs.get(); j < (numDocs.get() + 10); j++) {\n          docs.add(getDoc(id, Integer.toString(j)));\n        }\n        index(SOURCE_COLLECTION, docs);\n        numDocs.getAndAdd(10);\n        log.info(\"Sent batch of {} updates - numDocs:{}\", docs.size(), numDocs);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fba58147c9753bb58bbfbd2ebbbf02aecc1eafde","date":1509748659,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/cdcr/CdcrReplicationHandlerTest.UpdateThread#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CdcrReplicationHandlerTest.UpdateThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int j = numDocs.get(); j < (numDocs.get() + 10); j++) {\n          docs.add(getDoc(id, Integer.toString(j)));\n        }\n        index(SOURCE_COLLECTION, docs);\n        numDocs.getAndAdd(10);\n        log.info(\"Sent batch of {} updates - numDocs:{}\", docs.size(), numDocs);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int j = numDocs.get(); j < (numDocs.get() + 10); j++) {\n          docs.add(getDoc(id, Integer.toString(j)));\n        }\n        index(SOURCE_COLLECTION, docs);\n        numDocs.getAndAdd(10);\n        log.info(\"Sent batch of {} updates - numDocs:{}\", docs.size(), numDocs);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d523b8189b211dd1630166aa77b8c88bb48b3fcc","date":1510144168,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/cdcr/CdcrReplicationHandlerTest.UpdateThread#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CdcrReplicationHandlerTest.UpdateThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int j = numDocs.get(); j < (numDocs.get() + 10); j++) {\n          docs.add(getDoc(id, Integer.toString(j)));\n        }\n        index(SOURCE_COLLECTION, docs);\n        numDocs.getAndAdd(10);\n        log.info(\"Sent batch of {} updates - numDocs:{}\", docs.size(), numDocs);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int j = numDocs.get(); j < (numDocs.get() + 10); j++) {\n          docs.add(getDoc(id, Integer.toString(j)));\n        }\n        index(SOURCE_COLLECTION, docs);\n        numDocs.getAndAdd(10);\n        log.info(\"Sent batch of {} updates - numDocs:{}\", docs.size(), numDocs);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/cdcr/CdcrReplicationHandlerTest.UpdateThread#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/cdcr/CdcrReplicationHandlerTest.UpdateThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int j = numDocs.get(); j < (numDocs.get() + 10); j++) {\n          docs.add(getDoc(id, Integer.toString(j)));\n        }\n        index(SOURCE_COLLECTION, docs);\n        numDocs.getAndAdd(10);\n        if (log.isInfoEnabled()) {\n          log.info(\"Sent batch of {} updates - numDocs:{}\", docs.size(), numDocs);\n        }\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int j = numDocs.get(); j < (numDocs.get() + 10); j++) {\n          docs.add(getDoc(id, Integer.toString(j)));\n        }\n        index(SOURCE_COLLECTION, docs);\n        numDocs.getAndAdd(10);\n        log.info(\"Sent batch of {} updates - numDocs:{}\", docs.size(), numDocs);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1","date":1598647393,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/cdcr/CdcrReplicationHandlerTest.UpdateThread#run().mjava","sourceNew":null,"sourceOld":"    @Override\n    public void run() {\n      try {\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int j = numDocs.get(); j < (numDocs.get() + 10); j++) {\n          docs.add(getDoc(id, Integer.toString(j)));\n        }\n        index(SOURCE_COLLECTION, docs);\n        numDocs.getAndAdd(10);\n        if (log.isInfoEnabled()) {\n          log.info(\"Sent batch of {} updates - numDocs:{}\", docs.size(), numDocs);\n        }\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fba58147c9753bb58bbfbd2ebbbf02aecc1eafde":["1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d"],"e7da9d8536c11576df10e348efa79d2739170936":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d","fba58147c9753bb58bbfbd2ebbbf02aecc1eafde"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d":["e7da9d8536c11576df10e348efa79d2739170936"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"]},"commit2Childs":{"fba58147c9753bb58bbfbd2ebbbf02aecc1eafde":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"e7da9d8536c11576df10e348efa79d2739170936":["1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e7da9d8536c11576df10e348efa79d2739170936"],"1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d":["fba58147c9753bb58bbfbd2ebbbf02aecc1eafde","d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}