{"path":"lucene/replicator/src/test/org/apache/lucene/replicator/http/HttpReplicatorTest#testBasic().mjava","commits":[{"id":"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4","date":1368446242,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/http/HttpReplicatorTest#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    Replicator replicator = new HttpReplicator(\"localhost\", port, ReplicationService.REPLICATION_CONTEXT + \"/s1\", \n        getClientConnectionManager());\n    ReplicationClient client = new ReplicationClient(replicator, new IndexReplicationHandler(handlerIndexDir, null), \n        new PerSessionDirectoryFactory(clientWorkDir));\n    \n    publishRevision(1);\n    client.updateNow();\n    reopenReader();\n    assertEquals(1, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n    \n    publishRevision(2);\n    client.updateNow();\n    reopenReader();\n    assertEquals(2, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7717649ac128ca314864de01901cb43d3f6dfb9c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7717649ac128ca314864de01901cb43d3f6dfb9c","date":1370526098,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/http/HttpReplicatorTest#testBasic().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/http/HttpReplicatorTest#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    Replicator replicator = new HttpReplicator(\"127.0.0.1\", port, ReplicationService.REPLICATION_CONTEXT + \"/s1\", \n        getClientConnectionManager());\n    ReplicationClient client = new ReplicationClient(replicator, new IndexReplicationHandler(handlerIndexDir, null), \n        new PerSessionDirectoryFactory(clientWorkDir));\n    \n    publishRevision(1);\n    client.updateNow();\n    reopenReader();\n    assertEquals(1, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n    \n    publishRevision(2);\n    client.updateNow();\n    reopenReader();\n    assertEquals(2, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    Replicator replicator = new HttpReplicator(\"localhost\", port, ReplicationService.REPLICATION_CONTEXT + \"/s1\", \n        getClientConnectionManager());\n    ReplicationClient client = new ReplicationClient(replicator, new IndexReplicationHandler(handlerIndexDir, null), \n        new PerSessionDirectoryFactory(clientWorkDir));\n    \n    publishRevision(1);\n    client.updateNow();\n    reopenReader();\n    assertEquals(1, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n    \n    publishRevision(2);\n    client.updateNow();\n    reopenReader();\n    assertEquals(2, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n  }\n\n","bugFix":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a24fea310df9cea4d9ebac5fdd142543ebff02ef","date":1370754068,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/http/HttpReplicatorTest#testBasic().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/http/HttpReplicatorTest#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    Replicator replicator = new HttpReplicator(host, port, ReplicationService.REPLICATION_CONTEXT + \"/s1\", \n        getClientConnectionManager());\n    ReplicationClient client = new ReplicationClient(replicator, new IndexReplicationHandler(handlerIndexDir, null), \n        new PerSessionDirectoryFactory(clientWorkDir));\n    \n    publishRevision(1);\n    client.updateNow();\n    reopenReader();\n    assertEquals(1, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n    \n    publishRevision(2);\n    client.updateNow();\n    reopenReader();\n    assertEquals(2, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    Replicator replicator = new HttpReplicator(\"127.0.0.1\", port, ReplicationService.REPLICATION_CONTEXT + \"/s1\", \n        getClientConnectionManager());\n    ReplicationClient client = new ReplicationClient(replicator, new IndexReplicationHandler(handlerIndexDir, null), \n        new PerSessionDirectoryFactory(clientWorkDir));\n    \n    publishRevision(1);\n    client.updateNow();\n    reopenReader();\n    assertEquals(1, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n    \n    publishRevision(2);\n    client.updateNow();\n    reopenReader();\n    assertEquals(2, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/http/HttpReplicatorTest#testBasic().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/http/HttpReplicatorTest#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    Replicator replicator = new HttpReplicator(host, port, ReplicationService.REPLICATION_CONTEXT + \"/s1\", \n        getClientConnectionManager());\n    ReplicationClient client = new ReplicationClient(replicator, new IndexReplicationHandler(handlerIndexDir, null), \n        new PerSessionDirectoryFactory(clientWorkDir));\n    \n    publishRevision(1);\n    client.updateNow();\n    reopenReader();\n    assertEquals(1, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n    \n    publishRevision(2);\n    client.updateNow();\n    reopenReader();\n    assertEquals(2, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    Replicator replicator = new HttpReplicator(host, port, ReplicationService.REPLICATION_CONTEXT + \"/s1\", \n        getClientConnectionManager());\n    ReplicationClient client = new ReplicationClient(replicator, new IndexReplicationHandler(handlerIndexDir, null), \n        new PerSessionDirectoryFactory(clientWorkDir));\n    \n    publishRevision(1);\n    client.updateNow();\n    reopenReader();\n    assertEquals(1, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n    \n    publishRevision(2);\n    client.updateNow();\n    reopenReader();\n    assertEquals(2, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/http/HttpReplicatorTest#testBasic().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/http/HttpReplicatorTest#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    Replicator replicator = new HttpReplicator(host, port, ReplicationService.REPLICATION_CONTEXT + \"/s1\", \n        getClientConnectionManager());\n    ReplicationClient client = new ReplicationClient(replicator, new IndexReplicationHandler(handlerIndexDir, null), \n        new PerSessionDirectoryFactory(clientWorkDir));\n    \n    publishRevision(1);\n    client.updateNow();\n    reopenReader();\n    assertEquals(1, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n    \n    publishRevision(2);\n    client.updateNow();\n    reopenReader();\n    assertEquals(2, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    Replicator replicator = new HttpReplicator(host, port, ReplicationService.REPLICATION_CONTEXT + \"/s1\", \n        getClientConnectionManager());\n    ReplicationClient client = new ReplicationClient(replicator, new IndexReplicationHandler(handlerIndexDir, null), \n        new PerSessionDirectoryFactory(clientWorkDir));\n    \n    publishRevision(1);\n    client.updateNow();\n    reopenReader();\n    assertEquals(1, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n    \n    publishRevision(2);\n    client.updateNow();\n    reopenReader();\n    assertEquals(2, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9462128d6aef6f10f721e3635944ede9327665c","date":1397750801,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/http/HttpReplicatorTest#testBasic().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/http/HttpReplicatorTest#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    Replicator replicator = new HttpReplicator(host, port, ReplicationService.REPLICATION_CONTEXT + \"/s1\", \n        getClientConnectionManager());\n    ReplicationClient client = new ReplicationClient(replicator, new IndexReplicationHandler(handlerIndexDir, null), \n        new PerSessionDirectoryFactory(clientWorkDir));\n    \n    publishRevision(1);\n    client.updateNow();\n    reopenReader();\n    assertEquals(1, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n    \n    publishRevision(2);\n    client.updateNow();\n    reopenReader();\n    assertEquals(2, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n    \n    client.close();\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    Replicator replicator = new HttpReplicator(host, port, ReplicationService.REPLICATION_CONTEXT + \"/s1\", \n        getClientConnectionManager());\n    ReplicationClient client = new ReplicationClient(replicator, new IndexReplicationHandler(handlerIndexDir, null), \n        new PerSessionDirectoryFactory(clientWorkDir));\n    \n    publishRevision(1);\n    client.updateNow();\n    reopenReader();\n    assertEquals(1, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n    \n    publishRevision(2);\n    client.updateNow();\n    reopenReader();\n    assertEquals(2, Integer.parseInt(reader.getIndexCommit().getUserData().get(\"ID\"), 16));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7717649ac128ca314864de01901cb43d3f6dfb9c":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"f9462128d6aef6f10f721e3635944ede9327665c":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["a24fea310df9cea4d9ebac5fdd142543ebff02ef"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["a24fea310df9cea4d9ebac5fdd142543ebff02ef"],"a24fea310df9cea4d9ebac5fdd142543ebff02ef":["7717649ac128ca314864de01901cb43d3f6dfb9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f9462128d6aef6f10f721e3635944ede9327665c"]},"commit2Childs":{"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4":["7717649ac128ca314864de01901cb43d3f6dfb9c"],"7717649ac128ca314864de01901cb43d3f6dfb9c":["a24fea310df9cea4d9ebac5fdd142543ebff02ef"],"f9462128d6aef6f10f721e3635944ede9327665c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["f9462128d6aef6f10f721e3635944ede9327665c"],"a24fea310df9cea4d9ebac5fdd142543ebff02ef":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}