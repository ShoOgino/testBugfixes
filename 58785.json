{"path":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#waitForNon403or404or503(HttpSolrServer).mjava","commits":[{"id":"0eff89b16ebd0046c839c5d02ee44500be5c7886","date":1355766557,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#waitForNon403or404or503(HttpSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#waitForNon403or404or503(HttpSolrServer).mjava","sourceNew":"  private void waitForNon403or404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n    \n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","sourceOld":"  private void waitForNon403or404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n    \n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#waitForNon403or404or503(HttpSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#waitForNon403or404or503(HttpSolrServer).mjava","sourceNew":"  private void waitForNon403or404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n    \n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","sourceOld":"  private void waitForNon403or404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n    \n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"40dce2b6d4360eb09fa16fb6c40a18b25507ed73","date":1383035822,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForNon403or404or503(HttpSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#waitForNon403or404or503(HttpSolrServer).mjava","sourceNew":" public  static void waitForNon403or404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n\n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","sourceOld":"  private void waitForNon403or404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n    \n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0eff89b16ebd0046c839c5d02ee44500be5c7886"],"0eff89b16ebd0046c839c5d02ee44500be5c7886":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"40dce2b6d4360eb09fa16fb6c40a18b25507ed73":["0eff89b16ebd0046c839c5d02ee44500be5c7886"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["40dce2b6d4360eb09fa16fb6c40a18b25507ed73"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","0eff89b16ebd0046c839c5d02ee44500be5c7886"],"0eff89b16ebd0046c839c5d02ee44500be5c7886":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","40dce2b6d4360eb09fa16fb6c40a18b25507ed73"],"40dce2b6d4360eb09fa16fb6c40a18b25507ed73":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}