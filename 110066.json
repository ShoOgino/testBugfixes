{"path":"contrib/memory/src/test/org/apache/lucene/index/memory/PatternAnalyzerTest#testCustomPattern().mjava","commits":[{"id":"30efa0465403f867cd67289e0668f667ac2d42e9","date":1255523608,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/memory/src/test/org/apache/lucene/index/memory/PatternAnalyzerTest#testCustomPattern().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test PatternAnalyzer when it is configured with a custom pattern. In this\n   * case, text is tokenized on the comma \",\"\n   */\n  public void testCustomPattern() throws IOException {\n    // Split on comma, do not lowercase, no stopwords\n    PatternAnalyzer a = new PatternAnalyzer(Pattern.compile(\",\"), false, null);\n    check(a, \"Here,Are,some,Comma,separated,words,\", new String[] { \"Here\",\n        \"Are\", \"some\", \"Comma\", \"separated\", \"words\" });\n\n    // split on comma, lowercase, english stopwords\n    PatternAnalyzer b = new PatternAnalyzer(Pattern.compile(\",\"), true,\n        StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n    check(b, \"Here,Are,some,Comma,separated,words,\", new String[] { \"here\",\n        \"some\", \"comma\", \"separated\", \"words\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/memory/src/test/org/apache/lucene/index/memory/PatternAnalyzerTest#testCustomPattern().mjava","pathOld":"contrib/memory/src/test/org/apache/lucene/index/memory/PatternAnalyzerTest#testCustomPattern().mjava","sourceNew":"  /**\n   * Test PatternAnalyzer when it is configured with a custom pattern. In this\n   * case, text is tokenized on the comma \",\"\n   */\n  public void testCustomPattern() throws IOException {\n    // Split on comma, do not lowercase, no stopwords\n    PatternAnalyzer a = new PatternAnalyzer(Version.LUCENE_CURRENT, Pattern.compile(\",\"), false, null);\n    check(a, \"Here,Are,some,Comma,separated,words,\", new String[] { \"Here\",\n        \"Are\", \"some\", \"Comma\", \"separated\", \"words\" });\n\n    // split on comma, lowercase, english stopwords\n    PatternAnalyzer b = new PatternAnalyzer(Version.LUCENE_CURRENT, Pattern.compile(\",\"), true,\n        StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n    check(b, \"Here,Are,some,Comma,separated,words,\", new String[] { \"here\",\n        \"some\", \"comma\", \"separated\", \"words\" });\n  }\n\n","sourceOld":"  /**\n   * Test PatternAnalyzer when it is configured with a custom pattern. In this\n   * case, text is tokenized on the comma \",\"\n   */\n  public void testCustomPattern() throws IOException {\n    // Split on comma, do not lowercase, no stopwords\n    PatternAnalyzer a = new PatternAnalyzer(Pattern.compile(\",\"), false, null);\n    check(a, \"Here,Are,some,Comma,separated,words,\", new String[] { \"Here\",\n        \"Are\", \"some\", \"Comma\", \"separated\", \"words\" });\n\n    // split on comma, lowercase, english stopwords\n    PatternAnalyzer b = new PatternAnalyzer(Pattern.compile(\",\"), true,\n        StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n    check(b, \"Here,Are,some,Comma,separated,words,\", new String[] { \"here\",\n        \"some\", \"comma\", \"separated\", \"words\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d8c222875ac4ef7e08f3e25d40508b821d711ff","date":1257374221,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testCustomPattern().mjava","pathOld":"contrib/memory/src/test/org/apache/lucene/index/memory/PatternAnalyzerTest#testCustomPattern().mjava","sourceNew":"  /**\n   * Test PatternAnalyzer when it is configured with a custom pattern. In this\n   * case, text is tokenized on the comma \",\"\n   */\n  public void testCustomPattern() throws IOException {\n    // Split on comma, do not lowercase, no stopwords\n    PatternAnalyzer a = new PatternAnalyzer(Version.LUCENE_CURRENT, Pattern.compile(\",\"), false, null);\n    check(a, \"Here,Are,some,Comma,separated,words,\", new String[] { \"Here\",\n        \"Are\", \"some\", \"Comma\", \"separated\", \"words\" });\n\n    // split on comma, lowercase, english stopwords\n    PatternAnalyzer b = new PatternAnalyzer(Version.LUCENE_CURRENT, Pattern.compile(\",\"), true,\n        StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n    check(b, \"Here,Are,some,Comma,separated,words,\", new String[] { \"here\",\n        \"some\", \"comma\", \"separated\", \"words\" });\n  }\n\n","sourceOld":"  /**\n   * Test PatternAnalyzer when it is configured with a custom pattern. In this\n   * case, text is tokenized on the comma \",\"\n   */\n  public void testCustomPattern() throws IOException {\n    // Split on comma, do not lowercase, no stopwords\n    PatternAnalyzer a = new PatternAnalyzer(Version.LUCENE_CURRENT, Pattern.compile(\",\"), false, null);\n    check(a, \"Here,Are,some,Comma,separated,words,\", new String[] { \"Here\",\n        \"Are\", \"some\", \"Comma\", \"separated\", \"words\" });\n\n    // split on comma, lowercase, english stopwords\n    PatternAnalyzer b = new PatternAnalyzer(Version.LUCENE_CURRENT, Pattern.compile(\",\"), true,\n        StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n    check(b, \"Here,Are,some,Comma,separated,words,\", new String[] { \"here\",\n        \"some\", \"comma\", \"separated\", \"words\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"30efa0465403f867cd67289e0668f667ac2d42e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0d8c222875ac4ef7e08f3e25d40508b821d711ff":["ba1116b3450a9c1642c89445d131b37344055245"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d8c222875ac4ef7e08f3e25d40508b821d711ff"],"ba1116b3450a9c1642c89445d131b37344055245":["30efa0465403f867cd67289e0668f667ac2d42e9"]},"commit2Childs":{"30efa0465403f867cd67289e0668f667ac2d42e9":["ba1116b3450a9c1642c89445d131b37344055245"],"0d8c222875ac4ef7e08f3e25d40508b821d711ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30efa0465403f867cd67289e0668f667ac2d42e9"],"ba1116b3450a9c1642c89445d131b37344055245":["0d8c222875ac4ef7e08f3e25d40508b821d711ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}