{"path":"src/java/org/apache/lucene/index/NewIndexModifier#updateDocument(Term,Document,Analyzer).mjava","commits":[{"id":"6b772434f9f358356f8eedc2e017b9ddfb2615ec","date":1170327312,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/NewIndexModifier#updateDocument(Term,Document,Analyzer).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Updates a document by first deleting all documents containing\n   * <code>term</code> and then adding the new document.\n   */\n  public void updateDocument(Term term, Document doc, Analyzer analyzer)\n      throws IOException {\n    SegmentInfo newSegmentInfo = buildSingleDocSegment(doc, analyzer);\n    synchronized (this) {\n      bufferDeleteTerm(term);\n      ramSegmentInfos.addElement(newSegmentInfo);\n      maybeFlushRamSegments();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42a18cb0bca2c4ac9747f31c7a74fac90c661f39","date":1171363388,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#updateDocument(Term,Document,Analyzer).mjava","pathOld":"src/java/org/apache/lucene/index/NewIndexModifier#updateDocument(Term,Document,Analyzer).mjava","sourceNew":"  /**\n   * Updates a document by first deleting the document(s)\n   * containing <code>term</code> and then adding the new\n   * document.  The delete and then add are atomic as seen\n   * by a reader on the same index (flush may happen only after\n   * the add).\n   * @param term the term to identify the document(s) to be\n   * deleted\n   * @param doc the document to be added\n   * @param analyzer the analyzer to use when analyzing the document\n   */\n  public void updateDocument(Term term, Document doc, Analyzer analyzer)\n      throws IOException {\n    SegmentInfo newSegmentInfo = buildSingleDocSegment(doc, analyzer);\n    synchronized (this) {\n      bufferDeleteTerm(term);\n      ramSegmentInfos.addElement(newSegmentInfo);\n      maybeFlushRamSegments();\n    }\n  }\n\n","sourceOld":"  /**\n   * Updates a document by first deleting all documents containing\n   * <code>term</code> and then adding the new document.\n   */\n  public void updateDocument(Term term, Document doc, Analyzer analyzer)\n      throws IOException {\n    SegmentInfo newSegmentInfo = buildSingleDocSegment(doc, analyzer);\n    synchronized (this) {\n      bufferDeleteTerm(term);\n      ramSegmentInfos.addElement(newSegmentInfo);\n      maybeFlushRamSegments();\n    }\n  }\n\n","bugFix":null,"bugIntro":["fde68de507dbf344495d7b5e8052866fe5f254ab","1b54a9bc667895a2095a886184bf69a3179e63df"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"42a18cb0bca2c4ac9747f31c7a74fac90c661f39":["6b772434f9f358356f8eedc2e017b9ddfb2615ec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["42a18cb0bca2c4ac9747f31c7a74fac90c661f39"],"6b772434f9f358356f8eedc2e017b9ddfb2615ec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"42a18cb0bca2c4ac9747f31c7a74fac90c661f39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6b772434f9f358356f8eedc2e017b9ddfb2615ec"],"6b772434f9f358356f8eedc2e017b9ddfb2615ec":["42a18cb0bca2c4ac9747f31c7a74fac90c661f39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}