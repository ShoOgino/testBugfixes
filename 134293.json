{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testEBEAdd().mjava","commits":[{"id":"a9850a2db59025ba8cb15c4fd7ab3bb1faa151f1","date":1504564803,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testEBEAdd().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testEBEAdd() throws Exception {\n    String cexpr = \"ebeAdd(array(2,4,6,8,10,12),array(1,2,3,4,5,6))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 6);\n    assertTrue(out.get(0).intValue() == 3);\n    assertTrue(out.get(1).intValue() == 6);\n    assertTrue(out.get(2).intValue() == 9);\n    assertTrue(out.get(3).intValue() == 12);\n    assertTrue(out.get(4).intValue() == 15);\n    assertTrue(out.get(5).intValue() == 18);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21283ed01203901a7257aa4b7f0a0899c86e56e","date":1504689720,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testEBEAdd().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testEBEAdd() throws Exception {\n    String cexpr = \"ebeAdd(array(2,4,6,8,10,12),array(1,2,3,4,5,6))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 6);\n    assertTrue(out.get(0).intValue() == 3);\n    assertTrue(out.get(1).intValue() == 6);\n    assertTrue(out.get(2).intValue() == 9);\n    assertTrue(out.get(3).intValue() == 12);\n    assertTrue(out.get(4).intValue() == 15);\n    assertTrue(out.get(5).intValue() == 18);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"104a3f62ee393d48b5596de76ed4d9a4e0ea6de7","date":1504848000,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testEBEAdd().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testEBEAdd() throws Exception {\n    String cexpr = \"ebeAdd(array(2,4,6,8,10,12),array(1,2,3,4,5,6))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 6);\n    assertTrue(out.get(0).intValue() == 3);\n    assertTrue(out.get(1).intValue() == 6);\n    assertTrue(out.get(2).intValue() == 9);\n    assertTrue(out.get(3).intValue() == 12);\n    assertTrue(out.get(4).intValue() == 15);\n    assertTrue(out.get(5).intValue() == 18);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"685bd38810c206c93e9058f3c2cfa9827c086c27","date":1505751821,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testEBEAdd().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testEBEAdd() throws Exception {\n    String cexpr = \"ebeAdd(array(2,4,6,8,10,12),array(1,2,3,4,5,6))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 6);\n    assertTrue(out.get(0).intValue() == 3);\n    assertTrue(out.get(1).intValue() == 6);\n    assertTrue(out.get(2).intValue() == 9);\n    assertTrue(out.get(3).intValue() == 12);\n    assertTrue(out.get(4).intValue() == 15);\n    assertTrue(out.get(5).intValue() == 18);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b78a448aeee9df343bca8f8c7be779c0185a2fa0","date":1520212953,"type":4,"author":"Joel Bernstein","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testEBEAdd().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testEBEAdd() throws Exception {\n    String cexpr = \"ebeAdd(array(2,4,6,8,10,12),array(1,2,3,4,5,6))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 6);\n    assertTrue(out.get(0).intValue() == 3);\n    assertTrue(out.get(1).intValue() == 6);\n    assertTrue(out.get(2).intValue() == 9);\n    assertTrue(out.get(3).intValue() == 12);\n    assertTrue(out.get(4).intValue() == 15);\n    assertTrue(out.get(5).intValue() == 18);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b21283ed01203901a7257aa4b7f0a0899c86e56e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a9850a2db59025ba8cb15c4fd7ab3bb1faa151f1"],"685bd38810c206c93e9058f3c2cfa9827c086c27":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","104a3f62ee393d48b5596de76ed4d9a4e0ea6de7"],"104a3f62ee393d48b5596de76ed4d9a4e0ea6de7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b21283ed01203901a7257aa4b7f0a0899c86e56e"],"a9850a2db59025ba8cb15c4fd7ab3bb1faa151f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b78a448aeee9df343bca8f8c7be779c0185a2fa0":["104a3f62ee393d48b5596de76ed4d9a4e0ea6de7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b78a448aeee9df343bca8f8c7be779c0185a2fa0"]},"commit2Childs":{"b21283ed01203901a7257aa4b7f0a0899c86e56e":["104a3f62ee393d48b5596de76ed4d9a4e0ea6de7"],"685bd38810c206c93e9058f3c2cfa9827c086c27":[],"104a3f62ee393d48b5596de76ed4d9a4e0ea6de7":["685bd38810c206c93e9058f3c2cfa9827c086c27","b78a448aeee9df343bca8f8c7be779c0185a2fa0"],"a9850a2db59025ba8cb15c4fd7ab3bb1faa151f1":["b21283ed01203901a7257aa4b7f0a0899c86e56e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b21283ed01203901a7257aa4b7f0a0899c86e56e","685bd38810c206c93e9058f3c2cfa9827c086c27","104a3f62ee393d48b5596de76ed4d9a4e0ea6de7","a9850a2db59025ba8cb15c4fd7ab3bb1faa151f1"],"b78a448aeee9df343bca8f8c7be779c0185a2fa0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["685bd38810c206c93e9058f3c2cfa9827c086c27","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}