{"path":"lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer.ReqMultiOptScorer#score().mjava","commits":[{"id":"d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240","date":1400613895,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer.ReqMultiOptScorer#score().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public float score() throws IOException {\n      int curDoc = reqScorer.docID();\n      float reqScore = reqScorer.score();\n      if (optScorer == null) {\n        return reqScore * coords[requiredCount];\n      }\n      \n      int optScorerDoc = optScorer.docID();\n      if (optScorerDoc < curDoc && (optScorerDoc = optScorer.advance(curDoc)) == NO_MORE_DOCS) {\n        optScorer = null;\n        return reqScore * coords[requiredCount];\n      }\n      \n      return optScorerDoc == curDoc ? (reqScore + optScorer.score()) * coords[requiredCount + disjunction.freq()] : reqScore * coords[requiredCount];\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a74e723ad6f1491f36039f9fe6af13a530f8135d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"060a4836b54f1e7e79ea6493cda5dc3030d3fb0e","date":1400639845,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanTopLevelScorers.ReqMultiOptScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer.ReqMultiOptScorer#score().mjava","sourceNew":"    @Override\n    public float score() throws IOException {\n      int curDoc = reqScorer.docID();\n      float reqScore = reqScorer.score();\n      if (optScorer == null) {\n        return reqScore * coords[requiredCount];\n      }\n      \n      int optScorerDoc = optScorer.docID();\n      if (optScorerDoc < curDoc && (optScorerDoc = optScorer.advance(curDoc)) == NO_MORE_DOCS) {\n        optScorer = null;\n        return reqScore * coords[requiredCount];\n      }\n      \n      return optScorerDoc == curDoc ? (reqScore + optScorer.score()) * coords[requiredCount + disjunction.freq()] : reqScore * coords[requiredCount];\n    }\n\n","sourceOld":"    @Override\n    public float score() throws IOException {\n      int curDoc = reqScorer.docID();\n      float reqScore = reqScorer.score();\n      if (optScorer == null) {\n        return reqScore * coords[requiredCount];\n      }\n      \n      int optScorerDoc = optScorer.docID();\n      if (optScorerDoc < curDoc && (optScorerDoc = optScorer.advance(curDoc)) == NO_MORE_DOCS) {\n        optScorer = null;\n        return reqScore * coords[requiredCount];\n      }\n      \n      return optScorerDoc == curDoc ? (reqScore + optScorer.score()) * coords[requiredCount + disjunction.freq()] : reqScore * coords[requiredCount];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"060a4836b54f1e7e79ea6493cda5dc3030d3fb0e":["d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240":["060a4836b54f1e7e79ea6493cda5dc3030d3fb0e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"060a4836b54f1e7e79ea6493cda5dc3030d3fb0e":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["060a4836b54f1e7e79ea6493cda5dc3030d3fb0e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}