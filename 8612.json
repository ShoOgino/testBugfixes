{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#SimDistribStateManager(Node).mjava","commits":[{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#SimDistribStateManager(Node).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Construct new state manager that uses provided root node for storing data.\n   * @param root if null then a new root node will be created.\n   */\n  public SimDistribStateManager(Node root) {\n    this.id = IdUtils.timeRandomId();\n    this.root = root != null ? root : createNewRootNode();\n    watchersPool = ExecutorUtil.newMDCAwareFixedThreadPool(10, new DefaultSolrThreadFactory(\"sim-watchers\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc18bc8ea2e2c1e308757ff50671c774438e9f3e","date":1538052583,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#SimDistribStateManager(Node).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#SimDistribStateManager(Node).mjava","sourceNew":"  /**\n   * Construct new state manager that uses provided root node for storing data.\n   * @param root if null then a new root node will be created.\n   */\n  public SimDistribStateManager(Node root) {\n    this.id = IdUtils.timeRandomId();\n    this.root = root != null ? root : createNewRootNode();\n    watchersPool = ExecutorUtil.newMDCAwareFixedThreadPool(10, new DefaultSolrThreadFactory(\"sim-watchers\"));\n    String bufferSize = System.getProperty(\"jute.maxbuffer\", Integer.toString(0xffffff));\n    juteMaxbuffer = Integer.parseInt(bufferSize);\n  }\n\n","sourceOld":"  /**\n   * Construct new state manager that uses provided root node for storing data.\n   * @param root if null then a new root node will be created.\n   */\n  public SimDistribStateManager(Node root) {\n    this.id = IdUtils.timeRandomId();\n    this.root = root != null ? root : createNewRootNode();\n    watchersPool = ExecutorUtil.newMDCAwareFixedThreadPool(10, new DefaultSolrThreadFactory(\"sim-watchers\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5","date":1556572478,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#SimDistribStateManager(Node).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#SimDistribStateManager(Node).mjava","sourceNew":"  /**\n   * Construct new state manager that uses provided root node for storing data.\n   * @param root if null then a new root node will be created.\n   */\n  public SimDistribStateManager(Node root) {\n    this.id = IdUtils.timeRandomId();\n    this.root = root != null ? root : createNewRootNode();\n    watchersPool = ExecutorUtil.newMDCAwareFixedThreadPool(10, new DefaultSolrThreadFactory(\"sim-watchers\"));\n    String bufferSize = System.getProperty(\"jute.maxbuffer\", Integer.toString(0xffffff));\n    juteMaxbuffer = Integer.parseInt(bufferSize);\n  }\n\n","sourceOld":"  /**\n   * Construct new state manager that uses provided root node for storing data.\n   * @param root if null then a new root node will be created.\n   */\n  public SimDistribStateManager(Node root) {\n    this.id = IdUtils.timeRandomId();\n    this.root = root != null ? root : createNewRootNode();\n    watchersPool = ExecutorUtil.newMDCAwareFixedThreadPool(10, new DefaultSolrThreadFactory(\"sim-watchers\"));\n    String bufferSize = System.getProperty(\"jute.maxbuffer\", Integer.toString(0xffffff));\n    juteMaxbuffer = Integer.parseInt(bufferSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fc18bc8ea2e2c1e308757ff50671c774438e9f3e":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["fc18bc8ea2e2c1e308757ff50671c774438e9f3e"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"]},"commit2Childs":{"fc18bc8ea2e2c1e308757ff50671c774438e9f3e":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["fc18bc8ea2e2c1e308757ff50671c774438e9f3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}