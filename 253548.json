{"path":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineZkTestBase#uploadConfFiles(SolrZkClient,File,String).mjava","commits":[{"id":"a475a1c165e02515bff766b3b7be0c42edf1870c","date":1393099333,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineZkTestBase#uploadConfFiles(SolrZkClient,File,String).mjava","pathOld":"/dev/null","sourceNew":"  private void uploadConfFiles(SolrZkClient zkClient, File dir, String prefix) throws Exception {\n    boolean found = false;\n    for (File f : dir.listFiles()) {\n      String name = f.getName();\n      if (name.startsWith(\".\")) continue;\n      if (f.isFile()) {\n        putConfig(zkClient, prefix + name);\n        found = true;\n      } else if (f.isDirectory()) {\n        uploadConfFiles(zkClient, new File(dir, name), prefix + name + \"/\");\n      }\n    }\n    assertTrue(\"Config folder '\" + dir + \"' with files to upload to zookeeper was empty.\", found);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71f7220f5dc230b647fdb53a465d5abf894c4d1e","date":1463146747,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineZkTestBase#uploadConfFiles(SolrZkClient,File,String).mjava","sourceNew":null,"sourceOld":"  private void uploadConfFiles(SolrZkClient zkClient, File dir, String prefix) throws Exception {\n    boolean found = false;\n    for (File f : dir.listFiles()) {\n      String name = f.getName();\n      if (name.startsWith(\".\")) continue;\n      if (f.isFile()) {\n        putConfig(zkClient, prefix + name);\n        found = true;\n      } else if (f.isDirectory()) {\n        uploadConfFiles(zkClient, new File(dir, name), prefix + name + \"/\");\n      }\n    }\n    assertTrue(\"Config folder '\" + dir + \"' with files to upload to zookeeper was empty.\", found);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineZkTestBase#uploadConfFiles(SolrZkClient,File,String).mjava","sourceNew":null,"sourceOld":"  private void uploadConfFiles(SolrZkClient zkClient, File dir, String prefix) throws Exception {\n    boolean found = false;\n    for (File f : dir.listFiles()) {\n      String name = f.getName();\n      if (name.startsWith(\".\")) continue;\n      if (f.isFile()) {\n        putConfig(zkClient, prefix + name);\n        found = true;\n      } else if (f.isDirectory()) {\n        uploadConfFiles(zkClient, new File(dir, name), prefix + name + \"/\");\n      }\n    }\n    assertTrue(\"Config folder '\" + dir + \"' with files to upload to zookeeper was empty.\", found);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineZkTestBase#uploadConfFiles(SolrZkClient,File,String).mjava","sourceNew":null,"sourceOld":"  private void uploadConfFiles(SolrZkClient zkClient, File dir, String prefix) throws Exception {\n    boolean found = false;\n    for (File f : dir.listFiles()) {\n      String name = f.getName();\n      if (name.startsWith(\".\")) continue;\n      if (f.isFile()) {\n        putConfig(zkClient, prefix + name);\n        found = true;\n      } else if (f.isDirectory()) {\n        uploadConfFiles(zkClient, new File(dir, name), prefix + name + \"/\");\n      }\n    }\n    assertTrue(\"Config folder '\" + dir + \"' with files to upload to zookeeper was empty.\", found);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineZkTestBase#uploadConfFiles(SolrZkClient,File,String).mjava","sourceNew":null,"sourceOld":"  private void uploadConfFiles(SolrZkClient zkClient, File dir, String prefix) throws Exception {\n    boolean found = false;\n    for (File f : dir.listFiles()) {\n      String name = f.getName();\n      if (name.startsWith(\".\")) continue;\n      if (f.isFile()) {\n        putConfig(zkClient, prefix + name);\n        found = true;\n      } else if (f.isDirectory()) {\n        uploadConfFiles(zkClient, new File(dir, name), prefix + name + \"/\");\n      }\n    }\n    assertTrue(\"Config folder '\" + dir + \"' with files to upload to zookeeper was empty.\", found);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a475a1c165e02515bff766b3b7be0c42edf1870c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"71f7220f5dc230b647fdb53a465d5abf894c4d1e":["a475a1c165e02515bff766b3b7be0c42edf1870c"],"0ad30c6a479e764150a3316e57263319775f1df2":["a475a1c165e02515bff766b3b7be0c42edf1870c","71f7220f5dc230b647fdb53a465d5abf894c4d1e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a475a1c165e02515bff766b3b7be0c42edf1870c","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a475a1c165e02515bff766b3b7be0c42edf1870c","0ad30c6a479e764150a3316e57263319775f1df2"]},"commit2Childs":{"a475a1c165e02515bff766b3b7be0c42edf1870c":["71f7220f5dc230b647fdb53a465d5abf894c4d1e","0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a475a1c165e02515bff766b3b7be0c42edf1870c"],"71f7220f5dc230b647fdb53a465d5abf894c4d1e":["0ad30c6a479e764150a3316e57263319775f1df2"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}