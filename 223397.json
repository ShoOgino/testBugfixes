{"path":"src/java/org/apache/lucene/search/ScoreDocComparator#compare(ScoreDoc,ScoreDoc).mjava","commits":[{"id":"c6691cb6747f9e850337c706c06b92e9ddf816e1","date":1077044431,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/ScoreDocComparator#compare(ScoreDoc,ScoreDoc).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Compares two ScoreDoc objects and returns a result indicating their\n\t * sort order.\n\t * @param i First ScoreDoc\n\t * @param j Second ScoreDoc\n\t * @return <code>-1</code> if <code>i</code> should come before <code>j</code><br><code>1</code> if <code>i</code> should come after <code>j</code><br><code>0</code> if they are equal\n\t * @see java.util.Comparator\n\t */\n\tint compare (ScoreDoc i, ScoreDoc j);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a41c31a36c79901b13b5c22c710b2957f43f569","date":1172744476,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/ScoreDocComparator#compare(ScoreDoc,ScoreDoc).mjava","pathOld":"src/java/org/apache/lucene/search/ScoreDocComparator#compare(ScoreDoc,ScoreDoc).mjava","sourceNew":"\t/**\n\t * Compares two ScoreDoc objects and returns a result indicating their\n\t * sort order.\n\t * @param i First ScoreDoc\n\t * @param j Second ScoreDoc\n\t * @return <code>-1</code> if <code>i</code> should come before <code>j</code><br>\n     *         <code>1</code> if <code>i</code> should come after <code>j</code><br>\n     *         <code>0</code> if they are equal\n\t * @see java.util.Comparator\n\t */\n\tint compare (ScoreDoc i, ScoreDoc j);\n\n","sourceOld":"\t/**\n\t * Compares two ScoreDoc objects and returns a result indicating their\n\t * sort order.\n\t * @param i First ScoreDoc\n\t * @param j Second ScoreDoc\n\t * @return <code>-1</code> if <code>i</code> should come before <code>j</code><br><code>1</code> if <code>i</code> should come after <code>j</code><br><code>0</code> if they are equal\n\t * @see java.util.Comparator\n\t */\n\tint compare (ScoreDoc i, ScoreDoc j);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b89146fa32585e23b811f2b7401d739aac5c9e7","date":1173948480,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/ScoreDocComparator#compare(ScoreDoc,ScoreDoc).mjava","pathOld":"src/java/org/apache/lucene/search/ScoreDocComparator#compare(ScoreDoc,ScoreDoc).mjava","sourceNew":"\t/**\n\t * Compares two ScoreDoc objects and returns a result indicating their\n\t * sort order.\n\t * @param i First ScoreDoc\n\t * @param j Second ScoreDoc\n\t * @return a negative integer if <code>i</code> should come before <code>j</code><br>\n     *         a positive integer if <code>i</code> should come after <code>j</code><br>\n     *         <code>0</code> if they are equal\n\t * @see java.util.Comparator\n\t */\n\tint compare (ScoreDoc i, ScoreDoc j);\n\n","sourceOld":"\t/**\n\t * Compares two ScoreDoc objects and returns a result indicating their\n\t * sort order.\n\t * @param i First ScoreDoc\n\t * @param j Second ScoreDoc\n\t * @return <code>-1</code> if <code>i</code> should come before <code>j</code><br>\n     *         <code>1</code> if <code>i</code> should come after <code>j</code><br>\n     *         <code>0</code> if they are equal\n\t * @see java.util.Comparator\n\t */\n\tint compare (ScoreDoc i, ScoreDoc j);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ded38b25fe842ef1efc6715745bb8d8ed8e2fc99","date":1255432705,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/ScoreDocComparator#compare(ScoreDoc,ScoreDoc).mjava","sourceNew":null,"sourceOld":"\t/**\n\t * Compares two ScoreDoc objects and returns a result indicating their\n\t * sort order.\n\t * @param i First ScoreDoc\n\t * @param j Second ScoreDoc\n\t * @return a negative integer if <code>i</code> should come before <code>j</code><br>\n     *         a positive integer if <code>i</code> should come after <code>j</code><br>\n     *         <code>0</code> if they are equal\n\t * @see java.util.Comparator\n\t */\n\tint compare (ScoreDoc i, ScoreDoc j);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c6691cb6747f9e850337c706c06b92e9ddf816e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9b89146fa32585e23b811f2b7401d739aac5c9e7":["9a41c31a36c79901b13b5c22c710b2957f43f569"],"ded38b25fe842ef1efc6715745bb8d8ed8e2fc99":["9b89146fa32585e23b811f2b7401d739aac5c9e7"],"9a41c31a36c79901b13b5c22c710b2957f43f569":["c6691cb6747f9e850337c706c06b92e9ddf816e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ded38b25fe842ef1efc6715745bb8d8ed8e2fc99"]},"commit2Childs":{"c6691cb6747f9e850337c706c06b92e9ddf816e1":["9a41c31a36c79901b13b5c22c710b2957f43f569"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c6691cb6747f9e850337c706c06b92e9ddf816e1"],"9b89146fa32585e23b811f2b7401d739aac5c9e7":["ded38b25fe842ef1efc6715745bb8d8ed8e2fc99"],"9a41c31a36c79901b13b5c22c710b2957f43f569":["9b89146fa32585e23b811f2b7401d739aac5c9e7"],"ded38b25fe842ef1efc6715745bb8d8ed8e2fc99":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}