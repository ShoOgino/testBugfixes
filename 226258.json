{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mWS().mjava","commits":[{"id":"f18d4e1cdc7330101ca433af5e8564dfd894f2bf","date":1379041877,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mWS().mjava","pathOld":"/dev/null","sourceNew":"    // $ANTLR start \"WS\"\n    public final void mWS() throws RecognitionException {\n        try {\n            int _type = WS;\n            int _channel = DEFAULT_TOKEN_CHANNEL;\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:338:5: ( ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+ )\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:338:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n            {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:338:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n            int cnt2=0;\n            loop2:\n            do {\n                int alt2=2;\n                int LA2_0 = input.LA(1);\n\n                if ( ((LA2_0 >= '\\t' && LA2_0 <= '\\n')||LA2_0=='\\r'||LA2_0==' ') ) {\n                    alt2=1;\n                }\n\n\n                switch (alt2) {\n            \tcase 1 :\n            \t    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n            \t    {\n            \t    if ( (input.LA(1) >= '\\t' && input.LA(1) <= '\\n')||input.LA(1)=='\\r'||input.LA(1)==' ' ) {\n            \t        input.consume();\n            \t    }\n            \t    else {\n            \t        MismatchedSetException mse = new MismatchedSetException(null,input);\n            \t        recover(mse);\n            \t        throw mse;\n            \t    }\n\n\n            \t    }\n            \t    break;\n\n            \tdefault :\n            \t    if ( cnt2 >= 1 ) break loop2;\n                        EarlyExitException eee =\n                            new EarlyExitException(2, input);\n                        throw eee;\n                }\n                cnt2++;\n            } while (true);\n\n\n            skip();\n\n            }\n\n            state.type = _type;\n            state.channel = _channel;\n        }\n        finally {\n        \t// do for sure before leaving\n        }\n    }\n    // $ANTLR end \"WS\"\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3623d67605fbbdfce2fadea678e2f4bbe2ab2310","date":1379042933,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mWS().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mWS().mjava","sourceNew":"    // $ANTLR start \"WS\"\n    public final void mWS() throws RecognitionException {\n        try {\n            int _type = WS;\n            int _channel = DEFAULT_TOKEN_CHANNEL;\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:338:5: ( ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+ )\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:338:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n            {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:338:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n            int cnt2=0;\n            loop2:\n            do {\n                int alt2=2;\n                int LA2_0 = input.LA(1);\n\n                if ( ((LA2_0 >= '\\t' && LA2_0 <= '\\n')||LA2_0=='\\r'||LA2_0==' ') ) {\n                    alt2=1;\n                }\n\n\n                switch (alt2) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    {\n                    if ( (input.LA(1) >= '\\t' && input.LA(1) <= '\\n')||input.LA(1)=='\\r'||input.LA(1)==' ' ) {\n                        input.consume();\n                    }\n                    else {\n                        MismatchedSetException mse = new MismatchedSetException(null,input);\n                        recover(mse);\n                        throw mse;\n                    }\n\n\n                    }\n                    break;\n\n                default :\n                    if ( cnt2 >= 1 ) break loop2;\n                        EarlyExitException eee =\n                            new EarlyExitException(2, input);\n                        throw eee;\n                }\n                cnt2++;\n            } while (true);\n\n\n            skip();\n\n            }\n\n            state.type = _type;\n            state.channel = _channel;\n        }\n        finally {\n            // do for sure before leaving\n        }\n    }\n    // $ANTLR end \"WS\"\n\n","sourceOld":"    // $ANTLR start \"WS\"\n    public final void mWS() throws RecognitionException {\n        try {\n            int _type = WS;\n            int _channel = DEFAULT_TOKEN_CHANNEL;\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:338:5: ( ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+ )\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:338:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n            {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:338:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n            int cnt2=0;\n            loop2:\n            do {\n                int alt2=2;\n                int LA2_0 = input.LA(1);\n\n                if ( ((LA2_0 >= '\\t' && LA2_0 <= '\\n')||LA2_0=='\\r'||LA2_0==' ') ) {\n                    alt2=1;\n                }\n\n\n                switch (alt2) {\n            \tcase 1 :\n            \t    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n            \t    {\n            \t    if ( (input.LA(1) >= '\\t' && input.LA(1) <= '\\n')||input.LA(1)=='\\r'||input.LA(1)==' ' ) {\n            \t        input.consume();\n            \t    }\n            \t    else {\n            \t        MismatchedSetException mse = new MismatchedSetException(null,input);\n            \t        recover(mse);\n            \t        throw mse;\n            \t    }\n\n\n            \t    }\n            \t    break;\n\n            \tdefault :\n            \t    if ( cnt2 >= 1 ) break loop2;\n                        EarlyExitException eee =\n                            new EarlyExitException(2, input);\n                        throw eee;\n                }\n                cnt2++;\n            } while (true);\n\n\n            skip();\n\n            }\n\n            state.type = _type;\n            state.channel = _channel;\n        }\n        finally {\n        \t// do for sure before leaving\n        }\n    }\n    // $ANTLR end \"WS\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2","date":1379096281,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mWS().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mWS().mjava","sourceNew":"    // $ANTLR start \"WS\"\n    public final void mWS() throws RecognitionException {\n        try {\n            int _type = WS;\n            int _channel = DEFAULT_TOKEN_CHANNEL;\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:338:5: ( ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+ )\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:338:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n            {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:338:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n            int cnt2=0;\n            loop2:\n            while (true) {\n                int alt2=2;\n                int LA2_0 = input.LA(1);\n                if ( ((LA2_0 >= '\\t' && LA2_0 <= '\\n')||LA2_0=='\\r'||LA2_0==' ') ) {\n                    alt2=1;\n                }\n\n                switch (alt2) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    {\n                    if ( (input.LA(1) >= '\\t' && input.LA(1) <= '\\n')||input.LA(1)=='\\r'||input.LA(1)==' ' ) {\n                        input.consume();\n                    }\n                    else {\n                        MismatchedSetException mse = new MismatchedSetException(null,input);\n                        recover(mse);\n                        throw mse;\n                    }\n                    }\n                    break;\n\n                default :\n                    if ( cnt2 >= 1 ) break loop2;\n                    EarlyExitException eee = new EarlyExitException(2, input);\n                    throw eee;\n                }\n                cnt2++;\n            }\n\n            skip();\n            }\n\n            state.type = _type;\n            state.channel = _channel;\n        }\n        finally {\n            // do for sure before leaving\n        }\n    }\n    // $ANTLR end \"WS\"\n\n","sourceOld":"    // $ANTLR start \"WS\"\n    public final void mWS() throws RecognitionException {\n        try {\n            int _type = WS;\n            int _channel = DEFAULT_TOKEN_CHANNEL;\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:338:5: ( ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+ )\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:338:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n            {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:338:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n            int cnt2=0;\n            loop2:\n            do {\n                int alt2=2;\n                int LA2_0 = input.LA(1);\n\n                if ( ((LA2_0 >= '\\t' && LA2_0 <= '\\n')||LA2_0=='\\r'||LA2_0==' ') ) {\n                    alt2=1;\n                }\n\n\n                switch (alt2) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    {\n                    if ( (input.LA(1) >= '\\t' && input.LA(1) <= '\\n')||input.LA(1)=='\\r'||input.LA(1)==' ' ) {\n                        input.consume();\n                    }\n                    else {\n                        MismatchedSetException mse = new MismatchedSetException(null,input);\n                        recover(mse);\n                        throw mse;\n                    }\n\n\n                    }\n                    break;\n\n                default :\n                    if ( cnt2 >= 1 ) break loop2;\n                        EarlyExitException eee =\n                            new EarlyExitException(2, input);\n                        throw eee;\n                }\n                cnt2++;\n            } while (true);\n\n\n            skip();\n\n            }\n\n            state.type = _type;\n            state.channel = _channel;\n        }\n        finally {\n            // do for sure before leaving\n        }\n    }\n    // $ANTLR end \"WS\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1441eba4282a646ef88d12acb797483db37554e","date":1379096538,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mWS().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mWS().mjava","sourceNew":"  // $ANTLR start \"WS\"\n  public final void mWS() throws RecognitionException {\n    try {\n      int _type = WS;\n      int _channel = DEFAULT_TOKEN_CHANNEL;\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:338:5: ( ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+ )\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:338:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n      {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:338:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n      int cnt2=0;\n      loop2:\n      while (true) {\n        int alt2=2;\n        int LA2_0 = input.LA(1);\n        if ( ((LA2_0 >= '\\t' && LA2_0 <= '\\n')||LA2_0=='\\r'||LA2_0==' ') ) {\n          alt2=1;\n        }\n\n        switch (alt2) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( (input.LA(1) >= '\\t' && input.LA(1) <= '\\n')||input.LA(1)=='\\r'||input.LA(1)==' ' ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n        default :\n          if ( cnt2 >= 1 ) break loop2;\n          EarlyExitException eee = new EarlyExitException(2, input);\n          throw eee;\n        }\n        cnt2++;\n      }\n\n      skip();\n      }\n\n      state.type = _type;\n      state.channel = _channel;\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"WS\"\n\n","sourceOld":"    // $ANTLR start \"WS\"\n    public final void mWS() throws RecognitionException {\n        try {\n            int _type = WS;\n            int _channel = DEFAULT_TOKEN_CHANNEL;\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:338:5: ( ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+ )\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:338:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n            {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:338:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n            int cnt2=0;\n            loop2:\n            while (true) {\n                int alt2=2;\n                int LA2_0 = input.LA(1);\n                if ( ((LA2_0 >= '\\t' && LA2_0 <= '\\n')||LA2_0=='\\r'||LA2_0==' ') ) {\n                    alt2=1;\n                }\n\n                switch (alt2) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    {\n                    if ( (input.LA(1) >= '\\t' && input.LA(1) <= '\\n')||input.LA(1)=='\\r'||input.LA(1)==' ' ) {\n                        input.consume();\n                    }\n                    else {\n                        MismatchedSetException mse = new MismatchedSetException(null,input);\n                        recover(mse);\n                        throw mse;\n                    }\n                    }\n                    break;\n\n                default :\n                    if ( cnt2 >= 1 ) break loop2;\n                    EarlyExitException eee = new EarlyExitException(2, input);\n                    throw eee;\n                }\n                cnt2++;\n            }\n\n            skip();\n            }\n\n            state.type = _type;\n            state.channel = _channel;\n        }\n        finally {\n            // do for sure before leaving\n        }\n    }\n    // $ANTLR end \"WS\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f0e44787cffbb978aa2182761e3f9b184545a1e","date":1379265303,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mWS().mjava","pathOld":"/dev/null","sourceNew":"  // $ANTLR start \"WS\"\n  public final void mWS() throws RecognitionException {\n    try {\n      int _type = WS;\n      int _channel = DEFAULT_TOKEN_CHANNEL;\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:338:5: ( ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+ )\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:338:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n      {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:338:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n      int cnt2=0;\n      loop2:\n      while (true) {\n        int alt2=2;\n        int LA2_0 = input.LA(1);\n        if ( ((LA2_0 >= '\\t' && LA2_0 <= '\\n')||LA2_0=='\\r'||LA2_0==' ') ) {\n          alt2=1;\n        }\n\n        switch (alt2) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( (input.LA(1) >= '\\t' && input.LA(1) <= '\\n')||input.LA(1)=='\\r'||input.LA(1)==' ' ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n        default :\n          if ( cnt2 >= 1 ) break loop2;\n          EarlyExitException eee = new EarlyExitException(2, input);\n          throw eee;\n        }\n        cnt2++;\n      }\n\n      skip();\n      }\n\n      state.type = _type;\n      state.channel = _channel;\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"WS\"\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d639dc27b5b3eae561ef321b06f3cad9280c529","date":1383945027,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mWS().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mWS().mjava","sourceNew":"  // $ANTLR start \"WS\"\n  public final void mWS() throws RecognitionException {\n    try {\n      int _type = WS;\n      int _channel = DEFAULT_TOKEN_CHANNEL;\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:343:5: ( ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+ )\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:343:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n      {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:343:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n      int cnt3=0;\n      loop3:\n      while (true) {\n        int alt3=2;\n        int LA3_0 = input.LA(1);\n        if ( ((LA3_0 >= '\\t' && LA3_0 <= '\\n')||LA3_0=='\\r'||LA3_0==' ') ) {\n          alt3=1;\n        }\n\n        switch (alt3) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( (input.LA(1) >= '\\t' && input.LA(1) <= '\\n')||input.LA(1)=='\\r'||input.LA(1)==' ' ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n        default :\n          if ( cnt3 >= 1 ) break loop3;\n          EarlyExitException eee = new EarlyExitException(3, input);\n          throw eee;\n        }\n        cnt3++;\n      }\n\n      skip();\n      }\n\n      state.type = _type;\n      state.channel = _channel;\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"WS\"\n\n","sourceOld":"  // $ANTLR start \"WS\"\n  public final void mWS() throws RecognitionException {\n    try {\n      int _type = WS;\n      int _channel = DEFAULT_TOKEN_CHANNEL;\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:338:5: ( ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+ )\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:338:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n      {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:338:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n      int cnt2=0;\n      loop2:\n      while (true) {\n        int alt2=2;\n        int LA2_0 = input.LA(1);\n        if ( ((LA2_0 >= '\\t' && LA2_0 <= '\\n')||LA2_0=='\\r'||LA2_0==' ') ) {\n          alt2=1;\n        }\n\n        switch (alt2) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( (input.LA(1) >= '\\t' && input.LA(1) <= '\\n')||input.LA(1)=='\\r'||input.LA(1)==' ' ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n        default :\n          if ( cnt2 >= 1 ) break loop2;\n          EarlyExitException eee = new EarlyExitException(2, input);\n          throw eee;\n        }\n        cnt2++;\n      }\n\n      skip();\n      }\n\n      state.type = _type;\n      state.channel = _channel;\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"WS\"\n\n","bugFix":null,"bugIntro":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c","date":1404947938,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mWS().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mWS().mjava","sourceNew":"  // $ANTLR start \"WS\"\n  public final void mWS() throws RecognitionException {\n    try {\n      int _type = WS;\n      int _channel = DEFAULT_TOKEN_CHANNEL;\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:374:5: ( ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+ )\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:374:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n      {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:374:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n      int cnt10=0;\n      loop10:\n      while (true) {\n        int alt10=2;\n        int LA10_0 = input.LA(1);\n        if ( ((LA10_0 >= '\\t' && LA10_0 <= '\\n')||LA10_0=='\\r'||LA10_0==' ') ) {\n          alt10=1;\n        }\n\n        switch (alt10) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( (input.LA(1) >= '\\t' && input.LA(1) <= '\\n')||input.LA(1)=='\\r'||input.LA(1)==' ' ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n        default :\n          if ( cnt10 >= 1 ) break loop10;\n          EarlyExitException eee = new EarlyExitException(10, input);\n          throw eee;\n        }\n        cnt10++;\n      }\n\n      skip();\n      }\n\n      state.type = _type;\n      state.channel = _channel;\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"WS\"\n\n","sourceOld":"  // $ANTLR start \"WS\"\n  public final void mWS() throws RecognitionException {\n    try {\n      int _type = WS;\n      int _channel = DEFAULT_TOKEN_CHANNEL;\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:343:5: ( ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+ )\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:343:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n      {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:343:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n      int cnt3=0;\n      loop3:\n      while (true) {\n        int alt3=2;\n        int LA3_0 = input.LA(1);\n        if ( ((LA3_0 >= '\\t' && LA3_0 <= '\\n')||LA3_0=='\\r'||LA3_0==' ') ) {\n          alt3=1;\n        }\n\n        switch (alt3) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( (input.LA(1) >= '\\t' && input.LA(1) <= '\\n')||input.LA(1)=='\\r'||input.LA(1)==' ' ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n        default :\n          if ( cnt3 >= 1 ) break loop3;\n          EarlyExitException eee = new EarlyExitException(3, input);\n          throw eee;\n        }\n        cnt3++;\n      }\n\n      skip();\n      }\n\n      state.type = _type;\n      state.channel = _channel;\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"WS\"\n\n","bugFix":["8d639dc27b5b3eae561ef321b06f3cad9280c529"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d23d4828afa583ebf35b4a541763af6206133458","date":1438931440,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mWS().mjava","sourceNew":null,"sourceOld":"  // $ANTLR start \"WS\"\n  public final void mWS() throws RecognitionException {\n    try {\n      int _type = WS;\n      int _channel = DEFAULT_TOKEN_CHANNEL;\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:374:5: ( ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+ )\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:374:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n      {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:374:7: ( ' ' | '\\\\t' | '\\\\n' | '\\\\r' )+\n      int cnt10=0;\n      loop10:\n      while (true) {\n        int alt10=2;\n        int LA10_0 = input.LA(1);\n        if ( ((LA10_0 >= '\\t' && LA10_0 <= '\\n')||LA10_0=='\\r'||LA10_0==' ') ) {\n          alt10=1;\n        }\n\n        switch (alt10) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( (input.LA(1) >= '\\t' && input.LA(1) <= '\\n')||input.LA(1)=='\\r'||input.LA(1)==' ' ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n        default :\n          if ( cnt10 >= 1 ) break loop10;\n          EarlyExitException eee = new EarlyExitException(10, input);\n          throw eee;\n        }\n        cnt10++;\n      }\n\n      skip();\n      }\n\n      state.type = _type;\n      state.channel = _channel;\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"WS\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d23d4828afa583ebf35b4a541763af6206133458":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2":["3623d67605fbbdfce2fadea678e2f4bbe2ab2310"],"f18d4e1cdc7330101ca433af5e8564dfd894f2bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d1441eba4282a646ef88d12acb797483db37554e":["68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2"],"8d639dc27b5b3eae561ef321b06f3cad9280c529":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c":["8d639dc27b5b3eae561ef321b06f3cad9280c529"],"3623d67605fbbdfce2fadea678e2f4bbe2ab2310":["f18d4e1cdc7330101ca433af5e8564dfd894f2bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d23d4828afa583ebf35b4a541763af6206133458"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d1441eba4282a646ef88d12acb797483db37554e"]},"commit2Childs":{"d23d4828afa583ebf35b4a541763af6206133458":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2":["d1441eba4282a646ef88d12acb797483db37554e"],"f18d4e1cdc7330101ca433af5e8564dfd894f2bf":["3623d67605fbbdfce2fadea678e2f4bbe2ab2310"],"d1441eba4282a646ef88d12acb797483db37554e":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"8d639dc27b5b3eae561ef321b06f3cad9280c529":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f18d4e1cdc7330101ca433af5e8564dfd894f2bf","5f0e44787cffbb978aa2182761e3f9b184545a1e"],"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c":["d23d4828afa583ebf35b4a541763af6206133458"],"3623d67605fbbdfce2fadea678e2f4bbe2ab2310":["68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["8d639dc27b5b3eae561ef321b06f3cad9280c529"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}