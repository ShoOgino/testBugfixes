{"path":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#testSimple().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#testSimple().mjava","pathOld":"solr/src/test/org/apache/solr/TestSolrCoreProperties#testSimple().mjava","sourceNew":"  public void testSimple() throws SolrServerException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    QueryResponse res = client.query(params);\n    assertEquals(0, res.getResults().getNumFound());\n  }\n\n","sourceOld":"  public void testSimple() throws SolrServerException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    QueryResponse res = client.query(params);\n    assertEquals(0, res.getResults().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#testSimple().mjava","pathOld":"solr/src/test/org/apache/solr/TestSolrCoreProperties#testSimple().mjava","sourceNew":"  public void testSimple() throws SolrServerException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    QueryResponse res = client.query(params);\n    assertEquals(0, res.getResults().getNumFound());\n  }\n\n","sourceOld":"  public void testSimple() throws SolrServerException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    QueryResponse res = client.query(params);\n    assertEquals(0, res.getResults().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#testSimple().mjava","pathOld":"solr/src/test/org/apache/solr/TestSolrCoreProperties#testSimple().mjava","sourceNew":"  public void testSimple() throws SolrServerException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    QueryResponse res = client.query(params);\n    assertEquals(0, res.getResults().getNumFound());\n  }\n\n","sourceOld":"  public void testSimple() throws SolrServerException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    QueryResponse res = client.query(params);\n    assertEquals(0, res.getResults().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90405b089d8d601f0287297302de0d91df1a0e28","date":1376503905,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#testSimple().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    SolrParams params = params(\"q\", \"*:*\", \n                               \"echoParams\", \"all\");\n    QueryResponse res = getSolrServer().query(params);\n    assertEquals(0, res.getResults().getNumFound());\n\n    NamedList echoedParams = (NamedList) res.getHeader().get(\"params\");\n    assertEquals(\"f1\", echoedParams.get(\"p1\"));\n    assertEquals(\"f2\", echoedParams.get(\"p2\"));\n  }\n\n","sourceOld":"  public void testSimple() throws SolrServerException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    QueryResponse res = client.query(params);\n    assertEquals(0, res.getResults().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#testSimple().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    SolrParams params = params(\"q\", \"*:*\", \n                               \"echoParams\", \"all\");\n    QueryResponse res = getSolrServer().query(params);\n    assertEquals(0, res.getResults().getNumFound());\n\n    NamedList echoedParams = (NamedList) res.getHeader().get(\"params\");\n    assertEquals(\"f1\", echoedParams.get(\"p1\"));\n    assertEquals(\"f2\", echoedParams.get(\"p2\"));\n  }\n\n","sourceOld":"  public void testSimple() throws SolrServerException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    QueryResponse res = client.query(params);\n    assertEquals(0, res.getResults().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#testSimple().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    SolrParams params = params(\"q\", \"*:*\", \n                               \"echoParams\", \"all\");\n    QueryResponse res = getSolrClient().query(params);\n    assertEquals(0, res.getResults().getNumFound());\n\n    NamedList echoedParams = (NamedList) res.getHeader().get(\"params\");\n    assertEquals(\"f1\", echoedParams.get(\"p1\"));\n    assertEquals(\"f2\", echoedParams.get(\"p2\"));\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    SolrParams params = params(\"q\", \"*:*\", \n                               \"echoParams\", \"all\");\n    QueryResponse res = getSolrServer().query(params);\n    assertEquals(0, res.getResults().getNumFound());\n\n    NamedList echoedParams = (NamedList) res.getHeader().get(\"params\");\n    assertEquals(\"f1\", echoedParams.get(\"p1\"));\n    assertEquals(\"f2\", echoedParams.get(\"p2\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#testSimple().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    SolrParams params = params(\"q\", \"*:*\", \n                               \"echoParams\", \"all\");\n    QueryResponse res = getSolrClient().query(params);\n    assertEquals(0, res.getResults().getNumFound());\n\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList echoedParams = (NamedList) res.getHeader().get(\"params\");\n    assertEquals(\"f1\", echoedParams.get(\"p1\"));\n    assertEquals(\"f2\", echoedParams.get(\"p2\"));\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    SolrParams params = params(\"q\", \"*:*\", \n                               \"echoParams\", \"all\");\n    QueryResponse res = getSolrClient().query(params);\n    assertEquals(0, res.getResults().getNumFound());\n\n    NamedList echoedParams = (NamedList) res.getHeader().get(\"params\");\n    assertEquals(\"f1\", echoedParams.get(\"p1\"));\n    assertEquals(\"f2\", echoedParams.get(\"p2\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"90405b089d8d601f0287297302de0d91df1a0e28":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["c26f00b574427b55127e869b935845554afde1fa","90405b089d8d601f0287297302de0d91df1a0e28"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["90405b089d8d601f0287297302de0d91df1a0e28"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"90405b089d8d601f0287297302de0d91df1a0e28":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","bafca15d8e408346a67f4282ad1143b88023893b"],"c26f00b574427b55127e869b935845554afde1fa":["90405b089d8d601f0287297302de0d91df1a0e28","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"bafca15d8e408346a67f4282ad1143b88023893b":["e98520789adb1d5ad05afb4956eca0944a929688"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}