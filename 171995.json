{"path":"src/java/org/apache/lucene/index/DocumentsWriter.ThreadState#resetPostings().mjava","commits":[{"id":"4350b17bd363cd13a95171b8df1ca62ea4c3e71c","date":1183562198,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter.ThreadState#resetPostings().mjava","pathOld":"/dev/null","sourceNew":"    /** Clear the postings hash and return objects back to\n     *  shared pool */\n    public void resetPostings() throws IOException {\n      if (localFieldsWriter != null) {\n        localFieldsWriter.close();\n        localFieldsWriter = null;\n      }\n      maxPostingsVectors = 0;\n      doFlushAfter = false;\n      postingsPool.reset();\n      charPool.reset();\n      recyclePostings(postingsFreeList, postingsFreeCount);\n      postingsFreeCount = 0;\n      for(int i=0;i<numAllFieldData;i++) {\n        FieldData fp = allFieldDataArray[i];\n        if (fp.numPostings > 0)\n          fp.resetPostingArrays();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["176324efd1eab6bd44a6d81c27c9b3a1a175ba3d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"83bbb041887bbef07b8a98d08a0e1713ce137039","date":1200330381,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter.ThreadState#resetPostings().mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter.ThreadState#resetPostings().mjava","sourceNew":"    /** Clear the postings hash and return objects back to\n     *  shared pool */\n    public void resetPostings() throws IOException {\n      if (localFieldsWriter != null) {\n        localFieldsWriter.close();\n        localFieldsWriter = null;\n      }\n      fieldGen = 0;\n      maxPostingsVectors = 0;\n      doFlushAfter = false;\n      postingsPool.reset();\n      charPool.reset();\n      recyclePostings(postingsFreeList, postingsFreeCount);\n      postingsFreeCount = 0;\n      for(int i=0;i<numAllFieldData;i++) {\n        FieldData fp = allFieldDataArray[i];\n        if (fp.numPostings > 0)\n          fp.resetPostingArrays();\n      }\n    }\n\n","sourceOld":"    /** Clear the postings hash and return objects back to\n     *  shared pool */\n    public void resetPostings() throws IOException {\n      if (localFieldsWriter != null) {\n        localFieldsWriter.close();\n        localFieldsWriter = null;\n      }\n      maxPostingsVectors = 0;\n      doFlushAfter = false;\n      postingsPool.reset();\n      charPool.reset();\n      recyclePostings(postingsFreeList, postingsFreeCount);\n      postingsFreeCount = 0;\n      for(int i=0;i<numAllFieldData;i++) {\n        FieldData fp = allFieldDataArray[i];\n        if (fp.numPostings > 0)\n          fp.resetPostingArrays();\n      }\n    }\n\n","bugFix":null,"bugIntro":["176324efd1eab6bd44a6d81c27c9b3a1a175ba3d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"176324efd1eab6bd44a6d81c27c9b3a1a175ba3d","date":1202734547,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter.ThreadState#resetPostings().mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter.ThreadState#resetPostings().mjava","sourceNew":"    /** Clear the postings hash and return objects back to\n     *  shared pool */\n    public void resetPostings() throws IOException {\n      fieldGen = 0;\n      maxPostingsVectors = 0;\n      doFlushAfter = false;\n      if (localFieldsWriter != null) {\n        localFieldsWriter.close();\n        localFieldsWriter = null;\n      }\n      postingsPool.reset();\n      charPool.reset();\n      recyclePostings(postingsFreeList, postingsFreeCount);\n      postingsFreeCount = 0;\n      for(int i=0;i<numAllFieldData;i++) {\n        FieldData fp = allFieldDataArray[i];\n        fp.lastGen = -1;\n        if (fp.numPostings > 0)\n          fp.resetPostingArrays();\n      }\n    }\n\n","sourceOld":"    /** Clear the postings hash and return objects back to\n     *  shared pool */\n    public void resetPostings() throws IOException {\n      if (localFieldsWriter != null) {\n        localFieldsWriter.close();\n        localFieldsWriter = null;\n      }\n      fieldGen = 0;\n      maxPostingsVectors = 0;\n      doFlushAfter = false;\n      postingsPool.reset();\n      charPool.reset();\n      recyclePostings(postingsFreeList, postingsFreeCount);\n      postingsFreeCount = 0;\n      for(int i=0;i<numAllFieldData;i++) {\n        FieldData fp = allFieldDataArray[i];\n        if (fp.numPostings > 0)\n          fp.resetPostingArrays();\n      }\n    }\n\n","bugFix":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c","83bbb041887bbef07b8a98d08a0e1713ce137039"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a0af3a442be522899177e5e11384a45a6784a3f","date":1205348952,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter.ThreadState#resetPostings().mjava","sourceNew":null,"sourceOld":"    /** Clear the postings hash and return objects back to\n     *  shared pool */\n    public void resetPostings() throws IOException {\n      fieldGen = 0;\n      maxPostingsVectors = 0;\n      doFlushAfter = false;\n      if (localFieldsWriter != null) {\n        localFieldsWriter.close();\n        localFieldsWriter = null;\n      }\n      postingsPool.reset();\n      charPool.reset();\n      recyclePostings(postingsFreeList, postingsFreeCount);\n      postingsFreeCount = 0;\n      for(int i=0;i<numAllFieldData;i++) {\n        FieldData fp = allFieldDataArray[i];\n        fp.lastGen = -1;\n        if (fp.numPostings > 0)\n          fp.resetPostingArrays();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"83bbb041887bbef07b8a98d08a0e1713ce137039":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"176324efd1eab6bd44a6d81c27c9b3a1a175ba3d":["83bbb041887bbef07b8a98d08a0e1713ce137039"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a0af3a442be522899177e5e11384a45a6784a3f":["176324efd1eab6bd44a6d81c27c9b3a1a175ba3d"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a0af3a442be522899177e5e11384a45a6784a3f"]},"commit2Childs":{"83bbb041887bbef07b8a98d08a0e1713ce137039":["176324efd1eab6bd44a6d81c27c9b3a1a175ba3d"],"176324efd1eab6bd44a6d81c27c9b3a1a175ba3d":["5a0af3a442be522899177e5e11384a45a6784a3f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"5a0af3a442be522899177e5e11384a45a6784a3f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["83bbb041887bbef07b8a98d08a0e1713ce137039"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}