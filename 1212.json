{"path":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#init(IndexInput).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#init(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, SepPostingsWriterImpl.CODEC, SepPostingsWriterImpl.VERSION_START);\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0cd8367c3d48e4b63dee1895a261d4986c716bbb","date":1279637747,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#init(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, SepPostingsWriterImpl.CODEC,\n      SepPostingsWriterImpl.VERSION_START, SepPostingsWriterImpl.VERSION_START);\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, SepPostingsWriterImpl.CODEC, SepPostingsWriterImpl.VERSION_START);\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#init(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, SepPostingsWriterImpl.CODEC,\n      SepPostingsWriterImpl.VERSION_START, SepPostingsWriterImpl.VERSION_START);\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, SepPostingsWriterImpl.CODEC, SepPostingsWriterImpl.VERSION_START);\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aff28d83336d21b964812b94574b7e8cea46a3cc","date":1297437050,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#init(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, SepPostingsWriterImpl.CODEC,\n      SepPostingsWriterImpl.VERSION_START, SepPostingsWriterImpl.VERSION_START);\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n    skipMinimum = termsIn.readInt();\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, SepPostingsWriterImpl.CODEC,\n      SepPostingsWriterImpl.VERSION_START, SepPostingsWriterImpl.VERSION_START);\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#init(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, SepPostingsWriterImpl.CODEC,\n      SepPostingsWriterImpl.VERSION_START, SepPostingsWriterImpl.VERSION_START);\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n    skipMinimum = termsIn.readInt();\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, SepPostingsWriterImpl.CODEC,\n      SepPostingsWriterImpl.VERSION_START, SepPostingsWriterImpl.VERSION_START);\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#init(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, SepPostingsWriterImpl.CODEC,\n      SepPostingsWriterImpl.VERSION_START, SepPostingsWriterImpl.VERSION_START);\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n    skipMinimum = termsIn.readInt();\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, SepPostingsWriterImpl.CODEC,\n      SepPostingsWriterImpl.VERSION_START, SepPostingsWriterImpl.VERSION_START);\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader#init(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, SepPostingsWriter.CODEC,\n      SepPostingsWriter.VERSION_START, SepPostingsWriter.VERSION_START);\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n    skipMinimum = termsIn.readInt();\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, SepPostingsWriterImpl.CODEC,\n      SepPostingsWriterImpl.VERSION_START, SepPostingsWriterImpl.VERSION_START);\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n    skipMinimum = termsIn.readInt();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["aff28d83336d21b964812b94574b7e8cea46a3cc"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["0cd8367c3d48e4b63dee1895a261d4986c716bbb","aff28d83336d21b964812b94574b7e8cea46a3cc"],"aff28d83336d21b964812b94574b7e8cea46a3cc":["0cd8367c3d48e4b63dee1895a261d4986c716bbb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0cd8367c3d48e4b63dee1895a261d4986c716bbb":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"5f4e87790277826a2aea119328600dfb07761f32":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","0cd8367c3d48e4b63dee1895a261d4986c716bbb"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["5f4e87790277826a2aea119328600dfb07761f32","aff28d83336d21b964812b94574b7e8cea46a3cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60ba444201d2570214b6fcf1d15600dc1a01f548"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"aff28d83336d21b964812b94574b7e8cea46a3cc":["60ba444201d2570214b6fcf1d15600dc1a01f548","f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["0cd8367c3d48e4b63dee1895a261d4986c716bbb","5f4e87790277826a2aea119328600dfb07761f32"],"0cd8367c3d48e4b63dee1895a261d4986c716bbb":["f1bdbf92da222965b46c0a942c3857ba56e5c638","aff28d83336d21b964812b94574b7e8cea46a3cc","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}