{"path":"lucene/core/src/java/org/apache/lucene/index/CompositeReaderContext.Builder#numLeaves(IndexReader).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CompositeReaderContext.Builder#numLeaves(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompositeReaderContext.Builder#numLeaves(IndexReader).mjava","sourceNew":"    private int numLeaves(IndexReader reader) {\n      final int[] numLeaves = new int[1];\n      try {\n        new ReaderUtil.Gather(reader) {\n          @Override\n          protected void add(int base, AtomicReader r) {\n            numLeaves[0]++;\n          }\n        }.run();\n      } catch (IOException ioe) {\n        // won't happen\n        throw new RuntimeException(ioe);\n      }\n      return numLeaves[0];\n    }\n\n","sourceOld":"    private int numLeaves(IndexReader reader) {\n      final int[] numLeaves = new int[1];\n      try {\n        new ReaderUtil.Gather(reader) {\n          @Override\n          protected void add(int base, AtomicReader r) {\n            numLeaves[0]++;\n          }\n        }.run();\n      } catch (IOException ioe) {\n        // won't happen\n        throw new RuntimeException(ioe);\n      }\n      return numLeaves[0];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","date":1340090669,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/CompositeReaderContext.Builder#numLeaves(IndexReader).mjava","sourceNew":null,"sourceOld":"    private int numLeaves(IndexReader reader) {\n      final int[] numLeaves = new int[1];\n      try {\n        new ReaderUtil.Gather(reader) {\n          @Override\n          protected void add(int base, AtomicReader r) {\n            numLeaves[0]++;\n          }\n        }.run();\n      } catch (IOException ioe) {\n        // won't happen\n        throw new RuntimeException(ioe);\n      }\n      return numLeaves[0];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"]},"commit2Childs":{"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}