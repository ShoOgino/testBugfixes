{"path":"solr/solrj/src/java/org/apache/solr/common/util/ObjectReleaseTracker#clearObjectTrackerAndCheckEmpty(int).mjava","commits":[{"id":"03eba9c92a74d53b4960d4098c9dd0f67b459468","date":1474549326,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ObjectReleaseTracker#clearObjectTrackerAndCheckEmpty(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @return null if ok else error message\n   */\n  public static String clearObjectTrackerAndCheckEmpty(int waitSeconds) {\n    int retries = 0;\n    String result;\n    do {\n      result = checkEmpty();\n      if (result == null)\n        break;\n      try {\n        TimeUnit.SECONDS.sleep(1);\n      } catch (InterruptedException e) { break; }\n    }\n    while (retries++ < waitSeconds);\n    \n    OBJECTS.clear();\n    \n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"126d6ad24eed13163ba0959435d5a80e5672837c","date":1474567302,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ObjectReleaseTracker#clearObjectTrackerAndCheckEmpty(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @return null if ok else error message\n   */\n  public static String clearObjectTrackerAndCheckEmpty(int waitSeconds) {\n    int retries = 0;\n    String result;\n    do {\n      result = checkEmpty();\n      if (result == null)\n        break;\n      try {\n        TimeUnit.SECONDS.sleep(1);\n      } catch (InterruptedException e) { break; }\n    }\n    while (retries++ < waitSeconds);\n    \n    OBJECTS.clear();\n    \n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ObjectReleaseTracker#clearObjectTrackerAndCheckEmpty(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @return null if ok else error message\n   */\n  public static String clearObjectTrackerAndCheckEmpty(int waitSeconds) {\n    int retries = 0;\n    String result;\n    do {\n      result = checkEmpty();\n      if (result == null)\n        break;\n      try {\n        TimeUnit.SECONDS.sleep(1);\n      } catch (InterruptedException e) { break; }\n    }\n    while (retries++ < waitSeconds);\n    \n    OBJECTS.clear();\n    \n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ObjectReleaseTracker#clearObjectTrackerAndCheckEmpty(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @return null if ok else error message\n   */\n  public static String clearObjectTrackerAndCheckEmpty(int waitSeconds) {\n    int retries = 0;\n    String result;\n    do {\n      result = checkEmpty();\n      if (result == null)\n        break;\n      try {\n        TimeUnit.SECONDS.sleep(1);\n      } catch (InterruptedException e) { break; }\n    }\n    while (retries++ < waitSeconds);\n    \n    OBJECTS.clear();\n    \n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad28156288ac00b91352582904d97e6653205757","date":1486850922,"type":5,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearObjectTrackerAndCheckEmpty(int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ObjectReleaseTracker#clearObjectTrackerAndCheckEmpty(int).mjava","sourceNew":"  /**\n   * @return null if ok else error message\n   */\n  public static String clearObjectTrackerAndCheckEmpty(int waitSeconds) {\n    int retries = 0;\n    String result;\n    do {\n      result = ObjectReleaseTracker.checkEmpty();\n      if (result == null)\n        break;\n      try {\n        if (retries % 10 == 0) {\n          log.info(\"Waiting for all tracked resources to be released\");\n          if (retries > 10) {\n            TraceFormatting tf = new TraceFormatting(DEFAULT_STACK_FILTERS);\n            Map<Thread,StackTraceElement[]> stacksMap = Thread.getAllStackTraces();\n            Set<Entry<Thread,StackTraceElement[]>> entries = stacksMap.entrySet();\n            for (Entry<Thread,StackTraceElement[]> entry : entries) {\n              String stack = tf.formatStackTrace(entry.getValue());\n              System.err.println(entry.getKey().getName() + \":\\n\" + stack);\n            }\n          }\n        }\n        TimeUnit.SECONDS.sleep(1);\n      } catch (InterruptedException e) { break; }\n    }\n    while (retries++ < waitSeconds);\n    \n    \n    log.info(\"------------------------------------------------------- Done waiting for tracked resources to be released\");\n    ObjectReleaseTracker.clear();\n    \n    return result;\n  }\n\n","sourceOld":"  /**\n   * @return null if ok else error message\n   */\n  public static String clearObjectTrackerAndCheckEmpty(int waitSeconds) {\n    int retries = 0;\n    String result;\n    do {\n      result = checkEmpty();\n      if (result == null)\n        break;\n      try {\n        TimeUnit.SECONDS.sleep(1);\n      } catch (InterruptedException e) { break; }\n    }\n    while (retries++ < waitSeconds);\n    \n    OBJECTS.clear();\n    \n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ad28156288ac00b91352582904d97e6653205757":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"126d6ad24eed13163ba0959435d5a80e5672837c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","03eba9c92a74d53b4960d4098c9dd0f67b459468"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","126d6ad24eed13163ba0959435d5a80e5672837c"],"03eba9c92a74d53b4960d4098c9dd0f67b459468":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad28156288ac00b91352582904d97e6653205757"]},"commit2Childs":{"ad28156288ac00b91352582904d97e6653205757":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"126d6ad24eed13163ba0959435d5a80e5672837c":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["ad28156288ac00b91352582904d97e6653205757","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["126d6ad24eed13163ba0959435d5a80e5672837c","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","03eba9c92a74d53b4960d4098c9dd0f67b459468","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"03eba9c92a74d53b4960d4098c9dd0f67b459468":["126d6ad24eed13163ba0959435d5a80e5672837c"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}