{"path":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#getDocsWithField(String).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":1,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#getDocsWithField(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader#getDocsWithField(String).mjava","sourceNew":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    Bits docsWithField = super.getDocsWithField(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (docsWithField != null) {\n      assert fi != null;\n      assert fi.hasDocValues();\n      assert maxDoc() == docsWithField.length();\n      docsWithField = new AssertingBits(docsWithField);\n    } else {\n      assert fi == null || fi.hasDocValues() == false;\n    }\n    return docsWithField;\n  }\n\n","sourceOld":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    Bits docsWithField = super.getDocsWithField(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (docsWithField != null) {\n      assert fi != null;\n      assert fi.hasDocValues();\n      assert maxDoc() == docsWithField.length();\n      docsWithField = new AssertingBits(docsWithField);\n    } else {\n      assert fi == null || fi.hasDocValues() == false;\n    }\n    return docsWithField;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"556a4aab886d75371b2af129d87be3c2795cea76","date":1414954991,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#getDocsWithField(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#getDocsWithField(String).mjava","sourceNew":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    Bits docsWithField = super.getDocsWithField(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (docsWithField != null) {\n      assert fi != null;\n      assert fi.getDocValuesType() != DocValuesType.NONE;\n      assert maxDoc() == docsWithField.length();\n      docsWithField = new AssertingBits(docsWithField);\n    } else {\n      assert fi == null || fi.getDocValuesType() == DocValuesType.NONE;\n    }\n    return docsWithField;\n  }\n\n","sourceOld":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    Bits docsWithField = super.getDocsWithField(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (docsWithField != null) {\n      assert fi != null;\n      assert fi.hasDocValues();\n      assert maxDoc() == docsWithField.length();\n      docsWithField = new AssertingBits(docsWithField);\n    } else {\n      assert fi == null || fi.hasDocValues() == false;\n    }\n    return docsWithField;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#getDocsWithField(String).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    Bits docsWithField = super.getDocsWithField(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (docsWithField != null) {\n      assert fi != null;\n      assert fi.getDocValuesType() != DocValuesType.NONE;\n      assert maxDoc() == docsWithField.length();\n      docsWithField = new AssertingBits(docsWithField);\n    } else {\n      assert fi == null || fi.getDocValuesType() == DocValuesType.NONE;\n    }\n    return docsWithField;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#getDocsWithField(String).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    Bits docsWithField = super.getDocsWithField(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (docsWithField != null) {\n      assert fi != null;\n      assert fi.getDocValuesType() != DocValuesType.NONE;\n      assert maxDoc() == docsWithField.length();\n      docsWithField = new AssertingBits(docsWithField);\n    } else {\n      assert fi == null || fi.getDocValuesType() == DocValuesType.NONE;\n    }\n    return docsWithField;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#getDocsWithField(String).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    Bits docsWithField = super.getDocsWithField(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (docsWithField != null) {\n      assert fi != null;\n      assert fi.getDocValuesType() != DocValuesType.NONE;\n      assert maxDoc() == docsWithField.length();\n      docsWithField = new AssertingBits(docsWithField);\n    } else {\n      assert fi == null || fi.getDocValuesType() == DocValuesType.NONE;\n    }\n    return docsWithField;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["556a4aab886d75371b2af129d87be3c2795cea76","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["556a4aab886d75371b2af129d87be3c2795cea76"],"556a4aab886d75371b2af129d87be3c2795cea76":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["556a4aab886d75371b2af129d87be3c2795cea76","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"556a4aab886d75371b2af129d87be3c2795cea76":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["556a4aab886d75371b2af129d87be3c2795cea76"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}