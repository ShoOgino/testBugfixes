{"path":"solr/core/src/java/org/apache/solr/handler/component/PhrasesIdentificationComponent#distributedProcess(ResponseBuilder).mjava","commits":[{"id":"0d1411e62d30c460b09c6f3643df82daa10a27cc","date":1536256256,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/PhrasesIdentificationComponent#distributedProcess(ResponseBuilder).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int distributedProcess(ResponseBuilder rb) {\n    final PhrasesContextData contextData = (PhrasesContextData) rb.req.getContext().get(this.getClass());\n    if (null == contextData) {\n      // if prepare didn't give us anything to work with, then we should do nothing\n      return ResponseBuilder.STAGE_DONE;\n    }\n\n    if (rb.stage < ResponseBuilder.STAGE_EXECUTE_QUERY) {\n      return ResponseBuilder.STAGE_EXECUTE_QUERY;\n  \n    } else if (rb.stage == ResponseBuilder.STAGE_EXECUTE_QUERY) {\n      // if we're being used in conjunction with QueryComponent, it should have already created\n      // (in this staged) the only ShardRequest we need...\n      for (ShardRequest sreq : rb.outgoing) {\n        if (0 != (SHARD_PURPOSE & sreq.purpose) ) {\n          return ResponseBuilder.STAGE_GET_FIELDS;\n        }\n      }\n      // ...if we can't find it, then evidently we're being used in isolation,\n      // and we need to create our own ShardRequest...\n      ShardRequest sreq = new ShardRequest();\n      sreq.purpose = SHARD_PURPOSE;\n      sreq.params = new ModifiableSolrParams(rb.req.getParams());\n      sreq.params.remove(ShardParams.SHARDS);\n      rb.addRequest(this, sreq);\n      return ResponseBuilder.STAGE_GET_FIELDS;\n      \n    } else if (rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      // NOTE: we don't do any actual work in this stage, but we need to ensure that even if\n      // we are being used in isolation w/o QueryComponent that SearchHandler \"tracks\" a STAGE_GET_FIELDS\n      // so that finishStage(STAGE_GET_FIELDS) is called on us and we can add our merged results\n      // (w/o needing extra code paths for merging phrase results when QueryComponent is/is not used)\n      return ResponseBuilder.STAGE_DONE;\n    }\n\n    return ResponseBuilder.STAGE_DONE;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0d1411e62d30c460b09c6f3643df82daa10a27cc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d1411e62d30c460b09c6f3643df82daa10a27cc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d1411e62d30c460b09c6f3643df82daa10a27cc"],"0d1411e62d30c460b09c6f3643df82daa10a27cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}