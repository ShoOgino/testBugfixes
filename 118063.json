{"path":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean,String,String,String,String).mjava","commits":[{"id":"9dee311b2816356910363a8d15fc076caf6367eb","date":1392012517,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean,String,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  public SSLTestConfig(boolean useSSL, boolean clientAuth, String keyStore, String keyStorePassword, String trustStore, String trustStorePassword) {\n    super(useSSL, clientAuth, keyStore, keyStorePassword, trustStore, trustStorePassword);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e62d73ba6ae98b5bdd8d3331704d91f5fbf06521","date":1397787771,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean,String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean,String,String,String,String).mjava","sourceNew":"  public SSLTestConfig(boolean useSSL, boolean clientAuth, String keyStore, String keyStorePassword, String trustStore, String trustStorePassword) {\n    super(useSSL, clientAuth, keyStore, keyStorePassword, trustStore, trustStorePassword);\n    setSecureRandomAlgorithm(SECURE_RANDOM_ALGORITHM);\n  }\n\n","sourceOld":"  public SSLTestConfig(boolean useSSL, boolean clientAuth, String keyStore, String keyStorePassword, String trustStore, String trustStorePassword) {\n    super(useSSL, clientAuth, keyStore, keyStorePassword, trustStore, trustStorePassword);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd","date":1397789808,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean,String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean,String,String,String,String).mjava","sourceNew":"  public SSLTestConfig(boolean useSSL, boolean clientAuth, String keyStore, String keyStorePassword, String trustStore, String trustStorePassword) {\n    super(useSSL, clientAuth, keyStore, keyStorePassword, trustStore, trustStorePassword);\n  }\n\n","sourceOld":"  public SSLTestConfig(boolean useSSL, boolean clientAuth, String keyStore, String keyStorePassword, String trustStore, String trustStorePassword) {\n    super(useSSL, clientAuth, keyStore, keyStorePassword, trustStore, trustStorePassword);\n    setSecureRandomAlgorithm(SECURE_RANDOM_ALGORITHM);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04effb6bae0254b6d8632d67c1ec9121b33aa56e","date":1463009303,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean,String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean,String,String,String,String).mjava","sourceNew":"  /** \n   * Create an SSLTestConfig using explicit paths for files \n   * @deprecated - use {@link SSLConfig} directly\n   */\n  @Deprecated\n  public SSLTestConfig(boolean useSSL, boolean clientAuth, String keyStore, String keyStorePassword, String trustStore, String trustStorePassword) {\n    super(useSSL, clientAuth, keyStore, keyStorePassword, trustStore, trustStorePassword);\n    this.keyStore = tryNewResource(keyStore, \"KeyStore\");\n    this.trustStore = tryNewResource(trustStore, \"TrustStore\");\n  }\n\n","sourceOld":"  public SSLTestConfig(boolean useSSL, boolean clientAuth, String keyStore, String keyStorePassword, String trustStore, String trustStorePassword) {\n    super(useSSL, clientAuth, keyStore, keyStorePassword, trustStore, trustStorePassword);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean,String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean,String,String,String,String).mjava","sourceNew":"  /** \n   * Create an SSLTestConfig using explicit paths for files \n   * @deprecated - use {@link SSLConfig} directly\n   */\n  @Deprecated\n  public SSLTestConfig(boolean useSSL, boolean clientAuth, String keyStore, String keyStorePassword, String trustStore, String trustStorePassword) {\n    super(useSSL, clientAuth, keyStore, keyStorePassword, trustStore, trustStorePassword);\n    this.keyStore = tryNewResource(keyStore, \"KeyStore\");\n    this.trustStore = tryNewResource(trustStore, \"TrustStore\");\n  }\n\n","sourceOld":"  public SSLTestConfig(boolean useSSL, boolean clientAuth, String keyStore, String keyStorePassword, String trustStore, String trustStorePassword) {\n    super(useSSL, clientAuth, keyStore, keyStorePassword, trustStore, trustStorePassword);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean,String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean,String,String,String,String).mjava","sourceNew":"  /** \n   * Create an SSLTestConfig using explicit paths for files \n   * @deprecated - use {@link SSLConfig} directly\n   */\n  @Deprecated\n  public SSLTestConfig(boolean useSSL, boolean clientAuth, String keyStore, String keyStorePassword, String trustStore, String trustStorePassword) {\n    super(useSSL, clientAuth, keyStore, keyStorePassword, trustStore, trustStorePassword);\n    this.keyStore = tryNewResource(keyStore, \"KeyStore\");\n    this.trustStore = tryNewResource(trustStore, \"TrustStore\");\n  }\n\n","sourceOld":"  public SSLTestConfig(boolean useSSL, boolean clientAuth, String keyStore, String keyStorePassword, String trustStore, String trustStorePassword) {\n    super(useSSL, clientAuth, keyStore, keyStorePassword, trustStore, trustStorePassword);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4d712315b5a2501492c47430f7da53d570435b4","date":1496339458,"type":4,"author":"Chris Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean,String,String,String,String).mjava","sourceNew":null,"sourceOld":"  /** \n   * Create an SSLTestConfig using explicit paths for files \n   * @deprecated - use {@link SSLConfig} directly\n   */\n  @Deprecated\n  public SSLTestConfig(boolean useSSL, boolean clientAuth, String keyStore, String keyStorePassword, String trustStore, String trustStorePassword) {\n    super(useSSL, clientAuth, keyStore, keyStorePassword, trustStore, trustStorePassword);\n    this.keyStore = tryNewResource(keyStore, \"KeyStore\");\n    this.trustStore = tryNewResource(trustStore, \"TrustStore\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean,String,String,String,String).mjava","sourceNew":null,"sourceOld":"  /** \n   * Create an SSLTestConfig using explicit paths for files \n   * @deprecated - use {@link SSLConfig} directly\n   */\n  @Deprecated\n  public SSLTestConfig(boolean useSSL, boolean clientAuth, String keyStore, String keyStorePassword, String trustStore, String trustStorePassword) {\n    super(useSSL, clientAuth, keyStore, keyStorePassword, trustStore, trustStorePassword);\n    this.keyStore = tryNewResource(keyStore, \"KeyStore\");\n    this.trustStore = tryNewResource(trustStore, \"TrustStore\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#SSLTestConfig(boolean,boolean,String,String,String,String).mjava","sourceNew":null,"sourceOld":"  /** \n   * Create an SSLTestConfig using explicit paths for files \n   * @deprecated - use {@link SSLConfig} directly\n   */\n  @Deprecated\n  public SSLTestConfig(boolean useSSL, boolean clientAuth, String keyStore, String keyStorePassword, String trustStore, String trustStorePassword) {\n    super(useSSL, clientAuth, keyStore, keyStorePassword, trustStore, trustStorePassword);\n    this.keyStore = tryNewResource(keyStore, \"KeyStore\");\n    this.trustStore = tryNewResource(trustStore, \"TrustStore\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b4d712315b5a2501492c47430f7da53d570435b4":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["d470c8182e92b264680e34081b75e70a9f2b3c89","b4d712315b5a2501492c47430f7da53d570435b4"],"e62d73ba6ae98b5bdd8d3331704d91f5fbf06521":["9dee311b2816356910363a8d15fc076caf6367eb"],"a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd":["e62d73ba6ae98b5bdd8d3331704d91f5fbf06521"],"04effb6bae0254b6d8632d67c1ec9121b33aa56e":["a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9dee311b2816356910363a8d15fc076caf6367eb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["d470c8182e92b264680e34081b75e70a9f2b3c89","b4d712315b5a2501492c47430f7da53d570435b4"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd","04effb6bae0254b6d8632d67c1ec9121b33aa56e"]},"commit2Childs":{"b4d712315b5a2501492c47430f7da53d570435b4":["e9017cf144952056066919f1ebc7897ff9bd71b1","28288370235ed02234a64753cdbf0c6ec096304a"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"e62d73ba6ae98b5bdd8d3331704d91f5fbf06521":["a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd"],"a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd":["04effb6bae0254b6d8632d67c1ec9121b33aa56e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"04effb6bae0254b6d8632d67c1ec9121b33aa56e":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9dee311b2816356910363a8d15fc076caf6367eb"],"9dee311b2816356910363a8d15fc076caf6367eb":["e62d73ba6ae98b5bdd8d3331704d91f5fbf06521"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["b4d712315b5a2501492c47430f7da53d570435b4","e9017cf144952056066919f1ebc7897ff9bd71b1","28288370235ed02234a64753cdbf0c6ec096304a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}