{"path":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#eqPattern(Pattern,Pattern).mjava","commits":[{"id":"50e7972fe4865715af8951d4ba15555e3426fc5d","date":1115024647,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#eqPattern(Pattern,Pattern).mjava","pathOld":"/dev/null","sourceNew":"\t/** assumes p1 and p2 are not null */\n\tprivate static boolean eqPattern(Pattern p1, Pattern p2) {\n\t\treturn p1.flags() == p2.flags() && p1.pattern().equals(p2.pattern());\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8f14489323057ef6de92ba5ea2d0cfe6e34755f","date":1120167605,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#eqPattern(Pattern,Pattern).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#eqPattern(Pattern,Pattern).mjava","sourceNew":"\t/** assumes p1 and p2 are not null */\r\n\tprivate static boolean eqPattern(Pattern p1, Pattern p2) {\r\n\t\treturn p1 == p2 || (p1.flags() == p2.flags() && p1.pattern().equals(p2.pattern()));\r\n\t}\r\n\n","sourceOld":"\t/** assumes p1 and p2 are not null */\n\tprivate static boolean eqPattern(Pattern p1, Pattern p2) {\n\t\treturn p1.flags() == p2.flags() && p1.pattern().equals(p2.pattern());\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2542e236e1661f6d0e8e4aa8f09dd1495e58e35a","date":1133587576,"type":4,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#eqPattern(Pattern,Pattern).mjava","sourceNew":null,"sourceOld":"\t/** assumes p1 and p2 are not null */\r\n\tprivate static boolean eqPattern(Pattern p1, Pattern p2) {\r\n\t\treturn p1 == p2 || (p1.flags() == p2.flags() && p1.pattern().equals(p2.pattern()));\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29bb5af2486a9a013c0a0daffdb51dce2a3adb8e","date":1133587670,"type":0,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#eqPattern(Pattern,Pattern).mjava","pathOld":"/dev/null","sourceNew":"\t/** assumes p1 and p2 are not null */\n\tprivate static boolean eqPattern(Pattern p1, Pattern p2) {\n\t\treturn p1 == p2 || (p1.flags() == p2.flags() && p1.pattern().equals(p2.pattern()));\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f68e24227d5556d33ee6d586fd9010cd9ff8bec","date":1150091176,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#eqPattern(Pattern,Pattern).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#eqPattern(Pattern,Pattern).mjava","sourceNew":"  /** assumes p1 and p2 are not null */\n  private static boolean eqPattern(Pattern p1, Pattern p2) {\n    return p1 == p2 || (p1.flags() == p2.flags() && p1.pattern().equals(p2.pattern()));\n  }\n\n","sourceOld":"\t/** assumes p1 and p2 are not null */\n\tprivate static boolean eqPattern(Pattern p1, Pattern p2) {\n\t\treturn p1 == p2 || (p1.flags() == p2.flags() && p1.pattern().equals(p2.pattern()));\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d8c222875ac4ef7e08f3e25d40508b821d711ff","date":1257374221,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer#eqPattern(Pattern,Pattern).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#eqPattern(Pattern,Pattern).mjava","sourceNew":"  /** assumes p1 and p2 are not null */\n  private static boolean eqPattern(Pattern p1, Pattern p2) {\n    return p1 == p2 || (p1.flags() == p2.flags() && p1.pattern().equals(p2.pattern()));\n  }\n\n","sourceOld":"  /** assumes p1 and p2 are not null */\n  private static boolean eqPattern(Pattern p1, Pattern p2) {\n    return p1 == p2 || (p1.flags() == p2.flags() && p1.pattern().equals(p2.pattern()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2542e236e1661f6d0e8e4aa8f09dd1495e58e35a":["c8f14489323057ef6de92ba5ea2d0cfe6e34755f"],"0d8c222875ac4ef7e08f3e25d40508b821d711ff":["7f68e24227d5556d33ee6d586fd9010cd9ff8bec"],"29bb5af2486a9a013c0a0daffdb51dce2a3adb8e":["2542e236e1661f6d0e8e4aa8f09dd1495e58e35a"],"c8f14489323057ef6de92ba5ea2d0cfe6e34755f":["50e7972fe4865715af8951d4ba15555e3426fc5d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7f68e24227d5556d33ee6d586fd9010cd9ff8bec":["29bb5af2486a9a013c0a0daffdb51dce2a3adb8e"],"50e7972fe4865715af8951d4ba15555e3426fc5d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d8c222875ac4ef7e08f3e25d40508b821d711ff"]},"commit2Childs":{"2542e236e1661f6d0e8e4aa8f09dd1495e58e35a":["29bb5af2486a9a013c0a0daffdb51dce2a3adb8e"],"0d8c222875ac4ef7e08f3e25d40508b821d711ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29bb5af2486a9a013c0a0daffdb51dce2a3adb8e":["7f68e24227d5556d33ee6d586fd9010cd9ff8bec"],"c8f14489323057ef6de92ba5ea2d0cfe6e34755f":["2542e236e1661f6d0e8e4aa8f09dd1495e58e35a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["50e7972fe4865715af8951d4ba15555e3426fc5d"],"7f68e24227d5556d33ee6d586fd9010cd9ff8bec":["0d8c222875ac4ef7e08f3e25d40508b821d711ff"],"50e7972fe4865715af8951d4ba15555e3426fc5d":["c8f14489323057ef6de92ba5ea2d0cfe6e34755f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}