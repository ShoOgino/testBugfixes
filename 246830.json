{"path":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepSkipListReader#SepSkipListReader(IndexInput,IntIndexInput,IntIndexInput,IntIndexInput,int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepSkipListReader#SepSkipListReader(IndexInput,IntIndexInput,IntIndexInput,IntIndexInput,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/sep/SepSkipListReader#SepSkipListReader(IndexInput,IntIndexInput,IntIndexInput,IntIndexInput,int,int).mjava","sourceNew":"  SepSkipListReader(IndexInput skipStream,\n                    IntIndexInput freqIn,\n                    IntIndexInput docIn,\n                    IntIndexInput posIn,\n                    int maxSkipLevels,\n                    int skipInterval)\n    throws IOException {\n    super(skipStream, maxSkipLevels, skipInterval);\n    if (freqIn != null) {\n      freqIndex = new IntIndexInput.Index[maxSkipLevels];\n    }\n    docIndex = new IntIndexInput.Index[maxSkipLevels];\n    if (posIn != null) {\n      posIndex = new IntIndexInput.Index[maxNumberOfSkipLevels];\n    }\n    for(int i=0;i<maxSkipLevels;i++) {\n      if (freqIn != null) {\n        freqIndex[i] = freqIn.index();\n      }\n      docIndex[i] = docIn.index();\n      if (posIn != null) {\n        posIndex[i] = posIn.index();\n      }\n    }\n    payloadPointer = new long[maxSkipLevels];\n    payloadLength = new int[maxSkipLevels];\n\n    if (freqIn != null) {\n      lastFreqIndex = freqIn.index();\n    } else {\n      lastFreqIndex = null;\n    }\n    lastDocIndex = docIn.index();\n    if (posIn != null) {\n      lastPosIndex = posIn.index();\n    } else {\n      lastPosIndex = null;\n    }\n  }\n\n","sourceOld":"  SepSkipListReader(IndexInput skipStream,\n                    IntIndexInput freqIn,\n                    IntIndexInput docIn,\n                    IntIndexInput posIn,\n                    int maxSkipLevels,\n                    int skipInterval)\n    throws IOException {\n    super(skipStream, maxSkipLevels, skipInterval);\n    if (freqIn != null) {\n      freqIndex = new IntIndexInput.Index[maxSkipLevels];\n    }\n    docIndex = new IntIndexInput.Index[maxSkipLevels];\n    if (posIn != null) {\n      posIndex = new IntIndexInput.Index[maxNumberOfSkipLevels];\n    }\n    for(int i=0;i<maxSkipLevels;i++) {\n      if (freqIn != null) {\n        freqIndex[i] = freqIn.index();\n      }\n      docIndex[i] = docIn.index();\n      if (posIn != null) {\n        posIndex[i] = posIn.index();\n      }\n    }\n    payloadPointer = new long[maxSkipLevels];\n    payloadLength = new int[maxSkipLevels];\n\n    if (freqIn != null) {\n      lastFreqIndex = freqIn.index();\n    } else {\n      lastFreqIndex = null;\n    }\n    lastDocIndex = docIn.index();\n    if (posIn != null) {\n      lastPosIndex = posIn.index();\n    } else {\n      lastPosIndex = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/SepSkipListReader#SepSkipListReader(IndexInput,IntIndexInput,IntIndexInput,IntIndexInput,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepSkipListReader#SepSkipListReader(IndexInput,IntIndexInput,IntIndexInput,IntIndexInput,int,int).mjava","sourceNew":"  SepSkipListReader(IndexInput skipStream,\n                    IntIndexInput freqIn,\n                    IntIndexInput docIn,\n                    IntIndexInput posIn,\n                    int maxSkipLevels,\n                    int skipInterval)\n    throws IOException {\n    super(skipStream, maxSkipLevels, skipInterval);\n    if (freqIn != null) {\n      freqIndex = new IntIndexInput.Index[maxSkipLevels];\n    }\n    docIndex = new IntIndexInput.Index[maxSkipLevels];\n    if (posIn != null) {\n      posIndex = new IntIndexInput.Index[maxNumberOfSkipLevels];\n    }\n    for(int i=0;i<maxSkipLevels;i++) {\n      if (freqIn != null) {\n        freqIndex[i] = freqIn.index();\n      }\n      docIndex[i] = docIn.index();\n      if (posIn != null) {\n        posIndex[i] = posIn.index();\n      }\n    }\n    payloadPointer = new long[maxSkipLevels];\n    payloadLength = new int[maxSkipLevels];\n\n    if (freqIn != null) {\n      lastFreqIndex = freqIn.index();\n    } else {\n      lastFreqIndex = null;\n    }\n    lastDocIndex = docIn.index();\n    if (posIn != null) {\n      lastPosIndex = posIn.index();\n    } else {\n      lastPosIndex = null;\n    }\n  }\n\n","sourceOld":"  SepSkipListReader(IndexInput skipStream,\n                    IntIndexInput freqIn,\n                    IntIndexInput docIn,\n                    IntIndexInput posIn,\n                    int maxSkipLevels,\n                    int skipInterval)\n    throws IOException {\n    super(skipStream, maxSkipLevels, skipInterval);\n    if (freqIn != null) {\n      freqIndex = new IntIndexInput.Index[maxSkipLevels];\n    }\n    docIndex = new IntIndexInput.Index[maxSkipLevels];\n    if (posIn != null) {\n      posIndex = new IntIndexInput.Index[maxNumberOfSkipLevels];\n    }\n    for(int i=0;i<maxSkipLevels;i++) {\n      if (freqIn != null) {\n        freqIndex[i] = freqIn.index();\n      }\n      docIndex[i] = docIn.index();\n      if (posIn != null) {\n        posIndex[i] = posIn.index();\n      }\n    }\n    payloadPointer = new long[maxSkipLevels];\n    payloadLength = new int[maxSkipLevels];\n\n    if (freqIn != null) {\n      lastFreqIndex = freqIn.index();\n    } else {\n      lastFreqIndex = null;\n    }\n    lastDocIndex = docIn.index();\n    if (posIn != null) {\n      lastPosIndex = posIn.index();\n    } else {\n      lastPosIndex = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}