{"path":"solr/core/src/java/org/apache/solr/update/UpdateHandler#clearLog(PluginInfo).mjava","commits":[{"id":"51ebf85790e061a184c92543e35167545ad3384a","date":1355714182,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateHandler#clearLog(PluginInfo).mjava","pathOld":"/dev/null","sourceNew":"  // not thread safe - for startup\n  private void clearLog(PluginInfo ulogPluginInfo) {\n    if (ulog != null) {\n      String[] files = UpdateLog.getLogList(UpdateLog.getTlogDir(ulogPluginInfo));\n      for (String file : files) {\n        File f = new File(file);\n        boolean s = f.delete();\n        if (!s) {\n          log.error(\"Could not remove tlog file:\" + f);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3692c81ba50eadb4b788385855fbf436adbb804","date":1355860815,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateHandler#clearLog(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateHandler#clearLog(PluginInfo).mjava","sourceNew":"  // not thread safe - for startup\n  private void clearLog(PluginInfo ulogPluginInfo) {\n    File tlogDir = UpdateLog.getTlogDir(ulogPluginInfo);\n    if (tlogDir.exists()) {\n      String[] files = UpdateLog.getLogList(tlogDir);\n      for (String file : files) {\n        File f = new File(file);\n        boolean s = f.delete();\n        if (!s) {\n          log.error(\"Could not remove tlog file:\" + f);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  // not thread safe - for startup\n  private void clearLog(PluginInfo ulogPluginInfo) {\n    if (ulog != null) {\n      String[] files = UpdateLog.getLogList(UpdateLog.getTlogDir(ulogPluginInfo));\n      for (String file : files) {\n        File f = new File(file);\n        boolean s = f.delete();\n        if (!s) {\n          log.error(\"Could not remove tlog file:\" + f);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["35d4949191cb7719342c80ca01fee5b96a7e27db"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"35d4949191cb7719342c80ca01fee5b96a7e27db","date":1355862609,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateHandler#clearLog(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateHandler#clearLog(PluginInfo).mjava","sourceNew":"  // not thread safe - for startup\n  private void clearLog(PluginInfo ulogPluginInfo) {\n    if (ulogPluginInfo == null) return;\n    File tlogDir = UpdateLog.getTlogDir(core, ulogPluginInfo);\n    if (tlogDir.exists()) {\n      String[] files = UpdateLog.getLogList(tlogDir);\n      for (String file : files) {\n        File f = new File(file);\n        boolean s = f.delete();\n        if (!s) {\n          log.error(\"Could not remove tlog file:\" + f);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  // not thread safe - for startup\n  private void clearLog(PluginInfo ulogPluginInfo) {\n    File tlogDir = UpdateLog.getTlogDir(ulogPluginInfo);\n    if (tlogDir.exists()) {\n      String[] files = UpdateLog.getLogList(tlogDir);\n      for (String file : files) {\n        File f = new File(file);\n        boolean s = f.delete();\n        if (!s) {\n          log.error(\"Could not remove tlog file:\" + f);\n        }\n      }\n    }\n  }\n\n","bugFix":["e3692c81ba50eadb4b788385855fbf436adbb804"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateHandler#clearLog(PluginInfo).mjava","pathOld":"/dev/null","sourceNew":"  // not thread safe - for startup\n  private void clearLog(PluginInfo ulogPluginInfo) {\n    if (ulogPluginInfo == null) return;\n    File tlogDir = UpdateLog.getTlogDir(core, ulogPluginInfo);\n    if (tlogDir.exists()) {\n      String[] files = UpdateLog.getLogList(tlogDir);\n      for (String file : files) {\n        File f = new File(file);\n        boolean s = f.delete();\n        if (!s) {\n          log.error(\"Could not remove tlog file:\" + f);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f34540a6c0fe489164d2e2c4f22a7b63fba9f86","date":1361042405,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateHandler#clearLog(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateHandler#clearLog(PluginInfo).mjava","sourceNew":"  // not thread safe - for startup\n  private void clearLog(PluginInfo ulogPluginInfo) {\n    if (ulogPluginInfo == null) return;\n    File tlogDir = UpdateLog.getTlogDir(core, ulogPluginInfo);\n    log.info(\"Clearing tlog files, tlogDir=\" + tlogDir);\n    if (tlogDir.exists()) {\n      String[] files = UpdateLog.getLogList(tlogDir);\n      for (String file : files) {\n        File f = new File(tlogDir, file);\n        boolean s = f.delete();\n        if (!s) {\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not remove tlog file:\" + f.getAbsolutePath());\n        }\n      }\n    }\n  }\n\n","sourceOld":"  // not thread safe - for startup\n  private void clearLog(PluginInfo ulogPluginInfo) {\n    if (ulogPluginInfo == null) return;\n    File tlogDir = UpdateLog.getTlogDir(core, ulogPluginInfo);\n    if (tlogDir.exists()) {\n      String[] files = UpdateLog.getLogList(tlogDir);\n      for (String file : files) {\n        File f = new File(file);\n        boolean s = f.delete();\n        if (!s) {\n          log.error(\"Could not remove tlog file:\" + f);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateHandler#clearLog(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateHandler#clearLog(PluginInfo).mjava","sourceNew":"  // not thread safe - for startup\n  private void clearLog(PluginInfo ulogPluginInfo) {\n    if (ulogPluginInfo == null) return;\n    File tlogDir = UpdateLog.getTlogDir(core, ulogPluginInfo);\n    log.info(\"Clearing tlog files, tlogDir=\" + tlogDir);\n    if (tlogDir.exists()) {\n      String[] files = UpdateLog.getLogList(tlogDir);\n      for (String file : files) {\n        File f = new File(tlogDir, file);\n        boolean s = f.delete();\n        if (!s) {\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not remove tlog file:\" + f.getAbsolutePath());\n        }\n      }\n    }\n  }\n\n","sourceOld":"  // not thread safe - for startup\n  private void clearLog(PluginInfo ulogPluginInfo) {\n    if (ulogPluginInfo == null) return;\n    File tlogDir = UpdateLog.getTlogDir(core, ulogPluginInfo);\n    if (tlogDir.exists()) {\n      String[] files = UpdateLog.getLogList(tlogDir);\n      for (String file : files) {\n        File f = new File(file);\n        boolean s = f.delete();\n        if (!s) {\n          log.error(\"Could not remove tlog file:\" + f);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39d7f11d9b33e5f3fe55f27534d36ee2b8bc3d7e","date":1361200643,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateHandler#clearLog(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateHandler#clearLog(PluginInfo).mjava","sourceNew":"  // not thread safe - for startup\n  private void clearLog(PluginInfo ulogPluginInfo) {\n    if (ulogPluginInfo == null) return;\n    File tlogDir = UpdateLog.getTlogDir(core, ulogPluginInfo);\n    log.info(\"Clearing tlog files, tlogDir=\" + tlogDir);\n    if (tlogDir.exists()) {\n      String[] files = UpdateLog.getLogList(tlogDir);\n      for (String file : files) {\n        File f = new File(tlogDir, file);\n        boolean s = f.delete();\n        if (!s) {\n          log.error(\"Could not remove tlog file:\" + f.getAbsolutePath());\n          //throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not remove tlog file:\" + f.getAbsolutePath());\n        }\n      }\n    }\n  }\n\n","sourceOld":"  // not thread safe - for startup\n  private void clearLog(PluginInfo ulogPluginInfo) {\n    if (ulogPluginInfo == null) return;\n    File tlogDir = UpdateLog.getTlogDir(core, ulogPluginInfo);\n    log.info(\"Clearing tlog files, tlogDir=\" + tlogDir);\n    if (tlogDir.exists()) {\n      String[] files = UpdateLog.getLogList(tlogDir);\n      for (String file : files) {\n        File f = new File(tlogDir, file);\n        boolean s = f.delete();\n        if (!s) {\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not remove tlog file:\" + f.getAbsolutePath());\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#clearLog(SolrCore,PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateHandler#clearLog(PluginInfo).mjava","sourceNew":"  /**\n   * Clears the logs on the file system. Only call before init.\n   * \n   * @param core the SolrCore\n   * @param ulogPluginInfo the init info for the UpdateHandler\n   */\n  public void clearLog(SolrCore core, PluginInfo ulogPluginInfo) {\n    if (ulogPluginInfo == null) return;\n    File tlogDir = new File(getTlogDir(core, ulogPluginInfo));\n    if (tlogDir.exists()) {\n      String[] files = getLogList(tlogDir);\n      for (String file : files) {\n        File f = new File(tlogDir, file);\n        boolean s = f.delete();\n        if (!s) {\n          log.error(\"Could not remove tlog file:\" + f);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  // not thread safe - for startup\n  private void clearLog(PluginInfo ulogPluginInfo) {\n    if (ulogPluginInfo == null) return;\n    File tlogDir = UpdateLog.getTlogDir(core, ulogPluginInfo);\n    log.info(\"Clearing tlog files, tlogDir=\" + tlogDir);\n    if (tlogDir.exists()) {\n      String[] files = UpdateLog.getLogList(tlogDir);\n      for (String file : files) {\n        File f = new File(tlogDir, file);\n        boolean s = f.delete();\n        if (!s) {\n          log.error(\"Could not remove tlog file:\" + f.getAbsolutePath());\n          //throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not remove tlog file:\" + f.getAbsolutePath());\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateHandler#clearLog(PluginInfo).mjava","sourceNew":null,"sourceOld":"  // not thread safe - for startup\n  private void clearLog(PluginInfo ulogPluginInfo) {\n    if (ulogPluginInfo == null) return;\n    File tlogDir = UpdateLog.getTlogDir(core, ulogPluginInfo);\n    log.info(\"Clearing tlog files, tlogDir=\" + tlogDir);\n    if (tlogDir.exists()) {\n      String[] files = UpdateLog.getLogList(tlogDir);\n      for (String file : files) {\n        File f = new File(tlogDir, file);\n        boolean s = f.delete();\n        if (!s) {\n          log.error(\"Could not remove tlog file:\" + f.getAbsolutePath());\n          //throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not remove tlog file:\" + f.getAbsolutePath());\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["39d7f11d9b33e5f3fe55f27534d36ee2b8bc3d7e"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","35d4949191cb7719342c80ca01fee5b96a7e27db"],"39d7f11d9b33e5f3fe55f27534d36ee2b8bc3d7e":["8f34540a6c0fe489164d2e2c4f22a7b63fba9f86"],"35d4949191cb7719342c80ca01fee5b96a7e27db":["e3692c81ba50eadb4b788385855fbf436adbb804"],"e3692c81ba50eadb4b788385855fbf436adbb804":["51ebf85790e061a184c92543e35167545ad3384a"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["39d7f11d9b33e5f3fe55f27534d36ee2b8bc3d7e","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["35d4949191cb7719342c80ca01fee5b96a7e27db","8f34540a6c0fe489164d2e2c4f22a7b63fba9f86"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8f34540a6c0fe489164d2e2c4f22a7b63fba9f86":["35d4949191cb7719342c80ca01fee5b96a7e27db"],"51ebf85790e061a184c92543e35167545ad3384a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["849494cf2f3a96af5c8c84995108ddd8456fcd04"]},"commit2Childs":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"39d7f11d9b33e5f3fe55f27534d36ee2b8bc3d7e":["849494cf2f3a96af5c8c84995108ddd8456fcd04","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"35d4949191cb7719342c80ca01fee5b96a7e27db":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","95303ff3749680c743b9425f9cf99e6e4065e8a8","8f34540a6c0fe489164d2e2c4f22a7b63fba9f86"],"e3692c81ba50eadb4b788385855fbf436adbb804":["35d4949191cb7719342c80ca01fee5b96a7e27db"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","51ebf85790e061a184c92543e35167545ad3384a"],"8f34540a6c0fe489164d2e2c4f22a7b63fba9f86":["39d7f11d9b33e5f3fe55f27534d36ee2b8bc3d7e","95303ff3749680c743b9425f9cf99e6e4065e8a8"],"51ebf85790e061a184c92543e35167545ad3384a":["e3692c81ba50eadb4b788385855fbf436adbb804"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","37a0f60745e53927c4c876cfe5b5a58170f0646c","95303ff3749680c743b9425f9cf99e6e4065e8a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}