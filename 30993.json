{"path":"lucene/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testZeroPosIncrSloppyMpqAnd().mjava","commits":[{"id":"0226c4da52b4b59afa6d616cdf5bacb3733ca47e","date":1305730778,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testZeroPosIncrSloppyMpqAnd().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * MPQ AND Mode - Manually creating a multiple phrase query\n   */\n  public void testZeroPosIncrSloppyMpqAnd() throws IOException, ParseException {\n    final MultiPhraseQuery mpq = new MultiPhraseQuery();\n    for (TokenAndPos tap : INCR_0_QUERY_TOKENS_AND) {\n      mpq.add(new Term[]{new Term(\"field\",tap.token)}, tap.pos); //AND logic\n    }\n    doTestZeroPosIncrSloppy(mpq, 0);\n    mpq.setSlop(1);\n    doTestZeroPosIncrSloppy(mpq, 0);\n    mpq.setSlop(2);\n    doTestZeroPosIncrSloppy(mpq, 1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testZeroPosIncrSloppyMpqAnd().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * MPQ AND Mode - Manually creating a multiple phrase query\n   */\n  public void testZeroPosIncrSloppyMpqAnd() throws IOException, ParseException {\n    final MultiPhraseQuery mpq = new MultiPhraseQuery();\n    for (TokenAndPos tap : INCR_0_QUERY_TOKENS_AND) {\n      mpq.add(new Term[]{new Term(\"field\",tap.token)}, tap.pos); //AND logic\n    }\n    doTestZeroPosIncrSloppy(mpq, 0);\n    mpq.setSlop(1);\n    doTestZeroPosIncrSloppy(mpq, 0);\n    mpq.setSlop(2);\n    doTestZeroPosIncrSloppy(mpq, 1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testZeroPosIncrSloppyMpqAnd().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * MPQ AND Mode - Manually creating a multiple phrase query\n   */\n  public void testZeroPosIncrSloppyMpqAnd() throws IOException, ParseException {\n    final MultiPhraseQuery mpq = new MultiPhraseQuery();\n    for (TokenAndPos tap : INCR_0_QUERY_TOKENS_AND) {\n      mpq.add(new Term[]{new Term(\"field\",tap.token)}, tap.pos); //AND logic\n    }\n    doTestZeroPosIncrSloppy(mpq, 0);\n    mpq.setSlop(1);\n    doTestZeroPosIncrSloppy(mpq, 0);\n    mpq.setSlop(2);\n    doTestZeroPosIncrSloppy(mpq, 1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8","date":1310355420,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testZeroPosIncrSloppyMpqAnd().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testZeroPosIncrSloppyMpqAnd().mjava","sourceNew":"  /**\n   * MPQ AND Mode - Manually creating a multiple phrase query\n   */\n  public void testZeroPosIncrSloppyMpqAnd() throws IOException {\n    final MultiPhraseQuery mpq = new MultiPhraseQuery();\n    for (TokenAndPos tap : INCR_0_QUERY_TOKENS_AND) {\n      mpq.add(new Term[]{new Term(\"field\",tap.token)}, tap.pos); //AND logic\n    }\n    doTestZeroPosIncrSloppy(mpq, 0);\n    mpq.setSlop(1);\n    doTestZeroPosIncrSloppy(mpq, 0);\n    mpq.setSlop(2);\n    doTestZeroPosIncrSloppy(mpq, 1);\n  }\n\n","sourceOld":"  /**\n   * MPQ AND Mode - Manually creating a multiple phrase query\n   */\n  public void testZeroPosIncrSloppyMpqAnd() throws IOException, ParseException {\n    final MultiPhraseQuery mpq = new MultiPhraseQuery();\n    for (TokenAndPos tap : INCR_0_QUERY_TOKENS_AND) {\n      mpq.add(new Term[]{new Term(\"field\",tap.token)}, tap.pos); //AND logic\n    }\n    doTestZeroPosIncrSloppy(mpq, 0);\n    mpq.setSlop(1);\n    doTestZeroPosIncrSloppy(mpq, 0);\n    mpq.setSlop(2);\n    doTestZeroPosIncrSloppy(mpq, 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31f025ae60076ae95274433f3fe8e6ace2857a87","date":1326669465,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testZeroPosIncrSloppyMpqAnd().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testZeroPosIncrSloppyMpqAnd().mjava","sourceNew":"  /**\n   * MPQ AND Mode - Manually creating a multiple phrase query\n   */\n  public void testZeroPosIncrSloppyMpqAnd() throws IOException {\n    final MultiPhraseQuery mpq = new MultiPhraseQuery();\n    int pos = -1;\n    for (Token tap : INCR_0_QUERY_TOKENS_AND) {\n      pos += tap.getPositionIncrement();\n      mpq.add(new Term[]{new Term(\"field\",tap.toString())}, pos); //AND logic\n    }\n    doTestZeroPosIncrSloppy(mpq, 0);\n    mpq.setSlop(1);\n    doTestZeroPosIncrSloppy(mpq, 0);\n    mpq.setSlop(2);\n    doTestZeroPosIncrSloppy(mpq, 1);\n  }\n\n","sourceOld":"  /**\n   * MPQ AND Mode - Manually creating a multiple phrase query\n   */\n  public void testZeroPosIncrSloppyMpqAnd() throws IOException {\n    final MultiPhraseQuery mpq = new MultiPhraseQuery();\n    for (TokenAndPos tap : INCR_0_QUERY_TOKENS_AND) {\n      mpq.add(new Term[]{new Term(\"field\",tap.token)}, tap.pos); //AND logic\n    }\n    doTestZeroPosIncrSloppy(mpq, 0);\n    mpq.setSlop(1);\n    doTestZeroPosIncrSloppy(mpq, 0);\n    mpq.setSlop(2);\n    doTestZeroPosIncrSloppy(mpq, 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testZeroPosIncrSloppyMpqAnd().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiPhraseQuery#testZeroPosIncrSloppyMpqAnd().mjava","sourceNew":"  /**\n   * MPQ AND Mode - Manually creating a multiple phrase query\n   */\n  public void testZeroPosIncrSloppyMpqAnd() throws IOException {\n    final MultiPhraseQuery mpq = new MultiPhraseQuery();\n    int pos = -1;\n    for (Token tap : INCR_0_QUERY_TOKENS_AND) {\n      pos += tap.getPositionIncrement();\n      mpq.add(new Term[]{new Term(\"field\",tap.toString())}, pos); //AND logic\n    }\n    doTestZeroPosIncrSloppy(mpq, 0);\n    mpq.setSlop(1);\n    doTestZeroPosIncrSloppy(mpq, 0);\n    mpq.setSlop(2);\n    doTestZeroPosIncrSloppy(mpq, 1);\n  }\n\n","sourceOld":"  /**\n   * MPQ AND Mode - Manually creating a multiple phrase query\n   */\n  public void testZeroPosIncrSloppyMpqAnd() throws IOException {\n    final MultiPhraseQuery mpq = new MultiPhraseQuery();\n    int pos = -1;\n    for (Token tap : INCR_0_QUERY_TOKENS_AND) {\n      pos += tap.getPositionIncrement();\n      mpq.add(new Term[]{new Term(\"field\",tap.toString())}, pos); //AND logic\n    }\n    doTestZeroPosIncrSloppy(mpq, 0);\n    mpq.setSlop(1);\n    doTestZeroPosIncrSloppy(mpq, 0);\n    mpq.setSlop(2);\n    doTestZeroPosIncrSloppy(mpq, 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c3a8a449466c1ff7ce2274fe73dab487256964b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0226c4da52b4b59afa6d616cdf5bacb3733ca47e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0226c4da52b4b59afa6d616cdf5bacb3733ca47e"],"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["0226c4da52b4b59afa6d616cdf5bacb3733ca47e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0226c4da52b4b59afa6d616cdf5bacb3733ca47e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8"]},"commit2Childs":{"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","0226c4da52b4b59afa6d616cdf5bacb3733ca47e"],"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"0226c4da52b4b59afa6d616cdf5bacb3733ca47e":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","91a3609ac9a09ca0c8eee1b765401bbdacaceaf8"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}