{"path":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(store, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(store, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7f8e68717c68517265937c911e1ce9f25750247","date":1274071103,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(store, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(store, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    store = newDirectory(random);\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(store, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    store = newDirectory(random);\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(store, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    store = newDirectory();\n    IndexWriter writer = new IndexWriter(store, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(newField(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e230a61047bc041516c811baa08a7174d6f8322a":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["c7f8e68717c68517265937c911e1ce9f25750247"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["43b04c27924fe393e38e9f0986e32c634f261859","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"c7f8e68717c68517265937c911e1ce9f25750247":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["c7f8e68717c68517265937c911e1ce9f25750247","43b04c27924fe393e38e9f0986e32c634f261859"],"43b04c27924fe393e38e9f0986e32c634f261859":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["43b04c27924fe393e38e9f0986e32c634f261859"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","e230a61047bc041516c811baa08a7174d6f8322a"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["43b04c27924fe393e38e9f0986e32c634f261859","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e230a61047bc041516c811baa08a7174d6f8322a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["135621f3a0670a9394eb563224a3b76cc4dddc0f","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"e230a61047bc041516c811baa08a7174d6f8322a":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"c7f8e68717c68517265937c911e1ce9f25750247":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["43b04c27924fe393e38e9f0986e32c634f261859"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"43b04c27924fe393e38e9f0986e32c634f261859":["135621f3a0670a9394eb563224a3b76cc4dddc0f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["e230a61047bc041516c811baa08a7174d6f8322a","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c7f8e68717c68517265937c911e1ce9f25750247"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["962d04139994fce5193143ef35615499a9a96d78","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}