{"path":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingDocsEnum#AssertingDocsEnum(DocsEnum,boolean).mjava","commits":[{"id":"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173","date":1365631993,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingDocsEnum#AssertingDocsEnum(DocsEnum,boolean).mjava","pathOld":"/dev/null","sourceNew":"    public AssertingDocsEnum(DocsEnum in, boolean failOnUnsupportedDocID) {\n      super(in);\n      try {\n        int docid = in.docID();\n        assert docid == -1 || docid == DocIdSetIterator.NO_MORE_DOCS : in.getClass() + \": invalid initial doc id: \" + docid;\n      } catch (UnsupportedOperationException e) {\n        if (failOnUnsupportedDocID) {\n          throw e;\n        }\n      }\n      doc = -1;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af527d067afb6ca5bd58afc7b9a5fbc0f80979af","date":1366034882,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingDocsEnum#AssertingDocsEnum(DocsEnum,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingDocsEnum#AssertingDocsEnum(DocsEnum,boolean).mjava","sourceNew":"    public AssertingDocsEnum(DocsEnum in, boolean failOnUnsupportedDocID) {\n      super(in);\n      try {\n        int docid = in.docID();\n        assert docid == -1 : in.getClass() + \": invalid initial doc id: \" + docid;\n      } catch (UnsupportedOperationException e) {\n        if (failOnUnsupportedDocID) {\n          throw e;\n        }\n      }\n      doc = -1;\n    }\n\n","sourceOld":"    public AssertingDocsEnum(DocsEnum in, boolean failOnUnsupportedDocID) {\n      super(in);\n      try {\n        int docid = in.docID();\n        assert docid == -1 || docid == DocIdSetIterator.NO_MORE_DOCS : in.getClass() + \": invalid initial doc id: \" + docid;\n      } catch (UnsupportedOperationException e) {\n        if (failOnUnsupportedDocID) {\n          throw e;\n        }\n      }\n      doc = -1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":5,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingDocsEnum#AssertingDocsEnum(DocsEnum,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingDocsEnum#AssertingDocsEnum(DocsEnum,boolean).mjava","sourceNew":"    public AssertingDocsEnum(DocsEnum in, boolean failOnUnsupportedDocID) {\n      super(in);\n      try {\n        int docid = in.docID();\n        assert docid == -1 : in.getClass() + \": invalid initial doc id: \" + docid;\n      } catch (UnsupportedOperationException e) {\n        if (failOnUnsupportedDocID) {\n          throw e;\n        }\n      }\n      doc = -1;\n    }\n\n","sourceOld":"    public AssertingDocsEnum(DocsEnum in, boolean failOnUnsupportedDocID) {\n      super(in);\n      try {\n        int docid = in.docID();\n        assert docid == -1 : in.getClass() + \": invalid initial doc id: \" + docid;\n      } catch (UnsupportedOperationException e) {\n        if (failOnUnsupportedDocID) {\n          throw e;\n        }\n      }\n      doc = -1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af527d067afb6ca5bd58afc7b9a5fbc0f80979af":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["af527d067afb6ca5bd58afc7b9a5fbc0f80979af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"af527d067afb6ca5bd58afc7b9a5fbc0f80979af":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173"],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["af527d067afb6ca5bd58afc7b9a5fbc0f80979af"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}