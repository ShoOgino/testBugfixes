{"path":"lucene/src/java/org/apache/lucene/index/codecs/BlockTreeTermsReader.FieldReader.IntersectEnum#copyTerm().mjava","commits":[{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTreeTermsReader.FieldReader.IntersectEnum#copyTerm().mjava","pathOld":"/dev/null","sourceNew":"      private void copyTerm() {\n        //System.out.println(\"      copyTerm cur.prefix=\" + currentFrame.prefix + \" cur.suffix=\" + currentFrame.suffix + \" first=\" + (char) currentFrame.suffixBytes[currentFrame.startBytePos]);\n        final int len = currentFrame.prefix + currentFrame.suffix;\n        if (term.bytes.length < len) {\n          term.bytes = ArrayUtil.grow(term.bytes, len);\n        }\n        System.arraycopy(currentFrame.suffixBytes, currentFrame.startBytePos, term.bytes, currentFrame.prefix, currentFrame.suffix);\n        term.length = len;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.IntersectEnum#copyTerm().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTreeTermsReader.FieldReader.IntersectEnum#copyTerm().mjava","sourceNew":"      private void copyTerm() {\n        //System.out.println(\"      copyTerm cur.prefix=\" + currentFrame.prefix + \" cur.suffix=\" + currentFrame.suffix + \" first=\" + (char) currentFrame.suffixBytes[currentFrame.startBytePos]);\n        final int len = currentFrame.prefix + currentFrame.suffix;\n        if (term.bytes.length < len) {\n          term.bytes = ArrayUtil.grow(term.bytes, len);\n        }\n        System.arraycopy(currentFrame.suffixBytes, currentFrame.startBytePos, term.bytes, currentFrame.prefix, currentFrame.suffix);\n        term.length = len;\n      }\n\n","sourceOld":"      private void copyTerm() {\n        //System.out.println(\"      copyTerm cur.prefix=\" + currentFrame.prefix + \" cur.suffix=\" + currentFrame.suffix + \" first=\" + (char) currentFrame.suffixBytes[currentFrame.startBytePos]);\n        final int len = currentFrame.prefix + currentFrame.suffix;\n        if (term.bytes.length < len) {\n          term.bytes = ArrayUtil.grow(term.bytes, len);\n        }\n        System.arraycopy(currentFrame.suffixBytes, currentFrame.startBytePos, term.bytes, currentFrame.prefix, currentFrame.suffix);\n        term.length = len;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}