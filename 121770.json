{"path":"lucene/core/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#seekCeil(BytesRef,boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#seekCeil(BytesRef,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n      if (VERBOSE) System.out.println(\"te.seek text=\" + field.name + \":\" + text.utf8ToString() + \" this=\" + this);\n      current = fstEnum.seekCeil(text);\n      if (current == null) {\n        return SeekStatus.END;\n      } else {\n        if (VERBOSE) {\n          System.out.println(\"  got term=\" + current.input.utf8ToString());\n          for(int i=0;i<current.output.length;i++) {\n            System.out.println(\"    \" + Integer.toHexString(current.output.bytes[i]&0xFF));\n          }\n        }\n\n        didDecode = false;\n\n        if (text.equals(current.input)) {\n          if (VERBOSE) System.out.println(\"  found!\");\n          return SeekStatus.FOUND;\n        } else {\n          if (VERBOSE) System.out.println(\"  not found: \" + current.input.utf8ToString());\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n      if (VERBOSE) System.out.println(\"te.seek text=\" + field.name + \":\" + text.utf8ToString() + \" this=\" + this);\n      current = fstEnum.seekCeil(text);\n      if (current == null) {\n        return SeekStatus.END;\n      } else {\n        if (VERBOSE) {\n          System.out.println(\"  got term=\" + current.input.utf8ToString());\n          for(int i=0;i<current.output.length;i++) {\n            System.out.println(\"    \" + Integer.toHexString(current.output.bytes[i]&0xFF));\n          }\n        }\n\n        didDecode = false;\n\n        if (text.equals(current.input)) {\n          if (VERBOSE) System.out.println(\"  found!\");\n          return SeekStatus.FOUND;\n        } else {\n          if (VERBOSE) System.out.println(\"  not found: \" + current.input.utf8ToString());\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06e9e87a586e724774d060a39c60ed1178637952","date":1331555866,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#seekCeil(BytesRef,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n      //System.out.println(\"te.seek text=\" + field.name + \":\" + text.utf8ToString() + \" this=\" + this);\n      current = fstEnum.seekCeil(text);\n      if (current == null) {\n        return SeekStatus.END;\n      } else {\n\n        // System.out.println(\"  got term=\" + current.input.utf8ToString());\n        // for(int i=0;i<current.output.length;i++) {\n        //   System.out.println(\"    \" + Integer.toHexString(current.output.bytes[i]&0xFF));\n        // }\n\n        didDecode = false;\n\n        if (text.equals(current.input)) {\n          //System.out.println(\"  found!\");\n          return SeekStatus.FOUND;\n        } else {\n          //System.out.println(\"  not found: \" + current.input.utf8ToString());\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n      if (VERBOSE) System.out.println(\"te.seek text=\" + field.name + \":\" + text.utf8ToString() + \" this=\" + this);\n      current = fstEnum.seekCeil(text);\n      if (current == null) {\n        return SeekStatus.END;\n      } else {\n        if (VERBOSE) {\n          System.out.println(\"  got term=\" + current.input.utf8ToString());\n          for(int i=0;i<current.output.length;i++) {\n            System.out.println(\"    \" + Integer.toHexString(current.output.bytes[i]&0xFF));\n          }\n        }\n\n        didDecode = false;\n\n        if (text.equals(current.input)) {\n          if (VERBOSE) System.out.println(\"  found!\");\n          return SeekStatus.FOUND;\n        } else {\n          if (VERBOSE) System.out.println(\"  not found: \" + current.input.utf8ToString());\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#seekCeil(BytesRef,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n      //System.out.println(\"te.seek text=\" + field.name + \":\" + text.utf8ToString() + \" this=\" + this);\n      current = fstEnum.seekCeil(text);\n      if (current == null) {\n        return SeekStatus.END;\n      } else {\n\n        // System.out.println(\"  got term=\" + current.input.utf8ToString());\n        // for(int i=0;i<current.output.length;i++) {\n        //   System.out.println(\"    \" + Integer.toHexString(current.output.bytes[i]&0xFF));\n        // }\n\n        didDecode = false;\n\n        if (text.equals(current.input)) {\n          //System.out.println(\"  found!\");\n          return SeekStatus.FOUND;\n        } else {\n          //System.out.println(\"  not found: \" + current.input.utf8ToString());\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n      if (VERBOSE) System.out.println(\"te.seek text=\" + field.name + \":\" + text.utf8ToString() + \" this=\" + this);\n      current = fstEnum.seekCeil(text);\n      if (current == null) {\n        return SeekStatus.END;\n      } else {\n        if (VERBOSE) {\n          System.out.println(\"  got term=\" + current.input.utf8ToString());\n          for(int i=0;i<current.output.length;i++) {\n            System.out.println(\"    \" + Integer.toHexString(current.output.bytes[i]&0xFF));\n          }\n        }\n\n        didDecode = false;\n\n        if (text.equals(current.input)) {\n          if (VERBOSE) System.out.println(\"  found!\");\n          return SeekStatus.FOUND;\n        } else {\n          if (VERBOSE) System.out.println(\"  not found: \" + current.input.utf8ToString());\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#seekCeil(BytesRef,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n      //System.out.println(\"te.seek text=\" + field.name + \":\" + text.utf8ToString() + \" this=\" + this);\n      current = fstEnum.seekCeil(text);\n      if (current == null) {\n        return SeekStatus.END;\n      } else {\n\n        // System.out.println(\"  got term=\" + current.input.utf8ToString());\n        // for(int i=0;i<current.output.length;i++) {\n        //   System.out.println(\"    \" + Integer.toHexString(current.output.bytes[i]&0xFF));\n        // }\n\n        didDecode = false;\n\n        if (text.equals(current.input)) {\n          //System.out.println(\"  found!\");\n          return SeekStatus.FOUND;\n        } else {\n          //System.out.println(\"  not found: \" + current.input.utf8ToString());\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n      //System.out.println(\"te.seek text=\" + field.name + \":\" + text.utf8ToString() + \" this=\" + this);\n      current = fstEnum.seekCeil(text);\n      if (current == null) {\n        return SeekStatus.END;\n      } else {\n\n        // System.out.println(\"  got term=\" + current.input.utf8ToString());\n        // for(int i=0;i<current.output.length;i++) {\n        //   System.out.println(\"    \" + Integer.toHexString(current.output.bytes[i]&0xFF));\n        // }\n\n        didDecode = false;\n\n        if (text.equals(current.input)) {\n          //System.out.println(\"  found!\");\n          return SeekStatus.FOUND;\n        } else {\n          //System.out.println(\"  not found: \" + current.input.utf8ToString());\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","06e9e87a586e724774d060a39c60ed1178637952"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["06e9e87a586e724774d060a39c60ed1178637952"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"06e9e87a586e724774d060a39c60ed1178637952":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["38e3b736c7ca086d61b7dbb841c905ee115490da","06e9e87a586e724774d060a39c60ed1178637952"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"06e9e87a586e724774d060a39c60ed1178637952":["38e3b736c7ca086d61b7dbb841c905ee115490da","3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}