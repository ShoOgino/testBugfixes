{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","sourceNew":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery;\n\n  }\n\n","sourceOld":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","sourceNew":"  @Override\n  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery;\n\n  }\n\n","sourceOld":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","sourceNew":"  @Override\n  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery;\n\n  }\n\n","sourceOld":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","sourceNew":"  @Override\n  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;\n\n    BooleanQuery.Builder bQuery = new BooleanQuery.Builder();\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery.build();\n\n  }\n\n","sourceOld":"  @Override\n  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36c70eb3b44de4355a7168b762cadc0f1cf194bc","date":1561542955,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","sourceNew":"  @Override\n  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;\n\n    BooleanQuery.Builder bQuery = new BooleanQuery.Builder();\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, IndexSearcher\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery.build();\n\n  }\n\n","sourceOld":"  @Override\n  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;\n\n    BooleanQuery.Builder bQuery = new BooleanQuery.Builder();\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery.build();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7530de27b87b961b51f01bd1299b7004d46e8823"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["7530de27b87b961b51f01bd1299b7004d46e8823"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"36c70eb3b44de4355a7168b762cadc0f1cf194bc":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"7530de27b87b961b51f01bd1299b7004d46e8823":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["36c70eb3b44de4355a7168b762cadc0f1cf194bc"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["36c70eb3b44de4355a7168b762cadc0f1cf194bc"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"36c70eb3b44de4355a7168b762cadc0f1cf194bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}