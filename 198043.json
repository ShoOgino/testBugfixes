{"path":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ee056ec8e953928ee49a691090634eed1fa4d6b","date":1274852580,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = getFieldQuery(field, termImage, !matchVersion.onOrAfter(Version.LUCENE_31));\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"33e4a95ed08968b85d84e9fba82424f1fd945fbb","date":1274878310,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = getFieldQuery(field, termImage, !matchVersion.onOrAfter(Version.LUCENE_31));\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"55f0d8e9a3f2e45eeea14a4803eaac02a0865097","date":1279565910,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = hasNewAPI ? getFieldQuery(field, termImage, false) : getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = hasNewAPI ? getFieldQuery(field, termImage, false) : getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d94d6afa51157e490fc169e192a154ffc4cdad0b","date":1283184289,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (regexp) {\n         q = getRegexpQuery(field, term.image.substring(1, term.image.length()-1));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = hasNewAPI ? getFieldQuery(field, termImage, false) : getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = hasNewAPI ? getFieldQuery(field, termImage, false) : getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a4d59223802237d352245759cf541e315aab20a","date":1285686672,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (regexp) {\n         q = getRegexpQuery(field, term.image.substring(1, term.image.length()-1));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         } else if (fms >= 1.0f && fms != (int) fms) {\n           {if (true) throw new ParseException(\"Fractional edit distances are not allowed!\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = hasNewAPI ? getFieldQuery(field, termImage, false) : getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (regexp) {\n         q = getRegexpQuery(field, term.image.substring(1, term.image.length()-1));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = hasNewAPI ? getFieldQuery(field, termImage, false) : getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9e87c4193bc100c3b96235f14bee01a5b2009ce5","date":1287756261,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       q = handleBareTokenQuery(field, term, fuzzySlop, prefix, wildcard, fuzzy, regexp);\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         q = handleQuotedTerm(field, term, fuzzySlop);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (regexp) {\n         q = getRegexpQuery(field, term.image.substring(1, term.image.length()-1));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         } else if (fms >= 1.0f && fms != (int) fms) {\n           {if (true) throw new ParseException(\"Fractional edit distances are not allowed!\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = hasNewAPI ? getFieldQuery(field, termImage, false) : getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4e9bbb27241bcf9645bb2f724c137537aa69918a","date":1287780008,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  boolean startInc=false;\n  boolean endInc=false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       q = handleBareTokenQuery(field, term, fuzzySlop, prefix, wildcard, fuzzy, regexp);\n      break;\n    case RANGEIN_START:\n    case RANGEEX_START:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_START:\n        jj_consume_token(RANGEIN_START);\n                            startInc=true;\n        break;\n      case RANGEEX_START:\n        jj_consume_token(RANGEEX_START);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop1 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop1 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_TO:\n        jj_consume_token(RANGE_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop2 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop2 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_END:\n        jj_consume_token(RANGEIN_END);\n                          endInc=true;\n        break;\n      case RANGEEX_END:\n        jj_consume_token(RANGEEX_END);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGE_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGE_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), startInc, endInc);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n         q = handleQuotedTerm(field, term, fuzzySlop);\n      break;\n    default:\n      jj_la1[20] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       q = handleBareTokenQuery(field, term, fuzzySlop, prefix, wildcard, fuzzy, regexp);\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         q = handleQuotedTerm(field, term, fuzzySlop);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":["471724efa83a52ac3ce4aec0a6e9f1836fa71bf3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"65e2e921993a78565715c17f099593272b4a92bd","date":1287833451,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  boolean startInc=false;\n  boolean endInc=false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       q = handleBareTokenQuery(field, term, fuzzySlop, prefix, wildcard, fuzzy, regexp);\n      break;\n    case RANGEIN_START:\n    case RANGEEX_START:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_START:\n        jj_consume_token(RANGEIN_START);\n                            startInc=true;\n        break;\n      case RANGEEX_START:\n        jj_consume_token(RANGEEX_START);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop1 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop1 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_TO:\n        jj_consume_token(RANGE_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop2 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop2 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_END:\n        jj_consume_token(RANGEIN_END);\n                          endInc=true;\n        break;\n      case RANGEEX_END:\n        jj_consume_token(RANGEEX_END);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n          boolean startOpen=false;\n          boolean endOpen=false;\n          if (goop1.kind == RANGE_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else if (\"*\".equals(goop1.image)) {\n            startOpen=true;\n          }\n          if (goop2.kind == RANGE_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          } else if (\"*\".equals(goop2.image)) {\n            endOpen=true;\n          }\n          q = getRangeQuery(field, startOpen ? null : discardEscapeChar(goop1.image), endOpen ? null : discardEscapeChar(goop2.image), startInc, endInc);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n         q = handleQuotedTerm(field, term, fuzzySlop);\n      break;\n    default:\n      jj_la1[20] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  boolean startInc=false;\n  boolean endInc=false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       q = handleBareTokenQuery(field, term, fuzzySlop, prefix, wildcard, fuzzy, regexp);\n      break;\n    case RANGEIN_START:\n    case RANGEEX_START:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_START:\n        jj_consume_token(RANGEIN_START);\n                            startInc=true;\n        break;\n      case RANGEEX_START:\n        jj_consume_token(RANGEEX_START);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop1 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop1 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_TO:\n        jj_consume_token(RANGE_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop2 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop2 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_END:\n        jj_consume_token(RANGEIN_END);\n                          endInc=true;\n        break;\n      case RANGEEX_END:\n        jj_consume_token(RANGEEX_END);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGE_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGE_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), startInc, endInc);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n         q = handleQuotedTerm(field, term, fuzzySlop);\n      break;\n    default:\n      jj_la1[20] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b12d3e81e0f95a4527b5703953c503f71120ffcc","date":1288080933,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  boolean startInc=false;\n  boolean endInc=false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       q = handleBareTokenQuery(field, term, fuzzySlop, prefix, wildcard, fuzzy, regexp);\n      break;\n    case RANGEIN_START:\n    case RANGEEX_START:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_START:\n        jj_consume_token(RANGEIN_START);\n                            startInc=true;\n        break;\n      case RANGEEX_START:\n        jj_consume_token(RANGEEX_START);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop1 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop1 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_TO:\n        jj_consume_token(RANGE_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop2 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop2 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_END:\n        jj_consume_token(RANGEIN_END);\n                          endInc=true;\n        break;\n      case RANGEEX_END:\n        jj_consume_token(RANGEEX_END);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n          boolean startOpen=false;\n          boolean endOpen=false;\n          if (goop1.kind == RANGE_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else if (\"*\".equals(goop1.image)) {\n            startOpen=true;\n          }\n          if (goop2.kind == RANGE_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          } else if (\"*\".equals(goop2.image)) {\n            endOpen=true;\n          }\n          q = getRangeQuery(field, startOpen ? null : discardEscapeChar(goop1.image), endOpen ? null : discardEscapeChar(goop2.image), startInc, endInc);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n         q = handleQuotedTerm(field, term, fuzzySlop);\n      break;\n    default:\n      jj_la1[20] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (regexp) {\n         q = getRegexpQuery(field, term.image.substring(1, term.image.length()-1));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         } else if (fms >= 1.0f && fms != (int) fms) {\n           {if (true) throw new ParseException(\"Fractional edit distances are not allowed!\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = hasNewAPI ? getFieldQuery(field, termImage, false) : getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b8488cadcd1dfaaf25307c360bb8cbb6ce8ab4f","date":1288120493,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  boolean startInc=false;\n  boolean endInc=false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      case BAREOPER:\n        term = jj_consume_token(BAREOPER);\n                           term.image = term.image.substring(0,1);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       q = handleBareTokenQuery(field, term, fuzzySlop, prefix, wildcard, fuzzy, regexp);\n      break;\n    case RANGEIN_START:\n    case RANGEEX_START:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_START:\n        jj_consume_token(RANGEIN_START);\n                            startInc=true;\n        break;\n      case RANGEEX_START:\n        jj_consume_token(RANGEEX_START);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop1 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop1 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_TO:\n        jj_consume_token(RANGE_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop2 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop2 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_END:\n        jj_consume_token(RANGEIN_END);\n                          endInc=true;\n        break;\n      case RANGEEX_END:\n        jj_consume_token(RANGEEX_END);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n          boolean startOpen=false;\n          boolean endOpen=false;\n          if (goop1.kind == RANGE_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else if (\"*\".equals(goop1.image)) {\n            startOpen=true;\n          }\n          if (goop2.kind == RANGE_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          } else if (\"*\".equals(goop2.image)) {\n            endOpen=true;\n          }\n          q = getRangeQuery(field, startOpen ? null : discardEscapeChar(goop1.image), endOpen ? null : discardEscapeChar(goop2.image), startInc, endInc);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n         q = handleQuotedTerm(field, term, fuzzySlop);\n      break;\n    default:\n      jj_la1[20] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  boolean startInc=false;\n  boolean endInc=false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       q = handleBareTokenQuery(field, term, fuzzySlop, prefix, wildcard, fuzzy, regexp);\n      break;\n    case RANGEIN_START:\n    case RANGEEX_START:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_START:\n        jj_consume_token(RANGEIN_START);\n                            startInc=true;\n        break;\n      case RANGEEX_START:\n        jj_consume_token(RANGEEX_START);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop1 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop1 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_TO:\n        jj_consume_token(RANGE_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop2 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop2 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_END:\n        jj_consume_token(RANGEIN_END);\n                          endInc=true;\n        break;\n      case RANGEEX_END:\n        jj_consume_token(RANGEEX_END);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n          boolean startOpen=false;\n          boolean endOpen=false;\n          if (goop1.kind == RANGE_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else if (\"*\".equals(goop1.image)) {\n            startOpen=true;\n          }\n          if (goop2.kind == RANGE_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          } else if (\"*\".equals(goop2.image)) {\n            endOpen=true;\n          }\n          q = getRangeQuery(field, startOpen ? null : discardEscapeChar(goop1.image), endOpen ? null : discardEscapeChar(goop2.image), startInc, endInc);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n         q = handleQuotedTerm(field, term, fuzzySlop);\n      break;\n    default:\n      jj_la1[20] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ca0ffea399542e8aac8ed7608f34f8ec4cb8904d","date":1288424244,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  boolean startInc=false;\n  boolean endInc=false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      case BAREOPER:\n        term = jj_consume_token(BAREOPER);\n                           term.image = term.image.substring(0,1);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       q = handleBareTokenQuery(field, term, fuzzySlop, prefix, wildcard, fuzzy, regexp);\n      break;\n    case RANGEIN_START:\n    case RANGEEX_START:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_START:\n        jj_consume_token(RANGEIN_START);\n                            startInc=true;\n        break;\n      case RANGEEX_START:\n        jj_consume_token(RANGEEX_START);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop1 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop1 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_TO:\n        jj_consume_token(RANGE_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop2 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop2 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_END:\n        jj_consume_token(RANGEIN_END);\n                          endInc=true;\n        break;\n      case RANGEEX_END:\n        jj_consume_token(RANGEEX_END);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n          boolean startOpen=false;\n          boolean endOpen=false;\n          if (goop1.kind == RANGE_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else if (\"*\".equals(goop1.image)) {\n            startOpen=true;\n          }\n          if (goop2.kind == RANGE_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          } else if (\"*\".equals(goop2.image)) {\n            endOpen=true;\n          }\n          q = getRangeQuery(field, startOpen ? null : discardEscapeChar(goop1.image), endOpen ? null : discardEscapeChar(goop2.image), startInc, endInc);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n         q = handleQuotedTerm(field, term, fuzzySlop);\n      break;\n    default:\n      jj_la1[20] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  boolean startInc=false;\n  boolean endInc=false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       q = handleBareTokenQuery(field, term, fuzzySlop, prefix, wildcard, fuzzy, regexp);\n      break;\n    case RANGEIN_START:\n    case RANGEEX_START:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_START:\n        jj_consume_token(RANGEIN_START);\n                            startInc=true;\n        break;\n      case RANGEEX_START:\n        jj_consume_token(RANGEEX_START);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop1 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop1 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_TO:\n        jj_consume_token(RANGE_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop2 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop2 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_END:\n        jj_consume_token(RANGEIN_END);\n                          endInc=true;\n        break;\n      case RANGEEX_END:\n        jj_consume_token(RANGEEX_END);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n          boolean startOpen=false;\n          boolean endOpen=false;\n          if (goop1.kind == RANGE_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else if (\"*\".equals(goop1.image)) {\n            startOpen=true;\n          }\n          if (goop2.kind == RANGE_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          } else if (\"*\".equals(goop2.image)) {\n            endOpen=true;\n          }\n          q = getRangeQuery(field, startOpen ? null : discardEscapeChar(goop1.image), endOpen ? null : discardEscapeChar(goop2.image), startInc, endInc);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n         q = handleQuotedTerm(field, term, fuzzySlop);\n      break;\n    default:\n      jj_la1[20] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  boolean startInc=false;\n  boolean endInc=false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      case BAREOPER:\n        term = jj_consume_token(BAREOPER);\n                           term.image = term.image.substring(0,1);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       q = handleBareTokenQuery(field, term, fuzzySlop, prefix, wildcard, fuzzy, regexp);\n      break;\n    case RANGEIN_START:\n    case RANGEEX_START:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_START:\n        jj_consume_token(RANGEIN_START);\n                            startInc=true;\n        break;\n      case RANGEEX_START:\n        jj_consume_token(RANGEEX_START);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop1 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop1 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_TO:\n        jj_consume_token(RANGE_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop2 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop2 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_END:\n        jj_consume_token(RANGEIN_END);\n                          endInc=true;\n        break;\n      case RANGEEX_END:\n        jj_consume_token(RANGEEX_END);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n          boolean startOpen=false;\n          boolean endOpen=false;\n          if (goop1.kind == RANGE_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else if (\"*\".equals(goop1.image)) {\n            startOpen=true;\n          }\n          if (goop2.kind == RANGE_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          } else if (\"*\".equals(goop2.image)) {\n            endOpen=true;\n          }\n          q = getRangeQuery(field, startOpen ? null : discardEscapeChar(goop1.image), endOpen ? null : discardEscapeChar(goop2.image), startInc, endInc);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n         q = handleQuotedTerm(field, term, fuzzySlop);\n      break;\n    default:\n      jj_la1[20] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = hasNewAPI ? getFieldQuery(field, termImage, false) : getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8","date":1310355420,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParser#Term(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  boolean startInc=false;\n  boolean endInc=false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      case BAREOPER:\n        term = jj_consume_token(BAREOPER);\n                           term.image = term.image.substring(0,1);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       q = handleBareTokenQuery(field, term, fuzzySlop, prefix, wildcard, fuzzy, regexp);\n      break;\n    case RANGEIN_START:\n    case RANGEEX_START:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_START:\n        jj_consume_token(RANGEIN_START);\n                            startInc=true;\n        break;\n      case RANGEEX_START:\n        jj_consume_token(RANGEEX_START);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop1 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop1 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_TO:\n        jj_consume_token(RANGE_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop2 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop2 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_END:\n        jj_consume_token(RANGEIN_END);\n                          endInc=true;\n        break;\n      case RANGEEX_END:\n        jj_consume_token(RANGEEX_END);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n          boolean startOpen=false;\n          boolean endOpen=false;\n          if (goop1.kind == RANGE_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else if (\"*\".equals(goop1.image)) {\n            startOpen=true;\n          }\n          if (goop2.kind == RANGE_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          } else if (\"*\".equals(goop2.image)) {\n            endOpen=true;\n          }\n          q = getRangeQuery(field, startOpen ? null : discardEscapeChar(goop1.image), endOpen ? null : discardEscapeChar(goop2.image), startInc, endInc);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n         q = handleQuotedTerm(field, term, fuzzySlop);\n      break;\n    default:\n      jj_la1[20] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  boolean startInc=false;\n  boolean endInc=false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      case BAREOPER:\n        term = jj_consume_token(BAREOPER);\n                           term.image = term.image.substring(0,1);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       q = handleBareTokenQuery(field, term, fuzzySlop, prefix, wildcard, fuzzy, regexp);\n      break;\n    case RANGEIN_START:\n    case RANGEEX_START:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_START:\n        jj_consume_token(RANGEIN_START);\n                            startInc=true;\n        break;\n      case RANGEEX_START:\n        jj_consume_token(RANGEEX_START);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop1 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop1 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_TO:\n        jj_consume_token(RANGE_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGE_GOOP:\n        goop2 = jj_consume_token(RANGE_GOOP);\n        break;\n      case RANGE_QUOTED:\n        goop2 = jj_consume_token(RANGE_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_END:\n        jj_consume_token(RANGEIN_END);\n                          endInc=true;\n        break;\n      case RANGEEX_END:\n        jj_consume_token(RANGEEX_END);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n          boolean startOpen=false;\n          boolean endOpen=false;\n          if (goop1.kind == RANGE_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else if (\"*\".equals(goop1.image)) {\n            startOpen=true;\n          }\n          if (goop2.kind == RANGE_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          } else if (\"*\".equals(goop2.image)) {\n            endOpen=true;\n          }\n          q = getRangeQuery(field, startOpen ? null : discardEscapeChar(goop1.image), endOpen ? null : discardEscapeChar(goop2.image), startInc, endInc);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n         q = handleQuotedTerm(field, term, fuzzySlop);\n      break;\n    default:\n      jj_la1[20] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d94d6afa51157e490fc169e192a154ffc4cdad0b":["55f0d8e9a3f2e45eeea14a4803eaac02a0865097"],"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["8b8488cadcd1dfaaf25307c360bb8cbb6ce8ab4f"],"65e2e921993a78565715c17f099593272b4a92bd":["4e9bbb27241bcf9645bb2f724c137537aa69918a"],"33e4a95ed08968b85d84e9fba82424f1fd945fbb":["2ee056ec8e953928ee49a691090634eed1fa4d6b"],"9e87c4193bc100c3b96235f14bee01a5b2009ce5":["3a4d59223802237d352245759cf541e315aab20a"],"b12d3e81e0f95a4527b5703953c503f71120ffcc":["3a4d59223802237d352245759cf541e315aab20a","65e2e921993a78565715c17f099593272b4a92bd"],"2ee056ec8e953928ee49a691090634eed1fa4d6b":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5f4e87790277826a2aea119328600dfb07761f32":["33e4a95ed08968b85d84e9fba82424f1fd945fbb","55f0d8e9a3f2e45eeea14a4803eaac02a0865097"],"55f0d8e9a3f2e45eeea14a4803eaac02a0865097":["33e4a95ed08968b85d84e9fba82424f1fd945fbb"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","8b8488cadcd1dfaaf25307c360bb8cbb6ce8ab4f"],"4e9bbb27241bcf9645bb2f724c137537aa69918a":["9e87c4193bc100c3b96235f14bee01a5b2009ce5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3a4d59223802237d352245759cf541e315aab20a":["d94d6afa51157e490fc169e192a154ffc4cdad0b"],"ca0ffea399542e8aac8ed7608f34f8ec4cb8904d":["b12d3e81e0f95a4527b5703953c503f71120ffcc","8b8488cadcd1dfaaf25307c360bb8cbb6ce8ab4f"],"8b8488cadcd1dfaaf25307c360bb8cbb6ce8ab4f":["65e2e921993a78565715c17f099593272b4a92bd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d94d6afa51157e490fc169e192a154ffc4cdad0b":["3a4d59223802237d352245759cf541e315aab20a"],"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"65e2e921993a78565715c17f099593272b4a92bd":["b12d3e81e0f95a4527b5703953c503f71120ffcc","8b8488cadcd1dfaaf25307c360bb8cbb6ce8ab4f"],"33e4a95ed08968b85d84e9fba82424f1fd945fbb":["5f4e87790277826a2aea119328600dfb07761f32","55f0d8e9a3f2e45eeea14a4803eaac02a0865097"],"9e87c4193bc100c3b96235f14bee01a5b2009ce5":["4e9bbb27241bcf9645bb2f724c137537aa69918a"],"b12d3e81e0f95a4527b5703953c503f71120ffcc":["ca0ffea399542e8aac8ed7608f34f8ec4cb8904d"],"2ee056ec8e953928ee49a691090634eed1fa4d6b":["33e4a95ed08968b85d84e9fba82424f1fd945fbb"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"55f0d8e9a3f2e45eeea14a4803eaac02a0865097":["d94d6afa51157e490fc169e192a154ffc4cdad0b","5f4e87790277826a2aea119328600dfb07761f32"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"4e9bbb27241bcf9645bb2f724c137537aa69918a":["65e2e921993a78565715c17f099593272b4a92bd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a4d59223802237d352245759cf541e315aab20a":["9e87c4193bc100c3b96235f14bee01a5b2009ce5","b12d3e81e0f95a4527b5703953c503f71120ffcc"],"ca0ffea399542e8aac8ed7608f34f8ec4cb8904d":[],"8b8488cadcd1dfaaf25307c360bb8cbb6ce8ab4f":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ca0ffea399542e8aac8ed7608f34f8ec4cb8904d"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["2ee056ec8e953928ee49a691090634eed1fa4d6b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ca0ffea399542e8aac8ed7608f34f8ec4cb8904d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}