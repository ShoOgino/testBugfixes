{"path":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#testInstanceDirAsPropertyParam().mjava","commits":[{"id":"9904879776b9279ff8c75a92c58ebbb97f231a2b","date":1395757236,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#testInstanceDirAsPropertyParam().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testInstanceDirAsPropertyParam() throws Exception {\n\n    setupCore(\"testInstanceDirAsPropertyParam-XYZ\", true);\n\n    // make sure workDir is different even if core name is used as instanceDir\n    File workDir = new File(solrHomeDirectory, \"testInstanceDirAsPropertyParam-XYZ\");\n    File data = new File(workDir, \"data\");\n\n    // Create one core\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.CREATE.toString(),\n                CoreAdminParams.NAME, \"testInstanceDirAsPropertyParam\",\n                \"property.instanceDir\", workDir.getAbsolutePath(),\n                CoreAdminParams.CONFIG, \"solrconfig_ren.xml\",\n                CoreAdminParams.SCHEMA, \"schema_ren.xml\",\n                CoreAdminParams.DATA_DIR, data.getAbsolutePath()),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.STATUS.toString(),\n                CoreAdminParams.CORE, \"testInstanceDirAsPropertyParam\"),\n            resp);\n    NamedList status = (NamedList) resp.getValues().get(\"status\");\n    assertNotNull(status);\n    NamedList coreProps = (NamedList) status.get(\"testInstanceDirAsPropertyParam\");\n    assertNotNull(status);\n    String instanceDir = (String) coreProps.get(\"instanceDir\");\n    assertNotNull(instanceDir);\n    assertEquals(\"Instance dir does not match param given in property.instanceDir syntax\", workDir.getAbsolutePath(), new File(instanceDir).getAbsolutePath());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#testInstanceDirAsPropertyParam().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#testInstanceDirAsPropertyParam().mjava","sourceNew":"  @Test\n  public void testInstanceDirAsPropertyParam() throws Exception {\n\n    setupCore(\"testInstanceDirAsPropertyParam-XYZ\", true);\n\n    // make sure workDir is different even if core name is used as instanceDir\n    File workDir = new File(solrHomeDirectory, \"testInstanceDirAsPropertyParam-XYZ\");\n    File data = new File(workDir, \"data\");\n\n    // Create one core\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.CREATE.toString(),\n                CoreAdminParams.NAME, \"testInstanceDirAsPropertyParam\",\n                \"property.instanceDir\", workDir.getAbsolutePath(),\n                CoreAdminParams.CONFIG, \"solrconfig_ren.xml\",\n                CoreAdminParams.SCHEMA, \"schema_ren.xml\",\n                CoreAdminParams.DATA_DIR, data.getAbsolutePath()),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.STATUS.toString(),\n                CoreAdminParams.CORE, \"testInstanceDirAsPropertyParam\"),\n            resp);\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList status = (NamedList) resp.getValues().get(\"status\");\n    assertNotNull(status);\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList coreProps = (NamedList) status.get(\"testInstanceDirAsPropertyParam\");\n    assertNotNull(status);\n    String instanceDir = (String) coreProps.get(\"instanceDir\");\n    assertNotNull(instanceDir);\n    assertEquals(\"Instance dir does not match param given in property.instanceDir syntax\", workDir.getAbsolutePath(), new File(instanceDir).getAbsolutePath());\n  }\n\n","sourceOld":"  @Test\n  public void testInstanceDirAsPropertyParam() throws Exception {\n\n    setupCore(\"testInstanceDirAsPropertyParam-XYZ\", true);\n\n    // make sure workDir is different even if core name is used as instanceDir\n    File workDir = new File(solrHomeDirectory, \"testInstanceDirAsPropertyParam-XYZ\");\n    File data = new File(workDir, \"data\");\n\n    // Create one core\n    SolrQueryResponse resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.CREATE.toString(),\n                CoreAdminParams.NAME, \"testInstanceDirAsPropertyParam\",\n                \"property.instanceDir\", workDir.getAbsolutePath(),\n                CoreAdminParams.CONFIG, \"solrconfig_ren.xml\",\n                CoreAdminParams.SCHEMA, \"schema_ren.xml\",\n                CoreAdminParams.DATA_DIR, data.getAbsolutePath()),\n            resp);\n    assertNull(\"Exception on create\", resp.getException());\n\n    resp = new SolrQueryResponse();\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.STATUS.toString(),\n                CoreAdminParams.CORE, \"testInstanceDirAsPropertyParam\"),\n            resp);\n    NamedList status = (NamedList) resp.getValues().get(\"status\");\n    assertNotNull(status);\n    NamedList coreProps = (NamedList) status.get(\"testInstanceDirAsPropertyParam\");\n    assertNotNull(status);\n    String instanceDir = (String) coreProps.get(\"instanceDir\");\n    assertNotNull(instanceDir);\n    assertEquals(\"Instance dir does not match param given in property.instanceDir syntax\", workDir.getAbsolutePath(), new File(instanceDir).getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9904879776b9279ff8c75a92c58ebbb97f231a2b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["9904879776b9279ff8c75a92c58ebbb97f231a2b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9904879776b9279ff8c75a92c58ebbb97f231a2b"],"9904879776b9279ff8c75a92c58ebbb97f231a2b":["e98520789adb1d5ad05afb4956eca0944a929688"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}