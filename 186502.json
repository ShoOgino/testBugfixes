{"path":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#compareTo(OffsetsEnum).mjava","commits":[{"id":"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","date":1475611903,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#compareTo(OffsetsEnum).mjava","pathOld":"/dev/null","sourceNew":"  // note: the ordering clearly changes as the postings enum advances\n  @Override\n  public int compareTo(OffsetsEnum other) {\n    try {\n      int cmp = Integer.compare(startOffset(), other.startOffset());\n      if (cmp != 0) {\n        return cmp; // vast majority of the time we return here.\n      }\n      if (this.term == null || other.term == null) {\n        if (this.term == null && other.term == null) {\n          return 0;\n        } else if (this.term == null) {\n          return 1; // put \"this\" (wildcard mtq enum) last\n        } else {\n          return -1;\n        }\n      }\n      return term.compareTo(other.term);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#compareTo(OffsetsEnum).mjava","pathOld":"/dev/null","sourceNew":"  // note: the ordering clearly changes as the postings enum advances\n  @Override\n  public int compareTo(OffsetsEnum other) {\n    try {\n      int cmp = Integer.compare(startOffset(), other.startOffset());\n      if (cmp != 0) {\n        return cmp; // vast majority of the time we return here.\n      }\n      if (this.term == null || other.term == null) {\n        if (this.term == null && other.term == null) {\n          return 0;\n        } else if (this.term == null) {\n          return 1; // put \"this\" (wildcard mtq enum) last\n        } else {\n          return -1;\n        }\n      }\n      return term.compareTo(other.term);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571","date":1515642580,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#compareTo(OffsetsEnum).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#compareTo(OffsetsEnum).mjava","sourceNew":"  // note: the ordering clearly changes as the postings enum advances\n  // note: would be neat to use some Comparator utilities with method\n  //  references but our methods throw IOException\n  @Override\n  public int compareTo(OffsetsEnum other) {\n    try {\n      int cmp = Integer.compare(startOffset(), other.startOffset());\n      if (cmp != 0) {\n        return cmp; // vast majority of the time we return here.\n      }\n      final BytesRef thisTerm = this.getTerm();\n      final BytesRef otherTerm = other.getTerm();\n      if (thisTerm == null || otherTerm == null) {\n        if (thisTerm == null && otherTerm == null) {\n          return 0;\n        } else if (thisTerm == null) {\n          return 1; // put \"this\" (wildcard mtq enum) last\n        } else {\n          return -1;\n        }\n      }\n      return thisTerm.compareTo(otherTerm);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  // note: the ordering clearly changes as the postings enum advances\n  @Override\n  public int compareTo(OffsetsEnum other) {\n    try {\n      int cmp = Integer.compare(startOffset(), other.startOffset());\n      if (cmp != 0) {\n        return cmp; // vast majority of the time we return here.\n      }\n      if (this.term == null || other.term == null) {\n        if (this.term == null && other.term == null) {\n          return 0;\n        } else if (this.term == null) {\n          return 1; // put \"this\" (wildcard mtq enum) last\n        } else {\n          return -1;\n        }\n      }\n      return term.compareTo(other.term);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#compareTo(OffsetsEnum).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#compareTo(OffsetsEnum).mjava","sourceNew":"  // note: the ordering clearly changes as the postings enum advances\n  // note: would be neat to use some Comparator utilities with method\n  //  references but our methods throw IOException\n  @Override\n  public int compareTo(OffsetsEnum other) {\n    try {\n      int cmp = Integer.compare(startOffset(), other.startOffset());\n      if (cmp != 0) {\n        return cmp; // vast majority of the time we return here.\n      }\n      final BytesRef thisTerm = this.getTerm();\n      final BytesRef otherTerm = other.getTerm();\n      if (thisTerm == null || otherTerm == null) {\n        if (thisTerm == null && otherTerm == null) {\n          return 0;\n        } else if (thisTerm == null) {\n          return 1; // put \"this\" (wildcard mtq enum) last\n        } else {\n          return -1;\n        }\n      }\n      return thisTerm.compareTo(otherTerm);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  // note: the ordering clearly changes as the postings enum advances\n  @Override\n  public int compareTo(OffsetsEnum other) {\n    try {\n      int cmp = Integer.compare(startOffset(), other.startOffset());\n      if (cmp != 0) {\n        return cmp; // vast majority of the time we return here.\n      }\n      if (this.term == null || other.term == null) {\n        if (this.term == null && other.term == null) {\n          return 0;\n        } else if (this.term == null) {\n          return 1; // put \"this\" (wildcard mtq enum) last\n        } else {\n          return -1;\n        }\n      }\n      return term.compareTo(other.term);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1548b5cb1c65d84a553dae805cd10643dfee307a","date":1534187883,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#compareTo(OffsetsEnum).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#compareTo(OffsetsEnum).mjava","sourceNew":"  // note: the ordering clearly changes as the postings enum advances\n  // note: would be neat to use some Comparator utilities with method\n  //  references but our methods throw IOException\n  @Override\n  public int compareTo(OffsetsEnum other) {\n    try {\n      int cmp = Integer.compare(startOffset(), other.startOffset());\n      if (cmp != 0) {\n        return cmp; // vast majority of the time we return here.\n      }\n      cmp = Integer.compare(endOffset(), other.endOffset());\n      if (cmp != 0) {\n        return cmp;\n      }\n      final BytesRef thisTerm = this.getTerm();\n      final BytesRef otherTerm = other.getTerm();\n      if (thisTerm == null || otherTerm == null) {\n        if (thisTerm == null && otherTerm == null) {\n          return 0;\n        } else if (thisTerm == null) {\n          return 1; // put \"this\" (wildcard mtq enum) last\n        } else {\n          return -1;\n        }\n      }\n      return thisTerm.compareTo(otherTerm);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  // note: the ordering clearly changes as the postings enum advances\n  // note: would be neat to use some Comparator utilities with method\n  //  references but our methods throw IOException\n  @Override\n  public int compareTo(OffsetsEnum other) {\n    try {\n      int cmp = Integer.compare(startOffset(), other.startOffset());\n      if (cmp != 0) {\n        return cmp; // vast majority of the time we return here.\n      }\n      final BytesRef thisTerm = this.getTerm();\n      final BytesRef otherTerm = other.getTerm();\n      if (thisTerm == null || otherTerm == null) {\n        if (thisTerm == null && otherTerm == null) {\n          return 0;\n        } else if (thisTerm == null) {\n          return 1; // put \"this\" (wildcard mtq enum) last\n        } else {\n          return -1;\n        }\n      }\n      return thisTerm.compareTo(otherTerm);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571"],"1548b5cb1c65d84a553dae805cd10643dfee307a":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1548b5cb1c65d84a553dae805cd10643dfee307a"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["1548b5cb1c65d84a553dae805cd10643dfee307a"],"1548b5cb1c65d84a553dae805cd10643dfee307a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2":["b94236357aaa22b76c10629851fe4e376e0cea82","eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571":["b94236357aaa22b76c10629851fe4e376e0cea82"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}