{"path":"lucene/src/java/org/apache/lucene/analysis/KeywordTokenizer#incrementToken().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":2,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/KeywordTokenizer#incrementToken().mjava","pathOld":"backwards/src/java/org/apache/lucene/analysis/KeywordTokenizer#incrementToken().mjava","sourceNew":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (!done) {\n      clearAttributes();\n      done = true;\n      int upto = 0;\n      char[] buffer = termAtt.termBuffer();\n      while (true) {\n        final int length = input.read(buffer, upto, buffer.length-upto);\n        if (length == -1) break;\n        upto += length;\n        if (upto == buffer.length)\n          buffer = termAtt.resizeTermBuffer(1+buffer.length);\n      }\n      termAtt.setTermLength(upto);\n      finalOffset = correctOffset(upto);\n      offsetAtt.setOffset(correctOffset(0), finalOffset);\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (!done) {\n      clearAttributes();\n      done = true;\n      int upto = 0;\n      char[] buffer = termAtt.termBuffer();\n      while (true) {\n        final int length = input.read(buffer, upto, buffer.length-upto);\n        if (length == -1) break;\n        upto += length;\n        if (upto == buffer.length)\n          buffer = termAtt.resizeTermBuffer(1+buffer.length);\n      }\n      termAtt.setTermLength(upto);\n      finalOffset = correctOffset(upto);\n      offsetAtt.setOffset(correctOffset(0), finalOffset);\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a775c547c3519b47efd41c09cb47100ddb9604c7","date":1270914087,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/KeywordTokenizer#incrementToken().mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/KeywordTokenizer#incrementToken().mjava","sourceNew":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (!done) {\n      clearAttributes();\n      done = true;\n      int upto = 0;\n      char[] buffer = termAtt.buffer();\n      while (true) {\n        final int length = input.read(buffer, upto, buffer.length-upto);\n        if (length == -1) break;\n        upto += length;\n        if (upto == buffer.length)\n          buffer = termAtt.resizeBuffer(1+buffer.length);\n      }\n      termAtt.setLength(upto);\n      finalOffset = correctOffset(upto);\n      offsetAtt.setOffset(correctOffset(0), finalOffset);\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (!done) {\n      clearAttributes();\n      done = true;\n      int upto = 0;\n      char[] buffer = termAtt.termBuffer();\n      while (true) {\n        final int length = input.read(buffer, upto, buffer.length-upto);\n        if (length == -1) break;\n        upto += length;\n        if (upto == buffer.length)\n          buffer = termAtt.resizeTermBuffer(1+buffer.length);\n      }\n      termAtt.setTermLength(upto);\n      finalOffset = correctOffset(upto);\n      offsetAtt.setOffset(correctOffset(0), finalOffset);\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"790c3f61c9b891d66d919c5d10db9fa5216eb0f1","date":1274818604,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/KeywordTokenizer#incrementToken().mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/KeywordTokenizer#incrementToken().mjava","sourceNew":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (!done) {\n      clearAttributes();\n      done = true;\n      int upto = 0;\n      char[] buffer = termAtt.buffer();\n      while (true) {\n        final int length = input.read(buffer, upto, buffer.length-upto);\n        if (length == -1) break;\n        upto += length;\n        if (upto == buffer.length)\n          buffer = termAtt.resizeBuffer(1+buffer.length);\n      }\n      termAtt.setLength(upto);\n      finalOffset = correctOffset(upto);\n      offsetAtt.setOffset(correctOffset(0), finalOffset);\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (!done) {\n      clearAttributes();\n      done = true;\n      int upto = 0;\n      char[] buffer = termAtt.buffer();\n      while (true) {\n        final int length = input.read(buffer, upto, buffer.length-upto);\n        if (length == -1) break;\n        upto += length;\n        if (upto == buffer.length)\n          buffer = termAtt.resizeBuffer(1+buffer.length);\n      }\n      termAtt.setLength(upto);\n      finalOffset = correctOffset(upto);\n      offsetAtt.setOffset(correctOffset(0), finalOffset);\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["a775c547c3519b47efd41c09cb47100ddb9604c7"],"a775c547c3519b47efd41c09cb47100ddb9604c7":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a775c547c3519b47efd41c09cb47100ddb9604c7":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a775c547c3519b47efd41c09cb47100ddb9604c7"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}