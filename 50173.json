{"path":"lucene/core/src/java/org/apache/lucene/geo/EdgeTree#relate(double,double,double,double).mjava","commits":[{"id":"e4fccad460342b1af30cb328cc8297751a218d78","date":1541177339,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/EdgeTree#relate(double,double,double,double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#relate(double,double,double,double).mjava","sourceNew":"  /** Returns relation to the provided rectangle */\n  public Relation relate(double minLat, double maxLat, double minLon, double maxLon) {\n    if (minLat <= maxY && minLon <= maxX) {\n      Relation relation = internalComponentRelate(minLat, maxLat, minLon, maxLon);\n      if (relation != Relation.CELL_OUTSIDE_QUERY) {\n        return relation;\n      }\n      if (left != null) {\n        relation = left.relate(minLat, maxLat, minLon, maxLon);\n        if (relation != Relation.CELL_OUTSIDE_QUERY) {\n          return relation;\n        }\n      }\n      if (right != null && ((splitX == false && maxLat >= this.minLat) || (splitX && maxLon >= this.minLon))) {\n        relation = right.relate(minLat, maxLat, minLon, maxLon);\n        if (relation != Relation.CELL_OUTSIDE_QUERY) {\n          return relation;\n        }\n      }\n    }\n    return Relation.CELL_OUTSIDE_QUERY;\n  }\n\n","sourceOld":"  /** Returns relation to the provided rectangle */\n  public Relation relate(double minLat, double maxLat, double minLon, double maxLon) {\n    if (minLat <= maxY && minLon <= maxX) {\n      Relation relation = componentRelate(minLat, maxLat, minLon, maxLon);\n      if (relation != Relation.CELL_OUTSIDE_QUERY) {\n        return relation;\n      }\n      if (left != null) {\n        relation = left.relate(minLat, maxLat, minLon, maxLon);\n        if (relation != Relation.CELL_OUTSIDE_QUERY) {\n          return relation;\n        }\n      }\n      if (right != null && ((splitX == false && maxLat >= this.minLat) || (splitX && maxLon >= this.minLon))) {\n        relation = right.relate(minLat, maxLat, minLon, maxLon);\n        if (relation != Relation.CELL_OUTSIDE_QUERY) {\n          return relation;\n        }\n      }\n    }\n    return Relation.CELL_OUTSIDE_QUERY;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","date":1571074565,"type":5,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/ComponentTree#relate(double,double,double,double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/geo/EdgeTree#relate(double,double,double,double).mjava","sourceNew":"  /** Returns relation to the provided rectangle */\n  @Override\n  public Relation relate(double minX, double maxX, double minY, double maxY) {\n    if (minY <= this.maxY && minX <= this.maxX) {\n      Relation relation = component.relate(minX, maxX, minY, maxY);\n      if (relation != Relation.CELL_OUTSIDE_QUERY) {\n        return relation;\n      }\n      if (left != null) {\n        relation = left.relate(minX, maxX, minY, maxY);\n        if (relation != Relation.CELL_OUTSIDE_QUERY) {\n          return relation;\n        }\n      }\n      if (right != null && ((splitX == false && maxY >= this.component.getMinY()) || (splitX && maxX >= this.component.getMinX()))) {\n        relation = right.relate(minX, maxX, minY, maxY);\n        if (relation != Relation.CELL_OUTSIDE_QUERY) {\n          return relation;\n        }\n      }\n    }\n    return Relation.CELL_OUTSIDE_QUERY;\n  }\n\n","sourceOld":"  /** Returns relation to the provided rectangle */\n  public Relation relate(double minLat, double maxLat, double minLon, double maxLon) {\n    if (minLat <= maxY && minLon <= maxX) {\n      Relation relation = internalComponentRelate(minLat, maxLat, minLon, maxLon);\n      if (relation != Relation.CELL_OUTSIDE_QUERY) {\n        return relation;\n      }\n      if (left != null) {\n        relation = left.relate(minLat, maxLat, minLon, maxLon);\n        if (relation != Relation.CELL_OUTSIDE_QUERY) {\n          return relation;\n        }\n      }\n      if (right != null && ((splitX == false && maxLat >= this.minLat) || (splitX && maxLon >= this.minLon))) {\n        relation = right.relate(minLat, maxLat, minLon, maxLon);\n        if (relation != Relation.CELL_OUTSIDE_QUERY) {\n          return relation;\n        }\n      }\n    }\n    return Relation.CELL_OUTSIDE_QUERY;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":4,"author":"jimczi","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/geo/EdgeTree#relate(double,double,double,double).mjava","sourceNew":null,"sourceOld":"  /** Returns relation to the provided rectangle */\n  public Relation relate(double minLat, double maxLat, double minLon, double maxLon) {\n    if (minLat <= maxY && minLon <= maxX) {\n      Relation relation = internalComponentRelate(minLat, maxLat, minLon, maxLon);\n      if (relation != Relation.CELL_OUTSIDE_QUERY) {\n        return relation;\n      }\n      if (left != null) {\n        relation = left.relate(minLat, maxLat, minLon, maxLon);\n        if (relation != Relation.CELL_OUTSIDE_QUERY) {\n          return relation;\n        }\n      }\n      if (right != null && ((splitX == false && maxLat >= this.minLat) || (splitX && maxLon >= this.minLon))) {\n        relation = right.relate(minLat, maxLat, minLon, maxLon);\n        if (relation != Relation.CELL_OUTSIDE_QUERY) {\n          return relation;\n        }\n      }\n    }\n    return Relation.CELL_OUTSIDE_QUERY;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["e4fccad460342b1af30cb328cc8297751a218d78"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e4fccad460342b1af30cb328cc8297751a218d78":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"],"b0b597c65628ca9e73913a07e81691f8229bae35":["e4fccad460342b1af30cb328cc8297751a218d78","b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"]},"commit2Childs":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e4fccad460342b1af30cb328cc8297751a218d78"],"e4fccad460342b1af30cb328cc8297751a218d78":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}