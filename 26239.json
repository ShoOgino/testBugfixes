{"path":"backwards/src/test/org/apache/lucene/search/TestBooleanPrefixQuery#testMethod().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/search/TestBooleanPrefixQuery#testMethod().mjava","pathOld":"/dev/null","sourceNew":"  public void testMethod() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n\n    String[] categories = new String[]{\"food\",\n                                       \"foodanddrink\",\n                                       \"foodanddrinkandgoodtimes\",\n                                       \"food and drink\"};\n\n    Query rw1 = null;\n    Query rw2 = null;\n    IndexReader reader = null;\n    try {\n      IndexWriter writer = new IndexWriter(directory, new\n                                           WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      for (int i = 0; i < categories.length; i++) {\n        Document doc = new Document();\n        doc.add(new Field(\"category\", categories[i], Field.Store.YES, Field.Index.NOT_ANALYZED));\n        writer.addDocument(doc);\n      }\n      writer.close();\n      \n      reader = IndexReader.open(directory, true);\n      PrefixQuery query = new PrefixQuery(new Term(\"category\", \"foo\"));\n      rw1 = query.rewrite(reader);\n      \n      BooleanQuery bq = new BooleanQuery();\n      bq.add(query, BooleanClause.Occur.MUST);\n      \n      rw2 = bq.rewrite(reader);\n    } catch (IOException e) {\n      fail(e.getMessage());\n    }\n\n    assertEquals(\"Number of Clauses Mismatch\", getCount(reader, rw1), getCount(reader, rw2));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/TestBooleanPrefixQuery#testMethod().mjava","pathOld":"backwards/src/test/org/apache/lucene/search/TestBooleanPrefixQuery#testMethod().mjava","sourceNew":"  public void testMethod() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n\n    String[] categories = new String[]{\"food\",\n                                       \"foodanddrink\",\n                                       \"foodanddrinkandgoodtimes\",\n                                       \"food and drink\"};\n\n    Query rw1 = null;\n    Query rw2 = null;\n    IndexReader reader = null;\n    try {\n      IndexWriter writer = new IndexWriter(directory, new\n                                           WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      for (int i = 0; i < categories.length; i++) {\n        Document doc = new Document();\n        doc.add(new Field(\"category\", categories[i], Field.Store.YES, Field.Index.NOT_ANALYZED));\n        writer.addDocument(doc);\n      }\n      writer.close();\n      \n      reader = IndexReader.open(directory, true);\n      PrefixQuery query = new PrefixQuery(new Term(\"category\", \"foo\"));\n      rw1 = query.rewrite(reader);\n      \n      BooleanQuery bq = new BooleanQuery();\n      bq.add(query, BooleanClause.Occur.MUST);\n      \n      rw2 = bq.rewrite(reader);\n    } catch (IOException e) {\n      fail(e.getMessage());\n    }\n\n    assertEquals(\"Number of Clauses Mismatch\", getCount(reader, rw1), getCount(reader, rw2));\n  }\n\n","sourceOld":"  public void testMethod() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n\n    String[] categories = new String[]{\"food\",\n                                       \"foodanddrink\",\n                                       \"foodanddrinkandgoodtimes\",\n                                       \"food and drink\"};\n\n    Query rw1 = null;\n    Query rw2 = null;\n    IndexReader reader = null;\n    try {\n      IndexWriter writer = new IndexWriter(directory, new\n                                           WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      for (int i = 0; i < categories.length; i++) {\n        Document doc = new Document();\n        doc.add(new Field(\"category\", categories[i], Field.Store.YES, Field.Index.NOT_ANALYZED));\n        writer.addDocument(doc);\n      }\n      writer.close();\n      \n      reader = IndexReader.open(directory, true);\n      PrefixQuery query = new PrefixQuery(new Term(\"category\", \"foo\"));\n      rw1 = query.rewrite(reader);\n      \n      BooleanQuery bq = new BooleanQuery();\n      bq.add(query, BooleanClause.Occur.MUST);\n      \n      rw2 = bq.rewrite(reader);\n    } catch (IOException e) {\n      fail(e.getMessage());\n    }\n\n    assertEquals(\"Number of Clauses Mismatch\", getCount(reader, rw1), getCount(reader, rw2));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}