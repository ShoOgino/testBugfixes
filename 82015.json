{"path":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test ']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test ']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test ']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test ']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test ']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test ']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402cab02288e78c70a21b33b2a5b84bd62e2c0bc","date":1326820536,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test ']\"\n            );\n  }\n\n","bugFix":["0e4f44e6c290ae7afe1472adb49e9a743ec330e0"],"bugIntro":["3624dc0a0c316dc0f2e13c6fee8cc5e03105c2c3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3624dc0a0c316dc0f2e13c6fee8cc5e03105c2c3","date":1326882706,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.='basic fast <em>vector</em> highlighter test']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test']\"\n            );\n  }\n\n","bugFix":["402cab02288e78c70a21b33b2a5b84bd62e2c0bc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.='basic fast <em>vector</em> highlighter test']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.='basic fast <em>vector</em> highlighter test']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8868b7c4fbf215c41e7b4ea2cfc40d1970672910","date":1480034167,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.tag.pre\", \"<fvpre>\"); //... and let post default to </em>. This is just a test.\n    if (random().nextBoolean()) {\n      args.put(\"hl.useFastVectorHighlighter\", \"true\"); // old way\n    } else {\n      args.put(\"hl.method\", \"fastVector\"); // the new way\n    }\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.='basic fast <fvpre>vector</em> highlighter test']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.='basic fast <em>vector</em> highlighter test']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75babd1dfc2521603bfeb0968042e921d8c6c652","date":1480042089,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.tag.pre\", \"<fvpre>\"); //... and let post default to </em>. This is just a test.\n    if (random().nextBoolean()) {\n      args.put(\"hl.useFastVectorHighlighter\", \"true\"); // old way\n    } else {\n      args.put(\"hl.method\", \"fastVector\"); // the new way\n    }\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.='basic fast <fvpre>vector</em> highlighter test']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.='basic fast <em>vector</em> highlighter test']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.tag.pre\", \"<fvpre>\"); //... and let post default to </em>. This is just a test.\n    if (random().nextBoolean()) {\n      args.put(\"hl.useFastVectorHighlighter\", \"true\"); // old way\n    } else {\n      args.put(\"hl.method\", \"fastVector\"); // the new way\n    }\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.='basic fast <fvpre>vector</em> highlighter test']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.='basic fast <em>vector</em> highlighter test']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ff704ef91e9ae30ca59babb23ece85720701b60","date":1498684964,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.tag.pre\", \"<fvpre>\"); //... and let post default to </em>. This is just a test.\n    if (random().nextBoolean()) {\n      args.put(\"hl.useFastVectorHighlighter\", \"true\"); // old way\n    } else {\n      args.put(\"hl.method\", \"fastVector\"); // the new way\n    }\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.='basic fast <fvpre>vector</em> highlighter test']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.tag.pre\", \"<fvpre>\"); //... and let post default to </em>. This is just a test.\n    if (random().nextBoolean()) {\n      args.put(\"hl.useFastVectorHighlighter\", \"true\"); // old way\n    } else {\n      args.put(\"hl.method\", \"fastVector\"); // the new way\n    }\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.='basic fast <fvpre>vector</em> highlighter test']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.tag.pre\", \"<fvpre>\"); //... and let post default to </em>. This is just a test.\n    if (random().nextBoolean()) {\n      args.put(\"hl.useFastVectorHighlighter\", \"true\"); // old way\n    } else {\n      args.put(\"hl.method\", \"fastVector\"); // the new way\n    }\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.='basic fast <fvpre>vector</em> highlighter test']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.tag.pre\", \"<fvpre>\"); //... and let post default to </em>. This is just a test.\n    if (random().nextBoolean()) {\n      args.put(\"hl.useFastVectorHighlighter\", \"true\"); // old way\n    } else {\n      args.put(\"hl.method\", \"fastVector\"); // the new way\n    }\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.='basic fast <fvpre>vector</em> highlighter test']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.tag.pre\", \"<fvpre>\"); //... and let post default to </em>. This is just a test.\n    if (random().nextBoolean()) {\n      args.put(\"hl.useFastVectorHighlighter\", \"true\"); // old way\n    } else {\n      args.put(\"hl.method\", \"fastVector\"); // the new way\n    }\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.='basic fast <fvpre>vector</em> highlighter test']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.tag.pre\", \"<fvpre>\"); //... and let post default to </em>. This is just a test.\n    if (random().nextBoolean()) {\n      args.put(\"hl.useFastVectorHighlighter\", \"true\"); // old way\n    } else {\n      args.put(\"hl.method\", \"fastVector\"); // the new way\n    }\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.='basic fast <fvpre>vector</em> highlighter test']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3624dc0a0c316dc0f2e13c6fee8cc5e03105c2c3"],"402cab02288e78c70a21b33b2a5b84bd62e2c0bc":["c26f00b574427b55127e869b935845554afde1fa"],"8868b7c4fbf215c41e7b4ea2cfc40d1970672910":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"75babd1dfc2521603bfeb0968042e921d8c6c652":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","8868b7c4fbf215c41e7b4ea2cfc40d1970672910"],"30c8e5574b55d57947e989443dfde611646530ee":["75babd1dfc2521603bfeb0968042e921d8c6c652","28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["75babd1dfc2521603bfeb0968042e921d8c6c652","5ff704ef91e9ae30ca59babb23ece85720701b60"],"727bb765ff2542275f6d31f67be18d7104bae148":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","75babd1dfc2521603bfeb0968042e921d8c6c652"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3624dc0a0c316dc0f2e13c6fee8cc5e03105c2c3":["402cab02288e78c70a21b33b2a5b84bd62e2c0bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["75babd1dfc2521603bfeb0968042e921d8c6c652"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["8868b7c4fbf215c41e7b4ea2cfc40d1970672910","75babd1dfc2521603bfeb0968042e921d8c6c652","727bb765ff2542275f6d31f67be18d7104bae148"],"402cab02288e78c70a21b33b2a5b84bd62e2c0bc":["3624dc0a0c316dc0f2e13c6fee8cc5e03105c2c3"],"8868b7c4fbf215c41e7b4ea2cfc40d1970672910":["75babd1dfc2521603bfeb0968042e921d8c6c652"],"c26f00b574427b55127e869b935845554afde1fa":["402cab02288e78c70a21b33b2a5b84bd62e2c0bc"],"75babd1dfc2521603bfeb0968042e921d8c6c652":["30c8e5574b55d57947e989443dfde611646530ee","28288370235ed02234a64753cdbf0c6ec096304a","727bb765ff2542275f6d31f67be18d7104bae148","5ff704ef91e9ae30ca59babb23ece85720701b60"],"30c8e5574b55d57947e989443dfde611646530ee":[],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"727bb765ff2542275f6d31f67be18d7104bae148":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"3624dc0a0c316dc0f2e13c6fee8cc5e03105c2c3":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","727bb765ff2542275f6d31f67be18d7104bae148","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}