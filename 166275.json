{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/TempSepPostingsReader.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","commits":[{"id":"fd65164c607d597fe7bb977735aa1ddfff22ed36","date":1377140532,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/TempSepPostingsReader.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"/dev/null","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits liveDocs) throws IOException {\n      this.liveDocs = liveDocs;\n      this.indexOptions = fieldInfo.getIndexOptions();\n      omitTF = indexOptions == IndexOptions.DOCS_ONLY;\n      storePayloads = fieldInfo.hasPayloads();\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.copyFrom(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.copyFrom(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = -1;\n      accum = 0;\n      freq = 1;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/TempSepPostingsReader.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":null,"sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits liveDocs) throws IOException {\n      this.liveDocs = liveDocs;\n      this.indexOptions = fieldInfo.getIndexOptions();\n      omitTF = indexOptions == IndexOptions.DOCS_ONLY;\n      storePayloads = fieldInfo.hasPayloads();\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.copyFrom(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.copyFrom(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = -1;\n      accum = 0;\n      freq = 1;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd65164c607d597fe7bb977735aa1ddfff22ed36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["fd65164c607d597fe7bb977735aa1ddfff22ed36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fd65164c607d597fe7bb977735aa1ddfff22ed36","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fd65164c607d597fe7bb977735aa1ddfff22ed36":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}