{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingLiveDocsFormat#newLiveDocs(Bits).mjava","commits":[{"id":"71a3a5f218e40ad70fa4159a8b89523ecb2f092c","date":1411660687,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingLiveDocsFormat#newLiveDocs(Bits).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public MutableBits newLiveDocs(Bits existing) throws IOException {\n    assert existing instanceof AssertingBits;\n    Bits rawExisting = ((AssertingBits)existing).in;\n    MutableBits raw = in.newLiveDocs(rawExisting);\n    assert raw != null;\n    return new AssertingMutableBits(raw);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c167344f9239621cd13ad3cc1d740e68cffb96f7","date":1411679996,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingLiveDocsFormat#newLiveDocs(Bits).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingLiveDocsFormat#newLiveDocs(Bits).mjava","sourceNew":"  @Override\n  public MutableBits newLiveDocs(Bits existing) throws IOException {\n    assert existing instanceof AssertingBits;\n    Bits rawExisting = ((AssertingBits)existing).in;\n    MutableBits raw = in.newLiveDocs(rawExisting);\n    assert raw != null;\n    assert raw.length() == rawExisting.length();\n    for (int i = 0; i < raw.length(); i++) {\n      assert rawExisting.get(i) == raw.get(i);\n    }\n    return new AssertingMutableBits(raw);\n  }\n\n","sourceOld":"  @Override\n  public MutableBits newLiveDocs(Bits existing) throws IOException {\n    assert existing instanceof AssertingBits;\n    Bits rawExisting = ((AssertingBits)existing).in;\n    MutableBits raw = in.newLiveDocs(rawExisting);\n    assert raw != null;\n    return new AssertingMutableBits(raw);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f6bd27530a2846413fe2d00030493c0e2d3a072","date":1411811855,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingLiveDocsFormat#newLiveDocs(Bits).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public MutableBits newLiveDocs(Bits existing) throws IOException {\n    assert existing instanceof AssertingBits;\n    Bits rawExisting = ((AssertingBits)existing).in;\n    MutableBits raw = in.newLiveDocs(rawExisting);\n    assert raw != null;\n    assert raw.length() == rawExisting.length();\n    for (int i = 0; i < raw.length(); i++) {\n      assert rawExisting.get(i) == raw.get(i);\n    }\n    return new AssertingMutableBits(raw);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb8a3dfca2d8b39c20bdfc87eb7171c06ea9400d","date":1525873214,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingLiveDocsFormat#newLiveDocs(Bits).mjava","sourceNew":null,"sourceOld":"  @Override\n  public MutableBits newLiveDocs(Bits existing) throws IOException {\n    assert existing instanceof AssertingBits;\n    Bits rawExisting = ((AssertingBits)existing).in;\n    MutableBits raw = in.newLiveDocs(rawExisting);\n    assert raw != null;\n    assert raw.length() == rawExisting.length();\n    for (int i = 0; i < raw.length(); i++) {\n      assert rawExisting.get(i) == raw.get(i);\n    }\n    return new AssertingMutableBits(raw);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c167344f9239621cd13ad3cc1d740e68cffb96f7":["71a3a5f218e40ad70fa4159a8b89523ecb2f092c"],"71a3a5f218e40ad70fa4159a8b89523ecb2f092c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fb8a3dfca2d8b39c20bdfc87eb7171c06ea9400d":["5f6bd27530a2846413fe2d00030493c0e2d3a072"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c167344f9239621cd13ad3cc1d740e68cffb96f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb8a3dfca2d8b39c20bdfc87eb7171c06ea9400d"]},"commit2Childs":{"c167344f9239621cd13ad3cc1d740e68cffb96f7":["5f6bd27530a2846413fe2d00030493c0e2d3a072"],"71a3a5f218e40ad70fa4159a8b89523ecb2f092c":["c167344f9239621cd13ad3cc1d740e68cffb96f7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["71a3a5f218e40ad70fa4159a8b89523ecb2f092c","5f6bd27530a2846413fe2d00030493c0e2d3a072"],"fb8a3dfca2d8b39c20bdfc87eb7171c06ea9400d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["fb8a3dfca2d8b39c20bdfc87eb7171c06ea9400d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}