{"path":"solr/solrj/src/test/org/apache/solr/common/cloud/TestDocCollectionWatcher#testStateWatcherChecksCurrentStateOnRegister().mjava","commits":[{"id":"7b366e7dd3172289251a86be96031af4002cd19c","date":1560790783,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/TestDocCollectionWatcher#testStateWatcherChecksCurrentStateOnRegister().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testStateWatcherChecksCurrentStateOnRegister() throws Exception {\n\n    CloudSolrClient client = cluster.getSolrClient();\n    CollectionAdminRequest.createCollection(\"currentstate\", \"config\", 1, 1)\n      .processAndWait(client, MAX_WAIT_TIMEOUT);\n\n    final CountDownLatch latch = new CountDownLatch(1);\n    client.registerDocCollectionWatcher(\"currentstate\", (c) -> {\n      latch.countDown();\n      return false;\n    });\n\n    assertTrue(\"DocCollectionWatcher isn't called on new registration\",\n               latch.await(MAX_WAIT_TIMEOUT, TimeUnit.SECONDS));\n    assertEquals(\"DocCollectionWatcher should be retained\",\n                 1, client.getZkStateReader().getStateWatchers(\"currentstate\").size());\n\n    final CountDownLatch latch2 = new CountDownLatch(1);\n    client.registerDocCollectionWatcher(\"currentstate\", (c) -> {\n      latch2.countDown();\n      return true;\n    });\n\n    assertTrue(\"DocCollectionWatcher isn't called when registering for already-watched collection\",\n               latch.await(MAX_WAIT_TIMEOUT, TimeUnit.SECONDS));\n    waitFor(\"DocCollectionWatcher should be removed\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS,\n            () -> client.getZkStateReader().getStateWatchers(\"currentstate\").size() == 1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b366e7dd3172289251a86be96031af4002cd19c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b366e7dd3172289251a86be96031af4002cd19c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b366e7dd3172289251a86be96031af4002cd19c"],"7b366e7dd3172289251a86be96031af4002cd19c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}