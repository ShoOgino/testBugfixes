{"path":"solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias#formatCollectionNameFromInstant(String,Instant).mjava","commits":[{"id":"46589ed5cc841861bf6b5e2afc55f718ebcd02a0","date":1516984620,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias#formatCollectionNameFromInstant(String,Instant).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor#formatCollectionNameFromInstant(String,Instant).mjava","sourceNew":"  public static String formatCollectionNameFromInstant(String aliasName, Instant timestamp) {\n    String nextCollName = DATE_TIME_FORMATTER.format(timestamp);\n    for (int i = 0; i < 3; i++) { // chop off seconds, minutes, hours\n      if (nextCollName.endsWith(\"_00\")) {\n        nextCollName = nextCollName.substring(0, nextCollName.length()-3);\n      }\n    }\n    assert DATE_TIME_FORMATTER.parse(nextCollName, Instant::from).equals(timestamp);\n    return aliasName + \"_\" + nextCollName;\n  }\n\n","sourceOld":"  public static String formatCollectionNameFromInstant(String aliasName, Instant timestamp) {\n    String nextCollName = TimeRoutedAliasUpdateProcessor.DATE_TIME_FORMATTER.format(timestamp);\n    for (int i = 0; i < 3; i++) { // chop off seconds, minutes, hours\n      if (nextCollName.endsWith(\"_00\")) {\n        nextCollName = nextCollName.substring(0, nextCollName.length()-3);\n      }\n    }\n    assert TimeRoutedAliasUpdateProcessor.DATE_TIME_FORMATTER.parse(nextCollName, Instant::from).equals(timestamp);\n    return aliasName + \"_\" + nextCollName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"105e345cf3c0abed3cb6c109274a379cb2655adc","date":1561038472,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias#formatCollectionNameFromInstant(String,Instant).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias#formatCollectionNameFromInstant(String,Instant).mjava","sourceNew":"  public static String formatCollectionNameFromInstant(String aliasName, Instant timestamp) {\n    String nextCollName = DATE_TIME_FORMATTER.format(timestamp);\n    for (int i = 0; i < 3; i++) { // chop off seconds, minutes, hours\n      if (nextCollName.endsWith(\"_00\")) {\n        nextCollName = nextCollName.substring(0, nextCollName.length()-3);\n      }\n    }\n    assert DATE_TIME_FORMATTER.parse(nextCollName, Instant::from).equals(timestamp);\n    return aliasName + TYPE.getSeparatorPrefix() + nextCollName;\n  }\n\n","sourceOld":"  public static String formatCollectionNameFromInstant(String aliasName, Instant timestamp) {\n    String nextCollName = DATE_TIME_FORMATTER.format(timestamp);\n    for (int i = 0; i < 3; i++) { // chop off seconds, minutes, hours\n      if (nextCollName.endsWith(\"_00\")) {\n        nextCollName = nextCollName.substring(0, nextCollName.length()-3);\n      }\n    }\n    assert DATE_TIME_FORMATTER.parse(nextCollName, Instant::from).equals(timestamp);\n    return aliasName + \"_\" + nextCollName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eebf1b080530bdd7572c4927fb2bb52334b7a86","date":1563199033,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias#formatCollectionNameFromInstant(String,Instant).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias#formatCollectionNameFromInstant(String,Instant).mjava","sourceNew":"  public static String formatCollectionNameFromInstant(String aliasName, Instant timestamp) {\n    String nextCollName = DATE_TIME_FORMATTER.format(timestamp);\n    for (int i = 0; i < 3; i++) { // chop off seconds, minutes, hours\n      if (nextCollName.endsWith(\"_00\")) {\n        nextCollName = nextCollName.substring(0, nextCollName.length() - 3);\n      }\n    }\n    assert DATE_TIME_FORMATTER.parse(nextCollName, Instant::from).equals(timestamp);\n    return aliasName + TYPE.getSeparatorPrefix() + nextCollName;\n  }\n\n","sourceOld":"  public static String formatCollectionNameFromInstant(String aliasName, Instant timestamp) {\n    String nextCollName = DATE_TIME_FORMATTER.format(timestamp);\n    for (int i = 0; i < 3; i++) { // chop off seconds, minutes, hours\n      if (nextCollName.endsWith(\"_00\")) {\n        nextCollName = nextCollName.substring(0, nextCollName.length()-3);\n      }\n    }\n    assert DATE_TIME_FORMATTER.parse(nextCollName, Instant::from).equals(timestamp);\n    return aliasName + TYPE.getSeparatorPrefix() + nextCollName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"105e345cf3c0abed3cb6c109274a379cb2655adc":["46589ed5cc841861bf6b5e2afc55f718ebcd02a0"],"46589ed5cc841861bf6b5e2afc55f718ebcd02a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1eebf1b080530bdd7572c4927fb2bb52334b7a86":["105e345cf3c0abed3cb6c109274a379cb2655adc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1eebf1b080530bdd7572c4927fb2bb52334b7a86"]},"commit2Childs":{"105e345cf3c0abed3cb6c109274a379cb2655adc":["1eebf1b080530bdd7572c4927fb2bb52334b7a86"],"46589ed5cc841861bf6b5e2afc55f718ebcd02a0":["105e345cf3c0abed3cb6c109274a379cb2655adc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["46589ed5cc841861bf6b5e2afc55f718ebcd02a0"],"1eebf1b080530bdd7572c4927fb2bb52334b7a86":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}