{"path":"solr/core/src/test/org/apache/solr/handler/component/PhrasesIdentificationComponentTest#testGreyboxShardSearchRequests().mjava","commits":[{"id":"0d1411e62d30c460b09c6f3643df82daa10a27cc","date":1536256256,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/PhrasesIdentificationComponentTest#testGreyboxShardSearchRequests().mjava","pathOld":"/dev/null","sourceNew":"  public void testGreyboxShardSearchRequests() throws Exception {\n    final String input = \"quick brown fox ran\";\n\n    final String phrase_xpath = \"//lst[@name='phrases']\";\n    final String all_phrase_xpath = phrase_xpath + \"/arr[@name='_all']\";\n\n    // phrases requested, and correct request stage / shard purpose ...\n    assertQ(req(\"q\", input,\n                \"phrases\",\"true\",\n                ShardParams.IS_SHARD, \"true\",\n                ShardParams.SHARDS_PURPOSE, \"\"+PhrasesIdentificationComponent.SHARD_PURPOSE)\n            \n            // this shard request should have caused stats to be returned about all phrases...\n            , \"10=count(\"+ all_phrase_xpath +\"/lst)\"\n            // \"quick\" ...\n            , all_phrase_xpath + \"/lst[1]/lst[@name='ttf']/long[@name='multigrams_body'][.='1']\"\n            , all_phrase_xpath + \"/lst[1]/lst[@name='ttf']/long[@name='multigrams_title'][.='0']\"\n            // ...\n            // \"brown fox\"\n            , all_phrase_xpath + \"/lst[6]/lst[@name='ttf']/long[@name='multigrams_body'][.='3']\"\n            , all_phrase_xpath + \"/lst[6]/lst[@name='ttf']/long[@name='multigrams_title'][.='1']\"\n            , all_phrase_xpath + \"/lst[6]/lst[@name='df']/long[@name='multigrams_body'][.='2']\"\n            , all_phrase_xpath + \"/lst[6]/lst[@name='df']/long[@name='multigrams_title'][.='1']\"\n            , all_phrase_xpath + \"/lst[6]/lst[@name='conj_dc']/long[@name='multigrams_body'][.='2']\"\n            , all_phrase_xpath + \"/lst[6]/lst[@name='conj_dc']/long[@name='multigrams_title'][.='1']\"\n            \n            // but no computed \"scores\"...\n            , \"0=count(\"+phrase_xpath+\"//*[@name='score'])\"\n            );\n\n    // phrases requested, but incorrect request stage / shard purpose ...\n    assertQ(req(\"q\", input,\n                \"phrases\",\"true\",\n                ShardParams.IS_SHARD, \"true\",\n                ShardParams.SHARDS_PURPOSE, \"\"+ShardRequest.PURPOSE_GET_FIELDS)\n            , \"0=count(\"+ phrase_xpath +\"/lst)\");\n    \n    // phrases disabled, regardless of request stage / shard purpose ...\n    assertTrue(\"sanity check failed, stage was modified in code w/o updating test\",\n               PhrasesIdentificationComponent.SHARD_PURPOSE != ShardRequest.PURPOSE_GET_FIELDS);\n    assertQ(req(\"q\", input,\n                \"phrases\",\"false\",\n                ShardParams.IS_SHARD, \"true\",\n                ShardParams.SHARDS_PURPOSE, \"\"+ShardRequest.PURPOSE_GET_FIELDS)\n            , \"0=count(\"+ phrase_xpath +\"/lst)\");\n    assertQ(req(\"q\", input,\n                \"phrases\",\"false\",\n                ShardParams.IS_SHARD, \"true\",\n                ShardParams.SHARDS_PURPOSE, \"\"+PhrasesIdentificationComponent.SHARD_PURPOSE)\n            , \"0=count(\"+ phrase_xpath +\"/lst)\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0d1411e62d30c460b09c6f3643df82daa10a27cc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d1411e62d30c460b09c6f3643df82daa10a27cc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d1411e62d30c460b09c6f3643df82daa10a27cc"],"0d1411e62d30c460b09c6f3643df82daa10a27cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}