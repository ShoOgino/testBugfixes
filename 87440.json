{"path":"solr/core/src/java/org/apache/solr/search/HashQParserPlugin.HashQuery#getFilterCollector(IndexSearcher).mjava","commits":[{"id":"91814ce09be68efd0626969632e79ae47d8876d4","date":1425951537,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/HashQParserPlugin.HashQuery#getFilterCollector(IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"    public DelegatingCollector getFilterCollector(IndexSearcher indexSearcher) {\n      String[] keys = keysParam.split(\",\");\n      HashKey[] hashKeys = new HashKey[keys.length];\n      SolrIndexSearcher searcher = (SolrIndexSearcher)indexSearcher;\n      IndexSchema schema = searcher.getSchema();\n      for(int i=0; i<keys.length; i++) {\n        String key = keys[i];\n        FieldType ft = schema.getField(key).getType();\n        HashKey h = null;\n        if(ft instanceof StrField) {\n          h = new BytesHash(key, ft);\n        } else {\n          h = new NumericHash(key);\n        }\n        hashKeys[i] = h;\n      }\n      HashKey k = (hashKeys.length > 1) ? new CompositeHash(hashKeys) : hashKeys[0];\n      return new HashCollector(k, workers, worker);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b727c2b644ee54d2e38238ce0d24d069e9dec877"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/HashQParserPlugin.HashQuery#getFilterCollector(IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"    public DelegatingCollector getFilterCollector(IndexSearcher indexSearcher) {\n      String[] keys = keysParam.split(\",\");\n      HashKey[] hashKeys = new HashKey[keys.length];\n      SolrIndexSearcher searcher = (SolrIndexSearcher)indexSearcher;\n      IndexSchema schema = searcher.getSchema();\n      for(int i=0; i<keys.length; i++) {\n        String key = keys[i];\n        FieldType ft = schema.getField(key).getType();\n        HashKey h = null;\n        if(ft instanceof StrField) {\n          h = new BytesHash(key, ft);\n        } else {\n          h = new NumericHash(key);\n        }\n        hashKeys[i] = h;\n      }\n      HashKey k = (hashKeys.length > 1) ? new CompositeHash(hashKeys) : hashKeys[0];\n      return new HashCollector(k, workers, worker);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b727c2b644ee54d2e38238ce0d24d069e9dec877","date":1534803679,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/HashQParserPlugin.HashQuery#getFilterCollector(IndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/HashQParserPlugin.HashQuery#getFilterCollector(IndexSearcher).mjava","sourceNew":"    public DelegatingCollector getFilterCollector(IndexSearcher indexSearcher) {\n      HashKey[] hashKeys = new HashKey[keys.length];\n      SolrIndexSearcher searcher = (SolrIndexSearcher)indexSearcher;\n      IndexSchema schema = searcher.getSchema();\n      for(int i=0; i<keys.length; i++) {\n        String key = keys[i];\n        FieldType ft = schema.getField(key).getType();\n        HashKey h = null;\n        if(ft instanceof StrField) {\n          h = new BytesHash(key, ft);\n        } else {\n          h = new NumericHash(key);\n        }\n        hashKeys[i] = h;\n      }\n      HashKey k = (hashKeys.length > 1) ? new CompositeHash(hashKeys) : hashKeys[0];\n      return new HashCollector(k, workers, worker);\n    }\n\n","sourceOld":"    public DelegatingCollector getFilterCollector(IndexSearcher indexSearcher) {\n      String[] keys = keysParam.split(\",\");\n      HashKey[] hashKeys = new HashKey[keys.length];\n      SolrIndexSearcher searcher = (SolrIndexSearcher)indexSearcher;\n      IndexSchema schema = searcher.getSchema();\n      for(int i=0; i<keys.length; i++) {\n        String key = keys[i];\n        FieldType ft = schema.getField(key).getType();\n        HashKey h = null;\n        if(ft instanceof StrField) {\n          h = new BytesHash(key, ft);\n        } else {\n          h = new NumericHash(key);\n        }\n        hashKeys[i] = h;\n      }\n      HashKey k = (hashKeys.length > 1) ? new CompositeHash(hashKeys) : hashKeys[0];\n      return new HashCollector(k, workers, worker);\n    }\n\n","bugFix":["91814ce09be68efd0626969632e79ae47d8876d4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","91814ce09be68efd0626969632e79ae47d8876d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"91814ce09be68efd0626969632e79ae47d8876d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b727c2b644ee54d2e38238ce0d24d069e9dec877"],"b727c2b644ee54d2e38238ce0d24d069e9dec877":["91814ce09be68efd0626969632e79ae47d8876d4"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","91814ce09be68efd0626969632e79ae47d8876d4"],"91814ce09be68efd0626969632e79ae47d8876d4":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b727c2b644ee54d2e38238ce0d24d069e9dec877"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b727c2b644ee54d2e38238ce0d24d069e9dec877":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}