{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    core.decRef();\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    core.decRef();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e072d0b1fc19e0533d8ce432eed245196bca6fde","date":1379265112,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      Throwable t = null;\n      for (RefCount<DocValuesProducer> dvp : genDVProducers.values()) {\n        try {\n          dvp.decRef();\n        } catch (Throwable th) {\n          if (t != null) {\n            t = th;\n          }\n        }\n      }\n      if (t != null) {\n        if (t instanceof IOException) throw (IOException) t;\n        if (t instanceof RuntimeException) throw (RuntimeException) t;\n        if (t instanceof Error) throw (Error) t;\n        throw new RuntimeException(t);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    core.decRef();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97aadac8567f4cfb94259b44aabc016771e3f084","date":1381060076,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      Throwable t = null;\n      for (RefCount<DocValuesProducer> dvp : genDVProducers.values()) {\n        try {\n          dvp.decRef();\n        } catch (Throwable th) {\n          if (t != null) {\n            t = th;\n          }\n        }\n      }\n      genDVProducers.clear();\n      dvProducers.clear();\n      docValuesLocal.close();\n      docsWithFieldLocal.close();\n      if (t != null) {\n        if (t instanceof IOException) throw (IOException) t;\n        if (t instanceof RuntimeException) throw (RuntimeException) t;\n        if (t instanceof Error) throw (Error) t;\n        throw new RuntimeException(t);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      Throwable t = null;\n      for (RefCount<DocValuesProducer> dvp : genDVProducers.values()) {\n        try {\n          dvp.decRef();\n        } catch (Throwable th) {\n          if (t != null) {\n            t = th;\n          }\n        }\n      }\n      if (t != null) {\n        if (t instanceof IOException) throw (IOException) t;\n        if (t instanceof RuntimeException) throw (RuntimeException) t;\n        if (t instanceof Error) throw (Error) t;\n        throw new RuntimeException(t);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["6f8a4ddee78d8bc3c8c736c1cdb130b94cde0b89"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666","date":1381263930,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      Throwable t = null;\n      for (RefCount<DocValuesProducer> dvp : genDVProducers.values()) {\n        try {\n          dvp.decRef();\n        } catch (Throwable th) {\n          if (t != null) {\n            t = th;\n          }\n        }\n      }\n      genDVProducers.clear();\n      dvProducers.clear();\n      docValuesLocal.close();\n      docsWithFieldLocal.close();\n      IOUtils.reThrow(t);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      Throwable t = null;\n      for (RefCount<DocValuesProducer> dvp : genDVProducers.values()) {\n        try {\n          dvp.decRef();\n        } catch (Throwable th) {\n          if (t != null) {\n            t = th;\n          }\n        }\n      }\n      genDVProducers.clear();\n      dvProducers.clear();\n      docValuesLocal.close();\n      docsWithFieldLocal.close();\n      if (t != null) {\n        if (t instanceof IOException) throw (IOException) t;\n        if (t instanceof RuntimeException) throw (RuntimeException) t;\n        if (t instanceof Error) throw (Error) t;\n        throw new RuntimeException(t);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ac14bdd59867c398bdb1a9cc50583bd3c93593e5","date":1382646404,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      dvProducers.clear();\n      docValuesLocal.close();\n      docsWithFieldLocal.close();\n      segDocValues.decRef(dvGens);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      Throwable t = null;\n      for (RefCount<DocValuesProducer> dvp : genDVProducers.values()) {\n        try {\n          dvp.decRef();\n        } catch (Throwable th) {\n          if (t != null) {\n            t = th;\n          }\n        }\n      }\n      genDVProducers.clear();\n      dvProducers.clear();\n      docValuesLocal.close();\n      docsWithFieldLocal.close();\n      IOUtils.reThrow(t);\n    }\n  }\n\n","bugFix":null,"bugIntro":["6f8a4ddee78d8bc3c8c736c1cdb130b94cde0b89"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6f8a4ddee78d8bc3c8c736c1cdb130b94cde0b89","date":1395763949,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      dvProducers.clear();\n      try {\n        IOUtils.close(docValuesLocal, docsWithFieldLocal);\n      } finally {\n        segDocValues.decRef(dvGens);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      dvProducers.clear();\n      docValuesLocal.close();\n      docsWithFieldLocal.close();\n      segDocValues.decRef(dvGens);\n    }\n  }\n\n","bugFix":["97aadac8567f4cfb94259b44aabc016771e3f084","ac14bdd59867c398bdb1a9cc50583bd3c93593e5"],"bugIntro":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      dvProducersByField.clear();\n      try {\n        IOUtils.close(docValuesLocal, docsWithFieldLocal);\n      } finally {\n        segDocValues.decRef(dvGens);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      dvProducers.clear();\n      try {\n        IOUtils.close(docValuesLocal, docsWithFieldLocal);\n      } finally {\n        segDocValues.decRef(dvGens);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      dvProducersByField.clear();\n      try {\n        IOUtils.close(docValuesLocal, docsWithFieldLocal);\n      } finally {\n        segDocValues.decRef(dvGens);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      dvProducers.clear();\n      try {\n        IOUtils.close(docValuesLocal, docsWithFieldLocal);\n      } finally {\n        segDocValues.decRef(dvGens);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22a2e66dfda83847e80095b8693c660742ab3e9c","date":1408628796,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      try {\n        IOUtils.close(docValuesLocal, docsWithFieldLocal);\n      } finally {\n        if (docValuesProducer instanceof SegmentDocValuesProducer) {\n          segDocValues.decRef(((SegmentDocValuesProducer)docValuesProducer).dvGens);\n        } else if (docValuesProducer != null) {\n          segDocValues.decRef(Collections.singletonList(-1L));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      dvProducersByField.clear();\n      try {\n        IOUtils.close(docValuesLocal, docsWithFieldLocal);\n      } finally {\n        segDocValues.decRef(dvGens);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"505bff044e47a553f461b6f4484d1d08faf4ac85","date":1420728783,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      try {\n        super.doClose();\n      } finally {\n        if (docValuesProducer instanceof SegmentDocValuesProducer) {\n          segDocValues.decRef(((SegmentDocValuesProducer)docValuesProducer).dvGens);\n        } else if (docValuesProducer != null) {\n          segDocValues.decRef(Collections.singletonList(-1L));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      try {\n        IOUtils.close(docValuesLocal, docsWithFieldLocal);\n      } finally {\n        if (docValuesProducer instanceof SegmentDocValuesProducer) {\n          segDocValues.decRef(((SegmentDocValuesProducer)docValuesProducer).dvGens);\n        } else if (docValuesProducer != null) {\n          segDocValues.decRef(Collections.singletonList(-1L));\n        }\n      }\n    }\n  }\n\n","bugFix":["6f8a4ddee78d8bc3c8c736c1cdb130b94cde0b89"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      if (docValuesProducer instanceof SegmentDocValuesProducer) {\n        segDocValues.decRef(((SegmentDocValuesProducer)docValuesProducer).dvGens);\n      } else if (docValuesProducer != null) {\n        segDocValues.decRef(Collections.singletonList(-1L));\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      try {\n        super.doClose();\n      } finally {\n        if (docValuesProducer instanceof SegmentDocValuesProducer) {\n          segDocValues.decRef(((SegmentDocValuesProducer)docValuesProducer).dvGens);\n        } else if (docValuesProducer != null) {\n          segDocValues.decRef(Collections.singletonList(-1L));\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      if (docValuesProducer instanceof SegmentDocValuesProducer) {\n        segDocValues.decRef(((SegmentDocValuesProducer)docValuesProducer).dvGens);\n      } else if (docValuesProducer != null) {\n        segDocValues.decRef(Collections.singletonList(-1L));\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      try {\n        super.doClose();\n      } finally {\n        if (docValuesProducer instanceof SegmentDocValuesProducer) {\n          segDocValues.decRef(((SegmentDocValuesProducer)docValuesProducer).dvGens);\n        } else if (docValuesProducer != null) {\n          segDocValues.decRef(Collections.singletonList(-1L));\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      if (docValuesProducer instanceof SegmentDocValuesProducer) {\n        segDocValues.decRef(((SegmentDocValuesProducer)docValuesProducer).dvGens);\n      } else if (docValuesProducer != null) {\n        segDocValues.decRef(Collections.singletonList(-1L));\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    try {\n      core.decRef();\n    } finally {\n      try {\n        super.doClose();\n      } finally {\n        if (docValuesProducer instanceof SegmentDocValuesProducer) {\n          segDocValues.decRef(((SegmentDocValuesProducer)docValuesProducer).dvGens);\n        } else if (docValuesProducer != null) {\n          segDocValues.decRef(Collections.singletonList(-1L));\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666":["97aadac8567f4cfb94259b44aabc016771e3f084"],"e072d0b1fc19e0533d8ce432eed245196bca6fde":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5eb2511ababf862ea11e10761c70ee560cd84510":["6f8a4ddee78d8bc3c8c736c1cdb130b94cde0b89","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["6f8a4ddee78d8bc3c8c736c1cdb130b94cde0b89"],"6f8a4ddee78d8bc3c8c736c1cdb130b94cde0b89":["ac14bdd59867c398bdb1a9cc50583bd3c93593e5"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["22a2e66dfda83847e80095b8693c660742ab3e9c"],"ac14bdd59867c398bdb1a9cc50583bd3c93593e5":["8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["505bff044e47a553f461b6f4484d1d08faf4ac85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["505bff044e47a553f461b6f4484d1d08faf4ac85","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"22a2e66dfda83847e80095b8693c660742ab3e9c":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"97aadac8567f4cfb94259b44aabc016771e3f084":["e072d0b1fc19e0533d8ce432eed245196bca6fde"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666":["ac14bdd59867c398bdb1a9cc50583bd3c93593e5"],"e072d0b1fc19e0533d8ce432eed245196bca6fde":["97aadac8567f4cfb94259b44aabc016771e3f084"],"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","22a2e66dfda83847e80095b8693c660742ab3e9c"],"6f8a4ddee78d8bc3c8c736c1cdb130b94cde0b89":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e072d0b1fc19e0533d8ce432eed245196bca6fde"],"ac14bdd59867c398bdb1a9cc50583bd3c93593e5":["6f8a4ddee78d8bc3c8c736c1cdb130b94cde0b89"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"22a2e66dfda83847e80095b8693c660742ab3e9c":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"97aadac8567f4cfb94259b44aabc016771e3f084":["8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}