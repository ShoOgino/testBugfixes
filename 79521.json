{"path":"contrib/lucli/src/java/lucli/LuceneMethods#[K,V-extends-Comparable[V]]_getSortedMapEntries(Map[K,V]).mjava","commits":[{"id":"6358eb123cf2e9cc195c57e5ac4f3cf2f15cee94","date":1257897915,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/lucli/src/java/lucli/LuceneMethods#[K,V-extends-Comparable[V]]_getSortedMapEntries(Map[K,V]).mjava","pathOld":"/dev/null","sourceNew":"  /** Sort Map values\n   * @param m the map we're sorting\n   * from http://developer.java.sun.com/developer/qow/archive/170/index.jsp\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static <K,V extends Comparable<V>> Map.Entry<K,V>[]\n    getSortedMapEntries(Map<K,V> m) {\n    Set<Map.Entry<K, V>> set = m.entrySet();\n    Map.Entry<K,V>[] entries =\n       set.toArray(new Map.Entry[set.size()]);\n    Arrays.sort(entries, new Comparator<Map.Entry<K,V>>() {\n      public int compare(Map.Entry<K,V> o1, Map.Entry<K,V> o2) {\n        V v1 = o1.getValue();\n        V v2 = o2.getValue();\n        return v2.compareTo(v1); //descending order\n      }\n    });\n    return entries;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/lucli/src/java/lucli/LuceneMethods#[K,V-extends-Comparable[V]]_getSortedMapEntries(Map[K,V]).mjava","pathOld":"contrib/lucli/src/java/lucli/LuceneMethods#[K,V-extends-Comparable[V]]_getSortedMapEntries(Map[K,V]).mjava","sourceNew":"  /** Sort Map values\n   * @param m the map we're sorting\n   * from http://developer.java.sun.com/developer/qow/archive/170/index.jsp\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static <K,V extends Comparable<V>> Map.Entry<K,V>[]\n    getSortedMapEntries(Map<K,V> m) {\n    Set<Map.Entry<K, V>> set = m.entrySet();\n    Map.Entry<K,V>[] entries =\n       set.toArray(new Map.Entry[set.size()]);\n    Arrays.sort(entries, new Comparator<Map.Entry<K,V>>() {\n      public int compare(Map.Entry<K,V> o1, Map.Entry<K,V> o2) {\n        V v1 = o1.getValue();\n        V v2 = o2.getValue();\n        return v2.compareTo(v1); //descending order\n      }\n    });\n    return entries;\n  }\n\n","sourceOld":"  /** Sort Map values\n   * @param m the map we're sorting\n   * from http://developer.java.sun.com/developer/qow/archive/170/index.jsp\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static <K,V extends Comparable<V>> Map.Entry<K,V>[]\n    getSortedMapEntries(Map<K,V> m) {\n    Set<Map.Entry<K, V>> set = m.entrySet();\n    Map.Entry<K,V>[] entries =\n       set.toArray(new Map.Entry[set.size()]);\n    Arrays.sort(entries, new Comparator<Map.Entry<K,V>>() {\n      public int compare(Map.Entry<K,V> o1, Map.Entry<K,V> o2) {\n        V v1 = o1.getValue();\n        V v2 = o2.getValue();\n        return v2.compareTo(v1); //descending order\n      }\n    });\n    return entries;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6358eb123cf2e9cc195c57e5ac4f3cf2f15cee94":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6358eb123cf2e9cc195c57e5ac4f3cf2f15cee94"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6358eb123cf2e9cc195c57e5ac4f3cf2f15cee94"],"6358eb123cf2e9cc195c57e5ac4f3cf2f15cee94":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}