{"path":"modules/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","commits":[{"id":"d4aa50b979cd392e00e5bc0f23f78cbd106cb968","date":1308150768,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","pathOld":"/dev/null","sourceNew":"    public GroupComparator(Sort groupSort) throws IOException {\n      final SortField[] sortFields = groupSort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      reversed = new int[sortFields.length];\n      for (int compIDX = 0; compIDX < sortFields.length; compIDX++) {\n        final SortField sortField = sortFields[compIDX];\n        comparators[compIDX] = sortField.getComparator(1, compIDX);\n        reversed[compIDX] = sortField.getReverse() ? -1 : 1;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","date":1308291005,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","pathOld":"/dev/null","sourceNew":"    public GroupComparator(Sort groupSort) throws IOException {\n      final SortField[] sortFields = groupSort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      reversed = new int[sortFields.length];\n      for (int compIDX = 0; compIDX < sortFields.length; compIDX++) {\n        final SortField sortField = sortFields[compIDX];\n        comparators[compIDX] = sortField.getComparator(1, compIDX);\n        reversed[compIDX] = sortField.getReverse() ? -1 : 1;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb008c8f8fc29e5deccfa43d8a054268ba1c5e48","date":1331199997,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","sourceNew":"    public GroupComparator(Sort groupSort) throws IOException {\n      final SortField[] sortFields = groupSort.getSort();\n      comparators = new FieldComparator<?>[sortFields.length];\n      reversed = new int[sortFields.length];\n      for (int compIDX = 0; compIDX < sortFields.length; compIDX++) {\n        final SortField sortField = sortFields[compIDX];\n        comparators[compIDX] = sortField.getComparator(1, compIDX);\n        reversed[compIDX] = sortField.getReverse() ? -1 : 1;\n      }\n    }\n\n","sourceOld":"    public GroupComparator(Sort groupSort) throws IOException {\n      final SortField[] sortFields = groupSort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      reversed = new int[sortFields.length];\n      for (int compIDX = 0; compIDX < sortFields.length; compIDX++) {\n        final SortField sortField = sortFields[compIDX];\n        comparators[compIDX] = sortField.getComparator(1, compIDX);\n        reversed[compIDX] = sortField.getReverse() ? -1 : 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","sourceNew":"    public GroupComparator(Sort groupSort) throws IOException {\n      final SortField[] sortFields = groupSort.getSort();\n      comparators = new FieldComparator<?>[sortFields.length];\n      reversed = new int[sortFields.length];\n      for (int compIDX = 0; compIDX < sortFields.length; compIDX++) {\n        final SortField sortField = sortFields[compIDX];\n        comparators[compIDX] = sortField.getComparator(1, compIDX);\n        reversed[compIDX] = sortField.getReverse() ? -1 : 1;\n      }\n    }\n\n","sourceOld":"    public GroupComparator(Sort groupSort) throws IOException {\n      final SortField[] sortFields = groupSort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      reversed = new int[sortFields.length];\n      for (int compIDX = 0; compIDX < sortFields.length; compIDX++) {\n        final SortField sortField = sortFields[compIDX];\n        comparators[compIDX] = sortField.getComparator(1, compIDX);\n        reversed[compIDX] = sortField.getReverse() ? -1 : 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","sourceNew":"    public GroupComparator(Sort groupSort) throws IOException {\n      final SortField[] sortFields = groupSort.getSort();\n      comparators = new FieldComparator<?>[sortFields.length];\n      reversed = new int[sortFields.length];\n      for (int compIDX = 0; compIDX < sortFields.length; compIDX++) {\n        final SortField sortField = sortFields[compIDX];\n        comparators[compIDX] = sortField.getComparator(1, compIDX);\n        reversed[compIDX] = sortField.getReverse() ? -1 : 1;\n      }\n    }\n\n","sourceOld":"    public GroupComparator(Sort groupSort) throws IOException {\n      final SortField[] sortFields = groupSort.getSort();\n      comparators = new FieldComparator<?>[sortFields.length];\n      reversed = new int[sortFields.length];\n      for (int compIDX = 0; compIDX < sortFields.length; compIDX++) {\n        final SortField sortField = sortFields[compIDX];\n        comparators[compIDX] = sortField.getComparator(1, compIDX);\n        reversed[compIDX] = sortField.getReverse() ? -1 : 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["d4aa50b979cd392e00e5bc0f23f78cbd106cb968","eb008c8f8fc29e5deccfa43d8a054268ba1c5e48"],"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d4aa50b979cd392e00e5bc0f23f78cbd106cb968"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["eb008c8f8fc29e5deccfa43d8a054268ba1c5e48"],"eb008c8f8fc29e5deccfa43d8a054268ba1c5e48":["d4aa50b979cd392e00e5bc0f23f78cbd106cb968"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d4aa50b979cd392e00e5bc0f23f78cbd106cb968":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"eb008c8f8fc29e5deccfa43d8a054268ba1c5e48":["38e3b736c7ca086d61b7dbb841c905ee115490da","b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","d4aa50b979cd392e00e5bc0f23f78cbd106cb968"],"d4aa50b979cd392e00e5bc0f23f78cbd106cb968":["38e3b736c7ca086d61b7dbb841c905ee115490da","0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","eb008c8f8fc29e5deccfa43d8a054268ba1c5e48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}