{"path":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","commits":[{"id":"d8d1f2c78f560980e5822db6905bb3b2f52fdbe5","date":1417094182,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    NamedList nl = new NamedList();\n    for (String s : asList(DEFAULTS, APPENDS, INVARIANTS)) if (m.get(s) != null) nl.add(s, map.remove(s));\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    this.initArgs = nl;\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"432e578be72da02cfde62dcc7fb4fa8620bc85fd","date":1420557072,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","sourceNew":"  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      Object value = entry.getValue();\n      if (value instanceof Map) value = new NamedList((Map) value);\n      initArgs.add(entry.getKey(), value);\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","sourceOld":"  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    NamedList nl = new NamedList();\n    for (String s : asList(DEFAULTS, APPENDS, INVARIANTS)) if (m.get(s) != null) nl.add(s, map.remove(s));\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    this.initArgs = nl;\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ee01ed2bbdbfebcda94054cb39b4fac5f06a3bd","date":1426252395,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","sourceNew":"  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof Map) value = new NamedList((Map) value);\n      initArgs.add(entry.getKey(), value);\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","sourceOld":"  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      Object value = entry.getValue();\n      if (value instanceof Map) value = new NamedList((Map) value);\n      initArgs.add(entry.getKey(), value);\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","sourceNew":"  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof Map) value = new NamedList((Map) value);\n      initArgs.add(entry.getKey(), value);\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","sourceOld":"  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      Object value = entry.getValue();\n      if (value instanceof Map) value = new NamedList((Map) value);\n      initArgs.add(entry.getKey(), value);\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0a9f341fe265836e64cc6182e6a0eaaacde77d1","date":1465412555,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","sourceNew":"  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof List) {\n        List list = (List) value;\n        if (!list.isEmpty() && list.get(0) instanceof Map) {//this is a subcomponent\n          for (Object o : list) {\n            if (o instanceof Map) o = new NamedList<>((Map) o);\n            initArgs.add(entry.getKey(), o);\n          }\n        } else {\n          initArgs.add(entry.getKey(), value);\n        }\n      } else {\n        if (value instanceof Map) value = new NamedList((Map) value);\n        initArgs.add(entry.getKey(), value);\n      }\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","sourceOld":"  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof Map) value = new NamedList((Map) value);\n      initArgs.add(entry.getKey(), value);\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","sourceNew":"  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof List) {\n        List list = (List) value;\n        if (!list.isEmpty() && list.get(0) instanceof Map) {//this is a subcomponent\n          for (Object o : list) {\n            if (o instanceof Map) o = new NamedList<>((Map) o);\n            initArgs.add(entry.getKey(), o);\n          }\n        } else {\n          initArgs.add(entry.getKey(), value);\n        }\n      } else {\n        if (value instanceof Map) value = new NamedList((Map) value);\n        initArgs.add(entry.getKey(), value);\n      }\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","sourceOld":"  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof Map) value = new NamedList((Map) value);\n      initArgs.add(entry.getKey(), value);\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39dabfd19b49b248d63cedbb01ea144ee5ad071c","date":1566241238,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","sourceNew":"  public PluginInfo(String type, Map<String, Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof List) {\n        List list = (List) value;\n        if (!list.isEmpty() && list.get(0) instanceof Map) {//this is a subcomponent\n          for (Object o : list) {\n            if (o instanceof Map) o = new NamedList<>((Map) o);\n            initArgs.add(entry.getKey(), o);\n          }\n        } else {\n          initArgs.add(entry.getKey(), value);\n        }\n      } else {\n        if (value instanceof Map) value = new NamedList((Map) value);\n        initArgs.add(entry.getKey(), value);\n      }\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    attributes = unmodifiableMap(m);\n    this.children = Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","sourceOld":"  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof List) {\n        List list = (List) value;\n        if (!list.isEmpty() && list.get(0) instanceof Map) {//this is a subcomponent\n          for (Object o : list) {\n            if (o instanceof Map) o = new NamedList<>((Map) o);\n            initArgs.add(entry.getKey(), o);\n          }\n        } else {\n          initArgs.add(entry.getKey(), value);\n        }\n      } else {\n        if (value instanceof Map) value = new NamedList((Map) value);\n        initArgs.add(entry.getKey(), value);\n      }\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c","date":1566455239,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","sourceNew":"  public PluginInfo(String type, Map<String, Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof List) {\n        List list = (List) value;\n        if (!list.isEmpty() && list.get(0) instanceof Map) {//this is a subcomponent\n          for (Object o : list) {\n            if (o instanceof Map) o = new NamedList<>((Map) o);\n            initArgs.add(entry.getKey(), o);\n          }\n        } else {\n          initArgs.add(entry.getKey(), value);\n        }\n      } else {\n        if (value instanceof Map) value = new NamedList((Map) value);\n        initArgs.add(entry.getKey(), value);\n      }\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    attributes = unmodifiableMap(m);\n    this.children = Collections.emptyList();\n    isFromSolrConfig = true;\n  }\n\n","sourceOld":"  public PluginInfo(String type, Map<String, Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof List) {\n        List list = (List) value;\n        if (!list.isEmpty() && list.get(0) instanceof Map) {//this is a subcomponent\n          for (Object o : list) {\n            if (o instanceof Map) o = new NamedList<>((Map) o);\n            initArgs.add(entry.getKey(), o);\n          }\n        } else {\n          initArgs.add(entry.getKey(), value);\n        }\n      } else {\n        if (value instanceof Map) value = new NamedList((Map) value);\n        initArgs.add(entry.getKey(), value);\n      }\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    attributes = unmodifiableMap(m);\n    this.children = Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","sourceNew":"  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof List) {\n        List list = (List) value;\n        if (!list.isEmpty() && list.get(0) instanceof Map) {//this is a subcomponent\n          for (Object o : list) {\n            if (o instanceof Map) o = new NamedList<>((Map) o);\n            initArgs.add(entry.getKey(), o);\n          }\n        } else {\n          initArgs.add(entry.getKey(), value);\n        }\n      } else {\n        if (value instanceof Map) value = new NamedList((Map) value);\n        initArgs.add(entry.getKey(), value);\n      }\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","sourceOld":"  public PluginInfo(String type, Map<String, Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof List) {\n        List list = (List) value;\n        if (!list.isEmpty() && list.get(0) instanceof Map) {//this is a subcomponent\n          for (Object o : list) {\n            if (o instanceof Map) o = new NamedList<>((Map) o);\n            initArgs.add(entry.getKey(), o);\n          }\n        } else {\n          initArgs.add(entry.getKey(), value);\n        }\n      } else {\n        if (value instanceof Map) value = new NamedList((Map) value);\n        initArgs.add(entry.getKey(), value);\n      }\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    attributes = unmodifiableMap(m);\n    this.children = Collections.emptyList();\n    isFromSolrConfig = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","sourceNew":"  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof List) {\n        List list = (List) value;\n        if (!list.isEmpty() && list.get(0) instanceof Map) {//this is a subcomponent\n          for (Object o : list) {\n            if (o instanceof Map) o = new NamedList<>((Map) o);\n            initArgs.add(entry.getKey(), o);\n          }\n        } else {\n          initArgs.add(entry.getKey(), value);\n        }\n      } else {\n        if (value instanceof Map) value = new NamedList((Map) value);\n        initArgs.add(entry.getKey(), value);\n      }\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","sourceOld":"  public PluginInfo(String type, Map<String, Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof List) {\n        List list = (List) value;\n        if (!list.isEmpty() && list.get(0) instanceof Map) {//this is a subcomponent\n          for (Object o : list) {\n            if (o instanceof Map) o = new NamedList<>((Map) o);\n            initArgs.add(entry.getKey(), o);\n          }\n        } else {\n          initArgs.add(entry.getKey(), value);\n        }\n      } else {\n        if (value instanceof Map) value = new NamedList((Map) value);\n        initArgs.add(entry.getKey(), value);\n      }\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    attributes = unmodifiableMap(m);\n    this.children = Collections.emptyList();\n    isFromSolrConfig = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"954ae83b7dfacaa33d48ea056448ae11f7745a93","date":1571867711,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","sourceNew":"  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof List) {\n        List list = (List) value;\n        if (!list.isEmpty() && list.get(0) instanceof Map) {//this is a subcomponent\n          for (Object o : list) {\n            if (o instanceof Map) o = new NamedList<>((Map) o);\n            initArgs.add(entry.getKey(), o);\n          }\n        } else {\n          initArgs.add(entry.getKey(), value);\n        }\n      } else {\n        if (value instanceof Map) value = new NamedList((Map) value);\n        initArgs.add(entry.getKey(), value);\n      }\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    Pair<String, String> parsed = parseClassName((String) m.get(CLASS_NAME));\n    this.className = parsed.second();\n    this.pkgName = parsed.first();\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","sourceOld":"  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof List) {\n        List list = (List) value;\n        if (!list.isEmpty() && list.get(0) instanceof Map) {//this is a subcomponent\n          for (Object o : list) {\n            if (o instanceof Map) o = new NamedList<>((Map) o);\n            initArgs.add(entry.getKey(), o);\n          }\n        } else {\n          initArgs.add(entry.getKey(), value);\n        }\n      } else {\n        if (value instanceof Map) value = new NamedList((Map) value);\n        initArgs.add(entry.getKey(), value);\n      }\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    this.className = (String) m.get(CLASS_NAME);\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75237075d8425856bf4bbf52a6be4f9162b8187d","date":1591103291,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof List) {\n        List list = (List) value;\n        if (!list.isEmpty() && list.get(0) instanceof Map) {//this is a subcomponent\n          for (Object o : list) {\n            if (o instanceof Map) o = new NamedList<>((Map) o);\n            initArgs.add(entry.getKey(), o);\n          }\n        } else {\n          initArgs.add(entry.getKey(), value);\n        }\n      } else {\n        if (value instanceof Map) value = new NamedList((Map) value);\n        initArgs.add(entry.getKey(), value);\n      }\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    Pair<String, String> parsed = parseClassName((String) m.get(CLASS_NAME));\n    this.className = parsed.second();\n    this.pkgName = parsed.first();\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","sourceOld":"  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof List) {\n        List list = (List) value;\n        if (!list.isEmpty() && list.get(0) instanceof Map) {//this is a subcomponent\n          for (Object o : list) {\n            if (o instanceof Map) o = new NamedList<>((Map) o);\n            initArgs.add(entry.getKey(), o);\n          }\n        } else {\n          initArgs.add(entry.getKey(), value);\n        }\n      } else {\n        if (value instanceof Map) value = new NamedList((Map) value);\n        initArgs.add(entry.getKey(), value);\n      }\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    Pair<String, String> parsed = parseClassName((String) m.get(CLASS_NAME));\n    this.className = parsed.second();\n    this.pkgName = parsed.first();\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b2ed9b72e5fa27a7bd4857f222ca815341979d4a","date":1594879524,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#PluginInfo(String,Map[String,Object]).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof List) {\n        List list = (List) value;\n        if (!list.isEmpty() && list.get(0) instanceof Map) {//this is a subcomponent\n          for (Object o : list) {\n            if (o instanceof Map) o = new NamedList<>((Map) o);\n            initArgs.add(entry.getKey(), o);\n          }\n        } else {\n          initArgs.add(entry.getKey(), value);\n        }\n      } else {\n        if (value instanceof Map) value = new NamedList((Map) value);\n        initArgs.add(entry.getKey(), value);\n      }\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    cName = parseClassName((String) m.get(CLASS_NAME));\n    this.className = cName.className;\n    this.pkgName = cName.pkg;\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","sourceOld":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public PluginInfo(String type, Map<String,Object> map) {\n    LinkedHashMap m = new LinkedHashMap<>(map);\n    initArgs = new NamedList();\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;\n      Object value = entry.getValue();\n      if (value instanceof List) {\n        List list = (List) value;\n        if (!list.isEmpty() && list.get(0) instanceof Map) {//this is a subcomponent\n          for (Object o : list) {\n            if (o instanceof Map) o = new NamedList<>((Map) o);\n            initArgs.add(entry.getKey(), o);\n          }\n        } else {\n          initArgs.add(entry.getKey(), value);\n        }\n      } else {\n        if (value instanceof Map) value = new NamedList((Map) value);\n        initArgs.add(entry.getKey(), value);\n      }\n    }\n    this.type = type;\n    this.name = (String) m.get(NAME);\n    Pair<String, String> parsed = parseClassName((String) m.get(CLASS_NAME));\n    this.className = parsed.second();\n    this.pkgName = parsed.first();\n    attributes = unmodifiableMap(m);\n    this.children =  Collections.<PluginInfo>emptyList();\n    isFromSolrConfig = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3ee01ed2bbdbfebcda94054cb39b4fac5f06a3bd":["432e578be72da02cfde62dcc7fb4fa8620bc85fd"],"75237075d8425856bf4bbf52a6be4f9162b8187d":["954ae83b7dfacaa33d48ea056448ae11f7745a93"],"39dabfd19b49b248d63cedbb01ea144ee5ad071c":["d0a9f341fe265836e64cc6182e6a0eaaacde77d1"],"c44cc06c26e456fe9c215072b79fce30babe3975":["6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["3ee01ed2bbdbfebcda94054cb39b4fac5f06a3bd","d0a9f341fe265836e64cc6182e6a0eaaacde77d1"],"d0a9f341fe265836e64cc6182e6a0eaaacde77d1":["3ee01ed2bbdbfebcda94054cb39b4fac5f06a3bd"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["432e578be72da02cfde62dcc7fb4fa8620bc85fd","3ee01ed2bbdbfebcda94054cb39b4fac5f06a3bd"],"b2ed9b72e5fa27a7bd4857f222ca815341979d4a":["75237075d8425856bf4bbf52a6be4f9162b8187d"],"954ae83b7dfacaa33d48ea056448ae11f7745a93":["c44cc06c26e456fe9c215072b79fce30babe3975"],"6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c":["39dabfd19b49b248d63cedbb01ea144ee5ad071c"],"432e578be72da02cfde62dcc7fb4fa8620bc85fd":["d8d1f2c78f560980e5822db6905bb3b2f52fdbe5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d8d1f2c78f560980e5822db6905bb3b2f52fdbe5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b2ed9b72e5fa27a7bd4857f222ca815341979d4a"],"b0b597c65628ca9e73913a07e81691f8229bae35":["6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"3ee01ed2bbdbfebcda94054cb39b4fac5f06a3bd":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d0a9f341fe265836e64cc6182e6a0eaaacde77d1","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"75237075d8425856bf4bbf52a6be4f9162b8187d":["b2ed9b72e5fa27a7bd4857f222ca815341979d4a"],"39dabfd19b49b248d63cedbb01ea144ee5ad071c":["6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c"],"c44cc06c26e456fe9c215072b79fce30babe3975":["954ae83b7dfacaa33d48ea056448ae11f7745a93","b0b597c65628ca9e73913a07e81691f8229bae35"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d0a9f341fe265836e64cc6182e6a0eaaacde77d1":["39dabfd19b49b248d63cedbb01ea144ee5ad071c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"954ae83b7dfacaa33d48ea056448ae11f7745a93":["75237075d8425856bf4bbf52a6be4f9162b8187d"],"b2ed9b72e5fa27a7bd4857f222ca815341979d4a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"432e578be72da02cfde62dcc7fb4fa8620bc85fd":["3ee01ed2bbdbfebcda94054cb39b4fac5f06a3bd","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c":["c44cc06c26e456fe9c215072b79fce30babe3975","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d8d1f2c78f560980e5822db6905bb3b2f52fdbe5"],"d8d1f2c78f560980e5822db6905bb3b2f52fdbe5":["432e578be72da02cfde62dcc7fb4fa8620bc85fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}