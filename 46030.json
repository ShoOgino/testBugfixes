{"path":"lucene/src/java/org/apache/lucene/util/fst/BytesRefFSTEnum#seekExact(BytesRef).mjava","commits":[{"id":"fd9cc9d77712aba3662f24632df7539ab75e3667","date":1309095238,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/BytesRefFSTEnum#seekExact(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Seeks to exactly this term, returning null if the term\n   *  doesn't exist.  This is faster than using {@link\n   *  #seekFloor} or {@link #seekCeil} because it\n   *  short-circuits as soon the match is not found. */\n  public InputOutput<T> seekExact(BytesRef target) throws IOException {\n    this.target = target;\n    targetLength = target.length;\n    if (super.doSeekExact()) {\n      assert upto == 1+target.length;\n      return setResult();\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/BytesRefFSTEnum#seekExact(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Seeks to exactly this term, returning null if the term\n   *  doesn't exist.  This is faster than using {@link\n   *  #seekFloor} or {@link #seekCeil} because it\n   *  short-circuits as soon the match is not found. */\n  public InputOutput<T> seekExact(BytesRef target) throws IOException {\n    this.target = target;\n    targetLength = target.length;\n    if (super.doSeekExact()) {\n      assert upto == 1+target.length;\n      return setResult();\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/BytesRefFSTEnum#seekExact(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Seeks to exactly this term, returning null if the term\n   *  doesn't exist.  This is faster than using {@link\n   *  #seekFloor} or {@link #seekCeil} because it\n   *  short-circuits as soon the match is not found. */\n  public InputOutput<T> seekExact(BytesRef target) throws IOException {\n    this.target = target;\n    targetLength = target.length;\n    if (super.doSeekExact()) {\n      assert upto == 1+target.length;\n      return setResult();\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/BytesRefFSTEnum#seekExact(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/BytesRefFSTEnum#seekExact(BytesRef).mjava","sourceNew":"  /** Seeks to exactly this term, returning null if the term\n   *  doesn't exist.  This is faster than using {@link\n   *  #seekFloor} or {@link #seekCeil} because it\n   *  short-circuits as soon the match is not found. */\n  public InputOutput<T> seekExact(BytesRef target) throws IOException {\n    this.target = target;\n    targetLength = target.length;\n    if (super.doSeekExact()) {\n      assert upto == 1+target.length;\n      return setResult();\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /** Seeks to exactly this term, returning null if the term\n   *  doesn't exist.  This is faster than using {@link\n   *  #seekFloor} or {@link #seekCeil} because it\n   *  short-circuits as soon the match is not found. */\n  public InputOutput<T> seekExact(BytesRef target) throws IOException {\n    this.target = target;\n    targetLength = target.length;\n    if (super.doSeekExact()) {\n      assert upto == 1+target.length;\n      return setResult();\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fd9cc9d77712aba3662f24632df7539ab75e3667"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2553b00f699380c64959ccb27991289aae87be2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fd9cc9d77712aba3662f24632df7539ab75e3667"],"fd9cc9d77712aba3662f24632df7539ab75e3667":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fd9cc9d77712aba3662f24632df7539ab75e3667"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2553b00f699380c64959ccb27991289aae87be2e","fd9cc9d77712aba3662f24632df7539ab75e3667","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"2553b00f699380c64959ccb27991289aae87be2e":[],"fd9cc9d77712aba3662f24632df7539ab75e3667":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}