{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicAnalyzer#setMaxTokenLength(int).mjava","commits":[{"id":"683d3f90dda2bbb999c3ce855706d74563a53680","date":1285654576,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicAnalyzer#setMaxTokenLength(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Set maximum allowed token length.  If a token is seen\n   * that exceeds this length then it is discarded.  This\n   * setting only takes effect the next time tokenStream or\n   * reusableTokenStream is called.\n   */\n  public void setMaxTokenLength(int length) {\n    maxTokenLength = length;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicAnalyzer#setMaxTokenLength(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Set maximum allowed token length.  If a token is seen\n   * that exceeds this length then it is discarded.  This\n   * setting only takes effect the next time tokenStream or\n   * reusableTokenStream is called.\n   */\n  public void setMaxTokenLength(int length) {\n    maxTokenLength = length;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"69e043c521d4e8db770cc140c63f5ef51f03426a","date":1317187614,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicAnalyzer#setMaxTokenLength(int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicAnalyzer#setMaxTokenLength(int).mjava","sourceNew":"  /**\n   * Set maximum allowed token length.  If a token is seen\n   * that exceeds this length then it is discarded.  This\n   * setting only takes effect the next time tokenStream or\n   * tokenStream is called.\n   */\n  public void setMaxTokenLength(int length) {\n    maxTokenLength = length;\n  }\n\n","sourceOld":"  /**\n   * Set maximum allowed token length.  If a token is seen\n   * that exceeds this length then it is discarded.  This\n   * setting only takes effect the next time tokenStream or\n   * reusableTokenStream is called.\n   */\n  public void setMaxTokenLength(int length) {\n    maxTokenLength = length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicAnalyzer#setMaxTokenLength(int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicAnalyzer#setMaxTokenLength(int).mjava","sourceNew":"  /**\n   * Set maximum allowed token length.  If a token is seen\n   * that exceeds this length then it is discarded.  This\n   * setting only takes effect the next time tokenStream or\n   * tokenStream is called.\n   */\n  public void setMaxTokenLength(int length) {\n    maxTokenLength = length;\n  }\n\n","sourceOld":"  /**\n   * Set maximum allowed token length.  If a token is seen\n   * that exceeds this length then it is discarded.  This\n   * setting only takes effect the next time tokenStream or\n   * tokenStream is called.\n   */\n  public void setMaxTokenLength(int length) {\n    maxTokenLength = length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["69e043c521d4e8db770cc140c63f5ef51f03426a"],"683d3f90dda2bbb999c3ce855706d74563a53680":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","683d3f90dda2bbb999c3ce855706d74563a53680"],"69e043c521d4e8db770cc140c63f5ef51f03426a":["683d3f90dda2bbb999c3ce855706d74563a53680"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"683d3f90dda2bbb999c3ce855706d74563a53680":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","69e043c521d4e8db770cc140c63f5ef51f03426a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["683d3f90dda2bbb999c3ce855706d74563a53680","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"69e043c521d4e8db770cc140c63f5ef51f03426a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}