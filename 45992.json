{"path":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/blocktree/Lucene40SegmentTermsEnum#Lucene40SegmentTermsEnum(Lucene40FieldReader).mjava","commits":[{"id":"0628077afea69a2955260949478afabab8e500d8","date":1413915332,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/blocktree/Lucene40SegmentTermsEnum#Lucene40SegmentTermsEnum(Lucene40FieldReader).mjava","pathOld":"/dev/null","sourceNew":"  public Lucene40SegmentTermsEnum(Lucene40FieldReader fr) throws IOException {\n    this.fr = fr;\n\n    // if (DEBUG) {\n    //   System.out.println(\"BTTR.init seg=\" + fr.parent.segment);\n    // }\n    stack = new Lucene40SegmentTermsEnumFrame[0];\n        \n    // Used to hold seek by TermState, or cached seek\n    staticFrame = new Lucene40SegmentTermsEnumFrame(this, -1);\n\n    if (fr.index == null) {\n      fstReader = null;\n    } else {\n      fstReader = fr.index.getBytesReader();\n    }\n\n    // Init w/ root block; don't use index since it may\n    // not (and need not) have been loaded\n    for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n      arcs[arcIdx] = new FST.Arc<>();\n    }\n\n    currentFrame = staticFrame;\n    final FST.Arc<BytesRef> arc;\n    if (fr.index != null) {\n      arc = fr.index.getFirstArc(arcs[0]);\n      // Empty string prefix must have an output in the index!\n      assert arc.isFinal();\n    } else {\n      arc = null;\n    }\n    //currentFrame = pushFrame(arc, rootCode, 0);\n    //currentFrame.loadBlock();\n    validIndexPrefix = 0;\n    // if (DEBUG) {\n    //   System.out.println(\"init frame state \" + currentFrame.ord);\n    //   printSeekState();\n    // }\n\n    //System.out.println();\n    // computeBlockStats().print(System.out);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/blocktree/Lucene40SegmentTermsEnum#Lucene40SegmentTermsEnum(Lucene40FieldReader).mjava","pathOld":"/dev/null","sourceNew":"  public Lucene40SegmentTermsEnum(Lucene40FieldReader fr) throws IOException {\n    this.fr = fr;\n\n    // if (DEBUG) {\n    //   System.out.println(\"BTTR.init seg=\" + fr.parent.segment);\n    // }\n    stack = new Lucene40SegmentTermsEnumFrame[0];\n        \n    // Used to hold seek by TermState, or cached seek\n    staticFrame = new Lucene40SegmentTermsEnumFrame(this, -1);\n\n    if (fr.index == null) {\n      fstReader = null;\n    } else {\n      fstReader = fr.index.getBytesReader();\n    }\n\n    // Init w/ root block; don't use index since it may\n    // not (and need not) have been loaded\n    for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n      arcs[arcIdx] = new FST.Arc<>();\n    }\n\n    currentFrame = staticFrame;\n    final FST.Arc<BytesRef> arc;\n    if (fr.index != null) {\n      arc = fr.index.getFirstArc(arcs[0]);\n      // Empty string prefix must have an output in the index!\n      assert arc.isFinal();\n    } else {\n      arc = null;\n    }\n    //currentFrame = pushFrame(arc, rootCode, 0);\n    //currentFrame.loadBlock();\n    validIndexPrefix = 0;\n    // if (DEBUG) {\n    //   System.out.println(\"init frame state \" + currentFrame.ord);\n    //   printSeekState();\n    // }\n\n    //System.out.println();\n    // computeBlockStats().print(System.out);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/blocktree/Lucene40SegmentTermsEnum#Lucene40SegmentTermsEnum(Lucene40FieldReader).mjava","sourceNew":null,"sourceOld":"  public Lucene40SegmentTermsEnum(Lucene40FieldReader fr) throws IOException {\n    this.fr = fr;\n\n    // if (DEBUG) {\n    //   System.out.println(\"BTTR.init seg=\" + fr.parent.segment);\n    // }\n    stack = new Lucene40SegmentTermsEnumFrame[0];\n        \n    // Used to hold seek by TermState, or cached seek\n    staticFrame = new Lucene40SegmentTermsEnumFrame(this, -1);\n\n    if (fr.index == null) {\n      fstReader = null;\n    } else {\n      fstReader = fr.index.getBytesReader();\n    }\n\n    // Init w/ root block; don't use index since it may\n    // not (and need not) have been loaded\n    for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n      arcs[arcIdx] = new FST.Arc<>();\n    }\n\n    currentFrame = staticFrame;\n    final FST.Arc<BytesRef> arc;\n    if (fr.index != null) {\n      arc = fr.index.getFirstArc(arcs[0]);\n      // Empty string prefix must have an output in the index!\n      assert arc.isFinal();\n    } else {\n      arc = null;\n    }\n    //currentFrame = pushFrame(arc, rootCode, 0);\n    //currentFrame.loadBlock();\n    validIndexPrefix = 0;\n    // if (DEBUG) {\n    //   System.out.println(\"init frame state \" + currentFrame.ord);\n    //   printSeekState();\n    // }\n\n    //System.out.println();\n    // computeBlockStats().print(System.out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0628077afea69a2955260949478afabab8e500d8"],"0628077afea69a2955260949478afabab8e500d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238","0628077afea69a2955260949478afabab8e500d8"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"0628077afea69a2955260949478afabab8e500d8":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}