{"path":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource#constant(long).mjava","commits":[{"id":"7abbd4266bb36de7f2181eb6d9f3df3ea45ff382","date":1483789945,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource#constant(long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a LongValuesSource that always returns a constant value\n   */\n  public static LongValuesSource constant(long value) {\n    return new LongValuesSource() {\n      @Override\n      public LongValues getValues(LeafReaderContext ctx, DoubleValues scores) throws IOException {\n        return new LongValues() {\n          @Override\n          public long longValue() throws IOException {\n            return value;\n          }\n\n          @Override\n          public boolean advanceExact(int doc) throws IOException {\n            return true;\n          }\n        };\n      }\n\n      @Override\n      public boolean needsScores() {\n        return false;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource#constant(long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a LongValuesSource that always returns a constant value\n   */\n  public static LongValuesSource constant(long value) {\n    return new LongValuesSource() {\n      @Override\n      public LongValues getValues(LeafReaderContext ctx, DoubleValues scores) throws IOException {\n        return new LongValues() {\n          @Override\n          public long longValue() throws IOException {\n            return value;\n          }\n\n          @Override\n          public boolean advanceExact(int doc) throws IOException {\n            return true;\n          }\n        };\n      }\n\n      @Override\n      public boolean needsScores() {\n        return false;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41ea72350b903b90cb4fda2a5adbce31aa00c074","date":1498575219,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource#constant(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource#constant(long).mjava","sourceNew":"  /**\n   * Creates a LongValuesSource that always returns a constant value\n   */\n  public static LongValuesSource constant(long value) {\n    return new ConstantLongValuesSource(value);\n  }\n\n","sourceOld":"  /**\n   * Creates a LongValuesSource that always returns a constant value\n   */\n  public static LongValuesSource constant(long value) {\n    return new LongValuesSource() {\n      @Override\n      public LongValues getValues(LeafReaderContext ctx, DoubleValues scores) throws IOException {\n        return new LongValues() {\n          @Override\n          public long longValue() throws IOException {\n            return value;\n          }\n\n          @Override\n          public boolean advanceExact(int doc) throws IOException {\n            return true;\n          }\n        };\n      }\n\n      @Override\n      public boolean needsScores() {\n        return false;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98f11c416d30e556e0004a9a84960702d12d35b1","date":1498628359,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource#constant(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource#constant(long).mjava","sourceNew":"  /**\n   * Creates a LongValuesSource that always returns a constant value\n   */\n  public static LongValuesSource constant(long value) {\n    return new ConstantLongValuesSource(value);\n  }\n\n","sourceOld":"  /**\n   * Creates a LongValuesSource that always returns a constant value\n   */\n  public static LongValuesSource constant(long value) {\n    return new LongValuesSource() {\n      @Override\n      public LongValues getValues(LeafReaderContext ctx, DoubleValues scores) throws IOException {\n        return new LongValues() {\n          @Override\n          public long longValue() throws IOException {\n            return value;\n          }\n\n          @Override\n          public boolean advanceExact(int doc) throws IOException {\n            return true;\n          }\n        };\n      }\n\n      @Override\n      public boolean needsScores() {\n        return false;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource#constant(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource#constant(long).mjava","sourceNew":"  /**\n   * Creates a LongValuesSource that always returns a constant value\n   */\n  public static LongValuesSource constant(long value) {\n    return new ConstantLongValuesSource(value);\n  }\n\n","sourceOld":"  /**\n   * Creates a LongValuesSource that always returns a constant value\n   */\n  public static LongValuesSource constant(long value) {\n    return new LongValuesSource() {\n      @Override\n      public LongValues getValues(LeafReaderContext ctx, DoubleValues scores) throws IOException {\n        return new LongValues() {\n          @Override\n          public long longValue() throws IOException {\n            return value;\n          }\n\n          @Override\n          public boolean advanceExact(int doc) throws IOException {\n            return true;\n          }\n        };\n      }\n\n      @Override\n      public boolean needsScores() {\n        return false;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"41ea72350b903b90cb4fda2a5adbce31aa00c074":["7abbd4266bb36de7f2181eb6d9f3df3ea45ff382"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7abbd4266bb36de7f2181eb6d9f3df3ea45ff382"],"7abbd4266bb36de7f2181eb6d9f3df3ea45ff382":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["7abbd4266bb36de7f2181eb6d9f3df3ea45ff382","41ea72350b903b90cb4fda2a5adbce31aa00c074"],"98f11c416d30e556e0004a9a84960702d12d35b1":["7abbd4266bb36de7f2181eb6d9f3df3ea45ff382","41ea72350b903b90cb4fda2a5adbce31aa00c074"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"41ea72350b903b90cb4fda2a5adbce31aa00c074":["28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","7abbd4266bb36de7f2181eb6d9f3df3ea45ff382"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"7abbd4266bb36de7f2181eb6d9f3df3ea45ff382":["41ea72350b903b90cb4fda2a5adbce31aa00c074","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"98f11c416d30e556e0004a9a84960702d12d35b1":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","98f11c416d30e556e0004a9a84960702d12d35b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}