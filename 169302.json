{"path":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperation.Packed64SingleBlockBulkOperation1#get(long[],int,long[],int,int).mjava","commits":[{"id":"55110eb60c5105294fc2ae7912d82b750865aa58","date":1341389822,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperation.Packed64SingleBlockBulkOperation1#get(long[],int,long[],int,int).mjava","pathOld":"/dev/null","sourceNew":"    public void get(long[] blocks, int bi, long[] values, int vi, int iterations) {\n      assert bi + iterations * blocks() <= blocks.length;\n      assert vi + iterations * values() <= values.length;\n      for (int i = 0; i < iterations; ++i) {\n        final long block = blocks[bi++];\n        values[vi++] = block & 1L;\n        values[vi++] = (block >>> 1) & 1L;\n        values[vi++] = (block >>> 2) & 1L;\n        values[vi++] = (block >>> 3) & 1L;\n        values[vi++] = (block >>> 4) & 1L;\n        values[vi++] = (block >>> 5) & 1L;\n        values[vi++] = (block >>> 6) & 1L;\n        values[vi++] = (block >>> 7) & 1L;\n        values[vi++] = (block >>> 8) & 1L;\n        values[vi++] = (block >>> 9) & 1L;\n        values[vi++] = (block >>> 10) & 1L;\n        values[vi++] = (block >>> 11) & 1L;\n        values[vi++] = (block >>> 12) & 1L;\n        values[vi++] = (block >>> 13) & 1L;\n        values[vi++] = (block >>> 14) & 1L;\n        values[vi++] = (block >>> 15) & 1L;\n        values[vi++] = (block >>> 16) & 1L;\n        values[vi++] = (block >>> 17) & 1L;\n        values[vi++] = (block >>> 18) & 1L;\n        values[vi++] = (block >>> 19) & 1L;\n        values[vi++] = (block >>> 20) & 1L;\n        values[vi++] = (block >>> 21) & 1L;\n        values[vi++] = (block >>> 22) & 1L;\n        values[vi++] = (block >>> 23) & 1L;\n        values[vi++] = (block >>> 24) & 1L;\n        values[vi++] = (block >>> 25) & 1L;\n        values[vi++] = (block >>> 26) & 1L;\n        values[vi++] = (block >>> 27) & 1L;\n        values[vi++] = (block >>> 28) & 1L;\n        values[vi++] = (block >>> 29) & 1L;\n        values[vi++] = (block >>> 30) & 1L;\n        values[vi++] = (block >>> 31) & 1L;\n        values[vi++] = (block >>> 32) & 1L;\n        values[vi++] = (block >>> 33) & 1L;\n        values[vi++] = (block >>> 34) & 1L;\n        values[vi++] = (block >>> 35) & 1L;\n        values[vi++] = (block >>> 36) & 1L;\n        values[vi++] = (block >>> 37) & 1L;\n        values[vi++] = (block >>> 38) & 1L;\n        values[vi++] = (block >>> 39) & 1L;\n        values[vi++] = (block >>> 40) & 1L;\n        values[vi++] = (block >>> 41) & 1L;\n        values[vi++] = (block >>> 42) & 1L;\n        values[vi++] = (block >>> 43) & 1L;\n        values[vi++] = (block >>> 44) & 1L;\n        values[vi++] = (block >>> 45) & 1L;\n        values[vi++] = (block >>> 46) & 1L;\n        values[vi++] = (block >>> 47) & 1L;\n        values[vi++] = (block >>> 48) & 1L;\n        values[vi++] = (block >>> 49) & 1L;\n        values[vi++] = (block >>> 50) & 1L;\n        values[vi++] = (block >>> 51) & 1L;\n        values[vi++] = (block >>> 52) & 1L;\n        values[vi++] = (block >>> 53) & 1L;\n        values[vi++] = (block >>> 54) & 1L;\n        values[vi++] = (block >>> 55) & 1L;\n        values[vi++] = (block >>> 56) & 1L;\n        values[vi++] = (block >>> 57) & 1L;\n        values[vi++] = (block >>> 58) & 1L;\n        values[vi++] = (block >>> 59) & 1L;\n        values[vi++] = (block >>> 60) & 1L;\n        values[vi++] = (block >>> 61) & 1L;\n        values[vi++] = (block >>> 62) & 1L;\n        values[vi++] = block >>> 63;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperation.Packed64SingleBlockBulkOperation1#get(long[],int,long[],int,int).mjava","pathOld":"/dev/null","sourceNew":"    public void get(long[] blocks, int bi, long[] values, int vi, int iterations) {\n      assert bi + iterations * blocks() <= blocks.length;\n      assert vi + iterations * values() <= values.length;\n      for (int i = 0; i < iterations; ++i) {\n        final long block = blocks[bi++];\n        values[vi++] = block & 1L;\n        values[vi++] = (block >>> 1) & 1L;\n        values[vi++] = (block >>> 2) & 1L;\n        values[vi++] = (block >>> 3) & 1L;\n        values[vi++] = (block >>> 4) & 1L;\n        values[vi++] = (block >>> 5) & 1L;\n        values[vi++] = (block >>> 6) & 1L;\n        values[vi++] = (block >>> 7) & 1L;\n        values[vi++] = (block >>> 8) & 1L;\n        values[vi++] = (block >>> 9) & 1L;\n        values[vi++] = (block >>> 10) & 1L;\n        values[vi++] = (block >>> 11) & 1L;\n        values[vi++] = (block >>> 12) & 1L;\n        values[vi++] = (block >>> 13) & 1L;\n        values[vi++] = (block >>> 14) & 1L;\n        values[vi++] = (block >>> 15) & 1L;\n        values[vi++] = (block >>> 16) & 1L;\n        values[vi++] = (block >>> 17) & 1L;\n        values[vi++] = (block >>> 18) & 1L;\n        values[vi++] = (block >>> 19) & 1L;\n        values[vi++] = (block >>> 20) & 1L;\n        values[vi++] = (block >>> 21) & 1L;\n        values[vi++] = (block >>> 22) & 1L;\n        values[vi++] = (block >>> 23) & 1L;\n        values[vi++] = (block >>> 24) & 1L;\n        values[vi++] = (block >>> 25) & 1L;\n        values[vi++] = (block >>> 26) & 1L;\n        values[vi++] = (block >>> 27) & 1L;\n        values[vi++] = (block >>> 28) & 1L;\n        values[vi++] = (block >>> 29) & 1L;\n        values[vi++] = (block >>> 30) & 1L;\n        values[vi++] = (block >>> 31) & 1L;\n        values[vi++] = (block >>> 32) & 1L;\n        values[vi++] = (block >>> 33) & 1L;\n        values[vi++] = (block >>> 34) & 1L;\n        values[vi++] = (block >>> 35) & 1L;\n        values[vi++] = (block >>> 36) & 1L;\n        values[vi++] = (block >>> 37) & 1L;\n        values[vi++] = (block >>> 38) & 1L;\n        values[vi++] = (block >>> 39) & 1L;\n        values[vi++] = (block >>> 40) & 1L;\n        values[vi++] = (block >>> 41) & 1L;\n        values[vi++] = (block >>> 42) & 1L;\n        values[vi++] = (block >>> 43) & 1L;\n        values[vi++] = (block >>> 44) & 1L;\n        values[vi++] = (block >>> 45) & 1L;\n        values[vi++] = (block >>> 46) & 1L;\n        values[vi++] = (block >>> 47) & 1L;\n        values[vi++] = (block >>> 48) & 1L;\n        values[vi++] = (block >>> 49) & 1L;\n        values[vi++] = (block >>> 50) & 1L;\n        values[vi++] = (block >>> 51) & 1L;\n        values[vi++] = (block >>> 52) & 1L;\n        values[vi++] = (block >>> 53) & 1L;\n        values[vi++] = (block >>> 54) & 1L;\n        values[vi++] = (block >>> 55) & 1L;\n        values[vi++] = (block >>> 56) & 1L;\n        values[vi++] = (block >>> 57) & 1L;\n        values[vi++] = (block >>> 58) & 1L;\n        values[vi++] = (block >>> 59) & 1L;\n        values[vi++] = (block >>> 60) & 1L;\n        values[vi++] = (block >>> 61) & 1L;\n        values[vi++] = (block >>> 62) & 1L;\n        values[vi++] = block >>> 63;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"035130b0c342f404c027af8c8870587c3741cb1e","date":1342898805,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperation.Packed64SingleBlockBulkOperation1#get(long[],int,long[],int,int).mjava","sourceNew":null,"sourceOld":"    public void get(long[] blocks, int bi, long[] values, int vi, int iterations) {\n      assert bi + iterations * blocks() <= blocks.length;\n      assert vi + iterations * values() <= values.length;\n      for (int i = 0; i < iterations; ++i) {\n        final long block = blocks[bi++];\n        values[vi++] = block & 1L;\n        values[vi++] = (block >>> 1) & 1L;\n        values[vi++] = (block >>> 2) & 1L;\n        values[vi++] = (block >>> 3) & 1L;\n        values[vi++] = (block >>> 4) & 1L;\n        values[vi++] = (block >>> 5) & 1L;\n        values[vi++] = (block >>> 6) & 1L;\n        values[vi++] = (block >>> 7) & 1L;\n        values[vi++] = (block >>> 8) & 1L;\n        values[vi++] = (block >>> 9) & 1L;\n        values[vi++] = (block >>> 10) & 1L;\n        values[vi++] = (block >>> 11) & 1L;\n        values[vi++] = (block >>> 12) & 1L;\n        values[vi++] = (block >>> 13) & 1L;\n        values[vi++] = (block >>> 14) & 1L;\n        values[vi++] = (block >>> 15) & 1L;\n        values[vi++] = (block >>> 16) & 1L;\n        values[vi++] = (block >>> 17) & 1L;\n        values[vi++] = (block >>> 18) & 1L;\n        values[vi++] = (block >>> 19) & 1L;\n        values[vi++] = (block >>> 20) & 1L;\n        values[vi++] = (block >>> 21) & 1L;\n        values[vi++] = (block >>> 22) & 1L;\n        values[vi++] = (block >>> 23) & 1L;\n        values[vi++] = (block >>> 24) & 1L;\n        values[vi++] = (block >>> 25) & 1L;\n        values[vi++] = (block >>> 26) & 1L;\n        values[vi++] = (block >>> 27) & 1L;\n        values[vi++] = (block >>> 28) & 1L;\n        values[vi++] = (block >>> 29) & 1L;\n        values[vi++] = (block >>> 30) & 1L;\n        values[vi++] = (block >>> 31) & 1L;\n        values[vi++] = (block >>> 32) & 1L;\n        values[vi++] = (block >>> 33) & 1L;\n        values[vi++] = (block >>> 34) & 1L;\n        values[vi++] = (block >>> 35) & 1L;\n        values[vi++] = (block >>> 36) & 1L;\n        values[vi++] = (block >>> 37) & 1L;\n        values[vi++] = (block >>> 38) & 1L;\n        values[vi++] = (block >>> 39) & 1L;\n        values[vi++] = (block >>> 40) & 1L;\n        values[vi++] = (block >>> 41) & 1L;\n        values[vi++] = (block >>> 42) & 1L;\n        values[vi++] = (block >>> 43) & 1L;\n        values[vi++] = (block >>> 44) & 1L;\n        values[vi++] = (block >>> 45) & 1L;\n        values[vi++] = (block >>> 46) & 1L;\n        values[vi++] = (block >>> 47) & 1L;\n        values[vi++] = (block >>> 48) & 1L;\n        values[vi++] = (block >>> 49) & 1L;\n        values[vi++] = (block >>> 50) & 1L;\n        values[vi++] = (block >>> 51) & 1L;\n        values[vi++] = (block >>> 52) & 1L;\n        values[vi++] = (block >>> 53) & 1L;\n        values[vi++] = (block >>> 54) & 1L;\n        values[vi++] = (block >>> 55) & 1L;\n        values[vi++] = (block >>> 56) & 1L;\n        values[vi++] = (block >>> 57) & 1L;\n        values[vi++] = (block >>> 58) & 1L;\n        values[vi++] = (block >>> 59) & 1L;\n        values[vi++] = (block >>> 60) & 1L;\n        values[vi++] = (block >>> 61) & 1L;\n        values[vi++] = (block >>> 62) & 1L;\n        values[vi++] = block >>> 63;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8615860cb50aefb8eebca1d1b3893dbe21cf126","date":1345550448,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperation.Packed64SingleBlockBulkOperation1#get(long[],int,long[],int,int).mjava","sourceNew":null,"sourceOld":"    public void get(long[] blocks, int bi, long[] values, int vi, int iterations) {\n      assert bi + iterations * blocks() <= blocks.length;\n      assert vi + iterations * values() <= values.length;\n      for (int i = 0; i < iterations; ++i) {\n        final long block = blocks[bi++];\n        values[vi++] = block & 1L;\n        values[vi++] = (block >>> 1) & 1L;\n        values[vi++] = (block >>> 2) & 1L;\n        values[vi++] = (block >>> 3) & 1L;\n        values[vi++] = (block >>> 4) & 1L;\n        values[vi++] = (block >>> 5) & 1L;\n        values[vi++] = (block >>> 6) & 1L;\n        values[vi++] = (block >>> 7) & 1L;\n        values[vi++] = (block >>> 8) & 1L;\n        values[vi++] = (block >>> 9) & 1L;\n        values[vi++] = (block >>> 10) & 1L;\n        values[vi++] = (block >>> 11) & 1L;\n        values[vi++] = (block >>> 12) & 1L;\n        values[vi++] = (block >>> 13) & 1L;\n        values[vi++] = (block >>> 14) & 1L;\n        values[vi++] = (block >>> 15) & 1L;\n        values[vi++] = (block >>> 16) & 1L;\n        values[vi++] = (block >>> 17) & 1L;\n        values[vi++] = (block >>> 18) & 1L;\n        values[vi++] = (block >>> 19) & 1L;\n        values[vi++] = (block >>> 20) & 1L;\n        values[vi++] = (block >>> 21) & 1L;\n        values[vi++] = (block >>> 22) & 1L;\n        values[vi++] = (block >>> 23) & 1L;\n        values[vi++] = (block >>> 24) & 1L;\n        values[vi++] = (block >>> 25) & 1L;\n        values[vi++] = (block >>> 26) & 1L;\n        values[vi++] = (block >>> 27) & 1L;\n        values[vi++] = (block >>> 28) & 1L;\n        values[vi++] = (block >>> 29) & 1L;\n        values[vi++] = (block >>> 30) & 1L;\n        values[vi++] = (block >>> 31) & 1L;\n        values[vi++] = (block >>> 32) & 1L;\n        values[vi++] = (block >>> 33) & 1L;\n        values[vi++] = (block >>> 34) & 1L;\n        values[vi++] = (block >>> 35) & 1L;\n        values[vi++] = (block >>> 36) & 1L;\n        values[vi++] = (block >>> 37) & 1L;\n        values[vi++] = (block >>> 38) & 1L;\n        values[vi++] = (block >>> 39) & 1L;\n        values[vi++] = (block >>> 40) & 1L;\n        values[vi++] = (block >>> 41) & 1L;\n        values[vi++] = (block >>> 42) & 1L;\n        values[vi++] = (block >>> 43) & 1L;\n        values[vi++] = (block >>> 44) & 1L;\n        values[vi++] = (block >>> 45) & 1L;\n        values[vi++] = (block >>> 46) & 1L;\n        values[vi++] = (block >>> 47) & 1L;\n        values[vi++] = (block >>> 48) & 1L;\n        values[vi++] = (block >>> 49) & 1L;\n        values[vi++] = (block >>> 50) & 1L;\n        values[vi++] = (block >>> 51) & 1L;\n        values[vi++] = (block >>> 52) & 1L;\n        values[vi++] = (block >>> 53) & 1L;\n        values[vi++] = (block >>> 54) & 1L;\n        values[vi++] = (block >>> 55) & 1L;\n        values[vi++] = (block >>> 56) & 1L;\n        values[vi++] = (block >>> 57) & 1L;\n        values[vi++] = (block >>> 58) & 1L;\n        values[vi++] = (block >>> 59) & 1L;\n        values[vi++] = (block >>> 60) & 1L;\n        values[vi++] = (block >>> 61) & 1L;\n        values[vi++] = (block >>> 62) & 1L;\n        values[vi++] = block >>> 63;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperation.Packed64SingleBlockBulkOperation1#get(long[],int,long[],int,int).mjava","sourceNew":null,"sourceOld":"    public void get(long[] blocks, int bi, long[] values, int vi, int iterations) {\n      assert bi + iterations * blocks() <= blocks.length;\n      assert vi + iterations * values() <= values.length;\n      for (int i = 0; i < iterations; ++i) {\n        final long block = blocks[bi++];\n        values[vi++] = block & 1L;\n        values[vi++] = (block >>> 1) & 1L;\n        values[vi++] = (block >>> 2) & 1L;\n        values[vi++] = (block >>> 3) & 1L;\n        values[vi++] = (block >>> 4) & 1L;\n        values[vi++] = (block >>> 5) & 1L;\n        values[vi++] = (block >>> 6) & 1L;\n        values[vi++] = (block >>> 7) & 1L;\n        values[vi++] = (block >>> 8) & 1L;\n        values[vi++] = (block >>> 9) & 1L;\n        values[vi++] = (block >>> 10) & 1L;\n        values[vi++] = (block >>> 11) & 1L;\n        values[vi++] = (block >>> 12) & 1L;\n        values[vi++] = (block >>> 13) & 1L;\n        values[vi++] = (block >>> 14) & 1L;\n        values[vi++] = (block >>> 15) & 1L;\n        values[vi++] = (block >>> 16) & 1L;\n        values[vi++] = (block >>> 17) & 1L;\n        values[vi++] = (block >>> 18) & 1L;\n        values[vi++] = (block >>> 19) & 1L;\n        values[vi++] = (block >>> 20) & 1L;\n        values[vi++] = (block >>> 21) & 1L;\n        values[vi++] = (block >>> 22) & 1L;\n        values[vi++] = (block >>> 23) & 1L;\n        values[vi++] = (block >>> 24) & 1L;\n        values[vi++] = (block >>> 25) & 1L;\n        values[vi++] = (block >>> 26) & 1L;\n        values[vi++] = (block >>> 27) & 1L;\n        values[vi++] = (block >>> 28) & 1L;\n        values[vi++] = (block >>> 29) & 1L;\n        values[vi++] = (block >>> 30) & 1L;\n        values[vi++] = (block >>> 31) & 1L;\n        values[vi++] = (block >>> 32) & 1L;\n        values[vi++] = (block >>> 33) & 1L;\n        values[vi++] = (block >>> 34) & 1L;\n        values[vi++] = (block >>> 35) & 1L;\n        values[vi++] = (block >>> 36) & 1L;\n        values[vi++] = (block >>> 37) & 1L;\n        values[vi++] = (block >>> 38) & 1L;\n        values[vi++] = (block >>> 39) & 1L;\n        values[vi++] = (block >>> 40) & 1L;\n        values[vi++] = (block >>> 41) & 1L;\n        values[vi++] = (block >>> 42) & 1L;\n        values[vi++] = (block >>> 43) & 1L;\n        values[vi++] = (block >>> 44) & 1L;\n        values[vi++] = (block >>> 45) & 1L;\n        values[vi++] = (block >>> 46) & 1L;\n        values[vi++] = (block >>> 47) & 1L;\n        values[vi++] = (block >>> 48) & 1L;\n        values[vi++] = (block >>> 49) & 1L;\n        values[vi++] = (block >>> 50) & 1L;\n        values[vi++] = (block >>> 51) & 1L;\n        values[vi++] = (block >>> 52) & 1L;\n        values[vi++] = (block >>> 53) & 1L;\n        values[vi++] = (block >>> 54) & 1L;\n        values[vi++] = (block >>> 55) & 1L;\n        values[vi++] = (block >>> 56) & 1L;\n        values[vi++] = (block >>> 57) & 1L;\n        values[vi++] = (block >>> 58) & 1L;\n        values[vi++] = (block >>> 59) & 1L;\n        values[vi++] = (block >>> 60) & 1L;\n        values[vi++] = (block >>> 61) & 1L;\n        values[vi++] = (block >>> 62) & 1L;\n        values[vi++] = block >>> 63;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["55110eb60c5105294fc2ae7912d82b750865aa58","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"55110eb60c5105294fc2ae7912d82b750865aa58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","55110eb60c5105294fc2ae7912d82b750865aa58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["55110eb60c5105294fc2ae7912d82b750865aa58","035130b0c342f404c027af8c8870587c3741cb1e"],"035130b0c342f404c027af8c8870587c3741cb1e":["fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"55110eb60c5105294fc2ae7912d82b750865aa58":["001b25b42373b22a52f399dbf072f1224632e8e6","fe33227f6805edab2036cbb80645cc4e2d1fa424","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["035130b0c342f404c027af8c8870587c3741cb1e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["55110eb60c5105294fc2ae7912d82b750865aa58","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"035130b0c342f404c027af8c8870587c3741cb1e":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}