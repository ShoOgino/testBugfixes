{"path":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#[T-extends-PlatformManagedObject]_addMXBeanMetrics(T,String[],String,BiConsumer[String,Metric]).mjava","commits":[{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#[T-extends-PlatformManagedObject]_addMXBeanMetrics(T,String[],String,BiConsumer[String,Metric]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a set of metrics (gauges) that correspond to available bean properties for the provided MXBean.\n   * @param obj an instance of MXBean\n   * @param interfaces interfaces that it may implement. Each interface will be tried in turn, and only\n   *                   if it exists and if it contains unique properties then they will be added as metrics.\n   * @param prefix optional prefix for metric names\n   * @param consumer consumer for created names and metrics\n   * @param <T> formal type\n   */\n  public static <T extends PlatformManagedObject> void addMXBeanMetrics(T obj, String[] interfaces,\n      String prefix, BiConsumer<String, Metric> consumer) {\n    for (String clazz : interfaces) {\n      try {\n        final Class<? extends PlatformManagedObject> intf = Class.forName(clazz)\n            .asSubclass(PlatformManagedObject.class);\n        MetricUtils.addMXBeanMetrics(obj, intf, null, consumer);\n      } catch (ClassNotFoundException e) {\n        // ignore\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#[T-extends-PlatformManagedObject]_addMXBeanMetrics(T,String[],String,BiConsumer[String,Metric]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a set of metrics (gauges) that correspond to available bean properties for the provided MXBean.\n   * @param obj an instance of MXBean\n   * @param interfaces interfaces that it may implement. Each interface will be tried in turn, and only\n   *                   if it exists and if it contains unique properties then they will be added as metrics.\n   * @param prefix optional prefix for metric names\n   * @param consumer consumer for created names and metrics\n   * @param <T> formal type\n   */\n  public static <T extends PlatformManagedObject> void addMXBeanMetrics(T obj, String[] interfaces,\n      String prefix, BiConsumer<String, Metric> consumer) {\n    for (String clazz : interfaces) {\n      try {\n        final Class<? extends PlatformManagedObject> intf = Class.forName(clazz)\n            .asSubclass(PlatformManagedObject.class);\n        MetricUtils.addMXBeanMetrics(obj, intf, null, consumer);\n      } catch (ClassNotFoundException e) {\n        // ignore\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["816521ebaad5add9cb96bb88c577394e2938c40b"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"816521ebaad5add9cb96bb88c577394e2938c40b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}