{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/quality/QualityBenchmark#analyzeQueryResults(QualityQuery,Query,TopDocs,Judge,PrintWriter,long).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/quality/QualityBenchmark#analyzeQueryResults(QualityQuery,Query,TopDocs,Judge,PrintWriter,long).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/quality/QualityBenchmark#analyzeQueryResults(QualityQuery,Query,TopDocs,Judge,PrintWriter,long).mjava","sourceNew":"  /* Analyze/judge results for a single quality query; optionally log them. */  \n  private QualityStats analyzeQueryResults(QualityQuery qq, Query q, TopDocs td, Judge judge, PrintWriter logger, long searchTime) throws IOException {\n    QualityStats stts = new QualityStats(judge.maxRecall(qq),searchTime);\n    ScoreDoc sd[] = td.scoreDocs;\n    long t1 = System.currentTimeMillis(); // extraction of first doc name we measure also construction of doc name extractor, just in case.\n    DocNameExtractor xt = new DocNameExtractor(docNameField);\n    for (int i=0; i<sd.length; i++) {\n      String docName = xt.docName(searcher,sd[i].doc);\n      long docNameExtractTime = System.currentTimeMillis() - t1;\n      t1 = System.currentTimeMillis();\n      boolean isRelevant = judge.isRelevant(docName,qq);\n      stts.addResult(i+1,isRelevant, docNameExtractTime);\n    }\n    if (logger!=null) {\n      logger.println(qq.getQueryID()+\"  -  \"+q);\n      stts.log(qq.getQueryID()+\" Stats:\",1,logger,\"  \");\n    }\n    return stts;\n  }\n\n","sourceOld":"  /* Analyze/judge results for a single quality query; optionally log them. */  \n  private QualityStats analyzeQueryResults(QualityQuery qq, Query q, TopDocs td, Judge judge, PrintWriter logger, long searchTime) throws IOException {\n    QualityStats stts = new QualityStats(judge.maxRecall(qq),searchTime);\n    ScoreDoc sd[] = td.scoreDocs;\n    long t1 = System.currentTimeMillis(); // extraction of first doc name we measure also construction of doc name extractor, just in case.\n    DocNameExtractor xt = new DocNameExtractor(docNameField);\n    for (int i=0; i<sd.length; i++) {\n      String docName = xt.docName(searcher,sd[i].doc);\n      long docNameExtractTime = System.currentTimeMillis() - t1;\n      t1 = System.currentTimeMillis();\n      boolean isRelevant = judge.isRelevant(docName,qq);\n      stts.addResult(i+1,isRelevant, docNameExtractTime);\n    }\n    if (logger!=null) {\n      logger.println(qq.getQueryID()+\"  -  \"+q);\n      stts.log(qq.getQueryID()+\" Stats:\",1,logger,\"  \");\n    }\n    return stts;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}