{"path":"lucene/core/src/java/org/apache/lucene/util/BytesRefHash#BytesRefHash(ByteBlockPool,int,BytesStartArray).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefHash#BytesRefHash(ByteBlockPool,int,BytesStartArray).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BytesRefHash#BytesRefHash(ByteBlockPool,int,BytesStartArray).mjava","sourceNew":"  /**\n   * Creates a new {@link BytesRefHash}\n   */\n  public BytesRefHash(ByteBlockPool pool, int capacity,\n      BytesStartArray bytesStartArray) {\n    hashSize = capacity;\n    hashHalfSize = hashSize >> 1;\n    hashMask = hashSize - 1;\n    this.pool = pool;\n    ords = new int[hashSize];\n    Arrays.fill(ords, -1);\n    this.bytesStartArray = bytesStartArray;\n    bytesStart = bytesStartArray.init();\n    bytesUsed = bytesStartArray.bytesUsed() == null? Counter.newCounter() : bytesStartArray.bytesUsed();\n    bytesUsed.addAndGet(hashSize * RamUsageEstimator.NUM_BYTES_INT);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link BytesRefHash}\n   */\n  public BytesRefHash(ByteBlockPool pool, int capacity,\n      BytesStartArray bytesStartArray) {\n    hashSize = capacity;\n    hashHalfSize = hashSize >> 1;\n    hashMask = hashSize - 1;\n    this.pool = pool;\n    ords = new int[hashSize];\n    Arrays.fill(ords, -1);\n    this.bytesStartArray = bytesStartArray;\n    bytesStart = bytesStartArray.init();\n    bytesUsed = bytesStartArray.bytesUsed() == null? Counter.newCounter() : bytesStartArray.bytesUsed();\n    bytesUsed.addAndGet(hashSize * RamUsageEstimator.NUM_BYTES_INT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bbccaf0f052c2a25526a56531803c5ebac7c8f41","date":1363510731,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefHash#BytesRefHash(ByteBlockPool,int,BytesStartArray).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BytesRefHash#BytesRefHash(ByteBlockPool,int,BytesStartArray).mjava","sourceNew":"  /**\n   * Creates a new {@link BytesRefHash}\n   */\n  public BytesRefHash(ByteBlockPool pool, int capacity,\n      BytesStartArray bytesStartArray) {\n    hashSize = capacity;\n    hashHalfSize = hashSize >> 1;\n    hashMask = hashSize - 1;\n    this.pool = pool;\n    ids = new int[hashSize];\n    Arrays.fill(ids, -1);\n    this.bytesStartArray = bytesStartArray;\n    bytesStart = bytesStartArray.init();\n    bytesUsed = bytesStartArray.bytesUsed() == null? Counter.newCounter() : bytesStartArray.bytesUsed();\n    bytesUsed.addAndGet(hashSize * RamUsageEstimator.NUM_BYTES_INT);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link BytesRefHash}\n   */\n  public BytesRefHash(ByteBlockPool pool, int capacity,\n      BytesStartArray bytesStartArray) {\n    hashSize = capacity;\n    hashHalfSize = hashSize >> 1;\n    hashMask = hashSize - 1;\n    this.pool = pool;\n    ords = new int[hashSize];\n    Arrays.fill(ords, -1);\n    this.bytesStartArray = bytesStartArray;\n    bytesStart = bytesStartArray.init();\n    bytesUsed = bytesStartArray.bytesUsed() == null? Counter.newCounter() : bytesStartArray.bytesUsed();\n    bytesUsed.addAndGet(hashSize * RamUsageEstimator.NUM_BYTES_INT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefHash#BytesRefHash(ByteBlockPool,int,BytesStartArray).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BytesRefHash#BytesRefHash(ByteBlockPool,int,BytesStartArray).mjava","sourceNew":"  /**\n   * Creates a new {@link BytesRefHash}\n   */\n  public BytesRefHash(ByteBlockPool pool, int capacity, BytesStartArray bytesStartArray) {\n    hashSize = capacity;\n    hashHalfSize = hashSize >> 1;\n    hashMask = hashSize - 1;\n    this.pool = pool;\n    ids = new int[hashSize];\n    Arrays.fill(ids, -1);\n    this.bytesStartArray = bytesStartArray;\n    bytesStart = bytesStartArray.init();\n    bytesUsed = bytesStartArray.bytesUsed() == null? Counter.newCounter() : bytesStartArray.bytesUsed();\n    bytesUsed.addAndGet(hashSize * RamUsageEstimator.NUM_BYTES_INT);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link BytesRefHash}\n   */\n  public BytesRefHash(ByteBlockPool pool, int capacity,\n      BytesStartArray bytesStartArray) {\n    hashSize = capacity;\n    hashHalfSize = hashSize >> 1;\n    hashMask = hashSize - 1;\n    this.pool = pool;\n    ids = new int[hashSize];\n    Arrays.fill(ids, -1);\n    this.bytesStartArray = bytesStartArray;\n    bytesStart = bytesStartArray.init();\n    bytesUsed = bytesStartArray.bytesUsed() == null? Counter.newCounter() : bytesStartArray.bytesUsed();\n    bytesUsed.addAndGet(hashSize * RamUsageEstimator.NUM_BYTES_INT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefHash#BytesRefHash(ByteBlockPool,int,BytesStartArray).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BytesRefHash#BytesRefHash(ByteBlockPool,int,BytesStartArray).mjava","sourceNew":"  /**\n   * Creates a new {@link BytesRefHash}\n   */\n  public BytesRefHash(ByteBlockPool pool, int capacity, BytesStartArray bytesStartArray) {\n    hashSize = capacity;\n    hashHalfSize = hashSize >> 1;\n    hashMask = hashSize - 1;\n    this.pool = pool;\n    ids = new int[hashSize];\n    Arrays.fill(ids, -1);\n    this.bytesStartArray = bytesStartArray;\n    bytesStart = bytesStartArray.init();\n    bytesUsed = bytesStartArray.bytesUsed() == null? Counter.newCounter() : bytesStartArray.bytesUsed();\n    bytesUsed.addAndGet(hashSize * RamUsageEstimator.NUM_BYTES_INT);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link BytesRefHash}\n   */\n  public BytesRefHash(ByteBlockPool pool, int capacity,\n      BytesStartArray bytesStartArray) {\n    hashSize = capacity;\n    hashHalfSize = hashSize >> 1;\n    hashMask = hashSize - 1;\n    this.pool = pool;\n    ids = new int[hashSize];\n    Arrays.fill(ids, -1);\n    this.bytesStartArray = bytesStartArray;\n    bytesStart = bytesStartArray.init();\n    bytesUsed = bytesStartArray.bytesUsed() == null? Counter.newCounter() : bytesStartArray.bytesUsed();\n    bytesUsed.addAndGet(hashSize * RamUsageEstimator.NUM_BYTES_INT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefHash#BytesRefHash(ByteBlockPool,int,BytesStartArray).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BytesRefHash#BytesRefHash(ByteBlockPool,int,BytesStartArray).mjava","sourceNew":"  /**\n   * Creates a new {@link BytesRefHash}\n   */\n  public BytesRefHash(ByteBlockPool pool, int capacity, BytesStartArray bytesStartArray) {\n    hashSize = capacity;\n    hashHalfSize = hashSize >> 1;\n    hashMask = hashSize - 1;\n    this.pool = pool;\n    ids = new int[hashSize];\n    Arrays.fill(ids, -1);\n    this.bytesStartArray = bytesStartArray;\n    bytesStart = bytesStartArray.init();\n    bytesUsed = bytesStartArray.bytesUsed() == null? Counter.newCounter() : bytesStartArray.bytesUsed();\n    bytesUsed.addAndGet(hashSize * RamUsageEstimator.NUM_BYTES_INT);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link BytesRefHash}\n   */\n  public BytesRefHash(ByteBlockPool pool, int capacity,\n      BytesStartArray bytesStartArray) {\n    hashSize = capacity;\n    hashHalfSize = hashSize >> 1;\n    hashMask = hashSize - 1;\n    this.pool = pool;\n    ids = new int[hashSize];\n    Arrays.fill(ids, -1);\n    this.bytesStartArray = bytesStartArray;\n    bytesStart = bytesStartArray.init();\n    bytesUsed = bytesStartArray.bytesUsed() == null? Counter.newCounter() : bytesStartArray.bytesUsed();\n    bytesUsed.addAndGet(hashSize * RamUsageEstimator.NUM_BYTES_INT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f226a8b088dd9c8f6ab287a77237c4aa00a238e5","date":1456187572,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefHash#BytesRefHash(ByteBlockPool,int,BytesStartArray).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BytesRefHash#BytesRefHash(ByteBlockPool,int,BytesStartArray).mjava","sourceNew":"  /**\n   * Creates a new {@link BytesRefHash}\n   */\n  public BytesRefHash(ByteBlockPool pool, int capacity, BytesStartArray bytesStartArray) {\n    hashSize = capacity;\n    hashHalfSize = hashSize >> 1;\n    hashMask = hashSize - 1;\n    this.pool = pool;\n    ids = new int[hashSize];\n    Arrays.fill(ids, -1);\n    this.bytesStartArray = bytesStartArray;\n    bytesStart = bytesStartArray.init();\n    bytesUsed = bytesStartArray.bytesUsed() == null? Counter.newCounter() : bytesStartArray.bytesUsed();\n    bytesUsed.addAndGet(hashSize * Integer.BYTES);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link BytesRefHash}\n   */\n  public BytesRefHash(ByteBlockPool pool, int capacity, BytesStartArray bytesStartArray) {\n    hashSize = capacity;\n    hashHalfSize = hashSize >> 1;\n    hashMask = hashSize - 1;\n    this.pool = pool;\n    ids = new int[hashSize];\n    Arrays.fill(ids, -1);\n    this.bytesStartArray = bytesStartArray;\n    bytesStart = bytesStartArray.init();\n    bytesUsed = bytesStartArray.bytesUsed() == null? Counter.newCounter() : bytesStartArray.bytesUsed();\n    bytesUsed.addAndGet(hashSize * RamUsageEstimator.NUM_BYTES_INT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"419a8f52c6635419beb951255cacbbb281044c57","date":1456189353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefHash#BytesRefHash(ByteBlockPool,int,BytesStartArray).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BytesRefHash#BytesRefHash(ByteBlockPool,int,BytesStartArray).mjava","sourceNew":"  /**\n   * Creates a new {@link BytesRefHash}\n   */\n  public BytesRefHash(ByteBlockPool pool, int capacity, BytesStartArray bytesStartArray) {\n    hashSize = capacity;\n    hashHalfSize = hashSize >> 1;\n    hashMask = hashSize - 1;\n    this.pool = pool;\n    ids = new int[hashSize];\n    Arrays.fill(ids, -1);\n    this.bytesStartArray = bytesStartArray;\n    bytesStart = bytesStartArray.init();\n    bytesUsed = bytesStartArray.bytesUsed() == null? Counter.newCounter() : bytesStartArray.bytesUsed();\n    bytesUsed.addAndGet(hashSize * Integer.BYTES);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link BytesRefHash}\n   */\n  public BytesRefHash(ByteBlockPool pool, int capacity, BytesStartArray bytesStartArray) {\n    hashSize = capacity;\n    hashHalfSize = hashSize >> 1;\n    hashMask = hashSize - 1;\n    this.pool = pool;\n    ids = new int[hashSize];\n    Arrays.fill(ids, -1);\n    this.bytesStartArray = bytesStartArray;\n    bytesStart = bytesStartArray.init();\n    bytesUsed = bytesStartArray.bytesUsed() == null? Counter.newCounter() : bytesStartArray.bytesUsed();\n    bytesUsed.addAndGet(hashSize * RamUsageEstimator.NUM_BYTES_INT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["bbccaf0f052c2a25526a56531803c5ebac7c8f41","52c7e49be259508735752fba88085255014a6ecf"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["bbccaf0f052c2a25526a56531803c5ebac7c8f41","3394716f52b34ab259ad5247e7595d9f9db6e935"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"419a8f52c6635419beb951255cacbbb281044c57":["3394716f52b34ab259ad5247e7595d9f9db6e935","f226a8b088dd9c8f6ab287a77237c4aa00a238e5"],"f226a8b088dd9c8f6ab287a77237c4aa00a238e5":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"52c7e49be259508735752fba88085255014a6ecf":["bbccaf0f052c2a25526a56531803c5ebac7c8f41"],"bbccaf0f052c2a25526a56531803c5ebac7c8f41":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["419a8f52c6635419beb951255cacbbb281044c57"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","419a8f52c6635419beb951255cacbbb281044c57","f226a8b088dd9c8f6ab287a77237c4aa00a238e5"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["bbccaf0f052c2a25526a56531803c5ebac7c8f41"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"419a8f52c6635419beb951255cacbbb281044c57":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f226a8b088dd9c8f6ab287a77237c4aa00a238e5":["419a8f52c6635419beb951255cacbbb281044c57"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"bbccaf0f052c2a25526a56531803c5ebac7c8f41":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","52c7e49be259508735752fba88085255014a6ecf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}