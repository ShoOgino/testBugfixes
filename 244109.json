{"path":"solr/core/src/java/org/apache/solr/core/SolrCore#closeAndWait().mjava","commits":[{"id":"625b61328a0889d9b3d61cdcbfc490339f61096e","date":1452790491,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#closeAndWait().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Close the core, if it is still in use waits until is no longer in use.\n   * @see #close() \n   * @see #isClosed() \n   */\n  public void closeAndWait() {\n    close();\n    while (!isClosed()) {\n      final long milliSleep = 100;\n      log.info(\"Core {} is not yet closed, waiting {} ms before checking again.\", getName(), milliSleep);\n      try {\n        Thread.sleep(milliSleep);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n            \"Caught InterruptedException whilst waiting for core \" + getName() + \" to close: \"\n                + e.getMessage(), e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["96e0d4494fe54b31c7f0151f3a632124ab806351"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"96e0d4494fe54b31c7f0151f3a632124ab806351","date":1512410218,"type":3,"author":"Erick","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#closeAndWait().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#closeAndWait().mjava","sourceNew":"  /**\n   * Close the core, if it is still in use waits until is no longer in use.\n   * @see #close() \n   * @see #isClosed() \n   */\n  public void closeAndWait() {\n    close();\n    while (!isClosed()) {\n      final long milliSleep = 100;\n      log.info(\"Core {} is not yet closed, waiting {} ms before checking again.\", getName(), milliSleep);\n      try {\n        Thread.sleep(milliSleep);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Caught InterruptedException whilst waiting for core \" + getName() + \" to close: \"\n                + e.getMessage(), e);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Close the core, if it is still in use waits until is no longer in use.\n   * @see #close() \n   * @see #isClosed() \n   */\n  public void closeAndWait() {\n    close();\n    while (!isClosed()) {\n      final long milliSleep = 100;\n      log.info(\"Core {} is not yet closed, waiting {} ms before checking again.\", getName(), milliSleep);\n      try {\n        Thread.sleep(milliSleep);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n            \"Caught InterruptedException whilst waiting for core \" + getName() + \" to close: \"\n                + e.getMessage(), e);\n      }\n    }\n  }\n\n","bugFix":["625b61328a0889d9b3d61cdcbfc490339f61096e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2668c99990e4c94a78bac005aa682b7c5986d23a","date":1561446137,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#closeAndWait().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#closeAndWait().mjava","sourceNew":"  /**\n   * Close the core, if it is still in use waits until is no longer in use.\n   *\n   * @see #close()\n   * @see #isClosed()\n   */\n  public void closeAndWait() {\n    close();\n    while (!isClosed()) {\n      final long milliSleep = 100;\n      log.info(\"Core {} is not yet closed, waiting {} ms before checking again.\", getName(), milliSleep);\n      try {\n        Thread.sleep(milliSleep);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Caught InterruptedException whilst waiting for core \" + getName() + \" to close: \"\n                + e.getMessage(), e);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Close the core, if it is still in use waits until is no longer in use.\n   * @see #close() \n   * @see #isClosed() \n   */\n  public void closeAndWait() {\n    close();\n    while (!isClosed()) {\n      final long milliSleep = 100;\n      log.info(\"Core {} is not yet closed, waiting {} ms before checking again.\", getName(), milliSleep);\n      try {\n        Thread.sleep(milliSleep);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Caught InterruptedException whilst waiting for core \" + getName() + \" to close: \"\n                + e.getMessage(), e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"140be51d03394488536f4aacedace29f9b318347","date":1587170432,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#closeAndWait().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#closeAndWait().mjava","sourceNew":"  /**\n   * Close the core, if it is still in use waits until is no longer in use.\n   *\n   * @see #close()\n   * @see #isClosed()\n   */\n  public void closeAndWait() {\n    close();\n    while (!isClosed()) {\n      final long milliSleep = 100;\n      if (log.isInfoEnabled()) {\n        log.info(\"Core {} is not yet closed, waiting {} ms before checking again.\", getName(), milliSleep);\n      }\n      try {\n        Thread.sleep(milliSleep);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Caught InterruptedException whilst waiting for core \" + getName() + \" to close: \"\n                + e.getMessage(), e);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Close the core, if it is still in use waits until is no longer in use.\n   *\n   * @see #close()\n   * @see #isClosed()\n   */\n  public void closeAndWait() {\n    close();\n    while (!isClosed()) {\n      final long milliSleep = 100;\n      log.info(\"Core {} is not yet closed, waiting {} ms before checking again.\", getName(), milliSleep);\n      try {\n        Thread.sleep(milliSleep);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Caught InterruptedException whilst waiting for core \" + getName() + \" to close: \"\n                + e.getMessage(), e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"96e0d4494fe54b31c7f0151f3a632124ab806351":["625b61328a0889d9b3d61cdcbfc490339f61096e"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["96e0d4494fe54b31c7f0151f3a632124ab806351"],"140be51d03394488536f4aacedace29f9b318347":["2668c99990e4c94a78bac005aa682b7c5986d23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"625b61328a0889d9b3d61cdcbfc490339f61096e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["140be51d03394488536f4aacedace29f9b318347"]},"commit2Childs":{"96e0d4494fe54b31c7f0151f3a632124ab806351":["2668c99990e4c94a78bac005aa682b7c5986d23a"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["140be51d03394488536f4aacedace29f9b318347"],"140be51d03394488536f4aacedace29f9b318347":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["625b61328a0889d9b3d61cdcbfc490339f61096e"],"625b61328a0889d9b3d61cdcbfc490339f61096e":["96e0d4494fe54b31c7f0151f3a632124ab806351"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}