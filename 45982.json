{"path":"lucene/core/src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#beforeClass().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#beforeClass().mjava","sourceNew":"    @BeforeClass\n    public static void beforeClass() throws Exception {\n        String[] data = new String [] {\n            \"A 1 2 3 4 5 6\",\n            \"Z       4 5 6\",\n            null,\n            \"B   2   4 5 6\",\n            \"Y     3   5 6\",\n            null,\n            \"C     3     6\",\n            \"X       4 5 6\"\n        };\n\n        index = newDirectory();\n        RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n        for (int i = 0; i < data.length; i++) {\n            Document doc = new Document();\n            doc.add(newField(\"id\", String.valueOf(i), StringField.TYPE_STORED));//Field.Keyword(\"id\",String.valueOf(i)));\n            doc.add(newField(\"all\", \"all\", StringField.TYPE_STORED));//Field.Keyword(\"all\",\"all\"));\n            if (null != data[i]) {\n                doc.add(newField(\"data\", data[i], TextField.TYPE_STORED));//Field.Text(\"data\",data[i]));\n            }\n            w.addDocument(doc);\n        }\n\n        r = w.getReader();\n        s = newSearcher(r);\n        w.close();\n//System.out.println(\"Set up \" + getName());\n    }\n\n","sourceOld":"    @BeforeClass\n    public static void beforeClass() throws Exception {\n        String[] data = new String [] {\n            \"A 1 2 3 4 5 6\",\n            \"Z       4 5 6\",\n            null,\n            \"B   2   4 5 6\",\n            \"Y     3   5 6\",\n            null,\n            \"C     3     6\",\n            \"X       4 5 6\"\n        };\n\n        index = newDirectory();\n        RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n        for (int i = 0; i < data.length; i++) {\n            Document doc = new Document();\n            doc.add(newField(\"id\", String.valueOf(i), StringField.TYPE_STORED));//Field.Keyword(\"id\",String.valueOf(i)));\n            doc.add(newField(\"all\", \"all\", StringField.TYPE_STORED));//Field.Keyword(\"all\",\"all\"));\n            if (null != data[i]) {\n                doc.add(newField(\"data\", data[i], TextField.TYPE_STORED));//Field.Text(\"data\",data[i]));\n            }\n            w.addDocument(doc);\n        }\n\n        r = w.getReader();\n        s = newSearcher(r);\n        w.close();\n//System.out.println(\"Set up \" + getName());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#beforeClass().mjava","sourceNew":"    @BeforeClass\n    public static void beforeClass() throws Exception {\n        String[] data = new String [] {\n            \"A 1 2 3 4 5 6\",\n            \"Z       4 5 6\",\n            null,\n            \"B   2   4 5 6\",\n            \"Y     3   5 6\",\n            null,\n            \"C     3     6\",\n            \"X       4 5 6\"\n        };\n\n        index = newDirectory();\n        RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n        for (int i = 0; i < data.length; i++) {\n            Document doc = new Document();\n            doc.add(newField(\"id\", String.valueOf(i), StringField.TYPE_STORED));//Field.Keyword(\"id\",String.valueOf(i)));\n            doc.add(newField(\"all\", \"all\", StringField.TYPE_STORED));//Field.Keyword(\"all\",\"all\"));\n            if (null != data[i]) {\n                doc.add(newField(\"data\", data[i], TextField.TYPE_STORED));//Field.Text(\"data\",data[i]));\n            }\n            w.addDocument(doc);\n        }\n\n        r = w.getReader();\n        s = newSearcher(r);\n        w.close();\n//System.out.println(\"Set up \" + getName());\n    }\n\n","sourceOld":"    @BeforeClass\n    public static void beforeClass() throws Exception {\n        String[] data = new String [] {\n            \"A 1 2 3 4 5 6\",\n            \"Z       4 5 6\",\n            null,\n            \"B   2   4 5 6\",\n            \"Y     3   5 6\",\n            null,\n            \"C     3     6\",\n            \"X       4 5 6\"\n        };\n\n        index = newDirectory();\n        RandomIndexWriter w = new RandomIndexWriter(random, index);\n\n        for (int i = 0; i < data.length; i++) {\n            Document doc = new Document();\n            doc.add(newField(\"id\", String.valueOf(i), StringField.TYPE_STORED));//Field.Keyword(\"id\",String.valueOf(i)));\n            doc.add(newField(\"all\", \"all\", StringField.TYPE_STORED));//Field.Keyword(\"all\",\"all\"));\n            if (null != data[i]) {\n                doc.add(newField(\"data\", data[i], TextField.TYPE_STORED));//Field.Text(\"data\",data[i]));\n            }\n            w.addDocument(doc);\n        }\n\n        r = w.getReader();\n        s = newSearcher(r);\n        w.close();\n//System.out.println(\"Set up \" + getName());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#beforeClass().mjava","sourceNew":"    @BeforeClass\n    public static void beforeClass() throws Exception {\n        String[] data = new String [] {\n            \"A 1 2 3 4 5 6\",\n            \"Z       4 5 6\",\n            null,\n            \"B   2   4 5 6\",\n            \"Y     3   5 6\",\n            null,\n            \"C     3     6\",\n            \"X       4 5 6\"\n        };\n\n        index = newDirectory();\n        RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n        for (int i = 0; i < data.length; i++) {\n            Document doc = new Document();\n            doc.add(newStringField(\"id\", String.valueOf(i), Field.Store.YES));//Field.Keyword(\"id\",String.valueOf(i)));\n            doc.add(newStringField(\"all\", \"all\", Field.Store.YES));//Field.Keyword(\"all\",\"all\"));\n            if (null != data[i]) {\n                doc.add(newTextField(\"data\", data[i], Field.Store.YES));//Field.Text(\"data\",data[i]));\n            }\n            w.addDocument(doc);\n        }\n\n        r = w.getReader();\n        s = newSearcher(r);\n        w.close();\n//System.out.println(\"Set up \" + getName());\n    }\n\n","sourceOld":"    @BeforeClass\n    public static void beforeClass() throws Exception {\n        String[] data = new String [] {\n            \"A 1 2 3 4 5 6\",\n            \"Z       4 5 6\",\n            null,\n            \"B   2   4 5 6\",\n            \"Y     3   5 6\",\n            null,\n            \"C     3     6\",\n            \"X       4 5 6\"\n        };\n\n        index = newDirectory();\n        RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n        for (int i = 0; i < data.length; i++) {\n            Document doc = new Document();\n            doc.add(newField(\"id\", String.valueOf(i), StringField.TYPE_STORED));//Field.Keyword(\"id\",String.valueOf(i)));\n            doc.add(newField(\"all\", \"all\", StringField.TYPE_STORED));//Field.Keyword(\"all\",\"all\"));\n            if (null != data[i]) {\n                doc.add(newField(\"data\", data[i], TextField.TYPE_STORED));//Field.Text(\"data\",data[i]));\n            }\n            w.addDocument(doc);\n        }\n\n        r = w.getReader();\n        s = newSearcher(r);\n        w.close();\n//System.out.println(\"Set up \" + getName());\n    }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#beforeClass().mjava","sourceNew":"    @BeforeClass\n    public static void beforeClass() throws Exception {\n        String[] data = new String [] {\n            \"A 1 2 3 4 5 6\",\n            \"Z       4 5 6\",\n            null,\n            \"B   2   4 5 6\",\n            \"Y     3   5 6\",\n            null,\n            \"C     3     6\",\n            \"X       4 5 6\"\n        };\n\n        index = newDirectory();\n        RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n        for (int i = 0; i < data.length; i++) {\n            Document doc = new Document();\n            doc.add(newStringField(\"id\", String.valueOf(i), Field.Store.YES));//Field.Keyword(\"id\",String.valueOf(i)));\n            doc.add(newStringField(\"all\", \"all\", Field.Store.YES));//Field.Keyword(\"all\",\"all\"));\n            if (null != data[i]) {\n                doc.add(newTextField(\"data\", data[i], Field.Store.YES));//Field.Text(\"data\",data[i]));\n            }\n            w.addDocument(doc);\n        }\n\n        r = w.getReader();\n        s = newSearcher(r);\n        w.shutdown();\n//System.out.println(\"Set up \" + getName());\n    }\n\n","sourceOld":"    @BeforeClass\n    public static void beforeClass() throws Exception {\n        String[] data = new String [] {\n            \"A 1 2 3 4 5 6\",\n            \"Z       4 5 6\",\n            null,\n            \"B   2   4 5 6\",\n            \"Y     3   5 6\",\n            null,\n            \"C     3     6\",\n            \"X       4 5 6\"\n        };\n\n        index = newDirectory();\n        RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n        for (int i = 0; i < data.length; i++) {\n            Document doc = new Document();\n            doc.add(newStringField(\"id\", String.valueOf(i), Field.Store.YES));//Field.Keyword(\"id\",String.valueOf(i)));\n            doc.add(newStringField(\"all\", \"all\", Field.Store.YES));//Field.Keyword(\"all\",\"all\"));\n            if (null != data[i]) {\n                doc.add(newTextField(\"data\", data[i], Field.Store.YES));//Field.Text(\"data\",data[i]));\n            }\n            w.addDocument(doc);\n        }\n\n        r = w.getReader();\n        s = newSearcher(r);\n        w.close();\n//System.out.println(\"Set up \" + getName());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanMinShouldMatch#beforeClass().mjava","sourceNew":"    @BeforeClass\n    public static void beforeClass() throws Exception {\n        String[] data = new String [] {\n            \"A 1 2 3 4 5 6\",\n            \"Z       4 5 6\",\n            null,\n            \"B   2   4 5 6\",\n            \"Y     3   5 6\",\n            null,\n            \"C     3     6\",\n            \"X       4 5 6\"\n        };\n\n        index = newDirectory();\n        RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n        for (int i = 0; i < data.length; i++) {\n            Document doc = new Document();\n            doc.add(newStringField(\"id\", String.valueOf(i), Field.Store.YES));//Field.Keyword(\"id\",String.valueOf(i)));\n            doc.add(newStringField(\"all\", \"all\", Field.Store.YES));//Field.Keyword(\"all\",\"all\"));\n            if (null != data[i]) {\n                doc.add(newTextField(\"data\", data[i], Field.Store.YES));//Field.Text(\"data\",data[i]));\n            }\n            w.addDocument(doc);\n        }\n\n        r = w.getReader();\n        s = newSearcher(r);\n        w.close();\n//System.out.println(\"Set up \" + getName());\n    }\n\n","sourceOld":"    @BeforeClass\n    public static void beforeClass() throws Exception {\n        String[] data = new String [] {\n            \"A 1 2 3 4 5 6\",\n            \"Z       4 5 6\",\n            null,\n            \"B   2   4 5 6\",\n            \"Y     3   5 6\",\n            null,\n            \"C     3     6\",\n            \"X       4 5 6\"\n        };\n\n        index = newDirectory();\n        RandomIndexWriter w = new RandomIndexWriter(random(), index);\n\n        for (int i = 0; i < data.length; i++) {\n            Document doc = new Document();\n            doc.add(newStringField(\"id\", String.valueOf(i), Field.Store.YES));//Field.Keyword(\"id\",String.valueOf(i)));\n            doc.add(newStringField(\"all\", \"all\", Field.Store.YES));//Field.Keyword(\"all\",\"all\"));\n            if (null != data[i]) {\n                doc.add(newTextField(\"data\", data[i], Field.Store.YES));//Field.Text(\"data\",data[i]));\n            }\n            w.addDocument(doc);\n        }\n\n        r = w.getReader();\n        s = newSearcher(r);\n        w.shutdown();\n//System.out.println(\"Set up \" + getName());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}