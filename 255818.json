{"path":"solr/core/src/test/org/apache/solr/handler/component/BadComponentTest#testBadElevate().mjava","commits":[{"id":"19e21d98da803ac6174cb50a880e6289139756ca","date":1323342587,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/BadComponentTest#testBadElevate().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBadElevate() throws Exception {\n    try {\n      System.setProperty(\"elevate.file\", \"foo.xml\");\n      initCore(\"solrconfig-elevate.xml\", \"schema12.xml\");\n      assertTrue(false);\n    } catch (Throwable e) {\n      log.error(\"Exception\", e);\n      assertTrue(true);\n    } finally {\n      System.clearProperty(\"elevate.file\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efc85580874d26ca9617f9ad61628d56f6859762","date":1323367273,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/BadComponentTest#testBadElevate().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBadElevate() throws Exception {\n    try {\n      System.setProperty(\"elevate.file\", \"foo.xml\");\n      initCore(\"solrconfig-elevate.xml\", \"schema12.xml\");\n      assertTrue(false);\n    } catch (Throwable e) {\n      log.error(\"Exception\", e);\n      assertTrue(true);\n    } finally {\n      System.clearProperty(\"elevate.file\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/BadComponentTest#testBadElevate().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBadElevate() throws Exception {\n    try {\n      System.setProperty(\"elevate.file\", \"foo.xml\");\n      initCore(\"solrconfig-elevate.xml\", \"schema12.xml\");\n      assertTrue(false);\n    } catch (Throwable e) {\n      log.error(\"Exception\", e);\n      assertTrue(true);\n    } finally {\n      System.clearProperty(\"elevate.file\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c26a2ae82fa7374936cd91f9a1982c196e00b36","date":1323786090,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/BadComponentTest#testBadElevate().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/BadComponentTest#testBadElevate().mjava","sourceNew":"  @Test\n  public void testBadElevate() throws Exception {\n    try {\n      System.setProperty(\"elevate.file\", \"foo.xml\");\n      initCore(\"solrconfig-elevate.xml\", \"schema12.xml\");\n      assertTrue(false);\n    } catch (RuntimeException e) {\n      //TODO: better way of checking this?\n      if (e.getCause() instanceof SolrException && e.getCause().getCause().getMessage().equals(\"Error initializing QueryElevationComponent.\")){\n        log.error(\"Exception\", e);\n        assertTrue(true);\n      } else {\n        assertTrue(false);\n      }\n    } finally {\n      System.clearProperty(\"elevate.file\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBadElevate() throws Exception {\n    try {\n      System.setProperty(\"elevate.file\", \"foo.xml\");\n      initCore(\"solrconfig-elevate.xml\", \"schema12.xml\");\n      assertTrue(false);\n    } catch (Throwable e) {\n      log.error(\"Exception\", e);\n      assertTrue(true);\n    } finally {\n      System.clearProperty(\"elevate.file\");\n    }\n  }\n\n","bugFix":null,"bugIntro":["c37beb00356d86126002010a55107df0a3199427"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c37beb00356d86126002010a55107df0a3199427","date":1323786101,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/BadComponentTest#testBadElevate().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/BadComponentTest#testBadElevate().mjava","sourceNew":"  @Test\n  public void testBadElevate() throws Exception {\n    try {\n      ignoreException(\".*constructing.*\");\n      ignoreException(\".*QueryElevationComponent.*\");\n      System.setProperty(\"elevate.file\", \"foo.xml\");\n      initCore(\"solrconfig-elevate.xml\", \"schema12.xml\");\n      assertTrue(false);\n    } catch (RuntimeException e) {\n      //TODO: better way of checking this?\n      if (e.getCause() instanceof SolrException){\n        assertTrue(true);\n      } else {\n        assertTrue(false);\n      }\n    } finally {\n      System.clearProperty(\"elevate.file\");\n      resetExceptionIgnores();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBadElevate() throws Exception {\n    try {\n      System.setProperty(\"elevate.file\", \"foo.xml\");\n      initCore(\"solrconfig-elevate.xml\", \"schema12.xml\");\n      assertTrue(false);\n    } catch (RuntimeException e) {\n      //TODO: better way of checking this?\n      if (e.getCause() instanceof SolrException && e.getCause().getCause().getMessage().equals(\"Error initializing QueryElevationComponent.\")){\n        log.error(\"Exception\", e);\n        assertTrue(true);\n      } else {\n        assertTrue(false);\n      }\n    } finally {\n      System.clearProperty(\"elevate.file\");\n    }\n  }\n\n","bugFix":["3c26a2ae82fa7374936cd91f9a1982c196e00b36"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ceb6a6c707ada1df8bde804e25c98668e699a18","date":1323800602,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/BadComponentTest#testBadElevate().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/BadComponentTest#testBadElevate().mjava","sourceNew":"  @Test\n  public void testBadElevate() throws Exception {\n    try {\n      ignoreException(\".*constructing.*\");\n      ignoreException(\".*QueryElevationComponent.*\");\n      System.setProperty(\"elevate.file\", \"foo.xml\");\n      initCore(\"solrconfig-elevate.xml\", \"schema12.xml\");\n      assertTrue(false);\n    } catch (RuntimeException e) {\n      //TODO: better way of checking this?\n      if (e.getCause() instanceof SolrException){\n        assertTrue(true);\n      } else {\n        assertTrue(false);\n      }\n    } finally {\n      System.clearProperty(\"elevate.file\");\n      resetExceptionIgnores();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBadElevate() throws Exception {\n    try {\n      System.setProperty(\"elevate.file\", \"foo.xml\");\n      initCore(\"solrconfig-elevate.xml\", \"schema12.xml\");\n      assertTrue(false);\n    } catch (Throwable e) {\n      log.error(\"Exception\", e);\n      assertTrue(true);\n    } finally {\n      System.clearProperty(\"elevate.file\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d264f386d864b5751209060e8886ca9845f70469","date":1372172126,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/BadComponentTest#testBadElevate().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/BadComponentTest#testBadElevate().mjava","sourceNew":"  @Test\n  public void testBadElevate() throws Exception {\n    try {\n      ignoreException(\".*constructing.*\");\n      ignoreException(\".*QueryElevationComponent.*\");\n      System.setProperty(\"elevate.file\", \"foo.xml\");\n      initCore(\"solrconfig-elevate.xml\", \"schema12.xml\");\n      assertTrue(hasInitException(\"QueryElevationComponent\"));\n    } finally {\n      System.clearProperty(\"elevate.file\");\n      resetExceptionIgnores();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBadElevate() throws Exception {\n    try {\n      ignoreException(\".*constructing.*\");\n      ignoreException(\".*QueryElevationComponent.*\");\n      System.setProperty(\"elevate.file\", \"foo.xml\");\n      initCore(\"solrconfig-elevate.xml\", \"schema12.xml\");\n      assertTrue(false);\n    } catch (RuntimeException e) {\n      //TODO: better way of checking this?\n      if (e.getCause() instanceof SolrException){\n        assertTrue(true);\n      } else {\n        assertTrue(false);\n      }\n    } finally {\n      System.clearProperty(\"elevate.file\");\n      resetExceptionIgnores();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"354983dcdf70c800bf2573d10b54a7391b1dc167","date":1372183171,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/BadComponentTest#testBadElevate().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/BadComponentTest#testBadElevate().mjava","sourceNew":"  @Test\n  public void testBadElevate() throws Exception {\n    try {\n      ignoreException(\".*constructing.*\");\n      ignoreException(\".*QueryElevationComponent.*\");\n      System.setProperty(\"elevate.file\", \"foo.xml\");\n      initCore(\"solrconfig-elevate.xml\", \"schema12.xml\");\n      assertTrue(false);\n    } catch (RuntimeException e) {\n      //TODO: better way of checking this?\n      if (e.getCause() instanceof SolrException){\n        assertTrue(true);\n      } else {\n        assertTrue(false);\n      }\n    } finally {\n      System.clearProperty(\"elevate.file\");\n      resetExceptionIgnores();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBadElevate() throws Exception {\n    try {\n      ignoreException(\".*constructing.*\");\n      ignoreException(\".*QueryElevationComponent.*\");\n      System.setProperty(\"elevate.file\", \"foo.xml\");\n      initCore(\"solrconfig-elevate.xml\", \"schema12.xml\");\n      assertTrue(hasInitException(\"QueryElevationComponent\"));\n    } finally {\n      System.clearProperty(\"elevate.file\");\n      resetExceptionIgnores();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/BadComponentTest#testBadElevate().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/BadComponentTest#testBadElevate().mjava","sourceNew":"  @Test\n  public void testBadElevate() throws Exception {\n    try {\n      ignoreException(\".*constructing.*\");\n      ignoreException(\".*QueryElevationComponent.*\");\n      System.setProperty(\"elevate.file\", \"foo.xml\");\n      initCore(\"solrconfig-elevate.xml\", \"schema12.xml\");\n      assertTrue(hasInitException(\"QueryElevationComponent\"));\n    } finally {\n      System.clearProperty(\"elevate.file\");\n      resetExceptionIgnores();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBadElevate() throws Exception {\n    try {\n      ignoreException(\".*constructing.*\");\n      ignoreException(\".*QueryElevationComponent.*\");\n      System.setProperty(\"elevate.file\", \"foo.xml\");\n      initCore(\"solrconfig-elevate.xml\", \"schema12.xml\");\n      assertTrue(false);\n    } catch (RuntimeException e) {\n      //TODO: better way of checking this?\n      if (e.getCause() instanceof SolrException){\n        assertTrue(true);\n      } else {\n        assertTrue(false);\n      }\n    } finally {\n      System.clearProperty(\"elevate.file\");\n      resetExceptionIgnores();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/BadComponentTest#testBadElevate().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/BadComponentTest#testBadElevate().mjava","sourceNew":"  @Test\n  public void testBadElevate() throws Exception {\n    try {\n      ignoreException(\".*constructing.*\");\n      ignoreException(\".*QueryElevationComponent.*\");\n      System.setProperty(\"elevate.file\", \"foo.xml\");\n      initCore(\"solrconfig-elevate.xml\", \"schema12.xml\");\n      assertTrue(hasInitException(\"QueryElevationComponent\"));\n    } finally {\n      System.clearProperty(\"elevate.file\");\n      resetExceptionIgnores();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBadElevate() throws Exception {\n    try {\n      ignoreException(\".*constructing.*\");\n      ignoreException(\".*QueryElevationComponent.*\");\n      System.setProperty(\"elevate.file\", \"foo.xml\");\n      initCore(\"solrconfig-elevate.xml\", \"schema12.xml\");\n      assertTrue(false);\n    } catch (RuntimeException e) {\n      //TODO: better way of checking this?\n      if (e.getCause() instanceof SolrException){\n        assertTrue(true);\n      } else {\n        assertTrue(false);\n      }\n    } finally {\n      System.clearProperty(\"elevate.file\");\n      resetExceptionIgnores();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3c26a2ae82fa7374936cd91f9a1982c196e00b36":["19e21d98da803ac6174cb50a880e6289139756ca"],"7116474e2e390259937401cf928323e0cbc75e60":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"4ceb6a6c707ada1df8bde804e25c98668e699a18":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","c37beb00356d86126002010a55107df0a3199427"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["c37beb00356d86126002010a55107df0a3199427","7116474e2e390259937401cf928323e0cbc75e60"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","19e21d98da803ac6174cb50a880e6289139756ca"],"19e21d98da803ac6174cb50a880e6289139756ca":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"354983dcdf70c800bf2573d10b54a7391b1dc167":["d264f386d864b5751209060e8886ca9845f70469"],"d264f386d864b5751209060e8886ca9845f70469":["c37beb00356d86126002010a55107df0a3199427"],"c37beb00356d86126002010a55107df0a3199427":["3c26a2ae82fa7374936cd91f9a1982c196e00b36"],"efc85580874d26ca9617f9ad61628d56f6859762":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","19e21d98da803ac6174cb50a880e6289139756ca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7116474e2e390259937401cf928323e0cbc75e60"]},"commit2Childs":{"3c26a2ae82fa7374936cd91f9a1982c196e00b36":["c37beb00356d86126002010a55107df0a3199427"],"7116474e2e390259937401cf928323e0cbc75e60":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ceb6a6c707ada1df8bde804e25c98668e699a18":[],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["4ceb6a6c707ada1df8bde804e25c98668e699a18"],"19e21d98da803ac6174cb50a880e6289139756ca":["3c26a2ae82fa7374936cd91f9a1982c196e00b36","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","efc85580874d26ca9617f9ad61628d56f6859762"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","19e21d98da803ac6174cb50a880e6289139756ca","efc85580874d26ca9617f9ad61628d56f6859762"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["7116474e2e390259937401cf928323e0cbc75e60"],"d264f386d864b5751209060e8886ca9845f70469":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"c37beb00356d86126002010a55107df0a3199427":["4ceb6a6c707ada1df8bde804e25c98668e699a18","37a0f60745e53927c4c876cfe5b5a58170f0646c","d264f386d864b5751209060e8886ca9845f70469"],"efc85580874d26ca9617f9ad61628d56f6859762":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ceb6a6c707ada1df8bde804e25c98668e699a18","37a0f60745e53927c4c876cfe5b5a58170f0646c","efc85580874d26ca9617f9ad61628d56f6859762","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}