{"path":"solr/core/src/java/org/apache/solr/request/PerSegmentSingleValuedFaceting#PerSegmentSingleValuedFaceting(SolrIndexSearcher,DocSet,String,int,int,int,boolean,String,String,String,boolean).mjava","commits":[{"id":"52c5280f6286c7546ab75b72c663f7bb1dc10e96","date":1427372570,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/PerSegmentSingleValuedFaceting#PerSegmentSingleValuedFaceting(SolrIndexSearcher,DocSet,String,int,int,int,boolean,String,String,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/PerSegmentSingleValuedFaceting#PerSegmentSingleValuedFaceting(SolrIndexSearcher,DocSet,String,int,int,int,boolean,String,String).mjava","sourceNew":"  public PerSegmentSingleValuedFaceting(SolrIndexSearcher searcher, DocSet docs, String fieldName, int offset, int limit, int mincount, boolean missing, String sort, String prefix, String contains, boolean ignoreCase) {\n    this.searcher = searcher;\n    this.docs = docs;\n    this.fieldName = fieldName;\n    this.offset = offset;\n    this.limit = limit;\n    this.mincount = mincount;\n    this.missing = missing;\n    this.sort = sort;\n    this.prefix = prefix;\n    this.containsBR = contains != null ? new BytesRef(contains) : null;\n    this.ignoreCase = ignoreCase;\n  }\n\n","sourceOld":"  public PerSegmentSingleValuedFaceting(SolrIndexSearcher searcher, DocSet docs, String fieldName, int offset, int limit, int mincount, boolean missing, String sort, String prefix) {\n    this.searcher = searcher;\n    this.docs = docs;\n    this.fieldName = fieldName;\n    this.offset = offset;\n    this.limit = limit;\n    this.mincount = mincount;\n    this.missing = missing;\n    this.sort = sort;\n    this.prefix = prefix;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/PerSegmentSingleValuedFaceting#PerSegmentSingleValuedFaceting(SolrIndexSearcher,DocSet,String,int,int,int,boolean,String,String,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public PerSegmentSingleValuedFaceting(SolrIndexSearcher searcher, DocSet docs, String fieldName, int offset, int limit, int mincount, boolean missing, String sort, String prefix, String contains, boolean ignoreCase) {\n    this.searcher = searcher;\n    this.docs = docs;\n    this.fieldName = fieldName;\n    this.offset = offset;\n    this.limit = limit;\n    this.mincount = mincount;\n    this.missing = missing;\n    this.sort = sort;\n    this.prefix = prefix;\n    this.containsBR = contains != null ? new BytesRef(contains) : null;\n    this.ignoreCase = ignoreCase;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5963c53b53608d00d165849e6b52e71b0209c9b6","date":1428506893,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/PerSegmentSingleValuedFaceting#PerSegmentSingleValuedFaceting(SolrIndexSearcher,DocSet,String,int,int,int,boolean,String,String,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/PerSegmentSingleValuedFaceting#PerSegmentSingleValuedFaceting(SolrIndexSearcher,DocSet,String,int,int,int,boolean,String,String,String,boolean).mjava","sourceNew":"  public PerSegmentSingleValuedFaceting(SolrIndexSearcher searcher, DocSet docs, String fieldName, int offset, int limit, int mincount, boolean missing, String sort, String prefix, String contains, boolean ignoreCase) {\n    this.searcher = searcher;\n    this.docs = docs;\n    this.fieldName = fieldName;\n    this.offset = offset;\n    this.limit = limit;\n    this.mincount = mincount;\n    this.missing = missing;\n    this.sort = sort;\n    this.prefix = prefix;\n    this.contains = contains;\n    this.ignoreCase = ignoreCase;\n  }\n\n","sourceOld":"  public PerSegmentSingleValuedFaceting(SolrIndexSearcher searcher, DocSet docs, String fieldName, int offset, int limit, int mincount, boolean missing, String sort, String prefix, String contains, boolean ignoreCase) {\n    this.searcher = searcher;\n    this.docs = docs;\n    this.fieldName = fieldName;\n    this.offset = offset;\n    this.limit = limit;\n    this.mincount = mincount;\n    this.missing = missing;\n    this.sort = sort;\n    this.prefix = prefix;\n    this.containsBR = contains != null ? new BytesRef(contains) : null;\n    this.ignoreCase = ignoreCase;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"862ed062e72c1c01ecd8593b17804ac02b69cf0e","date":1486641184,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/PerSegmentSingleValuedFaceting#PerSegmentSingleValuedFaceting(SolrIndexSearcher,DocSet,String,int,int,int,boolean,String,String,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/PerSegmentSingleValuedFaceting#PerSegmentSingleValuedFaceting(SolrIndexSearcher,DocSet,String,int,int,int,boolean,String,String,String,boolean).mjava","sourceNew":"  public PerSegmentSingleValuedFaceting(SolrIndexSearcher searcher, DocSet docs, String fieldName, int offset, int limit, int mincount, boolean missing, String sort, String prefix, String contains, boolean ignoreCase) {\n    this(searcher, docs, fieldName, offset, limit, mincount, missing, sort, prefix, new SubstringBytesRefFilter(contains, ignoreCase));\n  }\n\n","sourceOld":"  public PerSegmentSingleValuedFaceting(SolrIndexSearcher searcher, DocSet docs, String fieldName, int offset, int limit, int mincount, boolean missing, String sort, String prefix, String contains, boolean ignoreCase) {\n    this.searcher = searcher;\n    this.docs = docs;\n    this.fieldName = fieldName;\n    this.offset = offset;\n    this.limit = limit;\n    this.mincount = mincount;\n    this.missing = missing;\n    this.sort = sort;\n    this.prefix = prefix;\n    this.contains = contains;\n    this.ignoreCase = ignoreCase;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","52c5280f6286c7546ab75b72c663f7bb1dc10e96"],"862ed062e72c1c01ecd8593b17804ac02b69cf0e":["5963c53b53608d00d165849e6b52e71b0209c9b6"],"5963c53b53608d00d165849e6b52e71b0209c9b6":["52c5280f6286c7546ab75b72c663f7bb1dc10e96"],"52c5280f6286c7546ab75b72c663f7bb1dc10e96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["862ed062e72c1c01ecd8593b17804ac02b69cf0e"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"862ed062e72c1c01ecd8593b17804ac02b69cf0e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5963c53b53608d00d165849e6b52e71b0209c9b6":["862ed062e72c1c01ecd8593b17804ac02b69cf0e"],"52c5280f6286c7546ab75b72c663f7bb1dc10e96":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","5963c53b53608d00d165849e6b52e71b0209c9b6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","52c5280f6286c7546ab75b72c663f7bb1dc10e96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}