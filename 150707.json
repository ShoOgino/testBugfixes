{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSnapshotCloudManager#testSimulatorFromSnapshot().mjava","commits":[{"id":"edf5b262a72d10530eb2f01dc8f19060355b213e","date":1557765866,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSnapshotCloudManager#testSimulatorFromSnapshot().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSimulatorFromSnapshot() throws Exception {\n    Path tmpPath = createTempDir();\n    File tmpDir = tmpPath.toFile();\n    SnapshotCloudManager snapshotCloudManager = new SnapshotCloudManager(realManager, null);\n    snapshotCloudManager.saveSnapshot(tmpDir, true);\n    SnapshotCloudManager snapshotCloudManager1 = SnapshotCloudManager.readSnapshot(tmpDir);\n    try (SimCloudManager simCloudManager = SimCloudManager.createCluster(snapshotCloudManager1, null, TimeSource.get(\"simTime:50\"))) {\n      assertClusterStateEquals(snapshotCloudManager.getClusterStateProvider().getClusterState(), simCloudManager.getClusterStateProvider().getClusterState());\n      assertNodeStateProvider(snapshotCloudManager, simCloudManager);\n      assertDistribStateManager(snapshotCloudManager.getDistribStateManager(), simCloudManager.getDistribStateManager());\n      ClusterState state = simCloudManager.getClusterStateProvider().getClusterState();\n      Replica r = state.getCollection(CollectionAdminParams.SYSTEM_COLL).getReplicas().get(0);\n      // get another node\n      String target = null;\n      for (String node : simCloudManager.getClusterStateProvider().getLiveNodes()) {\n        if (!node.equals(r.getNodeName())) {\n          target = node;\n          break;\n        }\n      }\n      if (target == null) {\n        fail(\"can't find suitable target node for replica \" + r + \", liveNodes=\" + simCloudManager.getClusterStateProvider().getLiveNodes());\n      }\n      CollectionAdminRequest.MoveReplica moveReplica = CollectionAdminRequest\n          .moveReplica(CollectionAdminParams.SYSTEM_COLL, r.getName(), target);\n      log.info(\"################\");\n      simCloudManager.simGetSolrClient().request(moveReplica);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb2411226bebe23191dc34a8e8252a936a7261a8","date":1557853382,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSnapshotCloudManager#testSimulatorFromSnapshot().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSnapshotCloudManager#testSimulatorFromSnapshot().mjava","sourceNew":"  @Test\n  public void testSimulatorFromSnapshot() throws Exception {\n    Path tmpPath = createTempDir();\n    File tmpDir = tmpPath.toFile();\n    SnapshotCloudManager snapshotCloudManager = new SnapshotCloudManager(realManager, null);\n    snapshotCloudManager.saveSnapshot(tmpDir, true);\n    SnapshotCloudManager snapshotCloudManager1 = SnapshotCloudManager.readSnapshot(tmpDir);\n    try (SimCloudManager simCloudManager = SimCloudManager.createCluster(snapshotCloudManager1, null, TimeSource.get(\"simTime:50\"))) {\n      SimSolrCloudTestCase.assertClusterStateEquals(snapshotCloudManager.getClusterStateProvider().getClusterState(), simCloudManager.getClusterStateProvider().getClusterState());\n      assertNodeStateProvider(snapshotCloudManager, simCloudManager);\n      assertDistribStateManager(snapshotCloudManager.getDistribStateManager(), simCloudManager.getDistribStateManager());\n      ClusterState state = simCloudManager.getClusterStateProvider().getClusterState();\n      Replica r = state.getCollection(CollectionAdminParams.SYSTEM_COLL).getReplicas().get(0);\n      // get another node\n      String target = null;\n      for (String node : simCloudManager.getClusterStateProvider().getLiveNodes()) {\n        if (!node.equals(r.getNodeName())) {\n          target = node;\n          break;\n        }\n      }\n      if (target == null) {\n        fail(\"can't find suitable target node for replica \" + r + \", liveNodes=\" + simCloudManager.getClusterStateProvider().getLiveNodes());\n      }\n      CollectionAdminRequest.MoveReplica moveReplica = CollectionAdminRequest\n          .moveReplica(CollectionAdminParams.SYSTEM_COLL, r.getName(), target);\n      log.info(\"################\");\n      simCloudManager.simGetSolrClient().request(moveReplica);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSimulatorFromSnapshot() throws Exception {\n    Path tmpPath = createTempDir();\n    File tmpDir = tmpPath.toFile();\n    SnapshotCloudManager snapshotCloudManager = new SnapshotCloudManager(realManager, null);\n    snapshotCloudManager.saveSnapshot(tmpDir, true);\n    SnapshotCloudManager snapshotCloudManager1 = SnapshotCloudManager.readSnapshot(tmpDir);\n    try (SimCloudManager simCloudManager = SimCloudManager.createCluster(snapshotCloudManager1, null, TimeSource.get(\"simTime:50\"))) {\n      assertClusterStateEquals(snapshotCloudManager.getClusterStateProvider().getClusterState(), simCloudManager.getClusterStateProvider().getClusterState());\n      assertNodeStateProvider(snapshotCloudManager, simCloudManager);\n      assertDistribStateManager(snapshotCloudManager.getDistribStateManager(), simCloudManager.getDistribStateManager());\n      ClusterState state = simCloudManager.getClusterStateProvider().getClusterState();\n      Replica r = state.getCollection(CollectionAdminParams.SYSTEM_COLL).getReplicas().get(0);\n      // get another node\n      String target = null;\n      for (String node : simCloudManager.getClusterStateProvider().getLiveNodes()) {\n        if (!node.equals(r.getNodeName())) {\n          target = node;\n          break;\n        }\n      }\n      if (target == null) {\n        fail(\"can't find suitable target node for replica \" + r + \", liveNodes=\" + simCloudManager.getClusterStateProvider().getLiveNodes());\n      }\n      CollectionAdminRequest.MoveReplica moveReplica = CollectionAdminRequest\n          .moveReplica(CollectionAdminParams.SYSTEM_COLL, r.getName(), target);\n      log.info(\"################\");\n      simCloudManager.simGetSolrClient().request(moveReplica);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3d2a34ea3732f91149b31bcad82026ad85fda69","date":1567850949,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSnapshotCloudManager#testSimulatorFromSnapshot().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSnapshotCloudManager#testSimulatorFromSnapshot().mjava","sourceNew":"  @Test\n  public void testSimulatorFromSnapshot() throws Exception {\n    Path tmpPath = createTempDir();\n    File tmpDir = tmpPath.toFile();\n    SnapshotCloudManager snapshotCloudManager = new SnapshotCloudManager(realManager, null);\n    snapshotCloudManager.saveSnapshot(tmpDir, true, false);\n    SnapshotCloudManager snapshotCloudManager1 = SnapshotCloudManager.readSnapshot(tmpDir);\n    try (SimCloudManager simCloudManager = SimCloudManager.createCluster(snapshotCloudManager1, null, TimeSource.get(\"simTime:50\"))) {\n      SimSolrCloudTestCase.assertClusterStateEquals(snapshotCloudManager.getClusterStateProvider().getClusterState(), simCloudManager.getClusterStateProvider().getClusterState());\n      assertNodeStateProvider(snapshotCloudManager, simCloudManager);\n      assertDistribStateManager(snapshotCloudManager.getDistribStateManager(), simCloudManager.getDistribStateManager());\n      ClusterState state = simCloudManager.getClusterStateProvider().getClusterState();\n      Replica r = state.getCollection(CollectionAdminParams.SYSTEM_COLL).getReplicas().get(0);\n      // get another node\n      String target = null;\n      for (String node : simCloudManager.getClusterStateProvider().getLiveNodes()) {\n        if (!node.equals(r.getNodeName())) {\n          target = node;\n          break;\n        }\n      }\n      if (target == null) {\n        fail(\"can't find suitable target node for replica \" + r + \", liveNodes=\" + simCloudManager.getClusterStateProvider().getLiveNodes());\n      }\n      CollectionAdminRequest.MoveReplica moveReplica = CollectionAdminRequest\n          .moveReplica(CollectionAdminParams.SYSTEM_COLL, r.getName(), target);\n      log.info(\"################\");\n      simCloudManager.simGetSolrClient().request(moveReplica);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSimulatorFromSnapshot() throws Exception {\n    Path tmpPath = createTempDir();\n    File tmpDir = tmpPath.toFile();\n    SnapshotCloudManager snapshotCloudManager = new SnapshotCloudManager(realManager, null);\n    snapshotCloudManager.saveSnapshot(tmpDir, true);\n    SnapshotCloudManager snapshotCloudManager1 = SnapshotCloudManager.readSnapshot(tmpDir);\n    try (SimCloudManager simCloudManager = SimCloudManager.createCluster(snapshotCloudManager1, null, TimeSource.get(\"simTime:50\"))) {\n      SimSolrCloudTestCase.assertClusterStateEquals(snapshotCloudManager.getClusterStateProvider().getClusterState(), simCloudManager.getClusterStateProvider().getClusterState());\n      assertNodeStateProvider(snapshotCloudManager, simCloudManager);\n      assertDistribStateManager(snapshotCloudManager.getDistribStateManager(), simCloudManager.getDistribStateManager());\n      ClusterState state = simCloudManager.getClusterStateProvider().getClusterState();\n      Replica r = state.getCollection(CollectionAdminParams.SYSTEM_COLL).getReplicas().get(0);\n      // get another node\n      String target = null;\n      for (String node : simCloudManager.getClusterStateProvider().getLiveNodes()) {\n        if (!node.equals(r.getNodeName())) {\n          target = node;\n          break;\n        }\n      }\n      if (target == null) {\n        fail(\"can't find suitable target node for replica \" + r + \", liveNodes=\" + simCloudManager.getClusterStateProvider().getLiveNodes());\n      }\n      CollectionAdminRequest.MoveReplica moveReplica = CollectionAdminRequest\n          .moveReplica(CollectionAdminParams.SYSTEM_COLL, r.getName(), target);\n      log.info(\"################\");\n      simCloudManager.simGetSolrClient().request(moveReplica);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8c3ddfa4f113c432082f4675e60b22af8b988a7","date":1568841738,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSnapshotCloudManager#testSimulatorFromSnapshot().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSnapshotCloudManager#testSimulatorFromSnapshot().mjava","sourceNew":"  @Test\n  public void testSimulatorFromSnapshot() throws Exception {\n    Path tmpPath = createTempDir();\n    File tmpDir = tmpPath.toFile();\n    SnapshotCloudManager snapshotCloudManager = new SnapshotCloudManager(realManager, null);\n    snapshotCloudManager.saveSnapshot(tmpDir, true, false);\n    SnapshotCloudManager snapshotCloudManager1 = SnapshotCloudManager.readSnapshot(tmpDir);\n    try (SimCloudManager simCloudManager = SimCloudManager.createCluster(snapshotCloudManager1, null, TimeSource.get(\"simTime:50\"))) {\n      SimSolrCloudTestCase.assertClusterStateEquals(snapshotCloudManager.getClusterStateProvider().getClusterState(), simCloudManager.getClusterStateProvider().getClusterState());\n      assertNodeStateProvider(snapshotCloudManager, simCloudManager, \"freedisk\");\n      assertDistribStateManager(snapshotCloudManager.getDistribStateManager(), simCloudManager.getDistribStateManager());\n      ClusterState state = simCloudManager.getClusterStateProvider().getClusterState();\n      Replica r = state.getCollection(CollectionAdminParams.SYSTEM_COLL).getReplicas().get(0);\n      // get another node\n      String target = null;\n      for (String node : simCloudManager.getClusterStateProvider().getLiveNodes()) {\n        if (!node.equals(r.getNodeName())) {\n          target = node;\n          break;\n        }\n      }\n      if (target == null) {\n        fail(\"can't find suitable target node for replica \" + r + \", liveNodes=\" + simCloudManager.getClusterStateProvider().getLiveNodes());\n      }\n      CollectionAdminRequest.MoveReplica moveReplica = CollectionAdminRequest\n          .moveReplica(CollectionAdminParams.SYSTEM_COLL, r.getName(), target);\n      log.info(\"################\");\n      simCloudManager.simGetSolrClient().request(moveReplica);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSimulatorFromSnapshot() throws Exception {\n    Path tmpPath = createTempDir();\n    File tmpDir = tmpPath.toFile();\n    SnapshotCloudManager snapshotCloudManager = new SnapshotCloudManager(realManager, null);\n    snapshotCloudManager.saveSnapshot(tmpDir, true, false);\n    SnapshotCloudManager snapshotCloudManager1 = SnapshotCloudManager.readSnapshot(tmpDir);\n    try (SimCloudManager simCloudManager = SimCloudManager.createCluster(snapshotCloudManager1, null, TimeSource.get(\"simTime:50\"))) {\n      SimSolrCloudTestCase.assertClusterStateEquals(snapshotCloudManager.getClusterStateProvider().getClusterState(), simCloudManager.getClusterStateProvider().getClusterState());\n      assertNodeStateProvider(snapshotCloudManager, simCloudManager);\n      assertDistribStateManager(snapshotCloudManager.getDistribStateManager(), simCloudManager.getDistribStateManager());\n      ClusterState state = simCloudManager.getClusterStateProvider().getClusterState();\n      Replica r = state.getCollection(CollectionAdminParams.SYSTEM_COLL).getReplicas().get(0);\n      // get another node\n      String target = null;\n      for (String node : simCloudManager.getClusterStateProvider().getLiveNodes()) {\n        if (!node.equals(r.getNodeName())) {\n          target = node;\n          break;\n        }\n      }\n      if (target == null) {\n        fail(\"can't find suitable target node for replica \" + r + \", liveNodes=\" + simCloudManager.getClusterStateProvider().getLiveNodes());\n      }\n      CollectionAdminRequest.MoveReplica moveReplica = CollectionAdminRequest\n          .moveReplica(CollectionAdminParams.SYSTEM_COLL, r.getName(), target);\n      log.info(\"################\");\n      simCloudManager.simGetSolrClient().request(moveReplica);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSnapshotCloudManager#testSimulatorFromSnapshot().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testSimulatorFromSnapshot() throws Exception {\n    Path tmpPath = createTempDir();\n    File tmpDir = tmpPath.toFile();\n    SnapshotCloudManager snapshotCloudManager = new SnapshotCloudManager(realManager, null);\n    snapshotCloudManager.saveSnapshot(tmpDir, true, false);\n    SnapshotCloudManager snapshotCloudManager1 = SnapshotCloudManager.readSnapshot(tmpDir);\n    try (SimCloudManager simCloudManager = SimCloudManager.createCluster(snapshotCloudManager1, null, TimeSource.get(\"simTime:50\"))) {\n      SimSolrCloudTestCase.assertClusterStateEquals(snapshotCloudManager.getClusterStateProvider().getClusterState(), simCloudManager.getClusterStateProvider().getClusterState());\n      assertNodeStateProvider(snapshotCloudManager, simCloudManager, \"freedisk\");\n      assertDistribStateManager(snapshotCloudManager.getDistribStateManager(), simCloudManager.getDistribStateManager());\n      ClusterState state = simCloudManager.getClusterStateProvider().getClusterState();\n      Replica r = state.getCollection(CollectionAdminParams.SYSTEM_COLL).getReplicas().get(0);\n      // get another node\n      String target = null;\n      for (String node : simCloudManager.getClusterStateProvider().getLiveNodes()) {\n        if (!node.equals(r.getNodeName())) {\n          target = node;\n          break;\n        }\n      }\n      if (target == null) {\n        fail(\"can't find suitable target node for replica \" + r + \", liveNodes=\" + simCloudManager.getClusterStateProvider().getLiveNodes());\n      }\n      CollectionAdminRequest.MoveReplica moveReplica = CollectionAdminRequest\n          .moveReplica(CollectionAdminParams.SYSTEM_COLL, r.getName(), target);\n      log.info(\"################\");\n      simCloudManager.simGetSolrClient().request(moveReplica);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3d2a34ea3732f91149b31bcad82026ad85fda69":["cb2411226bebe23191dc34a8e8252a936a7261a8"],"cb2411226bebe23191dc34a8e8252a936a7261a8":["edf5b262a72d10530eb2f01dc8f19060355b213e"],"3f504512a03d978990cbff30db0522b354e846db":["c8c3ddfa4f113c432082f4675e60b22af8b988a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c8c3ddfa4f113c432082f4675e60b22af8b988a7":["d3d2a34ea3732f91149b31bcad82026ad85fda69"],"edf5b262a72d10530eb2f01dc8f19060355b213e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"d3d2a34ea3732f91149b31bcad82026ad85fda69":["c8c3ddfa4f113c432082f4675e60b22af8b988a7"],"cb2411226bebe23191dc34a8e8252a936a7261a8":["d3d2a34ea3732f91149b31bcad82026ad85fda69"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["edf5b262a72d10530eb2f01dc8f19060355b213e"],"edf5b262a72d10530eb2f01dc8f19060355b213e":["cb2411226bebe23191dc34a8e8252a936a7261a8"],"c8c3ddfa4f113c432082f4675e60b22af8b988a7":["3f504512a03d978990cbff30db0522b354e846db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}