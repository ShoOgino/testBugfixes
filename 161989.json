{"path":"lucene/src/test/org/apache/lucene/index/TestTermsEnum#makeIndex(String...).mjava","commits":[{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermsEnum#makeIndex(String...).mjava","pathOld":"/dev/null","sourceNew":"  private IndexReader makeIndex(String... terms) throws Exception {\n    d = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    /*\n    CoreCodecProvider cp = new CoreCodecProvider();    \n    cp.unregister(cp.lookup(\"Standard\"));\n    cp.register(new StandardCodec(minTermsInBlock, maxTermsInBlock));\n    cp.setDefaultFieldCodec(\"Standard\");\n    iwc.setCodecProvider(cp);\n    */\n\n    final RandomIndexWriter w = new RandomIndexWriter(random, d, iwc);\n    w.w.setInfoStream(VERBOSE ? System.out : null);\n    for(String term : terms) {\n      Document doc = new Document();\n      Field f = newField(FIELD, term, Field.Index.NOT_ANALYZED_NO_NORMS);\n      doc.add(f);\n      w.addDocument(doc);\n    }\n    if (r != null) {\n      close();\n    }\n    r = w.getReader();\n    w.close();\n    return r;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermsEnum#makeIndex(String...).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermsEnum#makeIndex(String...).mjava","sourceNew":"  private IndexReader makeIndex(String... terms) throws Exception {\n    d = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    /*\n    CoreCodecProvider cp = new CoreCodecProvider();    \n    cp.unregister(cp.lookup(\"Standard\"));\n    cp.register(new StandardCodec(minTermsInBlock, maxTermsInBlock));\n    cp.setDefaultFieldCodec(\"Standard\");\n    iwc.setCodecProvider(cp);\n    */\n\n    final RandomIndexWriter w = new RandomIndexWriter(random, d, iwc);\n    w.w.setInfoStream(VERBOSE ? System.out : null);\n    for(String term : terms) {\n      Document doc = new Document();\n      Field f = newField(FIELD, term, StringField.TYPE_UNSTORED);\n      doc.add(f);\n      w.addDocument(doc);\n    }\n    if (r != null) {\n      close();\n    }\n    r = w.getReader();\n    w.close();\n    return r;\n  }\n\n","sourceOld":"  private IndexReader makeIndex(String... terms) throws Exception {\n    d = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    /*\n    CoreCodecProvider cp = new CoreCodecProvider();    \n    cp.unregister(cp.lookup(\"Standard\"));\n    cp.register(new StandardCodec(minTermsInBlock, maxTermsInBlock));\n    cp.setDefaultFieldCodec(\"Standard\");\n    iwc.setCodecProvider(cp);\n    */\n\n    final RandomIndexWriter w = new RandomIndexWriter(random, d, iwc);\n    w.w.setInfoStream(VERBOSE ? System.out : null);\n    for(String term : terms) {\n      Document doc = new Document();\n      Field f = newField(FIELD, term, Field.Index.NOT_ANALYZED_NO_NORMS);\n      doc.add(f);\n      w.addDocument(doc);\n    }\n    if (r != null) {\n      close();\n    }\n    r = w.getReader();\n    w.close();\n    return r;\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermsEnum#makeIndex(String...).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermsEnum#makeIndex(String...).mjava","sourceNew":"  private IndexReader makeIndex(String... terms) throws Exception {\n    d = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    /*\n    iwc.setCodec(new StandardCodec(minTermsInBlock, maxTermsInBlock));\n    */\n\n    final RandomIndexWriter w = new RandomIndexWriter(random, d, iwc);\n    w.w.setInfoStream(VERBOSE ? System.out : null);\n    for(String term : terms) {\n      Document doc = new Document();\n      Field f = newField(FIELD, term, StringField.TYPE_UNSTORED);\n      doc.add(f);\n      w.addDocument(doc);\n    }\n    if (r != null) {\n      close();\n    }\n    r = w.getReader();\n    w.close();\n    return r;\n  }\n\n","sourceOld":"  private IndexReader makeIndex(String... terms) throws Exception {\n    d = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    /*\n    CoreCodecProvider cp = new CoreCodecProvider();    \n    cp.unregister(cp.lookup(\"Standard\"));\n    cp.register(new StandardCodec(minTermsInBlock, maxTermsInBlock));\n    cp.setDefaultFieldCodec(\"Standard\");\n    iwc.setCodecProvider(cp);\n    */\n\n    final RandomIndexWriter w = new RandomIndexWriter(random, d, iwc);\n    w.w.setInfoStream(VERBOSE ? System.out : null);\n    for(String term : terms) {\n      Document doc = new Document();\n      Field f = newField(FIELD, term, StringField.TYPE_UNSTORED);\n      doc.add(f);\n      w.addDocument(doc);\n    }\n    if (r != null) {\n      close();\n    }\n    r = w.getReader();\n    w.close();\n    return r;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermsEnum#makeIndex(String...).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermsEnum#makeIndex(String...).mjava","sourceNew":"  private IndexReader makeIndex(String... terms) throws Exception {\n    d = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    /*\n    iwc.setCodec(new StandardCodec(minTermsInBlock, maxTermsInBlock));\n    */\n\n    final RandomIndexWriter w = new RandomIndexWriter(random, d, iwc);\n    for(String term : terms) {\n      Document doc = new Document();\n      Field f = newField(FIELD, term, StringField.TYPE_UNSTORED);\n      doc.add(f);\n      w.addDocument(doc);\n    }\n    if (r != null) {\n      close();\n    }\n    r = w.getReader();\n    w.close();\n    return r;\n  }\n\n","sourceOld":"  private IndexReader makeIndex(String... terms) throws Exception {\n    d = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    /*\n    iwc.setCodec(new StandardCodec(minTermsInBlock, maxTermsInBlock));\n    */\n\n    final RandomIndexWriter w = new RandomIndexWriter(random, d, iwc);\n    w.w.setInfoStream(VERBOSE ? System.out : null);\n    for(String term : terms) {\n      Document doc = new Document();\n      Field f = newField(FIELD, term, StringField.TYPE_UNSTORED);\n      doc.add(f);\n      w.addDocument(doc);\n    }\n    if (r != null) {\n      close();\n    }\n    r = w.getReader();\n    w.close();\n    return r;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#makeIndex(String...).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermsEnum#makeIndex(String...).mjava","sourceNew":"  private IndexReader makeIndex(String... terms) throws Exception {\n    d = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    /*\n    iwc.setCodec(new StandardCodec(minTermsInBlock, maxTermsInBlock));\n    */\n\n    final RandomIndexWriter w = new RandomIndexWriter(random, d, iwc);\n    for(String term : terms) {\n      Document doc = new Document();\n      Field f = newField(FIELD, term, StringField.TYPE_UNSTORED);\n      doc.add(f);\n      w.addDocument(doc);\n    }\n    if (r != null) {\n      close();\n    }\n    r = w.getReader();\n    w.close();\n    return r;\n  }\n\n","sourceOld":"  private IndexReader makeIndex(String... terms) throws Exception {\n    d = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    /*\n    iwc.setCodec(new StandardCodec(minTermsInBlock, maxTermsInBlock));\n    */\n\n    final RandomIndexWriter w = new RandomIndexWriter(random, d, iwc);\n    for(String term : terms) {\n      Document doc = new Document();\n      Field f = newField(FIELD, term, StringField.TYPE_UNSTORED);\n      doc.add(f);\n      w.addDocument(doc);\n    }\n    if (r != null) {\n      close();\n    }\n    r = w.getReader();\n    w.close();\n    return r;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7b91922b55d15444d554721b352861d028eb8278":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["06584e6e98d592b34e1329b384182f368d2025e8"],"06584e6e98d592b34e1329b384182f368d2025e8":["7b91922b55d15444d554721b352861d028eb8278"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"7b91922b55d15444d554721b352861d028eb8278":["06584e6e98d592b34e1329b384182f368d2025e8"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06584e6e98d592b34e1329b384182f368d2025e8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}