{"path":"lucene/core/src/test/org/apache/lucene/store/TestDirectory#testDetectClose().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestDirectory#testDetectClose().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestDirectory#testDetectClose().mjava","sourceNew":"  public void testDetectClose() throws Throwable {\n    Directory[] dirs = new Directory[] { new RAMDirectory(), new SimpleFSDirectory(TEMP_DIR), new NIOFSDirectory(TEMP_DIR) };\n    for (Directory dir : dirs) {\n      dir.close();\n      try {\n        dir.createOutput(\"test\", newIOContext(random));\n        fail(\"did not hit expected exception\");\n      } catch (AlreadyClosedException ace) {\n      }\n    }\n  }\n\n","sourceOld":"  public void testDetectClose() throws Throwable {\n    Directory[] dirs = new Directory[] { new RAMDirectory(), new SimpleFSDirectory(TEMP_DIR), new NIOFSDirectory(TEMP_DIR) };\n    for (Directory dir : dirs) {\n      dir.close();\n      try {\n        dir.createOutput(\"test\", newIOContext(random));\n        fail(\"did not hit expected exception\");\n      } catch (AlreadyClosedException ace) {\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestDirectory#testDetectClose().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestDirectory#testDetectClose().mjava","sourceNew":"  public void testDetectClose() throws Throwable {\n    Directory[] dirs = new Directory[] { new RAMDirectory(), new SimpleFSDirectory(TEMP_DIR), new NIOFSDirectory(TEMP_DIR) };\n    for (Directory dir : dirs) {\n      dir.close();\n      try {\n        dir.createOutput(\"test\", newIOContext(random()));\n        fail(\"did not hit expected exception\");\n      } catch (AlreadyClosedException ace) {\n      }\n    }\n  }\n\n","sourceOld":"  public void testDetectClose() throws Throwable {\n    Directory[] dirs = new Directory[] { new RAMDirectory(), new SimpleFSDirectory(TEMP_DIR), new NIOFSDirectory(TEMP_DIR) };\n    for (Directory dir : dirs) {\n      dir.close();\n      try {\n        dir.createOutput(\"test\", newIOContext(random));\n        fail(\"did not hit expected exception\");\n      } catch (AlreadyClosedException ace) {\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5da0b42730b6b99b31389ef94cb97384e83b9ede","date":1337107665,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestDirectory#testDetectClose().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestDirectory#testDetectClose().mjava","sourceNew":"  public void testDetectClose() throws Throwable {\n    Directory[] dirs = new Directory[] { \n        new RAMDirectory(), \n        new SimpleFSDirectory(TEMP_DIR), \n        new NIOFSDirectory(TEMP_DIR)\n    };\n\n    for (Directory dir : dirs) {\n      dir.close();\n      try {\n        dir.createOutput(\"test\", newIOContext(random()));\n        fail(\"did not hit expected exception\");\n      } catch (AlreadyClosedException ace) {\n      }\n    }\n  }\n\n","sourceOld":"  public void testDetectClose() throws Throwable {\n    Directory[] dirs = new Directory[] { new RAMDirectory(), new SimpleFSDirectory(TEMP_DIR), new NIOFSDirectory(TEMP_DIR) };\n    for (Directory dir : dirs) {\n      dir.close();\n      try {\n        dir.createOutput(\"test\", newIOContext(random()));\n        fail(\"did not hit expected exception\");\n      } catch (AlreadyClosedException ace) {\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestDirectory#testDetectClose().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestDirectory#testDetectClose().mjava","sourceNew":"  public void testDetectClose() throws Throwable {\n    File tempDir = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n    Directory[] dirs = new Directory[] { \n        new RAMDirectory(), \n        new SimpleFSDirectory(tempDir), \n        new NIOFSDirectory(tempDir)\n    };\n\n    for (Directory dir : dirs) {\n      dir.close();\n      try {\n        dir.createOutput(\"test\", newIOContext(random()));\n        fail(\"did not hit expected exception\");\n      } catch (AlreadyClosedException ace) {\n      }\n    }\n  }\n\n","sourceOld":"  public void testDetectClose() throws Throwable {\n    Directory[] dirs = new Directory[] { \n        new RAMDirectory(), \n        new SimpleFSDirectory(TEMP_DIR), \n        new NIOFSDirectory(TEMP_DIR)\n    };\n\n    for (Directory dir : dirs) {\n      dir.close();\n      try {\n        dir.createOutput(\"test\", newIOContext(random()));\n        fail(\"did not hit expected exception\");\n      } catch (AlreadyClosedException ace) {\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c","date":1396633078,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestDirectory#testDetectClose().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestDirectory#testDetectClose().mjava","sourceNew":"  public void testDetectClose() throws Throwable {\n    File tempDir = createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n    Directory[] dirs = new Directory[] { \n        new RAMDirectory(), \n        new SimpleFSDirectory(tempDir), \n        new NIOFSDirectory(tempDir)\n    };\n\n    for (Directory dir : dirs) {\n      dir.close();\n      try {\n        dir.createOutput(\"test\", newIOContext(random()));\n        fail(\"did not hit expected exception\");\n      } catch (AlreadyClosedException ace) {\n      }\n    }\n  }\n\n","sourceOld":"  public void testDetectClose() throws Throwable {\n    File tempDir = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n    Directory[] dirs = new Directory[] { \n        new RAMDirectory(), \n        new SimpleFSDirectory(tempDir), \n        new NIOFSDirectory(tempDir)\n    };\n\n    for (Directory dir : dirs) {\n      dir.close();\n      try {\n        dir.createOutput(\"test\", newIOContext(random()));\n        fail(\"did not hit expected exception\");\n      } catch (AlreadyClosedException ace) {\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestDirectory#testDetectClose().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestDirectory#testDetectClose().mjava","sourceNew":"  public void testDetectClose() throws Throwable {\n    File tempDir = createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n    Directory[] dirs = new Directory[] { \n        new RAMDirectory(), \n        new SimpleFSDirectory(tempDir), \n        new NIOFSDirectory(tempDir)\n    };\n\n    for (Directory dir : dirs) {\n      dir.close();\n      try {\n        dir.createOutput(\"test\", newIOContext(random()));\n        fail(\"did not hit expected exception\");\n      } catch (AlreadyClosedException ace) {\n      }\n    }\n  }\n\n","sourceOld":"  public void testDetectClose() throws Throwable {\n    Directory[] dirs = new Directory[] { \n        new RAMDirectory(), \n        new SimpleFSDirectory(TEMP_DIR), \n        new NIOFSDirectory(TEMP_DIR)\n    };\n\n    for (Directory dir : dirs) {\n      dir.close();\n      try {\n        dir.createOutput(\"test\", newIOContext(random()));\n        fail(\"did not hit expected exception\");\n      } catch (AlreadyClosedException ace) {\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c15a75016387504d70a40cba6e9314b8885307f0","date":1397542349,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestDirectory#testDetectClose().mjava","sourceNew":null,"sourceOld":"  public void testDetectClose() throws Throwable {\n    File tempDir = createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n    Directory[] dirs = new Directory[] { \n        new RAMDirectory(), \n        new SimpleFSDirectory(tempDir), \n        new NIOFSDirectory(tempDir)\n    };\n\n    for (Directory dir : dirs) {\n      dir.close();\n      try {\n        dir.createOutput(\"test\", newIOContext(random()));\n        fail(\"did not hit expected exception\");\n      } catch (AlreadyClosedException ace) {\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["5da0b42730b6b99b31389ef94cb97384e83b9ede","a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["d0d579490a72f2e6297eaa648940611234c57cf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c15a75016387504d70a40cba6e9314b8885307f0":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0d579490a72f2e6297eaa648940611234c57cf1":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c15a75016387504d70a40cba6e9314b8885307f0"]},"commit2Childs":{"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["c15a75016387504d70a40cba6e9314b8885307f0"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","d0d579490a72f2e6297eaa648940611234c57cf1"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c15a75016387504d70a40cba6e9314b8885307f0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"d0d579490a72f2e6297eaa648940611234c57cf1":["a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}