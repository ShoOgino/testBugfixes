{"path":"lucene/src/test/org/apache/lucene/search/TestExplanations#beforeClassTestExplanations().mjava","commits":[{"id":"6e93e8251fcc355b1ed7d79aaff249c2ae40ba71","date":1309295333,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestExplanations#beforeClassTestExplanations().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestExplanations#setUp().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random, directory, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(KEY, \"\"+i, Field.Store.NO, Field.Index.NOT_ANALYZED));\n      Field f = newField(FIELD, docFields[i], Field.Store.NO, Field.Index.ANALYZED);\n      f.setBoost(i);\n      doc.add(f);\n      doc.add(newField(ALTFIELD, docFields[i], Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random, directory, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(KEY, \"\"+i, Field.Store.NO, Field.Index.NOT_ANALYZED));\n      Field f = newField(FIELD, docFields[i], Field.Store.NO, Field.Index.ANALYZED);\n      f.setBoost(i);\n      doc.add(f);\n      doc.add(newField(ALTFIELD, docFields[i], Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestExplanations#beforeClassTestExplanations().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random, directory, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(KEY, \"\"+i, Field.Store.NO, Field.Index.NOT_ANALYZED));\n      Field f = newField(FIELD, docFields[i], Field.Store.NO, Field.Index.ANALYZED);\n      f.setBoost(i);\n      doc.add(f);\n      doc.add(newField(ALTFIELD, docFields[i], Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestExplanations#beforeClassTestExplanations().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random, directory, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(KEY, \"\"+i, Field.Store.NO, Field.Index.NOT_ANALYZED));\n      Field f = newField(FIELD, docFields[i], Field.Store.NO, Field.Index.ANALYZED);\n      f.setBoost(i);\n      doc.add(f);\n      doc.add(newField(ALTFIELD, docFields[i], Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestExplanations#beforeClassTestExplanations().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestExplanations#beforeClassTestExplanations().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random, directory, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(KEY, \"\"+i, StringField.TYPE_UNSTORED));\n      Field f = newField(FIELD, docFields[i], TextField.TYPE_UNSTORED);\n      f.setBoost(i);\n      doc.add(f);\n      doc.add(newField(ALTFIELD, docFields[i], TextField.TYPE_UNSTORED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random, directory, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(KEY, \"\"+i, Field.Store.NO, Field.Index.NOT_ANALYZED));\n      Field f = newField(FIELD, docFields[i], Field.Store.NO, Field.Index.ANALYZED);\n      f.setBoost(i);\n      doc.add(f);\n      doc.add(newField(ALTFIELD, docFields[i], Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestExplanations#beforeClassTestExplanations().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestExplanations#beforeClassTestExplanations().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random, directory, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(KEY, \"\"+i, StringField.TYPE_UNSTORED));\n      Field f = newField(FIELD, docFields[i], TextField.TYPE_UNSTORED);\n      f.setBoost(i);\n      doc.add(f);\n      doc.add(newField(ALTFIELD, docFields[i], TextField.TYPE_UNSTORED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random, directory, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(KEY, \"\"+i, StringField.TYPE_UNSTORED));\n      Field f = newField(FIELD, docFields[i], TextField.TYPE_UNSTORED);\n      f.setBoost(i);\n      doc.add(f);\n      doc.add(newField(ALTFIELD, docFields[i], TextField.TYPE_UNSTORED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"6e93e8251fcc355b1ed7d79aaff249c2ae40ba71":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["6e93e8251fcc355b1ed7d79aaff249c2ae40ba71"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6e93e8251fcc355b1ed7d79aaff249c2ae40ba71"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6e93e8251fcc355b1ed7d79aaff249c2ae40ba71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6e93e8251fcc355b1ed7d79aaff249c2ae40ba71":["1509f151d7692d84fae414b2b799ac06ba60fcb4","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e93e8251fcc355b1ed7d79aaff249c2ae40ba71","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}