{"path":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectoryCache#update(String,long,int,byte[],int,int).mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectoryCache#update(String,long,int,byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void update(String name, long blockId, int blockOffset, byte[] buffer,\n      int offset, int length) {\n    Integer file = names.get(name);\n    if (file == null) {\n      file = counter.incrementAndGet();\n      names.put(name, file);\n    }\n    BlockCacheKey blockCacheKey = new BlockCacheKey();\n    blockCacheKey.setBlock(blockId);\n    blockCacheKey.setFile(file);\n    blockCache.store(blockCacheKey, blockOffset, buffer, offset, length);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectoryCache#update(String,long,int,byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void update(String name, long blockId, int blockOffset, byte[] buffer,\n      int offset, int length) {\n    Integer file = names.get(name);\n    if (file == null) {\n      file = counter.incrementAndGet();\n      names.put(name, file);\n    }\n    BlockCacheKey blockCacheKey = new BlockCacheKey();\n    blockCacheKey.setBlock(blockId);\n    blockCacheKey.setFile(file);\n    blockCache.store(blockCacheKey, blockOffset, buffer, offset, length);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19389fe47925b510b2811e2b385a75f7ad19dcca","date":1393903127,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectoryCache#update(String,long,int,byte[],int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectoryCache#update(String,long,int,byte[],int,int).mjava","sourceNew":"  @Override\n  public void update(String name, long blockId, int blockOffset, byte[] buffer,\n      int offset, int length) {\n    Integer file = names.get(name);\n    if (file == null) {\n      file = counter.incrementAndGet();\n      names.put(name, file);\n    }\n    BlockCacheKey blockCacheKey = new BlockCacheKey();\n    blockCacheKey.setPath(path);\n    blockCacheKey.setBlock(blockId);\n    blockCacheKey.setFile(file);\n    blockCache.store(blockCacheKey, blockOffset, buffer, offset, length);\n  }\n\n","sourceOld":"  @Override\n  public void update(String name, long blockId, int blockOffset, byte[] buffer,\n      int offset, int length) {\n    Integer file = names.get(name);\n    if (file == null) {\n      file = counter.incrementAndGet();\n      names.put(name, file);\n    }\n    BlockCacheKey blockCacheKey = new BlockCacheKey();\n    blockCacheKey.setBlock(blockId);\n    blockCacheKey.setFile(file);\n    blockCache.store(blockCacheKey, blockOffset, buffer, offset, length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96ea64d994d340044e0d57aeb6a5871539d10ca5","date":1394225445,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectoryCache#update(String,long,int,byte[],int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectoryCache#update(String,long,int,byte[],int,int).mjava","sourceNew":"  @Override\n  public void update(String name, long blockId, int blockOffset, byte[] buffer,\n      int offset, int length) {\n    Integer file = names.get(name);\n    if (file == null) {\n      file = counter.incrementAndGet();\n      names.put(name, file);\n    }\n    BlockCacheKey blockCacheKey = new BlockCacheKey();\n    blockCacheKey.setPath(path);\n    blockCacheKey.setBlock(blockId);\n    blockCacheKey.setFile(file);\n    blockCache.store(blockCacheKey, blockOffset, buffer, offset, length);\n  }\n\n","sourceOld":"  @Override\n  public void update(String name, long blockId, int blockOffset, byte[] buffer,\n      int offset, int length) {\n    Integer file = names.get(name);\n    if (file == null) {\n      file = counter.incrementAndGet();\n      names.put(name, file);\n    }\n    BlockCacheKey blockCacheKey = new BlockCacheKey();\n    blockCacheKey.setBlock(blockId);\n    blockCacheKey.setFile(file);\n    blockCache.store(blockCacheKey, blockOffset, buffer, offset, length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d29d666b8eaa2fe8efe1e0d42fc8e32876d7294","date":1408633409,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectoryCache#update(String,long,int,byte[],int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectoryCache#update(String,long,int,byte[],int,int).mjava","sourceNew":"  @Override\n  public void update(String name, long blockId, int blockOffset, byte[] buffer,\n      int offset, int length) {\n    Integer file = names.get(name);\n    if (file == null) {\n      file = counter.incrementAndGet();\n      names.put(name, file);\n    }\n    BlockCacheKey blockCacheKey = new BlockCacheKey();\n    blockCacheKey.setPath(path);\n    blockCacheKey.setBlock(blockId);\n    blockCacheKey.setFile(file);\n    blockCache.store(blockCacheKey, blockOffset, buffer, offset, length);\n    if (keys != null) {\n      keys.add(blockCacheKey);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void update(String name, long blockId, int blockOffset, byte[] buffer,\n      int offset, int length) {\n    Integer file = names.get(name);\n    if (file == null) {\n      file = counter.incrementAndGet();\n      names.put(name, file);\n    }\n    BlockCacheKey blockCacheKey = new BlockCacheKey();\n    blockCacheKey.setPath(path);\n    blockCacheKey.setBlock(blockId);\n    blockCacheKey.setFile(file);\n    blockCache.store(blockCacheKey, blockOffset, buffer, offset, length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30a091743c8f1f29cd42a9c91a594277881e51b4","date":1408922793,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectoryCache#update(String,long,int,byte[],int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectoryCache#update(String,long,int,byte[],int,int).mjava","sourceNew":"  @Override\n  public void update(String name, long blockId, int blockOffset, byte[] buffer,\n      int offset, int length) {\n    Integer file = names.get(name);\n    if (file == null) {\n      file = counter.incrementAndGet();\n      names.put(name, file);\n    }\n    BlockCacheKey blockCacheKey = new BlockCacheKey();\n    blockCacheKey.setPath(path);\n    blockCacheKey.setBlock(blockId);\n    blockCacheKey.setFile(file);\n    if (blockCache.store(blockCacheKey, blockOffset, buffer, offset, length) && keysToRelease != null) {\n      keysToRelease.add(blockCacheKey);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void update(String name, long blockId, int blockOffset, byte[] buffer,\n      int offset, int length) {\n    Integer file = names.get(name);\n    if (file == null) {\n      file = counter.incrementAndGet();\n      names.put(name, file);\n    }\n    BlockCacheKey blockCacheKey = new BlockCacheKey();\n    blockCacheKey.setPath(path);\n    blockCacheKey.setBlock(blockId);\n    blockCacheKey.setFile(file);\n    blockCache.store(blockCacheKey, blockOffset, buffer, offset, length);\n    if (keys != null) {\n      keys.add(blockCacheKey);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1c058cf6636d4738330f52c3b56f52c0aa8fcc9","date":1479205115,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectoryCache#update(String,long,int,byte[],int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectoryCache#update(String,long,int,byte[],int,int).mjava","sourceNew":"  @Override\n  public void update(String name, long blockId, int blockOffset, byte[] buffer,\n      int offset, int length) {\n    Integer file = names.getIfPresent(name);\n    if (file == null) {\n      file = counter.incrementAndGet();\n      names.put(name, file);\n    }\n    BlockCacheKey blockCacheKey = new BlockCacheKey();\n    blockCacheKey.setPath(path);\n    blockCacheKey.setBlock(blockId);\n    blockCacheKey.setFile(file);\n    if (blockCache.store(blockCacheKey, blockOffset, buffer, offset, length) && keysToRelease != null) {\n      keysToRelease.add(blockCacheKey);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void update(String name, long blockId, int blockOffset, byte[] buffer,\n      int offset, int length) {\n    Integer file = names.get(name);\n    if (file == null) {\n      file = counter.incrementAndGet();\n      names.put(name, file);\n    }\n    BlockCacheKey blockCacheKey = new BlockCacheKey();\n    blockCacheKey.setPath(path);\n    blockCacheKey.setBlock(blockId);\n    blockCacheKey.setFile(file);\n    if (blockCache.store(blockCacheKey, blockOffset, buffer, offset, length) && keysToRelease != null) {\n      keysToRelease.add(blockCacheKey);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21019aa828c8c9b0153877543a8b3f200bf2ca19","date":1479224450,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectoryCache#update(String,long,int,byte[],int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectoryCache#update(String,long,int,byte[],int,int).mjava","sourceNew":"  @Override\n  public void update(String name, long blockId, int blockOffset, byte[] buffer,\n      int offset, int length) {\n    Integer file = names.getIfPresent(name);\n    if (file == null) {\n      file = counter.incrementAndGet();\n      names.put(name, file);\n    }\n    BlockCacheKey blockCacheKey = new BlockCacheKey();\n    blockCacheKey.setPath(path);\n    blockCacheKey.setBlock(blockId);\n    blockCacheKey.setFile(file);\n    if (blockCache.store(blockCacheKey, blockOffset, buffer, offset, length) && keysToRelease != null) {\n      keysToRelease.add(blockCacheKey);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void update(String name, long blockId, int blockOffset, byte[] buffer,\n      int offset, int length) {\n    Integer file = names.get(name);\n    if (file == null) {\n      file = counter.incrementAndGet();\n      names.put(name, file);\n    }\n    BlockCacheKey blockCacheKey = new BlockCacheKey();\n    blockCacheKey.setPath(path);\n    blockCacheKey.setBlock(blockId);\n    blockCacheKey.setFile(file);\n    if (blockCache.store(blockCacheKey, blockOffset, buffer, offset, length) && keysToRelease != null) {\n      keysToRelease.add(blockCacheKey);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"19389fe47925b510b2811e2b385a75f7ad19dcca":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0d29d666b8eaa2fe8efe1e0d42fc8e32876d7294":["19389fe47925b510b2811e2b385a75f7ad19dcca"],"96ea64d994d340044e0d57aeb6a5871539d10ca5":["849494cf2f3a96af5c8c84995108ddd8456fcd04","19389fe47925b510b2811e2b385a75f7ad19dcca"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"21019aa828c8c9b0153877543a8b3f200bf2ca19":["30a091743c8f1f29cd42a9c91a594277881e51b4","e1c058cf6636d4738330f52c3b56f52c0aa8fcc9"],"e1c058cf6636d4738330f52c3b56f52c0aa8fcc9":["30a091743c8f1f29cd42a9c91a594277881e51b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30a091743c8f1f29cd42a9c91a594277881e51b4":["0d29d666b8eaa2fe8efe1e0d42fc8e32876d7294"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e1c058cf6636d4738330f52c3b56f52c0aa8fcc9"]},"commit2Childs":{"19389fe47925b510b2811e2b385a75f7ad19dcca":["0d29d666b8eaa2fe8efe1e0d42fc8e32876d7294","96ea64d994d340044e0d57aeb6a5871539d10ca5"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["19389fe47925b510b2811e2b385a75f7ad19dcca","96ea64d994d340044e0d57aeb6a5871539d10ca5","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"0d29d666b8eaa2fe8efe1e0d42fc8e32876d7294":["30a091743c8f1f29cd42a9c91a594277881e51b4"],"96ea64d994d340044e0d57aeb6a5871539d10ca5":[],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"21019aa828c8c9b0153877543a8b3f200bf2ca19":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["849494cf2f3a96af5c8c84995108ddd8456fcd04","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"e1c058cf6636d4738330f52c3b56f52c0aa8fcc9":["21019aa828c8c9b0153877543a8b3f200bf2ca19","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"30a091743c8f1f29cd42a9c91a594277881e51b4":["21019aa828c8c9b0153877543a8b3f200bf2ca19","e1c058cf6636d4738330f52c3b56f52c0aa8fcc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["96ea64d994d340044e0d57aeb6a5871539d10ca5","37a0f60745e53927c4c876cfe5b5a58170f0646c","21019aa828c8c9b0153877543a8b3f200bf2ca19","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}