{"path":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#DirectFields(SegmentReadState,Fields,int,int).mjava","commits":[{"id":"172cf08877d0e6738a51edd238c4dc5ffc088345","date":1342794823,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#DirectFields(SegmentReadState,Fields,int,int).mjava","pathOld":"/dev/null","sourceNew":"    public DirectFields(SegmentReadState state, Fields fields, int minSkipCount, int lowFreqCutoff) throws IOException {\n      FieldsEnum fieldsEnum = fields.iterator();\n      String field;\n      while ((field = fieldsEnum.next()) != null) {\n        this.fields.put(field, new DirectField(state, field, fieldsEnum.terms(), minSkipCount, lowFreqCutoff));\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","date":1343059585,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#DirectFields(SegmentReadState,Fields,int,int).mjava","pathOld":"/dev/null","sourceNew":"    public DirectFields(SegmentReadState state, Fields fields, int minSkipCount, int lowFreqCutoff) throws IOException {\n      FieldsEnum fieldsEnum = fields.iterator();\n      String field;\n      while ((field = fieldsEnum.next()) != null) {\n        this.fields.put(field, new DirectField(state, field, fieldsEnum.terms(), minSkipCount, lowFreqCutoff));\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#DirectFields(SegmentReadState,Fields,int,int).mjava","pathOld":"/dev/null","sourceNew":"    public DirectFields(SegmentReadState state, Fields fields, int minSkipCount, int lowFreqCutoff) throws IOException {\n      FieldsEnum fieldsEnum = fields.iterator();\n      String field;\n      while ((field = fieldsEnum.next()) != null) {\n        this.fields.put(field, new DirectField(state, field, fieldsEnum.terms(), minSkipCount, lowFreqCutoff));\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb07ab105350b80ed9d63ca64b117084ed7391bc","date":1344824719,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#DirectFields(SegmentReadState,Fields,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#DirectFields(SegmentReadState,Fields,int,int).mjava","sourceNew":"    public DirectFields(SegmentReadState state, Fields fields, int minSkipCount, int lowFreqCutoff) throws IOException {\n      for (String field : fields) {\n        this.fields.put(field, new DirectField(state, field, fields.terms(field), minSkipCount, lowFreqCutoff));\n      }\n    }\n\n","sourceOld":"    public DirectFields(SegmentReadState state, Fields fields, int minSkipCount, int lowFreqCutoff) throws IOException {\n      FieldsEnum fieldsEnum = fields.iterator();\n      String field;\n      while ((field = fieldsEnum.next()) != null) {\n        this.fields.put(field, new DirectField(state, field, fieldsEnum.terms(), minSkipCount, lowFreqCutoff));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#DirectFields(SegmentReadState,Fields,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#DirectFields(SegmentReadState,Fields,int,int).mjava","sourceNew":"    public DirectFields(SegmentReadState state, Fields fields, int minSkipCount, int lowFreqCutoff) throws IOException {\n      for (String field : fields) {\n        this.fields.put(field, new DirectField(state, field, fields.terms(field), minSkipCount, lowFreqCutoff));\n      }\n    }\n\n","sourceOld":"    public DirectFields(SegmentReadState state, Fields fields, int minSkipCount, int lowFreqCutoff) throws IOException {\n      FieldsEnum fieldsEnum = fields.iterator();\n      String field;\n      while ((field = fieldsEnum.next()) != null) {\n        this.fields.put(field, new DirectField(state, field, fieldsEnum.terms(), minSkipCount, lowFreqCutoff));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#DirectFields(SegmentReadState,Fields,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#DirectFields(SegmentReadState,Fields,int,int).mjava","sourceNew":"    public DirectFields(SegmentReadState state, Fields fields, int minSkipCount, int lowFreqCutoff) throws IOException {\n      for (String field : fields) {\n        this.fields.put(field, new DirectField(state, field, fields.terms(field), minSkipCount, lowFreqCutoff));\n      }\n    }\n\n","sourceOld":"    public DirectFields(SegmentReadState state, Fields fields, int minSkipCount, int lowFreqCutoff) throws IOException {\n      FieldsEnum fieldsEnum = fields.iterator();\n      String field;\n      while ((field = fieldsEnum.next()) != null) {\n        this.fields.put(field, new DirectField(state, field, fieldsEnum.terms(), minSkipCount, lowFreqCutoff));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#DirectFields(SegmentReadState,Fields,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#DirectFields(SegmentReadState,Fields,int,int).mjava","sourceNew":"    public DirectFields(SegmentReadState state, Fields fields, int minSkipCount, int lowFreqCutoff) throws IOException {\n      for (String field : fields) {\n        this.fields.put(field, new DirectField(state, field, fields.terms(field), minSkipCount, lowFreqCutoff));\n      }\n    }\n\n","sourceOld":"    public DirectFields(SegmentReadState state, Fields fields, int minSkipCount, int lowFreqCutoff) throws IOException {\n      for (String field : fields) {\n        this.fields.put(field, new DirectField(state, field, fields.terms(field), minSkipCount, lowFreqCutoff));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","172cf08877d0e6738a51edd238c4dc5ffc088345"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["fb07ab105350b80ed9d63ca64b117084ed7391bc"],"fb07ab105350b80ed9d63ca64b117084ed7391bc":["172cf08877d0e6738a51edd238c4dc5ffc088345"],"172cf08877d0e6738a51edd238c4dc5ffc088345":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","172cf08877d0e6738a51edd238c4dc5ffc088345"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["aba371508186796cc6151d8223a5b4e16d02e26e","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":["d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","172cf08877d0e6738a51edd238c4dc5ffc088345","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"172cf08877d0e6738a51edd238c4dc5ffc088345":["aba371508186796cc6151d8223a5b4e16d02e26e","fb07ab105350b80ed9d63ca64b117084ed7391bc","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"fb07ab105350b80ed9d63ca64b117084ed7391bc":["c7869f64c874ebf7f317d22c00baf2b6857797a6","3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["c7869f64c874ebf7f317d22c00baf2b6857797a6"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}