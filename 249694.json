{"path":"lucene/src/java/org/apache/lucene/index/StandardDirectoryReader#doOpenNoWriter(IndexCommit).mjava","commits":[{"id":"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3","date":1328092914,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/StandardDirectoryReader#doOpenNoWriter(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doOpenNoWriter(IndexCommit).mjava","sourceNew":"  private synchronized DirectoryReader doOpenNoWriter(IndexCommit commit) throws CorruptIndexException, IOException {\n\n    if (commit == null) {\n      if (isCurrent()) {\n        return null;\n      }\n    } else {\n      if (directory != commit.getDirectory()) {\n        throw new IOException(\"the specified commit does not match the specified Directory\");\n      }\n      if (segmentInfos != null && commit.getSegmentsFileName().equals(segmentInfos.getCurrentSegmentFileName())) {\n        return null;\n      }\n    }\n\n    return (DirectoryReader) new SegmentInfos.FindSegmentsFile(directory) {\n      @Override\n      protected Object doBody(String segmentFileName) throws CorruptIndexException, IOException {\n        final SegmentInfos infos = new SegmentInfos();\n        infos.read(directory, segmentFileName);\n        return doOpenIfChanged(infos, null);\n      }\n    }.run(commit);\n  }\n\n","sourceOld":"  private synchronized DirectoryReader doOpenNoWriter(IndexCommit commit) throws CorruptIndexException, IOException {\n\n    if (commit == null) {\n      if (isCurrent()) {\n        return null;\n      }\n    } else {\n      if (directory != commit.getDirectory()) {\n        throw new IOException(\"the specified commit does not match the specified Directory\");\n      }\n      if (segmentInfos != null && commit.getSegmentsFileName().equals(segmentInfos.getCurrentSegmentFileName())) {\n        return null;\n      }\n    }\n\n    return (DirectoryReader) new SegmentInfos.FindSegmentsFile(directory) {\n      @Override\n      protected Object doBody(String segmentFileName) throws CorruptIndexException, IOException {\n        final SegmentInfos infos = new SegmentInfos();\n        infos.read(directory, segmentFileName);\n        return doOpenIfChanged(infos, null);\n      }\n    }.run(commit);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#doOpenNoWriter(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StandardDirectoryReader#doOpenNoWriter(IndexCommit).mjava","sourceNew":"  private synchronized DirectoryReader doOpenNoWriter(IndexCommit commit) throws CorruptIndexException, IOException {\n\n    if (commit == null) {\n      if (isCurrent()) {\n        return null;\n      }\n    } else {\n      if (directory != commit.getDirectory()) {\n        throw new IOException(\"the specified commit does not match the specified Directory\");\n      }\n      if (segmentInfos != null && commit.getSegmentsFileName().equals(segmentInfos.getCurrentSegmentFileName())) {\n        return null;\n      }\n    }\n\n    return (DirectoryReader) new SegmentInfos.FindSegmentsFile(directory) {\n      @Override\n      protected Object doBody(String segmentFileName) throws CorruptIndexException, IOException {\n        final SegmentInfos infos = new SegmentInfos();\n        infos.read(directory, segmentFileName);\n        return doOpenIfChanged(infos, null);\n      }\n    }.run(commit);\n  }\n\n","sourceOld":"  private synchronized DirectoryReader doOpenNoWriter(IndexCommit commit) throws CorruptIndexException, IOException {\n\n    if (commit == null) {\n      if (isCurrent()) {\n        return null;\n      }\n    } else {\n      if (directory != commit.getDirectory()) {\n        throw new IOException(\"the specified commit does not match the specified Directory\");\n      }\n      if (segmentInfos != null && commit.getSegmentsFileName().equals(segmentInfos.getCurrentSegmentFileName())) {\n        return null;\n      }\n    }\n\n    return (DirectoryReader) new SegmentInfos.FindSegmentsFile(directory) {\n      @Override\n      protected Object doBody(String segmentFileName) throws CorruptIndexException, IOException {\n        final SegmentInfos infos = new SegmentInfos();\n        infos.read(directory, segmentFileName);\n        return doOpenIfChanged(infos, null);\n      }\n    }.run(commit);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d7bbf8cffd2321f26cf9f6487f1571d325f20bc3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d7bbf8cffd2321f26cf9f6487f1571d325f20bc3"],"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}