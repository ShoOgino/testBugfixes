{"path":"contrib/analyzers/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#getHyphenationReader(String).mjava","commits":[{"id":"dbb53146e3651ed4ebca43f69ee26f9150c6cb5a","date":1210940570,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/analyzers/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#getHyphenationReader(String).mjava","pathOld":"/dev/null","sourceNew":"  private Reader getHyphenationReader(String filename) throws Exception {\n    if (patternsFileContent == null) {\n      return null;\n    }\n\n    ZipInputStream zipstream = new ZipInputStream(new ByteArrayInputStream(\n        patternsFileContent));\n\n    ZipEntry entry;\n    while ((entry = zipstream.getNextEntry()) != null) {\n      if (entry.getName().equals(\"offo-hyphenation/hyph/\" + filename)) {\n        byte[] buffer = new byte[1024];\n        ByteArrayOutputStream outstream = new ByteArrayOutputStream();\n        int count;\n        while ((count = zipstream.read(buffer)) != -1) {\n          outstream.write(buffer, 0, count);\n        }\n        outstream.close();\n        zipstream.close();\n        return new StringReader(new String(outstream.toByteArray(),\n            \"ISO-8859-1\"));\n      }\n    }\n    // we never should get here\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#getHyphenationReader(String).mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#getHyphenationReader(String).mjava","sourceNew":"  private Reader getHyphenationReader(String filename) throws Exception {\n    if (patternsFileContent == null) {\n      return null;\n    }\n\n    ZipInputStream zipstream = new ZipInputStream(new ByteArrayInputStream(\n        patternsFileContent));\n\n    ZipEntry entry;\n    while ((entry = zipstream.getNextEntry()) != null) {\n      if (entry.getName().equals(\"offo-hyphenation/hyph/\" + filename)) {\n        byte[] buffer = new byte[1024];\n        ByteArrayOutputStream outstream = new ByteArrayOutputStream();\n        int count;\n        while ((count = zipstream.read(buffer)) != -1) {\n          outstream.write(buffer, 0, count);\n        }\n        outstream.close();\n        zipstream.close();\n        return new StringReader(new String(outstream.toByteArray(),\n            \"ISO-8859-1\"));\n      }\n    }\n    // we never should get here\n    return null;\n  }\n\n","sourceOld":"  private Reader getHyphenationReader(String filename) throws Exception {\n    if (patternsFileContent == null) {\n      return null;\n    }\n\n    ZipInputStream zipstream = new ZipInputStream(new ByteArrayInputStream(\n        patternsFileContent));\n\n    ZipEntry entry;\n    while ((entry = zipstream.getNextEntry()) != null) {\n      if (entry.getName().equals(\"offo-hyphenation/hyph/\" + filename)) {\n        byte[] buffer = new byte[1024];\n        ByteArrayOutputStream outstream = new ByteArrayOutputStream();\n        int count;\n        while ((count = zipstream.read(buffer)) != -1) {\n          outstream.write(buffer, 0, count);\n        }\n        outstream.close();\n        zipstream.close();\n        return new StringReader(new String(outstream.toByteArray(),\n            \"ISO-8859-1\"));\n      }\n    }\n    // we never should get here\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dbb53146e3651ed4ebca43f69ee26f9150c6cb5a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["dbb53146e3651ed4ebca43f69ee26f9150c6cb5a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"dbb53146e3651ed4ebca43f69ee26f9150c6cb5a":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dbb53146e3651ed4ebca43f69ee26f9150c6cb5a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}