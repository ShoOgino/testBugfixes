{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/MultiFieldQueryParser#getMultiFieldQuery(List[Query]).mjava","commits":[{"id":"81d0720146de53dd3a4a023d2a3d1089d86d748d","date":1442268215,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/MultiFieldQueryParser#getMultiFieldQuery(List[Query]).mjava","pathOld":"/dev/null","sourceNew":"  /** Creates a multifield query */\n  // TODO: investigate more general approach by default, e.g. DisjunctionMaxQuery?\n  protected Query getMultiFieldQuery(List<Query> queries) throws ParseException {\n    if (queries.isEmpty()) {\n      return null; // all clause words were filtered away by the analyzer.\n    }\n    BooleanQuery.Builder query = newBooleanQuery();\n    query.setDisableCoord(true);\n    for (Query sub : queries) {\n      query.add(sub, BooleanClause.Occur.SHOULD);\n    }\n    return query.build();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8a0e442f7b61f811680273b25da95994a724466","date":1467878549,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/MultiFieldQueryParser#getMultiFieldQuery(List[Query]).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/MultiFieldQueryParser#getMultiFieldQuery(List[Query]).mjava","sourceNew":"  /** Creates a multifield query */\n  // TODO: investigate more general approach by default, e.g. DisjunctionMaxQuery?\n  protected Query getMultiFieldQuery(List<Query> queries) throws ParseException {\n    if (queries.isEmpty()) {\n      return null; // all clause words were filtered away by the analyzer.\n    }\n    BooleanQuery.Builder query = newBooleanQuery();\n    for (Query sub : queries) {\n      query.add(sub, BooleanClause.Occur.SHOULD);\n    }\n    return query.build();\n  }\n\n","sourceOld":"  /** Creates a multifield query */\n  // TODO: investigate more general approach by default, e.g. DisjunctionMaxQuery?\n  protected Query getMultiFieldQuery(List<Query> queries) throws ParseException {\n    if (queries.isEmpty()) {\n      return null; // all clause words were filtered away by the analyzer.\n    }\n    BooleanQuery.Builder query = newBooleanQuery();\n    query.setDisableCoord(true);\n    for (Query sub : queries) {\n      query.add(sub, BooleanClause.Occur.SHOULD);\n    }\n    return query.build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/MultiFieldQueryParser#getMultiFieldQuery(List[Query]).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/MultiFieldQueryParser#getMultiFieldQuery(List[Query]).mjava","sourceNew":"  /** Creates a multifield query */\n  // TODO: investigate more general approach by default, e.g. DisjunctionMaxQuery?\n  protected Query getMultiFieldQuery(List<Query> queries) throws ParseException {\n    if (queries.isEmpty()) {\n      return null; // all clause words were filtered away by the analyzer.\n    }\n    BooleanQuery.Builder query = newBooleanQuery();\n    for (Query sub : queries) {\n      query.add(sub, BooleanClause.Occur.SHOULD);\n    }\n    return query.build();\n  }\n\n","sourceOld":"  /** Creates a multifield query */\n  // TODO: investigate more general approach by default, e.g. DisjunctionMaxQuery?\n  protected Query getMultiFieldQuery(List<Query> queries) throws ParseException {\n    if (queries.isEmpty()) {\n      return null; // all clause words were filtered away by the analyzer.\n    }\n    BooleanQuery.Builder query = newBooleanQuery();\n    query.setDisableCoord(true);\n    for (Query sub : queries) {\n      query.add(sub, BooleanClause.Occur.SHOULD);\n    }\n    return query.build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c8a0e442f7b61f811680273b25da95994a724466":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["81d0720146de53dd3a4a023d2a3d1089d86d748d","c8a0e442f7b61f811680273b25da95994a724466"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c8a0e442f7b61f811680273b25da95994a724466"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"c8a0e442f7b61f811680273b25da95994a724466":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["c8a0e442f7b61f811680273b25da95994a724466","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}