{"path":"lucene/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","commits":[{"id":"25433c5cacacb7a2055d62d4d36b0daf210e0a10","date":1315747522,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","pathOld":"/dev/null","sourceNew":"  public void testSimple() throws Exception {\n    assumeFalse(\"PreFlex codec does not support docCount statistic!\", \n        \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; i++) {\n      iw.addDocument(doc());\n    }\n    IndexReader ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.optimize();\n    ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    assumeFalse(\"PreFlex codec does not support docCount statistic!\", \n        \"Lucene3x\".equals(Codec.getDefault().getName()));\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; i++) {\n      iw.addDocument(doc());\n    }\n    IndexReader ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.optimize();\n    ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    assumeFalse(\"PreFlex codec does not support docCount statistic!\", \n        \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; i++) {\n      iw.addDocument(doc());\n    }\n    IndexReader ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.optimize();\n    ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    assumeFalse(\"PreFlex codec does not support docCount statistic!\", \n        \"Lucene3x\".equals(Codec.getDefault().getName()));\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; i++) {\n      iw.addDocument(doc());\n    }\n    IndexReader ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.forceMerge(1);\n    ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    assumeFalse(\"PreFlex codec does not support docCount statistic!\", \n        \"Lucene3x\".equals(Codec.getDefault().getName()));\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; i++) {\n      iw.addDocument(doc());\n    }\n    IndexReader ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.optimize();\n    ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    assumeFalse(\"PreFlex codec does not support docCount statistic!\", \n        \"Lucene3x\".equals(Codec.getDefault().getName()));\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; i++) {\n      iw.addDocument(doc());\n    }\n    IndexReader ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.forceMerge(1);\n    ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    assumeFalse(\"PreFlex codec does not support docCount statistic!\", \n        \"Lucene3x\".equals(Codec.getDefault().getName()));\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; i++) {\n      iw.addDocument(doc());\n    }\n    IndexReader ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.forceMerge(1);\n    ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["25433c5cacacb7a2055d62d4d36b0daf210e0a10"],"25433c5cacacb7a2055d62d4d36b0daf210e0a10":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"25433c5cacacb7a2055d62d4d36b0daf210e0a10":["7b91922b55d15444d554721b352861d028eb8278"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["25433c5cacacb7a2055d62d4d36b0daf210e0a10"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}