{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/GroupQueryNodeProcessor#applyModifier(QueryNode,QueryNode).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/GroupQueryNodeProcessor#applyModifier(QueryNode,QueryNode).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/GroupQueryNodeProcessor#applyModifier(QueryNode,QueryNode).mjava","sourceNew":"  /**\n   */\n  private QueryNode applyModifier(QueryNode node, QueryNode parent) {\n\n    if (this.usingAnd) {\n\n      if (parent instanceof OrQueryNode) {\n\n        if (node instanceof ModifierQueryNode) {\n\n          ModifierQueryNode modNode = (ModifierQueryNode) node;\n\n          if (modNode.getModifier() == Modifier.MOD_REQ) {\n            return modNode.getChild();\n          }\n\n        }\n\n      } else {\n\n        if (node instanceof ModifierQueryNode) {\n\n          ModifierQueryNode modNode = (ModifierQueryNode) node;\n\n          if (modNode.getModifier() == Modifier.MOD_NONE) {\n            return new BooleanModifierNode(modNode.getChild(), Modifier.MOD_REQ);\n          }\n\n        } else {\n          return new BooleanModifierNode(node, Modifier.MOD_REQ);\n        }\n\n      }\n\n    } else {\n\n      if (node.getParent() instanceof AndQueryNode) {\n\n        if (node instanceof ModifierQueryNode) {\n\n          ModifierQueryNode modNode = (ModifierQueryNode) node;\n\n          if (modNode.getModifier() == Modifier.MOD_NONE) {\n            return new BooleanModifierNode(modNode.getChild(), Modifier.MOD_REQ);\n          }\n\n        } else {\n          return new BooleanModifierNode(node, Modifier.MOD_REQ);\n        }\n\n      }\n\n    }\n\n    return node;\n\n  }\n\n","sourceOld":"  /**\n   */\n  private QueryNode applyModifier(QueryNode node, QueryNode parent) {\n\n    if (this.usingAnd) {\n\n      if (parent instanceof OrQueryNode) {\n\n        if (node instanceof ModifierQueryNode) {\n\n          ModifierQueryNode modNode = (ModifierQueryNode) node;\n\n          if (modNode.getModifier() == Modifier.MOD_REQ) {\n            return modNode.getChild();\n          }\n\n        }\n\n      } else {\n\n        if (node instanceof ModifierQueryNode) {\n\n          ModifierQueryNode modNode = (ModifierQueryNode) node;\n\n          if (modNode.getModifier() == Modifier.MOD_NONE) {\n            return new BooleanModifierNode(modNode.getChild(), Modifier.MOD_REQ);\n          }\n\n        } else {\n          return new BooleanModifierNode(node, Modifier.MOD_REQ);\n        }\n\n      }\n\n    } else {\n\n      if (node.getParent() instanceof AndQueryNode) {\n\n        if (node instanceof ModifierQueryNode) {\n\n          ModifierQueryNode modNode = (ModifierQueryNode) node;\n\n          if (modNode.getModifier() == Modifier.MOD_NONE) {\n            return new BooleanModifierNode(modNode.getChild(), Modifier.MOD_REQ);\n          }\n\n        } else {\n          return new BooleanModifierNode(node, Modifier.MOD_REQ);\n        }\n\n      }\n\n    }\n\n    return node;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3","date":1417215914,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/GroupQueryNodeProcessor#applyModifier(QueryNode,QueryNode).mjava","sourceNew":null,"sourceOld":"  /**\n   */\n  private QueryNode applyModifier(QueryNode node, QueryNode parent) {\n\n    if (this.usingAnd) {\n\n      if (parent instanceof OrQueryNode) {\n\n        if (node instanceof ModifierQueryNode) {\n\n          ModifierQueryNode modNode = (ModifierQueryNode) node;\n\n          if (modNode.getModifier() == Modifier.MOD_REQ) {\n            return modNode.getChild();\n          }\n\n        }\n\n      } else {\n\n        if (node instanceof ModifierQueryNode) {\n\n          ModifierQueryNode modNode = (ModifierQueryNode) node;\n\n          if (modNode.getModifier() == Modifier.MOD_NONE) {\n            return new BooleanModifierNode(modNode.getChild(), Modifier.MOD_REQ);\n          }\n\n        } else {\n          return new BooleanModifierNode(node, Modifier.MOD_REQ);\n        }\n\n      }\n\n    } else {\n\n      if (node.getParent() instanceof AndQueryNode) {\n\n        if (node instanceof ModifierQueryNode) {\n\n          ModifierQueryNode modNode = (ModifierQueryNode) node;\n\n          if (modNode.getModifier() == Modifier.MOD_NONE) {\n            return new BooleanModifierNode(modNode.getChild(), Modifier.MOD_REQ);\n          }\n\n        } else {\n          return new BooleanModifierNode(node, Modifier.MOD_REQ);\n        }\n\n      }\n\n    }\n\n    return node;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}