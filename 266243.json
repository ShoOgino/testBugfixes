{"path":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleResponse(String,ZkNodeProps,SolrQueryResponse).mjava","commits":[{"id":"c986b1ea9768aff3c903f05a2c85b7b672b5c225","date":1359126891,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleResponse(String,ZkNodeProps,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  private void handleResponse(String operation, ZkNodeProps m,\n      SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    long time = System.currentTimeMillis();\n    QueueEvent event = coreContainer.getZkController()\n        .getOverseerCollectionQueue()\n        .offer(ZkStateReader.toJSON(m), DEFAULT_ZK_TIMEOUT);\n    if (event.getBytes() != null) {\n      SolrResponse response = SolrResponse.deserialize(event.getBytes());\n      rsp.getValues().addAll(response.getResponse());\n    } else {\n      if (System.currentTimeMillis() - time >= DEFAULT_ZK_TIMEOUT) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, operation\n            + \" the collection time out:\" + DEFAULT_ZK_TIMEOUT / 1000 + \"s\");\n      } else if (event.getWatchedEvent() != null) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, operation\n            + \" the collection error [Watcher fired on path: \"\n            + event.getWatchedEvent().getPath() + \" state: \"\n            + event.getWatchedEvent().getState() + \" type \"\n            + event.getWatchedEvent().getType() + \"]\");\n      } else {\n        throw new SolrException(ErrorCode.SERVER_ERROR, operation\n            + \" the collection unkown case\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd45d4a2ee01a1932d33eec42f5272c2402da679","date":1359316912,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleResponse(String,ZkNodeProps,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  private void handleResponse(String operation, ZkNodeProps m,\n      SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    long time = System.currentTimeMillis();\n    QueueEvent event = coreContainer.getZkController()\n        .getOverseerCollectionQueue()\n        .offer(ZkStateReader.toJSON(m), DEFAULT_ZK_TIMEOUT);\n    if (event.getBytes() != null) {\n      SolrResponse response = SolrResponse.deserialize(event.getBytes());\n      rsp.getValues().addAll(response.getResponse());\n    } else {\n      if (System.currentTimeMillis() - time >= DEFAULT_ZK_TIMEOUT) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, operation\n            + \" the collection time out:\" + DEFAULT_ZK_TIMEOUT / 1000 + \"s\");\n      } else if (event.getWatchedEvent() != null) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, operation\n            + \" the collection error [Watcher fired on path: \"\n            + event.getWatchedEvent().getPath() + \" state: \"\n            + event.getWatchedEvent().getState() + \" type \"\n            + event.getWatchedEvent().getType() + \"]\");\n      } else {\n        throw new SolrException(ErrorCode.SERVER_ERROR, operation\n            + \" the collection unkown case\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe999fc2d95d6fea71f960bf9556858387ba21f5","date":1363294860,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleResponse(String,ZkNodeProps,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleResponse(String,ZkNodeProps,SolrQueryResponse).mjava","sourceNew":"  private void handleResponse(String operation, ZkNodeProps m,\n      SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    long time = System.currentTimeMillis();\n    QueueEvent event = coreContainer.getZkController()\n        .getOverseerCollectionQueue()\n        .offer(ZkStateReader.toJSON(m), DEFAULT_ZK_TIMEOUT);\n    if (event.getBytes() != null) {\n      SolrResponse response = SolrResponse.deserialize(event.getBytes());\n      rsp.getValues().addAll(response.getResponse());\n      SimpleOrderedMap exp = (SimpleOrderedMap) response.getResponse().get(\"exception\");\n      if (exp != null) {\n        Integer code = (Integer) exp.get(\"rspCode\");\n        rsp.setException(new SolrException(code != null && code != -1 ? ErrorCode.getErrorCode(code) : ErrorCode.SERVER_ERROR, (String)exp.get(\"msg\")));\n      }\n    } else {\n      if (System.currentTimeMillis() - time >= DEFAULT_ZK_TIMEOUT) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, operation\n            + \" the collection time out:\" + DEFAULT_ZK_TIMEOUT / 1000 + \"s\");\n      } else if (event.getWatchedEvent() != null) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, operation\n            + \" the collection error [Watcher fired on path: \"\n            + event.getWatchedEvent().getPath() + \" state: \"\n            + event.getWatchedEvent().getState() + \" type \"\n            + event.getWatchedEvent().getType() + \"]\");\n      } else {\n        throw new SolrException(ErrorCode.SERVER_ERROR, operation\n            + \" the collection unkown case\");\n      }\n    }\n  }\n\n","sourceOld":"  private void handleResponse(String operation, ZkNodeProps m,\n      SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    long time = System.currentTimeMillis();\n    QueueEvent event = coreContainer.getZkController()\n        .getOverseerCollectionQueue()\n        .offer(ZkStateReader.toJSON(m), DEFAULT_ZK_TIMEOUT);\n    if (event.getBytes() != null) {\n      SolrResponse response = SolrResponse.deserialize(event.getBytes());\n      rsp.getValues().addAll(response.getResponse());\n    } else {\n      if (System.currentTimeMillis() - time >= DEFAULT_ZK_TIMEOUT) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, operation\n            + \" the collection time out:\" + DEFAULT_ZK_TIMEOUT / 1000 + \"s\");\n      } else if (event.getWatchedEvent() != null) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, operation\n            + \" the collection error [Watcher fired on path: \"\n            + event.getWatchedEvent().getPath() + \" state: \"\n            + event.getWatchedEvent().getState() + \" type \"\n            + event.getWatchedEvent().getType() + \"]\");\n      } else {\n        throw new SolrException(ErrorCode.SERVER_ERROR, operation\n            + \" the collection unkown case\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ee5a5186e7187cd42c6f7ff64b6e7206a780325","date":1372914261,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleResponse(String,ZkNodeProps,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleResponse(String,ZkNodeProps,SolrQueryResponse).mjava","sourceNew":"  private void handleResponse(String operation, ZkNodeProps m,\n                              SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    handleResponse(operation, m, rsp, DEFAULT_ZK_TIMEOUT);\n  }\n\n","sourceOld":"  private void handleResponse(String operation, ZkNodeProps m,\n      SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    long time = System.currentTimeMillis();\n    QueueEvent event = coreContainer.getZkController()\n        .getOverseerCollectionQueue()\n        .offer(ZkStateReader.toJSON(m), DEFAULT_ZK_TIMEOUT);\n    if (event.getBytes() != null) {\n      SolrResponse response = SolrResponse.deserialize(event.getBytes());\n      rsp.getValues().addAll(response.getResponse());\n      SimpleOrderedMap exp = (SimpleOrderedMap) response.getResponse().get(\"exception\");\n      if (exp != null) {\n        Integer code = (Integer) exp.get(\"rspCode\");\n        rsp.setException(new SolrException(code != null && code != -1 ? ErrorCode.getErrorCode(code) : ErrorCode.SERVER_ERROR, (String)exp.get(\"msg\")));\n      }\n    } else {\n      if (System.currentTimeMillis() - time >= DEFAULT_ZK_TIMEOUT) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, operation\n            + \" the collection time out:\" + DEFAULT_ZK_TIMEOUT / 1000 + \"s\");\n      } else if (event.getWatchedEvent() != null) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, operation\n            + \" the collection error [Watcher fired on path: \"\n            + event.getWatchedEvent().getPath() + \" state: \"\n            + event.getWatchedEvent().getState() + \" type \"\n            + event.getWatchedEvent().getType() + \"]\");\n      } else {\n        throw new SolrException(ErrorCode.SERVER_ERROR, operation\n            + \" the collection unkown case\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["b1197d6f54676973038ad402280d80a139dfd27b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleResponse(String,ZkNodeProps,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleResponse(String,ZkNodeProps,SolrQueryResponse).mjava","sourceNew":"  private void handleResponse(String operation, ZkNodeProps m,\n                              SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    handleResponse(operation, m, rsp, DEFAULT_ZK_TIMEOUT);\n  }\n\n","sourceOld":"  private void handleResponse(String operation, ZkNodeProps m,\n      SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    long time = System.currentTimeMillis();\n    QueueEvent event = coreContainer.getZkController()\n        .getOverseerCollectionQueue()\n        .offer(ZkStateReader.toJSON(m), DEFAULT_ZK_TIMEOUT);\n    if (event.getBytes() != null) {\n      SolrResponse response = SolrResponse.deserialize(event.getBytes());\n      rsp.getValues().addAll(response.getResponse());\n      SimpleOrderedMap exp = (SimpleOrderedMap) response.getResponse().get(\"exception\");\n      if (exp != null) {\n        Integer code = (Integer) exp.get(\"rspCode\");\n        rsp.setException(new SolrException(code != null && code != -1 ? ErrorCode.getErrorCode(code) : ErrorCode.SERVER_ERROR, (String)exp.get(\"msg\")));\n      }\n    } else {\n      if (System.currentTimeMillis() - time >= DEFAULT_ZK_TIMEOUT) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, operation\n            + \" the collection time out:\" + DEFAULT_ZK_TIMEOUT / 1000 + \"s\");\n      } else if (event.getWatchedEvent() != null) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, operation\n            + \" the collection error [Watcher fired on path: \"\n            + event.getWatchedEvent().getPath() + \" state: \"\n            + event.getWatchedEvent().getState() + \" type \"\n            + event.getWatchedEvent().getType() + \"]\");\n      } else {\n        throw new SolrException(ErrorCode.SERVER_ERROR, operation\n            + \" the collection unkown case\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ebd3a557326ef3eab85b73a8cff781f7d801248","date":1431620752,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleResponse(String,ZkNodeProps,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleResponse(String,ZkNodeProps,SolrQueryResponse).mjava","sourceNew":"  void handleResponse(String operation, ZkNodeProps m,\n                              SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    handleResponse(operation, m, rsp, DEFAULT_ZK_TIMEOUT);\n  }\n\n","sourceOld":"  private void handleResponse(String operation, ZkNodeProps m,\n                              SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    handleResponse(operation, m, rsp, DEFAULT_ZK_TIMEOUT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b1197d6f54676973038ad402280d80a139dfd27b","date":1455734228,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleResponse(String,ZkNodeProps,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleResponse(String,ZkNodeProps,SolrQueryResponse).mjava","sourceNew":"  void handleResponse(String operation, ZkNodeProps m,\n                              SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    handleResponse(operation, m, rsp, DEFAULT_COLLECTION_OP_TIMEOUT);\n  }\n\n","sourceOld":"  void handleResponse(String operation, ZkNodeProps m,\n                              SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    handleResponse(operation, m, rsp, DEFAULT_ZK_TIMEOUT);\n  }\n\n","bugFix":["4ee5a5186e7187cd42c6f7ff64b6e7206a780325"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af3e10d8a1fbcc5c79b22f7477e79de467dd326c","date":1515178406,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleResponse(String,ZkNodeProps,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleResponse(String,ZkNodeProps,SolrQueryResponse).mjava","sourceNew":"  //TODO rename to submitToOverseerRPC\n  public void handleResponse(String operation, ZkNodeProps m,\n                              SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    handleResponse(operation, m, rsp, DEFAULT_COLLECTION_OP_TIMEOUT);\n  }\n\n","sourceOld":"  void handleResponse(String operation, ZkNodeProps m,\n                              SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    handleResponse(operation, m, rsp, DEFAULT_COLLECTION_OP_TIMEOUT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleResponse(String,ZkNodeProps,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleResponse(String,ZkNodeProps,SolrQueryResponse).mjava","sourceNew":"  //TODO rename to submitToOverseerRPC\n  public void handleResponse(String operation, ZkNodeProps m,\n                              SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    handleResponse(operation, m, rsp, DEFAULT_COLLECTION_OP_TIMEOUT);\n  }\n\n","sourceOld":"  void handleResponse(String operation, ZkNodeProps m,\n                              SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    handleResponse(operation, m, rsp, DEFAULT_COLLECTION_OP_TIMEOUT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cbd743a4843f513f793670e3ab0e272bf824faf","date":1518149529,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleResponse(String,ZkNodeProps,SolrQueryResponse).mjava","sourceNew":null,"sourceOld":"  //TODO rename to submitToOverseerRPC\n  public void handleResponse(String operation, ZkNodeProps m,\n                              SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    handleResponse(operation, m, rsp, DEFAULT_COLLECTION_OP_TIMEOUT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b1197d6f54676973038ad402280d80a139dfd27b":["9ebd3a557326ef3eab85b73a8cff781f7d801248"],"fe999fc2d95d6fea71f960bf9556858387ba21f5":["c986b1ea9768aff3c903f05a2c85b7b672b5c225"],"b94236357aaa22b76c10629851fe4e376e0cea82":["b1197d6f54676973038ad402280d80a139dfd27b","af3e10d8a1fbcc5c79b22f7477e79de467dd326c"],"3cbd743a4843f513f793670e3ab0e272bf824faf":["b94236357aaa22b76c10629851fe4e376e0cea82"],"af3e10d8a1fbcc5c79b22f7477e79de467dd326c":["b1197d6f54676973038ad402280d80a139dfd27b"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["fe999fc2d95d6fea71f960bf9556858387ba21f5","4ee5a5186e7187cd42c6f7ff64b6e7206a780325"],"c986b1ea9768aff3c903f05a2c85b7b672b5c225":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ebd3a557326ef3eab85b73a8cff781f7d801248":["4ee5a5186e7187cd42c6f7ff64b6e7206a780325"],"dd45d4a2ee01a1932d33eec42f5272c2402da679":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c986b1ea9768aff3c903f05a2c85b7b672b5c225"],"4ee5a5186e7187cd42c6f7ff64b6e7206a780325":["fe999fc2d95d6fea71f960bf9556858387ba21f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cbd743a4843f513f793670e3ab0e272bf824faf"]},"commit2Childs":{"b1197d6f54676973038ad402280d80a139dfd27b":["b94236357aaa22b76c10629851fe4e376e0cea82","af3e10d8a1fbcc5c79b22f7477e79de467dd326c"],"fe999fc2d95d6fea71f960bf9556858387ba21f5":["37a0f60745e53927c4c876cfe5b5a58170f0646c","4ee5a5186e7187cd42c6f7ff64b6e7206a780325"],"b94236357aaa22b76c10629851fe4e376e0cea82":["3cbd743a4843f513f793670e3ab0e272bf824faf"],"af3e10d8a1fbcc5c79b22f7477e79de467dd326c":["b94236357aaa22b76c10629851fe4e376e0cea82"],"3cbd743a4843f513f793670e3ab0e272bf824faf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c986b1ea9768aff3c903f05a2c85b7b672b5c225":["fe999fc2d95d6fea71f960bf9556858387ba21f5","dd45d4a2ee01a1932d33eec42f5272c2402da679"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c986b1ea9768aff3c903f05a2c85b7b672b5c225","dd45d4a2ee01a1932d33eec42f5272c2402da679"],"9ebd3a557326ef3eab85b73a8cff781f7d801248":["b1197d6f54676973038ad402280d80a139dfd27b"],"dd45d4a2ee01a1932d33eec42f5272c2402da679":[],"4ee5a5186e7187cd42c6f7ff64b6e7206a780325":["37a0f60745e53927c4c876cfe5b5a58170f0646c","9ebd3a557326ef3eab85b73a8cff781f7d801248"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","dd45d4a2ee01a1932d33eec42f5272c2402da679","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}