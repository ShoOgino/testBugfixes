{"path":"lucene/core/src/java/org/apache/lucene/util/OpenBitSet#nextSetBit(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OpenBitSet#nextSetBit(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/OpenBitSet#nextSetBit(int).mjava","sourceNew":"  /** Returns the index of the first set bit starting at the index specified.\n   *  -1 is returned if there are no more set bits.\n   */\n  public int nextSetBit(int index) {\n    int i = index>>6;\n    if (i>=wlen) return -1;\n    int subIndex = index & 0x3f;      // index within the word\n    long word = bits[i] >> subIndex;  // skip all the bits to the right of index\n\n    if (word!=0) {\n      return (i<<6) + subIndex + BitUtil.ntz(word);\n    }\n\n    while(++i < wlen) {\n      word = bits[i];\n      if (word!=0) return (i<<6) + BitUtil.ntz(word);\n    }\n\n    return -1;\n  }\n\n","sourceOld":"  /** Returns the index of the first set bit starting at the index specified.\n   *  -1 is returned if there are no more set bits.\n   */\n  public int nextSetBit(int index) {\n    int i = index>>6;\n    if (i>=wlen) return -1;\n    int subIndex = index & 0x3f;      // index within the word\n    long word = bits[i] >> subIndex;  // skip all the bits to the right of index\n\n    if (word!=0) {\n      return (i<<6) + subIndex + BitUtil.ntz(word);\n    }\n\n    while(++i < wlen) {\n      word = bits[i];\n      if (word!=0) return (i<<6) + BitUtil.ntz(word);\n    }\n\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95f83654246556082000bded885bde27a521bb31","date":1353427179,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OpenBitSet#nextSetBit(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/OpenBitSet#nextSetBit(int).mjava","sourceNew":"  /** Returns the index of the first set bit starting at the index specified.\n   *  -1 is returned if there are no more set bits.\n   */\n  public int nextSetBit(int index) {\n    int i = index>>6;\n    if (i>=wlen) return -1;\n    int subIndex = index & 0x3f;      // index within the word\n    long word = bits[i] >> subIndex;  // skip all the bits to the right of index\n\n    if (word!=0) {\n      return (i<<6) + subIndex + Long.numberOfTrailingZeros(word);\n    }\n\n    while(++i < wlen) {\n      word = bits[i];\n      if (word!=0) return (i<<6) + Long.numberOfTrailingZeros(word);\n    }\n\n    return -1;\n  }\n\n","sourceOld":"  /** Returns the index of the first set bit starting at the index specified.\n   *  -1 is returned if there are no more set bits.\n   */\n  public int nextSetBit(int index) {\n    int i = index>>6;\n    if (i>=wlen) return -1;\n    int subIndex = index & 0x3f;      // index within the word\n    long word = bits[i] >> subIndex;  // skip all the bits to the right of index\n\n    if (word!=0) {\n      return (i<<6) + subIndex + BitUtil.ntz(word);\n    }\n\n    while(++i < wlen) {\n      word = bits[i];\n      if (word!=0) return (i<<6) + BitUtil.ntz(word);\n    }\n\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OpenBitSet#nextSetBit(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/OpenBitSet#nextSetBit(int).mjava","sourceNew":"  /** Returns the index of the first set bit starting at the index specified.\n   *  -1 is returned if there are no more set bits.\n   */\n  public int nextSetBit(int index) {\n    int i = index>>6;\n    if (i>=wlen) return -1;\n    int subIndex = index & 0x3f;      // index within the word\n    long word = bits[i] >> subIndex;  // skip all the bits to the right of index\n\n    if (word!=0) {\n      return (i<<6) + subIndex + Long.numberOfTrailingZeros(word);\n    }\n\n    while(++i < wlen) {\n      word = bits[i];\n      if (word!=0) return (i<<6) + Long.numberOfTrailingZeros(word);\n    }\n\n    return -1;\n  }\n\n","sourceOld":"  /** Returns the index of the first set bit starting at the index specified.\n   *  -1 is returned if there are no more set bits.\n   */\n  public int nextSetBit(int index) {\n    int i = index>>6;\n    if (i>=wlen) return -1;\n    int subIndex = index & 0x3f;      // index within the word\n    long word = bits[i] >> subIndex;  // skip all the bits to the right of index\n\n    if (word!=0) {\n      return (i<<6) + subIndex + BitUtil.ntz(word);\n    }\n\n    while(++i < wlen) {\n      word = bits[i];\n      if (word!=0) return (i<<6) + BitUtil.ntz(word);\n    }\n\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3d7af8c4d849bdb50dbc2e78e88495a22c008f4","date":1413466868,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/OpenBitSet#nextSetBit(int).mjava","sourceNew":null,"sourceOld":"  /** Returns the index of the first set bit starting at the index specified.\n   *  -1 is returned if there are no more set bits.\n   */\n  public int nextSetBit(int index) {\n    int i = index>>6;\n    if (i>=wlen) return -1;\n    int subIndex = index & 0x3f;      // index within the word\n    long word = bits[i] >> subIndex;  // skip all the bits to the right of index\n\n    if (word!=0) {\n      return (i<<6) + subIndex + Long.numberOfTrailingZeros(word);\n    }\n\n    while(++i < wlen) {\n      word = bits[i];\n      if (word!=0) return (i<<6) + Long.numberOfTrailingZeros(word);\n    }\n\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/OpenBitSet#nextSetBit(int).mjava","sourceNew":null,"sourceOld":"  /** Returns the index of the first set bit starting at the index specified.\n   *  -1 is returned if there are no more set bits.\n   */\n  public int nextSetBit(int index) {\n    int i = index>>6;\n    if (i>=wlen) return -1;\n    int subIndex = index & 0x3f;      // index within the word\n    long word = bits[i] >> subIndex;  // skip all the bits to the right of index\n\n    if (word!=0) {\n      return (i<<6) + subIndex + Long.numberOfTrailingZeros(word);\n    }\n\n    while(++i < wlen) {\n      word = bits[i];\n      if (word!=0) return (i<<6) + Long.numberOfTrailingZeros(word);\n    }\n\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"95f83654246556082000bded885bde27a521bb31":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["95f83654246556082000bded885bde27a521bb31","a3d7af8c4d849bdb50dbc2e78e88495a22c008f4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","95f83654246556082000bded885bde27a521bb31"],"a3d7af8c4d849bdb50dbc2e78e88495a22c008f4":["95f83654246556082000bded885bde27a521bb31"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a3d7af8c4d849bdb50dbc2e78e88495a22c008f4"]},"commit2Childs":{"95f83654246556082000bded885bde27a521bb31":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","407687e67faf6e1f02a211ca078d8e3eed631027","a3d7af8c4d849bdb50dbc2e78e88495a22c008f4"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["95f83654246556082000bded885bde27a521bb31","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"a3d7af8c4d849bdb50dbc2e78e88495a22c008f4":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}