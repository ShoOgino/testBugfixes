{"path":"lucene/core/src/test/org/apache/lucene/codecs/lucene3x/TestTermInfosReaderIndex#populate(Directory,IndexWriterConfig).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene3x/TestTermInfosReaderIndex#populate(Directory,IndexWriterConfig).mjava","pathOld":"lucene/src/test/org/apache/lucene/codecs/lucene3x/TestTermInfosReaderIndex#populate(Directory,IndexWriterConfig).mjava","sourceNew":"  private static void populate(Directory directory, IndexWriterConfig config) throws CorruptIndexException, LockObtainFailedException, IOException {\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, config);\n    for (int i = 0; i < NUMBER_OF_DOCUMENTS; i++) {\n      Document document = new Document();\n      for (int f = 0; f < NUMBER_OF_FIELDS; f++) {\n        document.add(newField(\"field\" + f, getText(), StringField.TYPE_UNSTORED));\n      }\n      writer.addDocument(document);\n    }\n    writer.forceMerge(1);\n    writer.close();\n  }\n\n","sourceOld":"  private static void populate(Directory directory, IndexWriterConfig config) throws CorruptIndexException, LockObtainFailedException, IOException {\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, config);\n    for (int i = 0; i < NUMBER_OF_DOCUMENTS; i++) {\n      Document document = new Document();\n      for (int f = 0; f < NUMBER_OF_FIELDS; f++) {\n        document.add(newField(\"field\" + f, getText(), StringField.TYPE_UNSTORED));\n      }\n      writer.addDocument(document);\n    }\n    writer.forceMerge(1);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene3x/TestTermInfosReaderIndex#populate(Directory,IndexWriterConfig).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene3x/TestTermInfosReaderIndex#populate(Directory,IndexWriterConfig).mjava","sourceNew":"  private static void populate(Directory directory, IndexWriterConfig config) throws CorruptIndexException, LockObtainFailedException, IOException {\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, config);\n    for (int i = 0; i < NUMBER_OF_DOCUMENTS; i++) {\n      Document document = new Document();\n      for (int f = 0; f < NUMBER_OF_FIELDS; f++) {\n        document.add(newField(\"field\" + f, getText(), StringField.TYPE_UNSTORED));\n      }\n      writer.addDocument(document);\n    }\n    writer.forceMerge(1);\n    writer.close();\n  }\n\n","sourceOld":"  private static void populate(Directory directory, IndexWriterConfig config) throws CorruptIndexException, LockObtainFailedException, IOException {\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, config);\n    for (int i = 0; i < NUMBER_OF_DOCUMENTS; i++) {\n      Document document = new Document();\n      for (int f = 0; f < NUMBER_OF_FIELDS; f++) {\n        document.add(newField(\"field\" + f, getText(), StringField.TYPE_UNSTORED));\n      }\n      writer.addDocument(document);\n    }\n    writer.forceMerge(1);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57ae3024996ccdb3c36c42cb890e1efb37df4ce8","date":1338343651,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene3x/TestTermInfosReaderIndex#populate(Directory,IndexWriterConfig).mjava","sourceNew":null,"sourceOld":"  private static void populate(Directory directory, IndexWriterConfig config) throws CorruptIndexException, LockObtainFailedException, IOException {\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, config);\n    for (int i = 0; i < NUMBER_OF_DOCUMENTS; i++) {\n      Document document = new Document();\n      for (int f = 0; f < NUMBER_OF_FIELDS; f++) {\n        document.add(newField(\"field\" + f, getText(), StringField.TYPE_UNSTORED));\n      }\n      writer.addDocument(document);\n    }\n    writer.forceMerge(1);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"]},"commit2Childs":{"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}