{"path":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#nextLine().mjava","commits":[{"id":"e4fccad460342b1af30cb328cc8297751a218d78","date":1541177339,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#nextLine().mjava","pathOld":"/dev/null","sourceNew":"  /** use {@link GeoTestUtil#nextPolygon()} to create a random line; TODO: move to GeoTestUtil */\n  public Line nextLine() {\n    Polygon poly = GeoTestUtil.nextPolygon();\n    double[] lats = new double[poly.numPoints() - 1];\n    double[] lons = new double[lats.length];\n    System.arraycopy(poly.getPolyLats(), 0, lats, 0, lats.length);\n    System.arraycopy(poly.getPolyLons(), 0, lons, 0, lons.length);\n\n    return new Line(lats, lons);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e81e0b2df18b157319eed7be0ffb5d585a34b7c","date":1552378734,"type":3,"author":"iverase","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#nextLine().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#nextLine().mjava","sourceNew":"  /** use {@link GeoTestUtil#nextPolygon()} to create a random line; TODO: move to GeoTestUtil */\n  public static Line nextLine() {\n    Polygon poly = GeoTestUtil.nextPolygon();\n    double[] lats = new double[poly.numPoints() - 1];\n    double[] lons = new double[lats.length];\n    System.arraycopy(poly.getPolyLats(), 0, lats, 0, lats.length);\n    System.arraycopy(poly.getPolyLons(), 0, lons, 0, lons.length);\n\n    return new Line(lats, lons);\n  }\n\n","sourceOld":"  /** use {@link GeoTestUtil#nextPolygon()} to create a random line; TODO: move to GeoTestUtil */\n  public Line nextLine() {\n    Polygon poly = GeoTestUtil.nextPolygon();\n    double[] lats = new double[poly.numPoints() - 1];\n    double[] lons = new double[lats.length];\n    System.arraycopy(poly.getPolyLats(), 0, lats, 0, lats.length);\n    System.arraycopy(poly.getPolyLons(), 0, lons, 0, lons.length);\n\n    return new Line(lats, lons);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c286b0d8c507a88b289407e2fe161effa275c6b0","date":1562615977,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#nextLine().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#nextLine().mjava","sourceNew":"  /** use {@link GeoTestUtil#nextPolygon()} to create a random line; TODO: move to GeoTestUtil */\n  @Override\n  public Line nextLine() {\n    return getNextLine();\n  }\n\n","sourceOld":"  /** use {@link GeoTestUtil#nextPolygon()} to create a random line; TODO: move to GeoTestUtil */\n  public static Line nextLine() {\n    Polygon poly = GeoTestUtil.nextPolygon();\n    double[] lats = new double[poly.numPoints() - 1];\n    double[] lons = new double[lats.length];\n    System.arraycopy(poly.getPolyLats(), 0, lats, 0, lats.length);\n    System.arraycopy(poly.getPolyLons(), 0, lons, 0, lons.length);\n\n    return new Line(lats, lons);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#nextLine().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#nextLine().mjava","sourceNew":"  /** use {@link GeoTestUtil#nextPolygon()} to create a random line; TODO: move to GeoTestUtil */\n  @Override\n  public Line nextLine() {\n    return getNextLine();\n  }\n\n","sourceOld":"  /** use {@link GeoTestUtil#nextPolygon()} to create a random line; TODO: move to GeoTestUtil */\n  @Override\n  public Line nextLine() {\n    return getNextLine();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e81e0b2df18b157319eed7be0ffb5d585a34b7c":["e4fccad460342b1af30cb328cc8297751a218d78"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"c286b0d8c507a88b289407e2fe161effa275c6b0":["1e81e0b2df18b157319eed7be0ffb5d585a34b7c"],"e4fccad460342b1af30cb328cc8297751a218d78":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"1e81e0b2df18b157319eed7be0ffb5d585a34b7c":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e4fccad460342b1af30cb328cc8297751a218d78"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c286b0d8c507a88b289407e2fe161effa275c6b0":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"e4fccad460342b1af30cb328cc8297751a218d78":["1e81e0b2df18b157319eed7be0ffb5d585a34b7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}