{"path":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","commits":[{"id":"9d876a75552ee4c2e2f959a50e2bfa0144f5dd74","date":1224347393,"type":0,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","pathOld":"/dev/null","sourceNew":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = new IndexSearcher(reader);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","pathOld":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","sourceNew":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = new IndexSearcher(reader);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","sourceOld":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = new IndexSearcher(reader);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9d876a75552ee4c2e2f959a50e2bfa0144f5dd74":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["9d876a75552ee4c2e2f959a50e2bfa0144f5dd74"]},"commit2Childs":{"9d876a75552ee4c2e2f959a50e2bfa0144f5dd74":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9d876a75552ee4c2e2f959a50e2bfa0144f5dd74"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}