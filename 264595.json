{"path":"solr/core/src/java/org/apache/solr/legacy/DistanceValueSource#getValues(LeafReaderContext,DoubleValues).mjava","commits":[{"id":"32b9119890a8e82252b6cc341ac491d18fa1e49b","date":1498575219,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/legacy/DistanceValueSource#getValues(LeafReaderContext,DoubleValues).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the FunctionValues used by the function query.\n   */\n  @Override\n  public DoubleValues getValues(LeafReaderContext readerContext, DoubleValues scores) throws IOException {\n\n    final DoubleValues ptX = DoubleValuesSource.fromDoubleField(strategy.getFieldNameX()).getValues(readerContext, null);\n    final DoubleValues ptY = DoubleValuesSource.fromDoubleField(strategy.getFieldNameY()).getValues(readerContext, null);\n    final DistanceCalculator calculator = strategy.getSpatialContext().getDistCalc();\n\n    return DoubleValues.withDefault(new DoubleValues() {\n\n      @Override\n      public double doubleValue() throws IOException {\n        return calculator.distance(from, ptX.doubleValue(), ptY.doubleValue()) * multiplier;\n      }\n\n      @Override\n      public boolean advanceExact(int doc) throws IOException {\n        return ptX.advanceExact(doc) && ptY.advanceExact(doc);\n      }\n    }, nullValue);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98f11c416d30e556e0004a9a84960702d12d35b1","date":1498628359,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/legacy/DistanceValueSource#getValues(LeafReaderContext,DoubleValues).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the FunctionValues used by the function query.\n   */\n  @Override\n  public DoubleValues getValues(LeafReaderContext readerContext, DoubleValues scores) throws IOException {\n\n    final DoubleValues ptX = DoubleValuesSource.fromDoubleField(strategy.getFieldNameX()).getValues(readerContext, null);\n    final DoubleValues ptY = DoubleValuesSource.fromDoubleField(strategy.getFieldNameY()).getValues(readerContext, null);\n    final DistanceCalculator calculator = strategy.getSpatialContext().getDistCalc();\n\n    return DoubleValues.withDefault(new DoubleValues() {\n\n      @Override\n      public double doubleValue() throws IOException {\n        return calculator.distance(from, ptX.doubleValue(), ptY.doubleValue()) * multiplier;\n      }\n\n      @Override\n      public boolean advanceExact(int doc) throws IOException {\n        return ptX.advanceExact(doc) && ptY.advanceExact(doc);\n      }\n    }, nullValue);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/legacy/DistanceValueSource#getValues(LeafReaderContext,DoubleValues).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the FunctionValues used by the function query.\n   */\n  @Override\n  public DoubleValues getValues(LeafReaderContext readerContext, DoubleValues scores) throws IOException {\n\n    final DoubleValues ptX = DoubleValuesSource.fromDoubleField(strategy.getFieldNameX()).getValues(readerContext, null);\n    final DoubleValues ptY = DoubleValuesSource.fromDoubleField(strategy.getFieldNameY()).getValues(readerContext, null);\n    final DistanceCalculator calculator = strategy.getSpatialContext().getDistCalc();\n\n    return DoubleValues.withDefault(new DoubleValues() {\n\n      @Override\n      public double doubleValue() throws IOException {\n        return calculator.distance(from, ptX.doubleValue(), ptY.doubleValue()) * multiplier;\n      }\n\n      @Override\n      public boolean advanceExact(int doc) throws IOException {\n        return ptX.advanceExact(doc) && ptY.advanceExact(doc);\n      }\n    }, nullValue);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"32b9119890a8e82252b6cc341ac491d18fa1e49b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","32b9119890a8e82252b6cc341ac491d18fa1e49b"],"98f11c416d30e556e0004a9a84960702d12d35b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","32b9119890a8e82252b6cc341ac491d18fa1e49b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"32b9119890a8e82252b6cc341ac491d18fa1e49b":["28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["32b9119890a8e82252b6cc341ac491d18fa1e49b","28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"98f11c416d30e556e0004a9a84960702d12d35b1":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["98f11c416d30e556e0004a9a84960702d12d35b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}