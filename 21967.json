{"path":"src/java/org/apache/solr/request/SimpleFacets#getFieldMissingCount(SolrIndexSearcher,DocSet,String).mjava","commits":[{"id":"c9727734a64d33a1345c9251f53eb375f04c583e","date":1158874656,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/SimpleFacets#getFieldMissingCount(SolrIndexSearcher,DocSet,String).mjava","pathOld":"src/java/org/apache/solr/request/SimpleFacets#getFacetFieldMissingCount(String).mjava","sourceNew":"  /**\n   * Returns a count of the documents in the set which do not have any \n   * terms for for the specified field.\n   *\n   * @see SolrParams#FACET_MISSING\n   */\n  public static int getFieldMissingCount(SolrIndexSearcher searcher, DocSet docs, String fieldName)\n    throws IOException {\n\n    DocSet hasVal = searcher.getDocSet\n      (new ConstantScoreRangeQuery(fieldName, null, null, false, false));\n    return docs.andNotSize(hasVal);\n  }\n\n","sourceOld":"  /**\n   * Returns a count of the documents in the set which do not have any \n   * terms for for the specified field.\n   *\n   * @see SolrParams#FACET_MISSING\n   */\n  public int getFacetFieldMissingCount(String fieldName)\n    throws IOException {\n\n    DocSet hasVal = searcher.getDocSet\n      (new ConstantScoreRangeQuery(fieldName, null, null, false, false));\n    return docs.andNotSize(hasVal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b6124b1a8da43c086b34ee5005d89e20f4f0764","date":1189219182,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/SimpleFacets#getFieldMissingCount(SolrIndexSearcher,DocSet,String).mjava","pathOld":"src/java/org/apache/solr/request/SimpleFacets#getFieldMissingCount(SolrIndexSearcher,DocSet,String).mjava","sourceNew":"  /**\n   * Returns a count of the documents in the set which do not have any \n   * terms for for the specified field.\n   *\n   * @see FacetParams#FACET_MISSING\n   */\n  public static int getFieldMissingCount(SolrIndexSearcher searcher, DocSet docs, String fieldName)\n    throws IOException {\n\n    DocSet hasVal = searcher.getDocSet\n      (new ConstantScoreRangeQuery(fieldName, null, null, false, false));\n    return docs.andNotSize(hasVal);\n  }\n\n","sourceOld":"  /**\n   * Returns a count of the documents in the set which do not have any \n   * terms for for the specified field.\n   *\n   * @see SolrParams#FACET_MISSING\n   */\n  public static int getFieldMissingCount(SolrIndexSearcher searcher, DocSet docs, String fieldName)\n    throws IOException {\n\n    DocSet hasVal = searcher.getDocSet\n      (new ConstantScoreRangeQuery(fieldName, null, null, false, false));\n    return docs.andNotSize(hasVal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e77721aaf23393f6ea7926045ae6f8efea0ce8e","date":1247678464,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/request/SimpleFacets#getFieldMissingCount(SolrIndexSearcher,DocSet,String).mjava","pathOld":"src/java/org/apache/solr/request/SimpleFacets#getFieldMissingCount(SolrIndexSearcher,DocSet,String).mjava","sourceNew":"  /**\n   * Returns a count of the documents in the set which do not have any \n   * terms for for the specified field.\n   *\n   * @see FacetParams#FACET_MISSING\n   */\n  public static int getFieldMissingCount(SolrIndexSearcher searcher, DocSet docs, String fieldName)\n    throws IOException {\n\n    DocSet hasVal = searcher.getDocSet\n      (new TermRangeQuery(fieldName, null, null, false, false));\n    return docs.andNotSize(hasVal);\n  }\n\n","sourceOld":"  /**\n   * Returns a count of the documents in the set which do not have any \n   * terms for for the specified field.\n   *\n   * @see FacetParams#FACET_MISSING\n   */\n  public static int getFieldMissingCount(SolrIndexSearcher searcher, DocSet docs, String fieldName)\n    throws IOException {\n\n    DocSet hasVal = searcher.getDocSet\n      (new ConstantScoreRangeQuery(fieldName, null, null, false, false));\n    return docs.andNotSize(hasVal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/request/SimpleFacets#getFieldMissingCount(SolrIndexSearcher,DocSet,String).mjava","pathOld":"src/java/org/apache/solr/request/SimpleFacets#getFieldMissingCount(SolrIndexSearcher,DocSet,String).mjava","sourceNew":"  /**\n   * Returns a count of the documents in the set which do not have any \n   * terms for for the specified field.\n   *\n   * @see FacetParams#FACET_MISSING\n   */\n  public static int getFieldMissingCount(SolrIndexSearcher searcher, DocSet docs, String fieldName)\n    throws IOException {\n\n    DocSet hasVal = searcher.getDocSet\n      (new TermRangeQuery(fieldName, null, null, false, false));\n    return docs.andNotSize(hasVal);\n  }\n\n","sourceOld":"  /**\n   * Returns a count of the documents in the set which do not have any \n   * terms for for the specified field.\n   *\n   * @see FacetParams#FACET_MISSING\n   */\n  public static int getFieldMissingCount(SolrIndexSearcher searcher, DocSet docs, String fieldName)\n    throws IOException {\n\n    DocSet hasVal = searcher.getDocSet\n      (new TermRangeQuery(fieldName, null, null, false, false));\n    return docs.andNotSize(hasVal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e77721aaf23393f6ea7926045ae6f8efea0ce8e":["4b6124b1a8da43c086b34ee5005d89e20f4f0764"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1e77721aaf23393f6ea7926045ae6f8efea0ce8e"],"c9727734a64d33a1345c9251f53eb375f04c583e":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"4b6124b1a8da43c086b34ee5005d89e20f4f0764":["c9727734a64d33a1345c9251f53eb375f04c583e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1e77721aaf23393f6ea7926045ae6f8efea0ce8e":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["c9727734a64d33a1345c9251f53eb375f04c583e"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"c9727734a64d33a1345c9251f53eb375f04c583e":["4b6124b1a8da43c086b34ee5005d89e20f4f0764"],"4b6124b1a8da43c086b34ee5005d89e20f4f0764":["1e77721aaf23393f6ea7926045ae6f8efea0ce8e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}