{"path":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","pathOld":"modules/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","sourceNew":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", new StringReader(\"liście\"));\n\n    assertPOSToken(ts, \"liść\",  \"subst:pl:acc.nom.voc:m3\");\n    assertPOSToken(ts, \"list\",  \"subst:sg:loc.voc:m3\");\n    assertPOSToken(ts, \"lista\", \"subst:sg:dat.loc:f\");\n  }\n\n","sourceOld":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", new StringReader(\"liście\"));\n\n    assertPOSToken(ts, \"liść\",  \"subst:pl:acc.nom.voc:m3\");\n    assertPOSToken(ts, \"list\",  \"subst:sg:loc.voc:m3\");\n    assertPOSToken(ts, \"lista\", \"subst:sg:dat.loc:f\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84ab9fb766b354a9a9f16580a1162aac7ebbfc51","date":1340868936,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","sourceNew":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", new StringReader(\"liście\"));\n\n    assertPOSToken(ts, \"liście\",  \n        \"subst:sg:acc:n2\",\n        \"subst:sg:nom:n2\",\n        \"subst:sg:voc:n2\");\n\n    assertPOSToken(ts, \"liść\",  \n        \"subst:pl:acc:m3\",\n        \"subst:pl:nom:m3\",\n        \"subst:pl:voc:m3\");\n\n    assertPOSToken(ts, \"list\",  \n        \"subst:sg:loc:m3\",\n        \"subst:sg:voc:m3\");\n\n    assertPOSToken(ts, \"lista\", \n        \"subst:sg:dat:f\",\n        \"subst:sg:loc:f\");\n  }\n\n","sourceOld":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", new StringReader(\"liście\"));\n\n    assertPOSToken(ts, \"liść\",  \"subst:pl:acc.nom.voc:m3\");\n    assertPOSToken(ts, \"list\",  \"subst:sg:loc.voc:m3\");\n    assertPOSToken(ts, \"lista\", \"subst:sg:dat.loc:f\");\n  }\n\n","bugFix":null,"bugIntro":["782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","sourceNew":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", new StringReader(\"liście\"));\n\n    assertPOSToken(ts, \"liście\",  \n        \"subst:sg:acc:n2\",\n        \"subst:sg:nom:n2\",\n        \"subst:sg:voc:n2\");\n\n    assertPOSToken(ts, \"liść\",  \n        \"subst:pl:acc:m3\",\n        \"subst:pl:nom:m3\",\n        \"subst:pl:voc:m3\");\n\n    assertPOSToken(ts, \"list\",  \n        \"subst:sg:loc:m3\",\n        \"subst:sg:voc:m3\");\n\n    assertPOSToken(ts, \"lista\", \n        \"subst:sg:dat:f\",\n        \"subst:sg:loc:f\");\n  }\n\n","sourceOld":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", new StringReader(\"liście\"));\n\n    assertPOSToken(ts, \"liść\",  \"subst:pl:acc.nom.voc:m3\");\n    assertPOSToken(ts, \"list\",  \"subst:sg:loc.voc:m3\");\n    assertPOSToken(ts, \"lista\", \"subst:sg:dat.loc:f\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0a7ec5f5d873402b53b3800fb37ad5fbb9dc0b","date":1351024347,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","sourceNew":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", new StringReader(\"liście\"));\n\n    ts.reset();\n    assertPOSToken(ts, \"liście\",  \n        \"subst:sg:acc:n2\",\n        \"subst:sg:nom:n2\",\n        \"subst:sg:voc:n2\");\n\n    assertPOSToken(ts, \"liść\",  \n        \"subst:pl:acc:m3\",\n        \"subst:pl:nom:m3\",\n        \"subst:pl:voc:m3\");\n\n    assertPOSToken(ts, \"list\",  \n        \"subst:sg:loc:m3\",\n        \"subst:sg:voc:m3\");\n\n    assertPOSToken(ts, \"lista\", \n        \"subst:sg:dat:f\",\n        \"subst:sg:loc:f\");\n    ts.end();\n    ts.close();\n  }\n\n","sourceOld":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", new StringReader(\"liście\"));\n\n    assertPOSToken(ts, \"liście\",  \n        \"subst:sg:acc:n2\",\n        \"subst:sg:nom:n2\",\n        \"subst:sg:voc:n2\");\n\n    assertPOSToken(ts, \"liść\",  \n        \"subst:pl:acc:m3\",\n        \"subst:pl:nom:m3\",\n        \"subst:pl:voc:m3\");\n\n    assertPOSToken(ts, \"list\",  \n        \"subst:sg:loc:m3\",\n        \"subst:sg:voc:m3\");\n\n    assertPOSToken(ts, \"lista\", \n        \"subst:sg:dat:f\",\n        \"subst:sg:loc:f\");\n  }\n\n","bugFix":null,"bugIntro":["782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","sourceNew":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", new StringReader(\"liście\"));\n\n    ts.reset();\n    assertPOSToken(ts, \"liście\",  \n        \"subst:sg:acc:n2\",\n        \"subst:sg:nom:n2\",\n        \"subst:sg:voc:n2\");\n\n    assertPOSToken(ts, \"liść\",  \n        \"subst:pl:acc:m3\",\n        \"subst:pl:nom:m3\",\n        \"subst:pl:voc:m3\");\n\n    assertPOSToken(ts, \"list\",  \n        \"subst:sg:loc:m3\",\n        \"subst:sg:voc:m3\");\n\n    assertPOSToken(ts, \"lista\", \n        \"subst:sg:dat:f\",\n        \"subst:sg:loc:f\");\n    ts.end();\n    ts.close();\n  }\n\n","sourceOld":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", new StringReader(\"liście\"));\n\n    assertPOSToken(ts, \"liście\",  \n        \"subst:sg:acc:n2\",\n        \"subst:sg:nom:n2\",\n        \"subst:sg:voc:n2\");\n\n    assertPOSToken(ts, \"liść\",  \n        \"subst:pl:acc:m3\",\n        \"subst:pl:nom:m3\",\n        \"subst:pl:voc:m3\");\n\n    assertPOSToken(ts, \"list\",  \n        \"subst:sg:loc:m3\",\n        \"subst:sg:voc:m3\");\n\n    assertPOSToken(ts, \"lista\", \n        \"subst:sg:dat:f\",\n        \"subst:sg:loc:f\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c83d6c4335f31cae14f625a222bc842f20073dcd","date":1373306148,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","sourceNew":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", \"liście\");\n\n    ts.reset();\n    assertPOSToken(ts, \"liście\",  \n        \"subst:sg:acc:n2\",\n        \"subst:sg:nom:n2\",\n        \"subst:sg:voc:n2\");\n\n    assertPOSToken(ts, \"liść\",  \n        \"subst:pl:acc:m3\",\n        \"subst:pl:nom:m3\",\n        \"subst:pl:voc:m3\");\n\n    assertPOSToken(ts, \"list\",  \n        \"subst:sg:loc:m3\",\n        \"subst:sg:voc:m3\");\n\n    assertPOSToken(ts, \"lista\", \n        \"subst:sg:dat:f\",\n        \"subst:sg:loc:f\");\n    ts.end();\n    ts.close();\n  }\n\n","sourceOld":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", new StringReader(\"liście\"));\n\n    ts.reset();\n    assertPOSToken(ts, \"liście\",  \n        \"subst:sg:acc:n2\",\n        \"subst:sg:nom:n2\",\n        \"subst:sg:voc:n2\");\n\n    assertPOSToken(ts, \"liść\",  \n        \"subst:pl:acc:m3\",\n        \"subst:pl:nom:m3\",\n        \"subst:pl:voc:m3\");\n\n    assertPOSToken(ts, \"list\",  \n        \"subst:sg:loc:m3\",\n        \"subst:sg:voc:m3\");\n\n    assertPOSToken(ts, \"lista\", \n        \"subst:sg:dat:f\",\n        \"subst:sg:loc:f\");\n    ts.end();\n    ts.close();\n  }\n\n","bugFix":["69e043c521d4e8db770cc140c63f5ef51f03426a"],"bugIntro":["782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","sourceNew":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", \"liście\");\n\n    ts.reset();\n    assertPOSToken(ts, \"liście\",  \n        \"subst:sg:acc:n2\",\n        \"subst:sg:nom:n2\",\n        \"subst:sg:voc:n2\");\n\n    assertPOSToken(ts, \"liść\",  \n        \"subst:pl:acc:m3\",\n        \"subst:pl:nom:m3\",\n        \"subst:pl:voc:m3\");\n\n    assertPOSToken(ts, \"list\",  \n        \"subst:sg:loc:m3\",\n        \"subst:sg:voc:m3\");\n\n    assertPOSToken(ts, \"lista\", \n        \"subst:sg:dat:f\",\n        \"subst:sg:loc:f\");\n    ts.end();\n    ts.close();\n  }\n\n","sourceOld":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", new StringReader(\"liście\"));\n\n    ts.reset();\n    assertPOSToken(ts, \"liście\",  \n        \"subst:sg:acc:n2\",\n        \"subst:sg:nom:n2\",\n        \"subst:sg:voc:n2\");\n\n    assertPOSToken(ts, \"liść\",  \n        \"subst:pl:acc:m3\",\n        \"subst:pl:nom:m3\",\n        \"subst:pl:voc:m3\");\n\n    assertPOSToken(ts, \"list\",  \n        \"subst:sg:loc:m3\",\n        \"subst:sg:voc:m3\");\n\n    assertPOSToken(ts, \"lista\", \n        \"subst:sg:dat:f\",\n        \"subst:sg:loc:f\");\n    ts.end();\n    ts.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"782ed6a4b4ba50ec19734fc8db4e570ee193d627","date":1381127065,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","sourceNew":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    try (TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", \"liście\")) {\n      ts.reset();\n      assertPOSToken(ts, \"liście\",  \n        \"subst:sg:acc:n2\",\n        \"subst:sg:nom:n2\",\n        \"subst:sg:voc:n2\");\n\n      assertPOSToken(ts, \"liść\",  \n        \"subst:pl:acc:m3\",\n        \"subst:pl:nom:m3\",\n        \"subst:pl:voc:m3\");\n\n      assertPOSToken(ts, \"list\",  \n        \"subst:sg:loc:m3\",\n        \"subst:sg:voc:m3\");\n\n      assertPOSToken(ts, \"lista\", \n        \"subst:sg:dat:f\",\n        \"subst:sg:loc:f\");\n      ts.end();\n    }\n  }\n\n","sourceOld":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", \"liście\");\n\n    ts.reset();\n    assertPOSToken(ts, \"liście\",  \n        \"subst:sg:acc:n2\",\n        \"subst:sg:nom:n2\",\n        \"subst:sg:voc:n2\");\n\n    assertPOSToken(ts, \"liść\",  \n        \"subst:pl:acc:m3\",\n        \"subst:pl:nom:m3\",\n        \"subst:pl:voc:m3\");\n\n    assertPOSToken(ts, \"list\",  \n        \"subst:sg:loc:m3\",\n        \"subst:sg:voc:m3\");\n\n    assertPOSToken(ts, \"lista\", \n        \"subst:sg:dat:f\",\n        \"subst:sg:loc:f\");\n    ts.end();\n    ts.close();\n  }\n\n","bugFix":["2a0a7ec5f5d873402b53b3800fb37ad5fbb9dc0b","84ab9fb766b354a9a9f16580a1162aac7ebbfc51","c83d6c4335f31cae14f625a222bc842f20073dcd","c9372469b09ed273740e18f76520c99aa075358b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","sourceNew":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    try (Analyzer a = getTestAnalyzer();\n         TokenStream ts = a.tokenStream(\"dummy\", \"liście\")) {\n      ts.reset();\n      assertPOSToken(ts, \"liście\",  \n        \"subst:sg:acc:n2\",\n        \"subst:sg:nom:n2\",\n        \"subst:sg:voc:n2\");\n\n      assertPOSToken(ts, \"liść\",  \n        \"subst:pl:acc:m3\",\n        \"subst:pl:nom:m3\",\n        \"subst:pl:voc:m3\");\n\n      assertPOSToken(ts, \"list\",  \n        \"subst:sg:loc:m3\",\n        \"subst:sg:voc:m3\");\n\n      assertPOSToken(ts, \"lista\", \n        \"subst:sg:dat:f\",\n        \"subst:sg:loc:f\");\n      ts.end();\n    }\n  }\n\n","sourceOld":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    try (TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", \"liście\")) {\n      ts.reset();\n      assertPOSToken(ts, \"liście\",  \n        \"subst:sg:acc:n2\",\n        \"subst:sg:nom:n2\",\n        \"subst:sg:voc:n2\");\n\n      assertPOSToken(ts, \"liść\",  \n        \"subst:pl:acc:m3\",\n        \"subst:pl:nom:m3\",\n        \"subst:pl:voc:m3\");\n\n      assertPOSToken(ts, \"list\",  \n        \"subst:sg:loc:m3\",\n        \"subst:sg:voc:m3\");\n\n      assertPOSToken(ts, \"lista\", \n        \"subst:sg:dat:f\",\n        \"subst:sg:loc:f\");\n      ts.end();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testPOSAttribute().mjava","sourceNew":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    try (Analyzer a = getTestAnalyzer();\n         TokenStream ts = a.tokenStream(\"dummy\", \"liście\")) {\n      ts.reset();\n      assertPOSToken(ts, \"liście\",  \n        \"subst:sg:acc:n2\",\n        \"subst:sg:nom:n2\",\n        \"subst:sg:voc:n2\");\n\n      assertPOSToken(ts, \"liść\",  \n        \"subst:pl:acc:m3\",\n        \"subst:pl:nom:m3\",\n        \"subst:pl:voc:m3\");\n\n      assertPOSToken(ts, \"list\",  \n        \"subst:sg:loc:m3\",\n        \"subst:sg:voc:m3\");\n\n      assertPOSToken(ts, \"lista\", \n        \"subst:sg:dat:f\",\n        \"subst:sg:loc:f\");\n      ts.end();\n    }\n  }\n\n","sourceOld":"  /** Test morphosyntactic annotations. */\n  public final void testPOSAttribute() throws IOException {\n    try (TokenStream ts = getTestAnalyzer().tokenStream(\"dummy\", \"liście\")) {\n      ts.reset();\n      assertPOSToken(ts, \"liście\",  \n        \"subst:sg:acc:n2\",\n        \"subst:sg:nom:n2\",\n        \"subst:sg:voc:n2\");\n\n      assertPOSToken(ts, \"liść\",  \n        \"subst:pl:acc:m3\",\n        \"subst:pl:nom:m3\",\n        \"subst:pl:voc:m3\");\n\n      assertPOSToken(ts, \"list\",  \n        \"subst:sg:loc:m3\",\n        \"subst:sg:voc:m3\");\n\n      assertPOSToken(ts, \"lista\", \n        \"subst:sg:dat:f\",\n        \"subst:sg:loc:f\");\n      ts.end();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2a0a7ec5f5d873402b53b3800fb37ad5fbb9dc0b":["84ab9fb766b354a9a9f16580a1162aac7ebbfc51"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["782ed6a4b4ba50ec19734fc8db4e570ee193d627","a56958d7f71a28824f20031ffbb2e13502a0274e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["2a0a7ec5f5d873402b53b3800fb37ad5fbb9dc0b","c83d6c4335f31cae14f625a222bc842f20073dcd"],"c83d6c4335f31cae14f625a222bc842f20073dcd":["2a0a7ec5f5d873402b53b3800fb37ad5fbb9dc0b"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","84ab9fb766b354a9a9f16580a1162aac7ebbfc51"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"782ed6a4b4ba50ec19734fc8db4e570ee193d627":["c83d6c4335f31cae14f625a222bc842f20073dcd"],"84ab9fb766b354a9a9f16580a1162aac7ebbfc51":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"f2126b84bd093fa3d921582a109a0ee578c28126":["84ab9fb766b354a9a9f16580a1162aac7ebbfc51","2a0a7ec5f5d873402b53b3800fb37ad5fbb9dc0b"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56958d7f71a28824f20031ffbb2e13502a0274e"]},"commit2Childs":{"2a0a7ec5f5d873402b53b3800fb37ad5fbb9dc0b":["37a0f60745e53927c4c876cfe5b5a58170f0646c","c83d6c4335f31cae14f625a222bc842f20073dcd","f2126b84bd093fa3d921582a109a0ee578c28126"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","84ab9fb766b354a9a9f16580a1162aac7ebbfc51"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c83d6c4335f31cae14f625a222bc842f20073dcd":["37a0f60745e53927c4c876cfe5b5a58170f0646c","782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"84ab9fb766b354a9a9f16580a1162aac7ebbfc51":["2a0a7ec5f5d873402b53b3800fb37ad5fbb9dc0b","fe33227f6805edab2036cbb80645cc4e2d1fa424","f2126b84bd093fa3d921582a109a0ee578c28126"],"782ed6a4b4ba50ec19734fc8db4e570ee193d627":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","37a0f60745e53927c4c876cfe5b5a58170f0646c","fe33227f6805edab2036cbb80645cc4e2d1fa424","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}