{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/IntersectBlockReader#next().mjava","commits":[{"id":"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89","date":1567784912,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/IntersectBlockReader#next().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public BytesRef next() throws IOException {\n    clearTermState();\n\n    if (blockHeader == null) { // initial state\n      // note: don't call super.seekCeil here; we have our own logic\n\n      // Set the browser position to the block having the seek term.\n      // Even if -1, it's okay since we'll soon call nextKey().\n      long blockStartFP = getOrCreateDictionaryBrowser().seekBlock(seekTerm);\n      if (isBeyondLastTerm(seekTerm, blockStartFP)) {\n        return null; // EOF\n      }\n\n      // Starting at this block find and load the next matching block.\n      //   note: Since seekBlock was just called, we actually consider the current block as \"next\".\n      if (nextBlockMatchingPrefix() == false) { // note: starts at seek'ed block, which may have a match\n        return null; // EOF\n      }\n    }\n\n    do {\n\n      // look in the rest of this block.\n      BytesRef term = nextTermInBlockMatching();\n      if (term != null) {\n        return term;\n      }\n\n      // next term dict matching prefix\n    } while (nextBlockMatchingPrefix());\n\n    return null; // EOF\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23fcccd57316410c404dd37307a496ab850efa9c","date":1582897939,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/IntersectBlockReader#next().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/IntersectBlockReader#next().mjava","sourceNew":"  @Override\n  public BytesRef next() throws IOException {\n    if (blockHeader == null) {\n      if (!seekFirstBlock()) {\n        return null;\n      }\n      states = new int[32];\n      blockIteration = BlockIteration.NEXT;\n    }\n    termState = null;\n    do {\n      BytesRef term = nextTermInBlockMatching();\n      if (term != null) {\n        return term;\n      }\n    } while (nextBlock());\n    return null;\n  }\n\n","sourceOld":"  @Override\n  public BytesRef next() throws IOException {\n    clearTermState();\n\n    if (blockHeader == null) { // initial state\n      // note: don't call super.seekCeil here; we have our own logic\n\n      // Set the browser position to the block having the seek term.\n      // Even if -1, it's okay since we'll soon call nextKey().\n      long blockStartFP = getOrCreateDictionaryBrowser().seekBlock(seekTerm);\n      if (isBeyondLastTerm(seekTerm, blockStartFP)) {\n        return null; // EOF\n      }\n\n      // Starting at this block find and load the next matching block.\n      //   note: Since seekBlock was just called, we actually consider the current block as \"next\".\n      if (nextBlockMatchingPrefix() == false) { // note: starts at seek'ed block, which may have a match\n        return null; // EOF\n      }\n    }\n\n    do {\n\n      // look in the rest of this block.\n      BytesRef term = nextTermInBlockMatching();\n      if (term != null) {\n        return term;\n      }\n\n      // next term dict matching prefix\n    } while (nextBlockMatchingPrefix());\n\n    return null; // EOF\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"23fcccd57316410c404dd37307a496ab850efa9c":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23fcccd57316410c404dd37307a496ab850efa9c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["23fcccd57316410c404dd37307a496ab850efa9c"],"23fcccd57316410c404dd37307a496ab850efa9c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}