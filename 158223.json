{"path":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/analyzing/TestAnalyzingQueryParser#setUp().mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/analyzing/TestAnalyzingQueryParser#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/queryParser/analyzing/TestAnalyzingQueryParser#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    wildcardInput = new String[] { \"übersetzung über*ung\",\n        \"Mötley Cr\\u00fce Mötl?* Crü?\", \"Renée Zellweger Ren?? Zellw?ger\" };\n    wildcardExpected = new String[] { \"ubersetzung uber*ung\", \"motley crue motl?* cru?\",\n        \"renee zellweger ren?? zellw?ger\" };\n\n    prefixInput = new String[] { \"übersetzung übersetz*\",\n        \"Mötley Crüe Mötl* crü*\", \"René? Zellw*\" };\n    prefixExpected = new String[] { \"ubersetzung ubersetz*\", \"motley crue motl* cru*\",\n        \"rene? zellw*\" };\n\n    rangeInput = new String[] { \"[aa TO bb]\", \"{Anaïs TO Zoé}\" };\n    rangeExpected = new String[] { \"[aa TO bb]\", \"{anais TO zoe}\" };\n\n    fuzzyInput = new String[] { \"Übersetzung Übersetzung~0.9\",\n        \"Mötley Crüe Mötley~0.75 Crüe~0.5\",\n        \"Renée Zellweger Renée~0.9 Zellweger~\" };\n    fuzzyExpected = new String[] { \"ubersetzung ubersetzung~0.9\",\n        \"motley crue motley~0.75 crue~0.5\", \"renee zellweger renee~0.9 zellweger~0.5\" };\n\n    a = new ASCIIAnalyzer();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    wildcardInput = new String[] { \"übersetzung über*ung\",\n        \"Mötley Cr\\u00fce Mötl?* Crü?\", \"Renée Zellweger Ren?? Zellw?ger\" };\n    wildcardExpected = new String[] { \"ubersetzung uber*ung\", \"motley crue motl?* cru?\",\n        \"renee zellweger ren?? zellw?ger\" };\n\n    prefixInput = new String[] { \"übersetzung übersetz*\",\n        \"Mötley Crüe Mötl* crü*\", \"René? Zellw*\" };\n    prefixExpected = new String[] { \"ubersetzung ubersetz*\", \"motley crue motl* cru*\",\n        \"rene? zellw*\" };\n\n    rangeInput = new String[] { \"[aa TO bb]\", \"{Anaïs TO Zoé}\" };\n    rangeExpected = new String[] { \"[aa TO bb]\", \"{anais TO zoe}\" };\n\n    fuzzyInput = new String[] { \"Übersetzung Übersetzung~0.9\",\n        \"Mötley Crüe Mötley~0.75 Crüe~0.5\",\n        \"Renée Zellweger Renée~0.9 Zellweger~\" };\n    fuzzyExpected = new String[] { \"ubersetzung ubersetzung~0.9\",\n        \"motley crue motley~0.75 crue~0.5\", \"renee zellweger renee~0.9 zellweger~0.5\" };\n\n    a = new ASCIIAnalyzer();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/analyzing/TestAnalyzingQueryParser#setUp().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/analyzing/TestAnalyzingQueryParser#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    wildcardInput = new String[] { \"übersetzung über*ung\",\n        \"Mötley Cr\\u00fce Mötl?* Crü?\", \"Renée Zellweger Ren?? Zellw?ger\" };\n    wildcardExpected = new String[] { \"ubersetzung uber*ung\", \"motley crue motl?* cru?\",\n        \"renee zellweger ren?? zellw?ger\" };\n\n    prefixInput = new String[] { \"übersetzung übersetz*\",\n        \"Mötley Crüe Mötl* crü*\", \"René? Zellw*\" };\n    prefixExpected = new String[] { \"ubersetzung ubersetz*\", \"motley crue motl* cru*\",\n        \"rene? zellw*\" };\n\n    rangeInput = new String[] { \"[aa TO bb]\", \"{Anaïs TO Zoé}\" };\n    rangeExpected = new String[] { \"[aa TO bb]\", \"{anais TO zoe}\" };\n\n    fuzzyInput = new String[] { \"Übersetzung Übersetzung~0.9\",\n        \"Mötley Crüe Mötley~0.75 Crüe~0.5\",\n        \"Renée Zellweger Renée~0.9 Zellweger~\" };\n    fuzzyExpected = new String[] { \"ubersetzung ubersetzung~0.9\",\n        \"motley crue motley~0.75 crue~0.5\", \"renee zellweger renee~0.9 zellweger~0.5\" };\n\n    a = new ASCIIAnalyzer();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    wildcardInput = new String[] { \"übersetzung über*ung\",\n        \"Mötley Cr\\u00fce Mötl?* Crü?\", \"Renée Zellweger Ren?? Zellw?ger\" };\n    wildcardExpected = new String[] { \"ubersetzung uber*ung\", \"motley crue motl?* cru?\",\n        \"renee zellweger ren?? zellw?ger\" };\n\n    prefixInput = new String[] { \"übersetzung übersetz*\",\n        \"Mötley Crüe Mötl* crü*\", \"René? Zellw*\" };\n    prefixExpected = new String[] { \"ubersetzung ubersetz*\", \"motley crue motl* cru*\",\n        \"rene? zellw*\" };\n\n    rangeInput = new String[] { \"[aa TO bb]\", \"{Anaïs TO Zoé}\" };\n    rangeExpected = new String[] { \"[aa TO bb]\", \"{anais TO zoe}\" };\n\n    fuzzyInput = new String[] { \"Übersetzung Übersetzung~0.9\",\n        \"Mötley Crüe Mötley~0.75 Crüe~0.5\",\n        \"Renée Zellweger Renée~0.9 Zellweger~\" };\n    fuzzyExpected = new String[] { \"ubersetzung ubersetzung~0.9\",\n        \"motley crue motley~0.75 crue~0.5\", \"renee zellweger renee~0.9 zellweger~0.5\" };\n\n    a = new ASCIIAnalyzer();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a4d59223802237d352245759cf541e315aab20a","date":1285686672,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/analyzing/TestAnalyzingQueryParser#setUp().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/analyzing/TestAnalyzingQueryParser#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    wildcardInput = new String[] { \"übersetzung über*ung\",\n        \"Mötley Cr\\u00fce Mötl?* Crü?\", \"Renée Zellweger Ren?? Zellw?ger\" };\n    wildcardExpected = new String[] { \"ubersetzung uber*ung\", \"motley crue motl?* cru?\",\n        \"renee zellweger ren?? zellw?ger\" };\n\n    prefixInput = new String[] { \"übersetzung übersetz*\",\n        \"Mötley Crüe Mötl* crü*\", \"René? Zellw*\" };\n    prefixExpected = new String[] { \"ubersetzung ubersetz*\", \"motley crue motl* cru*\",\n        \"rene? zellw*\" };\n\n    rangeInput = new String[] { \"[aa TO bb]\", \"{Anaïs TO Zoé}\" };\n    rangeExpected = new String[] { \"[aa TO bb]\", \"{anais TO zoe}\" };\n\n    fuzzyInput = new String[] { \"Übersetzung Übersetzung~0.9\",\n        \"Mötley Crüe Mötley~0.75 Crüe~0.5\",\n        \"Renée Zellweger Renée~0.9 Zellweger~\" };\n    fuzzyExpected = new String[] { \"ubersetzung ubersetzung~0.9\",\n        \"motley crue motley~0.75 crue~0.5\", \"renee zellweger renee~0.9 zellweger~2.0\" };\n\n    a = new ASCIIAnalyzer();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    wildcardInput = new String[] { \"übersetzung über*ung\",\n        \"Mötley Cr\\u00fce Mötl?* Crü?\", \"Renée Zellweger Ren?? Zellw?ger\" };\n    wildcardExpected = new String[] { \"ubersetzung uber*ung\", \"motley crue motl?* cru?\",\n        \"renee zellweger ren?? zellw?ger\" };\n\n    prefixInput = new String[] { \"übersetzung übersetz*\",\n        \"Mötley Crüe Mötl* crü*\", \"René? Zellw*\" };\n    prefixExpected = new String[] { \"ubersetzung ubersetz*\", \"motley crue motl* cru*\",\n        \"rene? zellw*\" };\n\n    rangeInput = new String[] { \"[aa TO bb]\", \"{Anaïs TO Zoé}\" };\n    rangeExpected = new String[] { \"[aa TO bb]\", \"{anais TO zoe}\" };\n\n    fuzzyInput = new String[] { \"Übersetzung Übersetzung~0.9\",\n        \"Mötley Crüe Mötley~0.75 Crüe~0.5\",\n        \"Renée Zellweger Renée~0.9 Zellweger~\" };\n    fuzzyExpected = new String[] { \"ubersetzung ubersetzung~0.9\",\n        \"motley crue motley~0.75 crue~0.5\", \"renee zellweger renee~0.9 zellweger~0.5\" };\n\n    a = new ASCIIAnalyzer();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/analyzing/TestAnalyzingQueryParser#setUp().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/analyzing/TestAnalyzingQueryParser#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    wildcardInput = new String[] { \"übersetzung über*ung\",\n        \"Mötley Cr\\u00fce Mötl?* Crü?\", \"Renée Zellweger Ren?? Zellw?ger\" };\n    wildcardExpected = new String[] { \"ubersetzung uber*ung\", \"motley crue motl?* cru?\",\n        \"renee zellweger ren?? zellw?ger\" };\n\n    prefixInput = new String[] { \"übersetzung übersetz*\",\n        \"Mötley Crüe Mötl* crü*\", \"René? Zellw*\" };\n    prefixExpected = new String[] { \"ubersetzung ubersetz*\", \"motley crue motl* cru*\",\n        \"rene? zellw*\" };\n\n    rangeInput = new String[] { \"[aa TO bb]\", \"{Anaïs TO Zoé}\" };\n    rangeExpected = new String[] { \"[aa TO bb]\", \"{anais TO zoe}\" };\n\n    fuzzyInput = new String[] { \"Übersetzung Übersetzung~0.9\",\n        \"Mötley Crüe Mötley~0.75 Crüe~0.5\",\n        \"Renée Zellweger Renée~0.9 Zellweger~\" };\n    fuzzyExpected = new String[] { \"ubersetzung ubersetzung~0.9\",\n        \"motley crue motley~0.75 crue~0.5\", \"renee zellweger renee~0.9 zellweger~2.0\" };\n\n    a = new ASCIIAnalyzer();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    wildcardInput = new String[] { \"übersetzung über*ung\",\n        \"Mötley Cr\\u00fce Mötl?* Crü?\", \"Renée Zellweger Ren?? Zellw?ger\" };\n    wildcardExpected = new String[] { \"ubersetzung uber*ung\", \"motley crue motl?* cru?\",\n        \"renee zellweger ren?? zellw?ger\" };\n\n    prefixInput = new String[] { \"übersetzung übersetz*\",\n        \"Mötley Crüe Mötl* crü*\", \"René? Zellw*\" };\n    prefixExpected = new String[] { \"ubersetzung ubersetz*\", \"motley crue motl* cru*\",\n        \"rene? zellw*\" };\n\n    rangeInput = new String[] { \"[aa TO bb]\", \"{Anaïs TO Zoé}\" };\n    rangeExpected = new String[] { \"[aa TO bb]\", \"{anais TO zoe}\" };\n\n    fuzzyInput = new String[] { \"Übersetzung Übersetzung~0.9\",\n        \"Mötley Crüe Mötley~0.75 Crüe~0.5\",\n        \"Renée Zellweger Renée~0.9 Zellweger~\" };\n    fuzzyExpected = new String[] { \"ubersetzung ubersetzung~0.9\",\n        \"motley crue motley~0.75 crue~0.5\", \"renee zellweger renee~0.9 zellweger~0.5\" };\n\n    a = new ASCIIAnalyzer();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a53a291ad9b1cc050d846b68758c061a55d52734","date":1310437344,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/analyzing/TestAnalyzingQueryParser#setUp().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/analyzing/TestAnalyzingQueryParser#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    wildcardInput = new String[] { \"übersetzung über*ung\",\n        \"Mötley Cr\\u00fce Mötl?* Crü?\", \"Renée Zellweger Ren?? Zellw?ger\" };\n    wildcardExpected = new String[] { \"ubersetzung uber*ung\", \"motley crue motl?* cru?\",\n        \"renee zellweger ren?? zellw?ger\" };\n\n    prefixInput = new String[] { \"übersetzung übersetz*\",\n        \"Mötley Crüe Mötl* crü*\", \"René? Zellw*\" };\n    prefixExpected = new String[] { \"ubersetzung ubersetz*\", \"motley crue motl* cru*\",\n        \"rene? zellw*\" };\n\n    rangeInput = new String[] { \"[aa TO bb]\", \"{Anaïs TO Zoé}\" };\n    rangeExpected = new String[] { \"[aa TO bb]\", \"{anais TO zoe}\" };\n\n    fuzzyInput = new String[] { \"Übersetzung Übersetzung~0.9\",\n        \"Mötley Crüe Mötley~0.75 Crüe~0.5\",\n        \"Renée Zellweger Renée~0.9 Zellweger~\" };\n    fuzzyExpected = new String[] { \"ubersetzung ubersetzung~0.9\",\n        \"motley crue motley~0.75 crue~0.5\", \"renee zellweger renee~0.9 zellweger~2.0\" };\n\n    a = new ASCIIAnalyzer();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    wildcardInput = new String[] { \"übersetzung über*ung\",\n        \"Mötley Cr\\u00fce Mötl?* Crü?\", \"Renée Zellweger Ren?? Zellw?ger\" };\n    wildcardExpected = new String[] { \"ubersetzung uber*ung\", \"motley crue motl?* cru?\",\n        \"renee zellweger ren?? zellw?ger\" };\n\n    prefixInput = new String[] { \"übersetzung übersetz*\",\n        \"Mötley Crüe Mötl* crü*\", \"René? Zellw*\" };\n    prefixExpected = new String[] { \"ubersetzung ubersetz*\", \"motley crue motl* cru*\",\n        \"rene? zellw*\" };\n\n    rangeInput = new String[] { \"[aa TO bb]\", \"{Anaïs TO Zoé}\" };\n    rangeExpected = new String[] { \"[aa TO bb]\", \"{anais TO zoe}\" };\n\n    fuzzyInput = new String[] { \"Übersetzung Übersetzung~0.9\",\n        \"Mötley Crüe Mötley~0.75 Crüe~0.5\",\n        \"Renée Zellweger Renée~0.9 Zellweger~\" };\n    fuzzyExpected = new String[] { \"ubersetzung ubersetzung~0.9\",\n        \"motley crue motley~0.75 crue~0.5\", \"renee zellweger renee~0.9 zellweger~2.0\" };\n\n    a = new ASCIIAnalyzer();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3a4d59223802237d352245759cf541e315aab20a":["43b04c27924fe393e38e9f0986e32c634f261859"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af","3a4d59223802237d352245759cf541e315aab20a"],"a53a291ad9b1cc050d846b68758c061a55d52734":["3a4d59223802237d352245759cf541e315aab20a"],"43b04c27924fe393e38e9f0986e32c634f261859":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a53a291ad9b1cc050d846b68758c061a55d52734"]},"commit2Childs":{"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","43b04c27924fe393e38e9f0986e32c634f261859"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"3a4d59223802237d352245759cf541e315aab20a":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a53a291ad9b1cc050d846b68758c061a55d52734"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"a53a291ad9b1cc050d846b68758c061a55d52734":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43b04c27924fe393e38e9f0986e32c634f261859":["3a4d59223802237d352245759cf541e315aab20a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}