{"path":"solr/core/src/test/org/apache/solr/core/TestLazyCores#testCreateSame().mjava","commits":[{"id":"a0cf46558b3f7708ed3a21e174b9e11cd30e26be","date":1365551184,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#testCreateSame().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCreateSame() throws Exception {\n    final CoreContainer cc = init();\n    try {\n      // First, try all 4 combinations of load on startup and transient\n      final CoreAdminHandler admin = new CoreAdminHandler(cc);\n      SolrCore lc2 = cc.getCore(\"collectionLazy2\");\n      SolrCore lc4 = cc.getCore(\"collectionLazy4\");\n      SolrCore lc5 = cc.getCore(\"collectionLazy5\");\n      SolrCore lc6 = cc.getCore(\"collectionLazy6\");\n\n      copyMinConf(new File(solrHomeDirectory, \"t2\"));\n      copyMinConf(new File(solrHomeDirectory, \"t4\"));\n      copyMinConf(new File(solrHomeDirectory, \"t5\"));\n      copyMinConf(new File(solrHomeDirectory, \"t6\"));\n\n      tryCreateFail(admin, \"t2\", lc2.getDataDir(), \"Core with same data dir\", \"collectionLazy2\", \"already exists\");\n      tryCreateFail(admin, \"t4\", lc4.getDataDir(), \"Core with same data dir\", \"collectionLazy4\", \"already exists\");\n      tryCreateFail(admin, \"t5\", lc5.getDataDir(), \"Core with same data dir\", \"collectionLazy5\", \"already exists\");\n      tryCreateFail(admin, \"t6\", lc6.getDataDir(), \"Core with same data dir\", \"collectionLazy6\", \"already exists\");\n\n      // Insure a newly-created core fails too\n      CoreDescriptor d1 = new CoreDescriptor(cc, \"core1\", \"./core1\");\n      d1.setSchemaName(\"schema-tiny.xml\");\n      d1.setConfigName(\"solrconfig-minimal.xml\");\n      copyMinConf(new File(solrHomeDirectory, \"core1\"));\n      SolrCore core1 = cc.create(d1);\n      cc.register(core1, false);\n      copyMinConf(new File(solrHomeDirectory, \"core77\"));\n      tryCreateFail(admin, \"core77\", core1.getDataDir(), \"Core with same data dir\", \"core1\", \"already exists\");\n\n      // Should also fail with the same name\n      tryCreateFail(admin, \"collectionLazy2\", \"t12\", \"Core with name\", \"collectionLazy2\", \"already exists\");\n      tryCreateFail(admin, \"collectionLazy4\", \"t14\", \"Core with name\", \"collectionLazy4\", \"already exists\");\n      tryCreateFail(admin, \"collectionLazy5\", \"t15\", \"Core with name\", \"collectionLazy5\", \"already exists\");\n      tryCreateFail(admin, \"collectionLazy6\", \"t16\", \"Core with name\", \"collectionLazy6\", \"already exists\");\n      tryCreateFail(admin, \"core1\", \"t10\", \"Core with name\", \"core1\", \"already exists\");\n\n      core1.close();\n      lc2.close();\n      lc4.close();\n      lc5.close();\n      lc6.close();\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9409650933cc688e77e565092a25e58adfc2e18d","date":1366663164,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#testCreateSame().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#testCreateSame().mjava","sourceNew":"  @Test\n  public void testCreateSame() throws Exception {\n    final CoreContainer cc = init();\n    try {\n      // First, try all 4 combinations of load on startup and transient\n      final CoreAdminHandler admin = new CoreAdminHandler(cc);\n      SolrCore lc2 = cc.getCore(\"collectionLazy2\");\n      SolrCore lc4 = cc.getCore(\"collectionLazy4\");\n      SolrCore lc5 = cc.getCore(\"collectionLazy5\");\n      SolrCore lc6 = cc.getCore(\"collectionLazy6\");\n\n      copyMinConf(new File(solrHomeDirectory, \"t2\"));\n      copyMinConf(new File(solrHomeDirectory, \"t4\"));\n      copyMinConf(new File(solrHomeDirectory, \"t5\"));\n      copyMinConf(new File(solrHomeDirectory, \"t6\"));\n\n\n      // Should also fail with the same name\n      tryCreateFail(admin, \"collectionLazy2\", \"t12\", \"Core with name\", \"collectionLazy2\", \"already exists\");\n      tryCreateFail(admin, \"collectionLazy4\", \"t14\", \"Core with name\", \"collectionLazy4\", \"already exists\");\n      tryCreateFail(admin, \"collectionLazy5\", \"t15\", \"Core with name\", \"collectionLazy5\", \"already exists\");\n      tryCreateFail(admin, \"collectionLazy6\", \"t16\", \"Core with name\", \"collectionLazy6\", \"already exists\");\n\n      lc2.close();\n      lc4.close();\n      lc5.close();\n      lc6.close();\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testCreateSame() throws Exception {\n    final CoreContainer cc = init();\n    try {\n      // First, try all 4 combinations of load on startup and transient\n      final CoreAdminHandler admin = new CoreAdminHandler(cc);\n      SolrCore lc2 = cc.getCore(\"collectionLazy2\");\n      SolrCore lc4 = cc.getCore(\"collectionLazy4\");\n      SolrCore lc5 = cc.getCore(\"collectionLazy5\");\n      SolrCore lc6 = cc.getCore(\"collectionLazy6\");\n\n      copyMinConf(new File(solrHomeDirectory, \"t2\"));\n      copyMinConf(new File(solrHomeDirectory, \"t4\"));\n      copyMinConf(new File(solrHomeDirectory, \"t5\"));\n      copyMinConf(new File(solrHomeDirectory, \"t6\"));\n\n      tryCreateFail(admin, \"t2\", lc2.getDataDir(), \"Core with same data dir\", \"collectionLazy2\", \"already exists\");\n      tryCreateFail(admin, \"t4\", lc4.getDataDir(), \"Core with same data dir\", \"collectionLazy4\", \"already exists\");\n      tryCreateFail(admin, \"t5\", lc5.getDataDir(), \"Core with same data dir\", \"collectionLazy5\", \"already exists\");\n      tryCreateFail(admin, \"t6\", lc6.getDataDir(), \"Core with same data dir\", \"collectionLazy6\", \"already exists\");\n\n      // Insure a newly-created core fails too\n      CoreDescriptor d1 = new CoreDescriptor(cc, \"core1\", \"./core1\");\n      d1.setSchemaName(\"schema-tiny.xml\");\n      d1.setConfigName(\"solrconfig-minimal.xml\");\n      copyMinConf(new File(solrHomeDirectory, \"core1\"));\n      SolrCore core1 = cc.create(d1);\n      cc.register(core1, false);\n      copyMinConf(new File(solrHomeDirectory, \"core77\"));\n      tryCreateFail(admin, \"core77\", core1.getDataDir(), \"Core with same data dir\", \"core1\", \"already exists\");\n\n      // Should also fail with the same name\n      tryCreateFail(admin, \"collectionLazy2\", \"t12\", \"Core with name\", \"collectionLazy2\", \"already exists\");\n      tryCreateFail(admin, \"collectionLazy4\", \"t14\", \"Core with name\", \"collectionLazy4\", \"already exists\");\n      tryCreateFail(admin, \"collectionLazy5\", \"t15\", \"Core with name\", \"collectionLazy5\", \"already exists\");\n      tryCreateFail(admin, \"collectionLazy6\", \"t16\", \"Core with name\", \"collectionLazy6\", \"already exists\");\n      tryCreateFail(admin, \"core1\", \"t10\", \"Core with name\", \"core1\", \"already exists\");\n\n      core1.close();\n      lc2.close();\n      lc4.close();\n      lc5.close();\n      lc6.close();\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","date":1448892165,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#testCreateSame().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#testCreateSame().mjava","sourceNew":"  @Test\n  public void testCreateSame() throws Exception {\n    final CoreContainer cc = init();\n    try {\n      // First, try all 4 combinations of load on startup and transient\n      final CoreAdminHandler admin = new CoreAdminHandler(cc);\n      SolrCore lc2 = cc.getCore(\"collection2\");\n      SolrCore lc4 = cc.getCore(\"collection4\");\n      SolrCore lc5 = cc.getCore(\"collection5\");\n      SolrCore lc6 = cc.getCore(\"collection6\");\n\n      copyMinConf(new File(solrHomeDirectory, \"t2\"));\n      copyMinConf(new File(solrHomeDirectory, \"t4\"));\n      copyMinConf(new File(solrHomeDirectory, \"t5\"));\n      copyMinConf(new File(solrHomeDirectory, \"t6\"));\n\n\n      // Should also fail with the same name\n      tryCreateFail(admin, \"collection2\", \"t12\", \"Core with name\", \"collection2\", \"already exists\");\n      tryCreateFail(admin, \"collection4\", \"t14\", \"Core with name\", \"collection4\", \"already exists\");\n      tryCreateFail(admin, \"collection5\", \"t15\", \"Core with name\", \"collection5\", \"already exists\");\n      tryCreateFail(admin, \"collection6\", \"t16\", \"Core with name\", \"collection6\", \"already exists\");\n\n      lc2.close();\n      lc4.close();\n      lc5.close();\n      lc6.close();\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testCreateSame() throws Exception {\n    final CoreContainer cc = init();\n    try {\n      // First, try all 4 combinations of load on startup and transient\n      final CoreAdminHandler admin = new CoreAdminHandler(cc);\n      SolrCore lc2 = cc.getCore(\"collectionLazy2\");\n      SolrCore lc4 = cc.getCore(\"collectionLazy4\");\n      SolrCore lc5 = cc.getCore(\"collectionLazy5\");\n      SolrCore lc6 = cc.getCore(\"collectionLazy6\");\n\n      copyMinConf(new File(solrHomeDirectory, \"t2\"));\n      copyMinConf(new File(solrHomeDirectory, \"t4\"));\n      copyMinConf(new File(solrHomeDirectory, \"t5\"));\n      copyMinConf(new File(solrHomeDirectory, \"t6\"));\n\n\n      // Should also fail with the same name\n      tryCreateFail(admin, \"collectionLazy2\", \"t12\", \"Core with name\", \"collectionLazy2\", \"already exists\");\n      tryCreateFail(admin, \"collectionLazy4\", \"t14\", \"Core with name\", \"collectionLazy4\", \"already exists\");\n      tryCreateFail(admin, \"collectionLazy5\", \"t15\", \"Core with name\", \"collectionLazy5\", \"already exists\");\n      tryCreateFail(admin, \"collectionLazy6\", \"t16\", \"Core with name\", \"collectionLazy6\", \"already exists\");\n\n      lc2.close();\n      lc4.close();\n      lc5.close();\n      lc6.close();\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0cf46558b3f7708ed3a21e174b9e11cd30e26be":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["9409650933cc688e77e565092a25e58adfc2e18d"],"9409650933cc688e77e565092a25e58adfc2e18d":["a0cf46558b3f7708ed3a21e174b9e11cd30e26be"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"]},"commit2Childs":{"a0cf46558b3f7708ed3a21e174b9e11cd30e26be":["9409650933cc688e77e565092a25e58adfc2e18d"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9409650933cc688e77e565092a25e58adfc2e18d":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0cf46558b3f7708ed3a21e174b9e11cd30e26be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}