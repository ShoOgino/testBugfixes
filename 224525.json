{"path":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#SlowCompositeReaderWrapper(CompositeReader).mjava","commits":[{"id":"d211216c83f01894810543d1c107160a9ae3650b","date":1488289605,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#SlowCompositeReaderWrapper(CompositeReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#SlowCompositeReaderWrapper(CompositeReader,boolean).mjava","sourceNew":"  SlowCompositeReaderWrapper(CompositeReader reader) throws IOException {\n    super();\n    in = reader;\n    fields = MultiFields.getFields(in);\n    in.registerParentReader(this);\n  }\n\n","sourceOld":"  SlowCompositeReaderWrapper(CompositeReader reader, boolean merging) throws IOException {\n    super();\n    in = reader;\n    fields = MultiFields.getFields(in);\n    in.registerParentReader(this);\n    this.merging = merging;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31741cf1390044e38a2ec3127cf302ba841bfd75","date":1491292636,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#SlowCompositeReaderWrapper(CompositeReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#SlowCompositeReaderWrapper(CompositeReader).mjava","sourceNew":"  SlowCompositeReaderWrapper(CompositeReader reader) throws IOException {\n    super();\n    in = reader;\n    fields = MultiFields.getFields(in);\n    in.registerParentReader(this);\n    if (reader.leaves().isEmpty()) {\n      metaData = new LeafMetaData(Version.LATEST.major, Version.LATEST, null);\n    } else {\n      Version minVersion = reader.leaves().stream()\n          .map(LeafReaderContext::reader)\n          .map(LeafReader::getMetaData)\n          .map(LeafMetaData::getMinVersion)\n          .reduce((v1, v2) -> v1 == null ? null : v2 == null ? null : v2.onOrAfter(v1) ? v1 : v2)\n          .get();\n      metaData = new LeafMetaData(reader.leaves().get(0).reader().getMetaData().getCreatedVersionMajor(), minVersion, null);\n    }\n  }\n\n","sourceOld":"  SlowCompositeReaderWrapper(CompositeReader reader) throws IOException {\n    super();\n    in = reader;\n    fields = MultiFields.getFields(in);\n    in.registerParentReader(this);\n  }\n\n","bugFix":null,"bugIntro":["741d5890398fb096a7d6c2c9de8d33ec7ef6647d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"92212fd254551a0b1156aafc3a1a6ed1a43932ad","date":1491296431,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#SlowCompositeReaderWrapper(CompositeReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#SlowCompositeReaderWrapper(CompositeReader).mjava","sourceNew":"  SlowCompositeReaderWrapper(CompositeReader reader) throws IOException {\n    super();\n    in = reader;\n    fields = MultiFields.getFields(in);\n    in.registerParentReader(this);\n    if (reader.leaves().isEmpty()) {\n      metaData = new LeafMetaData(Version.LATEST.major, Version.LATEST, null);\n    } else {\n      Version minVersion = reader.leaves().stream()\n          .map(LeafReaderContext::reader)\n          .map(LeafReader::getMetaData)\n          .map(LeafMetaData::getMinVersion)\n          .reduce((v1, v2) -> v1 == null ? null : v2 == null ? null : v2.onOrAfter(v1) ? v1 : v2)\n          .get();\n      metaData = new LeafMetaData(reader.leaves().get(0).reader().getMetaData().getCreatedVersionMajor(), minVersion, null);\n    }\n  }\n\n","sourceOld":"  SlowCompositeReaderWrapper(CompositeReader reader) throws IOException {\n    super();\n    in = reader;\n    fields = MultiFields.getFields(in);\n    in.registerParentReader(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"741d5890398fb096a7d6c2c9de8d33ec7ef6647d","date":1506717187,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#SlowCompositeReaderWrapper(CompositeReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#SlowCompositeReaderWrapper(CompositeReader).mjava","sourceNew":"  SlowCompositeReaderWrapper(CompositeReader reader) throws IOException {\n    super();\n    in = reader;\n    fields = MultiFields.getFields(in);\n    in.registerParentReader(this);\n    if (reader.leaves().isEmpty()) {\n      metaData = new LeafMetaData(Version.LATEST.major, Version.LATEST, null);\n    } else {\n      Version minVersion = Version.LATEST;\n      for (LeafReaderContext leafReaderContext : reader.leaves()) {\n        Version leafVersion = leafReaderContext.reader().getMetaData().getMinVersion();\n        if (leafVersion == null) {\n          minVersion = null;\n          break;\n        } else if (minVersion.onOrAfter(leafVersion)) {\n          minVersion = leafVersion;\n        }\n      }\n      metaData = new LeafMetaData(reader.leaves().get(0).reader().getMetaData().getCreatedVersionMajor(), minVersion, null);\n    }\n  }\n\n","sourceOld":"  SlowCompositeReaderWrapper(CompositeReader reader) throws IOException {\n    super();\n    in = reader;\n    fields = MultiFields.getFields(in);\n    in.registerParentReader(this);\n    if (reader.leaves().isEmpty()) {\n      metaData = new LeafMetaData(Version.LATEST.major, Version.LATEST, null);\n    } else {\n      Version minVersion = reader.leaves().stream()\n          .map(LeafReaderContext::reader)\n          .map(LeafReader::getMetaData)\n          .map(LeafMetaData::getMinVersion)\n          .reduce((v1, v2) -> v1 == null ? null : v2 == null ? null : v2.onOrAfter(v1) ? v1 : v2)\n          .get();\n      metaData = new LeafMetaData(reader.leaves().get(0).reader().getMetaData().getCreatedVersionMajor(), minVersion, null);\n    }\n  }\n\n","bugFix":["31741cf1390044e38a2ec3127cf302ba841bfd75"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6240b74b884c5587f2a4062dd27d6c32bf228889","date":1507037235,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#SlowCompositeReaderWrapper(CompositeReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#SlowCompositeReaderWrapper(CompositeReader).mjava","sourceNew":"  SlowCompositeReaderWrapper(CompositeReader reader) throws IOException {\n    super();\n    in = reader;\n    fields = MultiFields.getFields(in);\n    in.registerParentReader(this);\n    if (reader.leaves().isEmpty()) {\n      metaData = new LeafMetaData(Version.LATEST.major, Version.LATEST, null);\n    } else {\n      Version minVersion = Version.LATEST;\n      for (LeafReaderContext leafReaderContext : reader.leaves()) {\n        Version leafVersion = leafReaderContext.reader().getMetaData().getMinVersion();\n        if (leafVersion == null) {\n          minVersion = null;\n          break;\n        } else if (minVersion.onOrAfter(leafVersion)) {\n          minVersion = leafVersion;\n        }\n      }\n      metaData = new LeafMetaData(reader.leaves().get(0).reader().getMetaData().getCreatedVersionMajor(), minVersion, null);\n    }\n  }\n\n","sourceOld":"  SlowCompositeReaderWrapper(CompositeReader reader) throws IOException {\n    super();\n    in = reader;\n    fields = MultiFields.getFields(in);\n    in.registerParentReader(this);\n    if (reader.leaves().isEmpty()) {\n      metaData = new LeafMetaData(Version.LATEST.major, Version.LATEST, null);\n    } else {\n      Version minVersion = reader.leaves().stream()\n          .map(LeafReaderContext::reader)\n          .map(LeafReader::getMetaData)\n          .map(LeafMetaData::getMinVersion)\n          .reduce((v1, v2) -> v1 == null ? null : v2 == null ? null : v2.onOrAfter(v1) ? v1 : v2)\n          .get();\n      metaData = new LeafMetaData(reader.leaves().get(0).reader().getMetaData().getCreatedVersionMajor(), minVersion, null);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7","date":1538404752,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#SlowCompositeReaderWrapper(CompositeReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#SlowCompositeReaderWrapper(CompositeReader).mjava","sourceNew":"  SlowCompositeReaderWrapper(CompositeReader reader) throws IOException {\n    in = reader;\n    in.registerParentReader(this);\n    if (reader.leaves().isEmpty()) {\n      metaData = new LeafMetaData(Version.LATEST.major, Version.LATEST, null);\n    } else {\n      Version minVersion = Version.LATEST;\n      for (LeafReaderContext leafReaderContext : reader.leaves()) {\n        Version leafVersion = leafReaderContext.reader().getMetaData().getMinVersion();\n        if (leafVersion == null) {\n          minVersion = null;\n          break;\n        } else if (minVersion.onOrAfter(leafVersion)) {\n          minVersion = leafVersion;\n        }\n      }\n      metaData = new LeafMetaData(reader.leaves().get(0).reader().getMetaData().getCreatedVersionMajor(), minVersion, null);\n    }\n  }\n\n","sourceOld":"  SlowCompositeReaderWrapper(CompositeReader reader) throws IOException {\n    super();\n    in = reader;\n    fields = MultiFields.getFields(in);\n    in.registerParentReader(this);\n    if (reader.leaves().isEmpty()) {\n      metaData = new LeafMetaData(Version.LATEST.major, Version.LATEST, null);\n    } else {\n      Version minVersion = Version.LATEST;\n      for (LeafReaderContext leafReaderContext : reader.leaves()) {\n        Version leafVersion = leafReaderContext.reader().getMetaData().getMinVersion();\n        if (leafVersion == null) {\n          minVersion = null;\n          break;\n        } else if (minVersion.onOrAfter(leafVersion)) {\n          minVersion = leafVersion;\n        }\n      }\n      metaData = new LeafMetaData(reader.leaves().get(0).reader().getMetaData().getCreatedVersionMajor(), minVersion, null);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7bc10aeb596994a4cbfa5801932a4dac9fdd2afc","date":1541533532,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#SlowCompositeReaderWrapper(CompositeReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/index/SlowCompositeReaderWrapper#SlowCompositeReaderWrapper(CompositeReader).mjava","sourceNew":"  SlowCompositeReaderWrapper(CompositeReader reader) throws IOException {\n    in = reader;\n    in.registerParentReader(this);\n    if (reader.leaves().isEmpty()) {\n      metaData = new LeafMetaData(Version.LATEST.major, Version.LATEST, null);\n    } else {\n      Version minVersion = Version.LATEST;\n      for (LeafReaderContext leafReaderContext : reader.leaves()) {\n        Version leafVersion = leafReaderContext.reader().getMetaData().getMinVersion();\n        if (leafVersion == null) {\n          minVersion = null;\n          break;\n        } else if (minVersion.onOrAfter(leafVersion)) {\n          minVersion = leafVersion;\n        }\n      }\n      metaData = new LeafMetaData(reader.leaves().get(0).reader().getMetaData().getCreatedVersionMajor(), minVersion, null);\n    }\n    fieldInfos = FieldInfos.getMergedFieldInfos(in);\n  }\n\n","sourceOld":"  SlowCompositeReaderWrapper(CompositeReader reader) throws IOException {\n    in = reader;\n    in.registerParentReader(this);\n    if (reader.leaves().isEmpty()) {\n      metaData = new LeafMetaData(Version.LATEST.major, Version.LATEST, null);\n    } else {\n      Version minVersion = Version.LATEST;\n      for (LeafReaderContext leafReaderContext : reader.leaves()) {\n        Version leafVersion = leafReaderContext.reader().getMetaData().getMinVersion();\n        if (leafVersion == null) {\n          minVersion = null;\n          break;\n        } else if (minVersion.onOrAfter(leafVersion)) {\n          minVersion = leafVersion;\n        }\n      }\n      metaData = new LeafMetaData(reader.leaves().get(0).reader().getMetaData().getCreatedVersionMajor(), minVersion, null);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7bc10aeb596994a4cbfa5801932a4dac9fdd2afc":["9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7"],"6240b74b884c5587f2a4062dd27d6c32bf228889":["92212fd254551a0b1156aafc3a1a6ed1a43932ad","741d5890398fb096a7d6c2c9de8d33ec7ef6647d"],"d211216c83f01894810543d1c107160a9ae3650b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7":["741d5890398fb096a7d6c2c9de8d33ec7ef6647d"],"741d5890398fb096a7d6c2c9de8d33ec7ef6647d":["31741cf1390044e38a2ec3127cf302ba841bfd75"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":["d211216c83f01894810543d1c107160a9ae3650b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7bc10aeb596994a4cbfa5801932a4dac9fdd2afc"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["d211216c83f01894810543d1c107160a9ae3650b"]},"commit2Childs":{"7bc10aeb596994a4cbfa5801932a4dac9fdd2afc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6240b74b884c5587f2a4062dd27d6c32bf228889":[],"d211216c83f01894810543d1c107160a9ae3650b":["92212fd254551a0b1156aafc3a1a6ed1a43932ad","31741cf1390044e38a2ec3127cf302ba841bfd75"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d211216c83f01894810543d1c107160a9ae3650b"],"9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7":["7bc10aeb596994a4cbfa5801932a4dac9fdd2afc"],"741d5890398fb096a7d6c2c9de8d33ec7ef6647d":["6240b74b884c5587f2a4062dd27d6c32bf228889","9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":["6240b74b884c5587f2a4062dd27d6c32bf228889"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["741d5890398fb096a7d6c2c9de8d33ec7ef6647d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6240b74b884c5587f2a4062dd27d6c32bf228889","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}