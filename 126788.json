{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntSortSpecStrategy#IntSortSpecStrategy(int,int,String,int,int,GroupHeadSelector,boolean,boolean,IntIntHashMap,SortSpec,IndexSearcher).mjava","commits":[{"id":"446ec69a32a7e8cb8bf6eb8be693e96ab5f5a0d3","date":1556831715,"type":1,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntSortSpecStrategy#IntSortSpecStrategy(int,int,String,int,int,GroupHeadSelector,boolean,boolean,IntIntHashMap,SortSpec,IndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntSortSpecStrategy#IntSortSpecStrategy(int,int,String,int,int,GroupHeadSelector,boolean,IntIntHashMap,SortSpec,IndexSearcher).mjava","sourceNew":"    public IntSortSpecStrategy(int maxDoc,\n                               int size,\n                               String collapseField,\n                               int nullValue,\n                               int nullPolicy,\n                               GroupHeadSelector groupHeadSelector,\n                               boolean needsScores4Collapsing,\n                               boolean needsScores,\n                               IntIntHashMap boostDocs,\n                               SortSpec sortSpec,\n                               IndexSearcher searcher) throws IOException {\n      \n      super(maxDoc, size, collapseField, nullValue, nullPolicy, needsScores, boostDocs);\n      this.needsScores4Collapsing = needsScores4Collapsing;\n\n      assert GroupHeadSelectorType.SORT.equals(groupHeadSelector.type);\n\n      this.sortSpec = sortSpec;\n      this.sort = rewriteSort(sortSpec, searcher);\n      this.compareState = new SortFieldsCompare(sort.getSort(), size);\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","sourceOld":"    public IntSortSpecStrategy(int maxDoc,\n                               int size,\n                               String collapseField,\n                               int nullValue,\n                               int nullPolicy,\n                               GroupHeadSelector groupHeadSelector,\n                               boolean needsScores,\n                               IntIntHashMap boostDocs,\n                               SortSpec sortSpec,\n                               IndexSearcher searcher) throws IOException {\n      \n      super(maxDoc, size, collapseField, nullValue, nullPolicy, needsScores, boostDocs);\n\n      assert GroupHeadSelectorType.SORT.equals(groupHeadSelector.type);\n\n      this.sortSpec = sortSpec;\n      this.sort = rewriteSort(sortSpec, searcher);\n      this.compareState = new SortFieldsCompare(sort.getSort(), size);\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3575e61fd7df2bbcce8b977a23d3d67aa423ce62","date":1586507050,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntSortSpecStrategy#IntSortSpecStrategy(int,int,String,int,int,GroupHeadSelector,boolean,boolean,IntIntHashMap,SortSpec,IndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntSortSpecStrategy#IntSortSpecStrategy(int,int,String,int,int,GroupHeadSelector,boolean,boolean,IntIntHashMap,SortSpec,IndexSearcher).mjava","sourceNew":"    public IntSortSpecStrategy(int maxDoc,\n                               int size,\n                               String collapseField,\n                               int nullValue,\n                               int nullPolicy,\n                               GroupHeadSelector groupHeadSelector,\n                               boolean needsScores4Collapsing,\n                               boolean needsScores,\n                               IntIntHashMap boostDocs,\n                               SortSpec sortSpec,\n                               IndexSearcher searcher) throws IOException {\n\n      super(maxDoc, size, collapseField, nullValue, nullPolicy, needsScores, boostDocs);\n      this.needsScores4Collapsing = needsScores4Collapsing;\n\n      assert GroupHeadSelectorType.SORT.equals(groupHeadSelector.type);\n\n      this.sortSpec = sortSpec;\n      this.sort = rewriteSort(sortSpec, searcher);\n      this.compareState = new SortFieldsCompare(sort.getSort(), size);\n    }\n\n","sourceOld":"    public IntSortSpecStrategy(int maxDoc,\n                               int size,\n                               String collapseField,\n                               int nullValue,\n                               int nullPolicy,\n                               GroupHeadSelector groupHeadSelector,\n                               boolean needsScores4Collapsing,\n                               boolean needsScores,\n                               IntIntHashMap boostDocs,\n                               SortSpec sortSpec,\n                               IndexSearcher searcher) throws IOException {\n      \n      super(maxDoc, size, collapseField, nullValue, nullPolicy, needsScores, boostDocs);\n      this.needsScores4Collapsing = needsScores4Collapsing;\n\n      assert GroupHeadSelectorType.SORT.equals(groupHeadSelector.type);\n\n      this.sortSpec = sortSpec;\n      this.sort = rewriteSort(sortSpec, searcher);\n      this.compareState = new SortFieldsCompare(sort.getSort(), size);\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3575e61fd7df2bbcce8b977a23d3d67aa423ce62":["446ec69a32a7e8cb8bf6eb8be693e96ab5f5a0d3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"446ec69a32a7e8cb8bf6eb8be693e96ab5f5a0d3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3575e61fd7df2bbcce8b977a23d3d67aa423ce62"]},"commit2Childs":{"3575e61fd7df2bbcce8b977a23d3d67aa423ce62":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["446ec69a32a7e8cb8bf6eb8be693e96ab5f5a0d3"],"446ec69a32a7e8cb8bf6eb8be693e96ab5f5a0d3":["3575e61fd7df2bbcce8b977a23d3d67aa423ce62"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}