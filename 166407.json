{"path":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#startJettySolrRunner(String,String,JettyConfig).mjava","commits":[{"id":"f0c130ec24cbb2eef3d8e7f0e971736f0bea8f54","date":1446047031,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#startJettySolrRunner(String,String,JettyConfig).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#startJettySolrRunner(String,JettyConfig).mjava","sourceNew":"  /**\n   * Start a new Solr instance on a particular servlet context\n   *\n   * @param name the instance name\n   * @param hostContext the context to run on\n   * @param config a JettyConfig for the instance's {@link org.apache.solr.client.solrj.embedded.JettySolrRunner}\n   *\n   * @return a JettySolrRunner\n   */\n  public JettySolrRunner startJettySolrRunner(String name, String hostContext, JettyConfig config) throws Exception {\n    Path runnerPath = createInstancePath(name);\n    String context = getHostContextSuitableForServletContext(hostContext);\n    JettyConfig newConfig = JettyConfig.builder(config).setContext(context).build();\n    JettySolrRunner jetty = new JettySolrRunner(runnerPath.toString(), newConfig);\n    jetty.start();\n    jettys.add(jetty);\n    return jetty;\n  }\n\n","sourceOld":"  /**\n   * Start a new Solr instance on a particular servlet context\n   *\n   * @param hostContext the context to run on\n   * @param config a JettyConfig for the instance's {@link org.apache.solr.client.solrj.embedded.JettySolrRunner}\n   *\n   * @return a JettySolrRunner\n   */\n  public JettySolrRunner startJettySolrRunner(String hostContext, JettyConfig config) throws Exception {\n    return startJettySolrRunner(null, hostContext, config);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3584d3db8b472772e3329d9d95d584b68ae997e","date":1551710517,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#startJettySolrRunner(String,String,JettyConfig).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#startJettySolrRunner(String,String,JettyConfig).mjava","sourceNew":"  /**\n   * Start a new Solr instance on a particular servlet context\n   *\n   * @param name the instance name\n   * @param hostContext the context to run on\n   * @param config a JettyConfig for the instance's {@link org.apache.solr.client.solrj.embedded.JettySolrRunner}\n   *\n   * @return a JettySolrRunner\n   */\n  public JettySolrRunner startJettySolrRunner(String name, String hostContext, JettyConfig config) throws Exception {\n    Path runnerPath = createInstancePath(name);\n    String context = getHostContextSuitableForServletContext(hostContext);\n    JettyConfig newConfig = JettyConfig.builder(config).setContext(context).build();\n    JettySolrRunner jetty = !trackJettyMetrics \n        ? new JettySolrRunner(runnerPath.toString(), newConfig)\n         :new JettySolrRunnerWithMetrics(runnerPath.toString(), newConfig);\n    jetty.start();\n    jettys.add(jetty);\n    return jetty;\n  }\n\n","sourceOld":"  /**\n   * Start a new Solr instance on a particular servlet context\n   *\n   * @param name the instance name\n   * @param hostContext the context to run on\n   * @param config a JettyConfig for the instance's {@link org.apache.solr.client.solrj.embedded.JettySolrRunner}\n   *\n   * @return a JettySolrRunner\n   */\n  public JettySolrRunner startJettySolrRunner(String name, String hostContext, JettyConfig config) throws Exception {\n    Path runnerPath = createInstancePath(name);\n    String context = getHostContextSuitableForServletContext(hostContext);\n    JettyConfig newConfig = JettyConfig.builder(config).setContext(context).build();\n    JettySolrRunner jetty = new JettySolrRunner(runnerPath.toString(), newConfig);\n    jetty.start();\n    jettys.add(jetty);\n    return jetty;\n  }\n\n","bugFix":["f0c130ec24cbb2eef3d8e7f0e971736f0bea8f54"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3584d3db8b472772e3329d9d95d584b68ae997e":["f0c130ec24cbb2eef3d8e7f0e971736f0bea8f54"],"f0c130ec24cbb2eef3d8e7f0e971736f0bea8f54":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a3584d3db8b472772e3329d9d95d584b68ae997e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f0c130ec24cbb2eef3d8e7f0e971736f0bea8f54"],"a3584d3db8b472772e3329d9d95d584b68ae997e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f0c130ec24cbb2eef3d8e7f0e971736f0bea8f54":["a3584d3db8b472772e3329d9d95d584b68ae997e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}