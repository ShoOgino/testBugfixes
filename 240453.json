{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaVariable#getRelevantReplicasCount(Policy.Session,Clause.Condition,String,String).mjava","commits":[{"id":"427edb17549d4bb82462a16eec4ee0533d12d5b7","date":1533006754,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaVariable#getRelevantReplicasCount(Policy.Session,Clause.Condition,String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion#getRelevantReplicasCount(Policy.Session,Clause.Condition,String,String).mjava","sourceNew":"  static int getRelevantReplicasCount(Policy.Session session, Clause.Condition cv, String collection, String shard) {\n    AtomicInteger totalReplicasOfInterest = new AtomicInteger(0);\n    Clause clause = cv.getClause();\n    for (Row row : session.matrix) {\n      row.forEachReplica(replicaInfo -> {\n        if (clause.isMatch(replicaInfo, collection, shard))\n          totalReplicasOfInterest.incrementAndGet();\n      });\n    }\n    return totalReplicasOfInterest.get();\n  }\n\n","sourceOld":"  private static int getRelevantReplicasCount(Policy.Session session, Clause.Condition cv, String collection, String shard) {\n    AtomicInteger totalReplicasOfInterest = new AtomicInteger(0);\n    Clause clause = cv.getClause();\n    for (Row row : session.matrix) {\n      row.forEachReplica(replicaInfo -> {\n        if (clause.isMatch(replicaInfo, collection, shard))\n          totalReplicasOfInterest.incrementAndGet();\n      });\n    }\n    return totalReplicasOfInterest.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb","date":1533364463,"type":5,"author":"noble","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaVariable#getRelevantReplicasCount(Policy.Session,Condition,String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaVariable#getRelevantReplicasCount(Policy.Session,Clause.Condition,String,String).mjava","sourceNew":"  static int getRelevantReplicasCount(Policy.Session session, Condition cv, String collection, String shard) {\n    AtomicInteger totalReplicasOfInterest = new AtomicInteger(0);\n    Clause clause = cv.getClause();\n    for (Row row : session.matrix) {\n      row.forEachReplica(replicaInfo -> {\n        if (clause.isMatch(replicaInfo, collection, shard))\n          totalReplicasOfInterest.incrementAndGet();\n      });\n    }\n    return totalReplicasOfInterest.get();\n  }\n\n","sourceOld":"  static int getRelevantReplicasCount(Policy.Session session, Clause.Condition cv, String collection, String shard) {\n    AtomicInteger totalReplicasOfInterest = new AtomicInteger(0);\n    Clause clause = cv.getClause();\n    for (Row row : session.matrix) {\n      row.forEachReplica(replicaInfo -> {\n        if (clause.isMatch(replicaInfo, collection, shard))\n          totalReplicasOfInterest.incrementAndGet();\n      });\n    }\n    return totalReplicasOfInterest.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"427edb17549d4bb82462a16eec4ee0533d12d5b7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb":["427edb17549d4bb82462a16eec4ee0533d12d5b7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb"]},"commit2Childs":{"427edb17549d4bb82462a16eec4ee0533d12d5b7":["cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["427edb17549d4bb82462a16eec4ee0533d12d5b7"],"cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}