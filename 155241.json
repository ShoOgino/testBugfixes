{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","pathOld":"/dev/null","sourceNew":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(_TestUtil.getTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random, d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random, d);\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8be580b58bcc650d428f3f22de81cadcf51d650a","date":1325279655,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","sourceNew":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(_TestUtil.getTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random, d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random, d, newIndexWriterConfig(TEST_VERSION_CURRENT, null).setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(_TestUtil.getTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random, d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random, d);\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","sourceNew":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(_TestUtil.getTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random, d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random, d, newIndexWriterConfig(TEST_VERSION_CURRENT, null).setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(_TestUtil.getTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random, d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random, d, newIndexWriterConfig(TEST_VERSION_CURRENT, null).setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8be580b58bcc650d428f3f22de81cadcf51d650a":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"8be580b58bcc650d428f3f22de81cadcf51d650a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}