{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy#validate(Directory,Directory,OrdinalMap).mjava","commits":[{"id":"0cebe7d662ef6b6c677383085b295b9878ba1795","date":1337155300,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy#validate(Directory,Directory,OrdinalMap).mjava","pathOld":"/dev/null","sourceNew":"  private void validate(Directory dest, Directory src, OrdinalMap ordMap) throws Exception {\n    CategoryPath cp = new CategoryPath();\n    DirectoryTaxonomyReader destTR = new DirectoryTaxonomyReader(dest);\n    try {\n      final int destSize = destTR.getSize();\n      DirectoryTaxonomyReader srcTR = new DirectoryTaxonomyReader(src);\n      try {\n        int[] map = ordMap.getMap();\n        \n        // validate taxo sizes\n        int srcSize = srcTR.getSize();\n        assertTrue(\"destination taxonomy expected to be larger than source; dest=\"\n            + destSize + \" src=\" + srcSize,\n            destSize >= srcSize);\n        \n        // validate that all source categories exist in destination, and their\n        // ordinals are as expected.\n        for (int j = 1; j < srcSize; j++) {\n          srcTR.getPath(j, cp);\n          int destOrdinal = destTR.getOrdinal(cp);\n          assertTrue(cp + \" not found in destination\", destOrdinal > 0);\n          assertEquals(destOrdinal, map[j]);\n        }\n      } finally {\n        srcTR.close();\n      }\n    } finally {\n      destTR.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy#validate(Directory,Directory,OrdinalMap).mjava","pathOld":"/dev/null","sourceNew":"  private void validate(Directory dest, Directory src, OrdinalMap ordMap) throws Exception {\n    CategoryPath cp = new CategoryPath();\n    DirectoryTaxonomyReader destTR = new DirectoryTaxonomyReader(dest);\n    try {\n      final int destSize = destTR.getSize();\n      DirectoryTaxonomyReader srcTR = new DirectoryTaxonomyReader(src);\n      try {\n        int[] map = ordMap.getMap();\n        \n        // validate taxo sizes\n        int srcSize = srcTR.getSize();\n        assertTrue(\"destination taxonomy expected to be larger than source; dest=\"\n            + destSize + \" src=\" + srcSize,\n            destSize >= srcSize);\n        \n        // validate that all source categories exist in destination, and their\n        // ordinals are as expected.\n        for (int j = 1; j < srcSize; j++) {\n          srcTR.getPath(j, cp);\n          int destOrdinal = destTR.getOrdinal(cp);\n          assertTrue(cp + \" not found in destination\", destOrdinal > 0);\n          assertEquals(destOrdinal, map[j]);\n        }\n      } finally {\n        srcTR.close();\n      }\n    } finally {\n      destTR.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1","date":1357499264,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy#validate(Directory,Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy#validate(Directory,Directory,OrdinalMap).mjava","sourceNew":"  private void validate(Directory dest, Directory src, OrdinalMap ordMap) throws Exception {\n    DirectoryTaxonomyReader destTR = new DirectoryTaxonomyReader(dest);\n    try {\n      final int destSize = destTR.getSize();\n      DirectoryTaxonomyReader srcTR = new DirectoryTaxonomyReader(src);\n      try {\n        int[] map = ordMap.getMap();\n        \n        // validate taxo sizes\n        int srcSize = srcTR.getSize();\n        assertTrue(\"destination taxonomy expected to be larger than source; dest=\"\n            + destSize + \" src=\" + srcSize,\n            destSize >= srcSize);\n        \n        // validate that all source categories exist in destination, and their\n        // ordinals are as expected.\n        for (int j = 1; j < srcSize; j++) {\n          CategoryPath cp = srcTR.getPath(j);\n          int destOrdinal = destTR.getOrdinal(cp);\n          assertTrue(cp + \" not found in destination\", destOrdinal > 0);\n          assertEquals(destOrdinal, map[j]);\n        }\n      } finally {\n        srcTR.close();\n      }\n    } finally {\n      destTR.close();\n    }\n  }\n\n","sourceOld":"  private void validate(Directory dest, Directory src, OrdinalMap ordMap) throws Exception {\n    CategoryPath cp = new CategoryPath();\n    DirectoryTaxonomyReader destTR = new DirectoryTaxonomyReader(dest);\n    try {\n      final int destSize = destTR.getSize();\n      DirectoryTaxonomyReader srcTR = new DirectoryTaxonomyReader(src);\n      try {\n        int[] map = ordMap.getMap();\n        \n        // validate taxo sizes\n        int srcSize = srcTR.getSize();\n        assertTrue(\"destination taxonomy expected to be larger than source; dest=\"\n            + destSize + \" src=\" + srcSize,\n            destSize >= srcSize);\n        \n        // validate that all source categories exist in destination, and their\n        // ordinals are as expected.\n        for (int j = 1; j < srcSize; j++) {\n          srcTR.getPath(j, cp);\n          int destOrdinal = destTR.getOrdinal(cp);\n          assertTrue(cp + \" not found in destination\", destOrdinal > 0);\n          assertEquals(destOrdinal, map[j]);\n        }\n      } finally {\n        srcTR.close();\n      }\n    } finally {\n      destTR.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy#validate(Directory,Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy#validate(Directory,Directory,OrdinalMap).mjava","sourceNew":"  private void validate(Directory dest, Directory src, OrdinalMap ordMap) throws Exception {\n    DirectoryTaxonomyReader destTR = new DirectoryTaxonomyReader(dest);\n    try {\n      final int destSize = destTR.getSize();\n      DirectoryTaxonomyReader srcTR = new DirectoryTaxonomyReader(src);\n      try {\n        int[] map = ordMap.getMap();\n        \n        // validate taxo sizes\n        int srcSize = srcTR.getSize();\n        assertTrue(\"destination taxonomy expected to be larger than source; dest=\"\n            + destSize + \" src=\" + srcSize,\n            destSize >= srcSize);\n        \n        // validate that all source categories exist in destination, and their\n        // ordinals are as expected.\n        for (int j = 1; j < srcSize; j++) {\n          CategoryPath cp = srcTR.getPath(j);\n          int destOrdinal = destTR.getOrdinal(cp);\n          assertTrue(cp + \" not found in destination\", destOrdinal > 0);\n          assertEquals(destOrdinal, map[j]);\n        }\n      } finally {\n        srcTR.close();\n      }\n    } finally {\n      destTR.close();\n    }\n  }\n\n","sourceOld":"  private void validate(Directory dest, Directory src, OrdinalMap ordMap) throws Exception {\n    CategoryPath cp = new CategoryPath();\n    DirectoryTaxonomyReader destTR = new DirectoryTaxonomyReader(dest);\n    try {\n      final int destSize = destTR.getSize();\n      DirectoryTaxonomyReader srcTR = new DirectoryTaxonomyReader(src);\n      try {\n        int[] map = ordMap.getMap();\n        \n        // validate taxo sizes\n        int srcSize = srcTR.getSize();\n        assertTrue(\"destination taxonomy expected to be larger than source; dest=\"\n            + destSize + \" src=\" + srcSize,\n            destSize >= srcSize);\n        \n        // validate that all source categories exist in destination, and their\n        // ordinals are as expected.\n        for (int j = 1; j < srcSize; j++) {\n          srcTR.getPath(j, cp);\n          int destOrdinal = destTR.getOrdinal(cp);\n          assertTrue(cp + \" not found in destination\", destOrdinal > 0);\n          assertEquals(destOrdinal, map[j]);\n        }\n      } finally {\n        srcTR.close();\n      }\n    } finally {\n      destTR.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy#validate(Directory,Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy#validate(Directory,Directory,OrdinalMap).mjava","sourceNew":"  private void validate(Directory dest, Directory src, OrdinalMap ordMap) throws Exception {\n    DirectoryTaxonomyReader destTR = new DirectoryTaxonomyReader(dest);\n    try {\n      final int destSize = destTR.getSize();\n      DirectoryTaxonomyReader srcTR = new DirectoryTaxonomyReader(src);\n      try {\n        int[] map = ordMap.getMap();\n        \n        // validate taxo sizes\n        int srcSize = srcTR.getSize();\n        assertTrue(\"destination taxonomy expected to be larger than source; dest=\"\n            + destSize + \" src=\" + srcSize,\n            destSize >= srcSize);\n        \n        // validate that all source categories exist in destination, and their\n        // ordinals are as expected.\n        for (int j = 1; j < srcSize; j++) {\n          FacetLabel cp = srcTR.getPath(j);\n          int destOrdinal = destTR.getOrdinal(cp);\n          assertTrue(cp + \" not found in destination\", destOrdinal > 0);\n          assertEquals(destOrdinal, map[j]);\n        }\n      } finally {\n        srcTR.close();\n      }\n    } finally {\n      destTR.close();\n    }\n  }\n\n","sourceOld":"  private void validate(Directory dest, Directory src, OrdinalMap ordMap) throws Exception {\n    DirectoryTaxonomyReader destTR = new DirectoryTaxonomyReader(dest);\n    try {\n      final int destSize = destTR.getSize();\n      DirectoryTaxonomyReader srcTR = new DirectoryTaxonomyReader(src);\n      try {\n        int[] map = ordMap.getMap();\n        \n        // validate taxo sizes\n        int srcSize = srcTR.getSize();\n        assertTrue(\"destination taxonomy expected to be larger than source; dest=\"\n            + destSize + \" src=\" + srcSize,\n            destSize >= srcSize);\n        \n        // validate that all source categories exist in destination, and their\n        // ordinals are as expected.\n        for (int j = 1; j < srcSize; j++) {\n          CategoryPath cp = srcTR.getPath(j);\n          int destOrdinal = destTR.getOrdinal(cp);\n          assertTrue(cp + \" not found in destination\", destOrdinal > 0);\n          assertEquals(destOrdinal, map[j]);\n        }\n      } finally {\n        srcTR.close();\n      }\n    } finally {\n      destTR.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy#validate(Directory,Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy#validate(Directory,Directory,OrdinalMap).mjava","sourceNew":"  private void validate(Directory dest, Directory src, OrdinalMap ordMap) throws Exception {\n    DirectoryTaxonomyReader destTR = new DirectoryTaxonomyReader(dest);\n    try {\n      final int destSize = destTR.getSize();\n      DirectoryTaxonomyReader srcTR = new DirectoryTaxonomyReader(src);\n      try {\n        int[] map = ordMap.getMap();\n        \n        // validate taxo sizes\n        int srcSize = srcTR.getSize();\n        assertTrue(\"destination taxonomy expected to be larger than source; dest=\"\n            + destSize + \" src=\" + srcSize,\n            destSize >= srcSize);\n        \n        // validate that all source categories exist in destination, and their\n        // ordinals are as expected.\n        for (int j = 1; j < srcSize; j++) {\n          FacetLabel cp = srcTR.getPath(j);\n          int destOrdinal = destTR.getOrdinal(cp);\n          assertTrue(cp + \" not found in destination\", destOrdinal > 0);\n          assertEquals(destOrdinal, map[j]);\n        }\n      } finally {\n        srcTR.close();\n      }\n    } finally {\n      destTR.close();\n    }\n  }\n\n","sourceOld":"  private void validate(Directory dest, Directory src, OrdinalMap ordMap) throws Exception {\n    DirectoryTaxonomyReader destTR = new DirectoryTaxonomyReader(dest);\n    try {\n      final int destSize = destTR.getSize();\n      DirectoryTaxonomyReader srcTR = new DirectoryTaxonomyReader(src);\n      try {\n        int[] map = ordMap.getMap();\n        \n        // validate taxo sizes\n        int srcSize = srcTR.getSize();\n        assertTrue(\"destination taxonomy expected to be larger than source; dest=\"\n            + destSize + \" src=\" + srcSize,\n            destSize >= srcSize);\n        \n        // validate that all source categories exist in destination, and their\n        // ordinals are as expected.\n        for (int j = 1; j < srcSize; j++) {\n          CategoryPath cp = srcTR.getPath(j);\n          int destOrdinal = destTR.getOrdinal(cp);\n          assertTrue(cp + \" not found in destination\", destOrdinal > 0);\n          assertEquals(destOrdinal, map[j]);\n        }\n      } finally {\n        srcTR.close();\n      }\n    } finally {\n      destTR.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["0cebe7d662ef6b6c677383085b295b9878ba1795","d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["0cebe7d662ef6b6c677383085b295b9878ba1795"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0cebe7d662ef6b6c677383085b295b9878ba1795":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"ef0d8a69209261514c5739c770bba706c2308450":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0cebe7d662ef6b6c677383085b295b9878ba1795"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0cebe7d662ef6b6c677383085b295b9878ba1795","ef0d8a69209261514c5739c770bba706c2308450"],"0cebe7d662ef6b6c677383085b295b9878ba1795":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d90771c07d45c6ad884c5ef9cb3a6eeb257238d1","ef0d8a69209261514c5739c770bba706c2308450"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ef0d8a69209261514c5739c770bba706c2308450":[],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}