{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#processRebalanceLeaders(ZkNodeProps).mjava","commits":[{"id":"4e6b620c271c84c0f14919eec7b90083b292ee51","date":1419461736,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#processRebalanceLeaders(ZkNodeProps).mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ZkNodeProps message) throws KeeperException, InterruptedException {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(NODE_NAME_PROP, message.getStr(NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","bb222a3f9d9421d5c95afce73013fbd8de07ea1f","bb222a3f9d9421d5c95afce73013fbd8de07ea1f","bb222a3f9d9421d5c95afce73013fbd8de07ea1f","bb222a3f9d9421d5c95afce73013fbd8de07ea1f","bb222a3f9d9421d5c95afce73013fbd8de07ea1f","bb222a3f9d9421d5c95afce73013fbd8de07ea1f","bb222a3f9d9421d5c95afce73013fbd8de07ea1f","6b18ef9cd3f6ff4f7733e6d43eebec259e0e9064"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":5,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#processRebalanceLeaders(ZkNodeProps).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ZkNodeProps message) throws KeeperException, InterruptedException {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(NODE_NAME_PROP, message.getStr(NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ZkNodeProps message) throws KeeperException, InterruptedException {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(NODE_NAME_PROP, message.getStr(NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["4e6b620c271c84c0f14919eec7b90083b292ee51"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4e6b620c271c84c0f14919eec7b90083b292ee51":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"]},"commit2Childs":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e6b620c271c84c0f14919eec7b90083b292ee51"],"4e6b620c271c84c0f14919eec7b90083b292ee51":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}