{"path":"solr/core/src/test/org/apache/solr/analytics/AbstractAnalyticsStatsTest#fileToStringArr(Class[#],String).mjava","commits":[{"id":"a475a1c165e02515bff766b3b7be0c42edf1870c","date":1393099333,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/AbstractAnalyticsStatsTest#fileToStringArr(Class[#],String).mjava","pathOld":"/dev/null","sourceNew":"  public static String[] fileToStringArr(Class<?> clazz, String fileName) throws FileNotFoundException {\n    InputStream in = clazz.getResourceAsStream(fileName);\n    if (in == null) throw new FileNotFoundException(\"Resource not found: \" + fileName);\n    Scanner file = new Scanner(in, \"UTF-8\");\n    try { \n      ArrayList<String> strList = new ArrayList<String>();\n      while (file.hasNextLine()) {\n        String line = file.nextLine();\n        line = line.trim();\n        if( StringUtils.isBlank(line) || line.startsWith(\"#\")){\n          continue;\n        }\n        String[] param = line.split(\"=\");\n        strList.add(param[0]);\n        strList.add(param[1]);\n      }\n      return strList.toArray(new String[0]);\n    } finally {\n      IOUtils.closeWhileHandlingException(file, in);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/AbstractAnalyticsStatsTest#fileToStringArr(Class[#],String).mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/AbstractAnalyticsStatsTest#fileToStringArr(Class[#],String).mjava","sourceNew":"  public static String[] fileToStringArr(Class<?> clazz, String fileName) throws FileNotFoundException {\n    InputStream in = clazz.getResourceAsStream(fileName);\n    if (in == null) throw new FileNotFoundException(\"Resource not found: \" + fileName);\n    Scanner file = new Scanner(in, \"UTF-8\");\n    try { \n      ArrayList<String> strList = new ArrayList<>();\n      while (file.hasNextLine()) {\n        String line = file.nextLine();\n        line = line.trim();\n        if( StringUtils.isBlank(line) || line.startsWith(\"#\")){\n          continue;\n        }\n        String[] param = line.split(\"=\");\n        strList.add(param[0]);\n        strList.add(param[1]);\n      }\n      return strList.toArray(new String[0]);\n    } finally {\n      IOUtils.closeWhileHandlingException(file, in);\n    }\n  }\n\n","sourceOld":"  public static String[] fileToStringArr(Class<?> clazz, String fileName) throws FileNotFoundException {\n    InputStream in = clazz.getResourceAsStream(fileName);\n    if (in == null) throw new FileNotFoundException(\"Resource not found: \" + fileName);\n    Scanner file = new Scanner(in, \"UTF-8\");\n    try { \n      ArrayList<String> strList = new ArrayList<String>();\n      while (file.hasNextLine()) {\n        String line = file.nextLine();\n        line = line.trim();\n        if( StringUtils.isBlank(line) || line.startsWith(\"#\")){\n          continue;\n        }\n        String[] param = line.split(\"=\");\n        strList.add(param[0]);\n        strList.add(param[1]);\n      }\n      return strList.toArray(new String[0]);\n    } finally {\n      IOUtils.closeWhileHandlingException(file, in);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f719faa74f7213d4a395510dbc1f1b7cb178484","date":1410881394,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/AbstractAnalyticsStatsTest#fileToStringArr(Class[#],String).mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/AbstractAnalyticsStatsTest#fileToStringArr(Class[#],String).mjava","sourceNew":"  public static String[] fileToStringArr(Class<?> clazz, String fileName) throws FileNotFoundException {\n    InputStream in = clazz.getResourceAsStream(fileName);\n    if (in == null) throw new FileNotFoundException(\"Resource not found: \" + fileName);\n    Scanner file = new Scanner(in, \"UTF-8\");\n    try { \n      ArrayList<String> strList = new ArrayList<>();\n      while (file.hasNextLine()) {\n        String line = file.nextLine();\n        line = line.trim();\n        if( StringUtils.isBlank(line) || line.startsWith(\"#\")){\n          continue;\n        }\n        String[] param = line.split(\"=\");\n        strList.add(param[0]);\n        strList.add(param[1]);\n      }\n      return strList.toArray(new String[0]);\n    } finally {\n      IOUtils.closeWhileHandlingException(file, in);\n    }\n  }\n\n","sourceOld":"  public static String[] fileToStringArr(Class<?> clazz, String fileName) throws FileNotFoundException {\n    InputStream in = clazz.getResourceAsStream(fileName);\n    if (in == null) throw new FileNotFoundException(\"Resource not found: \" + fileName);\n    Scanner file = new Scanner(in, \"UTF-8\");\n    try { \n      ArrayList<String> strList = new ArrayList<>();\n      while (file.hasNextLine()) {\n        String line = file.nextLine();\n        line = line.trim();\n        if( StringUtils.isBlank(line) || line.startsWith(\"#\")){\n          continue;\n        }\n        String[] param = line.split(\"=\");\n        strList.add(param[0]);\n        strList.add(param[1]);\n      }\n      return strList.toArray(new String[0]);\n    } finally {\n      IOUtils.closeWhileHandlingException(file, in);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a475a1c165e02515bff766b3b7be0c42edf1870c"],"a475a1c165e02515bff766b3b7be0c42edf1870c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f719faa74f7213d4a395510dbc1f1b7cb178484"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["0f719faa74f7213d4a395510dbc1f1b7cb178484"],"a475a1c165e02515bff766b3b7be0c42edf1870c":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a475a1c165e02515bff766b3b7be0c42edf1870c"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}