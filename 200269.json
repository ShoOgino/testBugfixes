{"path":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","commits":[{"id":"4b1444275c93a8051a6fe6158639467a144ae0a4","date":1224502393,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(null, IndexReader.getCommitUserData(dir));\n\n    IndexReader r = IndexReader.open(dir);\n    // commit(String) never called for this index\n    assertEquals(null, r.getCommitUserData());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.commit(\"test1\");\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData());\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir));\n      \n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3215ae1377fc1ca1790921d75dd39cb764743b85","date":1237371771,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestCommitUserData().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void xxxtestCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(null, IndexReader.getCommitUserData(dir));\n\n    IndexReader r = IndexReader.open(dir);\n    // commit(String) never called for this index\n    assertEquals(null, r.getCommitUserData());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.commit(\"test1\");\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData());\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir));\n      \n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(null, IndexReader.getCommitUserData(dir));\n\n    IndexReader r = IndexReader.open(dir);\n    // commit(String) never called for this index\n    assertEquals(null, r.getCommitUserData());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.commit(\"test1\");\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData());\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir));\n      \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c482d1e63332617181729a225b215c452d8a79","date":1237396006,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(null, IndexReader.getCommitUserData(dir));\n\n    IndexReader r = IndexReader.open(dir);\n    // commit(String) never called for this index\n    assertEquals(null, r.getCommitUserData());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.commit(\"test1\");\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData());\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir));\n      \n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void xxxtestCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(null, IndexReader.getCommitUserData(dir));\n\n    IndexReader r = IndexReader.open(dir);\n    // commit(String) never called for this index\n    assertEquals(null, r.getCommitUserData());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.commit(\"test1\");\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData());\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir));\n      \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3ab91f3bb602daf6393fa7f78b11afd3400d669","date":1243282044,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map data = new HashMap();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(null, IndexReader.getCommitUserData(dir));\n\n    IndexReader r = IndexReader.open(dir);\n    // commit(String) never called for this index\n    assertEquals(null, r.getCommitUserData());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.commit(\"test1\");\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData());\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir));\n      \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map data = new HashMap();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map data = new HashMap();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map data = new HashMap();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map data = new HashMap();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e450c7d50c2fc84c963d0d7ade9d3217d868064d","date":1259932067,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map data = new HashMap();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    w.setMaxBufferedDocs(2);\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n      \n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n      \n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n      \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b1444275c93a8051a6fe6158639467a144ae0a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"0a046c0c310bc77931fc8441bd920053b607dd14":["d3ab91f3bb602daf6393fa7f78b11afd3400d669","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["4b1444275c93a8051a6fe6158639467a144ae0a4"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"e450c7d50c2fc84c963d0d7ade9d3217d868064d":["0a046c0c310bc77931fc8441bd920053b607dd14"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["d3ab91f3bb602daf6393fa7f78b11afd3400d669"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["e450c7d50c2fc84c963d0d7ade9d3217d868064d"],"d3ab91f3bb602daf6393fa7f78b11afd3400d669":["09c482d1e63332617181729a225b215c452d8a79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c482d1e63332617181729a225b215c452d8a79":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"4b1444275c93a8051a6fe6158639467a144ae0a4":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0a046c0c310bc77931fc8441bd920053b607dd14":["e450c7d50c2fc84c963d0d7ade9d3217d868064d"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["09c482d1e63332617181729a225b215c452d8a79"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"e450c7d50c2fc84c963d0d7ade9d3217d868064d":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4b1444275c93a8051a6fe6158639467a144ae0a4"],"d3ab91f3bb602daf6393fa7f78b11afd3400d669":["0a046c0c310bc77931fc8441bd920053b607dd14","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"09c482d1e63332617181729a225b215c452d8a79":["d3ab91f3bb602daf6393fa7f78b11afd3400d669"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}