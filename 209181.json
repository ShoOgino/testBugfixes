{"path":"lucene/core/src/test/org/apache/lucene/search/TestSynonymQuery#testEquals().mjava","commits":[{"id":"81d0720146de53dd3a4a023d2a3d1089d86d748d","date":1442268215,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSynonymQuery#testEquals().mjava","pathOld":"/dev/null","sourceNew":"  public void testEquals() {\n    QueryUtils.checkEqual(new SynonymQuery(), new SynonymQuery());\n    QueryUtils.checkEqual(new SynonymQuery(new Term(\"foo\", \"bar\")), \n                          new SynonymQuery(new Term(\"foo\", \"bar\")));\n    \n    QueryUtils.checkEqual(new SynonymQuery(new Term(\"a\", \"a\"), new Term(\"a\", \"b\")), \n                          new SynonymQuery(new Term(\"a\", \"b\"), new Term(\"a\", \"a\")));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f2c13220a828a78007cedb364e22dd8986ed650","date":1527233410,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSynonymQuery#testEquals().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSynonymQuery#testEquals().mjava","sourceNew":"  public void testEquals() {\n    QueryUtils.checkEqual(new SynonymQuery(), new SynonymQuery());\n    QueryUtils.checkEqual(new SynonymQuery(new Term(\"foo\", \"bar\")),\n                          new SynonymQuery(new Term(\"foo\", \"bar\")));\n\n    QueryUtils.checkEqual(new SynonymQuery(new Term(\"a\", \"a\"), new Term(\"a\", \"b\")),\n                          new SynonymQuery(new Term(\"a\", \"b\"), new Term(\"a\", \"a\")));\n  }\n\n","sourceOld":"  public void testEquals() {\n    QueryUtils.checkEqual(new SynonymQuery(), new SynonymQuery());\n    QueryUtils.checkEqual(new SynonymQuery(new Term(\"foo\", \"bar\")), \n                          new SynonymQuery(new Term(\"foo\", \"bar\")));\n    \n    QueryUtils.checkEqual(new SynonymQuery(new Term(\"a\", \"a\"), new Term(\"a\", \"b\")), \n                          new SynonymQuery(new Term(\"a\", \"b\"), new Term(\"a\", \"a\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df25592b82060bc1c800e87bf019444bf0ddf9d4","date":1552296011,"type":3,"author":"jimczi","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSynonymQuery#testEquals().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSynonymQuery#testEquals().mjava","sourceNew":"  public void testEquals() {\n    QueryUtils.checkEqual(new SynonymQuery.Builder(\"foo\").build(), new SynonymQuery.Builder(\"foo\").build());\n    QueryUtils.checkEqual(new SynonymQuery.Builder(\"foo\").addTerm(new Term(\"foo\", \"bar\")).build(),\n                          new SynonymQuery.Builder(\"foo\").addTerm(new Term(\"foo\", \"bar\")).build());\n\n    QueryUtils.checkEqual(new SynonymQuery.Builder(\"a\").addTerm(new Term(\"a\", \"a\")).addTerm(new Term(\"a\", \"b\")).build(),\n                          new SynonymQuery.Builder(\"a\").addTerm(new Term(\"a\", \"b\")).addTerm(new Term(\"a\", \"a\")).build());\n\n    QueryUtils.checkEqual(\n        new SynonymQuery.Builder(\"field\")\n            .addTerm(new Term(\"field\", \"b\"), 0.4f)\n            .addTerm(new Term(\"field\", \"c\"), 0.2f)\n            .addTerm(new Term(\"field\", \"d\")).build(),\n        new SynonymQuery.Builder(\"field\")\n            .addTerm(new Term(\"field\", \"b\"), 0.4f)\n            .addTerm(new Term(\"field\", \"c\"), 0.2f)\n            .addTerm(new Term(\"field\", \"d\")).build());\n\n  }\n\n","sourceOld":"  public void testEquals() {\n    QueryUtils.checkEqual(new SynonymQuery(), new SynonymQuery());\n    QueryUtils.checkEqual(new SynonymQuery(new Term(\"foo\", \"bar\")),\n                          new SynonymQuery(new Term(\"foo\", \"bar\")));\n\n    QueryUtils.checkEqual(new SynonymQuery(new Term(\"a\", \"a\"), new Term(\"a\", \"b\")),\n                          new SynonymQuery(new Term(\"a\", \"b\"), new Term(\"a\", \"a\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"df25592b82060bc1c800e87bf019444bf0ddf9d4":["2f2c13220a828a78007cedb364e22dd8986ed650"],"2f2c13220a828a78007cedb364e22dd8986ed650":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df25592b82060bc1c800e87bf019444bf0ddf9d4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"df25592b82060bc1c800e87bf019444bf0ddf9d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2f2c13220a828a78007cedb364e22dd8986ed650":["df25592b82060bc1c800e87bf019444bf0ddf9d4"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["2f2c13220a828a78007cedb364e22dd8986ed650"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}