{"path":"lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPLemmatizerOp#lemmatize(String[],String[]).mjava","commits":[{"id":"afc5b4b2446e392448f36ae4f5a164540f2ccb65","date":1513355058,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPLemmatizerOp#lemmatize(String[],String[]).mjava","pathOld":"/dev/null","sourceNew":"  public String[] lemmatize(String[] words, String[] postags) {\n    String[] lemmas = null;\n    String[] maxEntLemmas = null;\n    if (dictionaryLemmatizer != null) {\n      lemmas = dictionaryLemmatizer.lemmatize(words, postags);\n      for (int i = 0; i < lemmas.length; ++i) {\n        if (lemmas[i].equals(\"O\")) {   // this word is not in the dictionary\n          if (lemmatizerME != null) {  // fall back to the MaxEnt lemmatizer if it's enabled\n            if (maxEntLemmas == null) {\n              maxEntLemmas = lemmatizerME.lemmatize(words, postags);\n            }\n            if (\"_\".equals(maxEntLemmas[i])) {\n              lemmas[i] = words[i];    // put back the original word if no lemma is found\n            } else {\n              lemmas[i] = maxEntLemmas[i];\n            }\n          } else {                     // there is no MaxEnt lemmatizer\n            lemmas[i] = words[i];      // put back the original word if no lemma is found\n          }\n        }\n      }\n    } else {                           // there is only a MaxEnt lemmatizer\n      maxEntLemmas = lemmatizerME.lemmatize(words, postags);\n      for (int i = 0 ; i < maxEntLemmas.length ; ++i) {\n        if (\"_\".equals(maxEntLemmas[i])) {\n          maxEntLemmas[i] = words[i];  // put back the original word if no lemma is found\n        }\n      }\n      lemmas = maxEntLemmas;\n    }\n    return lemmas;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc5b4b2446e392448f36ae4f5a164540f2ccb65"],"afc5b4b2446e392448f36ae4f5a164540f2ccb65":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["afc5b4b2446e392448f36ae4f5a164540f2ccb65"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"afc5b4b2446e392448f36ae4f5a164540f2ccb65":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}