{"path":"solr/src/java/org/apache/solr/spelling/SpellingResult#addFrequency(Token,int).mjava","commits":[{"id":"de86357ed7f45c7efec5ea6ab5a403b027a9f0b0","date":1307486921,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/spelling/SpellingResult#addFrequency(Token,int).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/SpellingResult#add(Token,int).mjava","sourceNew":"  /**\n   * Adds an original token with its document frequency\n   * \n   * @param token original token\n   * @param docFreq original token's document frequency\n   */\n  public void addFrequency(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","sourceOld":"  public void add(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/spelling/SpellingResult#addFrequency(Token,int).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/SpellingResult#add(Token,int).mjava","sourceNew":"  /**\n   * Adds an original token with its document frequency\n   * \n   * @param token original token\n   * @param docFreq original token's document frequency\n   */\n  public void addFrequency(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","sourceOld":"  public void add(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/spelling/SpellingResult#addFrequency(Token,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Adds an original token with its document frequency\n   * \n   * @param token original token\n   * @param docFreq original token's document frequency\n   */\n  public void addFrequency(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/SpellingResult#addFrequency(Token,int).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/SpellingResult#addFrequency(Token,int).mjava","sourceNew":"  /**\n   * Adds an original token with its document frequency\n   * \n   * @param token original token\n   * @param docFreq original token's document frequency\n   */\n  public void addFrequency(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","sourceOld":"  /**\n   * Adds an original token with its document frequency\n   * \n   * @param token original token\n   * @param docFreq original token's document frequency\n   */\n  public void addFrequency(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/SpellingResult#addFrequency(Token,int).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/SpellingResult#addFrequency(Token,int).mjava","sourceNew":"  /**\n   * Adds an original token with its document frequency\n   * \n   * @param token original token\n   * @param docFreq original token's document frequency\n   */\n  public void addFrequency(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","sourceOld":"  /**\n   * Adds an original token with its document frequency\n   * \n   * @param token original token\n   * @param docFreq original token's document frequency\n   */\n  public void addFrequency(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/SpellingResult#addFrequency(Token,int).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/SpellingResult#addFrequency(Token,int).mjava","sourceNew":"  /**\n   * Adds an original token with its document frequency\n   * \n   * @param token original token\n   * @param docFreq original token's document frequency\n   */\n  public void addFrequency(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","sourceOld":"  /**\n   * Adds an original token with its document frequency\n   * \n   * @param token original token\n   * @param docFreq original token's document frequency\n   */\n  public void addFrequency(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","de86357ed7f45c7efec5ea6ab5a403b027a9f0b0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"c26f00b574427b55127e869b935845554afde1fa":["de86357ed7f45c7efec5ea6ab5a403b027a9f0b0","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","de86357ed7f45c7efec5ea6ab5a403b027a9f0b0"],"de86357ed7f45c7efec5ea6ab5a403b027a9f0b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["de86357ed7f45c7efec5ea6ab5a403b027a9f0b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","de86357ed7f45c7efec5ea6ab5a403b027a9f0b0"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"de86357ed7f45c7efec5ea6ab5a403b027a9f0b0":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","c26f00b574427b55127e869b935845554afde1fa","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}