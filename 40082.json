{"path":"solr/core/src/java/org/apache/solr/cloud/api/collections/Assign#buildSolrCoreName(DistribStateManager,DocCollection,String,Replica.Type,boolean).mjava","commits":[{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/Assign#buildSolrCoreName(DistribStateManager,DocCollection,String,Replica.Type,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Assign#buildSolrCoreName(DistribStateManager,DocCollection,String,Replica.Type,boolean).mjava","sourceNew":"  public static String buildSolrCoreName(DistribStateManager stateManager, DocCollection collection, String shard, Replica.Type type, boolean newCollection) {\n    Slice slice = collection.getSlice(shard);\n    int defaultValue = defaultCounterValue(collection, newCollection);\n    int replicaNum = incAndGetId(stateManager, collection.getName(), defaultValue);\n    String coreName = buildSolrCoreName(collection.getName(), shard, type, replicaNum);\n    while (existCoreName(coreName, slice)) {\n      replicaNum = incAndGetId(stateManager, collection.getName(), defaultValue);\n      coreName = buildSolrCoreName(collection.getName(), shard, type, replicaNum);\n    }\n    return coreName;\n  }\n\n","sourceOld":"  public static String buildSolrCoreName(DistribStateManager stateManager, DocCollection collection, String shard, Replica.Type type, boolean newCollection) {\n    Slice slice = collection.getSlice(shard);\n    int defaultValue = defaultCounterValue(collection, newCollection);\n    int replicaNum = incAndGetId(stateManager, collection.getName(), defaultValue);\n    String coreName = buildSolrCoreName(collection.getName(), shard, type, replicaNum);\n    while (existCoreName(coreName, slice)) {\n      replicaNum = incAndGetId(stateManager, collection.getName(), defaultValue);\n      coreName = buildSolrCoreName(collection.getName(), shard, type, replicaNum);\n    }\n    return coreName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/Assign#buildSolrCoreName(DistribStateManager,DocCollection,String,Replica.Type,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Assign#buildSolrCoreName(DistribStateManager,DocCollection,String,Replica.Type,boolean).mjava","sourceNew":"  public static String buildSolrCoreName(DistribStateManager stateManager, DocCollection collection, String shard, Replica.Type type, boolean newCollection) {\n    Slice slice = collection.getSlice(shard);\n    int defaultValue = defaultCounterValue(collection, newCollection);\n    int replicaNum = incAndGetId(stateManager, collection.getName(), defaultValue);\n    String coreName = buildSolrCoreName(collection.getName(), shard, type, replicaNum);\n    while (existCoreName(coreName, slice)) {\n      replicaNum = incAndGetId(stateManager, collection.getName(), defaultValue);\n      coreName = buildSolrCoreName(collection.getName(), shard, type, replicaNum);\n    }\n    return coreName;\n  }\n\n","sourceOld":"  public static String buildSolrCoreName(DistribStateManager stateManager, DocCollection collection, String shard, Replica.Type type, boolean newCollection) {\n    Slice slice = collection.getSlice(shard);\n    int defaultValue = defaultCounterValue(collection, newCollection);\n    int replicaNum = incAndGetId(stateManager, collection.getName(), defaultValue);\n    String coreName = buildSolrCoreName(collection.getName(), shard, type, replicaNum);\n    while (existCoreName(coreName, slice)) {\n      replicaNum = incAndGetId(stateManager, collection.getName(), defaultValue);\n      coreName = buildSolrCoreName(collection.getName(), shard, type, replicaNum);\n    }\n    return coreName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/Assign#buildSolrCoreName(DistribStateManager,DocCollection,String,Replica.Type,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/Assign#buildSolrCoreName(DistribStateManager,DocCollection,String,Replica.Type,boolean).mjava","sourceNew":"  public static String buildSolrCoreName(DistribStateManager stateManager, DocCollection collection, String shard, Replica.Type type, boolean newCollection) {\n    Slice slice = collection.getSlice(shard);\n    int defaultValue = defaultCounterValue(collection, newCollection, shard);\n    int replicaNum = incAndGetId(stateManager, collection.getName(), defaultValue);\n    String coreName = buildSolrCoreName(collection.getName(), shard, type, replicaNum);\n    while (existCoreName(coreName, slice)) {\n      replicaNum = incAndGetId(stateManager, collection.getName(), defaultValue);\n      coreName = buildSolrCoreName(collection.getName(), shard, type, replicaNum);\n    }\n    return coreName;\n  }\n\n","sourceOld":"  public static String buildSolrCoreName(DistribStateManager stateManager, DocCollection collection, String shard, Replica.Type type, boolean newCollection) {\n    Slice slice = collection.getSlice(shard);\n    int defaultValue = defaultCounterValue(collection, newCollection);\n    int replicaNum = incAndGetId(stateManager, collection.getName(), defaultValue);\n    String coreName = buildSolrCoreName(collection.getName(), shard, type, replicaNum);\n    while (existCoreName(coreName, slice)) {\n      replicaNum = incAndGetId(stateManager, collection.getName(), defaultValue);\n      coreName = buildSolrCoreName(collection.getName(), shard, type, replicaNum);\n    }\n    return coreName;\n  }\n\n","bugFix":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}