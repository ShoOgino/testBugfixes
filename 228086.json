{"path":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadTermQuery#beforeClass().mjava","commits":[{"id":"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4","date":1442407411,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadTermQuery#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new PayloadAnalyzer())\n           .setSimilarity(similarity).setMergePolicy(newLogMergePolicy()));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = newTextField(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(newTextField(\"field\", English.intToEnglish(i), Field.Store.YES));\n      doc.add(newTextField(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new PayloadAnalyzer())\n           .setSimilarity(similarity).setMergePolicy(newLogMergePolicy()));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = newTextField(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(newTextField(\"field\", English.intToEnglish(i), Field.Store.YES));\n      doc.add(newTextField(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","date":1457644139,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadTermQuery#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadTermQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new PayloadAnalyzer())\n           .setSimilarity(similarity).setMergePolicy(newLogMergePolicy()));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = newTextField(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(newTextField(\"field\", English.intToEnglish(i), Field.Store.YES));\n      doc.add(newTextField(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    writer.forceMerge(1);\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(getOnlyLeafReader(reader));\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new PayloadAnalyzer())\n           .setSimilarity(similarity).setMergePolicy(newLogMergePolicy()));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = newTextField(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(newTextField(\"field\", English.intToEnglish(i), Field.Store.YES));\n      doc.add(newTextField(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"]},"commit2Childs":{"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}