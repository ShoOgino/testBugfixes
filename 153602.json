{"path":"src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#discardEscapeChar(String).mjava","commits":[{"id":"de78a3a2b1c56fcb670ee23d8c50ce678b7c1b1c","date":1110211682,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#discardEscapeChar(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a String where the escape char has been\n   * removed, or kept only once if there was a double escape.\n   */\n  private String discardEscapeChar(String input) {\n    char[] caSource = input.toCharArray();\n    char[] caDest = new char[caSource.length];\n    int j = 0;\n    for (int i = 0; i < caSource.length; i++) {\n      if ((caSource[i] != '\\\\') || (i > 0 && caSource[i-1] == '\\\\')) {\n        caDest[j++]=caSource[i];\n      }\n    }\n    return new String(caDest, 0, j);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a","date":1114594353,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/miscellaneous/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#discardEscapeChar(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#discardEscapeChar(String).mjava","sourceNew":"  /**\n   * Returns a String where the escape char has been\n   * removed, or kept only once if there was a double escape.\n   */\n  private String discardEscapeChar(String input) {\n    char[] caSource = input.toCharArray();\n    char[] caDest = new char[caSource.length];\n    int j = 0;\n    for (int i = 0; i < caSource.length; i++) {\n      if ((caSource[i] != '\\\\') || (i > 0 && caSource[i-1] == '\\\\')) {\n        caDest[j++]=caSource[i];\n      }\n    }\n    return new String(caDest, 0, j);\n  }\n\n","sourceOld":"  /**\n   * Returns a String where the escape char has been\n   * removed, or kept only once if there was a double escape.\n   */\n  private String discardEscapeChar(String input) {\n    char[] caSource = input.toCharArray();\n    char[] caDest = new char[caSource.length];\n    int j = 0;\n    for (int i = 0; i < caSource.length; i++) {\n      if ((caSource[i] != '\\\\') || (i > 0 && caSource[i-1] == '\\\\')) {\n        caDest[j++]=caSource[i];\n      }\n    }\n    return new String(caDest, 0, j);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a":["de78a3a2b1c56fcb670ee23d8c50ce678b7c1b1c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"de78a3a2b1c56fcb670ee23d8c50ce678b7c1b1c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a"]},"commit2Childs":{"e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["de78a3a2b1c56fcb670ee23d8c50ce678b7c1b1c"],"de78a3a2b1c56fcb670ee23d8c50ce678b7c1b1c":["e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}