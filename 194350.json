{"path":"lucene/test-framework/src/java/org/apache/lucene/index/RandomPostingsTester.SeedPostings#nextPosition().mjava","commits":[{"id":"3e8715d826e588419327562287d5d6a8040d63d6","date":1427987148,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomPostingsTester.SeedPostings#nextPosition().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BasePostingsFormatTestCase.SeedPostings#nextPosition().mjava","sourceNew":"    @Override\n    public int nextPosition() {\n      if (!doPositions) {\n        posUpto = freq;\n        return -1;\n      }\n      assert posUpto < freq;\n      \n      if (posUpto == 0 && random.nextBoolean()) {\n        // Sometimes index pos = 0\n      } else if (posSpacing == 1) {\n        pos++;\n      } else {\n        pos += TestUtil.nextInt(random, 1, posSpacing);\n      }\n\n      if (payloadSize != 0) {\n        if (fixedPayloads) {\n          payload.length = payloadSize;\n          random.nextBytes(payload.bytes); \n        } else {\n          int thisPayloadSize = random.nextInt(payloadSize);\n          if (thisPayloadSize != 0) {\n            payload.length = payloadSize;\n            random.nextBytes(payload.bytes); \n          } else {\n            payload.length = 0;\n          }\n        } \n      } else {\n        payload.length = 0;\n      }\n      if (!allowPayloads) {\n        payload.length = 0;\n      }\n\n      startOffset = offset + random.nextInt(5);\n      endOffset = startOffset + random.nextInt(10);\n      offset = endOffset;\n\n      posUpto++;\n      return pos;\n    }\n\n","sourceOld":"    @Override\n    public int nextPosition() {\n      if (!doPositions) {\n        posUpto = freq;\n        return -1;\n      }\n      assert posUpto < freq;\n      \n      if (posUpto == 0 && random.nextBoolean()) {\n        // Sometimes index pos = 0\n      } else if (posSpacing == 1) {\n        pos++;\n      } else {\n        pos += TestUtil.nextInt(random, 1, posSpacing);\n      }\n\n      if (payloadSize != 0) {\n        if (fixedPayloads) {\n          payload.length = payloadSize;\n          random.nextBytes(payload.bytes); \n        } else {\n          int thisPayloadSize = random.nextInt(payloadSize);\n          if (thisPayloadSize != 0) {\n            payload.length = payloadSize;\n            random.nextBytes(payload.bytes); \n          } else {\n            payload.length = 0;\n          }\n        } \n      } else {\n        payload.length = 0;\n      }\n      if (!allowPayloads) {\n        payload.length = 0;\n      }\n\n      startOffset = offset + random.nextInt(5);\n      endOffset = startOffset + random.nextInt(10);\n      offset = endOffset;\n\n      posUpto++;\n      return pos;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomPostingsTester.SeedPostings#nextPosition().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BasePostingsFormatTestCase.SeedPostings#nextPosition().mjava","sourceNew":"    @Override\n    public int nextPosition() {\n      if (!doPositions) {\n        posUpto = freq;\n        return -1;\n      }\n      assert posUpto < freq;\n      \n      if (posUpto == 0 && random.nextBoolean()) {\n        // Sometimes index pos = 0\n      } else if (posSpacing == 1) {\n        pos++;\n      } else {\n        pos += TestUtil.nextInt(random, 1, posSpacing);\n      }\n\n      if (payloadSize != 0) {\n        if (fixedPayloads) {\n          payload.length = payloadSize;\n          random.nextBytes(payload.bytes); \n        } else {\n          int thisPayloadSize = random.nextInt(payloadSize);\n          if (thisPayloadSize != 0) {\n            payload.length = payloadSize;\n            random.nextBytes(payload.bytes); \n          } else {\n            payload.length = 0;\n          }\n        } \n      } else {\n        payload.length = 0;\n      }\n      if (!allowPayloads) {\n        payload.length = 0;\n      }\n\n      startOffset = offset + random.nextInt(5);\n      endOffset = startOffset + random.nextInt(10);\n      offset = endOffset;\n\n      posUpto++;\n      return pos;\n    }\n\n","sourceOld":"    @Override\n    public int nextPosition() {\n      if (!doPositions) {\n        posUpto = freq;\n        return -1;\n      }\n      assert posUpto < freq;\n      \n      if (posUpto == 0 && random.nextBoolean()) {\n        // Sometimes index pos = 0\n      } else if (posSpacing == 1) {\n        pos++;\n      } else {\n        pos += TestUtil.nextInt(random, 1, posSpacing);\n      }\n\n      if (payloadSize != 0) {\n        if (fixedPayloads) {\n          payload.length = payloadSize;\n          random.nextBytes(payload.bytes); \n        } else {\n          int thisPayloadSize = random.nextInt(payloadSize);\n          if (thisPayloadSize != 0) {\n            payload.length = payloadSize;\n            random.nextBytes(payload.bytes); \n          } else {\n            payload.length = 0;\n          }\n        } \n      } else {\n        payload.length = 0;\n      }\n      if (!allowPayloads) {\n        payload.length = 0;\n      }\n\n      startOffset = offset + random.nextInt(5);\n      endOffset = startOffset + random.nextInt(10);\n      offset = endOffset;\n\n      posUpto++;\n      return pos;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3e8715d826e588419327562287d5d6a8040d63d6"],"3e8715d826e588419327562287d5d6a8040d63d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e8715d826e588419327562287d5d6a8040d63d6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2638f781be724518ff6c2263d14a48cf6e68017","3e8715d826e588419327562287d5d6a8040d63d6"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"3e8715d826e588419327562287d5d6a8040d63d6":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}