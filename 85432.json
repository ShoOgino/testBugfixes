{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestCoreParser#testDisjunctionMaxQueryXML().mjava","commits":[{"id":"f054843acc706da8f2f007c842699d62e4af736c","date":1450870707,"type":1,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestCoreParser#testDisjunctionMaxQueryXML().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestParser#testDisjunctionMaxQueryXML().mjava","sourceNew":"  public void testDisjunctionMaxQueryXML() throws ParserException, IOException {\n    Query q = parse(\"DisjunctionMaxQuery.xml\");\n    assertTrue(q instanceof DisjunctionMaxQuery);\n    DisjunctionMaxQuery d = (DisjunctionMaxQuery)q;\n    assertEquals(0.0f, d.getTieBreakerMultiplier(), 0.0001f);\n    assertEquals(2, d.getDisjuncts().size());\n    DisjunctionMaxQuery ndq = (DisjunctionMaxQuery) d.getDisjuncts().get(1);\n    assertEquals(1.2f, ndq.getTieBreakerMultiplier(), 0.0001f);\n    assertEquals(1, ndq.getDisjuncts().size());\n  }\n\n","sourceOld":"  public void testDisjunctionMaxQueryXML() throws ParserException, IOException {\n    Query q = parse(\"DisjunctionMaxQuery.xml\");\n    assertTrue(q instanceof DisjunctionMaxQuery);\n    DisjunctionMaxQuery d = (DisjunctionMaxQuery)q;\n    assertEquals(0.0f, d.getTieBreakerMultiplier(), 0.0001f);\n    assertEquals(2, d.getDisjuncts().size());\n    DisjunctionMaxQuery ndq = (DisjunctionMaxQuery) d.getDisjuncts().get(1);\n    assertEquals(1.2f, ndq.getTieBreakerMultiplier(), 0.0001f);\n    assertEquals(1, ndq.getDisjuncts().size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4874ce841615411ddc4f5998fc9db9a533827976","date":1514294366,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestCoreParser#testDisjunctionMaxQueryXML().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestCoreParser#testDisjunctionMaxQueryXML().mjava","sourceNew":"  public void testDisjunctionMaxQueryXML() throws ParserException, IOException {\n    Query q = parse(\"DisjunctionMaxQuery.xml\");\n    assertTrue(q instanceof DisjunctionMaxQuery);\n    DisjunctionMaxQuery d = (DisjunctionMaxQuery)q;\n    assertEquals(0.0f, d.getTieBreakerMultiplier(), 0.0001f);\n    assertEquals(2, d.getDisjuncts().size());\n    DisjunctionMaxQuery ndq = (DisjunctionMaxQuery) d.getDisjuncts().get(1);\n    assertEquals(0.3f, ndq.getTieBreakerMultiplier(), 0.0001f);\n    assertEquals(1, ndq.getDisjuncts().size());\n  }\n\n","sourceOld":"  public void testDisjunctionMaxQueryXML() throws ParserException, IOException {\n    Query q = parse(\"DisjunctionMaxQuery.xml\");\n    assertTrue(q instanceof DisjunctionMaxQuery);\n    DisjunctionMaxQuery d = (DisjunctionMaxQuery)q;\n    assertEquals(0.0f, d.getTieBreakerMultiplier(), 0.0001f);\n    assertEquals(2, d.getDisjuncts().size());\n    DisjunctionMaxQuery ndq = (DisjunctionMaxQuery) d.getDisjuncts().get(1);\n    assertEquals(1.2f, ndq.getTieBreakerMultiplier(), 0.0001f);\n    assertEquals(1, ndq.getDisjuncts().size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4874ce841615411ddc4f5998fc9db9a533827976":["f054843acc706da8f2f007c842699d62e4af736c"],"f054843acc706da8f2f007c842699d62e4af736c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4874ce841615411ddc4f5998fc9db9a533827976"]},"commit2Childs":{"4874ce841615411ddc4f5998fc9db9a533827976":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f054843acc706da8f2f007c842699d62e4af736c":["4874ce841615411ddc4f5998fc9db9a533827976"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f054843acc706da8f2f007c842699d62e4af736c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}