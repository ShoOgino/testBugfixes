{"path":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#getTerm().mjava","commits":[{"id":"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","date":1475611903,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#getTerm().mjava","pathOld":"/dev/null","sourceNew":"  BytesRef getTerm() throws IOException {\n    // the dp.getPayload thing is a hack -- see MultiTermHighlighting\n    return term != null ? term : postingsEnum.getPayload();\n    // We don't deepcopy() because in this hack we know we don't have to.\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#getTerm().mjava","pathOld":"/dev/null","sourceNew":"  BytesRef getTerm() throws IOException {\n    // the dp.getPayload thing is a hack -- see MultiTermHighlighting\n    return term != null ? term : postingsEnum.getPayload();\n    // We don't deepcopy() because in this hack we know we don't have to.\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f714d649962c934166dedd1e83173e36356b328","date":1479399594,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#getTerm().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#getTerm().mjava","sourceNew":"  BytesRef getTerm() throws IOException {\n    // TODO TokenStreamOffsetStrategy could override OffsetsEnum; then remove this hack here\n    return term != null ? term : postingsEnum.getPayload(); // abusing payload like this is a total hack!\n  }\n\n","sourceOld":"  BytesRef getTerm() throws IOException {\n    // the dp.getPayload thing is a hack -- see MultiTermHighlighting\n    return term != null ? term : postingsEnum.getPayload();\n    // We don't deepcopy() because in this hack we know we don't have to.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e859e664a65796dadf8aaf65db6f66f3a885368","date":1479487334,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#getTerm().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#getTerm().mjava","sourceNew":"  BytesRef getTerm() throws IOException {\n    // TODO TokenStreamOffsetStrategy could override OffsetsEnum; then remove this hack here\n    return term != null ? term : postingsEnum.getPayload(); // abusing payload like this is a total hack!\n  }\n\n","sourceOld":"  BytesRef getTerm() throws IOException {\n    // the dp.getPayload thing is a hack -- see MultiTermHighlighting\n    return term != null ? term : postingsEnum.getPayload();\n    // We don't deepcopy() because in this hack we know we don't have to.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b617b6c660071491e5781addba61cf29dcfa97a","date":1484198957,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#getTerm().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#getTerm().mjava","sourceNew":"  /** The term at this position; usually always the same. This term is a reference that is safe to continue to refer to,\n   * even after we move to next position. */\n  public BytesRef getTerm() throws IOException {\n    // TODO TokenStreamOffsetStrategy could override OffsetsEnum; then remove this hack here\n    return term != null ? term : postingsEnum.getPayload(); // abusing payload like this is a total hack!\n  }\n\n","sourceOld":"  BytesRef getTerm() throws IOException {\n    // TODO TokenStreamOffsetStrategy could override OffsetsEnum; then remove this hack here\n    return term != null ? term : postingsEnum.getPayload(); // abusing payload like this is a total hack!\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#getTerm().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#getTerm().mjava","sourceNew":"  /** The term at this position; usually always the same. This term is a reference that is safe to continue to refer to,\n   * even after we move to next position. */\n  public BytesRef getTerm() throws IOException {\n    // TODO TokenStreamOffsetStrategy could override OffsetsEnum; then remove this hack here\n    return term != null ? term : postingsEnum.getPayload(); // abusing payload like this is a total hack!\n  }\n\n","sourceOld":"  BytesRef getTerm() throws IOException {\n    // TODO TokenStreamOffsetStrategy could override OffsetsEnum; then remove this hack here\n    return term != null ? term : postingsEnum.getPayload(); // abusing payload like this is a total hack!\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571","date":1515642580,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#getTerm().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#getTerm().mjava","sourceNew":"  /**\n   * The term at this position; usually always the same.\n   * This BytesRef is safe to continue to refer to, even after we move to the next position.\n   */\n  public abstract BytesRef getTerm() throws IOException;\n\n","sourceOld":"  /** The term at this position; usually always the same. This term is a reference that is safe to continue to refer to,\n   * even after we move to next position. */\n  public BytesRef getTerm() throws IOException {\n    // TODO TokenStreamOffsetStrategy could override OffsetsEnum; then remove this hack here\n    return term != null ? term : postingsEnum.getPayload(); // abusing payload like this is a total hack!\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#getTerm().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#getTerm().mjava","sourceNew":"  /**\n   * The term at this position; usually always the same.\n   * This BytesRef is safe to continue to refer to, even after we move to the next position.\n   */\n  public abstract BytesRef getTerm() throws IOException;\n\n","sourceOld":"  /** The term at this position; usually always the same. This term is a reference that is safe to continue to refer to,\n   * even after we move to next position. */\n  public BytesRef getTerm() throws IOException {\n    // TODO TokenStreamOffsetStrategy could override OffsetsEnum; then remove this hack here\n    return term != null ? term : postingsEnum.getPayload(); // abusing payload like this is a total hack!\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"795822cce6616d4035b5a4bdbb6c113ea2f715ba","date":1535599765,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#getTerm().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/OffsetsEnum#getTerm().mjava","sourceNew":"  /**\n   * The term at this position.\n   * This BytesRef is safe to continue to refer to, even after we move to the next position.\n   *\n   * @see Passage#getMatchTerms()\n   */\n  public abstract BytesRef getTerm() throws IOException;\n\n","sourceOld":"  /**\n   * The term at this position; usually always the same.\n   * This BytesRef is safe to continue to refer to, even after we move to the next position.\n   */\n  public abstract BytesRef getTerm() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["7b617b6c660071491e5781addba61cf29dcfa97a","eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571"],"7b617b6c660071491e5781addba61cf29dcfa97a":["1f714d649962c934166dedd1e83173e36356b328"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571":["7b617b6c660071491e5781addba61cf29dcfa97a"],"1f714d649962c934166dedd1e83173e36356b328":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["2e859e664a65796dadf8aaf65db6f66f3a885368","7b617b6c660071491e5781addba61cf29dcfa97a"],"2e859e664a65796dadf8aaf65db6f66f3a885368":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","1f714d649962c934166dedd1e83173e36356b328"],"795822cce6616d4035b5a4bdbb6c113ea2f715ba":["b94236357aaa22b76c10629851fe4e376e0cea82"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["795822cce6616d4035b5a4bdbb6c113ea2f715ba"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["795822cce6616d4035b5a4bdbb6c113ea2f715ba"],"7b617b6c660071491e5781addba61cf29dcfa97a":["b94236357aaa22b76c10629851fe4e376e0cea82","eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2":["1f714d649962c934166dedd1e83173e36356b328","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571":["b94236357aaa22b76c10629851fe4e376e0cea82"],"1f714d649962c934166dedd1e83173e36356b328":["7b617b6c660071491e5781addba61cf29dcfa97a","2e859e664a65796dadf8aaf65db6f66f3a885368"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"2e859e664a65796dadf8aaf65db6f66f3a885368":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"795822cce6616d4035b5a4bdbb6c113ea2f715ba":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2e859e664a65796dadf8aaf65db6f66f3a885368"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}