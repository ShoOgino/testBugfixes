{"path":"solr/core/src/test/org/apache/solr/util/UtilsToolTest#testRelativePath().mjava","commits":[{"id":"5d1e9a21218cf0ffd81625a2f105dc388aa3097d","date":1476967652,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/UtilsToolTest#testRelativePath().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRelativePath() throws Exception {\n    String[] args = {\"utils\", \"-remove_old_solr_logs\", \"0\", \"-l\", dir.getFileName().toString(), \"-s\", dir.getParent().toString()};\n    assertEquals(files.size(), fileCount());\n    assertEquals(0, runTool(args));\n    assertEquals(files.size()-2, fileCount());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6b1b1219af145d9cbc08feaa968f7e515ab3f4e","date":1476974235,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/UtilsToolTest#testRelativePath().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRelativePath() throws Exception {\n    String[] args = {\"utils\", \"-remove_old_solr_logs\", \"0\", \"-l\", dir.getFileName().toString(), \"-s\", dir.getParent().toString()};\n    assertEquals(files.size(), fileCount());\n    assertEquals(0, runTool(args));\n    assertEquals(files.size()-2, fileCount());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/UtilsToolTest#testRelativePath().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRelativePath() throws Exception {\n    String[] args = {\"utils\", \"-remove_old_solr_logs\", \"0\", \"-l\", dir.getFileName().toString(), \"-s\", dir.getParent().toString()};\n    assertEquals(files.size(), fileCount());\n    assertEquals(0, runTool(args));\n    assertEquals(files.size()-2, fileCount());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"783adf2680577c3c54c8e5e8d76918022f9ec959","date":1554507941,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/UtilsToolTest#testRelativePath().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/UtilsToolTest#testRelativePath().mjava","sourceNew":"  @Test\n  public void testRelativePath() throws Exception {\n    \n    // NOTE...\n    //\n    // some filesystems have coarse granularity for last modified attribute (ie: multiple milliseconds)\n    // which means if the test runs very quickly after the creation / setLastMod of these file,\n    // then \"setLastMod(X days ago)\" may be equal to (or even greater that) \"now - X days\" causing\n    // \"-remove_old_solr_logs X\" to ignore them.\n    // so make sure we use at least \"setLastMod(X+1 days ago)\"\n    \n    Files.setLastModifiedTime(dir.resolve(\"solr_log_20160102\"),\n                              FileTime.from(Instant.now().minus(Period.ofDays(1))));\n    Files.setLastModifiedTime(dir.resolve(\"solr_log_20160304\"),\n                              FileTime.from(Instant.now().minus(Period.ofDays(2))));\n    \n    String[] args = {\"utils\", \"-remove_old_solr_logs\", \"0\", \"-l\", dir.getFileName().toString(), \"-s\", dir.getParent().toString()};\n    assertEquals(files.size(), fileCount());\n    assertEquals(0, runTool(args));\n    assertEquals(files.size()-2, fileCount());\n  }\n\n","sourceOld":"  @Test\n  public void testRelativePath() throws Exception {\n    String[] args = {\"utils\", \"-remove_old_solr_logs\", \"0\", \"-l\", dir.getFileName().toString(), \"-s\", dir.getParent().toString()};\n    assertEquals(files.size(), fileCount());\n    assertEquals(0, runTool(args));\n    assertEquals(files.size()-2, fileCount());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"783adf2680577c3c54c8e5e8d76918022f9ec959":["c6b1b1219af145d9cbc08feaa968f7e515ab3f4e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5d1e9a21218cf0ffd81625a2f105dc388aa3097d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c6b1b1219af145d9cbc08feaa968f7e515ab3f4e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5d1e9a21218cf0ffd81625a2f105dc388aa3097d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5d1e9a21218cf0ffd81625a2f105dc388aa3097d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["783adf2680577c3c54c8e5e8d76918022f9ec959"]},"commit2Childs":{"783adf2680577c3c54c8e5e8d76918022f9ec959":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d1e9a21218cf0ffd81625a2f105dc388aa3097d","c6b1b1219af145d9cbc08feaa968f7e515ab3f4e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"5d1e9a21218cf0ffd81625a2f105dc388aa3097d":["c6b1b1219af145d9cbc08feaa968f7e515ab3f4e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"c6b1b1219af145d9cbc08feaa968f7e515ab3f4e":["783adf2680577c3c54c8e5e8d76918022f9ec959"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}