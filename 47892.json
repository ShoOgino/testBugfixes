{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICache#freezeCaches(int).mjava","commits":[{"id":"fb9d1512598fc72005b830d5e2b88e61a0f4b374","date":1543843391,"type":0,"author":"Toke Eskildsen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICache#freezeCaches(int).mjava","pathOld":"/dev/null","sourceNew":"  private void freezeCaches(int largestBlock) {\n    if (largestBlock == -1) { // No set bit: Disable the caches\n      blockCache = null;\n      return;\n    }\n\n    // Reduce size to minimum\n    if (blockCache.length-1 > largestBlock) {\n      long[] newBC = new long[Math.max(largestBlock - 1, 1)];\n      System.arraycopy(blockCache, 0, newBC, 0, newBC.length);\n      blockCache = newBC;\n    }\n\n    // Set non-defined blockCache entries (caused by blocks with 0 set bits) to the subsequently defined one\n    long latest = BLOCK_EMPTY;\n    for (int i = blockCache.length-1; i >= 0 ; i--) {\n      long current = blockCache[i];\n      if (current == BLOCK_EMPTY) {\n        blockCache[i] = latest;\n      } else {\n        latest = current;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91afec3d1be3c4538a6f92102a22573087f69d68","date":1543843480,"type":3,"author":"Toke Eskildsen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICache#freezeCaches(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICache#freezeCaches(int).mjava","sourceNew":"  private void freezeCaches(int largestBlock) {\n    if (largestBlock == -1) { // No set bit: Disable the caches\n      blockCache = null;\n      rank = null;\n      return;\n    }\n\n    // Reduce size to minimum\n    if (blockCache.length-1 > largestBlock) {\n      long[] newBC = new long[Math.max(largestBlock - 1, 1)];\n      System.arraycopy(blockCache, 0, newBC, 0, newBC.length);\n      blockCache = newBC;\n    }\n\n    // Set non-defined blockCache entries (caused by blocks with 0 set bits) to the subsequently defined one\n    long latest = BLOCK_EMPTY;\n    for (int i = blockCache.length-1; i >= 0 ; i--) {\n      long current = blockCache[i];\n      if (current == BLOCK_EMPTY) {\n        blockCache[i] = latest;\n      } else {\n        latest = current;\n      }\n    }\n  }\n\n","sourceOld":"  private void freezeCaches(int largestBlock) {\n    if (largestBlock == -1) { // No set bit: Disable the caches\n      blockCache = null;\n      return;\n    }\n\n    // Reduce size to minimum\n    if (blockCache.length-1 > largestBlock) {\n      long[] newBC = new long[Math.max(largestBlock - 1, 1)];\n      System.arraycopy(blockCache, 0, newBC, 0, newBC.length);\n      blockCache = newBC;\n    }\n\n    // Set non-defined blockCache entries (caused by blocks with 0 set bits) to the subsequently defined one\n    long latest = BLOCK_EMPTY;\n    for (int i = blockCache.length-1; i >= 0 ; i--) {\n      long current = blockCache[i];\n      if (current == BLOCK_EMPTY) {\n        blockCache[i] = latest;\n      } else {\n        latest = current;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90c33633162a86e6323f4cf2b93e2bb168b1dc22","date":1544534062,"type":3,"author":"Toke Eskildsen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICache#freezeCaches(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICache#freezeCaches(int).mjava","sourceNew":"  private void freezeCaches(int largestBlock) {\n    if (largestBlock == -1) { // No set bit: Disable the caches\n      blockCache = null;\n      return;\n    }\n\n    // Reduce size to minimum\n    if (blockCache.length-1 > largestBlock) {\n      long[] newBC = new long[Math.max(largestBlock - 1, 1)];\n      System.arraycopy(blockCache, 0, newBC, 0, newBC.length);\n      blockCache = newBC;\n    }\n\n    // Set non-defined blockCache entries (caused by blocks with 0 set bits) to the subsequently defined one\n    long latest = BLOCK_EMPTY;\n    for (int i = blockCache.length-1; i >= 0 ; i--) {\n      long current = blockCache[i];\n      if (current == BLOCK_EMPTY) {\n        blockCache[i] = latest;\n      } else {\n        latest = current;\n      }\n    }\n  }\n\n","sourceOld":"  private void freezeCaches(int largestBlock) {\n    if (largestBlock == -1) { // No set bit: Disable the caches\n      blockCache = null;\n      rank = null;\n      return;\n    }\n\n    // Reduce size to minimum\n    if (blockCache.length-1 > largestBlock) {\n      long[] newBC = new long[Math.max(largestBlock - 1, 1)];\n      System.arraycopy(blockCache, 0, newBC, 0, newBC.length);\n      blockCache = newBC;\n    }\n\n    // Set non-defined blockCache entries (caused by blocks with 0 set bits) to the subsequently defined one\n    long latest = BLOCK_EMPTY;\n    for (int i = blockCache.length-1; i >= 0 ; i--) {\n      long current = blockCache[i];\n      if (current == BLOCK_EMPTY) {\n        blockCache[i] = latest;\n      } else {\n        latest = current;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c74cb19c6e988ccfef4286a1f3f0e5930f0863e","date":1544534277,"type":4,"author":"Toke Eskildsen","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICache#freezeCaches(int).mjava","sourceNew":null,"sourceOld":"  private void freezeCaches(int largestBlock) {\n    if (largestBlock == -1) { // No set bit: Disable the caches\n      blockCache = null;\n      return;\n    }\n\n    // Reduce size to minimum\n    if (blockCache.length-1 > largestBlock) {\n      long[] newBC = new long[Math.max(largestBlock - 1, 1)];\n      System.arraycopy(blockCache, 0, newBC, 0, newBC.length);\n      blockCache = newBC;\n    }\n\n    // Set non-defined blockCache entries (caused by blocks with 0 set bits) to the subsequently defined one\n    long latest = BLOCK_EMPTY;\n    for (int i = blockCache.length-1; i >= 0 ; i--) {\n      long current = blockCache[i];\n      if (current == BLOCK_EMPTY) {\n        blockCache[i] = latest;\n      } else {\n        latest = current;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfd70c9571310639a77f0123aea0db41077d9bb6","date":1544538617,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICache#freezeCaches(int).mjava","sourceNew":null,"sourceOld":"  private void freezeCaches(int largestBlock) {\n    if (largestBlock == -1) { // No set bit: Disable the caches\n      blockCache = null;\n      rank = null;\n      return;\n    }\n\n    // Reduce size to minimum\n    if (blockCache.length-1 > largestBlock) {\n      long[] newBC = new long[Math.max(largestBlock - 1, 1)];\n      System.arraycopy(blockCache, 0, newBC, 0, newBC.length);\n      blockCache = newBC;\n    }\n\n    // Set non-defined blockCache entries (caused by blocks with 0 set bits) to the subsequently defined one\n    long latest = BLOCK_EMPTY;\n    for (int i = blockCache.length-1; i >= 0 ; i--) {\n      long current = blockCache[i];\n      if (current == BLOCK_EMPTY) {\n        blockCache[i] = latest;\n      } else {\n        latest = current;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91afec3d1be3c4538a6f92102a22573087f69d68":["fb9d1512598fc72005b830d5e2b88e61a0f4b374"],"cfd70c9571310639a77f0123aea0db41077d9bb6":["91afec3d1be3c4538a6f92102a22573087f69d68","5c74cb19c6e988ccfef4286a1f3f0e5930f0863e"],"90c33633162a86e6323f4cf2b93e2bb168b1dc22":["91afec3d1be3c4538a6f92102a22573087f69d68"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fb9d1512598fc72005b830d5e2b88e61a0f4b374":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5c74cb19c6e988ccfef4286a1f3f0e5930f0863e":["90c33633162a86e6323f4cf2b93e2bb168b1dc22"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cfd70c9571310639a77f0123aea0db41077d9bb6"]},"commit2Childs":{"91afec3d1be3c4538a6f92102a22573087f69d68":["cfd70c9571310639a77f0123aea0db41077d9bb6","90c33633162a86e6323f4cf2b93e2bb168b1dc22"],"cfd70c9571310639a77f0123aea0db41077d9bb6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"90c33633162a86e6323f4cf2b93e2bb168b1dc22":["5c74cb19c6e988ccfef4286a1f3f0e5930f0863e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb9d1512598fc72005b830d5e2b88e61a0f4b374"],"fb9d1512598fc72005b830d5e2b88e61a0f4b374":["91afec3d1be3c4538a6f92102a22573087f69d68"],"5c74cb19c6e988ccfef4286a1f3f0e5930f0863e":["cfd70c9571310639a77f0123aea0db41077d9bb6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}