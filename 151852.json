{"path":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7e4907084808af8fdb14b9809e6dceaccf6867b","date":1343473006,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,StoredDocument,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, StoredDocument doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,StoredDocument,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, StoredDocument doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1d028314cced5858683a1bb4741423d0f934257b":["c26f00b574427b55127e869b935845554afde1fa","a7e4907084808af8fdb14b9809e6dceaccf6867b"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a7e4907084808af8fdb14b9809e6dceaccf6867b":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d028314cced5858683a1bb4741423d0f934257b"]},"commit2Childs":{"1d028314cced5858683a1bb4741423d0f934257b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["1d028314cced5858683a1bb4741423d0f934257b","a7e4907084808af8fdb14b9809e6dceaccf6867b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"a7e4907084808af8fdb14b9809e6dceaccf6867b":["1d028314cced5858683a1bb4741423d0f934257b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}