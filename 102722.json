{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/administration/AccountBuilder#buildAccount(Reader).mjava","commits":[{"id":"89f8b19763ea545f1e428dfa5efb8235beaaa05e","date":1151436680,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/administration/AccountBuilder#buildAccount(Reader).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Reads the xml from the provided reader and binds the values to the \n     * @param reader - the reader to read the xml from\n     * @return - the GDataAccount \n     * @throws IOException - if an IOException occures\n     * @throws SAXException - if the xml can not be parsed by the sax reader\n     */\n    public static GDataAccount buildAccount(final Reader reader) throws IOException,\n            SAXException {\n        if (reader == null)\n            throw new IllegalArgumentException(\"Reader must not be null\");\n        GDataAccount account = null;\n        Digester digester = new Digester();\n        digester.setValidating(false);\n        digester.addObjectCreate(\"account\", GDataAccount.class);\n        digester.addBeanPropertySetter(\"account/account-name\", \"name\");\n        digester.addBeanPropertySetter(\"account/password\", \"password\");\n        digester.addBeanPropertySetter(\"account/account-role\", \"rolesAsInt\");\n        digester.addBeanPropertySetter(\"account/account-owner/name\",\n                \"authorname\");\n        digester.addBeanPropertySetter(\"account/account-owner/email-address\",\n                \"authorMail\");\n        digester.addBeanPropertySetter(\"account/account-owner/url\",\n                \"authorLink\");\n        account = (GDataAccount) digester.parse(reader);\n        return account;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"303ca293666286b4ae2b0b4dbf10d3bf60ed727c","date":1153866181,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/administration/AccountBuilder#buildAccount(Reader).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/administration/AccountBuilder#buildAccount(Reader).mjava","sourceNew":"    /**\n     * Reads the xml from the provided reader and binds the values to the \n     * @param reader - the reader to read the xml from\n     * @return - the GDataAccount \n     * @throws IOException - if an IOException occures\n     * @throws SAXException - if the xml can not be parsed by the sax reader\n     */\n    public static GDataAccount buildAccount(final Reader reader) throws IOException,\n            SAXException {\n        if (reader == null)\n            throw new IllegalArgumentException(\"Reader must not be null\");\n        String schemaFile = AccountBuilder.class.getResource(\"/gdata-account.xsd\").getFile();\n        GDataAccount account = null;\n        Digester digester = new Digester();\n        digester.setValidating(true);\n        digester.setErrorHandler(new SimpleSaxErrorHandler());\n        digester.setSchema(schemaFile);\n        digester.addObjectCreate(\"account\", GDataAccount.class);\n        digester.addBeanPropertySetter(\"account/account-name\", \"name\");\n        digester.addBeanPropertySetter(\"account/password\", \"password\");\n        digester.addBeanPropertySetter(\"account/account-role\", \"rolesAsInt\");\n        digester.addBeanPropertySetter(\"account/account-owner/name\",\n                \"authorname\");\n        digester.addBeanPropertySetter(\"account/account-owner/email-address\",\n                \"authorMail\");\n        digester.addBeanPropertySetter(\"account/account-owner/url\",\n                \"authorLink\");\n\n        account = (GDataAccount) digester.parse(reader);\n\n        return account;\n    }\n\n","sourceOld":"    /**\n     * Reads the xml from the provided reader and binds the values to the \n     * @param reader - the reader to read the xml from\n     * @return - the GDataAccount \n     * @throws IOException - if an IOException occures\n     * @throws SAXException - if the xml can not be parsed by the sax reader\n     */\n    public static GDataAccount buildAccount(final Reader reader) throws IOException,\n            SAXException {\n        if (reader == null)\n            throw new IllegalArgumentException(\"Reader must not be null\");\n        GDataAccount account = null;\n        Digester digester = new Digester();\n        digester.setValidating(false);\n        digester.addObjectCreate(\"account\", GDataAccount.class);\n        digester.addBeanPropertySetter(\"account/account-name\", \"name\");\n        digester.addBeanPropertySetter(\"account/password\", \"password\");\n        digester.addBeanPropertySetter(\"account/account-role\", \"rolesAsInt\");\n        digester.addBeanPropertySetter(\"account/account-owner/name\",\n                \"authorname\");\n        digester.addBeanPropertySetter(\"account/account-owner/email-address\",\n                \"authorMail\");\n        digester.addBeanPropertySetter(\"account/account-owner/url\",\n                \"authorLink\");\n        account = (GDataAccount) digester.parse(reader);\n        return account;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09fe963da2613c724ffe82353b4ca2364a1f93c6","date":1155249160,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/administration/AccountBuilder#buildAccount(Reader).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/administration/AccountBuilder#buildAccount(Reader).mjava","sourceNew":"    /**\n     * Reads the xml from the provided reader and binds the values to the \n     * @param reader - the reader to read the xml from\n     * @return - the GDataAccount \n     * @throws IOException - if an IOException occurs\n     * @throws SAXException - if the xml can not be parsed by the sax reader\n     */\n    public static GDataAccount buildAccount(final Reader reader) throws IOException,\n            SAXException {\n        if (reader == null)\n            throw new IllegalArgumentException(\"Reader must not be null\");\n        URL resource = AccountBuilder.class.getResource(\"/gdata-account.xsd\");\n        if(resource == null)\n            throw new RuntimeException(\"can not find xml schema file 'gdata-account.xsd' -- file must be present on the classpath\");\n        String schemaFile = resource.getFile();\n        GDataAccount account = null;\n        /*\n         * Force using apache xerces parser for digester\n         */\n        SAXParser parser = new SAXParser();\n        parser.setFeature(\"http://apache.org/xml/features/validation/schema-full-checking\",true);\n        parser.setFeature(\"http://apache.org/xml/features/validation/schema\",true);\n        parser.setFeature(\"http://xml.org/sax/features/validation\",true); \n        parser.setProperty(\"http://apache.org/xml/properties/schema/external-noNamespaceSchemaLocation\",schemaFile);\n        Digester digester = new Digester(parser);\n        digester.setValidating(true);\n        digester.setErrorHandler(new SimpleSaxErrorHandler());\n        digester.setSchema(schemaFile);\n        digester.addObjectCreate(\"account\", GDataAccount.class);\n        digester.addBeanPropertySetter(\"account/account-name\", \"name\");\n        digester.addBeanPropertySetter(\"account/password\", \"password\");\n        digester.addBeanPropertySetter(\"account/account-role\", \"rolesAsInt\");\n        digester.addBeanPropertySetter(\"account/account-owner/name\",\n                \"authorname\");\n        digester.addBeanPropertySetter(\"account/account-owner/email-address\",\n                \"authorMail\");\n        digester.addBeanPropertySetter(\"account/account-owner/url\",\n                \"authorLink\");\n\n        account = (GDataAccount) digester.parse(reader);\n        return account;\n    }\n\n","sourceOld":"    /**\n     * Reads the xml from the provided reader and binds the values to the \n     * @param reader - the reader to read the xml from\n     * @return - the GDataAccount \n     * @throws IOException - if an IOException occures\n     * @throws SAXException - if the xml can not be parsed by the sax reader\n     */\n    public static GDataAccount buildAccount(final Reader reader) throws IOException,\n            SAXException {\n        if (reader == null)\n            throw new IllegalArgumentException(\"Reader must not be null\");\n        String schemaFile = AccountBuilder.class.getResource(\"/gdata-account.xsd\").getFile();\n        GDataAccount account = null;\n        Digester digester = new Digester();\n        digester.setValidating(true);\n        digester.setErrorHandler(new SimpleSaxErrorHandler());\n        digester.setSchema(schemaFile);\n        digester.addObjectCreate(\"account\", GDataAccount.class);\n        digester.addBeanPropertySetter(\"account/account-name\", \"name\");\n        digester.addBeanPropertySetter(\"account/password\", \"password\");\n        digester.addBeanPropertySetter(\"account/account-role\", \"rolesAsInt\");\n        digester.addBeanPropertySetter(\"account/account-owner/name\",\n                \"authorname\");\n        digester.addBeanPropertySetter(\"account/account-owner/email-address\",\n                \"authorMail\");\n        digester.addBeanPropertySetter(\"account/account-owner/url\",\n                \"authorLink\");\n\n        account = (GDataAccount) digester.parse(reader);\n\n        return account;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/administration/AccountBuilder#buildAccount(Reader).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/administration/AccountBuilder#buildAccount(Reader).mjava","sourceNew":"    /**\n     * Reads the xml from the provided reader and binds the values to the \n     * @param reader - the reader to read the xml from\n     * @return - the GDataAccount \n     * @throws IOException - if an IOException occurs\n     * @throws SAXException - if the xml can not be parsed by the sax reader\n     */\n    public static GDataAccount buildAccount(final Reader reader) throws IOException,\n            SAXException {\n        if (reader == null)\n            throw new IllegalArgumentException(\"Reader must not be null\");\n        URL resource = AccountBuilder.class.getResource(\"/gdata-account.xsd\");\n        if(resource == null)\n            throw new RuntimeException(\"can not find xml schema file 'gdata-account.xsd' -- file must be present on the classpath\");\n        String schemaFile = resource.getFile();\n        GDataAccount account = null;\n        /*\n         * Force using apache xerces parser for digester\n         */\n        SAXParser parser = new SAXParser();\n        parser.setFeature(\"http://apache.org/xml/features/validation/schema-full-checking\",true);\n        parser.setFeature(\"http://apache.org/xml/features/validation/schema\",true);\n        parser.setFeature(\"http://xml.org/sax/features/validation\",true); \n        parser.setProperty(\"http://apache.org/xml/properties/schema/external-noNamespaceSchemaLocation\",schemaFile);\n        Digester digester = new Digester(parser);\n        digester.setValidating(true);\n        digester.setErrorHandler(new SimpleSaxErrorHandler());\n        digester.setSchema(schemaFile);\n        digester.addObjectCreate(\"account\", GDataAccount.class);\n        digester.addBeanPropertySetter(\"account/account-name\", \"name\");\n        digester.addBeanPropertySetter(\"account/password\", \"password\");\n        digester.addBeanPropertySetter(\"account/account-role\", \"rolesAsInt\");\n        digester.addBeanPropertySetter(\"account/account-owner/name\",\n                \"authorname\");\n        digester.addBeanPropertySetter(\"account/account-owner/email-address\",\n                \"authorMail\");\n        digester.addBeanPropertySetter(\"account/account-owner/url\",\n                \"authorLink\");\n\n        account = (GDataAccount) digester.parse(reader);\n        return account;\n    }\n\n","sourceOld":"    /**\n     * Reads the xml from the provided reader and binds the values to the \n     * @param reader - the reader to read the xml from\n     * @return - the GDataAccount \n     * @throws IOException - if an IOException occurs\n     * @throws SAXException - if the xml can not be parsed by the sax reader\n     */\n    public static GDataAccount buildAccount(final Reader reader) throws IOException,\n            SAXException {\n        if (reader == null)\n            throw new IllegalArgumentException(\"Reader must not be null\");\n        URL resource = AccountBuilder.class.getResource(\"/gdata-account.xsd\");\n        if(resource == null)\n            throw new RuntimeException(\"can not find xml schema file 'gdata-account.xsd' -- file must be present on the classpath\");\n        String schemaFile = resource.getFile();\n        GDataAccount account = null;\n        /*\n         * Force using apache xerces parser for digester\n         */\n        SAXParser parser = new SAXParser();\n        parser.setFeature(\"http://apache.org/xml/features/validation/schema-full-checking\",true);\n        parser.setFeature(\"http://apache.org/xml/features/validation/schema\",true);\n        parser.setFeature(\"http://xml.org/sax/features/validation\",true); \n        parser.setProperty(\"http://apache.org/xml/properties/schema/external-noNamespaceSchemaLocation\",schemaFile);\n        Digester digester = new Digester(parser);\n        digester.setValidating(true);\n        digester.setErrorHandler(new SimpleSaxErrorHandler());\n        digester.setSchema(schemaFile);\n        digester.addObjectCreate(\"account\", GDataAccount.class);\n        digester.addBeanPropertySetter(\"account/account-name\", \"name\");\n        digester.addBeanPropertySetter(\"account/password\", \"password\");\n        digester.addBeanPropertySetter(\"account/account-role\", \"rolesAsInt\");\n        digester.addBeanPropertySetter(\"account/account-owner/name\",\n                \"authorname\");\n        digester.addBeanPropertySetter(\"account/account-owner/email-address\",\n                \"authorMail\");\n        digester.addBeanPropertySetter(\"account/account-owner/url\",\n                \"authorLink\");\n\n        account = (GDataAccount) digester.parse(reader);\n        return account;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"89f8b19763ea545f1e428dfa5efb8235beaaa05e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09fe963da2613c724ffe82353b4ca2364a1f93c6":["303ca293666286b4ae2b0b4dbf10d3bf60ed727c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"303ca293666286b4ae2b0b4dbf10d3bf60ed727c":["89f8b19763ea545f1e428dfa5efb8235beaaa05e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"]},"commit2Childs":{"89f8b19763ea545f1e428dfa5efb8235beaaa05e":["303ca293666286b4ae2b0b4dbf10d3bf60ed727c"],"09fe963da2613c724ffe82353b4ca2364a1f93c6":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["89f8b19763ea545f1e428dfa5efb8235beaaa05e"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"303ca293666286b4ae2b0b4dbf10d3bf60ed727c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}