{"path":"lucene/sandbox/src/java/org/apache/lucene/document/DoubleRangeField#checkArgs(double[],double[]).mjava","commits":[{"id":"05f4c28bc6a6df30868753f35eb802cbff28ce5c","date":1469068146,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/DoubleRangeField#checkArgs(double[],double[]).mjava","pathOld":"/dev/null","sourceNew":"  /** validate the arguments */\n  private static void checkArgs(final double[] min, final double[] max) {\n    if (min == null || max == null || min.length == 0 || max.length == 0) {\n      throw new IllegalArgumentException(\"min/max range values cannot be null or empty\");\n    }\n    if (min.length != max.length) {\n      throw new IllegalArgumentException(\"min/max ranges must agree\");\n    }\n    if (min.length > 4) {\n      throw new IllegalArgumentException(\"DoubleRangeField does not support greater than 4 dimensions\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c738d774d160362ecfdc9887a5fa4beb421872b","date":1469112991,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/DoubleRangeField#checkArgs(double[],double[]).mjava","pathOld":"/dev/null","sourceNew":"  /** validate the arguments */\n  private static void checkArgs(final double[] min, final double[] max) {\n    if (min == null || max == null || min.length == 0 || max.length == 0) {\n      throw new IllegalArgumentException(\"min/max range values cannot be null or empty\");\n    }\n    if (min.length != max.length) {\n      throw new IllegalArgumentException(\"min/max ranges must agree\");\n    }\n    if (min.length > 4) {\n      throw new IllegalArgumentException(\"DoubleRangeField does not support greater than 4 dimensions\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/DoubleRangeField#checkArgs(double[],double[]).mjava","pathOld":"/dev/null","sourceNew":"  /** validate the arguments */\n  private static void checkArgs(final double[] min, final double[] max) {\n    if (min == null || max == null || min.length == 0 || max.length == 0) {\n      throw new IllegalArgumentException(\"min/max range values cannot be null or empty\");\n    }\n    if (min.length != max.length) {\n      throw new IllegalArgumentException(\"min/max ranges must agree\");\n    }\n    if (min.length > 4) {\n      throw new IllegalArgumentException(\"DoubleRangeField does not support greater than 4 dimensions\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a52b01a73cacbd2d360240e72d64c0ba353618f","date":1489389749,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/DoubleRange#checkArgs(double[],double[]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/DoubleRangeField#checkArgs(double[],double[]).mjava","sourceNew":"  /** validate the arguments */\n  private static void checkArgs(final double[] min, final double[] max) {\n    if (min == null || max == null || min.length == 0 || max.length == 0) {\n      throw new IllegalArgumentException(\"min/max range values cannot be null or empty\");\n    }\n    if (min.length != max.length) {\n      throw new IllegalArgumentException(\"min/max ranges must agree\");\n    }\n    if (min.length > 4) {\n      throw new IllegalArgumentException(\"DoubleRange does not support greater than 4 dimensions\");\n    }\n  }\n\n","sourceOld":"  /** validate the arguments */\n  private static void checkArgs(final double[] min, final double[] max) {\n    if (min == null || max == null || min.length == 0 || max.length == 0) {\n      throw new IllegalArgumentException(\"min/max range values cannot be null or empty\");\n    }\n    if (min.length != max.length) {\n      throw new IllegalArgumentException(\"min/max ranges must agree\");\n    }\n    if (min.length > 4) {\n      throw new IllegalArgumentException(\"DoubleRangeField does not support greater than 4 dimensions\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3c738d774d160362ecfdc9887a5fa4beb421872b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","05f4c28bc6a6df30868753f35eb802cbff28ce5c"],"4a52b01a73cacbd2d360240e72d64c0ba353618f":["3c738d774d160362ecfdc9887a5fa4beb421872b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05f4c28bc6a6df30868753f35eb802cbff28ce5c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3c738d774d160362ecfdc9887a5fa4beb421872b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a52b01a73cacbd2d360240e72d64c0ba353618f"]},"commit2Childs":{"3c738d774d160362ecfdc9887a5fa4beb421872b":["4a52b01a73cacbd2d360240e72d64c0ba353618f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4a52b01a73cacbd2d360240e72d64c0ba353618f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3c738d774d160362ecfdc9887a5fa4beb421872b","05f4c28bc6a6df30868753f35eb802cbff28ce5c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"05f4c28bc6a6df30868753f35eb802cbff28ce5c":["3c738d774d160362ecfdc9887a5fa4beb421872b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}