{"path":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesDistrib#getInternalDocIds(String).mjava","commits":[{"id":"415bbbe7da8065dd3c477bdc3c703c6425622998","date":1485393793,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesDistrib#getInternalDocIds(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the \"[docid]\" value(s) returned from a non-distrib RTG to each of the clients used \n   * in this test (in the same order as the clients list)\n   */\n  private List<Integer> getInternalDocIds(String id) throws SolrServerException, IOException {\n    List<Integer> ret = new ArrayList<>(clients.size());\n    for (SolrClient client : clients) {\n      SolrDocument doc = client.getById(id, params(\"distrib\", \"false\", \"fl\", \"[docid]\"));\n      Object docid = doc.get(\"[docid]\");\n      assertNotNull(docid);\n      assertEquals(Integer.class, docid.getClass());\n      ret.add((Integer) docid);\n    }\n    assert clients.size() == ret.size();\n    return ret;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"598b5d23aa7c9732bf473c21a9cd309c44599394","date":1485530378,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesDistrib#getInternalDocIds(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the \"[docid]\" value(s) returned from a non-distrib RTG to each of the clients used \n   * in this test (in the same order as the clients list)\n   */\n  private List<Integer> getInternalDocIds(String id) throws SolrServerException, IOException {\n    List<Integer> ret = new ArrayList<>(clients.size());\n    for (SolrClient client : clients) {\n      SolrDocument doc = client.getById(id, params(\"distrib\", \"false\", \"fl\", \"[docid]\"));\n      Object docid = doc.get(\"[docid]\");\n      assertNotNull(docid);\n      assertEquals(Integer.class, docid.getClass());\n      ret.add((Integer) docid);\n    }\n    assert clients.size() == ret.size();\n    return ret;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"598b5d23aa7c9732bf473c21a9cd309c44599394":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","415bbbe7da8065dd3c477bdc3c703c6425622998"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["415bbbe7da8065dd3c477bdc3c703c6425622998"]},"commit2Childs":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"598b5d23aa7c9732bf473c21a9cd309c44599394":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["415bbbe7da8065dd3c477bdc3c703c6425622998","598b5d23aa7c9732bf473c21a9cd309c44599394"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}