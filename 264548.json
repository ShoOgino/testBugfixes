{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testReplaceConfigurer().mjava","commits":[{"id":"45346a9890012ac3b6612b55642d1aa56be51d45","date":1345458772,"type":0,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testReplaceConfigurer().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testReplaceConfigurer(){\n    \n    try {\n    final AtomicInteger counter = new AtomicInteger();\n    HttpClientConfigurer custom = new HttpClientConfigurer(){\n      @Override\n      protected void configure(DefaultHttpClient httpClient, SolrParams config) {\n        super.configure(httpClient, config);\n        counter.set(config.getInt(\"custom-param\", -1));\n      }\n      \n    };\n    \n    HttpClientUtil.setConfigurer(custom);\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"custom-param\", 5);\n    HttpClientUtil.createClient(params).getConnectionManager().shutdown();\n    assertEquals(5, counter.get());\n    } finally {\n      //restore default configurer\n      HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"67588aedbc6edbcce873bd0c3c7b4199fbf0987c","date":1345506207,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testReplaceConfigurer().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testReplaceConfigurer(){\n    \n    try {\n    final AtomicInteger counter = new AtomicInteger();\n    HttpClientConfigurer custom = new HttpClientConfigurer(){\n      @Override\n      protected void configure(DefaultHttpClient httpClient, SolrParams config) {\n        super.configure(httpClient, config);\n        counter.set(config.getInt(\"custom-param\", -1));\n      }\n      \n    };\n    \n    HttpClientUtil.setConfigurer(custom);\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"custom-param\", 5);\n    HttpClientUtil.createClient(params).getConnectionManager().shutdown();\n    assertEquals(5, counter.get());\n    } finally {\n      //restore default configurer\n      HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testReplaceConfigurer().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testReplaceConfigurer(){\n    \n    try {\n    final AtomicInteger counter = new AtomicInteger();\n    HttpClientConfigurer custom = new HttpClientConfigurer(){\n      @Override\n      protected void configure(DefaultHttpClient httpClient, SolrParams config) {\n        super.configure(httpClient, config);\n        counter.set(config.getInt(\"custom-param\", -1));\n      }\n      \n    };\n    \n    HttpClientUtil.setConfigurer(custom);\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"custom-param\", 5);\n    HttpClientUtil.createClient(params).getConnectionManager().shutdown();\n    assertEquals(5, counter.get());\n    } finally {\n      //restore default configurer\n      HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testReplaceConfigurer().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testReplaceConfigurer().mjava","sourceNew":"  @Test\n  public void testReplaceConfigurer() throws IOException{\n    \n    try {\n    final AtomicInteger counter = new AtomicInteger();\n    HttpClientConfigurer custom = new HttpClientConfigurer(){\n      @Override\n      public void configure(DefaultHttpClient httpClient, SolrParams config) {\n        super.configure(httpClient, config);\n        counter.set(config.getInt(\"custom-param\", -1));\n      }\n      \n    };\n    \n    HttpClientUtil.setConfigurer(custom);\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"custom-param\", 5);\n    HttpClientUtil.createClient(params).close();\n    assertEquals(5, counter.get());\n    } finally {\n      //restore default configurer\n      HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testReplaceConfigurer(){\n    \n    try {\n    final AtomicInteger counter = new AtomicInteger();\n    HttpClientConfigurer custom = new HttpClientConfigurer(){\n      @Override\n      protected void configure(DefaultHttpClient httpClient, SolrParams config) {\n        super.configure(httpClient, config);\n        counter.set(config.getInt(\"custom-param\", -1));\n      }\n      \n    };\n    \n    HttpClientUtil.setConfigurer(custom);\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"custom-param\", 5);\n    HttpClientUtil.createClient(params).getConnectionManager().shutdown();\n    assertEquals(5, counter.get());\n    } finally {\n      //restore default configurer\n      HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n    }\n\n  }\n\n","bugFix":["45346a9890012ac3b6612b55642d1aa56be51d45"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":4,"author":"markrmiller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testReplaceConfigurer().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testReplaceConfigurer() throws IOException{\n    \n    try {\n    final AtomicInteger counter = new AtomicInteger();\n    HttpClientConfigurer custom = new HttpClientConfigurer(){\n      @Override\n      public void configure(DefaultHttpClient httpClient, SolrParams config) {\n        super.configure(httpClient, config);\n        counter.set(config.getInt(\"custom-param\", -1));\n      }\n      \n    };\n    \n    HttpClientUtil.setConfigurer(custom);\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"custom-param\", 5);\n    HttpClientUtil.createClient(params).close();\n    assertEquals(5, counter.get());\n    } finally {\n      //restore default configurer\n      HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","45346a9890012ac3b6612b55642d1aa56be51d45"],"859081acf00749f5dd462772c571d611d4a4d2db":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"45346a9890012ac3b6612b55642d1aa56be51d45":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"67588aedbc6edbcce873bd0c3c7b4199fbf0987c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","45346a9890012ac3b6612b55642d1aa56be51d45"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["45346a9890012ac3b6612b55642d1aa56be51d45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["859081acf00749f5dd462772c571d611d4a4d2db"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"859081acf00749f5dd462772c571d611d4a4d2db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["001b25b42373b22a52f399dbf072f1224632e8e6","45346a9890012ac3b6612b55642d1aa56be51d45","67588aedbc6edbcce873bd0c3c7b4199fbf0987c"],"45346a9890012ac3b6612b55642d1aa56be51d45":["001b25b42373b22a52f399dbf072f1224632e8e6","67588aedbc6edbcce873bd0c3c7b4199fbf0987c","6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"67588aedbc6edbcce873bd0c3c7b4199fbf0987c":[],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["859081acf00749f5dd462772c571d611d4a4d2db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","67588aedbc6edbcce873bd0c3c7b4199fbf0987c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}