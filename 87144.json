{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setIndexCreatedVersionMajor(int).mjava","commits":[{"id":"cb769584d3433c13d4262b03a87433e9a8c5a307","date":1542374674,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setIndexCreatedVersionMajor(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Expert: set the compatibility version to use for this index. In case the\n   * index is created, it will use the given major version for compatibility.\n   * It is sometimes useful to set the previous major version for compatibility\n   * due to the fact that {@link IndexWriter#addIndexes} only accepts indices\n   * that have been written with the same major version as the current index.\n   * If the index already exists, then this value is ignored.\n   * Default value is the {@link Version#major major} of the\n   * {@link Version#LATEST latest version}.\n   * <p><b>NOTE</b>: Changing the creation version reduces backward\n   * compatibility guarantees. For instance an index created with Lucene 8 with\n   * a compatibility version of 7 can't be read with Lucene 9 due to the fact\n   * that Lucene only supports reading indices created with the current or\n   * previous major release.\n   * @param indexCreatedVersionMajor the major version to use for compatibility\n   */\n  public IndexWriterConfig setIndexCreatedVersionMajor(int indexCreatedVersionMajor) {\n    if (indexCreatedVersionMajor > Version.LATEST.major) {\n      throw new IllegalArgumentException(\"indexCreatedVersionMajor may not be in the future: current major version is \" +\n          Version.LATEST.major + \", but got: \" + indexCreatedVersionMajor);\n    }\n    if (indexCreatedVersionMajor < Version.LATEST.major - 1) {\n      throw new IllegalArgumentException(\"indexCreatedVersionMajor may not be less than the minimum supported version: \" +\n          (Version.LATEST.major-1) + \", but got: \" + indexCreatedVersionMajor);\n    }\n    this.createdVersionMajor = indexCreatedVersionMajor;\n    return this;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb769584d3433c13d4262b03a87433e9a8c5a307":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cb769584d3433c13d4262b03a87433e9a8c5a307"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cb769584d3433c13d4262b03a87433e9a8c5a307"],"cb769584d3433c13d4262b03a87433e9a8c5a307":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}