{"path":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","commits":[{"id":"c16ba100a31d292b7b4c893a3cdf1994e75a3201","date":1249608645,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testHits().mjava","sourceNew":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer();\n    QueryParser qp = new QueryParser(FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, false);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","sourceOld":"  public void testHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer();\n    QueryParser qp = new QueryParser(FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, false);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","sourceNew":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer();\n    QueryParser qp = new QueryParser(FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","sourceOld":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer();\n    QueryParser qp = new QueryParser(FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, false);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","sourceNew":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer();\n    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","sourceOld":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer();\n    QueryParser qp = new QueryParser(FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"464a71190fd7694704427cd763d7c957c10e935b","date":1256329736,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","sourceNew":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer();\n    QueryParser qp = new QueryParser(TEST_VERSION, FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","sourceOld":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer();\n    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ced3401b9c4e7ed2be67711dbc83e48b81aa736","date":1265394056,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","sourceNew":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer(Version.LUCENE_CURRENT);\n    QueryParser qp = new QueryParser(TEST_VERSION, FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","sourceOld":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer();\n    QueryParser qp = new QueryParser(TEST_VERSION, FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","sourceNew":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer(TEST_VERSION_CURRENT);\n    QueryParser qp = new QueryParser(TEST_VERSION, FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","sourceOld":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer(Version.LUCENE_CURRENT);\n    QueryParser qp = new QueryParser(TEST_VERSION, FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","sourceNew":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer(TEST_VERSION_CURRENT);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","sourceOld":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer(TEST_VERSION_CURRENT);\n    QueryParser qp = new QueryParser(TEST_VERSION, FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","sourceNew":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer(TEST_VERSION_CURRENT);\n    QueryParser qp = new QueryParser(TEST_VERSION, FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","sourceOld":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer(TEST_VERSION_CURRENT);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","sourceNew":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer(TEST_VERSION_CURRENT);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","sourceOld":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer(TEST_VERSION_CURRENT);\n    QueryParser qp = new QueryParser(TEST_VERSION, FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42607aa380c892dc1ec0ab26e86a575c28e13618","date":1268641604,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","sourceNew":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer(TEST_VERSION_CURRENT);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      if (VERBOSE) System.out.println(fragment);\n    }\n  }\n\n","sourceOld":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer(TEST_VERSION_CURRENT);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","sourceNew":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer(TEST_VERSION_CURRENT);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      if (VERBOSE) System.out.println(fragment);\n    }\n  }\n\n","sourceOld":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer(TEST_VERSION_CURRENT);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, true);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      if (VERBOSE) System.out.println(fragment);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c16ba100a31d292b7b4c893a3cdf1994e75a3201":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"464a71190fd7694704427cd763d7c957c10e935b":["ba1116b3450a9c1642c89445d131b37344055245"],"6ced3401b9c4e7ed2be67711dbc83e48b81aa736":["464a71190fd7694704427cd763d7c957c10e935b"],"4256bc1b3c94786287ccdfc751230374521843cf":["c16ba100a31d292b7b4c893a3cdf1994e75a3201"],"ba1116b3450a9c1642c89445d131b37344055245":["4256bc1b3c94786287ccdfc751230374521843cf"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"42607aa380c892dc1ec0ab26e86a575c28e13618":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["6ced3401b9c4e7ed2be67711dbc83e48b81aa736"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["42607aa380c892dc1ec0ab26e86a575c28e13618"]},"commit2Childs":{"c16ba100a31d292b7b4c893a3cdf1994e75a3201":["4256bc1b3c94786287ccdfc751230374521843cf"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"464a71190fd7694704427cd763d7c957c10e935b":["6ced3401b9c4e7ed2be67711dbc83e48b81aa736"],"6ced3401b9c4e7ed2be67711dbc83e48b81aa736":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"4256bc1b3c94786287ccdfc751230374521843cf":["ba1116b3450a9c1642c89445d131b37344055245"],"ba1116b3450a9c1642c89445d131b37344055245":["464a71190fd7694704427cd763d7c957c10e935b"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["42607aa380c892dc1ec0ab26e86a575c28e13618"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c16ba100a31d292b7b4c893a3cdf1994e75a3201"],"42607aa380c892dc1ec0ab26e86a575c28e13618":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}