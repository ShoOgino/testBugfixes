{"path":"solr/core/src/java/org/apache/solr/security/DelegationTokenKerberosFilter#getProxyuserConfiguration(FilterConfig).mjava","commits":[{"id":"cc3d73ce4049cb1520abaaae57fe8267639bda1d","date":1470181330,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/DelegationTokenKerberosFilter#getProxyuserConfiguration(FilterConfig).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return the ProxyUser Configuration.  FilterConfig properties beginning with\n   * \"solr.impersonator.user.name\" will be added to the configuration.\n   */\n  @Override\n  protected Configuration getProxyuserConfiguration(FilterConfig filterConf)\n      throws ServletException {\n    Configuration conf = new Configuration(false);\n\n    Enumeration<?> names = filterConf.getInitParameterNames();\n    while (names.hasMoreElements()) {\n      String name = (String) names.nextElement();\n      if (name.startsWith(KerberosPlugin.IMPERSONATOR_PREFIX)) {\n        String value = filterConf.getInitParameter(name);\n        conf.set(PROXYUSER_PREFIX + \".\" + name.substring(KerberosPlugin.IMPERSONATOR_PREFIX.length()), value);\n        conf.set(name, value);\n      }\n    }\n    return conf;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/DelegationTokenKerberosFilter#getProxyuserConfiguration(FilterConfig).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return the ProxyUser Configuration.  FilterConfig properties beginning with\n   * \"solr.impersonator.user.name\" will be added to the configuration.\n   */\n  @Override\n  protected Configuration getProxyuserConfiguration(FilterConfig filterConf)\n      throws ServletException {\n    Configuration conf = new Configuration(false);\n\n    Enumeration<?> names = filterConf.getInitParameterNames();\n    while (names.hasMoreElements()) {\n      String name = (String) names.nextElement();\n      if (name.startsWith(KerberosPlugin.IMPERSONATOR_PREFIX)) {\n        String value = filterConf.getInitParameter(name);\n        conf.set(PROXYUSER_PREFIX + \".\" + name.substring(KerberosPlugin.IMPERSONATOR_PREFIX.length()), value);\n        conf.set(name, value);\n      }\n    }\n    return conf;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/DelegationTokenKerberosFilter#getProxyuserConfiguration(FilterConfig).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return the ProxyUser Configuration.  FilterConfig properties beginning with\n   * \"solr.impersonator.user.name\" will be added to the configuration.\n   */\n  @Override\n  protected Configuration getProxyuserConfiguration(FilterConfig filterConf)\n      throws ServletException {\n    Configuration conf = new Configuration(false);\n\n    Enumeration<?> names = filterConf.getInitParameterNames();\n    while (names.hasMoreElements()) {\n      String name = (String) names.nextElement();\n      if (name.startsWith(KerberosPlugin.IMPERSONATOR_PREFIX)) {\n        String value = filterConf.getInitParameter(name);\n        conf.set(PROXYUSER_PREFIX + \".\" + name.substring(KerberosPlugin.IMPERSONATOR_PREFIX.length()), value);\n        conf.set(name, value);\n      }\n    }\n    return conf;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e0ac06a3dde3a146042d8eb8820dc45326e9263","date":1594139870,"type":3,"author":"Mike Drob","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/DelegationTokenKerberosFilter#getProxyuserConfiguration(FilterConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/DelegationTokenKerberosFilter#getProxyuserConfiguration(FilterConfig).mjava","sourceNew":"  /**\n   * Return the ProxyUser Configuration.  FilterConfig properties beginning with\n   * \"solr.impersonator.user.name\" will be added to the configuration.\n   */\n  @Override\n  protected Configuration getProxyuserConfiguration(FilterConfig filterConf) {\n    Configuration conf = new Configuration(false);\n\n    Enumeration<String> names = filterConf.getInitParameterNames();\n    while (names.hasMoreElements()) {\n      String name = names.nextElement();\n      if (name.startsWith(KerberosPlugin.IMPERSONATOR_PREFIX)) {\n        String value = filterConf.getInitParameter(name);\n        conf.set(PROXYUSER_PREFIX + \".\" + name.substring(KerberosPlugin.IMPERSONATOR_PREFIX.length()), value);\n        conf.set(name, value);\n      }\n    }\n    return conf;\n  }\n\n","sourceOld":"  /**\n   * Return the ProxyUser Configuration.  FilterConfig properties beginning with\n   * \"solr.impersonator.user.name\" will be added to the configuration.\n   */\n  @Override\n  protected Configuration getProxyuserConfiguration(FilterConfig filterConf)\n      throws ServletException {\n    Configuration conf = new Configuration(false);\n\n    Enumeration<?> names = filterConf.getInitParameterNames();\n    while (names.hasMoreElements()) {\n      String name = (String) names.nextElement();\n      if (name.startsWith(KerberosPlugin.IMPERSONATOR_PREFIX)) {\n        String value = filterConf.getInitParameter(name);\n        conf.set(PROXYUSER_PREFIX + \".\" + name.substring(KerberosPlugin.IMPERSONATOR_PREFIX.length()), value);\n        conf.set(name, value);\n      }\n    }\n    return conf;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cc3d73ce4049cb1520abaaae57fe8267639bda1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5e0ac06a3dde3a146042d8eb8820dc45326e9263":["cc3d73ce4049cb1520abaaae57fe8267639bda1d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cc3d73ce4049cb1520abaaae57fe8267639bda1d"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cc3d73ce4049cb1520abaaae57fe8267639bda1d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5e0ac06a3dde3a146042d8eb8820dc45326e9263"]},"commit2Childs":{"cc3d73ce4049cb1520abaaae57fe8267639bda1d":["5e0ac06a3dde3a146042d8eb8820dc45326e9263","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cc3d73ce4049cb1520abaaae57fe8267639bda1d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"5e0ac06a3dde3a146042d8eb8820dc45326e9263":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}