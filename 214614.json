{"path":"solr/core/src/test/org/apache/solr/core/TestNonNRTOpen#getCoreCacheKeys().mjava","commits":[{"id":"c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360","date":1378833548,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNonNRTOpen#getCoreCacheKeys().mjava","pathOld":"/dev/null","sourceNew":"  private Set<Object> getCoreCacheKeys() {\n    RefCounted<SolrIndexSearcher> searcher = h.getCore().getSearcher();\n    Set<Object> set = Collections.newSetFromMap(new IdentityHashMap<Object,Boolean>());\n    try {\n      DirectoryReader ir = searcher.get().getIndexReader();\n      for (AtomicReaderContext context : ir.leaves()) {\n        set.add(context.reader().getCoreCacheKey());\n      }\n    } finally {\n      searcher.decref();\n    }\n    return set;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9dd0afe9f3c66f25a34aaf6689dfabf9808c71f","date":1399997256,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNonNRTOpen#getCoreCacheKeys().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestNonNRTOpen#getCoreCacheKeys().mjava","sourceNew":"  private Set<Object> getCoreCacheKeys() {\n    RefCounted<SolrIndexSearcher> searcher = h.getCore().getSearcher();\n    Set<Object> set = Collections.newSetFromMap(new IdentityHashMap<Object,Boolean>());\n    try {\n      DirectoryReader ir = searcher.get().getRawReader();\n      for (AtomicReaderContext context : ir.leaves()) {\n        set.add(context.reader().getCoreCacheKey());\n      }\n    } finally {\n      searcher.decref();\n    }\n    return set;\n  }\n\n","sourceOld":"  private Set<Object> getCoreCacheKeys() {\n    RefCounted<SolrIndexSearcher> searcher = h.getCore().getSearcher();\n    Set<Object> set = Collections.newSetFromMap(new IdentityHashMap<Object,Boolean>());\n    try {\n      DirectoryReader ir = searcher.get().getIndexReader();\n      for (AtomicReaderContext context : ir.leaves()) {\n        set.add(context.reader().getCoreCacheKey());\n      }\n    } finally {\n      searcher.decref();\n    }\n    return set;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNonNRTOpen#getCoreCacheKeys().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestNonNRTOpen#getCoreCacheKeys().mjava","sourceNew":"  private Set<Object> getCoreCacheKeys() {\n    RefCounted<SolrIndexSearcher> searcher = h.getCore().getSearcher();\n    Set<Object> set = Collections.newSetFromMap(new IdentityHashMap<Object,Boolean>());\n    try {\n      DirectoryReader ir = searcher.get().getRawReader();\n      for (AtomicReaderContext context : ir.leaves()) {\n        set.add(context.reader().getCoreCacheKey());\n      }\n    } finally {\n      searcher.decref();\n    }\n    return set;\n  }\n\n","sourceOld":"  private Set<Object> getCoreCacheKeys() {\n    RefCounted<SolrIndexSearcher> searcher = h.getCore().getSearcher();\n    Set<Object> set = Collections.newSetFromMap(new IdentityHashMap<Object,Boolean>());\n    try {\n      DirectoryReader ir = searcher.get().getIndexReader();\n      for (AtomicReaderContext context : ir.leaves()) {\n        set.add(context.reader().getCoreCacheKey());\n      }\n    } finally {\n      searcher.decref();\n    }\n    return set;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNonNRTOpen#getCoreCacheKeys().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestNonNRTOpen#getCoreCacheKeys().mjava","sourceNew":"  private Set<Object> getCoreCacheKeys() {\n    RefCounted<SolrIndexSearcher> searcher = h.getCore().getSearcher();\n    Set<Object> set = Collections.newSetFromMap(new IdentityHashMap<Object,Boolean>());\n    try {\n      DirectoryReader ir = searcher.get().getRawReader();\n      for (AtomicReaderContext context : ir.leaves()) {\n        set.add(context.reader().getCoreCacheKey());\n      }\n    } finally {\n      searcher.decref();\n    }\n    return set;\n  }\n\n","sourceOld":"  private Set<Object> getCoreCacheKeys() {\n    RefCounted<SolrIndexSearcher> searcher = h.getCore().getSearcher();\n    Set<Object> set = Collections.newSetFromMap(new IdentityHashMap<Object,Boolean>());\n    try {\n      DirectoryReader ir = searcher.get().getIndexReader();\n      for (AtomicReaderContext context : ir.leaves()) {\n        set.add(context.reader().getCoreCacheKey());\n      }\n    } finally {\n      searcher.decref();\n    }\n    return set;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNonNRTOpen#getCoreCacheKeys().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestNonNRTOpen#getCoreCacheKeys().mjava","sourceNew":"  private Set<Object> getCoreCacheKeys() {\n    RefCounted<SolrIndexSearcher> searcher = h.getCore().getSearcher();\n    Set<Object> set = Collections.newSetFromMap(new IdentityHashMap<Object,Boolean>());\n    try {\n      DirectoryReader ir = searcher.get().getRawReader();\n      for (LeafReaderContext context : ir.leaves()) {\n        set.add(context.reader().getCoreCacheKey());\n      }\n    } finally {\n      searcher.decref();\n    }\n    return set;\n  }\n\n","sourceOld":"  private Set<Object> getCoreCacheKeys() {\n    RefCounted<SolrIndexSearcher> searcher = h.getCore().getSearcher();\n    Set<Object> set = Collections.newSetFromMap(new IdentityHashMap<Object,Boolean>());\n    try {\n      DirectoryReader ir = searcher.get().getRawReader();\n      for (AtomicReaderContext context : ir.leaves()) {\n        set.add(context.reader().getCoreCacheKey());\n      }\n    } finally {\n      searcher.decref();\n    }\n    return set;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac2f1cdbdc54a889e88543cc1d939a931cb96883","date":1420554488,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestNonNRTOpen#getCoreCacheKeys().mjava","sourceNew":null,"sourceOld":"  private Set<Object> getCoreCacheKeys() {\n    RefCounted<SolrIndexSearcher> searcher = h.getCore().getSearcher();\n    Set<Object> set = Collections.newSetFromMap(new IdentityHashMap<Object,Boolean>());\n    try {\n      DirectoryReader ir = searcher.get().getRawReader();\n      for (LeafReaderContext context : ir.leaves()) {\n        set.add(context.reader().getCoreCacheKey());\n      }\n    } finally {\n      searcher.decref();\n    }\n    return set;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9dd0afe9f3c66f25a34aaf6689dfabf9808c71f":["c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360","e9dd0afe9f3c66f25a34aaf6689dfabf9808c71f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"56572ec06f1407c066d6b7399413178b33176cd8":["c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360","93dd449115a9247533e44bab47e8429e5dccbc6d"],"ac2f1cdbdc54a889e88543cc1d939a931cb96883":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ac2f1cdbdc54a889e88543cc1d939a931cb96883"]},"commit2Childs":{"e9dd0afe9f3c66f25a34aaf6689dfabf9808c71f":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360"],"c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360":["e9dd0afe9f3c66f25a34aaf6689dfabf9808c71f","93dd449115a9247533e44bab47e8429e5dccbc6d","56572ec06f1407c066d6b7399413178b33176cd8"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"ac2f1cdbdc54a889e88543cc1d939a931cb96883":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["ac2f1cdbdc54a889e88543cc1d939a931cb96883"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}