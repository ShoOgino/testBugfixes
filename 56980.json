{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#setCommitData(Map[String,String],boolean).mjava","commits":[{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#setCommitData(Map[String,String],boolean).mjava","pathOld":"/dev/null","sourceNew":"  public final synchronized void setCommitData(Map<String,String> commitUserData, boolean doIncrementVersion) {\n    segmentInfos.setUserData(new HashMap<>(commitUserData), doIncrementVersion);\n    changeCount.incrementAndGet();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70303239aff48a883d655b94899202818b0aecd6","date":1455032616,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#setCommitData(Map[String,String],boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#setCommitData(Map[String,String],boolean).mjava","sourceNew":"  /**\n   * Sets the commit user data map, controlling whether to advance the {@link SegmentInfos#getVersion}.\n   *\n   * @see #setCommitData(Map)\n   *\n   * @lucene.internal */\n  public final synchronized void setCommitData(Map<String,String> commitUserData, boolean doIncrementVersion) {\n    segmentInfos.setUserData(new HashMap<>(commitUserData), doIncrementVersion);\n    changeCount.incrementAndGet();\n  }\n\n","sourceOld":"  public final synchronized void setCommitData(Map<String,String> commitUserData, boolean doIncrementVersion) {\n    segmentInfos.setUserData(new HashMap<>(commitUserData), doIncrementVersion);\n    changeCount.incrementAndGet();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#setCommitData(Map[String,String],boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sets the commit user data map, controlling whether to advance the {@link SegmentInfos#getVersion}.\n   *\n   * @see #setCommitData(Map)\n   *\n   * @lucene.internal */\n  public final synchronized void setCommitData(Map<String,String> commitUserData, boolean doIncrementVersion) {\n    segmentInfos.setUserData(new HashMap<>(commitUserData), doIncrementVersion);\n    changeCount.incrementAndGet();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71e1a70f18d64b93db3ef618e606d6df5062f747","date":1466156390,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#setCommitData(Map[String,String],boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Sets the commit user data map, controlling whether to advance the {@link SegmentInfos#getVersion}.\n   *\n   * @see #setCommitData(Map)\n   *\n   * @lucene.internal */\n  public final synchronized void setCommitData(Map<String,String> commitUserData, boolean doIncrementVersion) {\n    segmentInfos.setUserData(new HashMap<>(commitUserData), doIncrementVersion);\n    changeCount.incrementAndGet();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#setCommitData(Map[String,String],boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Sets the commit user data map, controlling whether to advance the {@link SegmentInfos#getVersion}.\n   *\n   * @see #setCommitData(Map)\n   *\n   * @lucene.internal */\n  public final synchronized void setCommitData(Map<String,String> commitUserData, boolean doIncrementVersion) {\n    segmentInfos.setUserData(new HashMap<>(commitUserData), doIncrementVersion);\n    changeCount.incrementAndGet();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"71e1a70f18d64b93db3ef618e606d6df5062f747":["68496c2200e559fb7802f7575427b7a482659afb"],"70303239aff48a883d655b94899202818b0aecd6":["0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68496c2200e559fb7802f7575427b7a482659afb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70303239aff48a883d655b94899202818b0aecd6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["68496c2200e559fb7802f7575427b7a482659afb","71e1a70f18d64b93db3ef618e606d6df5062f747"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71e1a70f18d64b93db3ef618e606d6df5062f747"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"71e1a70f18d64b93db3ef618e606d6df5062f747":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"70303239aff48a883d655b94899202818b0aecd6":["68496c2200e559fb7802f7575427b7a482659afb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68496c2200e559fb7802f7575427b7a482659afb","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"68496c2200e559fb7802f7575427b7a482659afb":["71e1a70f18d64b93db3ef618e606d6df5062f747","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["70303239aff48a883d655b94899202818b0aecd6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}