{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterUnicode#testEmbeddedFFFF().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterUnicode#testEmbeddedFFFF().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterUnicode#testEmbeddedFFFF().mjava","sourceNew":"  public void testEmbeddedFFFF() throws Throwable {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a a\\uffffb\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newField(\"field\", \"a\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    assertEquals(1, r.docFreq(new Term(\"field\", \"a\\uffffb\")));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testEmbeddedFFFF() throws Throwable {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a a\\uffffb\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newField(\"field\", \"a\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    assertEquals(1, r.docFreq(new Term(\"field\", \"a\\uffffb\")));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterUnicode#testEmbeddedFFFF().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterUnicode#testEmbeddedFFFF().mjava","sourceNew":"  public void testEmbeddedFFFF() throws Throwable {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a a\\uffffb\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newField(\"field\", \"a\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    assertEquals(1, r.docFreq(new Term(\"field\", \"a\\uffffb\")));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testEmbeddedFFFF() throws Throwable {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a a\\uffffb\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newField(\"field\", \"a\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    assertEquals(1, r.docFreq(new Term(\"field\", \"a\\uffffb\")));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterUnicode#testEmbeddedFFFF().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterUnicode#testEmbeddedFFFF().mjava","sourceNew":"  public void testEmbeddedFFFF() throws Throwable {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"a a\\uffffb\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"a\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    assertEquals(1, r.docFreq(new Term(\"field\", \"a\\uffffb\")));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testEmbeddedFFFF() throws Throwable {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a a\\uffffb\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newField(\"field\", \"a\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    assertEquals(1, r.docFreq(new Term(\"field\", \"a\\uffffb\")));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterUnicode#testEmbeddedFFFF().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterUnicode#testEmbeddedFFFF().mjava","sourceNew":"  public void testEmbeddedFFFF() throws Throwable {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"a a\\uffffb\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"a\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    assertEquals(1, r.docFreq(new Term(\"field\", \"a\\uffffb\")));\n    r.close();\n    w.shutdown();\n    d.close();\n  }\n\n","sourceOld":"  public void testEmbeddedFFFF() throws Throwable {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"a a\\uffffb\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"a\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    assertEquals(1, r.docFreq(new Term(\"field\", \"a\\uffffb\")));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterUnicode#testEmbeddedFFFF().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterUnicode#testEmbeddedFFFF().mjava","sourceNew":"  public void testEmbeddedFFFF() throws Throwable {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"a a\\uffffb\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"a\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    assertEquals(1, r.docFreq(new Term(\"field\", \"a\\uffffb\")));\n    r.close();\n    w.shutdown();\n    d.close();\n  }\n\n","sourceOld":"  public void testEmbeddedFFFF() throws Throwable {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"a a\\uffffb\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"a\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    assertEquals(1, r.docFreq(new Term(\"field\", \"a\\uffffb\")));\n    r.close();\n    w.shutdown();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterUnicode#testEmbeddedFFFF().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterUnicode#testEmbeddedFFFF().mjava","sourceNew":"  public void testEmbeddedFFFF() throws Throwable {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"a a\\uffffb\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"a\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    assertEquals(1, r.docFreq(new Term(\"field\", \"a\\uffffb\")));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testEmbeddedFFFF() throws Throwable {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"a a\\uffffb\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"a\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    assertEquals(1, r.docFreq(new Term(\"field\", \"a\\uffffb\")));\n    r.close();\n    w.shutdown();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}