{"path":"solr/core/src/java/org/apache/solr/cloud/api/collections/UtilizeNodeCmd#executeAll(List[ZkNodeProps]).mjava","commits":[{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/UtilizeNodeCmd#executeAll(List[ZkNodeProps]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/UtilizeNodeCmd#executeAll(List[ZkNodeProps]).mjava","sourceNew":"  private void executeAll(List<ZkNodeProps> requests) throws Exception {\n    if (requests.isEmpty()) return;\n    for (ZkNodeProps props : requests) {\n      NamedList result = new NamedList();\n      ocmh.commandMap.get(MOVEREPLICA)\n          .call(ocmh.overseer.getSolrCloudManager().getClusterStateProvider().getClusterState(),\n              props,\n              result);\n    }\n    requests.clear();\n  }\n\n","sourceOld":"  private void executeAll(List<ZkNodeProps> requests) throws Exception {\n    if (requests.isEmpty()) return;\n    for (ZkNodeProps props : requests) {\n      NamedList result = new NamedList();\n      ocmh.commandMap.get(MOVEREPLICA)\n          .call(ocmh.overseer.getSolrCloudManager().getClusterStateProvider().getClusterState(),\n              props,\n              result);\n    }\n    requests.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/UtilizeNodeCmd#executeAll(List[ZkNodeProps]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/UtilizeNodeCmd#executeAll(List[ZkNodeProps]).mjava","sourceNew":"  private void executeAll(List<ZkNodeProps> requests) throws Exception {\n    if (requests.isEmpty()) return;\n    for (ZkNodeProps props : requests) {\n      NamedList result = new NamedList();\n      ocmh.commandMap.get(MOVEREPLICA)\n          .call(ocmh.overseer.getSolrCloudManager().getClusterStateProvider().getClusterState(),\n              props,\n              result);\n    }\n    requests.clear();\n  }\n\n","sourceOld":"  private void executeAll(List<ZkNodeProps> requests) throws Exception {\n    if (requests.isEmpty()) return;\n    for (ZkNodeProps props : requests) {\n      NamedList result = new NamedList();\n      ocmh.commandMap.get(MOVEREPLICA)\n          .call(ocmh.overseer.getSolrCloudManager().getClusterStateProvider().getClusterState(),\n              props,\n              result);\n    }\n    requests.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86968c6cf51846df861b8f29bd85b6d9a7c9f19c","date":1591481497,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/UtilizeNodeCmd#executeAll(List[ZkNodeProps]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/UtilizeNodeCmd#executeAll(List[ZkNodeProps]).mjava","sourceNew":"  private void executeAll(List<ZkNodeProps> requests) throws Exception {\n    if (requests.isEmpty()) return;\n    for (ZkNodeProps props : requests) {\n      @SuppressWarnings({\"rawtypes\"})\n      NamedList result = new NamedList();\n      ocmh.commandMap.get(MOVEREPLICA)\n          .call(ocmh.overseer.getSolrCloudManager().getClusterStateProvider().getClusterState(),\n              props,\n              result);\n    }\n    requests.clear();\n  }\n\n","sourceOld":"  private void executeAll(List<ZkNodeProps> requests) throws Exception {\n    if (requests.isEmpty()) return;\n    for (ZkNodeProps props : requests) {\n      NamedList result = new NamedList();\n      ocmh.commandMap.get(MOVEREPLICA)\n          .call(ocmh.overseer.getSolrCloudManager().getClusterStateProvider().getClusterState(),\n              props,\n              result);\n    }\n    requests.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/UtilizeNodeCmd#executeAll(List[ZkNodeProps]).mjava","sourceNew":null,"sourceOld":"  private void executeAll(List<ZkNodeProps> requests) throws Exception {\n    if (requests.isEmpty()) return;\n    for (ZkNodeProps props : requests) {\n      @SuppressWarnings({\"rawtypes\"})\n      NamedList result = new NamedList();\n      ocmh.commandMap.get(MOVEREPLICA)\n          .call(ocmh.overseer.getSolrCloudManager().getClusterStateProvider().getClusterState(),\n              props,\n              result);\n    }\n    requests.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"3f504512a03d978990cbff30db0522b354e846db":["86968c6cf51846df861b8f29bd85b6d9a7c9f19c"],"86968c6cf51846df861b8f29bd85b6d9a7c9f19c":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["86968c6cf51846df861b8f29bd85b6d9a7c9f19c"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"86968c6cf51846df861b8f29bd85b6d9a7c9f19c":["3f504512a03d978990cbff30db0522b354e846db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}