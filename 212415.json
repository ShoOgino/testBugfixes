{"path":"lucene/core/src/java/org/apache/lucene/util/packed/DirectMonotonicReader#getBounds(long).mjava","commits":[{"id":"70a4487b07c49a1861c05720e04624826ecbe9fa","date":1580924108,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/DirectMonotonicReader#getBounds(long).mjava","pathOld":"/dev/null","sourceNew":"  /** Get lower/upper bounds for the value at a given index without hitting the direct reader. */\n  private long[] getBounds(long index) {\n    final int block = Math.toIntExact(index >>> blockShift);\n    final long blockIndex = index & ((1 << blockShift) - 1);\n    final long lowerBound = mins[block] + (long) (avgs[block] * blockIndex);\n    final long upperBound = lowerBound + (1L << bpvs[block]) - 1;\n    if (bpvs[block] == 64 || upperBound < lowerBound) { // overflow\n      return new long[] { Long.MIN_VALUE, Long.MAX_VALUE };\n    } else {\n      return new long[] { lowerBound, upperBound };\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70a4487b07c49a1861c05720e04624826ecbe9fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["70a4487b07c49a1861c05720e04624826ecbe9fa"]},"commit2Childs":{"70a4487b07c49a1861c05720e04624826ecbe9fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70a4487b07c49a1861c05720e04624826ecbe9fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}