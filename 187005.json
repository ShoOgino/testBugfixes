{"path":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testAddNumericTwice().mjava","commits":[{"id":"2ec08217282b5e9df023dcdff55c745ff68b1c7d","date":1359392781,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testAddNumericTwice().mjava","pathOld":"/dev/null","sourceNew":"  public void testAddNumericTwice() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 1));\n    doc.add(new NumericDocValuesField(\"dv\", 2));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    \n    iwriter.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testAddNumericTwice().mjava","pathOld":"/dev/null","sourceNew":"  public void testAddNumericTwice() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 1));\n    doc.add(new NumericDocValuesField(\"dv\", 2));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    \n    iwriter.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testAddNumericTwice().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testAddNumericTwice().mjava","sourceNew":"  public void testAddNumericTwice() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 1));\n    doc.add(new NumericDocValuesField(\"dv\", 2));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    \n    iwriter.shutdown();\n    directory.close();\n  }\n\n","sourceOld":"  public void testAddNumericTwice() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 1));\n    doc.add(new NumericDocValuesField(\"dv\", 2));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    \n    iwriter.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15b65fdb55ac25c30b38ad720f9cf68c69647a31","date":1398941528,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testAddNumericTwice().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testAddNumericTwice().mjava","sourceNew":"  public void testAddNumericTwice() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 1));\n    iwriter.addDocument(doc);\n    \n    doc.add(new NumericDocValuesField(\"dv\", 2));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    IndexReader ir = iwriter.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    iwriter.shutdown();\n    directory.close();\n  }\n\n","sourceOld":"  public void testAddNumericTwice() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 1));\n    doc.add(new NumericDocValuesField(\"dv\", 2));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    \n    iwriter.shutdown();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testAddNumericTwice().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testAddNumericTwice().mjava","sourceNew":"  public void testAddNumericTwice() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 1));\n    iwriter.addDocument(doc);\n    \n    doc.add(new NumericDocValuesField(\"dv\", 2));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    IndexReader ir = iwriter.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    iwriter.shutdown();\n    directory.close();\n  }\n\n","sourceOld":"  public void testAddNumericTwice() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 1));\n    iwriter.addDocument(doc);\n    \n    doc.add(new NumericDocValuesField(\"dv\", 2));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    IndexReader ir = iwriter.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    iwriter.shutdown();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testAddNumericTwice().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testAddNumericTwice().mjava","sourceNew":"  public void testAddNumericTwice() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 1));\n    iwriter.addDocument(doc);\n    \n    doc.add(new NumericDocValuesField(\"dv\", 2));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    IndexReader ir = iwriter.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    iwriter.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testAddNumericTwice() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 1));\n    iwriter.addDocument(doc);\n    \n    doc.add(new NumericDocValuesField(\"dv\", 2));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    IndexReader ir = iwriter.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    iwriter.shutdown();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testAddNumericTwice().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testAddNumericTwice().mjava","sourceNew":"  public void testAddNumericTwice() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 1));\n    iwriter.addDocument(doc);\n    \n    doc.add(new NumericDocValuesField(\"dv\", 2));\n    expectThrows(IllegalArgumentException.class, () -> {\n      iwriter.addDocument(doc);\n    });\n\n    IndexReader ir = iwriter.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    iwriter.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testAddNumericTwice() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 1));\n    iwriter.addDocument(doc);\n    \n    doc.add(new NumericDocValuesField(\"dv\", 2));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    IndexReader ir = iwriter.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    iwriter.close();\n    directory.close();\n  }\n\n","bugFix":["2ec08217282b5e9df023dcdff55c745ff68b1c7d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"15b65fdb55ac25c30b38ad720f9cf68c69647a31":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["15b65fdb55ac25c30b38ad720f9cf68c69647a31"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2ec08217282b5e9df023dcdff55c745ff68b1c7d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"],"2ec08217282b5e9df023dcdff55c745ff68b1c7d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"15b65fdb55ac25c30b38ad720f9cf68c69647a31":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","2ec08217282b5e9df023dcdff55c745ff68b1c7d"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["05fe562aa248790944d43cdd478f512572835ba0"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["15b65fdb55ac25c30b38ad720f9cf68c69647a31"],"2ec08217282b5e9df023dcdff55c745ff68b1c7d":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}