{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamDecoratorTest#testHashJoinStreamWithKnownConflict().mjava","commits":[{"id":"bdae1e0c97cc515dc80915258f7cec88edfbdfa6","date":1526678079,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamDecoratorTest#testHashJoinStreamWithKnownConflict().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testHashJoinStreamWithKnownConflict() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"1\", \"type_s\",\"left\", \"bbid_s\", \"MG!!00TNH1\", \"ykey_s\", \"Mtge\")\n        .add(id, \"2\", \"type_s\",\"right\", \"bbid_s\", \"MG!!00TNGP\", \"ykey_s\", \"Mtge\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n    \n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n    StreamContext streamContext = new StreamContext();\n    SolrClientCache solrClientCache = new SolrClientCache();\n    streamContext.setSolrClientCache(solrClientCache);\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(COLLECTIONORALIAS, cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"search\", CloudSolrStream.class)\n      .withFunctionName(\"hashJoin\", HashJoinStream.class);\n    try {\n      // Basic test\n      expression = StreamExpressionParser.parse(\"hashJoin(\"\n          + \"  search(collection1, q=*:*, fl=\\\"bbid_s,ykey_s\\\", fq=\\\"type_s:left\\\", sort=\\\"bbid_s asc, ykey_s asc\\\"),\"\n          + \"  hashed=search(collection1, q=*:*, fl=\\\"bbid_s,ykey_s\\\", fq=\\\"type_s:right\\\", sort=\\\"bbid_s asc, ykey_s asc\\\"),\"\n          + \"  on=\\\"bbid_s,ykey_s\\\"\"\n          + \")\");\n      stream = new HashJoinStream(expression, factory);\n      stream.setStreamContext(streamContext);\n      tuples = getTuples(stream);\n      \n      assertEquals(0, tuples.size());\n    \n    \n    } finally {\n      solrClientCache.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bdae1e0c97cc515dc80915258f7cec88edfbdfa6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bdae1e0c97cc515dc80915258f7cec88edfbdfa6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bdae1e0c97cc515dc80915258f7cec88edfbdfa6"],"bdae1e0c97cc515dc80915258f7cec88edfbdfa6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}