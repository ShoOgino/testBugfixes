{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepTermState#copyFrom(TermState).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepTermState#copyFrom(TermState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepTermState#copyFrom(TermState).mjava","sourceNew":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      SepTermState other = (SepTermState) _other;\n      if (docIndex == null) {\n        docIndex = other.docIndex.clone();\n      } else {\n        docIndex.copyFrom(other.docIndex);\n      }\n      if (other.freqIndex != null) {\n        if (freqIndex == null) {\n          freqIndex = other.freqIndex.clone();\n        } else {\n          freqIndex.copyFrom(other.freqIndex);\n        }\n      } else {\n        freqIndex = null;\n      }\n      if (other.posIndex != null) {\n        if (posIndex == null) {\n          posIndex = other.posIndex.clone();\n        } else {\n          posIndex.copyFrom(other.posIndex);\n        }\n      } else {\n        posIndex = null;\n      }\n      payloadFP = other.payloadFP;\n      skipFP = other.skipFP;\n    }\n\n","sourceOld":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      SepTermState other = (SepTermState) _other;\n      if (docIndex == null) {\n        docIndex = other.docIndex.clone();\n      } else {\n        docIndex.copyFrom(other.docIndex);\n      }\n      if (other.freqIndex != null) {\n        if (freqIndex == null) {\n          freqIndex = other.freqIndex.clone();\n        } else {\n          freqIndex.copyFrom(other.freqIndex);\n        }\n      } else {\n        freqIndex = null;\n      }\n      if (other.posIndex != null) {\n        if (posIndex == null) {\n          posIndex = other.posIndex.clone();\n        } else {\n          posIndex.copyFrom(other.posIndex);\n        }\n      } else {\n        posIndex = null;\n      }\n      payloadFP = other.payloadFP;\n      skipFP = other.skipFP;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91d86ebcdb45ce6a1b2584e2603f76db47523d0a","date":1396466913,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepTermState#copyFrom(TermState).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      SepTermState other = (SepTermState) _other;\n      if (docIndex == null) {\n        docIndex = other.docIndex.clone();\n      } else {\n        docIndex.copyFrom(other.docIndex);\n      }\n      if (other.freqIndex != null) {\n        if (freqIndex == null) {\n          freqIndex = other.freqIndex.clone();\n        } else {\n          freqIndex.copyFrom(other.freqIndex);\n        }\n      } else {\n        freqIndex = null;\n      }\n      if (other.posIndex != null) {\n        if (posIndex == null) {\n          posIndex = other.posIndex.clone();\n        } else {\n          posIndex.copyFrom(other.posIndex);\n        }\n      } else {\n        posIndex = null;\n      }\n      payloadFP = other.payloadFP;\n      skipFP = other.skipFP;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepTermState#copyFrom(TermState).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      SepTermState other = (SepTermState) _other;\n      if (docIndex == null) {\n        docIndex = other.docIndex.clone();\n      } else {\n        docIndex.copyFrom(other.docIndex);\n      }\n      if (other.freqIndex != null) {\n        if (freqIndex == null) {\n          freqIndex = other.freqIndex.clone();\n        } else {\n          freqIndex.copyFrom(other.freqIndex);\n        }\n      } else {\n        freqIndex = null;\n      }\n      if (other.posIndex != null) {\n        if (posIndex == null) {\n          posIndex = other.posIndex.clone();\n        } else {\n          posIndex.copyFrom(other.posIndex);\n        }\n      } else {\n        posIndex = null;\n      }\n      payloadFP = other.payloadFP;\n      skipFP = other.skipFP;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","91d86ebcdb45ce6a1b2584e2603f76db47523d0a"],"91d86ebcdb45ce6a1b2584e2603f76db47523d0a":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91d86ebcdb45ce6a1b2584e2603f76db47523d0a"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"91d86ebcdb45ce6a1b2584e2603f76db47523d0a":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["5eb2511ababf862ea11e10761c70ee560cd84510","91d86ebcdb45ce6a1b2584e2603f76db47523d0a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}