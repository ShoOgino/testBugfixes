{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/PlaneTest#testFindArcPoints().mjava","commits":[{"id":"ebdd689e565874356dbd8933bc2924b11b4250d0","date":1461075600,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/PlaneTest#testFindArcPoints().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFindArcPoints() {\n    // Create two points\n    final GeoPoint p1 = new GeoPoint(PlanetModel.WGS84, 0.123, -0.456);\n    final GeoPoint p2 = new GeoPoint(PlanetModel.WGS84, -0.368, 0.888);\n    // Create a plane that links them.\n    final Plane plane = new Plane(p1, p2);\n    // Now, use that plane to find points that are a certain distance from the original\n    final GeoPoint[] newPoints = plane.findArcDistancePoints(PlanetModel.WGS84, 0.20, p1);\n    assertTrue(newPoints.length == 2);\n    assertTrue(plane.evaluateIsZero(newPoints[0]));\n    assertTrue(plane.evaluateIsZero(newPoints[1]));\n    assertTrue(PlanetModel.WGS84.pointOnSurface(newPoints[0]));\n    assertTrue(PlanetModel.WGS84.pointOnSurface(newPoints[1]));\n    assertEquals(0.20, p1.arcDistance(newPoints[0]), 1e-6);\n    assertEquals(0.20, p1.arcDistance(newPoints[1]), 1e-6);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ebdd689e565874356dbd8933bc2924b11b4250d0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ebdd689e565874356dbd8933bc2924b11b4250d0"]},"commit2Childs":{"ebdd689e565874356dbd8933bc2924b11b4250d0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ebdd689e565874356dbd8933bc2924b11b4250d0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}