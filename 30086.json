{"path":"modules/facet/src/java/org/apache/lucene/facet/search/sampling/RepeatableSampler.IntPriorityQueue#lessThan(Object,Object).mjava","commits":[{"id":"99b17503f4e360f8140fe80a593268486cd718b4","date":1318337685,"type":1,"author":"Doron Cohen","isMerge":false,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/search/sampling/RepeatableSampler.IntPriorityQueue#lessThan(Object,Object).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/util/RandomSample.IntPriorityQueue#lessThan(Object,Object).mjava","sourceNew":"    /**\n     * Returns true if <code>o1<code>'s weight is less than that of <code>o2</code>, for\n     * ordering in the PQ.\n     * @return True if <code>o1</code> weighs less than <code>o2</code>.\n     */\n    @Override\n    public boolean lessThan(Object o1, Object o2) {\n      return ((MI)o1).value < ((MI)o2).value;\n    }\n\n","sourceOld":"    /**\n     * Returns true if <code>o1<code>'s weight is less than that of <code>o2</code>, for\n     * ordering in the PQ.\n     * @return True if <code>o1</code> weighs less than <code>o2</code>.\n     */\n    @Override\n    public boolean lessThan(Object o1, Object o2) {\n      return ((MI)o1).value < ((MI)o2).value;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/sampling/RepeatableSampler.IntPriorityQueue#lessThan(Object,Object).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/search/sampling/RepeatableSampler.IntPriorityQueue#lessThan(Object,Object).mjava","sourceNew":"    /**\n     * Returns true if <code>o1<code>'s weight is less than that of <code>o2</code>, for\n     * ordering in the PQ.\n     * @return True if <code>o1</code> weighs less than <code>o2</code>.\n     */\n    @Override\n    public boolean lessThan(Object o1, Object o2) {\n      return ((MI)o1).value < ((MI)o2).value;\n    }\n\n","sourceOld":"    /**\n     * Returns true if <code>o1<code>'s weight is less than that of <code>o2</code>, for\n     * ordering in the PQ.\n     * @return True if <code>o1</code> weighs less than <code>o2</code>.\n     */\n    @Override\n    public boolean lessThan(Object o1, Object o2) {\n      return ((MI)o1).value < ((MI)o2).value;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["99b17503f4e360f8140fe80a593268486cd718b4"],"99b17503f4e360f8140fe80a593268486cd718b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"99b17503f4e360f8140fe80a593268486cd718b4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["99b17503f4e360f8140fe80a593268486cd718b4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}