{"path":"lucene/src/java/org/apache/lucene/index/ParallelReader#docValues(String).mjava","commits":[{"id":"cac4d5fa6c305b94f6232a70bda07f096ad0348c","date":1323538980,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelReader#docValues(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocValues docValues(String field) throws IOException {\n    IndexReader reader = fieldToReader.get(field);\n    return reader == null ? null : reader.docValues(field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a90c1450ac920794e9f3ab184b8e44a26f93439d","date":1323539686,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelReader#docValues(String).mjava","sourceNew":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public DocValues docValues(String field) throws IOException {\n    IndexReader reader = fieldToReader.get(field);\n    return reader == null ? null : MultiDocValues.getDocValues(reader, field);\n  }\n\n","sourceOld":"  @Override\n  public DocValues docValues(String field) throws IOException {\n    IndexReader reader = fieldToReader.get(field);\n    return reader == null ? null : reader.docValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelReader#docValues(String).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public DocValues docValues(String field) throws IOException {\n    IndexReader reader = fieldToReader.get(field);\n    return reader == null ? null : MultiDocValues.getDocValues(reader, field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelReader#docValues(String).mjava","sourceNew":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public DocValues docValues(String field) throws IOException {\n    AtomicIndexReader reader = fieldToReader.get(field);\n    return reader == null ? null : reader.docValues(field);\n  }\n\n","sourceOld":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public DocValues docValues(String field) throws IOException {\n    IndexReader reader = fieldToReader.get(field);\n    return reader == null ? null : MultiDocValues.getDocValues(reader, field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da6d5ac19a80d65b1e864251f155d30960353b7e","date":1327881054,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelReader#docValues(String).mjava","sourceNew":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public DocValues docValues(String field) throws IOException {\n    AtomicReader reader = fieldToReader.get(field);\n    return reader == null ? null : reader.docValues(field);\n  }\n\n","sourceOld":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public DocValues docValues(String field) throws IOException {\n    AtomicIndexReader reader = fieldToReader.get(field);\n    return reader == null ? null : reader.docValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelReader#docValues(String).mjava","sourceNew":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public DocValues docValues(String field) throws IOException {\n    AtomicReader reader = fieldToReader.get(field);\n    return reader == null ? null : reader.docValues(field);\n  }\n\n","sourceOld":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public DocValues docValues(String field) throws IOException {\n    IndexReader reader = fieldToReader.get(field);\n    return reader == null ? null : MultiDocValues.getDocValues(reader, field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b","date":1328624680,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelAtomicReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelReader#docValues(String).mjava","sourceNew":"  @Override\n  public DocValues docValues(String field) throws IOException {\n    ensureOpen();\n    AtomicReader reader = fieldToReader.get(field);\n    return reader == null ? null : reader.docValues(field);\n  }\n\n","sourceOld":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public DocValues docValues(String field) throws IOException {\n    AtomicReader reader = fieldToReader.get(field);\n    return reader == null ? null : reader.docValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08b385e33541f6749e71618c9ab36fad908a7ed0","date":1328629771,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelAtomicReader#docValues(String).mjava","sourceNew":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public DocValues docValues(String field) throws IOException {\n    AtomicReader reader = fieldToReader.get(field);\n    return reader == null ? null : reader.docValues(field);\n  }\n\n","sourceOld":"  @Override\n  public DocValues docValues(String field) throws IOException {\n    ensureOpen();\n    AtomicReader reader = fieldToReader.get(field);\n    return reader == null ? null : reader.docValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ParallelReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelReader#docValues(String).mjava","sourceNew":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public DocValues docValues(String field) throws IOException {\n    AtomicReader reader = fieldToReader.get(field);\n    return reader == null ? null : reader.docValues(field);\n  }\n\n","sourceOld":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public DocValues docValues(String field) throws IOException {\n    AtomicReader reader = fieldToReader.get(field);\n    return reader == null ? null : reader.docValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"08b385e33541f6749e71618c9ab36fad908a7ed0":["9ecf541c11d0df215aa1ea806f826d88fb9b5b9b"],"cac4d5fa6c305b94f6232a70bda07f096ad0348c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"da6d5ac19a80d65b1e864251f155d30960353b7e":["2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["08b385e33541f6749e71618c9ab36fad908a7ed0"],"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a90c1450ac920794e9f3ab184b8e44a26f93439d":["cac4d5fa6c305b94f6232a70bda07f096ad0348c"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["d638301ad1cfcae567b681b893bc8781f0ee48a5","da6d5ac19a80d65b1e864251f155d30960353b7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a90c1450ac920794e9f3ab184b8e44a26f93439d"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["d638301ad1cfcae567b681b893bc8781f0ee48a5"]},"commit2Childs":{"08b385e33541f6749e71618c9ab36fad908a7ed0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cac4d5fa6c305b94f6232a70bda07f096ad0348c":["a90c1450ac920794e9f3ab184b8e44a26f93439d"],"da6d5ac19a80d65b1e864251f155d30960353b7e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b":["08b385e33541f6749e71618c9ab36fad908a7ed0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cac4d5fa6c305b94f6232a70bda07f096ad0348c","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a90c1450ac920794e9f3ab184b8e44a26f93439d":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["9ecf541c11d0df215aa1ea806f826d88fb9b5b9b"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["da6d5ac19a80d65b1e864251f155d30960353b7e"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["5cab9a86bd67202d20b6adc463008c8e982b070a","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}