{"path":"solr/core/src/java/org/apache/solr/search/facet/UniqueSlotAcc#getValue(int).mjava","commits":[{"id":"2ddd9456ddbc1edc62d5a14a84ad0e4fcd74a008","date":1431878853,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UniqueSlotAcc#getValue(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/UniqueSlotAcc[SlotAcc]#getValue(int).mjava","sourceNew":"  @Override\n  public Object getValue(int slot) throws IOException {\n    if (fcontext.isShard()) {\n      return getShardValue(slot);\n    }\n    if (counts != null) {  // will only be pre-populated if this was used for sorting.\n      return counts[slot];\n    }\n\n    FixedBitSet bs = arr[slot];\n    return bs==null ? 0 : bs.cardinality();\n  }\n\n","sourceOld":"  @Override\n  public Object getValue(int slot) throws IOException {\n    if (fcontext.isShard()) {\n      return getShardValue(slot);\n    }\n    if (counts != null) {  // will only be pre-populated if this was used for sorting.\n      return counts[slot];\n    }\n\n    FixedBitSet bs = arr[slot];\n    return bs==null ? 0 : bs.cardinality();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8593fa01b5c0220a9685cabbcb5a8dd4a659ae8c","date":1584625917,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UniqueSlotAcc#getValue(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/UniqueSlotAcc#getValue(int).mjava","sourceNew":"  @Override\n  public Object getValue(int slot) throws IOException {\n    if (fcontext.isShard()) {\n      return getShardValue(slot);\n    }\n    return getNonShardValue(slot);\n  }\n\n","sourceOld":"  @Override\n  public Object getValue(int slot) throws IOException {\n    if (fcontext.isShard()) {\n      return getShardValue(slot);\n    }\n    if (counts != null) {  // will only be pre-populated if this was used for sorting.\n      return counts[slot];\n    }\n\n    FixedBitSet bs = arr[slot];\n    return bs==null ? 0 : bs.cardinality();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8593fa01b5c0220a9685cabbcb5a8dd4a659ae8c":["2ddd9456ddbc1edc62d5a14a84ad0e4fcd74a008"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2ddd9456ddbc1edc62d5a14a84ad0e4fcd74a008":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8593fa01b5c0220a9685cabbcb5a8dd4a659ae8c"]},"commit2Childs":{"8593fa01b5c0220a9685cabbcb5a8dd4a659ae8c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2ddd9456ddbc1edc62d5a14a84ad0e4fcd74a008"],"2ddd9456ddbc1edc62d5a14a84ad0e4fcd74a008":["8593fa01b5c0220a9685cabbcb5a8dd4a659ae8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}