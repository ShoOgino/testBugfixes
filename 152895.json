{"path":"lucene/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,IndexInput,int).mjava","commits":[{"id":"6e0c02278aba151a2fdcc66e7b8063e6a92c75dc","date":1317146779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,IndexInput,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentStoredFieldVisitor#stringField(FieldInfo,IndexInput,int).mjava","sourceNew":"  @Override\n  public boolean stringField(FieldInfo fieldInfo, IndexInput in, int numUTF8Bytes) throws IOException {\n    if (accept(fieldInfo)) {\n      final byte[] b = new byte[numUTF8Bytes];\n      in.readBytes(b, 0, b.length);\n      final FieldType ft = new FieldType(TextField.TYPE_STORED);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setStoreTermVectorPositions(fieldInfo.storePositionWithTermVector);\n      ft.setStoreTermVectorOffsets(fieldInfo.storeOffsetWithTermVector);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setIndexed(fieldInfo.isIndexed);\n      ft.setOmitNorms(fieldInfo.omitNorms);\n      ft.setIndexOptions(fieldInfo.indexOptions);\n      doc.add(new Field(fieldInfo.name,\n                        ft,\n                        new String(b, \"UTF-8\")));\n    } else {\n      in.seek(in.getFilePointer() + numUTF8Bytes);\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean stringField(FieldInfo fieldInfo, IndexInput in, int numUTF8Bytes) throws IOException {\n    if (accept(fieldInfo)) {\n      final byte[] b = new byte[numUTF8Bytes];\n      in.readBytes(b, 0, b.length);\n      final FieldType ft = new FieldType(TextField.TYPE_STORED);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setStoreTermVectorPositions(fieldInfo.storePositionWithTermVector);\n      ft.setStoreTermVectorOffsets(fieldInfo.storeOffsetWithTermVector);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setIndexed(fieldInfo.isIndexed);\n      ft.setOmitNorms(fieldInfo.omitNorms);\n      ft.setIndexOptions(fieldInfo.indexOptions);\n      doc.add(new Field(fieldInfo.name,\n                        ft,\n                        new String(b, \"UTF-8\")));\n    } else {\n      in.seek(in.getFilePointer() + numUTF8Bytes);\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","date":1317197236,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,IndexInput,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,IndexInput,int).mjava","sourceNew":"  @Override\n  public boolean stringField(FieldInfo fieldInfo, IndexInput in, int numUTF8Bytes) throws IOException {\n    if (accept(fieldInfo)) {\n      final byte[] b = new byte[numUTF8Bytes];\n      in.readBytes(b, 0, b.length);\n      final FieldType ft = new FieldType(TextField.TYPE_STORED);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setStoreTermVectorPositions(fieldInfo.storePositionWithTermVector);\n      ft.setStoreTermVectorOffsets(fieldInfo.storeOffsetWithTermVector);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setIndexed(fieldInfo.isIndexed);\n      ft.setOmitNorms(fieldInfo.omitNorms);\n      ft.setIndexOptions(fieldInfo.indexOptions);\n      doc.add(new Field(fieldInfo.name,\n          new String(b, \"UTF-8\"), ft\n      ));\n    } else {\n      in.seek(in.getFilePointer() + numUTF8Bytes);\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean stringField(FieldInfo fieldInfo, IndexInput in, int numUTF8Bytes) throws IOException {\n    if (accept(fieldInfo)) {\n      final byte[] b = new byte[numUTF8Bytes];\n      in.readBytes(b, 0, b.length);\n      final FieldType ft = new FieldType(TextField.TYPE_STORED);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setStoreTermVectorPositions(fieldInfo.storePositionWithTermVector);\n      ft.setStoreTermVectorOffsets(fieldInfo.storeOffsetWithTermVector);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setIndexed(fieldInfo.isIndexed);\n      ft.setOmitNorms(fieldInfo.omitNorms);\n      ft.setIndexOptions(fieldInfo.indexOptions);\n      doc.add(new Field(fieldInfo.name,\n                        ft,\n                        new String(b, \"UTF-8\")));\n    } else {\n      in.seek(in.getFilePointer() + numUTF8Bytes);\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.SetNonLazyFieldSelector#stringField(FieldInfo,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,IndexInput,int).mjava","sourceNew":"    @Override\n    public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n      final FieldType ft = new FieldType(TextField.TYPE_STORED);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setStoreTermVectorPositions(fieldInfo.storePositionWithTermVector);\n      ft.setStoreTermVectorOffsets(fieldInfo.storeOffsetWithTermVector);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setIndexed(fieldInfo.isIndexed);\n      ft.setOmitNorms(fieldInfo.omitNorms);\n      ft.setIndexOptions(fieldInfo.indexOptions);\n      doc.add(new Field(fieldInfo.name, value, ft));\n    }\n\n","sourceOld":"  @Override\n  public boolean stringField(FieldInfo fieldInfo, IndexInput in, int numUTF8Bytes) throws IOException {\n    if (accept(fieldInfo)) {\n      final byte[] b = new byte[numUTF8Bytes];\n      in.readBytes(b, 0, b.length);\n      final FieldType ft = new FieldType(TextField.TYPE_STORED);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setStoreTermVectorPositions(fieldInfo.storePositionWithTermVector);\n      ft.setStoreTermVectorOffsets(fieldInfo.storeOffsetWithTermVector);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setIndexed(fieldInfo.isIndexed);\n      ft.setOmitNorms(fieldInfo.omitNorms);\n      ft.setIndexOptions(fieldInfo.indexOptions);\n      doc.add(new Field(fieldInfo.name,\n          new String(b, \"UTF-8\"), ft\n      ));\n    } else {\n      in.seek(in.getFilePointer() + numUTF8Bytes);\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"06584e6e98d592b34e1329b384182f368d2025e8":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6e0c02278aba151a2fdcc66e7b8063e6a92c75dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06584e6e98d592b34e1329b384182f368d2025e8"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["6e0c02278aba151a2fdcc66e7b8063e6a92c75dc"]},"commit2Childs":{"06584e6e98d592b34e1329b384182f368d2025e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e0c02278aba151a2fdcc66e7b8063e6a92c75dc"],"6e0c02278aba151a2fdcc66e7b8063e6a92c75dc":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["06584e6e98d592b34e1329b384182f368d2025e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}