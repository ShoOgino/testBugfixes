{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/LightAutomaton#appendCharString(int,StringBuilder).mjava","commits":[{"id":"ac34f0c5bb9274821fb0cb18075234e02002e9bf","date":1402508126,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/LightAutomaton#appendCharString(int,StringBuilder).mjava","pathOld":"/dev/null","sourceNew":"  private static void appendCharString(int c, StringBuilder b) {\n    if (c >= 0x21 && c <= 0x7e && c != '\\\\' && c != '\"') b.appendCodePoint(c);\n    else {\n      b.append(\"\\\\\\\\U\");\n      String s = Integer.toHexString(c);\n      if (c < 0x10) b.append(\"0000000\").append(s);\n      else if (c < 0x100) b.append(\"000000\").append(s);\n      else if (c < 0x1000) b.append(\"00000\").append(s);\n      else if (c < 0x10000) b.append(\"0000\").append(s);\n      else if (c < 0x100000) b.append(\"000\").append(s);\n      else if (c < 0x1000000) b.append(\"00\").append(s);\n      else if (c < 0x10000000) b.append(\"0\").append(s);\n      else b.append(s);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f4ef381bf0c2d618c6db830d3dd668c6901c05a","date":1402592253,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/LightAutomaton#appendCharString(int,StringBuilder).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/LightAutomaton#appendCharString(int,StringBuilder).mjava","sourceNew":"  static void appendCharString(int c, StringBuilder b) {\n    if (c >= 0x21 && c <= 0x7e && c != '\\\\' && c != '\"') b.appendCodePoint(c);\n    else {\n      b.append(\"\\\\\\\\U\");\n      String s = Integer.toHexString(c);\n      if (c < 0x10) b.append(\"0000000\").append(s);\n      else if (c < 0x100) b.append(\"000000\").append(s);\n      else if (c < 0x1000) b.append(\"00000\").append(s);\n      else if (c < 0x10000) b.append(\"0000\").append(s);\n      else if (c < 0x100000) b.append(\"000\").append(s);\n      else if (c < 0x1000000) b.append(\"00\").append(s);\n      else if (c < 0x10000000) b.append(\"0\").append(s);\n      else b.append(s);\n    }\n  }\n\n","sourceOld":"  private static void appendCharString(int c, StringBuilder b) {\n    if (c >= 0x21 && c <= 0x7e && c != '\\\\' && c != '\"') b.appendCodePoint(c);\n    else {\n      b.append(\"\\\\\\\\U\");\n      String s = Integer.toHexString(c);\n      if (c < 0x10) b.append(\"0000000\").append(s);\n      else if (c < 0x100) b.append(\"000000\").append(s);\n      else if (c < 0x1000) b.append(\"00000\").append(s);\n      else if (c < 0x10000) b.append(\"0000\").append(s);\n      else if (c < 0x100000) b.append(\"000\").append(s);\n      else if (c < 0x1000000) b.append(\"00\").append(s);\n      else if (c < 0x10000000) b.append(\"0\").append(s);\n      else b.append(s);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#appendCharString(int,StringBuilder).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/LightAutomaton#appendCharString(int,StringBuilder).mjava","sourceNew":"  static void appendCharString(int c, StringBuilder b) {\n    if (c >= 0x21 && c <= 0x7e && c != '\\\\' && c != '\"') b.appendCodePoint(c);\n    else {\n      b.append(\"\\\\\\\\U\");\n      String s = Integer.toHexString(c);\n      if (c < 0x10) b.append(\"0000000\").append(s);\n      else if (c < 0x100) b.append(\"000000\").append(s);\n      else if (c < 0x1000) b.append(\"00000\").append(s);\n      else if (c < 0x10000) b.append(\"0000\").append(s);\n      else if (c < 0x100000) b.append(\"000\").append(s);\n      else if (c < 0x1000000) b.append(\"00\").append(s);\n      else if (c < 0x10000000) b.append(\"0\").append(s);\n      else b.append(s);\n    }\n  }\n\n","sourceOld":"  static void appendCharString(int c, StringBuilder b) {\n    if (c >= 0x21 && c <= 0x7e && c != '\\\\' && c != '\"') b.appendCodePoint(c);\n    else {\n      b.append(\"\\\\\\\\U\");\n      String s = Integer.toHexString(c);\n      if (c < 0x10) b.append(\"0000000\").append(s);\n      else if (c < 0x100) b.append(\"000000\").append(s);\n      else if (c < 0x1000) b.append(\"00000\").append(s);\n      else if (c < 0x10000) b.append(\"0000\").append(s);\n      else if (c < 0x100000) b.append(\"000\").append(s);\n      else if (c < 0x1000000) b.append(\"00\").append(s);\n      else if (c < 0x10000000) b.append(\"0\").append(s);\n      else b.append(s);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["7f4ef381bf0c2d618c6db830d3dd668c6901c05a"],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["ac34f0c5bb9274821fb0cb18075234e02002e9bf"],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac34f0c5bb9274821fb0cb18075234e02002e9bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":[],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["7f4ef381bf0c2d618c6db830d3dd668c6901c05a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}