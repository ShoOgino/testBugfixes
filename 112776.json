{"path":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","pathOld":"solr/contrib/uima/src/test/java/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","sourceNew":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"uima-multi-map\");\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory) chained\n            .getFactories()[0];\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).solrUIMAConfiguration;\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","sourceOld":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"uima-multi-map\");\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory) chained\n            .getFactories()[0];\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).solrUIMAConfiguration;\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","pathOld":"solr/contrib/uima/src/test/java/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","sourceNew":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"uima-multi-map\");\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory) chained\n            .getFactories()[0];\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).solrUIMAConfiguration;\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","sourceOld":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"uima-multi-map\");\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory) chained\n            .getFactories()[0];\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).solrUIMAConfiguration;\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30ef788e63c6f6b8019db9c82b171076941a674e","date":1438932515,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","pathOld":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","sourceNew":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"uima-multi-map\");\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory) chained\n            .getFactories()[0];\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).getConfiguration();\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","sourceOld":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"uima-multi-map\");\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory) chained\n            .getFactories()[0];\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).solrUIMAConfiguration;\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"733eaf468f18297b1bcc51031353bdfdd1913bdf","date":1456928540,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","pathOld":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","sourceNew":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"uima-multi-map\");\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory)chained.getProcessors().get(0);\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).getConfiguration();\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","sourceOld":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"uima-multi-map\");\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory) chained\n            .getFactories()[0];\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).getConfiguration();\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","pathOld":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","sourceNew":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"uima-multi-map\");\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory)chained.getProcessors().get(0);\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).getConfiguration();\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","sourceOld":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"uima-multi-map\");\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory) chained\n            .getFactories()[0];\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).getConfiguration();\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d84d1a1db0c8fd47ea0b24bf4477956880d7cf1d","date":1480321202,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","pathOld":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","sourceNew":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(UIMA_MULTI_MAP_CHAIN);\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory)chained.getProcessors().get(0);\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).getConfiguration();\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","sourceOld":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"uima-multi-map\");\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory)chained.getProcessors().get(0);\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).getConfiguration();\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","pathOld":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","sourceNew":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(UIMA_MULTI_MAP_CHAIN);\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory)chained.getProcessors().get(0);\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).getConfiguration();\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","sourceOld":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"uima-multi-map\");\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory)chained.getProcessors().get(0);\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).getConfiguration();\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"931cb705e783c7f07cdb110a0cb03bad79fe1b2b","date":1480386986,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","pathOld":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","sourceNew":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(UIMA_MULTI_MAP_CHAIN);\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory)chained.getProcessors().get(0);\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).getConfiguration();\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","sourceOld":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"uima-multi-map\");\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory)chained.getProcessors().get(0);\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).getConfiguration();\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c9a6ea78b00a421744e770568d8c2aab262e4cd","date":1530971937,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(UIMA_MULTI_MAP_CHAIN);\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory)chained.getProcessors().get(0);\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).getConfiguration();\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(UIMA_MULTI_MAP_CHAIN);\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory)chained.getProcessors().get(0);\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).getConfiguration();\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#testMultiMap().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testMultiMap() {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(UIMA_MULTI_MAP_CHAIN);\n    assertNotNull(chained);\n    UIMAUpdateRequestProcessorFactory factory = (UIMAUpdateRequestProcessorFactory)chained.getProcessors().get(0);\n    assertNotNull(factory);\n    UpdateRequestProcessor processor = factory.getInstance(req(), null, null);\n    assertTrue(processor instanceof UIMAUpdateRequestProcessor);\n    SolrUIMAConfiguration conf = ((UIMAUpdateRequestProcessor)processor).getConfiguration();\n    Map<String, Map<String, MapField>> map = conf.getTypesFeaturesFieldsMapping();\n    Map<String, MapField> subMap = map.get(\"a-type-which-can-have-multiple-features\");\n    assertEquals(2, subMap.size());\n    assertEquals(\"1\", subMap.get(\"A\").getFieldName(null));\n    assertEquals(\"2\", subMap.get(\"B\").getFieldName(null));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"d84d1a1db0c8fd47ea0b24bf4477956880d7cf1d":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"30ef788e63c6f6b8019db9c82b171076941a674e":["c26f00b574427b55127e869b935845554afde1fa"],"8c9a6ea78b00a421744e770568d8c2aab262e4cd":["931cb705e783c7f07cdb110a0cb03bad79fe1b2b"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["931cb705e783c7f07cdb110a0cb03bad79fe1b2b","8c9a6ea78b00a421744e770568d8c2aab262e4cd"],"727bb765ff2542275f6d31f67be18d7104bae148":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","d84d1a1db0c8fd47ea0b24bf4477956880d7cf1d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["30ef788e63c6f6b8019db9c82b171076941a674e","733eaf468f18297b1bcc51031353bdfdd1913bdf"],"931cb705e783c7f07cdb110a0cb03bad79fe1b2b":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","d84d1a1db0c8fd47ea0b24bf4477956880d7cf1d"],"733eaf468f18297b1bcc51031353bdfdd1913bdf":["30ef788e63c6f6b8019db9c82b171076941a674e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8c9a6ea78b00a421744e770568d8c2aab262e4cd"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["931cb705e783c7f07cdb110a0cb03bad79fe1b2b","8c9a6ea78b00a421744e770568d8c2aab262e4cd"]},"commit2Childs":{"c26f00b574427b55127e869b935845554afde1fa":["30ef788e63c6f6b8019db9c82b171076941a674e"],"d84d1a1db0c8fd47ea0b24bf4477956880d7cf1d":["727bb765ff2542275f6d31f67be18d7104bae148","931cb705e783c7f07cdb110a0cb03bad79fe1b2b"],"30ef788e63c6f6b8019db9c82b171076941a674e":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","733eaf468f18297b1bcc51031353bdfdd1913bdf"],"8c9a6ea78b00a421744e770568d8c2aab262e4cd":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"727bb765ff2542275f6d31f67be18d7104bae148":[],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["d84d1a1db0c8fd47ea0b24bf4477956880d7cf1d","727bb765ff2542275f6d31f67be18d7104bae148","931cb705e783c7f07cdb110a0cb03bad79fe1b2b"],"931cb705e783c7f07cdb110a0cb03bad79fe1b2b":["8c9a6ea78b00a421744e770568d8c2aab262e4cd","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"733eaf468f18297b1bcc51031353bdfdd1913bdf":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","727bb765ff2542275f6d31f67be18d7104bae148","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}