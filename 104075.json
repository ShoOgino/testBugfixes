{"path":"lucene/core/src/test/org/apache/lucene/util/compress/LZ4TestCase#testLongMatchs().mjava","commits":[{"id":"9407318969e8504257b4c5764c65755a043e5404","date":1579873617,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/compress/LZ4TestCase#testLongMatchs().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/compressing/AbstractTestLZ4CompressionMode#testLongMatchs().mjava","sourceNew":"  public void testLongMatchs() throws IOException {\n    // match length >= 20\n    final byte[] data = new byte[RandomNumbers.randomIntBetween(random(), 300, 1024)];\n    for (int i = 0; i < data.length; ++i) {\n      data[i] = (byte) i;\n    }\n    doTest(data, newHashTable());\n  }\n\n","sourceOld":"  public void testLongMatchs() throws IOException {\n    // match length >= 20\n    final byte[] decompressed = new byte[RandomNumbers.randomIntBetween(random(), 300, 1024)];\n    for (int i = 0; i < decompressed.length; ++i) {\n      decompressed[i] = (byte) i;\n    }\n    test(decompressed);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9407318969e8504257b4c5764c65755a043e5404":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9407318969e8504257b4c5764c65755a043e5404"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9407318969e8504257b4c5764c65755a043e5404"],"9407318969e8504257b4c5764c65755a043e5404":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}