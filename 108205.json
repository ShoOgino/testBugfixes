{"path":"src/java/org/apache/lucene/search/FieldComparatorSource#newComparator(String,int,int,boolean).mjava","commits":[{"id":"64714133cf5ec732e3bbceee63351bb9af0117dc","date":1239647636,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldComparatorSource#newComparator(String,int,int,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/FieldComparatorSource#newComparator(String,IndexReader[],int,int,boolean).mjava","sourceNew":"  /**\n   * Creates a comparator for the field in the given index.\n   * \n   * @param fieldname\n   *          Name of the field to create comparator for.\n   * @return FieldComparator.\n   * @throws IOException\n   *           If an error occurs reading the index.\n   */\n  public abstract FieldComparator newComparator(String fieldname, int numHits, int sortPos, boolean reversed)\n      throws IOException;\n\n","sourceOld":"  /**\n   * Creates a comparator for the field in the given index.\n   * \n   * @param fieldname\n   *          Name of the field to create comparator for.\n   * @return FieldComparator.\n   * @throws IOException\n   *           If an error occurs reading the index.\n   */\n  public abstract FieldComparator newComparator(String fieldname, IndexReader[] subReaders, int numHits, int sortPos, boolean reversed)\n      throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparatorSource#newComparator(String,int,int,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/FieldComparatorSource#newComparator(String,int,int,boolean).mjava","sourceNew":"  /**\n   * Creates a comparator for the field in the given index.\n   * \n   * @param fieldname\n   *          Name of the field to create comparator for.\n   * @return FieldComparator.\n   * @throws IOException\n   *           If an error occurs reading the index.\n   */\n  public abstract FieldComparator newComparator(String fieldname, int numHits, int sortPos, boolean reversed)\n      throws IOException;\n\n","sourceOld":"  /**\n   * Creates a comparator for the field in the given index.\n   * \n   * @param fieldname\n   *          Name of the field to create comparator for.\n   * @return FieldComparator.\n   * @throws IOException\n   *           If an error occurs reading the index.\n   */\n  public abstract FieldComparator newComparator(String fieldname, int numHits, int sortPos, boolean reversed)\n      throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"64714133cf5ec732e3bbceee63351bb9af0117dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["64714133cf5ec732e3bbceee63351bb9af0117dc"]},"commit2Childs":{"64714133cf5ec732e3bbceee63351bb9af0117dc":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}