{"path":"solr/core/src/java/org/apache/solr/search/join/CrossCollectionJoinQuery.CrossCollectionJoinQueryWeight#createHashRangeFq().mjava","commits":[{"id":"e62a54d8f17b7c7b5d395bad453c470cf4039a6f","date":1593091560,"type":1,"author":"Dan Fox","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/CrossCollectionJoinQuery.CrossCollectionJoinQueryWeight#createHashRangeFq().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/XCJFQuery.XCJFQueryWeight#createHashRangeFq().mjava","sourceNew":"    private String createHashRangeFq() {\n      if (routedByJoinKey) {\n        ClusterState clusterState = searcher.getCore().getCoreContainer().getZkController().getClusterState();\n        CloudDescriptor desc = searcher.getCore().getCoreDescriptor().getCloudDescriptor();\n        Slice slice = clusterState.getCollection(desc.getCollectionName()).getSlicesMap().get(desc.getShardId());\n        DocRouter.Range range = slice.getRange();\n\n        // In CompositeIdRouter, the routing prefix only affects the top 16 bits\n        int min = range.min & 0xffff0000;\n        int max = range.max | 0x0000ffff;\n\n        return String.format(Locale.ROOT, \"{!hash_range f=%s l=%d u=%d}\", fromField, min, max);\n      } else {\n        return null;\n      }\n    }\n\n","sourceOld":"    private String createHashRangeFq() {\n      if (routedByJoinKey) {\n        ClusterState clusterState = searcher.getCore().getCoreContainer().getZkController().getClusterState();\n        CloudDescriptor desc = searcher.getCore().getCoreDescriptor().getCloudDescriptor();\n        Slice slice = clusterState.getCollection(desc.getCollectionName()).getSlicesMap().get(desc.getShardId());\n        DocRouter.Range range = slice.getRange();\n\n        // In CompositeIdRouter, the routing prefix only affects the top 16 bits\n        int min = range.min & 0xffff0000;\n        int max = range.max | 0x0000ffff;\n\n        return String.format(Locale.ROOT, \"{!hash_range f=%s l=%d u=%d}\", fromField, min, max);\n      } else {\n        return null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e62a54d8f17b7c7b5d395bad453c470cf4039a6f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e62a54d8f17b7c7b5d395bad453c470cf4039a6f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e62a54d8f17b7c7b5d395bad453c470cf4039a6f"],"e62a54d8f17b7c7b5d395bad453c470cf4039a6f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}