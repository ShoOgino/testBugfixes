{"path":"solr/core/src/java/org/apache/solr/request/IntervalFacets.FacetInterval#FacetInterval(SchemaField,String).mjava","commits":[{"id":"84b24f47dd3dfa4e2396cd6f819a35445b0a53fd","date":1406137403,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/IntervalFacets.FacetInterval#FacetInterval(SchemaField,String).mjava","pathOld":"/dev/null","sourceNew":"    FacetInterval(SchemaField schemaField, String intervalStr) throws SyntaxError {\n      if (intervalStr == null) throw new SyntaxError(\"empty facet interval\");\n      intervalStr = intervalStr.trim();\n      if (intervalStr.length() == 0) throw new SyntaxError(\"empty facet interval\");\n      key = intervalStr;\n      if (intervalStr.charAt(0) == '(') {\n        startOpen = true;\n      } else if (intervalStr.charAt(0) == '[') {\n        startOpen = false;\n      } else {\n        throw new SyntaxError(\"Invalid start character \" + intervalStr.charAt(0) + \" in facet interval \" + intervalStr);\n      }\n\n      final int lastNdx = intervalStr.length() - 1;\n      if (intervalStr.charAt(lastNdx) == ')') {\n        endOpen = true;\n      } else if (intervalStr.charAt(lastNdx) == ']') {\n        endOpen = false;\n      } else {\n        throw new SyntaxError(\"Invalid end character \" + intervalStr.charAt(0) + \" in facet interval \" + intervalStr);\n      }\n\n      StringBuilder startStr = new StringBuilder(lastNdx);\n      int i = unescape(intervalStr, 1, lastNdx, startStr);\n      if (i == lastNdx) {\n        if (intervalStr.charAt(lastNdx - 1) == ',') {\n          throw new SyntaxError(\"Empty interval limit\");\n        }\n        throw new SyntaxError(\"Missing unescaped comma separating interval ends in \" + intervalStr);\n      }\n      try {\n        start = getLimitFromString(schemaField, startStr);\n      } catch (SyntaxError | SolrException e) {\n        throw new SyntaxError(String.format(Locale.ROOT, \"Invalid start interval for key '%s': %s\", key, e.getMessage()), e);\n      }\n\n\n      StringBuilder endStr = new StringBuilder(lastNdx);\n      i = unescape(intervalStr, i, lastNdx, endStr);\n      if (i != lastNdx) {\n        throw new SyntaxError(\"Extra unescaped comma at index \" + i + \" in interval \" + intervalStr);\n      }\n      try {\n        end = getLimitFromString(schemaField, endStr);\n      } catch (SyntaxError | SolrException e) {\n        throw new SyntaxError(String.format(Locale.ROOT, \"Invalid end interval for key '%s': %s\", key, e.getMessage()), e);\n      }\n      // TODO: what about escaping star (*)?\n      // TODO: escaping spaces on ends?\n      if (schemaField.getType().getNumericType() != null) {\n        setNumericLimits(schemaField);\n      }\n      if (start != null && end != null && start.compareTo(end) > 0) {\n        throw new SyntaxError(\"Start is higher than end in interval for key: \" + key);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0e3055974cda209e4f95efadcd904f0ebf03ada","date":1406238198,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/IntervalFacets.FacetInterval#FacetInterval(SchemaField,String,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/IntervalFacets.FacetInterval#FacetInterval(SchemaField,String).mjava","sourceNew":"    FacetInterval(SchemaField schemaField, String intervalStr, SolrParams params) throws SyntaxError {\n      if (intervalStr == null) throw new SyntaxError(\"empty facet interval\");\n      intervalStr = intervalStr.trim();\n      if (intervalStr.length() == 0) throw new SyntaxError(\"empty facet interval\");\n      \n      try {\n        SolrParams localParams = QueryParsing.getLocalParams(intervalStr, params);\n        if (localParams != null ) {\n          int localParamEndIdx = 2; // omit index of {!\n          while (true) {\n            localParamEndIdx = intervalStr.indexOf(QueryParsing.LOCALPARAM_END, localParamEndIdx);\n            // Local param could be escaping '}'\n            if (intervalStr.charAt(localParamEndIdx - 1) != '\\\\') {\n              break;\n            }\n            localParamEndIdx++;\n          }\n          intervalStr = intervalStr.substring(localParamEndIdx + 1);\n          key = localParams.get(CommonParams.OUTPUT_KEY, intervalStr);\n        } else {\n          key = intervalStr;\n        }\n      } catch (SyntaxError e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      if (intervalStr.charAt(0) == '(') {\n        startOpen = true;\n      } else if (intervalStr.charAt(0) == '[') {\n        startOpen = false;\n      } else {\n        throw new SyntaxError(\"Invalid start character \" + intervalStr.charAt(0) + \" in facet interval \" + intervalStr);\n      }\n\n      final int lastNdx = intervalStr.length() - 1;\n      if (intervalStr.charAt(lastNdx) == ')') {\n        endOpen = true;\n      } else if (intervalStr.charAt(lastNdx) == ']') {\n        endOpen = false;\n      } else {\n        throw new SyntaxError(\"Invalid end character \" + intervalStr.charAt(0) + \" in facet interval \" + intervalStr);\n      }\n\n      StringBuilder startStr = new StringBuilder(lastNdx);\n      int i = unescape(intervalStr, 1, lastNdx, startStr);\n      if (i == lastNdx) {\n        if (intervalStr.charAt(lastNdx - 1) == ',') {\n          throw new SyntaxError(\"Empty interval limit\");\n        }\n        throw new SyntaxError(\"Missing unescaped comma separating interval ends in \" + intervalStr);\n      }\n      try {\n        start = getLimitFromString(schemaField, startStr);\n      } catch (SyntaxError | SolrException e) {\n        throw new SyntaxError(String.format(Locale.ROOT, \"Invalid start interval for key '%s': %s\", key, e.getMessage()), e);\n      }\n\n\n      StringBuilder endStr = new StringBuilder(lastNdx);\n      i = unescape(intervalStr, i, lastNdx, endStr);\n      if (i != lastNdx) {\n        throw new SyntaxError(\"Extra unescaped comma at index \" + i + \" in interval \" + intervalStr);\n      }\n      try {\n        end = getLimitFromString(schemaField, endStr);\n      } catch (SyntaxError | SolrException e) {\n        throw new SyntaxError(String.format(Locale.ROOT, \"Invalid end interval for key '%s': %s\", key, e.getMessage()), e);\n      }\n      // TODO: what about escaping star (*)?\n      // TODO: escaping spaces on ends?\n      if (schemaField.getType().getNumericType() != null) {\n        setNumericLimits(schemaField);\n      }\n      if (start != null && end != null && start.compareTo(end) > 0) {\n        throw new SyntaxError(\"Start is higher than end in interval for key: \" + key);\n      }\n    }\n\n","sourceOld":"    FacetInterval(SchemaField schemaField, String intervalStr) throws SyntaxError {\n      if (intervalStr == null) throw new SyntaxError(\"empty facet interval\");\n      intervalStr = intervalStr.trim();\n      if (intervalStr.length() == 0) throw new SyntaxError(\"empty facet interval\");\n      key = intervalStr;\n      if (intervalStr.charAt(0) == '(') {\n        startOpen = true;\n      } else if (intervalStr.charAt(0) == '[') {\n        startOpen = false;\n      } else {\n        throw new SyntaxError(\"Invalid start character \" + intervalStr.charAt(0) + \" in facet interval \" + intervalStr);\n      }\n\n      final int lastNdx = intervalStr.length() - 1;\n      if (intervalStr.charAt(lastNdx) == ')') {\n        endOpen = true;\n      } else if (intervalStr.charAt(lastNdx) == ']') {\n        endOpen = false;\n      } else {\n        throw new SyntaxError(\"Invalid end character \" + intervalStr.charAt(0) + \" in facet interval \" + intervalStr);\n      }\n\n      StringBuilder startStr = new StringBuilder(lastNdx);\n      int i = unescape(intervalStr, 1, lastNdx, startStr);\n      if (i == lastNdx) {\n        if (intervalStr.charAt(lastNdx - 1) == ',') {\n          throw new SyntaxError(\"Empty interval limit\");\n        }\n        throw new SyntaxError(\"Missing unescaped comma separating interval ends in \" + intervalStr);\n      }\n      try {\n        start = getLimitFromString(schemaField, startStr);\n      } catch (SyntaxError | SolrException e) {\n        throw new SyntaxError(String.format(Locale.ROOT, \"Invalid start interval for key '%s': %s\", key, e.getMessage()), e);\n      }\n\n\n      StringBuilder endStr = new StringBuilder(lastNdx);\n      i = unescape(intervalStr, i, lastNdx, endStr);\n      if (i != lastNdx) {\n        throw new SyntaxError(\"Extra unescaped comma at index \" + i + \" in interval \" + intervalStr);\n      }\n      try {\n        end = getLimitFromString(schemaField, endStr);\n      } catch (SyntaxError | SolrException e) {\n        throw new SyntaxError(String.format(Locale.ROOT, \"Invalid end interval for key '%s': %s\", key, e.getMessage()), e);\n      }\n      // TODO: what about escaping star (*)?\n      // TODO: escaping spaces on ends?\n      if (schemaField.getType().getNumericType() != null) {\n        setNumericLimits(schemaField);\n      }\n      if (start != null && end != null && start.compareTo(end) > 0) {\n        throw new SyntaxError(\"Start is higher than end in interval for key: \" + key);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"84b24f47dd3dfa4e2396cd6f819a35445b0a53fd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e3055974cda209e4f95efadcd904f0ebf03ada":["84b24f47dd3dfa4e2396cd6f819a35445b0a53fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e3055974cda209e4f95efadcd904f0ebf03ada"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["84b24f47dd3dfa4e2396cd6f819a35445b0a53fd"],"84b24f47dd3dfa4e2396cd6f819a35445b0a53fd":["a0e3055974cda209e4f95efadcd904f0ebf03ada"],"a0e3055974cda209e4f95efadcd904f0ebf03ada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}