{"path":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearQuery(Query).mjava","commits":[{"id":"60596f28be69b10c37a56a303c2dbea07b2ca4ba","date":1425060541,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearQuery(Query).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LRUFilterCache#clearFilter(Filter).mjava","sourceNew":"  /**\n   * Remove all cache entries for the given query.\n   */\n  public synchronized void clearQuery(Query query) {\n    final Query singleton = uniqueQueries.remove(QueryCache.cacheKey(query));\n    if (singleton != null) {\n      onEviction(singleton);\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove all cache entries for the given filter.\n   */\n  public synchronized void clearFilter(Filter filter) {\n    final Filter singleton = uniqueFilters.remove(filter);\n    if (singleton != null) {\n      onEviction(singleton);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearQuery(Query).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Remove all cache entries for the given query.\n   */\n  public synchronized void clearQuery(Query query) {\n    final Query singleton = uniqueQueries.remove(QueryCache.cacheKey(query));\n    if (singleton != null) {\n      onEviction(singleton);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearQuery(Query).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearQuery(Query).mjava","sourceNew":"  /**\n   * Remove all cache entries for the given query.\n   */\n  public synchronized void clearQuery(Query query) {\n    final Query singleton = uniqueQueries.remove(query);\n    if (singleton != null) {\n      onEviction(singleton);\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove all cache entries for the given query.\n   */\n  public synchronized void clearQuery(Query query) {\n    final Query singleton = uniqueQueries.remove(QueryCache.cacheKey(query));\n    if (singleton != null) {\n      onEviction(singleton);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa7f878dadf2afe37eaf26f3f2906ec2dd0aacaa","date":1461326984,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearQuery(Query).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearQuery(Query).mjava","sourceNew":"  /**\n   * Remove all cache entries for the given query.\n   */\n  public void clearQuery(Query query) {\n    lock.lock();\n    try {\n      final Query singleton = uniqueQueries.remove(query);\n      if (singleton != null) {\n        onEviction(singleton);\n      }\n    } finally {\n      lock.unlock();\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove all cache entries for the given query.\n   */\n  public synchronized void clearQuery(Query query) {\n    final Query singleton = uniqueQueries.remove(query);\n    if (singleton != null) {\n      onEviction(singleton);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearQuery(Query).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearQuery(Query).mjava","sourceNew":"  /**\n   * Remove all cache entries for the given query.\n   */\n  public void clearQuery(Query query) {\n    lock.lock();\n    try {\n      final Query singleton = uniqueQueries.remove(query);\n      if (singleton != null) {\n        onEviction(singleton);\n      }\n    } finally {\n      lock.unlock();\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove all cache entries for the given query.\n   */\n  public synchronized void clearQuery(Query query) {\n    final Query singleton = uniqueQueries.remove(query);\n    if (singleton != null) {\n      onEviction(singleton);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f740a4cb7f5949ddb40a1647671c4a997223312","date":1569677340,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearQuery(Query).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearQuery(Query).mjava","sourceNew":"  /**\n   * Remove all cache entries for the given query.\n   */\n  public void clearQuery(Query query) {\n    lock.lock();\n    try {\n      final Query singleton = uniqueQueries.remove(query);\n      if (singleton != null) {\n        onEviction(singleton);\n      }\n    } finally {\n      inFlightAsyncLoadQueries.remove(query);\n      lock.unlock();\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove all cache entries for the given query.\n   */\n  public void clearQuery(Query query) {\n    lock.lock();\n    try {\n      final Query singleton = uniqueQueries.remove(query);\n      if (singleton != null) {\n        onEviction(singleton);\n      }\n    } finally {\n      lock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b9f74021389e2b32ee750fa5a24281c87951ec3","date":1569845983,"type":3,"author":"jimczi","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearQuery(Query).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearQuery(Query).mjava","sourceNew":"  /**\n   * Remove all cache entries for the given query.\n   */\n  public void clearQuery(Query query) {\n    lock.lock();\n    try {\n      final Query singleton = uniqueQueries.remove(query);\n      if (singleton != null) {\n        onEviction(singleton);\n      }\n    } finally {\n      inFlightAsyncLoadQueries.remove(query);\n      lock.unlock();\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove all cache entries for the given query.\n   */\n  public void clearQuery(Query query) {\n    lock.lock();\n    try {\n      final Query singleton = uniqueQueries.remove(query);\n      if (singleton != null) {\n        onEviction(singleton);\n      }\n    } finally {\n      lock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"906d4da7e00f8453a5a024fe1ee92d6b14c0627f","date":1570006475,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearQuery(Query).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearQuery(Query).mjava","sourceNew":"  /**\n   * Remove all cache entries for the given query.\n   */\n  public void clearQuery(Query query) {\n    lock.lock();\n    try {\n      final Query singleton = uniqueQueries.remove(query);\n      if (singleton != null) {\n        onEviction(singleton);\n      }\n    } finally {\n      lock.unlock();\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove all cache entries for the given query.\n   */\n  public void clearQuery(Query query) {\n    lock.lock();\n    try {\n      final Query singleton = uniqueQueries.remove(query);\n      if (singleton != null) {\n        onEviction(singleton);\n      }\n    } finally {\n      inFlightAsyncLoadQueries.remove(query);\n      lock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearQuery(Query).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearQuery(Query).mjava","sourceNew":"  /**\n   * Remove all cache entries for the given query.\n   */\n  public void clearQuery(Query query) {\n    lock.lock();\n    try {\n      final Query singleton = uniqueQueries.remove(query);\n      if (singleton != null) {\n        onEviction(singleton);\n      }\n    } finally {\n      lock.unlock();\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove all cache entries for the given query.\n   */\n  public void clearQuery(Query query) {\n    lock.lock();\n    try {\n      final Query singleton = uniqueQueries.remove(query);\n      if (singleton != null) {\n        onEviction(singleton);\n      }\n    } finally {\n      inFlightAsyncLoadQueries.remove(query);\n      lock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"906d4da7e00f8453a5a024fe1ee92d6b14c0627f":["6f740a4cb7f5949ddb40a1647671c4a997223312"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["2dfdf766e55e943d942055d7de53c7ad6bc45283","aa7f878dadf2afe37eaf26f3f2906ec2dd0aacaa"],"6f740a4cb7f5949ddb40a1647671c4a997223312":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"4b9f74021389e2b32ee750fa5a24281c87951ec3":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","6f740a4cb7f5949ddb40a1647671c4a997223312"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["906d4da7e00f8453a5a024fe1ee92d6b14c0627f"],"aa7f878dadf2afe37eaf26f3f2906ec2dd0aacaa":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"b0b597c65628ca9e73913a07e81691f8229bae35":["4b9f74021389e2b32ee750fa5a24281c87951ec3","906d4da7e00f8453a5a024fe1ee92d6b14c0627f"]},"commit2Childs":{"906d4da7e00f8453a5a024fe1ee92d6b14c0627f":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2dfdf766e55e943d942055d7de53c7ad6bc45283"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["6f740a4cb7f5949ddb40a1647671c4a997223312","4b9f74021389e2b32ee750fa5a24281c87951ec3"],"6f740a4cb7f5949ddb40a1647671c4a997223312":["906d4da7e00f8453a5a024fe1ee92d6b14c0627f","4b9f74021389e2b32ee750fa5a24281c87951ec3"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","aa7f878dadf2afe37eaf26f3f2906ec2dd0aacaa"],"4b9f74021389e2b32ee750fa5a24281c87951ec3":["b0b597c65628ca9e73913a07e81691f8229bae35"],"aa7f878dadf2afe37eaf26f3f2906ec2dd0aacaa":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}