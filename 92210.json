{"path":"backwards/src/test/org/apache/lucene/index/TestIndexReaderReopen#doTestReopenWithCommit(Directory,boolean).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/index/TestIndexReaderReopen#doTestReopenWithCommit(Directory,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void doTestReopenWithCommit (Directory dir, boolean withReopen) throws IOException {\n    IndexWriter iwriter = new IndexWriter(dir, new KeywordAnalyzer(), true, MaxFieldLength.LIMITED);\n    iwriter.setMergeScheduler(new SerialMergeScheduler());\n    IndexReader reader = IndexReader.open(dir, false);\n    try {\n      int M = 3;\n      for (int i=0; i<4; i++) {\n        for (int j=0; j<M; j++) {\n          Document doc = new Document();\n          doc.add(new Field(\"id\", i+\"_\"+j, Store.YES, Index.NOT_ANALYZED));\n          doc.add(new Field(\"id2\", i+\"_\"+j, Store.YES, Index.NOT_ANALYZED_NO_NORMS));\n          doc.add(new Field(\"id3\", i+\"_\"+j, Store.YES, Index.NO));\n          iwriter.addDocument(doc);\n          if (i>0) {\n            int k = i-1;\n            int n = j + k*M;\n            Document prevItereationDoc = reader.document(n);\n            assertNotNull(prevItereationDoc);\n            String id = prevItereationDoc.get(\"id\");\n            assertEquals(k+\"_\"+j, id);\n          }\n        }\n        iwriter.commit();\n        if (withReopen) {\n          // reopen\n          IndexReader r2 = reader.reopen();\n          if (reader != r2) {\n            reader.close();\n            reader = r2;\n          }\n        } else {\n          // recreate\n          reader.close();\n          reader = IndexReader.open(dir, false);\n        }\n      }\n    } finally {\n      iwriter.close();\n      reader.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexReaderReopen#doTestReopenWithCommit(Directory,boolean).mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestIndexReaderReopen#doTestReopenWithCommit(Directory,boolean).mjava","sourceNew":"  private void doTestReopenWithCommit (Directory dir, boolean withReopen) throws IOException {\n    IndexWriter iwriter = new IndexWriter(dir, new KeywordAnalyzer(), true, MaxFieldLength.LIMITED);\n    iwriter.setMergeScheduler(new SerialMergeScheduler());\n    IndexReader reader = IndexReader.open(dir, false);\n    try {\n      int M = 3;\n      for (int i=0; i<4; i++) {\n        for (int j=0; j<M; j++) {\n          Document doc = new Document();\n          doc.add(new Field(\"id\", i+\"_\"+j, Store.YES, Index.NOT_ANALYZED));\n          doc.add(new Field(\"id2\", i+\"_\"+j, Store.YES, Index.NOT_ANALYZED_NO_NORMS));\n          doc.add(new Field(\"id3\", i+\"_\"+j, Store.YES, Index.NO));\n          iwriter.addDocument(doc);\n          if (i>0) {\n            int k = i-1;\n            int n = j + k*M;\n            Document prevItereationDoc = reader.document(n);\n            assertNotNull(prevItereationDoc);\n            String id = prevItereationDoc.get(\"id\");\n            assertEquals(k+\"_\"+j, id);\n          }\n        }\n        iwriter.commit();\n        if (withReopen) {\n          // reopen\n          IndexReader r2 = reader.reopen();\n          if (reader != r2) {\n            reader.close();\n            reader = r2;\n          }\n        } else {\n          // recreate\n          reader.close();\n          reader = IndexReader.open(dir, false);\n        }\n      }\n    } finally {\n      iwriter.close();\n      reader.close();\n    }\n  }\n\n","sourceOld":"  private void doTestReopenWithCommit (Directory dir, boolean withReopen) throws IOException {\n    IndexWriter iwriter = new IndexWriter(dir, new KeywordAnalyzer(), true, MaxFieldLength.LIMITED);\n    iwriter.setMergeScheduler(new SerialMergeScheduler());\n    IndexReader reader = IndexReader.open(dir, false);\n    try {\n      int M = 3;\n      for (int i=0; i<4; i++) {\n        for (int j=0; j<M; j++) {\n          Document doc = new Document();\n          doc.add(new Field(\"id\", i+\"_\"+j, Store.YES, Index.NOT_ANALYZED));\n          doc.add(new Field(\"id2\", i+\"_\"+j, Store.YES, Index.NOT_ANALYZED_NO_NORMS));\n          doc.add(new Field(\"id3\", i+\"_\"+j, Store.YES, Index.NO));\n          iwriter.addDocument(doc);\n          if (i>0) {\n            int k = i-1;\n            int n = j + k*M;\n            Document prevItereationDoc = reader.document(n);\n            assertNotNull(prevItereationDoc);\n            String id = prevItereationDoc.get(\"id\");\n            assertEquals(k+\"_\"+j, id);\n          }\n        }\n        iwriter.commit();\n        if (withReopen) {\n          // reopen\n          IndexReader r2 = reader.reopen();\n          if (reader != r2) {\n            reader.close();\n            reader = r2;\n          }\n        } else {\n          // recreate\n          reader.close();\n          reader = IndexReader.open(dir, false);\n        }\n      }\n    } finally {\n      iwriter.close();\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}