{"path":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#BytesRefArray(Counter).mjava","commits":[{"id":"ce73f585d17f53055185a19beb46db23d76e0ad9","date":1353077110,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#BytesRefArray(Counter).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefList#BytesRefList().mjava","sourceNew":"  /**\n   * Creates a new {@link BytesRefArray} with a counter to track allocated bytes\n   */\n  public BytesRefArray(Counter bytesUsed) {\n    this.pool = new ByteBlockPool(new ByteBlockPool.DirectTrackingAllocator(\n        bytesUsed));\n    pool.nextBuffer();\n    bytesUsed.addAndGet(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER\n        + RamUsageEstimator.NUM_BYTES_INT);\n    this.bytesUsed = bytesUsed;\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link BytesRefList}\n   */\n  public BytesRefList() {\n    this.pool = new ByteBlockPool(new ByteBlockPool.DirectTrackingAllocator(\n        bytesUsed));\n    pool.nextBuffer();\n    bytesUsed.addAndGet(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER\n        + RamUsageEstimator.NUM_BYTES_INT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"847d1294c8ff2f0172af20892ef98a1c6a952e09","date":1359503775,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#BytesRefArray(Counter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#BytesRefArray(Counter).mjava","sourceNew":"  /**\n   * Creates a new {@link BytesRefArray} with a counter to track allocated bytes\n   */\n  public BytesRefArray(Counter bytesUsed) {\n    this.pool = new ByteBlockPool(new ByteBlockPool.DirectTrackingAllocator(\n        bytesUsed));\n    pool.nextBuffer();\n    bytesUsed.addAndGet(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER\n        + RamUsageEstimator.NUM_BYTES_INT);\n    this.bytesUsed = bytesUsed;\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link BytesRefArray} with a counter to track allocated bytes\n   */\n  public BytesRefArray(Counter bytesUsed) {\n    this.pool = new ByteBlockPool(new ByteBlockPool.DirectTrackingAllocator(\n        bytesUsed));\n    pool.nextBuffer();\n    bytesUsed.addAndGet(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER\n        + RamUsageEstimator.NUM_BYTES_INT);\n    this.bytesUsed = bytesUsed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36f5a8c57e16c0f801006a52f87c75378427852e","date":1393256707,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#BytesRefArray(Counter).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#BytesRefArray(Counter).mjava","sourceNew":"  /**\n   * Creates a new {@link BytesRefArray} with a counter to track allocated bytes\n   */\n  public BytesRefArray(Counter bytesUsed) {\n    this.pool = new ByteBlockPool(new ByteBlockPool.DirectTrackingAllocator(\n        bytesUsed));\n    pool.nextBuffer();\n    bytesUsed.addAndGet(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER\n        + RamUsageEstimator.NUM_BYTES_INT);\n    this.bytesUsed = bytesUsed;\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link BytesRefArray} with a counter to track allocated bytes\n   */\n  public BytesRefArray(Counter bytesUsed) {\n    this.pool = new ByteBlockPool(new ByteBlockPool.DirectTrackingAllocator(\n        bytesUsed));\n    pool.nextBuffer();\n    bytesUsed.addAndGet(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER\n        + RamUsageEstimator.NUM_BYTES_INT);\n    this.bytesUsed = bytesUsed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba791bce8103c79e38f957e9c5a53a75871bd918","date":1393539206,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#BytesRefArray(Counter).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#BytesRefArray(Counter).mjava","sourceNew":"  /**\n   * Creates a new {@link BytesRefArray} with a counter to track allocated bytes\n   */\n  public BytesRefArray(Counter bytesUsed) {\n    this.pool = new ByteBlockPool(new ByteBlockPool.DirectTrackingAllocator(\n        bytesUsed));\n    pool.nextBuffer();\n    bytesUsed.addAndGet(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER\n        + RamUsageEstimator.NUM_BYTES_INT);\n    this.bytesUsed = bytesUsed;\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link BytesRefArray} with a counter to track allocated bytes\n   */\n  public BytesRefArray(Counter bytesUsed) {\n    this.pool = new ByteBlockPool(new ByteBlockPool.DirectTrackingAllocator(\n        bytesUsed));\n    pool.nextBuffer();\n    bytesUsed.addAndGet(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER\n        + RamUsageEstimator.NUM_BYTES_INT);\n    this.bytesUsed = bytesUsed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f226a8b088dd9c8f6ab287a77237c4aa00a238e5","date":1456187572,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#BytesRefArray(Counter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#BytesRefArray(Counter).mjava","sourceNew":"  /**\n   * Creates a new {@link BytesRefArray} with a counter to track allocated bytes\n   */\n  public BytesRefArray(Counter bytesUsed) {\n    this.pool = new ByteBlockPool(new ByteBlockPool.DirectTrackingAllocator(\n        bytesUsed));\n    pool.nextBuffer();\n    bytesUsed.addAndGet(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER * Integer.BYTES);\n    this.bytesUsed = bytesUsed;\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link BytesRefArray} with a counter to track allocated bytes\n   */\n  public BytesRefArray(Counter bytesUsed) {\n    this.pool = new ByteBlockPool(new ByteBlockPool.DirectTrackingAllocator(\n        bytesUsed));\n    pool.nextBuffer();\n    bytesUsed.addAndGet(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER\n        + RamUsageEstimator.NUM_BYTES_INT);\n    this.bytesUsed = bytesUsed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"419a8f52c6635419beb951255cacbbb281044c57","date":1456189353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#BytesRefArray(Counter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#BytesRefArray(Counter).mjava","sourceNew":"  /**\n   * Creates a new {@link BytesRefArray} with a counter to track allocated bytes\n   */\n  public BytesRefArray(Counter bytesUsed) {\n    this.pool = new ByteBlockPool(new ByteBlockPool.DirectTrackingAllocator(\n        bytesUsed));\n    pool.nextBuffer();\n    bytesUsed.addAndGet(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER * Integer.BYTES);\n    this.bytesUsed = bytesUsed;\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link BytesRefArray} with a counter to track allocated bytes\n   */\n  public BytesRefArray(Counter bytesUsed) {\n    this.pool = new ByteBlockPool(new ByteBlockPool.DirectTrackingAllocator(\n        bytesUsed));\n    pool.nextBuffer();\n    bytesUsed.addAndGet(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER\n        + RamUsageEstimator.NUM_BYTES_INT);\n    this.bytesUsed = bytesUsed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ce73f585d17f53055185a19beb46db23d76e0ad9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","36f5a8c57e16c0f801006a52f87c75378427852e"],"36f5a8c57e16c0f801006a52f87c75378427852e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"419a8f52c6635419beb951255cacbbb281044c57":["ba791bce8103c79e38f957e9c5a53a75871bd918","f226a8b088dd9c8f6ab287a77237c4aa00a238e5"],"f226a8b088dd9c8f6ab287a77237c4aa00a238e5":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"847d1294c8ff2f0172af20892ef98a1c6a952e09":["ce73f585d17f53055185a19beb46db23d76e0ad9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["419a8f52c6635419beb951255cacbbb281044c57"]},"commit2Childs":{"ce73f585d17f53055185a19beb46db23d76e0ad9":["847d1294c8ff2f0172af20892ef98a1c6a952e09"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["419a8f52c6635419beb951255cacbbb281044c57","f226a8b088dd9c8f6ab287a77237c4aa00a238e5"],"36f5a8c57e16c0f801006a52f87c75378427852e":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ce73f585d17f53055185a19beb46db23d76e0ad9","ba791bce8103c79e38f957e9c5a53a75871bd918","36f5a8c57e16c0f801006a52f87c75378427852e"],"419a8f52c6635419beb951255cacbbb281044c57":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f226a8b088dd9c8f6ab287a77237c4aa00a238e5":["419a8f52c6635419beb951255cacbbb281044c57"],"847d1294c8ff2f0172af20892ef98a1c6a952e09":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["847d1294c8ff2f0172af20892ef98a1c6a952e09","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}