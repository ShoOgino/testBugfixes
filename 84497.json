{"path":"lucene/queries/src/java/org/apache/lucene/queries/intervals/CachingMatchesIterator#getSubMatches(int).mjava","commits":[{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/intervals/CachingMatchesIterator#getSubMatches(int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/CachingMatchesIterator#getSubMatches(int).mjava","sourceNew":"  MatchesIterator getSubMatches(int endPos) throws IOException {\n    if (endPosition() <= endPos) {\n      cache();\n    }\n    return new MatchesIterator() {\n\n      int upto = -1;\n\n      @Override\n      public boolean next() {\n        upto++;\n        return upto < count;\n      }\n\n      @Override\n      public int startPosition() {\n        return posAndOffsets[upto * 4];\n      }\n\n      @Override\n      public int endPosition() {\n        return posAndOffsets[upto * 4 + 1];\n      }\n\n      @Override\n      public int startOffset() {\n        return posAndOffsets[upto * 4 + 2];\n      }\n\n      @Override\n      public int endOffset() {\n        return posAndOffsets[upto * 4 + 3];\n      }\n\n      @Override\n      public MatchesIterator getSubMatches() {\n        return null;\n      }\n\n      @Override\n      public Query getQuery() {\n        throw new UnsupportedOperationException();\n      }\n    };\n  }\n\n","sourceOld":"  MatchesIterator getSubMatches(int endPos) throws IOException {\n    if (endPosition() <= endPos) {\n      cache();\n    }\n    return new MatchesIterator() {\n\n      int upto = -1;\n\n      @Override\n      public boolean next() {\n        upto++;\n        return upto < count;\n      }\n\n      @Override\n      public int startPosition() {\n        return posAndOffsets[upto * 4];\n      }\n\n      @Override\n      public int endPosition() {\n        return posAndOffsets[upto * 4 + 1];\n      }\n\n      @Override\n      public int startOffset() {\n        return posAndOffsets[upto * 4 + 2];\n      }\n\n      @Override\n      public int endOffset() {\n        return posAndOffsets[upto * 4 + 3];\n      }\n\n      @Override\n      public MatchesIterator getSubMatches() {\n        return null;\n      }\n\n      @Override\n      public Query getQuery() {\n        throw new UnsupportedOperationException();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68a600ba48cf2abfb5af305ebbf96bb6e2d820ea","date":1574601528,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/intervals/CachingMatchesIterator#getSubMatches(int).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/intervals/CachingMatchesIterator#getSubMatches(int).mjava","sourceNew":"  MatchesIterator getSubMatches(int endPos) throws IOException {\n    if (endPosition() <= endPos) {\n      cache();\n    }\n    return new MatchesIterator() {\n\n      int upto = -1;\n\n      @Override\n      public boolean next() {\n        upto++;\n        return upto < count;\n      }\n\n      @Override\n      public int startPosition() {\n        return posAndOffsets[upto * 4];\n      }\n\n      @Override\n      public int endPosition() {\n        return posAndOffsets[upto * 4 + 1];\n      }\n\n      @Override\n      public int startOffset() {\n        return posAndOffsets[upto * 4 + 2];\n      }\n\n      @Override\n      public int endOffset() {\n        return posAndOffsets[upto * 4 + 3];\n      }\n\n      @Override\n      public MatchesIterator getSubMatches() {\n        return null;\n      }\n\n      @Override\n      public Query getQuery() {\n        return matchingQueries[upto];\n      }\n    };\n  }\n\n","sourceOld":"  MatchesIterator getSubMatches(int endPos) throws IOException {\n    if (endPosition() <= endPos) {\n      cache();\n    }\n    return new MatchesIterator() {\n\n      int upto = -1;\n\n      @Override\n      public boolean next() {\n        upto++;\n        return upto < count;\n      }\n\n      @Override\n      public int startPosition() {\n        return posAndOffsets[upto * 4];\n      }\n\n      @Override\n      public int endPosition() {\n        return posAndOffsets[upto * 4 + 1];\n      }\n\n      @Override\n      public int startOffset() {\n        return posAndOffsets[upto * 4 + 2];\n      }\n\n      @Override\n      public int endOffset() {\n        return posAndOffsets[upto * 4 + 3];\n      }\n\n      @Override\n      public MatchesIterator getSubMatches() {\n        return null;\n      }\n\n      @Override\n      public Query getQuery() {\n        throw new UnsupportedOperationException();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"68a600ba48cf2abfb5af305ebbf96bb6e2d820ea":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68a600ba48cf2abfb5af305ebbf96bb6e2d820ea"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["68a600ba48cf2abfb5af305ebbf96bb6e2d820ea"],"68a600ba48cf2abfb5af305ebbf96bb6e2d820ea":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}