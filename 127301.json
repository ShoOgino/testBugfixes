{"path":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","commits":[{"id":"415fc059c6f2340aed1714220b9578c3f66ed09c","date":1366942705,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","pathOld":"/dev/null","sourceNew":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-warmer.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(indexSchema);\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5cedf6c663f63b47755a40ae6cd1405a7fe6b24d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0","date":1422781929,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","sourceNew":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-warmer.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","sourceOld":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-warmer.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(indexSchema);\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cedf6c663f63b47755a40ae6cd1405a7fe6b24d","date":1435939256,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","sourceNew":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameWarmer, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","sourceOld":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-warmer.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","bugFix":["415fc059c6f2340aed1714220b9578c3f66ed09c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0d5133e42b1e15c059bf161799dec4fd263bce8","date":1452251193,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","sourceNew":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameWarmer, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","sourceOld":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameWarmer, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ea771da4621a28e1340bdaeb615d8553e4d7c9d","date":1455040025,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","sourceNew":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, random().nextBoolean() ? solrConfigFileNameWarmerRandomMergePolicy : solrConfigFileNameWarmerRandomMergePolicyFactory, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","sourceOld":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameWarmer, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70d848516a5d0b23d183a2ceb4f4fb8634205956","date":1496408348,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","sourceNew":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameWarmerRandomMergePolicyFactory, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","sourceOld":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, random().nextBoolean() ? solrConfigFileNameWarmerRandomMergePolicy : solrConfigFileNameWarmerRandomMergePolicyFactory, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","sourceNew":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameWarmerRandomMergePolicyFactory, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","sourceOld":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, random().nextBoolean() ? solrConfigFileNameWarmerRandomMergePolicy : solrConfigFileNameWarmerRandomMergePolicyFactory, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","sourceNew":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameWarmerRandomMergePolicyFactory, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","sourceOld":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, random().nextBoolean() ? solrConfigFileNameWarmerRandomMergePolicy : solrConfigFileNameWarmerRandomMergePolicyFactory, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96","date":1576143009,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","sourceNew":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameWarmerRandomMergePolicyFactory, null, true);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","sourceOld":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameWarmerRandomMergePolicyFactory, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","sourceNew":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameWarmerRandomMergePolicyFactory, null, true);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","sourceOld":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameWarmerRandomMergePolicyFactory, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testMergedSegmentWarmerIndexConfigCreation().mjava","sourceNew":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameWarmerRandomMergePolicyFactory);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","sourceOld":"  public void testMergedSegmentWarmerIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameWarmerRandomMergePolicyFactory, null, true);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertNotNull(solrIndexConfig.mergedSegmentWarmerInfo);\n    assertEquals(SimpleMergedSegmentWarmer.class.getName(),\n        solrIndexConfig.mergedSegmentWarmerInfo.className);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(SimpleMergedSegmentWarmer.class, iwc.getMergedSegmentWarmer().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5cedf6c663f63b47755a40ae6cd1405a7fe6b24d":["5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0"],"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96":["28288370235ed02234a64753cdbf0c6ec096304a"],"70d848516a5d0b23d183a2ceb4f4fb8634205956":["1ea771da4621a28e1340bdaeb615d8553e4d7c9d"],"28288370235ed02234a64753cdbf0c6ec096304a":["1ea771da4621a28e1340bdaeb615d8553e4d7c9d","70d848516a5d0b23d183a2ceb4f4fb8634205956"],"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0":["415fc059c6f2340aed1714220b9578c3f66ed09c"],"df724d84dab24a0cc54bec95a8680867adc7f171":["28288370235ed02234a64753cdbf0c6ec096304a","ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"1ea771da4621a28e1340bdaeb615d8553e4d7c9d":["f0d5133e42b1e15c059bf161799dec4fd263bce8"],"f0d5133e42b1e15c059bf161799dec4fd263bce8":["5cedf6c663f63b47755a40ae6cd1405a7fe6b24d"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["1ea771da4621a28e1340bdaeb615d8553e4d7c9d","70d848516a5d0b23d183a2ceb4f4fb8634205956"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"415fc059c6f2340aed1714220b9578c3f66ed09c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"]},"commit2Childs":{"5cedf6c663f63b47755a40ae6cd1405a7fe6b24d":["f0d5133e42b1e15c059bf161799dec4fd263bce8"],"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96":["df724d84dab24a0cc54bec95a8680867adc7f171","ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"70d848516a5d0b23d183a2ceb4f4fb8634205956":["28288370235ed02234a64753cdbf0c6ec096304a","e9017cf144952056066919f1ebc7897ff9bd71b1"],"28288370235ed02234a64753cdbf0c6ec096304a":["ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96","df724d84dab24a0cc54bec95a8680867adc7f171"],"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0":["5cedf6c663f63b47755a40ae6cd1405a7fe6b24d"],"df724d84dab24a0cc54bec95a8680867adc7f171":[],"1ea771da4621a28e1340bdaeb615d8553e4d7c9d":["70d848516a5d0b23d183a2ceb4f4fb8634205956","28288370235ed02234a64753cdbf0c6ec096304a","e9017cf144952056066919f1ebc7897ff9bd71b1"],"f0d5133e42b1e15c059bf161799dec4fd263bce8":["1ea771da4621a28e1340bdaeb615d8553e4d7c9d"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["415fc059c6f2340aed1714220b9578c3f66ed09c"],"415fc059c6f2340aed1714220b9578c3f66ed09c":["5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["df724d84dab24a0cc54bec95a8680867adc7f171","e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}