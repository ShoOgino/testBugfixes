{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,ClusterState.CollectionRef]).mjava","commits":[{"id":"c9eee76c6a8ac63dd88a66571d553973ea0a1131","date":1480015269,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,ClusterState.CollectionRef]).mjava","pathOld":"/dev/null","sourceNew":"  private CloudSolrClient.ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, ClusterState.CollectionRef> colls) {\n    return new CloudSolrClient.ClusterStateProvider() {\n      @Override\n      public ClusterState.CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> liveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public Map<String, Object> getClusterProperties() {\n        return Collections.EMPTY_MAP;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public void connect() { }\n\n      @Override\n      public void close() throws IOException {\n\n      }\n    };\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,ClusterState.CollectionRef]).mjava","pathOld":"/dev/null","sourceNew":"  private CloudSolrClient.ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, ClusterState.CollectionRef> colls) {\n    return new CloudSolrClient.ClusterStateProvider() {\n      @Override\n      public ClusterState.CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> liveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public Map<String, Object> getClusterProperties() {\n        return Collections.EMPTY_MAP;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public void connect() { }\n\n      @Override\n      public void close() throws IOException {\n\n      }\n    };\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf","date":1491191579,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,CollectionRef]).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,ClusterState.CollectionRef]).mjava","sourceNew":"  private CloudSolrClient.ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, CollectionRef> colls) {\n    return new CloudSolrClient.ClusterStateProvider() {\n      @Override\n      public CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> liveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public Map<String, Object> getClusterProperties() {\n        return Collections.EMPTY_MAP;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public void connect() { }\n\n      @Override\n      public Map<String, CollectionRef> getCollections() {\n        return Collections.emptyMap();\n      }\n\n      @Override\n      public void close() throws IOException {\n\n      }\n    };\n\n  }\n\n","sourceOld":"  private CloudSolrClient.ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, ClusterState.CollectionRef> colls) {\n    return new CloudSolrClient.ClusterStateProvider() {\n      @Override\n      public ClusterState.CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> liveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public Map<String, Object> getClusterProperties() {\n        return Collections.EMPTY_MAP;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public void connect() { }\n\n      @Override\n      public void close() throws IOException {\n\n      }\n    };\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a64b273d51a6540272668680ece9f8b686ff0004","date":1492404078,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,ClusterState.CollectionRef]).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,ClusterState.CollectionRef]).mjava","sourceNew":"  private CloudSolrClient.ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, ClusterState.CollectionRef> colls) {\n    return new CloudSolrClient.ClusterStateProvider() {\n      @Override\n      public ClusterState.CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> liveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public void connect() { }\n\n      @Override\n      public void close() throws IOException {\n\n      }\n\n      @Override\n      public Object getClusterProperty(String propertyName) {\n        return null;\n      }\n\n      @Override\n      public Object getClusterProperty(String propertyName, String def) {\n        return def;\n      }\n    };\n\n  }\n\n","sourceOld":"  private CloudSolrClient.ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, ClusterState.CollectionRef> colls) {\n    return new CloudSolrClient.ClusterStateProvider() {\n      @Override\n      public ClusterState.CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> liveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public Map<String, Object> getClusterProperties() {\n        return Collections.EMPTY_MAP;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public void connect() { }\n\n      @Override\n      public void close() throws IOException {\n\n      }\n    };\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"095183bbba1ca16181a207a7d4d1c394573aaf39","date":1492465186,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,ClusterState.CollectionRef]).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,ClusterState.CollectionRef]).mjava","sourceNew":"  private ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, ClusterState.CollectionRef> colls) {\n    return new ClusterStateProvider() {\n      @Override\n      public ClusterState.CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> liveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public void connect() { }\n\n      @Override\n      public void close() throws IOException {\n\n      }\n\n      @Override\n      public Object getClusterProperty(String propertyName) {\n        return null;\n      }\n\n      @Override\n      public Object getClusterProperty(String propertyName, String def) {\n        return def;\n      }\n    };\n\n  }\n\n","sourceOld":"  private CloudSolrClient.ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, ClusterState.CollectionRef> colls) {\n    return new CloudSolrClient.ClusterStateProvider() {\n      @Override\n      public ClusterState.CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> liveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public void connect() { }\n\n      @Override\n      public void close() throws IOException {\n\n      }\n\n      @Override\n      public Object getClusterProperty(String propertyName) {\n        return null;\n      }\n\n      @Override\n      public Object getClusterProperty(String propertyName, String def) {\n        return def;\n      }\n    };\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,ClusterState.CollectionRef]).mjava","pathOld":"/dev/null","sourceNew":"  private ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, ClusterState.CollectionRef> colls) {\n    return new ClusterStateProvider() {\n      @Override\n      public CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> liveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public void connect() { }\n\n      @Override\n      public void close() throws IOException {\n\n      }\n\n      @Override\n      public Object getClusterProperty(String propertyName) {\n        return null;\n      }\n\n      @Override\n      public Object getClusterProperty(String propertyName, String def) {\n        return def;\n      }\n    };\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee4f83c392cabe2a9950dce0c3b8600e5634129b","date":1498030441,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,ClusterState.CollectionRef]).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,ClusterState.CollectionRef]).mjava","sourceNew":"  private ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, ClusterState.CollectionRef> colls) {\n    return new ClusterStateProvider() {\n      @Override\n      public ClusterState.CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> liveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public void connect() { }\n\n      @Override\n      public void close() throws IOException {\n\n      }\n\n      @Override\n      public Object getClusterProperty(String propertyName) {\n        return null;\n      }\n\n      @Override\n      public Object getClusterProperty(String propertyName, String def) {\n        return def;\n      }\n    };\n\n  }\n\n","sourceOld":"  private ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, ClusterState.CollectionRef> colls) {\n    return new ClusterStateProvider() {\n      @Override\n      public CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> liveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public void connect() { }\n\n      @Override\n      public void close() throws IOException {\n\n      }\n\n      @Override\n      public Object getClusterProperty(String propertyName) {\n        return null;\n      }\n\n      @Override\n      public Object getClusterProperty(String propertyName, String def) {\n        return def;\n      }\n    };\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85212dad4ed576c7f7e6c165ee19e597b7b4efc8","date":1507997740,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,ClusterState.CollectionRef]).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,ClusterState.CollectionRef]).mjava","sourceNew":"  private ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, ClusterState.CollectionRef> colls) {\n    return new DelegatingClusterStateProvider(null) {\n      @Override\n      public ClusterState.CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> getLiveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public <T> T getClusterProperty(String propertyName, T def) {\n        return def;\n      }\n    };\n\n  }\n\n","sourceOld":"  private ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, ClusterState.CollectionRef> colls) {\n    return new ClusterStateProvider() {\n      @Override\n      public ClusterState.CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> liveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public void connect() { }\n\n      @Override\n      public void close() throws IOException {\n\n      }\n\n      @Override\n      public Object getClusterProperty(String propertyName) {\n        return null;\n      }\n\n      @Override\n      public Object getClusterProperty(String propertyName, String def) {\n        return def;\n      }\n    };\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b824daa61db3f30b91a22213d6c04e1fa2e2b06","date":1508385744,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,ClusterState.CollectionRef]).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientCacheTest#getStateProvider(Set[String],Map[String,ClusterState.CollectionRef]).mjava","sourceNew":"  private ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, ClusterState.CollectionRef> colls) {\n    return new DelegatingClusterStateProvider(null) {\n      @Override\n      public ClusterState.CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> getLiveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public List<String> resolveAlias(String collection) {\n        return Collections.singletonList(collection);\n      }\n\n      @Override\n      public <T> T getClusterProperty(String propertyName, T def) {\n        return def;\n      }\n    };\n\n  }\n\n","sourceOld":"  private ClusterStateProvider getStateProvider(Set<String> livenodes,\n                                                                Map<String, ClusterState.CollectionRef> colls) {\n    return new DelegatingClusterStateProvider(null) {\n      @Override\n      public ClusterState.CollectionRef getState(String collection) {\n        return colls.get(collection);\n      }\n\n      @Override\n      public Set<String> getLiveNodes() {\n        return livenodes;\n      }\n\n      @Override\n      public String getAlias(String collection) {\n        return collection;\n      }\n\n      @Override\n      public String getCollectionName(String name) {\n        return name;\n      }\n\n      @Override\n      public <T> T getClusterProperty(String propertyName, T def) {\n        return def;\n      }\n    };\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee4f83c392cabe2a9950dce0c3b8600e5634129b":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf"],"6b824daa61db3f30b91a22213d6c04e1fa2e2b06":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"727bb765ff2542275f6d31f67be18d7104bae148":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c9eee76c6a8ac63dd88a66571d553973ea0a1131"],"a64b273d51a6540272668680ece9f8b686ff0004":["c9eee76c6a8ac63dd88a66571d553973ea0a1131"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["095183bbba1ca16181a207a7d4d1c394573aaf39"],"095183bbba1ca16181a207a7d4d1c394573aaf39":["a64b273d51a6540272668680ece9f8b686ff0004"],"ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf":["c9eee76c6a8ac63dd88a66571d553973ea0a1131"],"c9eee76c6a8ac63dd88a66571d553973ea0a1131":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6b824daa61db3f30b91a22213d6c04e1fa2e2b06"]},"commit2Childs":{"ee4f83c392cabe2a9950dce0c3b8600e5634129b":[],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["ee4f83c392cabe2a9950dce0c3b8600e5634129b"],"6b824daa61db3f30b91a22213d6c04e1fa2e2b06":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"727bb765ff2542275f6d31f67be18d7104bae148":[],"a64b273d51a6540272668680ece9f8b686ff0004":["095183bbba1ca16181a207a7d4d1c394573aaf39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["727bb765ff2542275f6d31f67be18d7104bae148","c9eee76c6a8ac63dd88a66571d553973ea0a1131"],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["6b824daa61db3f30b91a22213d6c04e1fa2e2b06"],"ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb"],"095183bbba1ca16181a207a7d4d1c394573aaf39":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"c9eee76c6a8ac63dd88a66571d553973ea0a1131":["727bb765ff2542275f6d31f67be18d7104bae148","a64b273d51a6540272668680ece9f8b686ff0004","ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ee4f83c392cabe2a9950dce0c3b8600e5634129b","727bb765ff2542275f6d31f67be18d7104bae148","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}