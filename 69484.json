{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter.ResolveUpdatesEvent#process(IndexWriter,boolean,boolean).mjava","commits":[{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter.ResolveUpdatesEvent#process(IndexWriter,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter.MergePendingEvent#process(IndexWriter,boolean,boolean).mjava","sourceNew":"    @Override\n    public void process(IndexWriter writer, boolean triggerMerge, boolean forcePurge) throws IOException {\n      try {\n        packet.apply(writer);\n      } catch (Throwable t) {\n        writer.tragicEvent(t, \"applyUpdatesPacket\");\n      }\n      writer.flushDeletesCount.incrementAndGet();\n    }\n\n","sourceOld":"    @Override\n    public void process(IndexWriter writer, boolean triggerMerge, boolean forcePurge) throws IOException {\n      writer.doAfterSegmentFlushed(triggerMerge, forcePurge);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter.ResolveUpdatesEvent#process(IndexWriter,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter.MergePendingEvent#process(IndexWriter,boolean,boolean).mjava","sourceNew":"    @Override\n    public void process(IndexWriter writer, boolean triggerMerge, boolean forcePurge) throws IOException {\n      try {\n        packet.apply(writer);\n      } catch (Throwable t) {\n        writer.tragicEvent(t, \"applyUpdatesPacket\");\n      }\n      writer.flushDeletesCount.incrementAndGet();\n    }\n\n","sourceOld":"    @Override\n    public void process(IndexWriter writer, boolean triggerMerge, boolean forcePurge) throws IOException {\n      writer.doAfterSegmentFlushed(triggerMerge, forcePurge);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter.ResolveUpdatesEvent#process(IndexWriter,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void process(IndexWriter writer, boolean triggerMerge, boolean forcePurge) throws IOException {\n      try {\n        packet.apply(writer);\n      } catch (Throwable t) {\n        writer.tragicEvent(t, \"applyUpdatesPacket\");\n      }\n      writer.flushDeletesCount.incrementAndGet();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"845b760a99e5f369fcd0a5d723a87b8def6a3f56","date":1521117993,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter.ResolveUpdatesEvent#process(IndexWriter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter.ResolveUpdatesEvent#process(IndexWriter,boolean,boolean).mjava","sourceNew":"    @Override\n    public void process(IndexWriter writer) throws IOException {\n      try {\n        packet.apply(writer);\n      } catch (Throwable t) {\n        try {\n          writer.onTragicEvent(t, \"applyUpdatesPacket\");\n        } finally {\n          throw t;\n        }\n      }\n      writer.flushDeletesCount.incrementAndGet();\n    }\n\n","sourceOld":"    @Override\n    public void process(IndexWriter writer, boolean triggerMerge, boolean forcePurge) throws IOException {\n      try {\n        packet.apply(writer);\n      } catch (Throwable t) {\n        writer.tragicEvent(t, \"applyUpdatesPacket\");\n      }\n      writer.flushDeletesCount.incrementAndGet();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"845b760a99e5f369fcd0a5d723a87b8def6a3f56":["28288370235ed02234a64753cdbf0c6ec096304a"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["845b760a99e5f369fcd0a5d723a87b8def6a3f56"]},"commit2Childs":{"845b760a99e5f369fcd0a5d723a87b8def6a3f56":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["845b760a99e5f369fcd0a5d723a87b8def6a3f56"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}