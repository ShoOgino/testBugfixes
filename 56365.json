{"path":"lucene/core/src/java/org/apache/lucene/search/Weight.DefaultBulkScorer#score(Collector,int).mjava","commits":[{"id":"a5794e5c995c57444b154b01a9f3c837cd530a77","date":1394190201,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Weight.DefaultBulkScorer#score(Collector,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Weight.DefaultTopScorer#score(Collector,int).mjava","sourceNew":"    @Override\n    public boolean score(Collector collector, int max) throws IOException {\n      // TODO: this may be sort of weird, when we are\n      // embedded in a BooleanScorer, because we are\n      // called for every chunk of 2048 documents.  But,\n      // then, scorer is a FakeScorer in that case, so any\n      // Collector doing something \"interesting\" in\n      // setScorer will be forced to use BS2 anyways:\n      collector.setScorer(scorer);\n      if (scorer.docID() == -1) {\n        scorer.nextDoc();\n      }\n      int doc;\n      for (doc = scorer.docID(); doc < max; doc = scorer.nextDoc()) {\n        collector.collect(doc);\n      }\n      return doc != DocsEnum.NO_MORE_DOCS;\n    }\n\n","sourceOld":"    @Override\n    public boolean score(Collector collector, int max) throws IOException {\n      // TODO: this may be sort of weird, when we are\n      // embedded in a BooleanScorer, because we are\n      // called for every chunk of 2048 documents.  But,\n      // then, scorer is a FakeScorer in that case, so any\n      // Collector doing something \"interesting\" in\n      // setScorer will be forced to use BS2 anyways:\n      collector.setScorer(scorer);\n      if (scorer.docID() == -1) {\n        scorer.nextDoc();\n      }\n      int doc;\n      for (doc = scorer.docID(); doc < max; doc = scorer.nextDoc()) {\n        collector.collect(doc);\n      }\n      return doc != DocsEnum.NO_MORE_DOCS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acf00221f44c5f08ccea014f2492b53af15ecd66","date":1394568293,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Weight.DefaultBulkScorer#score(Collector,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean score(Collector collector, int max) throws IOException {\n      // TODO: this may be sort of weird, when we are\n      // embedded in a BooleanScorer, because we are\n      // called for every chunk of 2048 documents.  But,\n      // then, scorer is a FakeScorer in that case, so any\n      // Collector doing something \"interesting\" in\n      // setScorer will be forced to use BS2 anyways:\n      collector.setScorer(scorer);\n      if (scorer.docID() == -1) {\n        scorer.nextDoc();\n      }\n      int doc;\n      for (doc = scorer.docID(); doc < max; doc = scorer.nextDoc()) {\n        collector.collect(doc);\n      }\n      return doc != DocsEnum.NO_MORE_DOCS;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae73da626f97850c922c42736f808d0378e165f0","date":1396625460,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Weight.DefaultBulkScorer#score(LeafCollector,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Weight.DefaultBulkScorer#score(Collector,int).mjava","sourceNew":"    @Override\n    public boolean score(LeafCollector collector, int max) throws IOException {\n      // TODO: this may be sort of weird, when we are\n      // embedded in a BooleanScorer, because we are\n      // called for every chunk of 2048 documents.  But,\n      // then, scorer is a FakeScorer in that case, so any\n      // Collector doing something \"interesting\" in\n      // setScorer will be forced to use BS2 anyways:\n      collector.setScorer(scorer);\n      if (scorer.docID() == -1) {\n        scorer.nextDoc();\n      }\n      int doc;\n      for (doc = scorer.docID(); doc < max; doc = scorer.nextDoc()) {\n        collector.collect(doc);\n      }\n      return doc != DocsEnum.NO_MORE_DOCS;\n    }\n\n","sourceOld":"    @Override\n    public boolean score(Collector collector, int max) throws IOException {\n      // TODO: this may be sort of weird, when we are\n      // embedded in a BooleanScorer, because we are\n      // called for every chunk of 2048 documents.  But,\n      // then, scorer is a FakeScorer in that case, so any\n      // Collector doing something \"interesting\" in\n      // setScorer will be forced to use BS2 anyways:\n      collector.setScorer(scorer);\n      if (scorer.docID() == -1) {\n        scorer.nextDoc();\n      }\n      int doc;\n      for (doc = scorer.docID(); doc < max; doc = scorer.nextDoc()) {\n        collector.collect(doc);\n      }\n      return doc != DocsEnum.NO_MORE_DOCS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Weight.DefaultBulkScorer#score(LeafCollector,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Weight.DefaultBulkScorer#score(Collector,int).mjava","sourceNew":"    @Override\n    public boolean score(LeafCollector collector, int max) throws IOException {\n      // TODO: this may be sort of weird, when we are\n      // embedded in a BooleanScorer, because we are\n      // called for every chunk of 2048 documents.  But,\n      // then, scorer is a FakeScorer in that case, so any\n      // Collector doing something \"interesting\" in\n      // setScorer will be forced to use BS2 anyways:\n      collector.setScorer(scorer);\n      if (scorer.docID() == -1) {\n        scorer.nextDoc();\n      }\n      int doc;\n      for (doc = scorer.docID(); doc < max; doc = scorer.nextDoc()) {\n        collector.collect(doc);\n      }\n      return doc != DocsEnum.NO_MORE_DOCS;\n    }\n\n","sourceOld":"    @Override\n    public boolean score(Collector collector, int max) throws IOException {\n      // TODO: this may be sort of weird, when we are\n      // embedded in a BooleanScorer, because we are\n      // called for every chunk of 2048 documents.  But,\n      // then, scorer is a FakeScorer in that case, so any\n      // Collector doing something \"interesting\" in\n      // setScorer will be forced to use BS2 anyways:\n      collector.setScorer(scorer);\n      if (scorer.docID() == -1) {\n        scorer.nextDoc();\n      }\n      int doc;\n      for (doc = scorer.docID(); doc < max; doc = scorer.nextDoc()) {\n        collector.collect(doc);\n      }\n      return doc != DocsEnum.NO_MORE_DOCS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["acf00221f44c5f08ccea014f2492b53af15ecd66","ae73da626f97850c922c42736f808d0378e165f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae73da626f97850c922c42736f808d0378e165f0":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"a5794e5c995c57444b154b01a9f3c837cd530a77":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a5794e5c995c57444b154b01a9f3c837cd530a77"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae73da626f97850c922c42736f808d0378e165f0"]},"commit2Childs":{"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5794e5c995c57444b154b01a9f3c837cd530a77","acf00221f44c5f08ccea014f2492b53af15ecd66"],"ae73da626f97850c922c42736f808d0378e165f0":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a5794e5c995c57444b154b01a9f3c837cd530a77":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ae73da626f97850c922c42736f808d0378e165f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}