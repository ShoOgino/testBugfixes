{"path":"lucene/src/java/org/apache/lucene/util/SimpleStringInterner#SimpleStringInterner(int,int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/SimpleStringInterner#SimpleStringInterner(int,int).mjava","pathOld":"src/java/org/apache/lucene/util/SimpleStringInterner#SimpleStringInterner(int,int).mjava","sourceNew":"  /**\n   * @param tableSize  Size of the hash table, should be a power of two.\n   * @param maxChainLength  Maximum length of each bucket, after which the oldest item inserted is dropped.\n   */\n  public SimpleStringInterner(int tableSize, int maxChainLength) {\n    cache = new Entry[Math.max(1,BitUtil.nextHighestPowerOfTwo(tableSize))];\n    this.maxChainLength = Math.max(2,maxChainLength);\n  }\n\n","sourceOld":"  /**\n   * @param tableSize  Size of the hash table, should be a power of two.\n   * @param maxChainLength  Maximum length of each bucket, after which the oldest item inserted is dropped.\n   */\n  public SimpleStringInterner(int tableSize, int maxChainLength) {\n    cache = new Entry[Math.max(1,BitUtil.nextHighestPowerOfTwo(tableSize))];\n    this.maxChainLength = Math.max(2,maxChainLength);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153","date":1308670974,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/util/SimpleStringInterner#SimpleStringInterner(int,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * @param tableSize  Size of the hash table, should be a power of two.\n   * @param maxChainLength  Maximum length of each bucket, after which the oldest item inserted is dropped.\n   */\n  public SimpleStringInterner(int tableSize, int maxChainLength) {\n    cache = new Entry[Math.max(1,BitUtil.nextHighestPowerOfTwo(tableSize))];\n    this.maxChainLength = Math.max(2,maxChainLength);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/util/SimpleStringInterner#SimpleStringInterner(int,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * @param tableSize  Size of the hash table, should be a power of two.\n   * @param maxChainLength  Maximum length of each bucket, after which the oldest item inserted is dropped.\n   */\n  public SimpleStringInterner(int tableSize, int maxChainLength) {\n    cache = new Entry[Math.max(1,BitUtil.nextHighestPowerOfTwo(tableSize))];\n    this.maxChainLength = Math.max(2,maxChainLength);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/util/SimpleStringInterner#SimpleStringInterner(int,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * @param tableSize  Size of the hash table, should be a power of two.\n   * @param maxChainLength  Maximum length of each bucket, after which the oldest item inserted is dropped.\n   */\n  public SimpleStringInterner(int tableSize, int maxChainLength) {\n    cache = new Entry[Math.max(1,BitUtil.nextHighestPowerOfTwo(tableSize))];\n    this.maxChainLength = Math.max(2,maxChainLength);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2553b00f699380c64959ccb27991289aae87be2e":["9454a6510e2db155fb01faa5c049b06ece95fab9","fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["9454a6510e2db155fb01faa5c049b06ece95fab9","fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"2553b00f699380c64959ccb27991289aae87be2e":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fafef7c83fe8e0b3ca9298d5d75d6b943dc28153","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}