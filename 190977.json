{"path":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestRerankBase#loadModelAndFeatures(String,int,int).mjava","commits":[{"id":"58c36d634c9789cb739fbd175c1a8d50b3303f6b","date":1478022614,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestRerankBase#loadModelAndFeatures(String,int,int).mjava","pathOld":"/dev/null","sourceNew":"  protected static void loadModelAndFeatures(String name, int allFeatureCount,\n      int modelFeatureCount) throws Exception {\n    final String[] features = new String[modelFeatureCount];\n    final String[] weights = new String[modelFeatureCount];\n    for (int i = 0; i < allFeatureCount; i++) {\n      final String featureName = \"c\" + i;\n      if (i < modelFeatureCount) {\n        features[i] = featureName;\n        weights[i] = \"\\\"\" + featureName + \"\\\":1.0\";\n      }\n      loadFeature(featureName, ValueFeature.ValueFeatureWeight.class.getCanonicalName(),\n          \"{\\\"value\\\":\" + i + \"}\");\n    }\n\n    loadModel(name, LinearModel.class.getCanonicalName(), features,\n        \"{\\\"weights\\\":{\" + StringUtils.join(weights, \",\") + \"}}\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9720b151fde2073f4e401450f4574e5f31c2d0ff","date":1478184029,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestRerankBase#loadModelAndFeatures(String,int,int).mjava","pathOld":"/dev/null","sourceNew":"  protected static void loadModelAndFeatures(String name, int allFeatureCount,\n      int modelFeatureCount) throws Exception {\n    final String[] features = new String[modelFeatureCount];\n    final String[] weights = new String[modelFeatureCount];\n    for (int i = 0; i < allFeatureCount; i++) {\n      final String featureName = \"c\" + i;\n      if (i < modelFeatureCount) {\n        features[i] = featureName;\n        weights[i] = \"\\\"\" + featureName + \"\\\":1.0\";\n      }\n      loadFeature(featureName, ValueFeature.ValueFeatureWeight.class.getCanonicalName(),\n          \"{\\\"value\\\":\" + i + \"}\");\n    }\n\n    loadModel(name, LinearModel.class.getCanonicalName(), features,\n        \"{\\\"weights\\\":{\" + StringUtils.join(weights, \",\") + \"}}\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ac6494315d04f68950d2f00f5436b4861bcd467","date":1553125039,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestRerankBase#loadModelAndFeatures(String,int,int).mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestRerankBase#loadModelAndFeatures(String,int,int).mjava","sourceNew":"  protected static void loadModelAndFeatures(String name, int allFeatureCount,\n      int modelFeatureCount) throws Exception {\n    final String[] features = new String[modelFeatureCount];\n    final String[] weights = new String[modelFeatureCount];\n    for (int i = 0; i < allFeatureCount; i++) {\n      final String featureName = \"c\" + i;\n      if (i < modelFeatureCount) {\n        features[i] = featureName;\n        weights[i] = \"\\\"\" + featureName + \"\\\":1.0\";\n      }\n      loadFeature(featureName, ValueFeature.ValueFeatureWeight.class.getCanonicalName(),\n          \"{\\\"value\\\":\" + i + \"}\");\n    }\n\n    loadModel(name, LinearModel.class.getCanonicalName(), features,\n        \"{\\\"weights\\\":{\" + String.join(\",\", weights) + \"}}\");\n  }\n\n","sourceOld":"  protected static void loadModelAndFeatures(String name, int allFeatureCount,\n      int modelFeatureCount) throws Exception {\n    final String[] features = new String[modelFeatureCount];\n    final String[] weights = new String[modelFeatureCount];\n    for (int i = 0; i < allFeatureCount; i++) {\n      final String featureName = \"c\" + i;\n      if (i < modelFeatureCount) {\n        features[i] = featureName;\n        weights[i] = \"\\\"\" + featureName + \"\\\":1.0\";\n      }\n      loadFeature(featureName, ValueFeature.ValueFeatureWeight.class.getCanonicalName(),\n          \"{\\\"value\\\":\" + i + \"}\");\n    }\n\n    loadModel(name, LinearModel.class.getCanonicalName(), features,\n        \"{\\\"weights\\\":{\" + StringUtils.join(weights, \",\") + \"}}\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0ac6494315d04f68950d2f00f5436b4861bcd467":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0ac6494315d04f68950d2f00f5436b4861bcd467"]},"commit2Childs":{"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["0ac6494315d04f68950d2f00f5436b4861bcd467","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"0ac6494315d04f68950d2f00f5436b4861bcd467":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9720b151fde2073f4e401450f4574e5f31c2d0ff","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}