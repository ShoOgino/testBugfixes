{"path":"lucene/backwards/src/java/org/apache/lucene/document/Document#getBinaryValues(String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/document/Document#getBinaryValues(String).mjava","pathOld":"backwards/src/java/org/apache/lucene/document/Document#getBinaryValues(String).mjava","sourceNew":"  /**\n  * Returns an array of byte arrays for of the fields that have the name specified\n  * as the method parameter.  This method returns an empty\n  * array when there are no matching fields.  It never\n  * returns null.\n  *\n  * @param name the name of the field\n  * @return a <code>byte[][]</code> of binary field values\n  */\n  public final byte[][] getBinaryValues(String name) {\n    List<byte[]> result = new ArrayList<byte[]>();\n    for (Fieldable field : fields) {\n      if (field.name().equals(name) && (field.isBinary()))\n        result.add(field.getBinaryValue());\n    }\n  \n    if (result.size() == 0)\n      return NO_BYTES;\n  \n    return result.toArray(new byte[result.size()][]);\n  }\n\n","sourceOld":"  /**\n  * Returns an array of byte arrays for of the fields that have the name specified\n  * as the method parameter.  This method returns an empty\n  * array when there are no matching fields.  It never\n  * returns null.\n  *\n  * @param name the name of the field\n  * @return a <code>byte[][]</code> of binary field values\n  */\n  public final byte[][] getBinaryValues(String name) {\n    List<byte[]> result = new ArrayList<byte[]>();\n    for (Fieldable field : fields) {\n      if (field.name().equals(name) && (field.isBinary()))\n        result.add(field.getBinaryValue());\n    }\n  \n    if (result.size() == 0)\n      return NO_BYTES;\n  \n    return result.toArray(new byte[result.size()][]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/document/Document#getBinaryValues(String).mjava","sourceNew":null,"sourceOld":"  /**\n  * Returns an array of byte arrays for of the fields that have the name specified\n  * as the method parameter.  This method returns an empty\n  * array when there are no matching fields.  It never\n  * returns null.\n  *\n  * @param name the name of the field\n  * @return a <code>byte[][]</code> of binary field values\n  */\n  public final byte[][] getBinaryValues(String name) {\n    List<byte[]> result = new ArrayList<byte[]>();\n    for (Fieldable field : fields) {\n      if (field.name().equals(name) && (field.isBinary()))\n        result.add(field.getBinaryValue());\n    }\n  \n    if (result.size() == 0)\n      return NO_BYTES;\n  \n    return result.toArray(new byte[result.size()][]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}