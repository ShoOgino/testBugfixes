{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity#decodeNormValue(long).mjava","commits":[{"id":"496cc26fd7f5a8e2aa6c46d43e50860ef4225098","date":1372185568,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity#decodeNormValue(long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Decodes the norm value, assuming it is a single byte.\n   * \n   * @see #encodeNormValue(float)\n   */\n  @Override\n  public final float decodeNormValue(long norm) {\n    return NORM_TABLE[(int) (norm & 0xFF)];  // & 0xFF maps negative bytes to positive above 127\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity#decodeNormValue(long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Decodes the norm value, assuming it is a single byte.\n   * \n   * @see #encodeNormValue(float)\n   */\n  @Override\n  public final float decodeNormValue(long norm) {\n    return NORM_TABLE[(int) (norm & 0xFF)];  // & 0xFF maps negative bytes to positive above 127\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81d0720146de53dd3a4a023d2a3d1089d86d748d","date":1442268215,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/ClassicSimilarity#decodeNormValue(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity#decodeNormValue(long).mjava","sourceNew":"  /**\n   * Decodes the norm value, assuming it is a single byte.\n   * \n   * @see #encodeNormValue(float)\n   */\n  @Override\n  public final float decodeNormValue(long norm) {\n    return NORM_TABLE[(int) (norm & 0xFF)];  // & 0xFF maps negative bytes to positive above 127\n  }\n\n","sourceOld":"  /**\n   * Decodes the norm value, assuming it is a single byte.\n   * \n   * @see #encodeNormValue(float)\n   */\n  @Override\n  public final float decodeNormValue(long norm) {\n    return NORM_TABLE[(int) (norm & 0xFF)];  // & 0xFF maps negative bytes to positive above 127\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"496cc26fd7f5a8e2aa6c46d43e50860ef4225098":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","496cc26fd7f5a8e2aa6c46d43e50860ef4225098"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["496cc26fd7f5a8e2aa6c46d43e50860ef4225098"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["81d0720146de53dd3a4a023d2a3d1089d86d748d"]},"commit2Childs":{"496cc26fd7f5a8e2aa6c46d43e50860ef4225098":["37a0f60745e53927c4c876cfe5b5a58170f0646c","81d0720146de53dd3a4a023d2a3d1089d86d748d"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["496cc26fd7f5a8e2aa6c46d43e50860ef4225098","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}