{"path":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","sourceNew":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(\n        getFormatter(fieldName, params),\n        getEncoder(fieldName, params),\n        getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","sourceOld":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(\n        getFormatter(fieldName, params),\n        getEncoder(fieldName, params),\n        getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","sourceNew":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(\n        getFormatter(fieldName, params),\n        getEncoder(fieldName, params),\n        getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","sourceOld":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(\n        getFormatter(fieldName, params),\n        getEncoder(fieldName, params),\n        getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","sourceNew":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(\n        getFormatter(fieldName, params),\n        getEncoder(fieldName, params),\n        getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","sourceOld":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(\n        getFormatter(fieldName, params),\n        getEncoder(fieldName, params),\n        getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","sourceNew":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException If there is a low-level I/O error.\n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(\n        getFormatter(fieldName, params),\n        getEncoder(fieldName, params),\n        getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","sourceOld":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(\n        getFormatter(fieldName, params),\n        getEncoder(fieldName, params),\n        getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cad4d876350c7790594c78dc3c3fb1718bf06dc7","date":1417321437,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,TokenStream).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","sourceNew":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text tokenStream that implements reset() efficiently (e.g. CachingTokenFilter).\n   *                    If it's used, call reset() first.\n   * @throws IOException If there is a low-level I/O error.\n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, TokenStream tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = new Highlighter(\n        getFormatter(fieldName, params),\n        getEncoder(fieldName, params),\n        getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","sourceOld":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException If there is a low-level I/O error.\n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(\n        getFormatter(fieldName, params),\n        getEncoder(fieldName, params),\n        getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cad4d876350c7790594c78dc3c3fb1718bf06dc7":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cad4d876350c7790594c78dc3c3fb1718bf06dc7"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["cad4d876350c7790594c78dc3c3fb1718bf06dc7"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"cad4d876350c7790594c78dc3c3fb1718bf06dc7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}