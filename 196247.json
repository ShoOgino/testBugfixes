{"path":"solr/core/src/java/org/apache/solr/core/MetricsDirectoryFactory#init(NamedList).mjava","commits":[{"id":"2f7df713a0f1e310d18dd8da91c89a07a13f86f8","date":1483441921,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/MetricsDirectoryFactory#init(NamedList).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Currently the following arguments are supported:\n   * <ul>\n   *   <li><code>directoryDetails</code> - (optional bool) when true then additional detailed metrics\n   *   will be collected. These include eg. IO size histograms and per-file counters and histograms</li>\n   * </ul>\n   * @param args init args\n   */\n  @Override\n  public void init(NamedList args) {\n    // should be already inited\n    // in.init(args);\n    if (args == null) {\n      return;\n    }\n    Boolean dd = args.getBooleanArg(\"directoryDetails\");\n    if (dd != null) {\n      directoryDetails = dd;\n    } else {\n      directoryDetails = false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e1a852c0a44dbc28501a84f489c6ed85d1fb1ee8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/MetricsDirectoryFactory#init(NamedList).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Currently the following arguments are supported:\n   * <ul>\n   *   <li><code>directoryDetails</code> - (optional bool) when true then additional detailed metrics\n   *   will be collected. These include eg. IO size histograms and per-file counters and histograms</li>\n   * </ul>\n   * @param args init args\n   */\n  @Override\n  public void init(NamedList args) {\n    // should be already inited\n    // in.init(args);\n    if (args == null) {\n      return;\n    }\n    Boolean dd = args.getBooleanArg(\"directoryDetails\");\n    if (dd != null) {\n      directoryDetails = dd;\n    } else {\n      directoryDetails = false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1a852c0a44dbc28501a84f489c6ed85d1fb1ee8","date":1487166948,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/MetricsDirectoryFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/MetricsDirectoryFactory#init(NamedList).mjava","sourceNew":"  /**\n   * Currently the following arguments are supported:\n   * <ul>\n   *   <li><code>directory</code> - (optional bool, default false) when true then coarse-grained metrics will be collected.</li>\n   *   <li><code>directoryDetails</code> - (optional bool, default false) when true then additional detailed metrics\n   *   will be collected. These include eg. IO size histograms and per-file counters and histograms</li>\n   * </ul>\n   * NOTE: please be aware that collecting even coarse-grained metrics can have significant performance impact\n   * (see SOLR-10130).\n   * @param args init args\n   */\n  @Override\n  public void init(NamedList args) {\n    // should be already inited\n    // in.init(args);\n    if (args == null) {\n      return;\n    }\n    Boolean td = args.getBooleanArg(\"directory\");\n    if (td != null) {\n      directoryTotals = td;\n    } else {\n      directoryTotals = false;\n    }\n    Boolean dd = args.getBooleanArg(\"directoryDetails\");\n    if (dd != null) {\n      directoryDetails = dd;\n    } else {\n      directoryDetails = false;\n    }\n    if (directoryDetails) {\n      directoryTotals = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Currently the following arguments are supported:\n   * <ul>\n   *   <li><code>directoryDetails</code> - (optional bool) when true then additional detailed metrics\n   *   will be collected. These include eg. IO size histograms and per-file counters and histograms</li>\n   * </ul>\n   * @param args init args\n   */\n  @Override\n  public void init(NamedList args) {\n    // should be already inited\n    // in.init(args);\n    if (args == null) {\n      return;\n    }\n    Boolean dd = args.getBooleanArg(\"directoryDetails\");\n    if (dd != null) {\n      directoryDetails = dd;\n    } else {\n      directoryDetails = false;\n    }\n  }\n\n","bugFix":["2f7df713a0f1e310d18dd8da91c89a07a13f86f8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e037d4cc589a2acd147ea27ffc29b19d595be53f","date":1488209547,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/MetricsDirectoryFactory#init(NamedList).mjava","sourceNew":null,"sourceOld":"  /**\n   * Currently the following arguments are supported:\n   * <ul>\n   *   <li><code>directory</code> - (optional bool, default false) when true then coarse-grained metrics will be collected.</li>\n   *   <li><code>directoryDetails</code> - (optional bool, default false) when true then additional detailed metrics\n   *   will be collected. These include eg. IO size histograms and per-file counters and histograms</li>\n   * </ul>\n   * NOTE: please be aware that collecting even coarse-grained metrics can have significant performance impact\n   * (see SOLR-10130).\n   * @param args init args\n   */\n  @Override\n  public void init(NamedList args) {\n    // should be already inited\n    // in.init(args);\n    if (args == null) {\n      return;\n    }\n    Boolean td = args.getBooleanArg(\"directory\");\n    if (td != null) {\n      directoryTotals = td;\n    } else {\n      directoryTotals = false;\n    }\n    Boolean dd = args.getBooleanArg(\"directoryDetails\");\n    if (dd != null) {\n      directoryDetails = dd;\n    } else {\n      directoryDetails = false;\n    }\n    if (directoryDetails) {\n      directoryTotals = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e1a852c0a44dbc28501a84f489c6ed85d1fb1ee8":["2f7df713a0f1e310d18dd8da91c89a07a13f86f8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f7df713a0f1e310d18dd8da91c89a07a13f86f8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e037d4cc589a2acd147ea27ffc29b19d595be53f"],"e037d4cc589a2acd147ea27ffc29b19d595be53f":["e1a852c0a44dbc28501a84f489c6ed85d1fb1ee8"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2f7df713a0f1e310d18dd8da91c89a07a13f86f8"]},"commit2Childs":{"e1a852c0a44dbc28501a84f489c6ed85d1fb1ee8":["e037d4cc589a2acd147ea27ffc29b19d595be53f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2f7df713a0f1e310d18dd8da91c89a07a13f86f8","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"2f7df713a0f1e310d18dd8da91c89a07a13f86f8":["e1a852c0a44dbc28501a84f489c6ed85d1fb1ee8","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e037d4cc589a2acd147ea27ffc29b19d595be53f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}