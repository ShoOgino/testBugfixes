{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xSegmentInfoReader#read(Directory,String,IOContext).mjava","commits":[{"id":"ace9b78896617dcee984890f3300d45c539c1b15","date":1337655022,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xSegmentInfoReader#read(Directory,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xSegmentInfosReader#read(Directory,String,IOContext).mjava","sourceNew":"  @Override\n  public SegmentInfo read(Directory directory, String segmentName, IOContext context) throws IOException { \n    return read(directory, segmentName, Lucene3xSegmentInfoFormat.FORMAT_4X_UPGRADE, context);\n  }\n\n","sourceOld":"  @Override\n  public SegmentInfo read(Directory directory, String segmentName, IOContext context) throws IOException { \n    return read(directory, segmentName, Lucene3xSegmentInfosFormat.FORMAT_4X_UPGRADE, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6842f2837919389de395b2bb61824335f40e5431","date":1337865715,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xSegmentInfoReader#read(Directory,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xSegmentInfoReader#read(Directory,String,IOContext).mjava","sourceNew":"  @Override\n  public SegmentInfo read(Directory directory, String segmentName, IOContext context) throws IOException { \n    // NOTE: this is NOT how 3.x is really written...\n    String fileName = IndexFileNames.segmentFileName(segmentName, \"\", Lucene3xSegmentInfoFormat.SI_EXTENSION);\n\n    boolean success = false;\n\n    IndexInput input = directory.openInput(fileName, context);\n\n    try {\n      // nocommit: we need a version header\n      SegmentInfo si = readUpgradedSegmentInfo(segmentName, directory, input);\n      success = true;\n      return si;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(input);\n      } else {\n        input.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public SegmentInfo read(Directory directory, String segmentName, IOContext context) throws IOException { \n    return read(directory, segmentName, Lucene3xSegmentInfoFormat.FORMAT_4X_UPGRADE, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee3df95012e016c229172f87a6c4077957246c4a","date":1337867023,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xSegmentInfoReader#read(Directory,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xSegmentInfoReader#read(Directory,String,IOContext).mjava","sourceNew":"  @Override\n  public SegmentInfo read(Directory directory, String segmentName, IOContext context) throws IOException { \n    // NOTE: this is NOT how 3.x is really written...\n    String fileName = IndexFileNames.segmentFileName(segmentName, \"\", Lucene3xSegmentInfoFormat.UPGRADED_SI_EXTENSION);\n\n    boolean success = false;\n\n    IndexInput input = directory.openInput(fileName, context);\n\n    try {\n      SegmentInfo si = readUpgradedSegmentInfo(segmentName, directory, input);\n      success = true;\n      return si;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(input);\n      } else {\n        input.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public SegmentInfo read(Directory directory, String segmentName, IOContext context) throws IOException { \n    // NOTE: this is NOT how 3.x is really written...\n    String fileName = IndexFileNames.segmentFileName(segmentName, \"\", Lucene3xSegmentInfoFormat.SI_EXTENSION);\n\n    boolean success = false;\n\n    IndexInput input = directory.openInput(fileName, context);\n\n    try {\n      // nocommit: we need a version header\n      SegmentInfo si = readUpgradedSegmentInfo(segmentName, directory, input);\n      success = true;\n      return si;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(input);\n      } else {\n        input.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xSegmentInfoReader#read(Directory,String,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SegmentInfo read(Directory directory, String segmentName, IOContext context) throws IOException { \n    // NOTE: this is NOT how 3.x is really written...\n    String fileName = IndexFileNames.segmentFileName(segmentName, \"\", Lucene3xSegmentInfoFormat.UPGRADED_SI_EXTENSION);\n\n    boolean success = false;\n\n    IndexInput input = directory.openInput(fileName, context);\n\n    try {\n      SegmentInfo si = readUpgradedSegmentInfo(segmentName, directory, input);\n      success = true;\n      return si;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(input);\n      } else {\n        input.close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57ae3024996ccdb3c36c42cb890e1efb37df4ce8","date":1338343651,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xSegmentInfoReader#read(Directory,String,IOContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public SegmentInfo read(Directory directory, String segmentName, IOContext context) throws IOException { \n    // NOTE: this is NOT how 3.x is really written...\n    String fileName = IndexFileNames.segmentFileName(segmentName, \"\", Lucene3xSegmentInfoFormat.UPGRADED_SI_EXTENSION);\n\n    boolean success = false;\n\n    IndexInput input = directory.openInput(fileName, context);\n\n    try {\n      SegmentInfo si = readUpgradedSegmentInfo(segmentName, directory, input);\n      success = true;\n      return si;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(input);\n      } else {\n        input.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee3df95012e016c229172f87a6c4077957246c4a":["6842f2837919389de395b2bb61824335f40e5431"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ee3df95012e016c229172f87a6c4077957246c4a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6842f2837919389de395b2bb61824335f40e5431":["ace9b78896617dcee984890f3300d45c539c1b15"],"ace9b78896617dcee984890f3300d45c539c1b15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"]},"commit2Childs":{"ee3df95012e016c229172f87a6c4077957246c4a":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","ace9b78896617dcee984890f3300d45c539c1b15"],"6842f2837919389de395b2bb61824335f40e5431":["ee3df95012e016c229172f87a6c4077957246c4a"],"ace9b78896617dcee984890f3300d45c539c1b15":["6842f2837919389de395b2bb61824335f40e5431"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}