{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","commits":[{"id":"b2e70b697d9f5a6130848741a4f0cdc08a1fe258","date":1168661303,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","pathOld":"/dev/null","sourceNew":"  public int doLogic() throws IOException {\r\n    Directory dir = getRunData().getDirectory();\r\n    IndexReader reader = IndexReader.open(dir);\r\n    getRunData().setIndexReader(reader);\r\n    return 1;\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3738fa43eaa87dc7b393fe98b04cde1019e20bac","date":1175557034,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","sourceNew":"  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    IndexReader reader = IndexReader.open(dir);\n    getRunData().setIndexReader(reader);\n    return 1;\n  }\n\n","sourceOld":"  public int doLogic() throws IOException {\r\n    Directory dir = getRunData().getDirectory();\r\n    IndexReader reader = IndexReader.open(dir);\r\n    getRunData().setIndexReader(reader);\r\n    return 1;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7fb8916da89c020abdc5406ef6909c52badc422","date":1229427841,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","sourceNew":"  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    IndexReader reader = IndexReader.open(dir, readOnly);\n    getRunData().setIndexReader(reader);\n    return 1;\n  }\n\n","sourceOld":"  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    IndexReader reader = IndexReader.open(dir);\n    getRunData().setIndexReader(reader);\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b80ccb202de353e6899aab1bd4436d72171b2798","date":1244999275,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","sourceNew":"  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    Config config = getRunData().getConfig();\n    IndexReader r = null;\n    if (commitUserData != null) {\n      r = openCommitPoint(commitUserData, dir, config, readOnly);\n    } else {\n      IndexDeletionPolicy indexDeletionPolicy = CreateIndexTask.getIndexDeletionPolicy(config);\n      r = IndexReader.open(dir, indexDeletionPolicy, readOnly); \n    }\n    System.out.println(\"--> openReader: \"+r.getCommitUserData());\n    getRunData().setIndexReader(r);\n    return 1;\n  }\n\n","sourceOld":"  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    IndexReader reader = IndexReader.open(dir, readOnly);\n    getRunData().setIndexReader(reader);\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3717f29739b67522790640f70b88390cc260ed1","date":1249474382,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","sourceNew":"  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    Config config = getRunData().getConfig();\n    IndexReader r = null;\n    if (commitUserData != null) {\n      r = openCommitPoint(commitUserData, dir, config, readOnly);\n    } else {\n      IndexDeletionPolicy indexDeletionPolicy = CreateIndexTask.getIndexDeletionPolicy(config);\n      r = IndexReader.open(dir, indexDeletionPolicy, readOnly); \n    }\n    getRunData().setIndexReader(r);\n    return 1;\n  }\n\n","sourceOld":"  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    Config config = getRunData().getConfig();\n    IndexReader r = null;\n    if (commitUserData != null) {\n      r = openCommitPoint(commitUserData, dir, config, readOnly);\n    } else {\n      IndexDeletionPolicy indexDeletionPolicy = CreateIndexTask.getIndexDeletionPolicy(config);\n      r = IndexReader.open(dir, indexDeletionPolicy, readOnly); \n    }\n    System.out.println(\"--> openReader: \"+r.getCommitUserData());\n    getRunData().setIndexReader(r);\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    Config config = getRunData().getConfig();\n    IndexReader r = null;\n    if (commitUserData != null) {\n      r = openCommitPoint(commitUserData, dir, config, readOnly);\n    } else {\n      IndexDeletionPolicy indexDeletionPolicy = CreateIndexTask.getIndexDeletionPolicy(config);\n      r = IndexReader.open(dir, indexDeletionPolicy, readOnly); \n    }\n    getRunData().setIndexReader(r);\n    return 1;\n  }\n\n","sourceOld":"  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    Config config = getRunData().getConfig();\n    IndexReader r = null;\n    if (commitUserData != null) {\n      r = openCommitPoint(commitUserData, dir, config, readOnly);\n    } else {\n      IndexDeletionPolicy indexDeletionPolicy = CreateIndexTask.getIndexDeletionPolicy(config);\n      r = IndexReader.open(dir, indexDeletionPolicy, readOnly); \n    }\n    getRunData().setIndexReader(r);\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3353540ef2debe4c4c017e9d86e2c60f9e784336","date":1258197258,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    Config config = getRunData().getConfig();\n    IndexReader r = null;\n    final IndexDeletionPolicy deletionPolicy;\n    if (readOnly) {\n      deletionPolicy = null;\n    } else {\n      deletionPolicy = CreateIndexTask.getIndexDeletionPolicy(config);\n    }\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData),\n                           deletionPolicy,\n                           readOnly); \n    } else {\n      r = IndexReader.open(dir,\n                           deletionPolicy,\n                           readOnly); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    Config config = getRunData().getConfig();\n    IndexReader r = null;\n    if (commitUserData != null) {\n      r = openCommitPoint(commitUserData, dir, config, readOnly);\n    } else {\n      IndexDeletionPolicy indexDeletionPolicy = CreateIndexTask.getIndexDeletionPolicy(config);\n      r = IndexReader.open(dir, indexDeletionPolicy, readOnly); \n    }\n    getRunData().setIndexReader(r);\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    Config config = getRunData().getConfig();\n    IndexReader r = null;\n    final IndexDeletionPolicy deletionPolicy;\n    if (readOnly) {\n      deletionPolicy = null;\n    } else {\n      deletionPolicy = CreateIndexTask.getIndexDeletionPolicy(config);\n    }\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData),\n                           deletionPolicy,\n                           readOnly); \n    } else {\n      r = IndexReader.open(dir,\n                           deletionPolicy,\n                           readOnly); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    Config config = getRunData().getConfig();\n    IndexReader r = null;\n    final IndexDeletionPolicy deletionPolicy;\n    if (readOnly) {\n      deletionPolicy = null;\n    } else {\n      deletionPolicy = CreateIndexTask.getIndexDeletionPolicy(config);\n    }\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData),\n                           deletionPolicy,\n                           readOnly); \n    } else {\n      r = IndexReader.open(dir,\n                           deletionPolicy,\n                           readOnly); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3353540ef2debe4c4c017e9d86e2c60f9e784336":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"b80ccb202de353e6899aab1bd4436d72171b2798":["f7fb8916da89c020abdc5406ef6909c52badc422"],"f7fb8916da89c020abdc5406ef6909c52badc422":["3738fa43eaa87dc7b393fe98b04cde1019e20bac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3738fa43eaa87dc7b393fe98b04cde1019e20bac":["b2e70b697d9f5a6130848741a4f0cdc08a1fe258"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["f3717f29739b67522790640f70b88390cc260ed1"],"b2e70b697d9f5a6130848741a4f0cdc08a1fe258":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f3717f29739b67522790640f70b88390cc260ed1":["b80ccb202de353e6899aab1bd4436d72171b2798"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3353540ef2debe4c4c017e9d86e2c60f9e784336"]},"commit2Childs":{"3353540ef2debe4c4c017e9d86e2c60f9e784336":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b80ccb202de353e6899aab1bd4436d72171b2798":["f3717f29739b67522790640f70b88390cc260ed1"],"f7fb8916da89c020abdc5406ef6909c52badc422":["b80ccb202de353e6899aab1bd4436d72171b2798"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b2e70b697d9f5a6130848741a4f0cdc08a1fe258"],"3738fa43eaa87dc7b393fe98b04cde1019e20bac":["f7fb8916da89c020abdc5406ef6909c52badc422"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["3353540ef2debe4c4c017e9d86e2c60f9e784336"],"b2e70b697d9f5a6130848741a4f0cdc08a1fe258":["3738fa43eaa87dc7b393fe98b04cde1019e20bac"],"f3717f29739b67522790640f70b88390cc260ed1":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}