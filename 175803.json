{"path":"solr/core/src/test/org/apache/solr/core/TestLazyCores#tryCreateFail(CoreAdminHandler,String,String,String...).mjava","commits":[{"id":"a0cf46558b3f7708ed3a21e174b9e11cd30e26be","date":1365551184,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#tryCreateFail(CoreAdminHandler,String,String,String...).mjava","pathOld":"/dev/null","sourceNew":"  private void tryCreateFail(CoreAdminHandler admin, String name, String dataDir, String... errs) throws Exception {\n    try {\n      SolrQueryResponse resp = new SolrQueryResponse();\n\n      SolrQueryRequest request = req(CoreAdminParams.ACTION,\n          CoreAdminParams.CoreAdminAction.CREATE.toString(),\n          CoreAdminParams.DATA_DIR, dataDir,\n          CoreAdminParams.NAME, name,\n          \"schema\", \"schema-tiny.xml\",\n          \"config\", \"solrconfig-minimal.xml\");\n\n      admin.handleRequestBody(request, resp);\n      fail(\"Should have thrown an error\");\n    } catch (SolrException se) {\n      SolrException cause = (SolrException)se.getCause();\n      assertEquals(\"Exception code should be 500\", 500, cause.code());\n      for (String err : errs) {\n       assertTrue(\"Should have seen an exception containing the an error\",\n            cause.getMessage().contains(err));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["96a802acd838449b6936d34e464baeeb82f9ef54"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"96a802acd838449b6936d34e464baeeb82f9ef54","date":1371519049,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#tryCreateFail(CoreAdminHandler,String,String,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#tryCreateFail(CoreAdminHandler,String,String,String...).mjava","sourceNew":"  private void tryCreateFail(CoreAdminHandler admin, String name, String dataDir, String... errs) throws Exception {\n    try {\n      SolrQueryResponse resp = new SolrQueryResponse();\n\n      SolrQueryRequest request = req(CoreAdminParams.ACTION,\n          CoreAdminParams.CoreAdminAction.CREATE.toString(),\n          CoreAdminParams.DATA_DIR, dataDir,\n          CoreAdminParams.NAME, name,\n          \"schema\", \"schema.xml\",\n          \"config\", \"solrconfig.xml\");\n\n      admin.handleRequestBody(request, resp);\n      fail(\"Should have thrown an error\");\n    } catch (SolrException se) {\n      SolrException cause = (SolrException)se.getCause();\n      assertEquals(\"Exception code should be 500\", 500, cause.code());\n      for (String err : errs) {\n       assertTrue(\"Should have seen an exception containing the an error\",\n            cause.getMessage().contains(err));\n      }\n    }\n  }\n\n","sourceOld":"  private void tryCreateFail(CoreAdminHandler admin, String name, String dataDir, String... errs) throws Exception {\n    try {\n      SolrQueryResponse resp = new SolrQueryResponse();\n\n      SolrQueryRequest request = req(CoreAdminParams.ACTION,\n          CoreAdminParams.CoreAdminAction.CREATE.toString(),\n          CoreAdminParams.DATA_DIR, dataDir,\n          CoreAdminParams.NAME, name,\n          \"schema\", \"schema-tiny.xml\",\n          \"config\", \"solrconfig-minimal.xml\");\n\n      admin.handleRequestBody(request, resp);\n      fail(\"Should have thrown an error\");\n    } catch (SolrException se) {\n      SolrException cause = (SolrException)se.getCause();\n      assertEquals(\"Exception code should be 500\", 500, cause.code());\n      for (String err : errs) {\n       assertTrue(\"Should have seen an exception containing the an error\",\n            cause.getMessage().contains(err));\n      }\n    }\n  }\n\n","bugFix":["a0cf46558b3f7708ed3a21e174b9e11cd30e26be"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#tryCreateFail(CoreAdminHandler,String,String,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#tryCreateFail(CoreAdminHandler,String,String,String...).mjava","sourceNew":"  private void tryCreateFail(CoreAdminHandler admin, String name, String dataDir, String... errs) throws Exception {\n    try {\n      SolrQueryResponse resp = new SolrQueryResponse();\n\n      SolrQueryRequest request = req(CoreAdminParams.ACTION,\n          CoreAdminParams.CoreAdminAction.CREATE.toString(),\n          CoreAdminParams.DATA_DIR, dataDir,\n          CoreAdminParams.NAME, name,\n          \"schema\", \"schema.xml\",\n          \"config\", \"solrconfig.xml\");\n\n      admin.handleRequestBody(request, resp);\n      fail(\"Should have thrown an error\");\n    } catch (SolrException se) {\n      //SolrException cause = (SolrException)se.getCause();\n      assertEquals(\"Exception code should be 500\", 500, se.code());\n      for (String err : errs) {\n       assertTrue(\"Should have seen an exception containing the an error\",\n            se.getMessage().contains(err));\n      }\n    }\n  }\n\n","sourceOld":"  private void tryCreateFail(CoreAdminHandler admin, String name, String dataDir, String... errs) throws Exception {\n    try {\n      SolrQueryResponse resp = new SolrQueryResponse();\n\n      SolrQueryRequest request = req(CoreAdminParams.ACTION,\n          CoreAdminParams.CoreAdminAction.CREATE.toString(),\n          CoreAdminParams.DATA_DIR, dataDir,\n          CoreAdminParams.NAME, name,\n          \"schema\", \"schema.xml\",\n          \"config\", \"solrconfig.xml\");\n\n      admin.handleRequestBody(request, resp);\n      fail(\"Should have thrown an error\");\n    } catch (SolrException se) {\n      SolrException cause = (SolrException)se.getCause();\n      assertEquals(\"Exception code should be 500\", 500, cause.code());\n      for (String err : errs) {\n       assertTrue(\"Should have seen an exception containing the an error\",\n            cause.getMessage().contains(err));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#tryCreateFail(CoreAdminHandler,String,String,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#tryCreateFail(CoreAdminHandler,String,String,String...).mjava","sourceNew":"  private void tryCreateFail(CoreAdminHandler admin, String name, String dataDir, String... errs) throws Exception {\n    try {\n      SolrQueryResponse resp = new SolrQueryResponse();\n\n      SolrQueryRequest request = req(CoreAdminParams.ACTION,\n          CoreAdminParams.CoreAdminAction.CREATE.toString(),\n          CoreAdminParams.DATA_DIR, dataDir,\n          CoreAdminParams.NAME, name,\n          \"schema\", \"schema.xml\",\n          \"config\", \"solrconfig.xml\");\n\n      admin.handleRequestBody(request, resp);\n      fail(\"Should have thrown an error\");\n    } catch (SolrException se) {\n      //SolrException cause = (SolrException)se.getCause();\n      assertEquals(\"Exception code should be 500\", 500, se.code());\n      for (String err : errs) {\n       assertTrue(\"Should have seen an exception containing the an error\",\n            se.getMessage().contains(err));\n      }\n    }\n  }\n\n","sourceOld":"  private void tryCreateFail(CoreAdminHandler admin, String name, String dataDir, String... errs) throws Exception {\n    try {\n      SolrQueryResponse resp = new SolrQueryResponse();\n\n      SolrQueryRequest request = req(CoreAdminParams.ACTION,\n          CoreAdminParams.CoreAdminAction.CREATE.toString(),\n          CoreAdminParams.DATA_DIR, dataDir,\n          CoreAdminParams.NAME, name,\n          \"schema\", \"schema-tiny.xml\",\n          \"config\", \"solrconfig-minimal.xml\");\n\n      admin.handleRequestBody(request, resp);\n      fail(\"Should have thrown an error\");\n    } catch (SolrException se) {\n      SolrException cause = (SolrException)se.getCause();\n      assertEquals(\"Exception code should be 500\", 500, cause.code());\n      for (String err : errs) {\n       assertTrue(\"Should have seen an exception containing the an error\",\n            cause.getMessage().contains(err));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad026d488f8fbf9ab33e5232d3343395c19b6cc8","date":1507308872,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#tryCreateFail(CoreAdminHandler,String,String,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#tryCreateFail(CoreAdminHandler,String,String,String...).mjava","sourceNew":"  private void tryCreateFail(CoreAdminHandler admin, String name, String dataDir, String... errs) throws Exception {\n    try {\n      SolrQueryResponse resp = new SolrQueryResponse();\n\n      SolrQueryRequest request = req(CoreAdminParams.ACTION,\n          CoreAdminParams.CoreAdminAction.CREATE.toString(),\n          CoreAdminParams.DATA_DIR, dataDir,\n          CoreAdminParams.NAME, name,\n          \"schema\", \"schema.xml\",\n          \"config\", \"solrconfig.xml\");\n\n      admin.handleRequestBody(request, resp);\n      fail(\"Should have thrown an error\");\n    } catch (SolrException se) {\n      //SolrException cause = (SolrException)se.getCause();\n      assertEquals(\"Exception code should be 500\", 500, se.code());\n      for (String err : errs) {\n        assertTrue(\"Should have seen an exception containing the an error\",\n            se.getMessage().contains(err));\n      }\n    }\n  }\n\n","sourceOld":"  private void tryCreateFail(CoreAdminHandler admin, String name, String dataDir, String... errs) throws Exception {\n    try {\n      SolrQueryResponse resp = new SolrQueryResponse();\n\n      SolrQueryRequest request = req(CoreAdminParams.ACTION,\n          CoreAdminParams.CoreAdminAction.CREATE.toString(),\n          CoreAdminParams.DATA_DIR, dataDir,\n          CoreAdminParams.NAME, name,\n          \"schema\", \"schema.xml\",\n          \"config\", \"solrconfig.xml\");\n\n      admin.handleRequestBody(request, resp);\n      fail(\"Should have thrown an error\");\n    } catch (SolrException se) {\n      //SolrException cause = (SolrException)se.getCause();\n      assertEquals(\"Exception code should be 500\", 500, se.code());\n      for (String err : errs) {\n       assertTrue(\"Should have seen an exception containing the an error\",\n            se.getMessage().contains(err));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48e6317c36b128552eaed2363bb069267defb0e0","date":1507335877,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#tryCreateFail(CoreAdminHandler,String,String,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#tryCreateFail(CoreAdminHandler,String,String,String...).mjava","sourceNew":"  private void tryCreateFail(CoreAdminHandler admin, String name, String dataDir, String... errs) throws Exception {\n    try {\n      SolrQueryResponse resp = new SolrQueryResponse();\n\n      SolrQueryRequest request = req(CoreAdminParams.ACTION,\n          CoreAdminParams.CoreAdminAction.CREATE.toString(),\n          CoreAdminParams.DATA_DIR, dataDir,\n          CoreAdminParams.NAME, name,\n          \"schema\", \"schema.xml\",\n          \"config\", \"solrconfig.xml\");\n\n      admin.handleRequestBody(request, resp);\n      fail(\"Should have thrown an error\");\n    } catch (SolrException se) {\n      //SolrException cause = (SolrException)se.getCause();\n      assertEquals(\"Exception code should be 500\", 500, se.code());\n      for (String err : errs) {\n       assertTrue(\"Should have seen an exception containing the an error\",\n            se.getMessage().contains(err));\n      }\n    }\n  }\n\n","sourceOld":"  private void tryCreateFail(CoreAdminHandler admin, String name, String dataDir, String... errs) throws Exception {\n    try {\n      SolrQueryResponse resp = new SolrQueryResponse();\n\n      SolrQueryRequest request = req(CoreAdminParams.ACTION,\n          CoreAdminParams.CoreAdminAction.CREATE.toString(),\n          CoreAdminParams.DATA_DIR, dataDir,\n          CoreAdminParams.NAME, name,\n          \"schema\", \"schema.xml\",\n          \"config\", \"solrconfig.xml\");\n\n      admin.handleRequestBody(request, resp);\n      fail(\"Should have thrown an error\");\n    } catch (SolrException se) {\n      //SolrException cause = (SolrException)se.getCause();\n      assertEquals(\"Exception code should be 500\", 500, se.code());\n      for (String err : errs) {\n        assertTrue(\"Should have seen an exception containing the an error\",\n            se.getMessage().contains(err));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68cb00b5f16300efa7bd172de723d9ac91d38cc2","date":1543702774,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#tryCreateFail(CoreAdminHandler,String,String,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#tryCreateFail(CoreAdminHandler,String,String,String...).mjava","sourceNew":"  private void tryCreateFail(CoreAdminHandler admin, String name, String dataDir, String... errs) throws Exception {\n    SolrException thrown = expectThrows(SolrException.class, () -> {\n      SolrQueryResponse resp = new SolrQueryResponse();\n\n      SolrQueryRequest request = req(CoreAdminParams.ACTION,\n          CoreAdminParams.CoreAdminAction.CREATE.toString(),\n          CoreAdminParams.DATA_DIR, dataDir,\n          CoreAdminParams.NAME, name,\n          \"schema\", \"schema.xml\",\n          \"config\", \"solrconfig.xml\");\n\n      admin.handleRequestBody(request, resp);\n    });\n    assertEquals(\"Exception code should be 500\", 500, thrown.code());\n    for (String err : errs) {\n      assertTrue(\"Should have seen an exception containing the an error\",\n          thrown.getMessage().contains(err));\n    }\n  }\n\n","sourceOld":"  private void tryCreateFail(CoreAdminHandler admin, String name, String dataDir, String... errs) throws Exception {\n    try {\n      SolrQueryResponse resp = new SolrQueryResponse();\n\n      SolrQueryRequest request = req(CoreAdminParams.ACTION,\n          CoreAdminParams.CoreAdminAction.CREATE.toString(),\n          CoreAdminParams.DATA_DIR, dataDir,\n          CoreAdminParams.NAME, name,\n          \"schema\", \"schema.xml\",\n          \"config\", \"solrconfig.xml\");\n\n      admin.handleRequestBody(request, resp);\n      fail(\"Should have thrown an error\");\n    } catch (SolrException se) {\n      //SolrException cause = (SolrException)se.getCause();\n      assertEquals(\"Exception code should be 500\", 500, se.code());\n      for (String err : errs) {\n       assertTrue(\"Should have seen an exception containing the an error\",\n            se.getMessage().contains(err));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0cf46558b3f7708ed3a21e174b9e11cd30e26be":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0cf46558b3f7708ed3a21e174b9e11cd30e26be","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68cb00b5f16300efa7bd172de723d9ac91d38cc2":["48e6317c36b128552eaed2363bb069267defb0e0"],"ad026d488f8fbf9ab33e5232d3343395c19b6cc8":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["96a802acd838449b6936d34e464baeeb82f9ef54"],"96a802acd838449b6936d34e464baeeb82f9ef54":["a0cf46558b3f7708ed3a21e174b9e11cd30e26be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68cb00b5f16300efa7bd172de723d9ac91d38cc2"],"48e6317c36b128552eaed2363bb069267defb0e0":["ad026d488f8fbf9ab33e5232d3343395c19b6cc8"]},"commit2Childs":{"a0cf46558b3f7708ed3a21e174b9e11cd30e26be":["37a0f60745e53927c4c876cfe5b5a58170f0646c","96a802acd838449b6936d34e464baeeb82f9ef54"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0cf46558b3f7708ed3a21e174b9e11cd30e26be"],"68cb00b5f16300efa7bd172de723d9ac91d38cc2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad026d488f8fbf9ab33e5232d3343395c19b6cc8":["48e6317c36b128552eaed2363bb069267defb0e0"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","ad026d488f8fbf9ab33e5232d3343395c19b6cc8"],"96a802acd838449b6936d34e464baeeb82f9ef54":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"48e6317c36b128552eaed2363bb069267defb0e0":["68cb00b5f16300efa7bd172de723d9ac91d38cc2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}