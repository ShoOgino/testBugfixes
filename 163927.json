{"path":"lucene/core/src/test/org/apache/lucene/geo/TestXYRectangle2D#testTriangleIntersects().mjava","commits":[{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestXYRectangle2D#testTriangleIntersects().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/geo/TestXYRectangle2D#testTriangleIntersects().mjava","sourceNew":"  public void testTriangleIntersects() {\n    XYRectangle rectangle = new XYRectangle(0d, 1d, 0d, 1d);\n    Component2D rectangle2D =  XYRectangle2D.create(rectangle);\n    float ax = 0.5f;\n    float ay = 0.5f;\n    float bx = 2f;\n    float by = 2f;\n    float cx = 0.5f;\n    float cy = 2f;\n    assertEquals(PointValues.Relation.CELL_CROSSES_QUERY, rectangle2D.relateTriangle(ax, ay, bx, by , cx, cy));\n  }\n\n","sourceOld":"  public void testTriangleIntersects() {\n    XYRectangle rectangle = new XYRectangle(0d, 1d, 0d, 1d);\n    Component2D rectangle2D =  XYRectangle2D.create(rectangle);\n    float ax = 0.5f;\n    float ay = 0.5f;\n    float bx = 2f;\n    float by = 2f;\n    float cx = 0.5f;\n    float cy = 2f;\n    assertEquals(PointValues.Relation.CELL_CROSSES_QUERY, rectangle2D.relateTriangle(ax, ay, bx, by , cx, cy));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4d14322963cbbe599706c6c272d5cba0817ea32","date":1581676750,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestXYRectangle2D#testTriangleIntersects().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestXYRectangle2D#testTriangleIntersects().mjava","sourceNew":"  public void testTriangleIntersects() {\n    XYRectangle rectangle = new XYRectangle(0f, 1f, 0f, 1f);\n    Component2D rectangle2D =  XYRectangle2D.create(rectangle);\n    float ax = 0.5f;\n    float ay = 0.5f;\n    float bx = 2f;\n    float by = 2f;\n    float cx = 0.5f;\n    float cy = 2f;\n    assertEquals(PointValues.Relation.CELL_CROSSES_QUERY, rectangle2D.relateTriangle(ax, ay, bx, by , cx, cy));\n  }\n\n","sourceOld":"  public void testTriangleIntersects() {\n    XYRectangle rectangle = new XYRectangle(0d, 1d, 0d, 1d);\n    Component2D rectangle2D =  XYRectangle2D.create(rectangle);\n    float ax = 0.5f;\n    float ay = 0.5f;\n    float bx = 2f;\n    float by = 2f;\n    float cx = 0.5f;\n    float cy = 2f;\n    assertEquals(PointValues.Relation.CELL_CROSSES_QUERY, rectangle2D.relateTriangle(ax, ay, bx, by , cx, cy));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f66eaefcdea9f8ffcf9508f78556159d61b8e3df","date":1581695213,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestXYRectangle2D#testTriangleIntersects().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestXYRectangle2D#testTriangleIntersects().mjava","sourceNew":"  public void testTriangleIntersects() {\n    XYRectangle rectangle = new XYRectangle(0f, 1f, 0f, 1f);\n    Component2D rectangle2D =  XYRectangle2D.create(rectangle);\n    float ax = 0.5f;\n    float ay = 0.5f;\n    float bx = 2f;\n    float by = 2f;\n    float cx = 0.5f;\n    float cy = 2f;\n    assertEquals(PointValues.Relation.CELL_CROSSES_QUERY, rectangle2D.relateTriangle(ax, ay, bx, by , cx, cy));\n  }\n\n","sourceOld":"  public void testTriangleIntersects() {\n    XYRectangle rectangle = new XYRectangle(0d, 1d, 0d, 1d);\n    Component2D rectangle2D =  XYRectangle2D.create(rectangle);\n    float ax = 0.5f;\n    float ay = 0.5f;\n    float bx = 2f;\n    float by = 2f;\n    float cx = 0.5f;\n    float cy = 2f;\n    assertEquals(PointValues.Relation.CELL_CROSSES_QUERY, rectangle2D.relateTriangle(ax, ay, bx, by , cx, cy));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56c42be8d779573d0c86ba775117e17360dbf5a6","date":1583217404,"type":4,"author":"Ignacio Vera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestXYRectangle2D#testTriangleIntersects().mjava","sourceNew":null,"sourceOld":"  public void testTriangleIntersects() {\n    XYRectangle rectangle = new XYRectangle(0f, 1f, 0f, 1f);\n    Component2D rectangle2D =  XYRectangle2D.create(rectangle);\n    float ax = 0.5f;\n    float ay = 0.5f;\n    float bx = 2f;\n    float by = 2f;\n    float cx = 0.5f;\n    float cy = 2f;\n    assertEquals(PointValues.Relation.CELL_CROSSES_QUERY, rectangle2D.relateTriangle(ax, ay, bx, by , cx, cy));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56c42be8d779573d0c86ba775117e17360dbf5a6":["f66eaefcdea9f8ffcf9508f78556159d61b8e3df"],"f66eaefcdea9f8ffcf9508f78556159d61b8e3df":["09c1e6d465800c73af60624bf9d4459a19f7940c","a4d14322963cbbe599706c6c272d5cba0817ea32"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["56c42be8d779573d0c86ba775117e17360dbf5a6"],"a4d14322963cbbe599706c6c272d5cba0817ea32":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"56c42be8d779573d0c86ba775117e17360dbf5a6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f66eaefcdea9f8ffcf9508f78556159d61b8e3df":["56c42be8d779573d0c86ba775117e17360dbf5a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["f66eaefcdea9f8ffcf9508f78556159d61b8e3df","a4d14322963cbbe599706c6c272d5cba0817ea32"],"a4d14322963cbbe599706c6c272d5cba0817ea32":["f66eaefcdea9f8ffcf9508f78556159d61b8e3df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}