{"path":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","pathOld":"solr/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","sourceNew":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    if (next != null) next.processCommit(cmd);\n    \n    toLog.add(cmd.optimize ? \"optimize\" : \"commit\", \"\");\n  }\n\n","sourceOld":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    if (next != null) next.processCommit(cmd);\n    \n    toLog.add(cmd.optimize ? \"optimize\" : \"commit\", \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","pathOld":"solr/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","sourceNew":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    if (next != null) next.processCommit(cmd);\n    \n    toLog.add(cmd.optimize ? \"optimize\" : \"commit\", \"\");\n  }\n\n","sourceOld":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    if (next != null) next.processCommit(cmd);\n    \n    toLog.add(cmd.optimize ? \"optimize\" : \"commit\", \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","pathOld":"solr/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","sourceNew":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    if (next != null) next.processCommit(cmd);\n    \n    toLog.add(cmd.optimize ? \"optimize\" : \"commit\", \"\");\n  }\n\n","sourceOld":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    if (next != null) next.processCommit(cmd);\n    \n    toLog.add(cmd.optimize ? \"optimize\" : \"commit\", \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48ca93fd0adba286887078680f889a3ac95dc9b1","date":1310396563,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","sourceNew":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    final String msg = cmd.optimize ? \"optimize\" : \"commit\";\n    toLog.add(msg, \"\");\n    if (logDebug) { log.debug(msg); }\n\n    if (next != null) next.processCommit(cmd);\n  }\n\n","sourceOld":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    if (next != null) next.processCommit(cmd);\n    \n    toLog.add(cmd.optimize ? \"optimize\" : \"commit\", \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a5ba68d45a5ef4a6777115f56d95504aa4e66b1","date":1330047610,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","sourceNew":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    if (logDebug) { log.debug(cmd.toString()); }\n    if (next != null) next.processCommit(cmd);\n\n\n    final String msg = cmd.optimize ? \"optimize\" : \"commit\";\n    toLog.add(msg, \"\");\n  }\n\n","sourceOld":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    final String msg = cmd.optimize ? \"optimize\" : \"commit\";\n    toLog.add(msg, \"\");\n    if (logDebug) { log.debug(msg); }\n\n    if (next != null) next.processCommit(cmd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff2d7326b1f013c8da9bad45b1e98a3d16c38575","date":1330406992,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","sourceNew":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    if (logDebug) { log.debug(\"PRE_UPDATE \" + cmd.toString()); }\n    if (next != null) next.processCommit(cmd);\n\n\n    final String msg = cmd.optimize ? \"optimize\" : \"commit\";\n    toLog.add(msg, \"\");\n  }\n\n","sourceOld":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    if (logDebug) { log.debug(cmd.toString()); }\n    if (next != null) next.processCommit(cmd);\n\n\n    final String msg = cmd.optimize ? \"optimize\" : \"commit\";\n    toLog.add(msg, \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","sourceNew":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    if (logDebug) { log.debug(\"PRE_UPDATE \" + cmd.toString()); }\n    if (next != null) next.processCommit(cmd);\n\n\n    final String msg = cmd.optimize ? \"optimize\" : \"commit\";\n    toLog.add(msg, \"\");\n  }\n\n","sourceOld":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    final String msg = cmd.optimize ? \"optimize\" : \"commit\";\n    toLog.add(msg, \"\");\n    if (logDebug) { log.debug(msg); }\n\n    if (next != null) next.processCommit(cmd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ad3cc14db22043cdeb3c36e3dc1065c2406fc24","date":1357262117,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","sourceNew":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    if (logDebug) { log.debug(\"PRE_UPDATE \" + cmd.toString() + \" \" + req); }\n    if (next != null) next.processCommit(cmd);\n\n\n    final String msg = cmd.optimize ? \"optimize\" : \"commit\";\n    toLog.add(msg, \"\");\n  }\n\n","sourceOld":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    if (logDebug) { log.debug(\"PRE_UPDATE \" + cmd.toString()); }\n    if (next != null) next.processCommit(cmd);\n\n\n    final String msg = cmd.optimize ? \"optimize\" : \"commit\";\n    toLog.add(msg, \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","sourceNew":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    if (logDebug) { log.debug(\"PRE_UPDATE \" + cmd.toString() + \" \" + req); }\n    if (next != null) next.processCommit(cmd);\n\n\n    final String msg = cmd.optimize ? \"optimize\" : \"commit\";\n    toLog.add(msg, \"\");\n  }\n\n","sourceOld":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    if (logDebug) { log.debug(\"PRE_UPDATE \" + cmd.toString()); }\n    if (next != null) next.processCommit(cmd);\n\n\n    final String msg = cmd.optimize ? \"optimize\" : \"commit\";\n    toLog.add(msg, \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9367dbf5b00d7764583d991c1888f4acc9c9991a","date":1449048142,"type":4,"author":"Anshum Gupta","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#processCommit(CommitUpdateCommand).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void processCommit( CommitUpdateCommand cmd ) throws IOException {\n    if (logDebug) { log.debug(\"PRE_UPDATE \" + cmd.toString() + \" \" + req); }\n    if (next != null) next.processCommit(cmd);\n\n\n    final String msg = cmd.optimize ? \"optimize\" : \"commit\";\n    toLog.add(msg, \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["ff2d7326b1f013c8da9bad45b1e98a3d16c38575","3ad3cc14db22043cdeb3c36e3dc1065c2406fc24"],"ff2d7326b1f013c8da9bad45b1e98a3d16c38575":["6a5ba68d45a5ef4a6777115f56d95504aa4e66b1"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["48ca93fd0adba286887078680f889a3ac95dc9b1","ff2d7326b1f013c8da9bad45b1e98a3d16c38575"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6a5ba68d45a5ef4a6777115f56d95504aa4e66b1":["48ca93fd0adba286887078680f889a3ac95dc9b1"],"48ca93fd0adba286887078680f889a3ac95dc9b1":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9367dbf5b00d7764583d991c1888f4acc9c9991a":["3ad3cc14db22043cdeb3c36e3dc1065c2406fc24"],"3ad3cc14db22043cdeb3c36e3dc1065c2406fc24":["ff2d7326b1f013c8da9bad45b1e98a3d16c38575"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9367dbf5b00d7764583d991c1888f4acc9c9991a"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"ff2d7326b1f013c8da9bad45b1e98a3d16c38575":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","3ad3cc14db22043cdeb3c36e3dc1065c2406fc24"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["48ca93fd0adba286887078680f889a3ac95dc9b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"6a5ba68d45a5ef4a6777115f56d95504aa4e66b1":["ff2d7326b1f013c8da9bad45b1e98a3d16c38575"],"48ca93fd0adba286887078680f889a3ac95dc9b1":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","6a5ba68d45a5ef4a6777115f56d95504aa4e66b1"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"9367dbf5b00d7764583d991c1888f4acc9c9991a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3ad3cc14db22043cdeb3c36e3dc1065c2406fc24":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","9367dbf5b00d7764583d991c1888f4acc9c9991a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}