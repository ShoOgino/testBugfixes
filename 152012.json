{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/SolrPortAwareCookieSpecTest#testDomainHostPortValidate().mjava","commits":[{"id":"5d8478e1507f625c01f80a2f9f6dccd426a95708","date":1449667316,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/SolrPortAwareCookieSpecTest#testDomainHostPortValidate().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDomainHostPortValidate() throws Exception {\n    final BasicClientCookie cookie = new BasicClientCookie(\"name\", \"value\");\n    final CookieOrigin origin = new CookieOrigin(\"somehost\", 80, \"/\", false);\n    final CookieAttributeHandler h = new SolrPortAwareCookieSpecFactory.PortAwareDomainHandler();\n\n    cookie.setDomain(\"somehost:80\");\n    h.validate(cookie, origin);\n\n    cookie.setDomain(\"somehost:1234\");\n    try {\n      h.validate(cookie, origin);\n      Assert.fail(\"MalformedCookieException should have been thrown\");\n    } catch (final MalformedCookieException ex) {\n      // expected\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/SolrPortAwareCookieSpecTest#testDomainHostPortValidate().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/SolrPortAwareCookieSpecTest#testDomainHostPortValidate().mjava","sourceNew":"  @Test\n  public void testDomainHostPortValidate() throws Exception {\n    final BasicClientCookie cookie = new BasicClientCookie(\"name\", \"value\");\n    final CookieOrigin origin = new CookieOrigin(\"somehost\", 80, \"/\", false);\n    final CookieAttributeHandler h = new SolrPortAwareCookieSpecFactory.PortAwareDomainHandler();\n\n    cookie.setDomain(\"somehost:80\");\n    h.validate(cookie, origin);\n\n    cookie.setDomain(\"somehost:1234\");\n    SolrTestCaseJ4.expectThrows(MalformedCookieException.class, () -> h.validate(cookie, origin));\n  }\n\n","sourceOld":"  @Test\n  public void testDomainHostPortValidate() throws Exception {\n    final BasicClientCookie cookie = new BasicClientCookie(\"name\", \"value\");\n    final CookieOrigin origin = new CookieOrigin(\"somehost\", 80, \"/\", false);\n    final CookieAttributeHandler h = new SolrPortAwareCookieSpecFactory.PortAwareDomainHandler();\n\n    cookie.setDomain(\"somehost:80\");\n    h.validate(cookie, origin);\n\n    cookie.setDomain(\"somehost:1234\");\n    try {\n      h.validate(cookie, origin);\n      Assert.fail(\"MalformedCookieException should have been thrown\");\n    } catch (final MalformedCookieException ex) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/SolrPortAwareCookieSpecTest#testDomainHostPortValidate().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/SolrPortAwareCookieSpecTest#testDomainHostPortValidate().mjava","sourceNew":"  @Test\n  public void testDomainHostPortValidate() throws Exception {\n    final BasicClientCookie cookie = new BasicClientCookie(\"name\", \"value\");\n    final CookieOrigin origin = new CookieOrigin(\"somehost\", 80, \"/\", false);\n    final CookieAttributeHandler h = new SolrPortAwareCookieSpecFactory.PortAwareDomainHandler();\n\n    cookie.setDomain(\"somehost:80\");\n    h.validate(cookie, origin);\n\n    cookie.setDomain(\"somehost:1234\");\n    SolrTestCaseJ4.expectThrows(MalformedCookieException.class, () -> h.validate(cookie, origin));\n  }\n\n","sourceOld":"  @Test\n  public void testDomainHostPortValidate() throws Exception {\n    final BasicClientCookie cookie = new BasicClientCookie(\"name\", \"value\");\n    final CookieOrigin origin = new CookieOrigin(\"somehost\", 80, \"/\", false);\n    final CookieAttributeHandler h = new SolrPortAwareCookieSpecFactory.PortAwareDomainHandler();\n\n    cookie.setDomain(\"somehost:80\");\n    h.validate(cookie, origin);\n\n    cookie.setDomain(\"somehost:1234\");\n    try {\n      h.validate(cookie, origin);\n      Assert.fail(\"MalformedCookieException should have been thrown\");\n    } catch (final MalformedCookieException ex) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/SolrPortAwareCookieSpecTest#testDomainHostPortValidate().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/SolrPortAwareCookieSpecTest#testDomainHostPortValidate().mjava","sourceNew":"  @Test\n  public void testDomainHostPortValidate() throws Exception {\n    final BasicClientCookie cookie = new BasicClientCookie(\"name\", \"value\");\n    final CookieOrigin origin = new CookieOrigin(\"somehost\", 80, \"/\", false);\n    final CookieAttributeHandler h = new SolrPortAwareCookieSpecFactory.PortAwareDomainHandler();\n\n    cookie.setDomain(\"somehost:80\");\n    h.validate(cookie, origin);\n\n    cookie.setDomain(\"somehost:1234\");\n    SolrTestCaseJ4.expectThrows(MalformedCookieException.class, () -> h.validate(cookie, origin));\n  }\n\n","sourceOld":"  @Test\n  public void testDomainHostPortValidate() throws Exception {\n    final BasicClientCookie cookie = new BasicClientCookie(\"name\", \"value\");\n    final CookieOrigin origin = new CookieOrigin(\"somehost\", 80, \"/\", false);\n    final CookieAttributeHandler h = new SolrPortAwareCookieSpecFactory.PortAwareDomainHandler();\n\n    cookie.setDomain(\"somehost:80\");\n    h.validate(cookie, origin);\n\n    cookie.setDomain(\"somehost:1234\");\n    try {\n      h.validate(cookie, origin);\n      Assert.fail(\"MalformedCookieException should have been thrown\");\n    } catch (final MalformedCookieException ex) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["5d8478e1507f625c01f80a2f9f6dccd426a95708"],"5d8478e1507f625c01f80a2f9f6dccd426a95708":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["5d8478e1507f625c01f80a2f9f6dccd426a95708","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["5d8478e1507f625c01f80a2f9f6dccd426a95708","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a307447328c95a00248512b40d7a5ff12ecd6a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d8478e1507f625c01f80a2f9f6dccd426a95708"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5d8478e1507f625c01f80a2f9f6dccd426a95708":["d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}