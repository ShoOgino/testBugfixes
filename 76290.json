{"path":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineMapperTest#testMapper().mjava","commits":[{"id":"70f91c8322fbffe3a3a897ef20ea19119cac10cd","date":1386170124,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineMapperTest#testMapper().mjava","pathOld":"solr/contrib/solr-mr/src/test/org/apache/solr/hadoop/MorphlineMapperTest#testMapper().mjava","sourceNew":"  @Test\n  public void testMapper() throws Exception {\n    MorphlineMapper mapper = new MorphlineMapper();\n    MapDriver<LongWritable, Text, Text, SolrInputDocumentWritable> mapDriver = MapDriver.newMapDriver(mapper);;\n\n    Configuration config = mapDriver.getConfiguration();\n    setupHadoopConfig(config);\n\n    mapDriver.withInput(new LongWritable(0L), new Text(\"hdfs://localhost/\" + DOCUMENTS_DIR + \"/sample-statuses-20120906-141433.avro\"));\n\n    SolrInputDocument sid = new SolrInputDocument();\n    sid.addField(\"id\", \"uniqueid1\");\n    sid.addField(\"user_name\", \"user1\");\n    sid.addField(\"text\", \"content of record one\");\n    SolrInputDocumentWritable sidw = new SolrInputDocumentWritable(sid);\n\n    mapDriver\n      .withCacheArchive(solrHomeZip.getAbsolutePath())\n      .withOutput(new Text(\"0\"), sidw);\n    //mapDriver.runTest();\n    List<Pair<Text, SolrInputDocumentWritable>> result = mapDriver.run();\n    for (Pair<Text, SolrInputDocumentWritable> p: result) {\n      System.out.println(p.getFirst());\n      System.out.println(p.getSecond());\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMapper() throws Exception {\n    MorphlineMapper mapper = new MorphlineMapper();\n    MapDriver<LongWritable, Text, Text, SolrInputDocumentWritable> mapDriver = MapDriver.newMapDriver(mapper);;\n\n    Configuration config = mapDriver.getConfiguration();\n    setupHadoopConfig(config);\n\n    mapDriver.withInput(new LongWritable(0L), new Text(\"hdfs://localhost/\" + DOCUMENTS_DIR + \"/sample-statuses-20120906-141433.avro\"));\n\n    SolrInputDocument sid = new SolrInputDocument();\n    sid.addField(\"id\", \"uniqueid1\");\n    sid.addField(\"user_name\", \"user1\");\n    sid.addField(\"text\", \"content of record one\");\n    SolrInputDocumentWritable sidw = new SolrInputDocumentWritable(sid);\n\n    mapDriver\n      .withCacheArchive(solrHomeZip.getAbsolutePath())\n      .withOutput(new Text(\"0\"), sidw);\n    //mapDriver.runTest();\n    List<Pair<Text, SolrInputDocumentWritable>> result = mapDriver.run();\n    for (Pair<Text, SolrInputDocumentWritable> p: result) {\n      System.out.println(p.getFirst());\n      System.out.println(p.getSecond());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineMapperTest#testMapper().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMapper() throws Exception {\n    MorphlineMapper mapper = new MorphlineMapper();\n    MapDriver<LongWritable, Text, Text, SolrInputDocumentWritable> mapDriver = MapDriver.newMapDriver(mapper);;\n\n    Configuration config = mapDriver.getConfiguration();\n    setupHadoopConfig(config);\n\n    mapDriver.withInput(new LongWritable(0L), new Text(\"hdfs://localhost/\" + DOCUMENTS_DIR + \"/sample-statuses-20120906-141433.avro\"));\n\n    SolrInputDocument sid = new SolrInputDocument();\n    sid.addField(\"id\", \"uniqueid1\");\n    sid.addField(\"user_name\", \"user1\");\n    sid.addField(\"text\", \"content of record one\");\n    SolrInputDocumentWritable sidw = new SolrInputDocumentWritable(sid);\n\n    mapDriver\n      .withCacheArchive(solrHomeZip.getAbsolutePath())\n      .withOutput(new Text(\"0\"), sidw);\n    //mapDriver.runTest();\n    List<Pair<Text, SolrInputDocumentWritable>> result = mapDriver.run();\n    for (Pair<Text, SolrInputDocumentWritable> p: result) {\n      System.out.println(p.getFirst());\n      System.out.println(p.getSecond());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7090cc5e438550cdcf48d3826fe03f8e42437b6e","date":1420398046,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineMapperTest#testMapper().mjava","pathOld":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineMapperTest#testMapper().mjava","sourceNew":"  @Test\n  public void testMapper() throws Exception {\n    MorphlineMapper mapper = new MorphlineMapper();\n    MapDriver<LongWritable, Text, Text, SolrInputDocumentWritable> mapDriver = MapDriver.newMapDriver(mapper);;\n\n    Configuration config = mapDriver.getConfiguration();\n    setupHadoopConfig(config);\n\n    mapDriver.withInput(new LongWritable(0L), new Text(\"hdfs://localhost/\" +\n        URLEncoder.encode(DOCUMENTS_DIR, \"UTF-8\") + \"/sample-statuses-20120906-141433.avro\"));\n\n    SolrInputDocument sid = new SolrInputDocument();\n    sid.addField(\"id\", \"uniqueid1\");\n    sid.addField(\"user_name\", \"user1\");\n    sid.addField(\"text\", \"content of record one\");\n    SolrInputDocumentWritable sidw = new SolrInputDocumentWritable(sid);\n\n    mapDriver\n      .withCacheArchive(solrHomeZip.getAbsolutePath())\n      .withOutput(new Text(\"0\"), sidw);\n    //mapDriver.runTest();\n    List<Pair<Text, SolrInputDocumentWritable>> result = mapDriver.run();\n    for (Pair<Text, SolrInputDocumentWritable> p: result) {\n      System.out.println(p.getFirst());\n      System.out.println(p.getSecond());\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMapper() throws Exception {\n    MorphlineMapper mapper = new MorphlineMapper();\n    MapDriver<LongWritable, Text, Text, SolrInputDocumentWritable> mapDriver = MapDriver.newMapDriver(mapper);;\n\n    Configuration config = mapDriver.getConfiguration();\n    setupHadoopConfig(config);\n\n    mapDriver.withInput(new LongWritable(0L), new Text(\"hdfs://localhost/\" + DOCUMENTS_DIR + \"/sample-statuses-20120906-141433.avro\"));\n\n    SolrInputDocument sid = new SolrInputDocument();\n    sid.addField(\"id\", \"uniqueid1\");\n    sid.addField(\"user_name\", \"user1\");\n    sid.addField(\"text\", \"content of record one\");\n    SolrInputDocumentWritable sidw = new SolrInputDocumentWritable(sid);\n\n    mapDriver\n      .withCacheArchive(solrHomeZip.getAbsolutePath())\n      .withOutput(new Text(\"0\"), sidw);\n    //mapDriver.runTest();\n    List<Pair<Text, SolrInputDocumentWritable>> result = mapDriver.run();\n    for (Pair<Text, SolrInputDocumentWritable> p: result) {\n      System.out.println(p.getFirst());\n      System.out.println(p.getSecond());\n    }\n  }\n\n","bugFix":null,"bugIntro":["7eca0f08d81d05238e41ce8731abaa3ffb15c168"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7eca0f08d81d05238e41ce8731abaa3ffb15c168","date":1420422307,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineMapperTest#testMapper().mjava","pathOld":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineMapperTest#testMapper().mjava","sourceNew":"  @Test\n  public void testMapper() throws Exception {\n    MorphlineMapper mapper = new MorphlineMapper();\n    MapDriver<LongWritable, Text, Text, SolrInputDocumentWritable> mapDriver = MapDriver.newMapDriver(mapper);;\n\n    Configuration config = mapDriver.getConfiguration();\n    setupHadoopConfig(config);\n\n    mapDriver.withInput(new LongWritable(0L), new Text(\"hdfs://localhost/\" +\n        URLEncoder.encode(DOCUMENTS_DIR, \"UTF-8\").replace(\"+\", \"%20\") +\n        \"/sample-statuses-20120906-141433.avro\"));\n\n    SolrInputDocument sid = new SolrInputDocument();\n    sid.addField(\"id\", \"uniqueid1\");\n    sid.addField(\"user_name\", \"user1\");\n    sid.addField(\"text\", \"content of record one\");\n    SolrInputDocumentWritable sidw = new SolrInputDocumentWritable(sid);\n\n    mapDriver\n      .withCacheArchive(solrHomeZip.getAbsolutePath())\n      .withOutput(new Text(\"0\"), sidw);\n    //mapDriver.runTest();\n    List<Pair<Text, SolrInputDocumentWritable>> result = mapDriver.run();\n    for (Pair<Text, SolrInputDocumentWritable> p: result) {\n      System.out.println(p.getFirst());\n      System.out.println(p.getSecond());\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMapper() throws Exception {\n    MorphlineMapper mapper = new MorphlineMapper();\n    MapDriver<LongWritable, Text, Text, SolrInputDocumentWritable> mapDriver = MapDriver.newMapDriver(mapper);;\n\n    Configuration config = mapDriver.getConfiguration();\n    setupHadoopConfig(config);\n\n    mapDriver.withInput(new LongWritable(0L), new Text(\"hdfs://localhost/\" +\n        URLEncoder.encode(DOCUMENTS_DIR, \"UTF-8\") + \"/sample-statuses-20120906-141433.avro\"));\n\n    SolrInputDocument sid = new SolrInputDocument();\n    sid.addField(\"id\", \"uniqueid1\");\n    sid.addField(\"user_name\", \"user1\");\n    sid.addField(\"text\", \"content of record one\");\n    SolrInputDocumentWritable sidw = new SolrInputDocumentWritable(sid);\n\n    mapDriver\n      .withCacheArchive(solrHomeZip.getAbsolutePath())\n      .withOutput(new Text(\"0\"), sidw);\n    //mapDriver.runTest();\n    List<Pair<Text, SolrInputDocumentWritable>> result = mapDriver.run();\n    for (Pair<Text, SolrInputDocumentWritable> p: result) {\n      System.out.println(p.getFirst());\n      System.out.println(p.getSecond());\n    }\n  }\n\n","bugFix":["7090cc5e438550cdcf48d3826fe03f8e42437b6e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e242688a83f85ed22f0f4ff79947f1aa68d11dd9","date":1466280637,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineMapperTest#testMapper().mjava","pathOld":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineMapperTest#testMapper().mjava","sourceNew":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-9220\")\n  public void testMapper() throws Exception {\n    MorphlineMapper mapper = new MorphlineMapper();\n    MapDriver<LongWritable, Text, Text, SolrInputDocumentWritable> mapDriver = MapDriver.newMapDriver(mapper);;\n\n    Configuration config = mapDriver.getConfiguration();\n    setupHadoopConfig(config);\n\n    mapDriver.withInput(new LongWritable(0L), new Text(\"hdfs://localhost/\" +\n        URLEncoder.encode(DOCUMENTS_DIR, \"UTF-8\").replace(\"+\", \"%20\") +\n        \"/sample-statuses-20120906-141433.avro\"));\n\n    SolrInputDocument sid = new SolrInputDocument();\n    sid.addField(\"id\", \"uniqueid1\");\n    sid.addField(\"user_name\", \"user1\");\n    sid.addField(\"text\", \"content of record one\");\n    SolrInputDocumentWritable sidw = new SolrInputDocumentWritable(sid);\n\n    mapDriver\n      .withCacheArchive(solrHomeZip.getAbsolutePath())\n      .withOutput(new Text(\"0\"), sidw);\n    //mapDriver.runTest();\n    List<Pair<Text, SolrInputDocumentWritable>> result = mapDriver.run();\n    for (Pair<Text, SolrInputDocumentWritable> p: result) {\n      System.out.println(p.getFirst());\n      System.out.println(p.getSecond());\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMapper() throws Exception {\n    MorphlineMapper mapper = new MorphlineMapper();\n    MapDriver<LongWritable, Text, Text, SolrInputDocumentWritable> mapDriver = MapDriver.newMapDriver(mapper);;\n\n    Configuration config = mapDriver.getConfiguration();\n    setupHadoopConfig(config);\n\n    mapDriver.withInput(new LongWritable(0L), new Text(\"hdfs://localhost/\" +\n        URLEncoder.encode(DOCUMENTS_DIR, \"UTF-8\").replace(\"+\", \"%20\") +\n        \"/sample-statuses-20120906-141433.avro\"));\n\n    SolrInputDocument sid = new SolrInputDocument();\n    sid.addField(\"id\", \"uniqueid1\");\n    sid.addField(\"user_name\", \"user1\");\n    sid.addField(\"text\", \"content of record one\");\n    SolrInputDocumentWritable sidw = new SolrInputDocumentWritable(sid);\n\n    mapDriver\n      .withCacheArchive(solrHomeZip.getAbsolutePath())\n      .withOutput(new Text(\"0\"), sidw);\n    //mapDriver.runTest();\n    List<Pair<Text, SolrInputDocumentWritable>> result = mapDriver.run();\n    for (Pair<Text, SolrInputDocumentWritable> p: result) {\n      System.out.println(p.getFirst());\n      System.out.println(p.getSecond());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineMapperTest#testMapper().mjava","pathOld":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineMapperTest#testMapper().mjava","sourceNew":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-9220\")\n  public void testMapper() throws Exception {\n    MorphlineMapper mapper = new MorphlineMapper();\n    MapDriver<LongWritable, Text, Text, SolrInputDocumentWritable> mapDriver = MapDriver.newMapDriver(mapper);;\n\n    Configuration config = mapDriver.getConfiguration();\n    setupHadoopConfig(config);\n\n    mapDriver.withInput(new LongWritable(0L), new Text(\"hdfs://localhost/\" +\n        URLEncoder.encode(DOCUMENTS_DIR, \"UTF-8\").replace(\"+\", \"%20\") +\n        \"/sample-statuses-20120906-141433.avro\"));\n\n    SolrInputDocument sid = new SolrInputDocument();\n    sid.addField(\"id\", \"uniqueid1\");\n    sid.addField(\"user_name\", \"user1\");\n    sid.addField(\"text\", \"content of record one\");\n    SolrInputDocumentWritable sidw = new SolrInputDocumentWritable(sid);\n\n    mapDriver\n      .withCacheArchive(solrHomeZip.getAbsolutePath())\n      .withOutput(new Text(\"0\"), sidw);\n    //mapDriver.runTest();\n    List<Pair<Text, SolrInputDocumentWritable>> result = mapDriver.run();\n    for (Pair<Text, SolrInputDocumentWritable> p: result) {\n      System.out.println(p.getFirst());\n      System.out.println(p.getSecond());\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMapper() throws Exception {\n    MorphlineMapper mapper = new MorphlineMapper();\n    MapDriver<LongWritable, Text, Text, SolrInputDocumentWritable> mapDriver = MapDriver.newMapDriver(mapper);;\n\n    Configuration config = mapDriver.getConfiguration();\n    setupHadoopConfig(config);\n\n    mapDriver.withInput(new LongWritable(0L), new Text(\"hdfs://localhost/\" +\n        URLEncoder.encode(DOCUMENTS_DIR, \"UTF-8\").replace(\"+\", \"%20\") +\n        \"/sample-statuses-20120906-141433.avro\"));\n\n    SolrInputDocument sid = new SolrInputDocument();\n    sid.addField(\"id\", \"uniqueid1\");\n    sid.addField(\"user_name\", \"user1\");\n    sid.addField(\"text\", \"content of record one\");\n    SolrInputDocumentWritable sidw = new SolrInputDocumentWritable(sid);\n\n    mapDriver\n      .withCacheArchive(solrHomeZip.getAbsolutePath())\n      .withOutput(new Text(\"0\"), sidw);\n    //mapDriver.runTest();\n    List<Pair<Text, SolrInputDocumentWritable>> result = mapDriver.run();\n    for (Pair<Text, SolrInputDocumentWritable> p: result) {\n      System.out.println(p.getFirst());\n      System.out.println(p.getSecond());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17ac431e37b605d1d64aff99512d9729b6f8c8c5","date":1485908823,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineMapperTest#testMapper().mjava","pathOld":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineMapperTest#testMapper().mjava","sourceNew":"  @Test\n  public void testMapper() throws Exception {\n    MorphlineMapper mapper = new MorphlineMapper();\n    MapDriver<LongWritable, Text, Text, SolrInputDocumentWritable> mapDriver = MapDriver.newMapDriver(mapper);;\n\n    Configuration config = mapDriver.getConfiguration();\n    setupHadoopConfig(config);\n\n    mapDriver.withInput(new LongWritable(0L), new Text(\"hdfs://localhost/\" +\n        URLEncoder.encode(DOCUMENTS_DIR, \"UTF-8\").replace(\"+\", \"%20\") +\n        \"/sample-statuses-20120906-141433.avro\"));\n\n    SolrInputDocument sid = new SolrInputDocument();\n    sid.addField(\"id\", \"uniqueid1\");\n    sid.addField(\"user_name\", \"user1\");\n    sid.addField(\"text\", \"content of record one\");\n    SolrInputDocumentWritable sidw = new SolrInputDocumentWritable(sid);\n\n    mapDriver\n      .withCacheArchive(solrHomeZip.getAbsolutePath())\n      .withOutput(new Text(\"0\"), sidw);\n    //mapDriver.runTest();\n    List<Pair<Text, SolrInputDocumentWritable>> result = mapDriver.run();\n    for (Pair<Text, SolrInputDocumentWritable> p: result) {\n      System.out.println(p.getFirst());\n      System.out.println(p.getSecond());\n    }\n  }\n\n","sourceOld":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-9220\")\n  public void testMapper() throws Exception {\n    MorphlineMapper mapper = new MorphlineMapper();\n    MapDriver<LongWritable, Text, Text, SolrInputDocumentWritable> mapDriver = MapDriver.newMapDriver(mapper);;\n\n    Configuration config = mapDriver.getConfiguration();\n    setupHadoopConfig(config);\n\n    mapDriver.withInput(new LongWritable(0L), new Text(\"hdfs://localhost/\" +\n        URLEncoder.encode(DOCUMENTS_DIR, \"UTF-8\").replace(\"+\", \"%20\") +\n        \"/sample-statuses-20120906-141433.avro\"));\n\n    SolrInputDocument sid = new SolrInputDocument();\n    sid.addField(\"id\", \"uniqueid1\");\n    sid.addField(\"user_name\", \"user1\");\n    sid.addField(\"text\", \"content of record one\");\n    SolrInputDocumentWritable sidw = new SolrInputDocumentWritable(sid);\n\n    mapDriver\n      .withCacheArchive(solrHomeZip.getAbsolutePath())\n      .withOutput(new Text(\"0\"), sidw);\n    //mapDriver.runTest();\n    List<Pair<Text, SolrInputDocumentWritable>> result = mapDriver.run();\n    for (Pair<Text, SolrInputDocumentWritable> p: result) {\n      System.out.println(p.getFirst());\n      System.out.println(p.getSecond());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineMapperTest#testMapper().mjava","pathOld":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineMapperTest#testMapper().mjava","sourceNew":"  @Test\n  public void testMapper() throws Exception {\n    MorphlineMapper mapper = new MorphlineMapper();\n    MapDriver<LongWritable, Text, Text, SolrInputDocumentWritable> mapDriver = MapDriver.newMapDriver(mapper);;\n\n    Configuration config = mapDriver.getConfiguration();\n    setupHadoopConfig(config);\n\n    mapDriver.withInput(new LongWritable(0L), new Text(\"hdfs://localhost/\" +\n        URLEncoder.encode(DOCUMENTS_DIR, \"UTF-8\").replace(\"+\", \"%20\") +\n        \"/sample-statuses-20120906-141433.avro\"));\n\n    SolrInputDocument sid = new SolrInputDocument();\n    sid.addField(\"id\", \"uniqueid1\");\n    sid.addField(\"user_name\", \"user1\");\n    sid.addField(\"text\", \"content of record one\");\n    SolrInputDocumentWritable sidw = new SolrInputDocumentWritable(sid);\n\n    mapDriver\n      .withCacheArchive(solrHomeZip.getAbsolutePath())\n      .withOutput(new Text(\"0\"), sidw);\n    //mapDriver.runTest();\n    List<Pair<Text, SolrInputDocumentWritable>> result = mapDriver.run();\n    for (Pair<Text, SolrInputDocumentWritable> p: result) {\n      System.out.println(p.getFirst());\n      System.out.println(p.getSecond());\n    }\n  }\n\n","sourceOld":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-9220\")\n  public void testMapper() throws Exception {\n    MorphlineMapper mapper = new MorphlineMapper();\n    MapDriver<LongWritable, Text, Text, SolrInputDocumentWritable> mapDriver = MapDriver.newMapDriver(mapper);;\n\n    Configuration config = mapDriver.getConfiguration();\n    setupHadoopConfig(config);\n\n    mapDriver.withInput(new LongWritable(0L), new Text(\"hdfs://localhost/\" +\n        URLEncoder.encode(DOCUMENTS_DIR, \"UTF-8\").replace(\"+\", \"%20\") +\n        \"/sample-statuses-20120906-141433.avro\"));\n\n    SolrInputDocument sid = new SolrInputDocument();\n    sid.addField(\"id\", \"uniqueid1\");\n    sid.addField(\"user_name\", \"user1\");\n    sid.addField(\"text\", \"content of record one\");\n    SolrInputDocumentWritable sidw = new SolrInputDocumentWritable(sid);\n\n    mapDriver\n      .withCacheArchive(solrHomeZip.getAbsolutePath())\n      .withOutput(new Text(\"0\"), sidw);\n    //mapDriver.runTest();\n    List<Pair<Text, SolrInputDocumentWritable>> result = mapDriver.run();\n    for (Pair<Text, SolrInputDocumentWritable> p: result) {\n      System.out.println(p.getFirst());\n      System.out.println(p.getSecond());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12109b652e9210b8d58fca47f6c4a725d058a58e","date":1490373076,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineMapperTest#testMapper().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testMapper() throws Exception {\n    MorphlineMapper mapper = new MorphlineMapper();\n    MapDriver<LongWritable, Text, Text, SolrInputDocumentWritable> mapDriver = MapDriver.newMapDriver(mapper);;\n\n    Configuration config = mapDriver.getConfiguration();\n    setupHadoopConfig(config);\n\n    mapDriver.withInput(new LongWritable(0L), new Text(\"hdfs://localhost/\" +\n        URLEncoder.encode(DOCUMENTS_DIR, \"UTF-8\").replace(\"+\", \"%20\") +\n        \"/sample-statuses-20120906-141433.avro\"));\n\n    SolrInputDocument sid = new SolrInputDocument();\n    sid.addField(\"id\", \"uniqueid1\");\n    sid.addField(\"user_name\", \"user1\");\n    sid.addField(\"text\", \"content of record one\");\n    SolrInputDocumentWritable sidw = new SolrInputDocumentWritable(sid);\n\n    mapDriver\n      .withCacheArchive(solrHomeZip.getAbsolutePath())\n      .withOutput(new Text(\"0\"), sidw);\n    //mapDriver.runTest();\n    List<Pair<Text, SolrInputDocumentWritable>> result = mapDriver.run();\n    for (Pair<Text, SolrInputDocumentWritable> p: result) {\n      System.out.println(p.getFirst());\n      System.out.println(p.getSecond());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe1c4aa9af769a38e878f608070f672efbeac27f","date":1490594650,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineMapperTest#testMapper().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testMapper() throws Exception {\n    MorphlineMapper mapper = new MorphlineMapper();\n    MapDriver<LongWritable, Text, Text, SolrInputDocumentWritable> mapDriver = MapDriver.newMapDriver(mapper);;\n\n    Configuration config = mapDriver.getConfiguration();\n    setupHadoopConfig(config);\n\n    mapDriver.withInput(new LongWritable(0L), new Text(\"hdfs://localhost/\" +\n        URLEncoder.encode(DOCUMENTS_DIR, \"UTF-8\").replace(\"+\", \"%20\") +\n        \"/sample-statuses-20120906-141433.avro\"));\n\n    SolrInputDocument sid = new SolrInputDocument();\n    sid.addField(\"id\", \"uniqueid1\");\n    sid.addField(\"user_name\", \"user1\");\n    sid.addField(\"text\", \"content of record one\");\n    SolrInputDocumentWritable sidw = new SolrInputDocumentWritable(sid);\n\n    mapDriver\n      .withCacheArchive(solrHomeZip.getAbsolutePath())\n      .withOutput(new Text(\"0\"), sidw);\n    //mapDriver.runTest();\n    List<Pair<Text, SolrInputDocumentWritable>> result = mapDriver.run();\n    for (Pair<Text, SolrInputDocumentWritable> p: result) {\n      System.out.println(p.getFirst());\n      System.out.println(p.getSecond());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"17ac431e37b605d1d64aff99512d9729b6f8c8c5":["e242688a83f85ed22f0f4ff79947f1aa68d11dd9"],"12109b652e9210b8d58fca47f6c4a725d058a58e":["17ac431e37b605d1d64aff99512d9729b6f8c8c5"],"7eca0f08d81d05238e41ce8731abaa3ffb15c168":["7090cc5e438550cdcf48d3826fe03f8e42437b6e"],"e242688a83f85ed22f0f4ff79947f1aa68d11dd9":["7eca0f08d81d05238e41ce8731abaa3ffb15c168"],"7090cc5e438550cdcf48d3826fe03f8e42437b6e":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","17ac431e37b605d1d64aff99512d9729b6f8c8c5"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"fe1c4aa9af769a38e878f608070f672efbeac27f":["17ac431e37b605d1d64aff99512d9729b6f8c8c5"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7eca0f08d81d05238e41ce8731abaa3ffb15c168","e242688a83f85ed22f0f4ff79947f1aa68d11dd9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12109b652e9210b8d58fca47f6c4a725d058a58e"]},"commit2Childs":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["7090cc5e438550cdcf48d3826fe03f8e42437b6e","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"17ac431e37b605d1d64aff99512d9729b6f8c8c5":["12109b652e9210b8d58fca47f6c4a725d058a58e","7c3523a0ab04c3002eee3896c75ea5f10f388bcc","fe1c4aa9af769a38e878f608070f672efbeac27f"],"12109b652e9210b8d58fca47f6c4a725d058a58e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7eca0f08d81d05238e41ce8731abaa3ffb15c168":["e242688a83f85ed22f0f4ff79947f1aa68d11dd9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"e242688a83f85ed22f0f4ff79947f1aa68d11dd9":["17ac431e37b605d1d64aff99512d9729b6f8c8c5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"7090cc5e438550cdcf48d3826fe03f8e42437b6e":["7eca0f08d81d05238e41ce8731abaa3ffb15c168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70f91c8322fbffe3a3a897ef20ea19119cac10cd","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"fe1c4aa9af769a38e878f608070f672efbeac27f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","74f45af4339b0daf7a95c820ab88c1aea74fbce0","fe1c4aa9af769a38e878f608070f672efbeac27f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}