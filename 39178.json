{"path":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/mockrandom/MockRandomPostingsFormat.MockIntStreamFactory#openInput(Directory,String,IOContext).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/mockrandom/MockRandomPostingsFormat.MockIntStreamFactory#openInput(Directory,String,IOContext).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec.MockIntStreamFactory#openInput(Directory,String,IOContext).mjava","sourceNew":"    @Override\n    public IntIndexInput openInput(Directory dir, String fileName, IOContext context) throws IOException {\n      // Must only use extension, because IW.addIndexes can\n      // rename segment!\n      final IntStreamFactory f = delegates.get((Math.abs(salt ^ getExtension(fileName).hashCode())) % delegates.size());\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"MockRandomCodec: read using int factory \" + f + \" from fileName=\" + fileName);\n      }\n      return f.openInput(dir, fileName, context);\n    }\n\n","sourceOld":"    @Override\n    public IntIndexInput openInput(Directory dir, String fileName, IOContext context) throws IOException {\n      // Must only use extension, because IW.addIndexes can\n      // rename segment!\n      final IntStreamFactory f = delegates.get((Math.abs(salt ^ getExtension(fileName).hashCode())) % delegates.size());\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"MockRandomCodec: read using int factory \" + f + \" from fileName=\" + fileName);\n      }\n      return f.openInput(dir, fileName, context);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat.MockIntStreamFactory#openInput(Directory,String,IOContext).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/mockrandom/MockRandomPostingsFormat.MockIntStreamFactory#openInput(Directory,String,IOContext).mjava","sourceNew":"    @Override\n    public IntIndexInput openInput(Directory dir, String fileName, IOContext context) throws IOException {\n      // Must only use extension, because IW.addIndexes can\n      // rename segment!\n      final IntStreamFactory f = delegates.get((Math.abs(salt ^ getExtension(fileName).hashCode())) % delegates.size());\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"MockRandomCodec: read using int factory \" + f + \" from fileName=\" + fileName);\n      }\n      return f.openInput(dir, fileName, context);\n    }\n\n","sourceOld":"    @Override\n    public IntIndexInput openInput(Directory dir, String fileName, IOContext context) throws IOException {\n      // Must only use extension, because IW.addIndexes can\n      // rename segment!\n      final IntStreamFactory f = delegates.get((Math.abs(salt ^ getExtension(fileName).hashCode())) % delegates.size());\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"MockRandomCodec: read using int factory \" + f + \" from fileName=\" + fileName);\n      }\n      return f.openInput(dir, fileName, context);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}