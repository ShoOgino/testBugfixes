{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixCellsTokenizer#incrementToken().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixCellsTokenizer#incrementToken().mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixCellsTokenizer#incrementToken().mjava","sourceNew":"  @Override\n  public final boolean incrementToken() throws IOException {\n    clearAttributes();\n    int length = 0;\n    char[] buffer = termAtt.buffer();\n    while (true) {\n      char c = (char) input.read();\n      if (c < 0) break;\n      if (c == 'a' || c == 'A') {\n        buffer[length++] = 'A';\n        continue;\n      }\n      if (c == 'b' || c == 'B') {\n        buffer[length++] = 'B';\n        continue;\n      }\n      if (c == 'c' || c == 'C') {\n        buffer[length++] = 'C';\n        continue;\n      }\n      if (c == 'd' || c == 'D') {\n        buffer[length++] = 'D';\n        continue;\n      }\n      if (c == '*') {\n        buffer[length++] = '*';\n        continue;\n      }\n      if (c == '+') {\n        buffer[length++] = '+';\n        continue;\n      }\n\n      if (length > 0) {\n        // Skip any other character\n        break;\n      }\n    }\n\n    termAtt.setLength(length);\n    return length > 0; // should only happen at the end\n  }\n\n","sourceOld":"  @Override\n  public final boolean incrementToken() throws IOException {\n    clearAttributes();\n    int length = 0;\n    char[] buffer = termAtt.buffer();\n    while (true) {\n      char c = (char) input.read();\n      if (c < 0) break;\n      if (c == 'a' || c == 'A') {\n        buffer[length++] = 'A';\n        continue;\n      }\n      if (c == 'b' || c == 'B') {\n        buffer[length++] = 'B';\n        continue;\n      }\n      if (c == 'c' || c == 'C') {\n        buffer[length++] = 'C';\n        continue;\n      }\n      if (c == 'd' || c == 'D') {\n        buffer[length++] = 'D';\n        continue;\n      }\n      if (c == '*') {\n        buffer[length++] = '*';\n        continue;\n      }\n      if (c == '+') {\n        buffer[length++] = '+';\n        continue;\n      }\n\n      if (length > 0) {\n        // Skip any other character\n        break;\n      }\n    }\n\n    termAtt.setLength(length);\n    return length > 0; // should only happen at the end\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a760d616ff5d0bebf8796e532722706bcf1bb3ea","date":1347378898,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixCellsTokenizer#incrementToken().mjava","sourceNew":null,"sourceOld":"  @Override\n  public final boolean incrementToken() throws IOException {\n    clearAttributes();\n    int length = 0;\n    char[] buffer = termAtt.buffer();\n    while (true) {\n      char c = (char) input.read();\n      if (c < 0) break;\n      if (c == 'a' || c == 'A') {\n        buffer[length++] = 'A';\n        continue;\n      }\n      if (c == 'b' || c == 'B') {\n        buffer[length++] = 'B';\n        continue;\n      }\n      if (c == 'c' || c == 'C') {\n        buffer[length++] = 'C';\n        continue;\n      }\n      if (c == 'd' || c == 'D') {\n        buffer[length++] = 'D';\n        continue;\n      }\n      if (c == '*') {\n        buffer[length++] = '*';\n        continue;\n      }\n      if (c == '+') {\n        buffer[length++] = '+';\n        continue;\n      }\n\n      if (length > 0) {\n        // Skip any other character\n        break;\n      }\n    }\n\n    termAtt.setLength(length);\n    return length > 0; // should only happen at the end\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a760d616ff5d0bebf8796e532722706bcf1bb3ea":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a760d616ff5d0bebf8796e532722706bcf1bb3ea"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a760d616ff5d0bebf8796e532722706bcf1bb3ea"],"a760d616ff5d0bebf8796e532722706bcf1bb3ea":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}