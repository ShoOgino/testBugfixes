{"path":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            // (, line 205\n            // or, line 207\n            lab0: do {\n                v_1 = cursor;\n                lab1: do {\n                    // call exception1, line 207\n                    if (!r_exception1())\n                    {\n                        break lab1;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                lab2: do {\n                    // not, line 208\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // hop, line 208\n                            {\n                                int c = cursor + 3;\n                                if (0 > c || c > limit)\n                                {\n                                    break lab3;\n                                }\n                                cursor = c;\n                            }\n                            break lab2;\n                        } while (false);\n                        cursor = v_2;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                // (, line 208\n                // do, line 209\n                v_3 = cursor;\n                lab4: do {\n                    // call prelude, line 209\n                    if (!r_prelude())\n                    {\n                        break lab4;\n                    }\n                } while (false);\n                cursor = v_3;\n                // do, line 210\n                v_4 = cursor;\n                lab5: do {\n                    // call mark_regions, line 210\n                    if (!r_mark_regions())\n                    {\n                        break lab5;\n                    }\n                } while (false);\n                cursor = v_4;\n                // backwards, line 211\n                limit_backward = cursor; cursor = limit;\n                // (, line 211\n                // do, line 213\n                v_5 = limit - cursor;\n                lab6: do {\n                    // call Step_1a, line 213\n                    if (!r_Step_1a())\n                    {\n                        break lab6;\n                    }\n                } while (false);\n                cursor = limit - v_5;\n                // or, line 215\n                lab7: do {\n                    v_6 = limit - cursor;\n                    lab8: do {\n                        // call exception2, line 215\n                        if (!r_exception2())\n                        {\n                            break lab8;\n                        }\n                        break lab7;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // (, line 215\n                    // do, line 217\n                    v_7 = limit - cursor;\n                    lab9: do {\n                        // call Step_1b, line 217\n                        if (!r_Step_1b())\n                        {\n                            break lab9;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    // do, line 218\n                    v_8 = limit - cursor;\n                    lab10: do {\n                        // call Step_1c, line 218\n                        if (!r_Step_1c())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = limit - v_8;\n                    // do, line 220\n                    v_9 = limit - cursor;\n                    lab11: do {\n                        // call Step_2, line 220\n                        if (!r_Step_2())\n                        {\n                            break lab11;\n                        }\n                    } while (false);\n                    cursor = limit - v_9;\n                    // do, line 221\n                    v_10 = limit - cursor;\n                    lab12: do {\n                        // call Step_3, line 221\n                        if (!r_Step_3())\n                        {\n                            break lab12;\n                        }\n                    } while (false);\n                    cursor = limit - v_10;\n                    // do, line 222\n                    v_11 = limit - cursor;\n                    lab13: do {\n                        // call Step_4, line 222\n                        if (!r_Step_4())\n                        {\n                            break lab13;\n                        }\n                    } while (false);\n                    cursor = limit - v_11;\n                    // do, line 224\n                    v_12 = limit - cursor;\n                    lab14: do {\n                        // call Step_5, line 224\n                        if (!r_Step_5())\n                        {\n                            break lab14;\n                        }\n                    } while (false);\n                    cursor = limit - v_12;\n                } while (false);\n                cursor = limit_backward;                // do, line 227\n                v_13 = cursor;\n                lab15: do {\n                    // call postlude, line 227\n                    if (!r_postlude())\n                    {\n                        break lab15;\n                    }\n                } while (false);\n                cursor = v_13;\n            } while (false);\n            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            // (, line 205\n            // or, line 207\n            lab0: do {\n                v_1 = cursor;\n                lab1: do {\n                    // call exception1, line 207\n                    if (!r_exception1())\n                    {\n                        break lab1;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                lab2: do {\n                    // not, line 208\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // hop, line 208\n                            {\n                                int c = cursor + 3;\n                                if (0 > c || c > limit)\n                                {\n                                    break lab3;\n                                }\n                                cursor = c;\n                            }\n                            break lab2;\n                        } while (false);\n                        cursor = v_2;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                // (, line 208\n                // do, line 209\n                v_3 = cursor;\n                lab4: do {\n                    // call prelude, line 209\n                    if (!r_prelude())\n                    {\n                        break lab4;\n                    }\n                } while (false);\n                cursor = v_3;\n                // do, line 210\n                v_4 = cursor;\n                lab5: do {\n                    // call mark_regions, line 210\n                    if (!r_mark_regions())\n                    {\n                        break lab5;\n                    }\n                } while (false);\n                cursor = v_4;\n                // backwards, line 211\n                limit_backward = cursor; cursor = limit;\n                // (, line 211\n                // do, line 213\n                v_5 = limit - cursor;\n                lab6: do {\n                    // call Step_1a, line 213\n                    if (!r_Step_1a())\n                    {\n                        break lab6;\n                    }\n                } while (false);\n                cursor = limit - v_5;\n                // or, line 215\n                lab7: do {\n                    v_6 = limit - cursor;\n                    lab8: do {\n                        // call exception2, line 215\n                        if (!r_exception2())\n                        {\n                            break lab8;\n                        }\n                        break lab7;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // (, line 215\n                    // do, line 217\n                    v_7 = limit - cursor;\n                    lab9: do {\n                        // call Step_1b, line 217\n                        if (!r_Step_1b())\n                        {\n                            break lab9;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    // do, line 218\n                    v_8 = limit - cursor;\n                    lab10: do {\n                        // call Step_1c, line 218\n                        if (!r_Step_1c())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = limit - v_8;\n                    // do, line 220\n                    v_9 = limit - cursor;\n                    lab11: do {\n                        // call Step_2, line 220\n                        if (!r_Step_2())\n                        {\n                            break lab11;\n                        }\n                    } while (false);\n                    cursor = limit - v_9;\n                    // do, line 221\n                    v_10 = limit - cursor;\n                    lab12: do {\n                        // call Step_3, line 221\n                        if (!r_Step_3())\n                        {\n                            break lab12;\n                        }\n                    } while (false);\n                    cursor = limit - v_10;\n                    // do, line 222\n                    v_11 = limit - cursor;\n                    lab13: do {\n                        // call Step_4, line 222\n                        if (!r_Step_4())\n                        {\n                            break lab13;\n                        }\n                    } while (false);\n                    cursor = limit - v_11;\n                    // do, line 224\n                    v_12 = limit - cursor;\n                    lab14: do {\n                        // call Step_5, line 224\n                        if (!r_Step_5())\n                        {\n                            break lab14;\n                        }\n                    } while (false);\n                    cursor = limit - v_12;\n                } while (false);\n                cursor = limit_backward;                // do, line 227\n                v_13 = cursor;\n                lab15: do {\n                    // call postlude, line 227\n                    if (!r_postlude())\n                    {\n                        break lab15;\n                    }\n                } while (false);\n                cursor = v_13;\n            } while (false);\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a6a9e301c12ab07b1d0428b5aad813fff317b3","date":1343846505,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n                    // (, line 205\n                    // or, line 207\n                    lab0: do {\n                        v_1 = cursor;\n                        lab1: do {\n                            // call exception1, line 207\n                            if (!r_exception1())\n                            {\n                                break lab1;\n                            }\n                            break lab0;\n                        } while (false);\n                        cursor = v_1;\n                        lab2: do {\n                            // not, line 208\n                            {\n                                v_2 = cursor;\n                                lab3: do {\n                                    // hop, line 208\n                                    {\n                                        int c = cursor + 3;\n                                        if (0 > c || c > limit)\n                                        {\n                                            break lab3;\n                                        }\n                                        cursor = c;\n                                    }\n                                    break lab2;\n                                } while (false);\n                                cursor = v_2;\n                            }\n                            break lab0;\n                        } while (false);\n                        cursor = v_1;\n                        // (, line 208\n                        // do, line 209\n                        v_3 = cursor;\n                        lab4: do {\n                            // call prelude, line 209\n                            if (!r_prelude())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        cursor = v_3;\n                        // do, line 210\n                        v_4 = cursor;\n                        lab5: do {\n                            // call mark_regions, line 210\n                            if (!r_mark_regions())\n                            {\n                                break lab5;\n                            }\n                        } while (false);\n                        cursor = v_4;\n                        // backwards, line 211\n                        limit_backward = cursor; cursor = limit;\n                        // (, line 211\n                        // do, line 213\n                        v_5 = limit - cursor;\n                        lab6: do {\n                            // call Step_1a, line 213\n                            if (!r_Step_1a())\n                            {\n                                break lab6;\n                            }\n                        } while (false);\n                        cursor = limit - v_5;\n                        // or, line 215\n                        lab7: do {\n                            v_6 = limit - cursor;\n                            lab8: do {\n                                // call exception2, line 215\n                                if (!r_exception2())\n                                {\n                                    break lab8;\n                                }\n                                break lab7;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // (, line 215\n                            // do, line 217\n                            v_7 = limit - cursor;\n                            lab9: do {\n                                // call Step_1b, line 217\n                                if (!r_Step_1b())\n                                {\n                                    break lab9;\n                                }\n                            } while (false);\n                            cursor = limit - v_7;\n                            // do, line 218\n                            v_8 = limit - cursor;\n                            lab10: do {\n                                // call Step_1c, line 218\n                                if (!r_Step_1c())\n                                {\n                                    break lab10;\n                                }\n                            } while (false);\n                            cursor = limit - v_8;\n                            // do, line 220\n                            v_9 = limit - cursor;\n                            lab11: do {\n                                // call Step_2, line 220\n                                if (!r_Step_2())\n                                {\n                                    break lab11;\n                                }\n                            } while (false);\n                            cursor = limit - v_9;\n                            // do, line 221\n                            v_10 = limit - cursor;\n                            lab12: do {\n                                // call Step_3, line 221\n                                if (!r_Step_3())\n                                {\n                                    break lab12;\n                                }\n                            } while (false);\n                            cursor = limit - v_10;\n                            // do, line 222\n                            v_11 = limit - cursor;\n                            lab13: do {\n                                // call Step_4, line 222\n                                if (!r_Step_4())\n                                {\n                                    break lab13;\n                                }\n                            } while (false);\n                            cursor = limit - v_11;\n                            // do, line 224\n                            v_12 = limit - cursor;\n                            lab14: do {\n                                // call Step_5, line 224\n                                if (!r_Step_5())\n                                {\n                                    break lab14;\n                                }\n                            } while (false);\n                            cursor = limit - v_12;\n                        } while (false);\n                        cursor = limit_backward;                        // do, line 227\n                        v_13 = cursor;\n                        lab15: do {\n                            // call postlude, line 227\n                            if (!r_postlude())\n                            {\n                                break lab15;\n                            }\n                        } while (false);\n                        cursor = v_13;\n                    } while (false);\n                    return true;\n                }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            // (, line 205\n            // or, line 207\n            lab0: do {\n                v_1 = cursor;\n                lab1: do {\n                    // call exception1, line 207\n                    if (!r_exception1())\n                    {\n                        break lab1;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                lab2: do {\n                    // not, line 208\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // hop, line 208\n                            {\n                                int c = cursor + 3;\n                                if (0 > c || c > limit)\n                                {\n                                    break lab3;\n                                }\n                                cursor = c;\n                            }\n                            break lab2;\n                        } while (false);\n                        cursor = v_2;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                // (, line 208\n                // do, line 209\n                v_3 = cursor;\n                lab4: do {\n                    // call prelude, line 209\n                    if (!r_prelude())\n                    {\n                        break lab4;\n                    }\n                } while (false);\n                cursor = v_3;\n                // do, line 210\n                v_4 = cursor;\n                lab5: do {\n                    // call mark_regions, line 210\n                    if (!r_mark_regions())\n                    {\n                        break lab5;\n                    }\n                } while (false);\n                cursor = v_4;\n                // backwards, line 211\n                limit_backward = cursor; cursor = limit;\n                // (, line 211\n                // do, line 213\n                v_5 = limit - cursor;\n                lab6: do {\n                    // call Step_1a, line 213\n                    if (!r_Step_1a())\n                    {\n                        break lab6;\n                    }\n                } while (false);\n                cursor = limit - v_5;\n                // or, line 215\n                lab7: do {\n                    v_6 = limit - cursor;\n                    lab8: do {\n                        // call exception2, line 215\n                        if (!r_exception2())\n                        {\n                            break lab8;\n                        }\n                        break lab7;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // (, line 215\n                    // do, line 217\n                    v_7 = limit - cursor;\n                    lab9: do {\n                        // call Step_1b, line 217\n                        if (!r_Step_1b())\n                        {\n                            break lab9;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    // do, line 218\n                    v_8 = limit - cursor;\n                    lab10: do {\n                        // call Step_1c, line 218\n                        if (!r_Step_1c())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = limit - v_8;\n                    // do, line 220\n                    v_9 = limit - cursor;\n                    lab11: do {\n                        // call Step_2, line 220\n                        if (!r_Step_2())\n                        {\n                            break lab11;\n                        }\n                    } while (false);\n                    cursor = limit - v_9;\n                    // do, line 221\n                    v_10 = limit - cursor;\n                    lab12: do {\n                        // call Step_3, line 221\n                        if (!r_Step_3())\n                        {\n                            break lab12;\n                        }\n                    } while (false);\n                    cursor = limit - v_10;\n                    // do, line 222\n                    v_11 = limit - cursor;\n                    lab13: do {\n                        // call Step_4, line 222\n                        if (!r_Step_4())\n                        {\n                            break lab13;\n                        }\n                    } while (false);\n                    cursor = limit - v_11;\n                    // do, line 224\n                    v_12 = limit - cursor;\n                    lab14: do {\n                        // call Step_5, line 224\n                        if (!r_Step_5())\n                        {\n                            break lab14;\n                        }\n                    } while (false);\n                    cursor = limit - v_12;\n                } while (false);\n                cursor = limit_backward;                // do, line 227\n                v_13 = cursor;\n                lab15: do {\n                    // call postlude, line 227\n                    if (!r_postlude())\n                    {\n                        break lab15;\n                    }\n                } while (false);\n                cursor = v_13;\n            } while (false);\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n                    // (, line 205\n                    // or, line 207\n                    lab0: do {\n                        v_1 = cursor;\n                        lab1: do {\n                            // call exception1, line 207\n                            if (!r_exception1())\n                            {\n                                break lab1;\n                            }\n                            break lab0;\n                        } while (false);\n                        cursor = v_1;\n                        lab2: do {\n                            // not, line 208\n                            {\n                                v_2 = cursor;\n                                lab3: do {\n                                    // hop, line 208\n                                    {\n                                        int c = cursor + 3;\n                                        if (0 > c || c > limit)\n                                        {\n                                            break lab3;\n                                        }\n                                        cursor = c;\n                                    }\n                                    break lab2;\n                                } while (false);\n                                cursor = v_2;\n                            }\n                            break lab0;\n                        } while (false);\n                        cursor = v_1;\n                        // (, line 208\n                        // do, line 209\n                        v_3 = cursor;\n                        lab4: do {\n                            // call prelude, line 209\n                            if (!r_prelude())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        cursor = v_3;\n                        // do, line 210\n                        v_4 = cursor;\n                        lab5: do {\n                            // call mark_regions, line 210\n                            if (!r_mark_regions())\n                            {\n                                break lab5;\n                            }\n                        } while (false);\n                        cursor = v_4;\n                        // backwards, line 211\n                        limit_backward = cursor; cursor = limit;\n                        // (, line 211\n                        // do, line 213\n                        v_5 = limit - cursor;\n                        lab6: do {\n                            // call Step_1a, line 213\n                            if (!r_Step_1a())\n                            {\n                                break lab6;\n                            }\n                        } while (false);\n                        cursor = limit - v_5;\n                        // or, line 215\n                        lab7: do {\n                            v_6 = limit - cursor;\n                            lab8: do {\n                                // call exception2, line 215\n                                if (!r_exception2())\n                                {\n                                    break lab8;\n                                }\n                                break lab7;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // (, line 215\n                            // do, line 217\n                            v_7 = limit - cursor;\n                            lab9: do {\n                                // call Step_1b, line 217\n                                if (!r_Step_1b())\n                                {\n                                    break lab9;\n                                }\n                            } while (false);\n                            cursor = limit - v_7;\n                            // do, line 218\n                            v_8 = limit - cursor;\n                            lab10: do {\n                                // call Step_1c, line 218\n                                if (!r_Step_1c())\n                                {\n                                    break lab10;\n                                }\n                            } while (false);\n                            cursor = limit - v_8;\n                            // do, line 220\n                            v_9 = limit - cursor;\n                            lab11: do {\n                                // call Step_2, line 220\n                                if (!r_Step_2())\n                                {\n                                    break lab11;\n                                }\n                            } while (false);\n                            cursor = limit - v_9;\n                            // do, line 221\n                            v_10 = limit - cursor;\n                            lab12: do {\n                                // call Step_3, line 221\n                                if (!r_Step_3())\n                                {\n                                    break lab12;\n                                }\n                            } while (false);\n                            cursor = limit - v_10;\n                            // do, line 222\n                            v_11 = limit - cursor;\n                            lab13: do {\n                                // call Step_4, line 222\n                                if (!r_Step_4())\n                                {\n                                    break lab13;\n                                }\n                            } while (false);\n                            cursor = limit - v_11;\n                            // do, line 224\n                            v_12 = limit - cursor;\n                            lab14: do {\n                                // call Step_5, line 224\n                                if (!r_Step_5())\n                                {\n                                    break lab14;\n                                }\n                            } while (false);\n                            cursor = limit - v_12;\n                        } while (false);\n                        cursor = limit_backward;                        // do, line 227\n                        v_13 = cursor;\n                        lab15: do {\n                            // call postlude, line 227\n                            if (!r_postlude())\n                            {\n                                break lab15;\n                            }\n                        } while (false);\n                        cursor = v_13;\n                    } while (false);\n                    return true;\n                }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            // (, line 205\n            // or, line 207\n            lab0: do {\n                v_1 = cursor;\n                lab1: do {\n                    // call exception1, line 207\n                    if (!r_exception1())\n                    {\n                        break lab1;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                lab2: do {\n                    // not, line 208\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // hop, line 208\n                            {\n                                int c = cursor + 3;\n                                if (0 > c || c > limit)\n                                {\n                                    break lab3;\n                                }\n                                cursor = c;\n                            }\n                            break lab2;\n                        } while (false);\n                        cursor = v_2;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                // (, line 208\n                // do, line 209\n                v_3 = cursor;\n                lab4: do {\n                    // call prelude, line 209\n                    if (!r_prelude())\n                    {\n                        break lab4;\n                    }\n                } while (false);\n                cursor = v_3;\n                // do, line 210\n                v_4 = cursor;\n                lab5: do {\n                    // call mark_regions, line 210\n                    if (!r_mark_regions())\n                    {\n                        break lab5;\n                    }\n                } while (false);\n                cursor = v_4;\n                // backwards, line 211\n                limit_backward = cursor; cursor = limit;\n                // (, line 211\n                // do, line 213\n                v_5 = limit - cursor;\n                lab6: do {\n                    // call Step_1a, line 213\n                    if (!r_Step_1a())\n                    {\n                        break lab6;\n                    }\n                } while (false);\n                cursor = limit - v_5;\n                // or, line 215\n                lab7: do {\n                    v_6 = limit - cursor;\n                    lab8: do {\n                        // call exception2, line 215\n                        if (!r_exception2())\n                        {\n                            break lab8;\n                        }\n                        break lab7;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // (, line 215\n                    // do, line 217\n                    v_7 = limit - cursor;\n                    lab9: do {\n                        // call Step_1b, line 217\n                        if (!r_Step_1b())\n                        {\n                            break lab9;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    // do, line 218\n                    v_8 = limit - cursor;\n                    lab10: do {\n                        // call Step_1c, line 218\n                        if (!r_Step_1c())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = limit - v_8;\n                    // do, line 220\n                    v_9 = limit - cursor;\n                    lab11: do {\n                        // call Step_2, line 220\n                        if (!r_Step_2())\n                        {\n                            break lab11;\n                        }\n                    } while (false);\n                    cursor = limit - v_9;\n                    // do, line 221\n                    v_10 = limit - cursor;\n                    lab12: do {\n                        // call Step_3, line 221\n                        if (!r_Step_3())\n                        {\n                            break lab12;\n                        }\n                    } while (false);\n                    cursor = limit - v_10;\n                    // do, line 222\n                    v_11 = limit - cursor;\n                    lab13: do {\n                        // call Step_4, line 222\n                        if (!r_Step_4())\n                        {\n                            break lab13;\n                        }\n                    } while (false);\n                    cursor = limit - v_11;\n                    // do, line 224\n                    v_12 = limit - cursor;\n                    lab14: do {\n                        // call Step_5, line 224\n                        if (!r_Step_5())\n                        {\n                            break lab14;\n                        }\n                    } while (false);\n                    cursor = limit - v_12;\n                } while (false);\n                cursor = limit_backward;                // do, line 227\n                v_13 = cursor;\n                lab15: do {\n                    // call postlude, line 227\n                    if (!r_postlude())\n                    {\n                        break lab15;\n                    }\n                } while (false);\n                cursor = v_13;\n            } while (false);\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n                    // (, line 205\n                    // or, line 207\n                    lab0: do {\n                        v_1 = cursor;\n                        lab1: do {\n                            // call exception1, line 207\n                            if (!r_exception1())\n                            {\n                                break lab1;\n                            }\n                            break lab0;\n                        } while (false);\n                        cursor = v_1;\n                        lab2: do {\n                            // not, line 208\n                            {\n                                v_2 = cursor;\n                                lab3: do {\n                                    // hop, line 208\n                                    {\n                                        int c = cursor + 3;\n                                        if (0 > c || c > limit)\n                                        {\n                                            break lab3;\n                                        }\n                                        cursor = c;\n                                    }\n                                    break lab2;\n                                } while (false);\n                                cursor = v_2;\n                            }\n                            break lab0;\n                        } while (false);\n                        cursor = v_1;\n                        // (, line 208\n                        // do, line 209\n                        v_3 = cursor;\n                        lab4: do {\n                            // call prelude, line 209\n                            if (!r_prelude())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        cursor = v_3;\n                        // do, line 210\n                        v_4 = cursor;\n                        lab5: do {\n                            // call mark_regions, line 210\n                            if (!r_mark_regions())\n                            {\n                                break lab5;\n                            }\n                        } while (false);\n                        cursor = v_4;\n                        // backwards, line 211\n                        limit_backward = cursor; cursor = limit;\n                        // (, line 211\n                        // do, line 213\n                        v_5 = limit - cursor;\n                        lab6: do {\n                            // call Step_1a, line 213\n                            if (!r_Step_1a())\n                            {\n                                break lab6;\n                            }\n                        } while (false);\n                        cursor = limit - v_5;\n                        // or, line 215\n                        lab7: do {\n                            v_6 = limit - cursor;\n                            lab8: do {\n                                // call exception2, line 215\n                                if (!r_exception2())\n                                {\n                                    break lab8;\n                                }\n                                break lab7;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // (, line 215\n                            // do, line 217\n                            v_7 = limit - cursor;\n                            lab9: do {\n                                // call Step_1b, line 217\n                                if (!r_Step_1b())\n                                {\n                                    break lab9;\n                                }\n                            } while (false);\n                            cursor = limit - v_7;\n                            // do, line 218\n                            v_8 = limit - cursor;\n                            lab10: do {\n                                // call Step_1c, line 218\n                                if (!r_Step_1c())\n                                {\n                                    break lab10;\n                                }\n                            } while (false);\n                            cursor = limit - v_8;\n                            // do, line 220\n                            v_9 = limit - cursor;\n                            lab11: do {\n                                // call Step_2, line 220\n                                if (!r_Step_2())\n                                {\n                                    break lab11;\n                                }\n                            } while (false);\n                            cursor = limit - v_9;\n                            // do, line 221\n                            v_10 = limit - cursor;\n                            lab12: do {\n                                // call Step_3, line 221\n                                if (!r_Step_3())\n                                {\n                                    break lab12;\n                                }\n                            } while (false);\n                            cursor = limit - v_10;\n                            // do, line 222\n                            v_11 = limit - cursor;\n                            lab13: do {\n                                // call Step_4, line 222\n                                if (!r_Step_4())\n                                {\n                                    break lab13;\n                                }\n                            } while (false);\n                            cursor = limit - v_11;\n                            // do, line 224\n                            v_12 = limit - cursor;\n                            lab14: do {\n                                // call Step_5, line 224\n                                if (!r_Step_5())\n                                {\n                                    break lab14;\n                                }\n                            } while (false);\n                            cursor = limit - v_12;\n                        } while (false);\n                        cursor = limit_backward;                        // do, line 227\n                        v_13 = cursor;\n                        lab15: do {\n                            // call postlude, line 227\n                            if (!r_postlude())\n                            {\n                                break lab15;\n                            }\n                        } while (false);\n                        cursor = v_13;\n                    } while (false);\n                    return true;\n                }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            // (, line 205\n            // or, line 207\n            lab0: do {\n                v_1 = cursor;\n                lab1: do {\n                    // call exception1, line 207\n                    if (!r_exception1())\n                    {\n                        break lab1;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                lab2: do {\n                    // not, line 208\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // hop, line 208\n                            {\n                                int c = cursor + 3;\n                                if (0 > c || c > limit)\n                                {\n                                    break lab3;\n                                }\n                                cursor = c;\n                            }\n                            break lab2;\n                        } while (false);\n                        cursor = v_2;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                // (, line 208\n                // do, line 209\n                v_3 = cursor;\n                lab4: do {\n                    // call prelude, line 209\n                    if (!r_prelude())\n                    {\n                        break lab4;\n                    }\n                } while (false);\n                cursor = v_3;\n                // do, line 210\n                v_4 = cursor;\n                lab5: do {\n                    // call mark_regions, line 210\n                    if (!r_mark_regions())\n                    {\n                        break lab5;\n                    }\n                } while (false);\n                cursor = v_4;\n                // backwards, line 211\n                limit_backward = cursor; cursor = limit;\n                // (, line 211\n                // do, line 213\n                v_5 = limit - cursor;\n                lab6: do {\n                    // call Step_1a, line 213\n                    if (!r_Step_1a())\n                    {\n                        break lab6;\n                    }\n                } while (false);\n                cursor = limit - v_5;\n                // or, line 215\n                lab7: do {\n                    v_6 = limit - cursor;\n                    lab8: do {\n                        // call exception2, line 215\n                        if (!r_exception2())\n                        {\n                            break lab8;\n                        }\n                        break lab7;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // (, line 215\n                    // do, line 217\n                    v_7 = limit - cursor;\n                    lab9: do {\n                        // call Step_1b, line 217\n                        if (!r_Step_1b())\n                        {\n                            break lab9;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    // do, line 218\n                    v_8 = limit - cursor;\n                    lab10: do {\n                        // call Step_1c, line 218\n                        if (!r_Step_1c())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = limit - v_8;\n                    // do, line 220\n                    v_9 = limit - cursor;\n                    lab11: do {\n                        // call Step_2, line 220\n                        if (!r_Step_2())\n                        {\n                            break lab11;\n                        }\n                    } while (false);\n                    cursor = limit - v_9;\n                    // do, line 221\n                    v_10 = limit - cursor;\n                    lab12: do {\n                        // call Step_3, line 221\n                        if (!r_Step_3())\n                        {\n                            break lab12;\n                        }\n                    } while (false);\n                    cursor = limit - v_10;\n                    // do, line 222\n                    v_11 = limit - cursor;\n                    lab13: do {\n                        // call Step_4, line 222\n                        if (!r_Step_4())\n                        {\n                            break lab13;\n                        }\n                    } while (false);\n                    cursor = limit - v_11;\n                    // do, line 224\n                    v_12 = limit - cursor;\n                    lab14: do {\n                        // call Step_5, line 224\n                        if (!r_Step_5())\n                        {\n                            break lab14;\n                        }\n                    } while (false);\n                    cursor = limit - v_12;\n                } while (false);\n                cursor = limit_backward;                // do, line 227\n                v_13 = cursor;\n                lab15: do {\n                    // call postlude, line 227\n                    if (!r_postlude())\n                    {\n                        break lab15;\n                    }\n                } while (false);\n                cursor = v_13;\n            } while (false);\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","sourceNew":"                @Override\n                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n                    // (, line 205\n                    // or, line 207\n                    lab0: do {\n                        v_1 = cursor;\n                        lab1: do {\n                            // call exception1, line 207\n                            if (!r_exception1())\n                            {\n                                break lab1;\n                            }\n                            break lab0;\n                        } while (false);\n                        cursor = v_1;\n                        lab2: do {\n                            // not, line 208\n                            {\n                                v_2 = cursor;\n                                lab3: do {\n                                    // hop, line 208\n                                    {\n                                        int c = cursor + 3;\n                                        if (0 > c || c > limit)\n                                        {\n                                            break lab3;\n                                        }\n                                        cursor = c;\n                                    }\n                                    break lab2;\n                                } while (false);\n                                cursor = v_2;\n                            }\n                            break lab0;\n                        } while (false);\n                        cursor = v_1;\n                        // (, line 208\n                        // do, line 209\n                        v_3 = cursor;\n                        lab4: do {\n                            // call prelude, line 209\n                            if (!r_prelude())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        cursor = v_3;\n                        // do, line 210\n                        v_4 = cursor;\n                        lab5: do {\n                            // call mark_regions, line 210\n                            if (!r_mark_regions())\n                            {\n                                break lab5;\n                            }\n                        } while (false);\n                        cursor = v_4;\n                        // backwards, line 211\n                        limit_backward = cursor; cursor = limit;\n                        // (, line 211\n                        // do, line 213\n                        v_5 = limit - cursor;\n                        lab6: do {\n                            // call Step_1a, line 213\n                            if (!r_Step_1a())\n                            {\n                                break lab6;\n                            }\n                        } while (false);\n                        cursor = limit - v_5;\n                        // or, line 215\n                        lab7: do {\n                            v_6 = limit - cursor;\n                            lab8: do {\n                                // call exception2, line 215\n                                if (!r_exception2())\n                                {\n                                    break lab8;\n                                }\n                                break lab7;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // (, line 215\n                            // do, line 217\n                            v_7 = limit - cursor;\n                            lab9: do {\n                                // call Step_1b, line 217\n                                if (!r_Step_1b())\n                                {\n                                    break lab9;\n                                }\n                            } while (false);\n                            cursor = limit - v_7;\n                            // do, line 218\n                            v_8 = limit - cursor;\n                            lab10: do {\n                                // call Step_1c, line 218\n                                if (!r_Step_1c())\n                                {\n                                    break lab10;\n                                }\n                            } while (false);\n                            cursor = limit - v_8;\n                            // do, line 220\n                            v_9 = limit - cursor;\n                            lab11: do {\n                                // call Step_2, line 220\n                                if (!r_Step_2())\n                                {\n                                    break lab11;\n                                }\n                            } while (false);\n                            cursor = limit - v_9;\n                            // do, line 221\n                            v_10 = limit - cursor;\n                            lab12: do {\n                                // call Step_3, line 221\n                                if (!r_Step_3())\n                                {\n                                    break lab12;\n                                }\n                            } while (false);\n                            cursor = limit - v_10;\n                            // do, line 222\n                            v_11 = limit - cursor;\n                            lab13: do {\n                                // call Step_4, line 222\n                                if (!r_Step_4())\n                                {\n                                    break lab13;\n                                }\n                            } while (false);\n                            cursor = limit - v_11;\n                            // do, line 224\n                            v_12 = limit - cursor;\n                            lab14: do {\n                                // call Step_5, line 224\n                                if (!r_Step_5())\n                                {\n                                    break lab14;\n                                }\n                            } while (false);\n                            cursor = limit - v_12;\n                        } while (false);\n                        cursor = limit_backward;                        // do, line 227\n                        v_13 = cursor;\n                        lab15: do {\n                            // call postlude, line 227\n                            if (!r_postlude())\n                            {\n                                break lab15;\n                            }\n                        } while (false);\n                        cursor = v_13;\n                    } while (false);\n                    return true;\n                }\n\n","sourceOld":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n                    // (, line 205\n                    // or, line 207\n                    lab0: do {\n                        v_1 = cursor;\n                        lab1: do {\n                            // call exception1, line 207\n                            if (!r_exception1())\n                            {\n                                break lab1;\n                            }\n                            break lab0;\n                        } while (false);\n                        cursor = v_1;\n                        lab2: do {\n                            // not, line 208\n                            {\n                                v_2 = cursor;\n                                lab3: do {\n                                    // hop, line 208\n                                    {\n                                        int c = cursor + 3;\n                                        if (0 > c || c > limit)\n                                        {\n                                            break lab3;\n                                        }\n                                        cursor = c;\n                                    }\n                                    break lab2;\n                                } while (false);\n                                cursor = v_2;\n                            }\n                            break lab0;\n                        } while (false);\n                        cursor = v_1;\n                        // (, line 208\n                        // do, line 209\n                        v_3 = cursor;\n                        lab4: do {\n                            // call prelude, line 209\n                            if (!r_prelude())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        cursor = v_3;\n                        // do, line 210\n                        v_4 = cursor;\n                        lab5: do {\n                            // call mark_regions, line 210\n                            if (!r_mark_regions())\n                            {\n                                break lab5;\n                            }\n                        } while (false);\n                        cursor = v_4;\n                        // backwards, line 211\n                        limit_backward = cursor; cursor = limit;\n                        // (, line 211\n                        // do, line 213\n                        v_5 = limit - cursor;\n                        lab6: do {\n                            // call Step_1a, line 213\n                            if (!r_Step_1a())\n                            {\n                                break lab6;\n                            }\n                        } while (false);\n                        cursor = limit - v_5;\n                        // or, line 215\n                        lab7: do {\n                            v_6 = limit - cursor;\n                            lab8: do {\n                                // call exception2, line 215\n                                if (!r_exception2())\n                                {\n                                    break lab8;\n                                }\n                                break lab7;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // (, line 215\n                            // do, line 217\n                            v_7 = limit - cursor;\n                            lab9: do {\n                                // call Step_1b, line 217\n                                if (!r_Step_1b())\n                                {\n                                    break lab9;\n                                }\n                            } while (false);\n                            cursor = limit - v_7;\n                            // do, line 218\n                            v_8 = limit - cursor;\n                            lab10: do {\n                                // call Step_1c, line 218\n                                if (!r_Step_1c())\n                                {\n                                    break lab10;\n                                }\n                            } while (false);\n                            cursor = limit - v_8;\n                            // do, line 220\n                            v_9 = limit - cursor;\n                            lab11: do {\n                                // call Step_2, line 220\n                                if (!r_Step_2())\n                                {\n                                    break lab11;\n                                }\n                            } while (false);\n                            cursor = limit - v_9;\n                            // do, line 221\n                            v_10 = limit - cursor;\n                            lab12: do {\n                                // call Step_3, line 221\n                                if (!r_Step_3())\n                                {\n                                    break lab12;\n                                }\n                            } while (false);\n                            cursor = limit - v_10;\n                            // do, line 222\n                            v_11 = limit - cursor;\n                            lab13: do {\n                                // call Step_4, line 222\n                                if (!r_Step_4())\n                                {\n                                    break lab13;\n                                }\n                            } while (false);\n                            cursor = limit - v_11;\n                            // do, line 224\n                            v_12 = limit - cursor;\n                            lab14: do {\n                                // call Step_5, line 224\n                                if (!r_Step_5())\n                                {\n                                    break lab14;\n                                }\n                            } while (false);\n                            cursor = limit - v_12;\n                        } while (false);\n                        cursor = limit_backward;                        // do, line 227\n                        v_13 = cursor;\n                        lab15: do {\n                            // call postlude, line 227\n                            if (!r_postlude())\n                            {\n                                break lab15;\n                            }\n                        } while (false);\n                        cursor = v_13;\n                    } while (false);\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","sourceNew":"                @Override\n                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n                    // (, line 205\n                    // or, line 207\n                    lab0: do {\n                        v_1 = cursor;\n                        lab1: do {\n                            // call exception1, line 207\n                            if (!r_exception1())\n                            {\n                                break lab1;\n                            }\n                            break lab0;\n                        } while (false);\n                        cursor = v_1;\n                        lab2: do {\n                            // not, line 208\n                            {\n                                v_2 = cursor;\n                                lab3: do {\n                                    // hop, line 208\n                                    {\n                                        int c = cursor + 3;\n                                        if (0 > c || c > limit)\n                                        {\n                                            break lab3;\n                                        }\n                                        cursor = c;\n                                    }\n                                    break lab2;\n                                } while (false);\n                                cursor = v_2;\n                            }\n                            break lab0;\n                        } while (false);\n                        cursor = v_1;\n                        // (, line 208\n                        // do, line 209\n                        v_3 = cursor;\n                        lab4: do {\n                            // call prelude, line 209\n                            if (!r_prelude())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        cursor = v_3;\n                        // do, line 210\n                        v_4 = cursor;\n                        lab5: do {\n                            // call mark_regions, line 210\n                            if (!r_mark_regions())\n                            {\n                                break lab5;\n                            }\n                        } while (false);\n                        cursor = v_4;\n                        // backwards, line 211\n                        limit_backward = cursor; cursor = limit;\n                        // (, line 211\n                        // do, line 213\n                        v_5 = limit - cursor;\n                        lab6: do {\n                            // call Step_1a, line 213\n                            if (!r_Step_1a())\n                            {\n                                break lab6;\n                            }\n                        } while (false);\n                        cursor = limit - v_5;\n                        // or, line 215\n                        lab7: do {\n                            v_6 = limit - cursor;\n                            lab8: do {\n                                // call exception2, line 215\n                                if (!r_exception2())\n                                {\n                                    break lab8;\n                                }\n                                break lab7;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // (, line 215\n                            // do, line 217\n                            v_7 = limit - cursor;\n                            lab9: do {\n                                // call Step_1b, line 217\n                                if (!r_Step_1b())\n                                {\n                                    break lab9;\n                                }\n                            } while (false);\n                            cursor = limit - v_7;\n                            // do, line 218\n                            v_8 = limit - cursor;\n                            lab10: do {\n                                // call Step_1c, line 218\n                                if (!r_Step_1c())\n                                {\n                                    break lab10;\n                                }\n                            } while (false);\n                            cursor = limit - v_8;\n                            // do, line 220\n                            v_9 = limit - cursor;\n                            lab11: do {\n                                // call Step_2, line 220\n                                if (!r_Step_2())\n                                {\n                                    break lab11;\n                                }\n                            } while (false);\n                            cursor = limit - v_9;\n                            // do, line 221\n                            v_10 = limit - cursor;\n                            lab12: do {\n                                // call Step_3, line 221\n                                if (!r_Step_3())\n                                {\n                                    break lab12;\n                                }\n                            } while (false);\n                            cursor = limit - v_10;\n                            // do, line 222\n                            v_11 = limit - cursor;\n                            lab13: do {\n                                // call Step_4, line 222\n                                if (!r_Step_4())\n                                {\n                                    break lab13;\n                                }\n                            } while (false);\n                            cursor = limit - v_11;\n                            // do, line 224\n                            v_12 = limit - cursor;\n                            lab14: do {\n                                // call Step_5, line 224\n                                if (!r_Step_5())\n                                {\n                                    break lab14;\n                                }\n                            } while (false);\n                            cursor = limit - v_12;\n                        } while (false);\n                        cursor = limit_backward;                        // do, line 227\n                        v_13 = cursor;\n                        lab15: do {\n                            // call postlude, line 227\n                            if (!r_postlude())\n                            {\n                                break lab15;\n                            }\n                        } while (false);\n                        cursor = v_13;\n                    } while (false);\n                    return true;\n                }\n\n","sourceOld":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n                    // (, line 205\n                    // or, line 207\n                    lab0: do {\n                        v_1 = cursor;\n                        lab1: do {\n                            // call exception1, line 207\n                            if (!r_exception1())\n                            {\n                                break lab1;\n                            }\n                            break lab0;\n                        } while (false);\n                        cursor = v_1;\n                        lab2: do {\n                            // not, line 208\n                            {\n                                v_2 = cursor;\n                                lab3: do {\n                                    // hop, line 208\n                                    {\n                                        int c = cursor + 3;\n                                        if (0 > c || c > limit)\n                                        {\n                                            break lab3;\n                                        }\n                                        cursor = c;\n                                    }\n                                    break lab2;\n                                } while (false);\n                                cursor = v_2;\n                            }\n                            break lab0;\n                        } while (false);\n                        cursor = v_1;\n                        // (, line 208\n                        // do, line 209\n                        v_3 = cursor;\n                        lab4: do {\n                            // call prelude, line 209\n                            if (!r_prelude())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        cursor = v_3;\n                        // do, line 210\n                        v_4 = cursor;\n                        lab5: do {\n                            // call mark_regions, line 210\n                            if (!r_mark_regions())\n                            {\n                                break lab5;\n                            }\n                        } while (false);\n                        cursor = v_4;\n                        // backwards, line 211\n                        limit_backward = cursor; cursor = limit;\n                        // (, line 211\n                        // do, line 213\n                        v_5 = limit - cursor;\n                        lab6: do {\n                            // call Step_1a, line 213\n                            if (!r_Step_1a())\n                            {\n                                break lab6;\n                            }\n                        } while (false);\n                        cursor = limit - v_5;\n                        // or, line 215\n                        lab7: do {\n                            v_6 = limit - cursor;\n                            lab8: do {\n                                // call exception2, line 215\n                                if (!r_exception2())\n                                {\n                                    break lab8;\n                                }\n                                break lab7;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // (, line 215\n                            // do, line 217\n                            v_7 = limit - cursor;\n                            lab9: do {\n                                // call Step_1b, line 217\n                                if (!r_Step_1b())\n                                {\n                                    break lab9;\n                                }\n                            } while (false);\n                            cursor = limit - v_7;\n                            // do, line 218\n                            v_8 = limit - cursor;\n                            lab10: do {\n                                // call Step_1c, line 218\n                                if (!r_Step_1c())\n                                {\n                                    break lab10;\n                                }\n                            } while (false);\n                            cursor = limit - v_8;\n                            // do, line 220\n                            v_9 = limit - cursor;\n                            lab11: do {\n                                // call Step_2, line 220\n                                if (!r_Step_2())\n                                {\n                                    break lab11;\n                                }\n                            } while (false);\n                            cursor = limit - v_9;\n                            // do, line 221\n                            v_10 = limit - cursor;\n                            lab12: do {\n                                // call Step_3, line 221\n                                if (!r_Step_3())\n                                {\n                                    break lab12;\n                                }\n                            } while (false);\n                            cursor = limit - v_10;\n                            // do, line 222\n                            v_11 = limit - cursor;\n                            lab13: do {\n                                // call Step_4, line 222\n                                if (!r_Step_4())\n                                {\n                                    break lab13;\n                                }\n                            } while (false);\n                            cursor = limit - v_11;\n                            // do, line 224\n                            v_12 = limit - cursor;\n                            lab14: do {\n                                // call Step_5, line 224\n                                if (!r_Step_5())\n                                {\n                                    break lab14;\n                                }\n                            } while (false);\n                            cursor = limit - v_12;\n                        } while (false);\n                        cursor = limit_backward;                        // do, line 227\n                        v_13 = cursor;\n                        lab15: do {\n                            // call postlude, line 227\n                            if (!r_postlude())\n                            {\n                                break lab15;\n                            }\n                        } while (false);\n                        cursor = v_13;\n                    } while (false);\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09479cd2de06c67a115b7346a8e5de8af4d62e81","date":1581961081,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","sourceNew":"public boolean stem() {\n  lab0: {\n    int v_1 = cursor;\n    lab1: {\n      if (!r_exception1())\n      {\n        break lab1;\n      }\n      break lab0;\n    }\n    cursor = v_1;\n    lab2: {\n      {\n        int v_2 = cursor;\n        lab3: {\n          {\n            int c = cursor + 3;\n            if (0 > c || c > limit)\n            {\n              break lab3;\n            }\n            cursor = c;\n          }\n          break lab2;\n        }\n        cursor = v_2;\n      }\n      break lab0;\n    }\n    cursor = v_1;\n    r_prelude();\n    r_mark_regions();\n    limit_backward = cursor;\n    cursor = limit;\n    int v_5 = limit - cursor;\n    r_Step_1a();\n    cursor = limit - v_5;\n    lab4: {\n      int v_6 = limit - cursor;\n      lab5: {\n        if (!r_exception2())\n        {\n          break lab5;\n        }\n        break lab4;\n      }\n      cursor = limit - v_6;\n      int v_7 = limit - cursor;\n      r_Step_1b();\n      cursor = limit - v_7;\n      int v_8 = limit - cursor;\n      r_Step_1c();\n      cursor = limit - v_8;\n      int v_9 = limit - cursor;\n      r_Step_2();\n      cursor = limit - v_9;\n      int v_10 = limit - cursor;\n      r_Step_3();\n      cursor = limit - v_10;\n      int v_11 = limit - cursor;\n      r_Step_4();\n      cursor = limit - v_11;\n      int v_12 = limit - cursor;\n      r_Step_5();\n      cursor = limit - v_12;\n    }\n    cursor = limit_backward;\n    int v_13 = cursor;\n    r_postlude();\n    cursor = v_13;\n  }\n  return true;\n}\n\n","sourceOld":"                @Override\n                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n                    // (, line 205\n                    // or, line 207\n                    lab0: do {\n                        v_1 = cursor;\n                        lab1: do {\n                            // call exception1, line 207\n                            if (!r_exception1())\n                            {\n                                break lab1;\n                            }\n                            break lab0;\n                        } while (false);\n                        cursor = v_1;\n                        lab2: do {\n                            // not, line 208\n                            {\n                                v_2 = cursor;\n                                lab3: do {\n                                    // hop, line 208\n                                    {\n                                        int c = cursor + 3;\n                                        if (0 > c || c > limit)\n                                        {\n                                            break lab3;\n                                        }\n                                        cursor = c;\n                                    }\n                                    break lab2;\n                                } while (false);\n                                cursor = v_2;\n                            }\n                            break lab0;\n                        } while (false);\n                        cursor = v_1;\n                        // (, line 208\n                        // do, line 209\n                        v_3 = cursor;\n                        lab4: do {\n                            // call prelude, line 209\n                            if (!r_prelude())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        cursor = v_3;\n                        // do, line 210\n                        v_4 = cursor;\n                        lab5: do {\n                            // call mark_regions, line 210\n                            if (!r_mark_regions())\n                            {\n                                break lab5;\n                            }\n                        } while (false);\n                        cursor = v_4;\n                        // backwards, line 211\n                        limit_backward = cursor; cursor = limit;\n                        // (, line 211\n                        // do, line 213\n                        v_5 = limit - cursor;\n                        lab6: do {\n                            // call Step_1a, line 213\n                            if (!r_Step_1a())\n                            {\n                                break lab6;\n                            }\n                        } while (false);\n                        cursor = limit - v_5;\n                        // or, line 215\n                        lab7: do {\n                            v_6 = limit - cursor;\n                            lab8: do {\n                                // call exception2, line 215\n                                if (!r_exception2())\n                                {\n                                    break lab8;\n                                }\n                                break lab7;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // (, line 215\n                            // do, line 217\n                            v_7 = limit - cursor;\n                            lab9: do {\n                                // call Step_1b, line 217\n                                if (!r_Step_1b())\n                                {\n                                    break lab9;\n                                }\n                            } while (false);\n                            cursor = limit - v_7;\n                            // do, line 218\n                            v_8 = limit - cursor;\n                            lab10: do {\n                                // call Step_1c, line 218\n                                if (!r_Step_1c())\n                                {\n                                    break lab10;\n                                }\n                            } while (false);\n                            cursor = limit - v_8;\n                            // do, line 220\n                            v_9 = limit - cursor;\n                            lab11: do {\n                                // call Step_2, line 220\n                                if (!r_Step_2())\n                                {\n                                    break lab11;\n                                }\n                            } while (false);\n                            cursor = limit - v_9;\n                            // do, line 221\n                            v_10 = limit - cursor;\n                            lab12: do {\n                                // call Step_3, line 221\n                                if (!r_Step_3())\n                                {\n                                    break lab12;\n                                }\n                            } while (false);\n                            cursor = limit - v_10;\n                            // do, line 222\n                            v_11 = limit - cursor;\n                            lab13: do {\n                                // call Step_4, line 222\n                                if (!r_Step_4())\n                                {\n                                    break lab13;\n                                }\n                            } while (false);\n                            cursor = limit - v_11;\n                            // do, line 224\n                            v_12 = limit - cursor;\n                            lab14: do {\n                                // call Step_5, line 224\n                                if (!r_Step_5())\n                                {\n                                    break lab14;\n                                }\n                            } while (false);\n                            cursor = limit - v_12;\n                        } while (false);\n                        cursor = limit_backward;                        // do, line 227\n                        v_13 = cursor;\n                        lab15: do {\n                            // call postlude, line 227\n                            if (!r_postlude())\n                            {\n                                break lab15;\n                            }\n                        } while (false);\n                        cursor = v_13;\n                    } while (false);\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b6a6a9e301c12ab07b1d0428b5aad813fff317b3","7530de27b87b961b51f01bd1299b7004d46e8823"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09479cd2de06c67a115b7346a8e5de8af4d62e81"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d6f074e73200c07d54f242d3880a8da5a35ff97b","b6a6a9e301c12ab07b1d0428b5aad813fff317b3","8fd5be977c105554c6a7b68afcdbc511439723ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","7530de27b87b961b51f01bd1299b7004d46e8823"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","09479cd2de06c67a115b7346a8e5de8af4d62e81"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}