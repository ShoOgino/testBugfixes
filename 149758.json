{"path":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term. */\n  // TODO 4.0: make this method abstract\n  protected TermsEnum getTermsEnum(IndexReader reader) throws IOException {\n    throw new UnsupportedOperationException();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28427ef110c4c5bf5b4057731b83110bd1e13724","date":1276701452,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader).mjava","sourceNew":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term. */\n  protected abstract TermsEnum getTermsEnum(IndexReader reader) throws IOException;\n\n","sourceOld":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term. */\n  // TODO 4.0: make this method abstract\n  protected TermsEnum getTermsEnum(IndexReader reader) throws IOException {\n    throw new UnsupportedOperationException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader).mjava","sourceNew":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term. */\n  protected abstract TermsEnum getTermsEnum(IndexReader reader) throws IOException;\n\n","sourceOld":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term. */\n  // TODO 4.0: make this method abstract\n  protected TermsEnum getTermsEnum(IndexReader reader) throws IOException {\n    throw new UnsupportedOperationException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33a8b1f99104f4144f210f5d068411c297cd7163","date":1287152748,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader).mjava","sourceNew":"  /** Convenience method, if no attributes are needed:\n   * This simply passes empty attributes and is equal to:\n   * <code>getTermsEnum(reader, new AttributeSource())</code>\n   */\n  protected final TermsEnum getTermsEnum(IndexReader reader) throws IOException {\n    return getTermsEnum(reader, new AttributeSource());\n  }\n\n","sourceOld":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term. */\n  protected abstract TermsEnum getTermsEnum(IndexReader reader) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader).mjava","sourceNew":"  /** Convenience method, if no attributes are needed:\n   * This simply passes empty attributes and is equal to:\n   * <code>getTermsEnum(reader, new AttributeSource())</code>\n   */\n  protected final TermsEnum getTermsEnum(IndexReader reader) throws IOException {\n    return getTermsEnum(reader, new AttributeSource());\n  }\n\n","sourceOld":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term. */\n  protected abstract TermsEnum getTermsEnum(IndexReader reader) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8dd2a69747e9f2922fd8b6970bd1661b26a692d","date":1291080135,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(Terms).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader).mjava","sourceNew":"  /** Convenience method, if no attributes are needed:\n   * This simply passes empty attributes and is equal to:\n   * <code>getTermsEnum(terms, new AttributeSource())</code>\n   */\n  protected final TermsEnum getTermsEnum(Terms terms) throws IOException {\n    return getTermsEnum(terms, new AttributeSource());\n  }\n\n","sourceOld":"  /** Convenience method, if no attributes are needed:\n   * This simply passes empty attributes and is equal to:\n   * <code>getTermsEnum(reader, new AttributeSource())</code>\n   */\n  protected final TermsEnum getTermsEnum(IndexReader reader) throws IOException {\n    return getTermsEnum(reader, new AttributeSource());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader).mjava","sourceNew":null,"sourceOld":"  /** Convenience method, if no attributes are needed:\n   * This simply passes empty attributes and is equal to:\n   * <code>getTermsEnum(reader, new AttributeSource())</code>\n   */\n  protected final TermsEnum getTermsEnum(IndexReader reader) throws IOException {\n    return getTermsEnum(reader, new AttributeSource());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader).mjava","sourceNew":null,"sourceOld":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term. */\n  protected abstract TermsEnum getTermsEnum(IndexReader reader) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"33a8b1f99104f4144f210f5d068411c297cd7163":["28427ef110c4c5bf5b4057731b83110bd1e13724"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28427ef110c4c5bf5b4057731b83110bd1e13724":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f4e87790277826a2aea119328600dfb07761f32":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","28427ef110c4c5bf5b4057731b83110bd1e13724"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","e8dd2a69747e9f2922fd8b6970bd1661b26a692d"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["28427ef110c4c5bf5b4057731b83110bd1e13724","33a8b1f99104f4144f210f5d068411c297cd7163"],"e8dd2a69747e9f2922fd8b6970bd1661b26a692d":["33a8b1f99104f4144f210f5d068411c297cd7163"],"3bb13258feba31ab676502787ab2e1779f129b7a":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","e8dd2a69747e9f2922fd8b6970bd1661b26a692d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e8dd2a69747e9f2922fd8b6970bd1661b26a692d"]},"commit2Childs":{"33a8b1f99104f4144f210f5d068411c297cd7163":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","e8dd2a69747e9f2922fd8b6970bd1661b26a692d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"28427ef110c4c5bf5b4057731b83110bd1e13724":["33a8b1f99104f4144f210f5d068411c297cd7163","5f4e87790277826a2aea119328600dfb07761f32","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["28427ef110c4c5bf5b4057731b83110bd1e13724","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["3bb13258feba31ab676502787ab2e1779f129b7a"],"e8dd2a69747e9f2922fd8b6970bd1661b26a692d":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}