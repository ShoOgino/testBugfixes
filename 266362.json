{"path":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#addMetrics(NamedList[Object],Timer).mjava","commits":[{"id":"0265144286422ad99682a00904cc2536b79c8535","date":1482222684,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#addMetrics(NamedList[Object],Timer).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/TimerUtils#addMetrics(NamedList[Object],Timer).mjava","sourceNew":"  /**\n   * Adds metrics from a Timer to a NamedList, using well-known names.\n   * @param lst The NamedList to add the metrics data to\n   * @param timer The Timer to extract the metrics from\n   */\n  public static void addMetrics(NamedList<Object> lst, Timer timer) {\n    Snapshot snapshot = timer.getSnapshot();\n    lst.add(\"avgRequestsPerSecond\", timer.getMeanRate());\n    lst.add(\"5minRateRequestsPerSecond\", timer.getFiveMinuteRate());\n    lst.add(\"15minRateRequestsPerSecond\", timer.getFifteenMinuteRate());\n    lst.add(\"avgTimePerRequest\", nsToMs(snapshot.getMean()));\n    lst.add(\"medianRequestTime\", nsToMs(snapshot.getMedian()));\n    lst.add(\"75thPcRequestTime\", nsToMs(snapshot.get75thPercentile()));\n    lst.add(\"95thPcRequestTime\", nsToMs(snapshot.get95thPercentile()));\n    lst.add(\"99thPcRequestTime\", nsToMs(snapshot.get99thPercentile()));\n    lst.add(\"999thPcRequestTime\", nsToMs(snapshot.get999thPercentile()));\n  }\n\n","sourceOld":"  /**\n   * Adds metrics from a Timer to a NamedList, using well-known names.\n   * @param lst The NamedList to add the metrics data to\n   * @param timer The Timer to extract the metrics from\n   */\n  public static void addMetrics(NamedList<Object> lst, Timer timer) {\n    Snapshot snapshot = timer.getSnapshot();\n    lst.add(\"avgRequestsPerSecond\", timer.getMeanRate());\n    lst.add(\"5minRateRequestsPerSecond\", timer.getFiveMinuteRate());\n    lst.add(\"15minRateRequestsPerSecond\", timer.getFifteenMinuteRate());\n    lst.add(\"avgTimePerRequest\", nsToMs(snapshot.getMean()));\n    lst.add(\"medianRequestTime\", nsToMs(snapshot.getMedian()));\n    lst.add(\"75thPcRequestTime\", nsToMs(snapshot.get75thPercentile()));\n    lst.add(\"95thPcRequestTime\", nsToMs(snapshot.get95thPercentile()));\n    lst.add(\"99thPcRequestTime\", nsToMs(snapshot.get99thPercentile()));\n    lst.add(\"999thPcRequestTime\", nsToMs(snapshot.get999thPercentile()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#addMetrics(NamedList[Object],Timer).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/TimerUtils#addMetrics(NamedList[Object],Timer).mjava","sourceNew":"  /**\n   * Adds metrics from a Timer to a NamedList, using well-known names.\n   * @param lst The NamedList to add the metrics data to\n   * @param timer The Timer to extract the metrics from\n   */\n  public static void addMetrics(NamedList<Object> lst, Timer timer) {\n    Snapshot snapshot = timer.getSnapshot();\n    lst.add(\"avgRequestsPerSecond\", timer.getMeanRate());\n    lst.add(\"5minRateRequestsPerSecond\", timer.getFiveMinuteRate());\n    lst.add(\"15minRateRequestsPerSecond\", timer.getFifteenMinuteRate());\n    lst.add(\"avgTimePerRequest\", nsToMs(snapshot.getMean()));\n    lst.add(\"medianRequestTime\", nsToMs(snapshot.getMedian()));\n    lst.add(\"75thPcRequestTime\", nsToMs(snapshot.get75thPercentile()));\n    lst.add(\"95thPcRequestTime\", nsToMs(snapshot.get95thPercentile()));\n    lst.add(\"99thPcRequestTime\", nsToMs(snapshot.get99thPercentile()));\n    lst.add(\"999thPcRequestTime\", nsToMs(snapshot.get999thPercentile()));\n  }\n\n","sourceOld":"  /**\n   * Adds metrics from a Timer to a NamedList, using well-known names.\n   * @param lst The NamedList to add the metrics data to\n   * @param timer The Timer to extract the metrics from\n   */\n  public static void addMetrics(NamedList<Object> lst, Timer timer) {\n    Snapshot snapshot = timer.getSnapshot();\n    lst.add(\"avgRequestsPerSecond\", timer.getMeanRate());\n    lst.add(\"5minRateRequestsPerSecond\", timer.getFiveMinuteRate());\n    lst.add(\"15minRateRequestsPerSecond\", timer.getFifteenMinuteRate());\n    lst.add(\"avgTimePerRequest\", nsToMs(snapshot.getMean()));\n    lst.add(\"medianRequestTime\", nsToMs(snapshot.getMedian()));\n    lst.add(\"75thPcRequestTime\", nsToMs(snapshot.get75thPercentile()));\n    lst.add(\"95thPcRequestTime\", nsToMs(snapshot.get95thPercentile()));\n    lst.add(\"99thPcRequestTime\", nsToMs(snapshot.get99thPercentile()));\n    lst.add(\"999thPcRequestTime\", nsToMs(snapshot.get999thPercentile()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f7df713a0f1e310d18dd8da91c89a07a13f86f8","date":1483441921,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#addMetrics(NamedList[Object],Timer).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#addMetrics(NamedList[Object],Timer).mjava","sourceNew":"  /**\n   * Adds metrics from a Timer to a NamedList, using well-known back-compat names.\n   * @param lst The NamedList to add the metrics data to\n   * @param timer The Timer to extract the metrics from\n   */\n  public static void addMetrics(NamedList<Object> lst, Timer timer) {\n    Snapshot snapshot = timer.getSnapshot();\n    lst.add(\"avgRequestsPerSecond\", timer.getMeanRate());\n    lst.add(\"5minRateRequestsPerSecond\", timer.getFiveMinuteRate());\n    lst.add(\"15minRateRequestsPerSecond\", timer.getFifteenMinuteRate());\n    lst.add(\"avgTimePerRequest\", nsToMs(snapshot.getMean()));\n    lst.add(\"medianRequestTime\", nsToMs(snapshot.getMedian()));\n    lst.add(\"75thPcRequestTime\", nsToMs(snapshot.get75thPercentile()));\n    lst.add(\"95thPcRequestTime\", nsToMs(snapshot.get95thPercentile()));\n    lst.add(\"99thPcRequestTime\", nsToMs(snapshot.get99thPercentile()));\n    lst.add(\"999thPcRequestTime\", nsToMs(snapshot.get999thPercentile()));\n  }\n\n","sourceOld":"  /**\n   * Adds metrics from a Timer to a NamedList, using well-known names.\n   * @param lst The NamedList to add the metrics data to\n   * @param timer The Timer to extract the metrics from\n   */\n  public static void addMetrics(NamedList<Object> lst, Timer timer) {\n    Snapshot snapshot = timer.getSnapshot();\n    lst.add(\"avgRequestsPerSecond\", timer.getMeanRate());\n    lst.add(\"5minRateRequestsPerSecond\", timer.getFiveMinuteRate());\n    lst.add(\"15minRateRequestsPerSecond\", timer.getFifteenMinuteRate());\n    lst.add(\"avgTimePerRequest\", nsToMs(snapshot.getMean()));\n    lst.add(\"medianRequestTime\", nsToMs(snapshot.getMedian()));\n    lst.add(\"75thPcRequestTime\", nsToMs(snapshot.get75thPercentile()));\n    lst.add(\"95thPcRequestTime\", nsToMs(snapshot.get95thPercentile()));\n    lst.add(\"99thPcRequestTime\", nsToMs(snapshot.get99thPercentile()));\n    lst.add(\"999thPcRequestTime\", nsToMs(snapshot.get999thPercentile()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#addMetrics(NamedList[Object],Timer).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#addMetrics(NamedList[Object],Timer).mjava","sourceNew":"  /**\n   * Adds metrics from a Timer to a NamedList, using well-known back-compat names.\n   * @param lst The NamedList to add the metrics data to\n   * @param timer The Timer to extract the metrics from\n   */\n  public static void addMetrics(NamedList<Object> lst, Timer timer) {\n    Snapshot snapshot = timer.getSnapshot();\n    lst.add(\"avgRequestsPerSecond\", timer.getMeanRate());\n    lst.add(\"5minRateRequestsPerSecond\", timer.getFiveMinuteRate());\n    lst.add(\"15minRateRequestsPerSecond\", timer.getFifteenMinuteRate());\n    lst.add(\"avgTimePerRequest\", nsToMs(snapshot.getMean()));\n    lst.add(\"medianRequestTime\", nsToMs(snapshot.getMedian()));\n    lst.add(\"75thPcRequestTime\", nsToMs(snapshot.get75thPercentile()));\n    lst.add(\"95thPcRequestTime\", nsToMs(snapshot.get95thPercentile()));\n    lst.add(\"99thPcRequestTime\", nsToMs(snapshot.get99thPercentile()));\n    lst.add(\"999thPcRequestTime\", nsToMs(snapshot.get999thPercentile()));\n  }\n\n","sourceOld":"  /**\n   * Adds metrics from a Timer to a NamedList, using well-known names.\n   * @param lst The NamedList to add the metrics data to\n   * @param timer The Timer to extract the metrics from\n   */\n  public static void addMetrics(NamedList<Object> lst, Timer timer) {\n    Snapshot snapshot = timer.getSnapshot();\n    lst.add(\"avgRequestsPerSecond\", timer.getMeanRate());\n    lst.add(\"5minRateRequestsPerSecond\", timer.getFiveMinuteRate());\n    lst.add(\"15minRateRequestsPerSecond\", timer.getFifteenMinuteRate());\n    lst.add(\"avgTimePerRequest\", nsToMs(snapshot.getMean()));\n    lst.add(\"medianRequestTime\", nsToMs(snapshot.getMedian()));\n    lst.add(\"75thPcRequestTime\", nsToMs(snapshot.get75thPercentile()));\n    lst.add(\"95thPcRequestTime\", nsToMs(snapshot.get95thPercentile()));\n    lst.add(\"99thPcRequestTime\", nsToMs(snapshot.get99thPercentile()));\n    lst.add(\"999thPcRequestTime\", nsToMs(snapshot.get999thPercentile()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0265144286422ad99682a00904cc2536b79c8535":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0265144286422ad99682a00904cc2536b79c8535"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f7df713a0f1e310d18dd8da91c89a07a13f86f8":["0265144286422ad99682a00904cc2536b79c8535"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f7df713a0f1e310d18dd8da91c89a07a13f86f8"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","2f7df713a0f1e310d18dd8da91c89a07a13f86f8"]},"commit2Childs":{"0265144286422ad99682a00904cc2536b79c8535":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","2f7df713a0f1e310d18dd8da91c89a07a13f86f8"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["f03e4bed5023ec3ef93a771b8888cae991cf448d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0265144286422ad99682a00904cc2536b79c8535","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"2f7df713a0f1e310d18dd8da91c89a07a13f86f8":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}