{"path":"solr/core/src/test/org/apache/solr/schema/SortableBinaryField#createFields(SchemaField,Object,float).mjava","commits":[{"id":"faff74992839549208db29d95b9ad4a1d3846c79","date":1385672428,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/SortableBinaryField#createFields(SchemaField,Object,float).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public List<StorableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<StorableField>();\n      StorableField storedField = createField(field, value, boost);\n      fields.add(storedField);\n      ByteBuffer byteBuffer = toObject(storedField);\n      BytesRef bytes = new BytesRef\n          (byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/SortableBinaryField#createFields(SchemaField,Object,float).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public List<StorableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<StorableField>();\n      StorableField storedField = createField(field, value, boost);\n      fields.add(storedField);\n      ByteBuffer byteBuffer = toObject(storedField);\n      BytesRef bytes = new BytesRef\n          (byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/SortableBinaryField#createFields(SchemaField,Object,float).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SortableBinaryField#createFields(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public List<StorableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      StorableField storedField = createField(field, value, boost);\n      fields.add(storedField);\n      ByteBuffer byteBuffer = toObject(storedField);\n      BytesRef bytes = new BytesRef\n          (byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n\n","sourceOld":"  @Override\n  public List<StorableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<StorableField>();\n      StorableField storedField = createField(field, value, boost);\n      fields.add(storedField);\n      ByteBuffer byteBuffer = toObject(storedField);\n      BytesRef bytes = new BytesRef\n          (byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/SortableBinaryField#createFields(SchemaField,Object,float).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SortableBinaryField#createFields(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      IndexableField storedField = createField(field, value, boost);\n      fields.add(storedField);\n      ByteBuffer byteBuffer = toObject(storedField);\n      BytesRef bytes = new BytesRef\n          (byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n\n","sourceOld":"  @Override\n  public List<StorableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      StorableField storedField = createField(field, value, boost);\n      fields.add(storedField);\n      ByteBuffer byteBuffer = toObject(storedField);\n      BytesRef bytes = new BytesRef\n          (byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/SortableBinaryField#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SortableBinaryField#createFields(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object value) {\n    if (field.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      IndexableField storedField = createField(field, value);\n      fields.add(storedField);\n      ByteBuffer byteBuffer = toObject(storedField);\n      BytesRef bytes = new BytesRef\n          (byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value));\n    }\n  }\n\n","sourceOld":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object value, float boost) {\n    if (field.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      IndexableField storedField = createField(field, value, boost);\n      fields.add(storedField);\n      ByteBuffer byteBuffer = toObject(storedField);\n      BytesRef bytes = new BytesRef\n          (byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());\n      if (field.multiValued()) {\n        fields.add(new SortedSetDocValuesField(field.getName(), bytes));\n      } else {\n        fields.add(new SortedDocValuesField(field.getName(), bytes));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(field, value, boost));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["faff74992839549208db29d95b9ad4a1d3846c79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","faff74992839549208db29d95b9ad4a1d3846c79"],"faff74992839549208db29d95b9ad4a1d3846c79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"acd9883560fd89e6448b2b447302fe543040cd4f":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","faff74992839549208db29d95b9ad4a1d3846c79"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"faff74992839549208db29d95b9ad4a1d3846c79":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["acd9883560fd89e6448b2b447302fe543040cd4f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}