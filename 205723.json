{"path":"src/test/org/apache/lucene/search/TestTopDocsCollector#setUp().mjava","commits":[{"id":"64714133cf5ec732e3bbceee63351bb9af0117dc","date":1239647636,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTopDocsCollector#setUp().mjava","pathOld":"/dev/null","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    \n    // populate an index with 30 documents, this should be enough for the test.\n    // The documents have no content - the test uses MatchAllDocsQuery().\n    IndexWriter writer = new IndexWriter(dir, new KeywordAnalyzer(), MaxFieldLength.UNLIMITED);\n    for (int i = 0; i < 30; i++) {\n      writer.addDocument(new Document());\n    }\n    writer.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTopDocsCollector#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestTopDocsCollector#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    // populate an index with 30 documents, this should be enough for the test.\n    // The documents have no content - the test uses MatchAllDocsQuery().\n    IndexWriter writer = new IndexWriter(dir, new KeywordAnalyzer(), MaxFieldLength.UNLIMITED);\n    for (int i = 0; i < 30; i++) {\n      writer.addDocument(new Document());\n    }\n    writer.close();\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    \n    // populate an index with 30 documents, this should be enough for the test.\n    // The documents have no content - the test uses MatchAllDocsQuery().\n    IndexWriter writer = new IndexWriter(dir, new KeywordAnalyzer(), MaxFieldLength.UNLIMITED);\n    for (int i = 0; i < 30; i++) {\n      writer.addDocument(new Document());\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTopDocsCollector#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestTopDocsCollector#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    // populate an index with 30 documents, this should be enough for the test.\n    // The documents have no content - the test uses MatchAllDocsQuery().\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    for (int i = 0; i < 30; i++) {\n      writer.addDocument(new Document());\n    }\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    // populate an index with 30 documents, this should be enough for the test.\n    // The documents have no content - the test uses MatchAllDocsQuery().\n    IndexWriter writer = new IndexWriter(dir, new KeywordAnalyzer(), MaxFieldLength.UNLIMITED);\n    for (int i = 0; i < 30; i++) {\n      writer.addDocument(new Document());\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTopDocsCollector#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestTopDocsCollector#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    // populate an index with 30 documents, this should be enough for the test.\n    // The documents have no content - the test uses MatchAllDocsQuery().\n    IndexWriter writer = new IndexWriter(dir, new KeywordAnalyzer(), MaxFieldLength.UNLIMITED);\n    for (int i = 0; i < 30; i++) {\n      writer.addDocument(new Document());\n    }\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    // populate an index with 30 documents, this should be enough for the test.\n    // The documents have no content - the test uses MatchAllDocsQuery().\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    for (int i = 0; i < 30; i++) {\n      writer.addDocument(new Document());\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTopDocsCollector#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestTopDocsCollector#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    // populate an index with 30 documents, this should be enough for the test.\n    // The documents have no content - the test uses MatchAllDocsQuery().\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    for (int i = 0; i < 30; i++) {\n      writer.addDocument(new Document());\n    }\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    // populate an index with 30 documents, this should be enough for the test.\n    // The documents have no content - the test uses MatchAllDocsQuery().\n    IndexWriter writer = new IndexWriter(dir, new KeywordAnalyzer(), MaxFieldLength.UNLIMITED);\n    for (int i = 0; i < 30; i++) {\n      writer.addDocument(new Document());\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestTopDocsCollector#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestTopDocsCollector#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    // populate an index with 30 documents, this should be enough for the test.\n    // The documents have no content - the test uses MatchAllDocsQuery().\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    for (int i = 0; i < 30; i++) {\n      writer.addDocument(new Document());\n    }\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    // populate an index with 30 documents, this should be enough for the test.\n    // The documents have no content - the test uses MatchAllDocsQuery().\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    for (int i = 0; i < 30; i++) {\n      writer.addDocument(new Document());\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"64714133cf5ec732e3bbceee63351bb9af0117dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"64714133cf5ec732e3bbceee63351bb9af0117dc":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}