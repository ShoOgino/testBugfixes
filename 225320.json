{"path":"src/java/org/apache/lucene/search/MultiSearcher.CachedDfSource#docFreqs(Term[]).mjava","commits":[{"id":"402061809f3a4629ea0c449e33e9f94a9772f3c3","date":1113967712,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiSearcher.CachedDfSource#docFreqs(Term[]).mjava","pathOld":"/dev/null","sourceNew":"    public int[] docFreqs(Term[] terms) throws IOException {\n      int[] result = new int[terms.length];\n      for (int i = 0; i < terms.length; i++) {\n        result[i] = docFreq(terms[i]);\n      }\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c44c416ac4fe4e49248c77802594109d148d0c2","date":1115332629,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiSearcher.CachedDfSource#docFreqs(Term[]).mjava","pathOld":"src/java/org/apache/lucene/search/MultiSearcher.CachedDfSource#docFreqs(Term[]).mjava","sourceNew":"    public int[] docFreqs(Term[] terms) {\n      int[] result = new int[terms.length];\n      for (int i = 0; i < terms.length; i++) {\n        result[i] = docFreq(terms[i]);\n      }\n      return result;\n    }\n\n","sourceOld":"    public int[] docFreqs(Term[] terms) throws IOException {\n      int[] result = new int[terms.length];\n      for (int i = 0; i < terms.length; i++) {\n        result[i] = docFreq(terms[i]);\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiSearcher.CachedDfSource#docFreqs(Term[]).mjava","pathOld":"src/java/org/apache/lucene/search/MultiSearcher.CachedDfSource#docFreqs(Term[]).mjava","sourceNew":"    @Override\n    public int[] docFreqs(Term[] terms) {\n      int[] result = new int[terms.length];\n      for (int i = 0; i < terms.length; i++) {\n        result[i] = docFreq(terms[i]);\n      }\n      return result;\n    }\n\n","sourceOld":"    public int[] docFreqs(Term[] terms) {\n      int[] result = new int[terms.length];\n      for (int i = 0; i < terms.length; i++) {\n        result[i] = docFreq(terms[i]);\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7325af1b9f607a9e8e30785e8de8ffd1d4c08ddf","date":1257873376,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiSearcher.CachedDfSource#docFreqs(Term[]).mjava","pathOld":"src/java/org/apache/lucene/search/MultiSearcher.CachedDfSource#docFreqs(Term[]).mjava","sourceNew":"    @Override\n    public int[] docFreqs(Term[] terms) {\n      final int[] result = new int[terms.length];\n      for (int i = 0; i < terms.length; i++) {\n        result[i] = docFreq(terms[i]);\n      }\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public int[] docFreqs(Term[] terms) {\n      int[] result = new int[terms.length];\n      for (int i = 0; i < terms.length; i++) {\n        result[i] = docFreq(terms[i]);\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiSearcher.CachedDfSource#docFreqs(Term[]).mjava","pathOld":"src/java/org/apache/lucene/search/MultiSearcher.CachedDfSource#docFreqs(Term[]).mjava","sourceNew":"    @Override\n    public int[] docFreqs(Term[] terms) {\n      final int[] result = new int[terms.length];\n      for (int i = 0; i < terms.length; i++) {\n        result[i] = docFreq(terms[i]);\n      }\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public int[] docFreqs(Term[] terms) {\n      final int[] result = new int[terms.length];\n      for (int i = 0; i < terms.length; i++) {\n        result[i] = docFreq(terms[i]);\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"402061809f3a4629ea0c449e33e9f94a9772f3c3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7325af1b9f607a9e8e30785e8de8ffd1d4c08ddf":["8a9e385641d717e641408d8fbbc62be8fc766357"],"8a9e385641d717e641408d8fbbc62be8fc766357":["8c44c416ac4fe4e49248c77802594109d148d0c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8c44c416ac4fe4e49248c77802594109d148d0c2":["402061809f3a4629ea0c449e33e9f94a9772f3c3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7325af1b9f607a9e8e30785e8de8ffd1d4c08ddf"]},"commit2Childs":{"402061809f3a4629ea0c449e33e9f94a9772f3c3":["8c44c416ac4fe4e49248c77802594109d148d0c2"],"7325af1b9f607a9e8e30785e8de8ffd1d4c08ddf":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["402061809f3a4629ea0c449e33e9f94a9772f3c3"],"8a9e385641d717e641408d8fbbc62be8fc766357":["7325af1b9f607a9e8e30785e8de8ffd1d4c08ddf"],"8c44c416ac4fe4e49248c77802594109d148d0c2":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}