{"path":"lucene/test-framework/src/java/org/apache/lucene/util/RamUsageTester#sizeOf(Object,Filter).mjava","commits":[{"id":"4e1019a365f90871803e0de296165d291865c2ce","date":1402929675,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/RamUsageTester#sizeOf(Object,Filter).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Estimates the RAM usage by the given object. It will\n   * walk the object tree and sum up all referenced objects.\n   *\n   * <p><b>Resource Usage:</b> This method internally uses a set of\n   * every object seen during traversals so it does allocate memory\n   * (it isn't side-effect free). After the method exits, this memory\n   * should be GCed.</p>\n   */\n  public static long sizeOf(Object obj, Filter filter) {\n    return measureObjectSize(obj, filter);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/RamUsageTester#sizeOf(Object,Filter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator#sizeOf(Object).mjava","sourceNew":"  /**\n   * Estimates the RAM usage by the given object. It will\n   * walk the object tree and sum up all referenced objects.\n   *\n   * <p><b>Resource Usage:</b> This method internally uses a set of\n   * every object seen during traversals so it does allocate memory\n   * (it isn't side-effect free). After the method exits, this memory\n   * should be GCed.</p>\n   */\n  public static long sizeOf(Object obj, Filter filter) {\n    return measureObjectSize(obj, filter);\n  }\n\n","sourceOld":"  /** \n   * Estimates the RAM usage by the given object. It will\n   * walk the object tree and sum up all referenced objects.\n   * \n   * <p><b>Resource Usage:</b> This method internally uses a set of\n   * every object seen during traversals so it does allocate memory\n   * (it isn't side-effect free). After the method exits, this memory\n   * should be GCed.</p>\n   */\n  public static long sizeOf(Object obj) {\n    return measureObjectSize(obj);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d943163030bbd7a9caf93cb5fea92257390a2a99","date":1403094254,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/RamUsageTester#sizeOf(Object,Accumulator).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/RamUsageTester#sizeOf(Object,Filter).mjava","sourceNew":"  /**\n   * Estimates the RAM usage by the given object. It will\n   * walk the object tree and sum up all referenced objects.\n   *\n   * <p><b>Resource Usage:</b> This method internally uses a set of\n   * every object seen during traversals so it does allocate memory\n   * (it isn't side-effect free). After the method exits, this memory\n   * should be GCed.</p>\n   */\n  public static long sizeOf(Object obj, Accumulator accumulator) {\n    return measureObjectSize(obj, accumulator);\n  }\n\n","sourceOld":"  /**\n   * Estimates the RAM usage by the given object. It will\n   * walk the object tree and sum up all referenced objects.\n   *\n   * <p><b>Resource Usage:</b> This method internally uses a set of\n   * every object seen during traversals so it does allocate memory\n   * (it isn't side-effect free). After the method exits, this memory\n   * should be GCed.</p>\n   */\n  public static long sizeOf(Object obj, Filter filter) {\n    return measureObjectSize(obj, filter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e57c73924f3b8c19defa62e96bfa34a4922d49c2","date":1403106358,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/RamUsageTester#sizeOf(Object,Accumulator).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/RamUsageTester#sizeOf(Object,Filter).mjava","sourceNew":"  /**\n   * Estimates the RAM usage by the given object. It will\n   * walk the object tree and sum up all referenced objects.\n   *\n   * <p><b>Resource Usage:</b> This method internally uses a set of\n   * every object seen during traversals so it does allocate memory\n   * (it isn't side-effect free). After the method exits, this memory\n   * should be GCed.</p>\n   */\n  public static long sizeOf(Object obj, Accumulator accumulator) {\n    return measureObjectSize(obj, accumulator);\n  }\n\n","sourceOld":"  /**\n   * Estimates the RAM usage by the given object. It will\n   * walk the object tree and sum up all referenced objects.\n   *\n   * <p><b>Resource Usage:</b> This method internally uses a set of\n   * every object seen during traversals so it does allocate memory\n   * (it isn't side-effect free). After the method exits, this memory\n   * should be GCed.</p>\n   */\n  public static long sizeOf(Object obj, Filter filter) {\n    return measureObjectSize(obj, filter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e57c73924f3b8c19defa62e96bfa34a4922d49c2":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","d943163030bbd7a9caf93cb5fea92257390a2a99"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d943163030bbd7a9caf93cb5fea92257390a2a99":["4e1019a365f90871803e0de296165d291865c2ce"],"4e1019a365f90871803e0de296165d291865c2ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4e1019a365f90871803e0de296165d291865c2ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d943163030bbd7a9caf93cb5fea92257390a2a99"]},"commit2Childs":{"e57c73924f3b8c19defa62e96bfa34a4922d49c2":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e1019a365f90871803e0de296165d291865c2ce","c6f080a2ab37c464dd98db173f6cbf10dc74f211"],"d943163030bbd7a9caf93cb5fea92257390a2a99":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e1019a365f90871803e0de296165d291865c2ce":["d943163030bbd7a9caf93cb5fea92257390a2a99","c6f080a2ab37c464dd98db173f6cbf10dc74f211"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["e57c73924f3b8c19defa62e96bfa34a4922d49c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}