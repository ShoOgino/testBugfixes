{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","sourceNew":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","sourceNew":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","sourceNew":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","sourceNew":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"feb4029567b43f074ed7b6eb8fb126d355075dfd","date":1544812585,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","sourceNew":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.getDocStats().numDocs);\n    modifier.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"feb4029567b43f074ed7b6eb8fb126d355075dfd":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["feb4029567b43f074ed7b6eb8fb126d355075dfd"]},"commit2Childs":{"feb4029567b43f074ed7b6eb8fb126d355075dfd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["feb4029567b43f074ed7b6eb8fb126d355075dfd"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}