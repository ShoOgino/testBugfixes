{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/PlainTextEntityProcessor#nextRow().mjava","commits":[{"id":"20e982952e67f8bfb2bb963bb93bb9b9104412a7","date":1233131402,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/PlainTextEntityProcessor#nextRow().mjava","pathOld":"/dev/null","sourceNew":"  public Map<String, Object> nextRow() {\n    if (ended) return null;\n    DataSource<Reader> ds = context.getDataSource();\n    String url = context.getVariableResolver().replaceTokens(context.getEntityAttribute(URL));\n    Reader r = null;\n    try {\n      r = ds.getData(url);\n    } catch (Exception e) {\n      if (ABORT.equals(onError)) {\n        wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n      }\n      return null;\n    }\n    StringWriter sw = new StringWriter();\n    char[] buf = new char[1024];\n    while (true) {\n      int len = 0;\n      try {\n        len = r.read(buf);\n      } catch (IOException e) {\n        if (ABORT.equals(onError)) {\n          wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n        } else {\n          LOG.warn(\"IOException while reading from data source\", e);\n          return null;\n        }\n      }\n      if (len <= 0) break;\n      sw.append(new String(buf, 0, len));\n    }\n    Map<String, Object> row = new HashMap<String, Object>();\n    row.put(PLAIN_TEXT, sw.toString());\n    ended = true;\n    return super.applyTransformer(row);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"758fdd153bb361b47f22db79ace6af6f6b7b9330","date":1240213015,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/PlainTextEntityProcessor#nextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/PlainTextEntityProcessor#nextRow().mjava","sourceNew":"  public Map<String, Object> nextRow() {\n    if (ended) return null;\n    DataSource<Reader> ds = context.getDataSource();\n    String url = context.getVariableResolver().replaceTokens(context.getEntityAttribute(URL));\n    Reader r = null;\n    try {\n      r = ds.getData(url);\n    } catch (Exception e) {\n      if (ABORT.equals(onError)) {\n        wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n      }\n      return null;\n    }\n    StringWriter sw = new StringWriter();\n    char[] buf = new char[1024];\n    while (true) {\n      int len = 0;\n      try {\n        len = r.read(buf);\n      } catch (IOException e) {\n        if (ABORT.equals(onError)) {\n          wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n        } else {\n          LOG.warn(\"IOException while reading from data source\", e);\n          return null;\n        }\n      }\n      if (len <= 0) break;\n      sw.append(new String(buf, 0, len));\n    }\n    Map<String, Object> row = new HashMap<String, Object>();\n    row.put(PLAIN_TEXT, sw.toString());\n    ended = true;\n    return row;\n  }\n\n","sourceOld":"  public Map<String, Object> nextRow() {\n    if (ended) return null;\n    DataSource<Reader> ds = context.getDataSource();\n    String url = context.getVariableResolver().replaceTokens(context.getEntityAttribute(URL));\n    Reader r = null;\n    try {\n      r = ds.getData(url);\n    } catch (Exception e) {\n      if (ABORT.equals(onError)) {\n        wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n      }\n      return null;\n    }\n    StringWriter sw = new StringWriter();\n    char[] buf = new char[1024];\n    while (true) {\n      int len = 0;\n      try {\n        len = r.read(buf);\n      } catch (IOException e) {\n        if (ABORT.equals(onError)) {\n          wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n        } else {\n          LOG.warn(\"IOException while reading from data source\", e);\n          return null;\n        }\n      }\n      if (len <= 0) break;\n      sw.append(new String(buf, 0, len));\n    }\n    Map<String, Object> row = new HashMap<String, Object>();\n    row.put(PLAIN_TEXT, sw.toString());\n    ended = true;\n    return super.applyTransformer(row);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"153cc06382fdc94d0ea3db127eab860ae4310525","date":1260181667,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/PlainTextEntityProcessor#nextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/PlainTextEntityProcessor#nextRow().mjava","sourceNew":"  public Map<String, Object> nextRow() {\n    if (ended) return null;\n    DataSource<Reader> ds = context.getDataSource();\n    String url = context.replaceTokens(context.getEntityAttribute(URL));\n    Reader r = null;\n    try {\n      r = ds.getData(url);\n    } catch (Exception e) {\n      if (ABORT.equals(onError)) {\n        wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n      }\n      return null;\n    }\n    StringWriter sw = new StringWriter();\n    char[] buf = new char[1024];\n    while (true) {\n      int len = 0;\n      try {\n        len = r.read(buf);\n      } catch (IOException e) {\n        if (ABORT.equals(onError)) {\n          wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n        } else {\n          LOG.warn(\"IOException while reading from data source\", e);\n          return null;\n        }\n      }\n      if (len <= 0) break;\n      sw.append(new String(buf, 0, len));\n    }\n    Map<String, Object> row = new HashMap<String, Object>();\n    row.put(PLAIN_TEXT, sw.toString());\n    ended = true;\n    return row;\n  }\n\n","sourceOld":"  public Map<String, Object> nextRow() {\n    if (ended) return null;\n    DataSource<Reader> ds = context.getDataSource();\n    String url = context.getVariableResolver().replaceTokens(context.getEntityAttribute(URL));\n    Reader r = null;\n    try {\n      r = ds.getData(url);\n    } catch (Exception e) {\n      if (ABORT.equals(onError)) {\n        wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n      }\n      return null;\n    }\n    StringWriter sw = new StringWriter();\n    char[] buf = new char[1024];\n    while (true) {\n      int len = 0;\n      try {\n        len = r.read(buf);\n      } catch (IOException e) {\n        if (ABORT.equals(onError)) {\n          wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n        } else {\n          LOG.warn(\"IOException while reading from data source\", e);\n          return null;\n        }\n      }\n      if (len <= 0) break;\n      sw.append(new String(buf, 0, len));\n    }\n    Map<String, Object> row = new HashMap<String, Object>();\n    row.put(PLAIN_TEXT, sw.toString());\n    ended = true;\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ee3466ba2d9013d3840892803080bab7134e3e3","date":1260523454,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/PlainTextEntityProcessor#nextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/PlainTextEntityProcessor#nextRow().mjava","sourceNew":"  public Map<String, Object> nextRow() {\n    if (ended) return null;\n    DataSource<Reader> ds = context.getDataSource();\n    String url = context.replaceTokens(context.getEntityAttribute(URL));\n    Reader r = null;\n    try {\n      r = ds.getData(url);\n    } catch (Exception e) {\n      if (ABORT.equals(onError)) {\n        wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n      }\n      return null;\n    }\n    StringWriter sw = new StringWriter();\n    char[] buf = new char[1024];\n    while (true) {\n      int len = 0;\n      try {\n        len = r.read(buf);\n      } catch (IOException e) {\n        if (ABORT.equals(onError)) {\n          wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n        } else {\n          LOG.warn(\"IOException while reading from data source\", e);\n          return null;\n        }\n      }\n      if (len <= 0) break;\n      sw.append(new String(buf, 0, len));\n    }\n    Map<String, Object> row = new HashMap<String, Object>();\n    row.put(PLAIN_TEXT, sw.toString());\n    ended = true;\n    IOUtils.closeQuietly(r);\n    return row;\n  }\n\n","sourceOld":"  public Map<String, Object> nextRow() {\n    if (ended) return null;\n    DataSource<Reader> ds = context.getDataSource();\n    String url = context.replaceTokens(context.getEntityAttribute(URL));\n    Reader r = null;\n    try {\n      r = ds.getData(url);\n    } catch (Exception e) {\n      if (ABORT.equals(onError)) {\n        wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n      }\n      return null;\n    }\n    StringWriter sw = new StringWriter();\n    char[] buf = new char[1024];\n    while (true) {\n      int len = 0;\n      try {\n        len = r.read(buf);\n      } catch (IOException e) {\n        if (ABORT.equals(onError)) {\n          wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n        } else {\n          LOG.warn(\"IOException while reading from data source\", e);\n          return null;\n        }\n      }\n      if (len <= 0) break;\n      sw.append(new String(buf, 0, len));\n    }\n    Map<String, Object> row = new HashMap<String, Object>();\n    row.put(PLAIN_TEXT, sw.toString());\n    ended = true;\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dad9d340d298fa5aa8bde353c9543d74070e5c5c","date":1261395775,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/PlainTextEntityProcessor#nextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/PlainTextEntityProcessor#nextRow().mjava","sourceNew":"  public Map<String, Object> nextRow() {\n    if (ended) return null;\n    DataSource<Reader> ds = context.getDataSource();\n    String url = context.replaceTokens(context.getEntityAttribute(URL));\n    Reader r = null;\n    try {\n      r = ds.getData(url);\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n    }\n    StringWriter sw = new StringWriter();\n    char[] buf = new char[1024];\n    while (true) {\n      int len = 0;\n      try {\n        len = r.read(buf);\n      } catch (IOException e) {\n        IOUtils.closeQuietly(r);\n        wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n      }\n      if (len <= 0) break;\n      sw.append(new String(buf, 0, len));\n    }\n    Map<String, Object> row = new HashMap<String, Object>();\n    row.put(PLAIN_TEXT, sw.toString());\n    ended = true;\n    IOUtils.closeQuietly(r);\n    return row;\n  }\n\n","sourceOld":"  public Map<String, Object> nextRow() {\n    if (ended) return null;\n    DataSource<Reader> ds = context.getDataSource();\n    String url = context.replaceTokens(context.getEntityAttribute(URL));\n    Reader r = null;\n    try {\n      r = ds.getData(url);\n    } catch (Exception e) {\n      if (ABORT.equals(onError)) {\n        wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n      }\n      return null;\n    }\n    StringWriter sw = new StringWriter();\n    char[] buf = new char[1024];\n    while (true) {\n      int len = 0;\n      try {\n        len = r.read(buf);\n      } catch (IOException e) {\n        if (ABORT.equals(onError)) {\n          wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n        } else {\n          LOG.warn(\"IOException while reading from data source\", e);\n          return null;\n        }\n      }\n      if (len <= 0) break;\n      sw.append(new String(buf, 0, len));\n    }\n    Map<String, Object> row = new HashMap<String, Object>();\n    row.put(PLAIN_TEXT, sw.toString());\n    ended = true;\n    IOUtils.closeQuietly(r);\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/PlainTextEntityProcessor#nextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/PlainTextEntityProcessor#nextRow().mjava","sourceNew":"  public Map<String, Object> nextRow() {\n    if (ended) return null;\n    DataSource<Reader> ds = context.getDataSource();\n    String url = context.replaceTokens(context.getEntityAttribute(URL));\n    Reader r = null;\n    try {\n      r = ds.getData(url);\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n    }\n    StringWriter sw = new StringWriter();\n    char[] buf = new char[1024];\n    while (true) {\n      int len = 0;\n      try {\n        len = r.read(buf);\n      } catch (IOException e) {\n        IOUtils.closeQuietly(r);\n        wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n      }\n      if (len <= 0) break;\n      sw.append(new String(buf, 0, len));\n    }\n    Map<String, Object> row = new HashMap<String, Object>();\n    row.put(PLAIN_TEXT, sw.toString());\n    ended = true;\n    IOUtils.closeQuietly(r);\n    return row;\n  }\n\n","sourceOld":"  public Map<String, Object> nextRow() {\n    if (ended) return null;\n    DataSource<Reader> ds = context.getDataSource();\n    String url = context.replaceTokens(context.getEntityAttribute(URL));\n    Reader r = null;\n    try {\n      r = ds.getData(url);\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n    }\n    StringWriter sw = new StringWriter();\n    char[] buf = new char[1024];\n    while (true) {\n      int len = 0;\n      try {\n        len = r.read(buf);\n      } catch (IOException e) {\n        IOUtils.closeQuietly(r);\n        wrapAndThrow(SEVERE, e, \"Exception reading url : \" + url);\n      }\n      if (len <= 0) break;\n      sw.append(new String(buf, 0, len));\n    }\n    Map<String, Object> row = new HashMap<String, Object>();\n    row.put(PLAIN_TEXT, sw.toString());\n    ended = true;\n    IOUtils.closeQuietly(r);\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"20e982952e67f8bfb2bb963bb93bb9b9104412a7":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"758fdd153bb361b47f22db79ace6af6f6b7b9330":["20e982952e67f8bfb2bb963bb93bb9b9104412a7"],"ad94625fb8d088209f46650c8097196fec67f00c":["dad9d340d298fa5aa8bde353c9543d74070e5c5c"],"2ee3466ba2d9013d3840892803080bab7134e3e3":["153cc06382fdc94d0ea3db127eab860ae4310525"],"153cc06382fdc94d0ea3db127eab860ae4310525":["758fdd153bb361b47f22db79ace6af6f6b7b9330"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dad9d340d298fa5aa8bde353c9543d74070e5c5c":["2ee3466ba2d9013d3840892803080bab7134e3e3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"20e982952e67f8bfb2bb963bb93bb9b9104412a7":["758fdd153bb361b47f22db79ace6af6f6b7b9330"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["20e982952e67f8bfb2bb963bb93bb9b9104412a7"],"758fdd153bb361b47f22db79ace6af6f6b7b9330":["153cc06382fdc94d0ea3db127eab860ae4310525"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"2ee3466ba2d9013d3840892803080bab7134e3e3":["dad9d340d298fa5aa8bde353c9543d74070e5c5c"],"153cc06382fdc94d0ea3db127eab860ae4310525":["2ee3466ba2d9013d3840892803080bab7134e3e3"],"dad9d340d298fa5aa8bde353c9543d74070e5c5c":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}