{"path":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter#writeStr(String,Writer).mjava","commits":[{"id":"a55bf71f91aeded06b44ad1abea6666ea168b697","date":1435941127,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter#writeStr(String,Writer).mjava","pathOld":"/dev/null","sourceNew":"  private void writeStr(String val, Writer writer) throws IOException {\n    for (int i=0; i<val.length(); i++) {\n      char ch = val.charAt(i);\n      if ((ch > '#' && ch != '\\\\' && ch < '\\u2028') || ch == ' ') { // fast path\n        writer.write(ch);\n        continue;\n      }\n      switch(ch) {\n        case '\"':\n        case '\\\\':\n          writer.write('\\\\');\n          writer.write(ch);\n          break;\n        case '\\r': writer.write('\\\\'); writer.write('r'); break;\n        case '\\n': writer.write('\\\\'); writer.write('n'); break;\n        case '\\t': writer.write('\\\\'); writer.write('t'); break;\n        case '\\b': writer.write('\\\\'); writer.write('b'); break;\n        case '\\f': writer.write('\\\\'); writer.write('f'); break;\n        case '\\u2028': // fallthrough\n        case '\\u2029':\n          unicodeEscape(writer,ch);\n          break;\n        // case '/':\n        default: {\n          if (ch <= 0x1F) {\n            unicodeEscape(writer,ch);\n          } else {\n            writer.write(ch);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50f05d6b69cfaabd51b5d26cba4e3122f51fff83","date":1478603228,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SortingResponseWriter[ExportWriter]#writeStr(String,Writer).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter#writeStr(String,Writer).mjava","sourceNew":"  private void writeStr(String val, Writer writer) throws IOException {\n    for (int i=0; i<val.length(); i++) {\n      char ch = val.charAt(i);\n      if ((ch > '#' && ch != '\\\\' && ch < '\\u2028') || ch == ' ') { // fast path\n        writer.write(ch);\n        continue;\n      }\n      switch(ch) {\n        case '\"':\n        case '\\\\':\n          writer.write('\\\\');\n          writer.write(ch);\n          break;\n        case '\\r': writer.write('\\\\'); writer.write('r'); break;\n        case '\\n': writer.write('\\\\'); writer.write('n'); break;\n        case '\\t': writer.write('\\\\'); writer.write('t'); break;\n        case '\\b': writer.write('\\\\'); writer.write('b'); break;\n        case '\\f': writer.write('\\\\'); writer.write('f'); break;\n        case '\\u2028': // fallthrough\n        case '\\u2029':\n          unicodeEscape(writer,ch);\n          break;\n        // case '/':\n        default: {\n          if (ch <= 0x1F) {\n            unicodeEscape(writer,ch);\n          } else {\n            writer.write(ch);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void writeStr(String val, Writer writer) throws IOException {\n    for (int i=0; i<val.length(); i++) {\n      char ch = val.charAt(i);\n      if ((ch > '#' && ch != '\\\\' && ch < '\\u2028') || ch == ' ') { // fast path\n        writer.write(ch);\n        continue;\n      }\n      switch(ch) {\n        case '\"':\n        case '\\\\':\n          writer.write('\\\\');\n          writer.write(ch);\n          break;\n        case '\\r': writer.write('\\\\'); writer.write('r'); break;\n        case '\\n': writer.write('\\\\'); writer.write('n'); break;\n        case '\\t': writer.write('\\\\'); writer.write('t'); break;\n        case '\\b': writer.write('\\\\'); writer.write('b'); break;\n        case '\\f': writer.write('\\\\'); writer.write('f'); break;\n        case '\\u2028': // fallthrough\n        case '\\u2029':\n          unicodeEscape(writer,ch);\n          break;\n        // case '/':\n        default: {\n          if (ch <= 0x1F) {\n            unicodeEscape(writer,ch);\n          } else {\n            writer.write(ch);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter#writeStr(String,Writer).mjava","sourceNew":null,"sourceOld":"  private void writeStr(String val, Writer writer) throws IOException {\n    for (int i=0; i<val.length(); i++) {\n      char ch = val.charAt(i);\n      if ((ch > '#' && ch != '\\\\' && ch < '\\u2028') || ch == ' ') { // fast path\n        writer.write(ch);\n        continue;\n      }\n      switch(ch) {\n        case '\"':\n        case '\\\\':\n          writer.write('\\\\');\n          writer.write(ch);\n          break;\n        case '\\r': writer.write('\\\\'); writer.write('r'); break;\n        case '\\n': writer.write('\\\\'); writer.write('n'); break;\n        case '\\t': writer.write('\\\\'); writer.write('t'); break;\n        case '\\b': writer.write('\\\\'); writer.write('b'); break;\n        case '\\f': writer.write('\\\\'); writer.write('f'); break;\n        case '\\u2028': // fallthrough\n        case '\\u2029':\n          unicodeEscape(writer,ch);\n          break;\n        // case '/':\n        default: {\n          if (ch <= 0x1F) {\n            unicodeEscape(writer,ch);\n          } else {\n            writer.write(ch);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"50f05d6b69cfaabd51b5d26cba4e3122f51fff83":["a55bf71f91aeded06b44ad1abea6666ea168b697"],"a55bf71f91aeded06b44ad1abea6666ea168b697":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["a55bf71f91aeded06b44ad1abea6666ea168b697","50f05d6b69cfaabd51b5d26cba4e3122f51fff83"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83"]},"commit2Childs":{"50f05d6b69cfaabd51b5d26cba4e3122f51fff83":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a55bf71f91aeded06b44ad1abea6666ea168b697":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a55bf71f91aeded06b44ad1abea6666ea168b697"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}