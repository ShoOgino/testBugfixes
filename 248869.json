{"path":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#testMustAndMustNot().mjava","commits":[{"id":"1f9f2355d68aab1348539f7a1603279405e566a4","date":1313634992,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#testMustAndMustNot().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#testMustAndMustNot().mjava","sourceNew":"  public void testMustAndMustNot() throws Throwable {\n    BooleanFilter booleanFilter = new BooleanFilter();\n    booleanFilter.add(new FilterClause(getTermsFilter(\"inStock\", \"N\"), BooleanClause.Occur.MUST));\n    booleanFilter.add(new FilterClause(getTermsFilter(\"price\", \"030\"), BooleanClause.Occur.MUST_NOT));\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n  }\n\n","sourceOld":"  public void testMustAndMustNot() throws Throwable {\n    BooleanFilter booleanFilter = new BooleanFilter();\n    booleanFilter.add(new FilterClause(getTermsFilter(\"inStock\", \"N\"), BooleanClause.Occur.MUST));\n    booleanFilter.add(new FilterClause(getTermsFilter(\"price\", \"030\"), BooleanClause.Occur.MUST_NOT));\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4f5ec97a7b7e3e63d7c80c6e71db06e7ed0797b","date":1316724540,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#testMustAndMustNot().mjava","pathOld":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#testMustAndMustNot().mjava","sourceNew":"  public void testMustAndMustNot() throws Throwable {\n    BooleanFilter booleanFilter = new BooleanFilter();\n    booleanFilter.add(new FilterClause(getTermsFilter(\"inStock\", \"N\"), BooleanClause.Occur.MUST));\n    booleanFilter.add(new FilterClause(getTermsFilter(\"price\", \"030\"), BooleanClause.Occur.MUST_NOT));\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n    \n    // same with a real DISI (no OpenBitSetIterator)\n    booleanFilter = new BooleanFilter();\n    booleanFilter.add(new FilterClause(getWrappedTermQuery(\"inStock\", \"N\"), BooleanClause.Occur.MUST));\n    booleanFilter.add(new FilterClause(getWrappedTermQuery(\"price\", \"030\"), BooleanClause.Occur.MUST_NOT));\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n  }\n\n","sourceOld":"  public void testMustAndMustNot() throws Throwable {\n    BooleanFilter booleanFilter = new BooleanFilter();\n    booleanFilter.add(new FilterClause(getTermsFilter(\"inStock\", \"N\"), BooleanClause.Occur.MUST));\n    booleanFilter.add(new FilterClause(getTermsFilter(\"price\", \"030\"), BooleanClause.Occur.MUST_NOT));\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a577e6c0f434f9db36661dde6ceabdb75ce92b86","date":1316954936,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#testMustAndMustNot().mjava","pathOld":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#testMustAndMustNot().mjava","sourceNew":"  public void testMustAndMustNot() throws Exception {\n    BooleanFilter booleanFilter = new BooleanFilter();\n    booleanFilter.add(getTermsFilter(\"inStock\", \"N\"), Occur.MUST);\n    booleanFilter.add(getTermsFilter(\"price\", \"030\"), Occur.MUST_NOT);\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n    \n    // same with a real DISI (no OpenBitSetIterator)\n    booleanFilter = new BooleanFilter();\n    booleanFilter.add(getWrappedTermQuery(\"inStock\", \"N\"), Occur.MUST);\n    booleanFilter.add(getWrappedTermQuery(\"price\", \"030\"), Occur.MUST_NOT);\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n  }\n\n","sourceOld":"  public void testMustAndMustNot() throws Throwable {\n    BooleanFilter booleanFilter = new BooleanFilter();\n    booleanFilter.add(new FilterClause(getTermsFilter(\"inStock\", \"N\"), BooleanClause.Occur.MUST));\n    booleanFilter.add(new FilterClause(getTermsFilter(\"price\", \"030\"), BooleanClause.Occur.MUST_NOT));\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n    \n    // same with a real DISI (no OpenBitSetIterator)\n    booleanFilter = new BooleanFilter();\n    booleanFilter.add(new FilterClause(getWrappedTermQuery(\"inStock\", \"N\"), BooleanClause.Occur.MUST));\n    booleanFilter.add(new FilterClause(getWrappedTermQuery(\"price\", \"030\"), BooleanClause.Occur.MUST_NOT));\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#testMustAndMustNot().mjava","pathOld":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#testMustAndMustNot().mjava","sourceNew":"  public void testMustAndMustNot() throws Exception {\n    BooleanFilter booleanFilter = new BooleanFilter();\n    booleanFilter.add(getTermsFilter(\"inStock\", \"N\"), Occur.MUST);\n    booleanFilter.add(getTermsFilter(\"price\", \"030\"), Occur.MUST_NOT);\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n    \n    // same with a real DISI (no OpenBitSetIterator)\n    booleanFilter = new BooleanFilter();\n    booleanFilter.add(getWrappedTermQuery(\"inStock\", \"N\"), Occur.MUST);\n    booleanFilter.add(getWrappedTermQuery(\"price\", \"030\"), Occur.MUST_NOT);\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n  }\n\n","sourceOld":"  public void testMustAndMustNot() throws Exception {\n    BooleanFilter booleanFilter = new BooleanFilter();\n    booleanFilter.add(getTermsFilter(\"inStock\", \"N\"), Occur.MUST);\n    booleanFilter.add(getTermsFilter(\"price\", \"030\"), Occur.MUST_NOT);\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n    \n    // same with a real DISI (no OpenBitSetIterator)\n    booleanFilter = new BooleanFilter();\n    booleanFilter.add(getWrappedTermQuery(\"inStock\", \"N\"), Occur.MUST);\n    booleanFilter.add(getWrappedTermQuery(\"price\", \"030\"), Occur.MUST_NOT);\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a577e6c0f434f9db36661dde6ceabdb75ce92b86"],"a577e6c0f434f9db36661dde6ceabdb75ce92b86":["a4f5ec97a7b7e3e63d7c80c6e71db06e7ed0797b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a4f5ec97a7b7e3e63d7c80c6e71db06e7ed0797b":["1f9f2355d68aab1348539f7a1603279405e566a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"1f9f2355d68aab1348539f7a1603279405e566a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a577e6c0f434f9db36661dde6ceabdb75ce92b86":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f9f2355d68aab1348539f7a1603279405e566a4"],"a4f5ec97a7b7e3e63d7c80c6e71db06e7ed0797b":["a577e6c0f434f9db36661dde6ceabdb75ce92b86"],"1f9f2355d68aab1348539f7a1603279405e566a4":["a4f5ec97a7b7e3e63d7c80c6e71db06e7ed0797b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}