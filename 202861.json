{"path":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest#testRemoveDateUsingStringType().mjava","commits":[{"id":"1166b183ba6d2f30d8660b254c6a8255505a44c3","date":1413452503,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest#testRemoveDateUsingStringType().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRemoveDateUsingStringType() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10002\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10020\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10021\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    List<String> removeList = new ArrayList<String>();\n    removeList.add(\"2014-09-02T12:00:00Z\");\n    removeList.add(\"2014-09-03T12:00:00Z\");\n\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10021\");\n    removeList = new ArrayList<String>();\n    removeList.add(\"2014-09-02T12:00:00Z\");\n    removeList.add(\"2014-09-03T12:00:00Z\");\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", \"2014-09-01T12:00:00Z\")); //behavior when hitting Solr directly\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-01T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","date":1413458798,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest#testRemoveDateUsingStringType().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRemoveDateUsingStringType() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10002\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10020\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10021\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    List<String> removeList = new ArrayList<String>();\n    removeList.add(\"2014-09-02T12:00:00Z\");\n    removeList.add(\"2014-09-03T12:00:00Z\");\n\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10021\");\n    removeList = new ArrayList<String>();\n    removeList.add(\"2014-09-02T12:00:00Z\");\n    removeList.add(\"2014-09-03T12:00:00Z\");\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", \"2014-09-01T12:00:00Z\")); //behavior when hitting Solr directly\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-01T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"daa9f76a48e97bb2d40fc67ecdaad33d166d596e","date":1488856307,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest#testRemoveDateUsingStringType().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest#testRemoveDateUsingStringType().mjava","sourceNew":"  @Test\n  public void testRemoveDateUsingStringType() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10002\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10020\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10021\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    boolean isPointField = h.getCore().getLatestSchema().getField(\"dateRemove\").getType().isPointField();\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    List<String> removeList = new ArrayList<String>();\n    removeList.add(\"2014-09-02T12:00:00Z\");\n    removeList.add(\"2014-09-03T12:00:00Z\");\n\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10021\");\n    removeList = new ArrayList<String>();\n    removeList.add(\"2014-09-02T12:00:00Z\");\n    removeList.add(\"2014-09-03T12:00:00Z\");\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", \"2014-09-01T12:00:00Z\")); //behavior when hitting Solr directly\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-01T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n\n","sourceOld":"  @Test\n  public void testRemoveDateUsingStringType() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10002\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10020\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10021\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    List<String> removeList = new ArrayList<String>();\n    removeList.add(\"2014-09-02T12:00:00Z\");\n    removeList.add(\"2014-09-03T12:00:00Z\");\n\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10021\");\n    removeList = new ArrayList<String>();\n    removeList.add(\"2014-09-02T12:00:00Z\");\n    removeList.add(\"2014-09-03T12:00:00Z\");\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", \"2014-09-01T12:00:00Z\")); //behavior when hitting Solr directly\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-01T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a25dacbb15b3a184ab77b437a6b4d54ff286b5d","date":1570469935,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest#testRemoveDateUsingStringType().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest#testRemoveDateUsingStringType().mjava","sourceNew":"  @Test\n  public void testRemoveDateUsingStringType() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10002\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10020\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10021\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    boolean isPointField = h.getCore().getLatestSchema().getField(\"dateRemove\").getType().isPointField();\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-03T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    List<String> removeList = new ArrayList<String>();\n    removeList.add(\"2014-09-02T12:00:00Z\");\n    removeList.add(\"2014-09-03T12:00:00Z\");\n\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10021\");\n    removeList = new ArrayList<String>();\n    removeList.add(\"2014-09-02T12:00:00Z\");\n    removeList.add(\"2014-09-03T12:00:00Z\");\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", \"2014-09-01T12:00:00Z\")); //behavior when hitting Solr directly\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-01T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n\n","sourceOld":"  @Test\n  public void testRemoveDateUsingStringType() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10002\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10020\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10021\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    boolean isPointField = h.getCore().getLatestSchema().getField(\"dateRemove\").getType().isPointField();\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    List<String> removeList = new ArrayList<String>();\n    removeList.add(\"2014-09-02T12:00:00Z\");\n    removeList.add(\"2014-09-03T12:00:00Z\");\n\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10021\");\n    removeList = new ArrayList<String>();\n    removeList.add(\"2014-09-02T12:00:00Z\");\n    removeList.add(\"2014-09-03T12:00:00Z\");\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", \"2014-09-01T12:00:00Z\")); //behavior when hitting Solr directly\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-01T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest#testRemoveDateUsingStringType().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest#testRemoveDateUsingStringType().mjava","sourceNew":"  @Test\n  public void testRemoveDateUsingStringType() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10002\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10020\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10021\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    boolean isPointField = h.getCore().getLatestSchema().getField(\"dateRemove\").getType().isPointField();\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-03T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    List<String> removeList = new ArrayList<String>();\n    removeList.add(\"2014-09-02T12:00:00Z\");\n    removeList.add(\"2014-09-03T12:00:00Z\");\n\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10021\");\n    removeList = new ArrayList<String>();\n    removeList.add(\"2014-09-02T12:00:00Z\");\n    removeList.add(\"2014-09-03T12:00:00Z\");\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", \"2014-09-01T12:00:00Z\")); //behavior when hitting Solr directly\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-01T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n\n","sourceOld":"  @Test\n  public void testRemoveDateUsingStringType() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10002\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10020\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-03T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10021\");\n    doc.setField(\"dateRemove\", new String[]{\"2014-09-01T12:00:00Z\", \"2014-09-02T12:00:00Z\", \"2014-09-04T12:00:00Z\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    boolean isPointField = h.getCore().getLatestSchema().getField(\"dateRemove\").getType().isPointField();\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    List<String> removeList = new ArrayList<String>();\n    removeList.add(\"2014-09-02T12:00:00Z\");\n    removeList.add(\"2014-09-03T12:00:00Z\");\n\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10021\");\n    removeList = new ArrayList<String>();\n    removeList.add(\"2014-09-02T12:00:00Z\");\n    removeList.add(\"2014-09-03T12:00:00Z\");\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-02T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"10001\");\n    doc.setField(\"dateRemove\", ImmutableMap.of(\"remove\", \"2014-09-01T12:00:00Z\")); //behavior when hitting Solr directly\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    if (isPointField) {\n      assertQ(req(\"q\", \"dateRemove:[* TO *]\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    } else {\n      assertQ(req(\"q\", \"dateRemove:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    }\n    assertQ(req(\"q\", \"dateRemove:\\\"2014-09-01T12:00:00Z\\\"\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1166b183ba6d2f30d8660b254c6a8255505a44c3"],"daa9f76a48e97bb2d40fc67ecdaad33d166d596e":["1166b183ba6d2f30d8660b254c6a8255505a44c3"],"6a25dacbb15b3a184ab77b437a6b4d54ff286b5d":["daa9f76a48e97bb2d40fc67ecdaad33d166d596e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1166b183ba6d2f30d8660b254c6a8255505a44c3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6a25dacbb15b3a184ab77b437a6b4d54ff286b5d"],"b0b597c65628ca9e73913a07e81691f8229bae35":["daa9f76a48e97bb2d40fc67ecdaad33d166d596e","6a25dacbb15b3a184ab77b437a6b4d54ff286b5d"]},"commit2Childs":{"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84":[],"daa9f76a48e97bb2d40fc67ecdaad33d166d596e":["6a25dacbb15b3a184ab77b437a6b4d54ff286b5d","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","1166b183ba6d2f30d8660b254c6a8255505a44c3"],"6a25dacbb15b3a184ab77b437a6b4d54ff286b5d":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"1166b183ba6d2f30d8660b254c6a8255505a44c3":["c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","daa9f76a48e97bb2d40fc67ecdaad33d166d596e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}