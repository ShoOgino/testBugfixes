{"path":"src/test/org/apache/lucene/index/TestMultiReader#openReader().mjava","commits":[{"id":"125b5699f11b58d9be0820c6ce8b1648812902e8","date":1190273227,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestMultiReader#openReader().mjava","pathOld":"/dev/null","sourceNew":"  protected IndexReader openReader() throws IOException {\n    IndexReader reader;\n\n    sis.read(dir);\n    SegmentReader reader1 = SegmentReader.get(sis.info(0));\n    SegmentReader reader2 = SegmentReader.get(sis.info(1));\n    readers[0] = reader1;\n    readers[1] = reader2;\n    assertTrue(reader1 != null);\n    assertTrue(reader2 != null);\n\n    reader = new MultiReader(readers);\n\n    assertTrue(dir != null);\n    assertTrue(sis != null);\n    assertTrue(reader != null);\n    \n    return reader;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1","date":1255502337,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestMultiReader#openReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestMultiReader#openReader().mjava","sourceNew":"  protected IndexReader openReader() throws IOException {\n    IndexReader reader;\n\n    sis.read(dir);\n    SegmentReader reader1 = SegmentReader.get(false, sis.info(0), IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    SegmentReader reader2 = SegmentReader.get(false, sis.info(1), IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    readers[0] = reader1;\n    readers[1] = reader2;\n    assertTrue(reader1 != null);\n    assertTrue(reader2 != null);\n\n    reader = new MultiReader(readers);\n\n    assertTrue(dir != null);\n    assertTrue(sis != null);\n    assertTrue(reader != null);\n    \n    return reader;\n  }\n\n","sourceOld":"  protected IndexReader openReader() throws IOException {\n    IndexReader reader;\n\n    sis.read(dir);\n    SegmentReader reader1 = SegmentReader.get(sis.info(0));\n    SegmentReader reader2 = SegmentReader.get(sis.info(1));\n    readers[0] = reader1;\n    readers[1] = reader2;\n    assertTrue(reader1 != null);\n    assertTrue(reader2 != null);\n\n    reader = new MultiReader(readers);\n\n    assertTrue(dir != null);\n    assertTrue(sis != null);\n    assertTrue(reader != null);\n    \n    return reader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestMultiReader#openReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestMultiReader#openReader().mjava","sourceNew":"  @Override\n  protected IndexReader openReader() throws IOException {\n    IndexReader reader;\n\n    sis.read(dir);\n    SegmentReader reader1 = SegmentReader.get(false, sis.info(0), IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    SegmentReader reader2 = SegmentReader.get(false, sis.info(1), IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    readers[0] = reader1;\n    readers[1] = reader2;\n    assertTrue(reader1 != null);\n    assertTrue(reader2 != null);\n\n    reader = new MultiReader(readers);\n\n    assertTrue(dir != null);\n    assertTrue(sis != null);\n    assertTrue(reader != null);\n    \n    return reader;\n  }\n\n","sourceOld":"  protected IndexReader openReader() throws IOException {\n    IndexReader reader;\n\n    sis.read(dir);\n    SegmentReader reader1 = SegmentReader.get(false, sis.info(0), IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    SegmentReader reader2 = SegmentReader.get(false, sis.info(1), IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    readers[0] = reader1;\n    readers[1] = reader2;\n    assertTrue(reader1 != null);\n    assertTrue(reader2 != null);\n\n    reader = new MultiReader(readers);\n\n    assertTrue(dir != null);\n    assertTrue(sis != null);\n    assertTrue(reader != null);\n    \n    return reader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestMultiReader#openReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestMultiReader#openReader().mjava","sourceNew":"  @Override\n  protected IndexReader openReader() throws IOException {\n    IndexReader reader;\n\n    sis.read(dir);\n    SegmentReader reader1 = SegmentReader.get(false, sis.info(0), IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    SegmentReader reader2 = SegmentReader.get(false, sis.info(1), IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    readers[0] = reader1;\n    readers[1] = reader2;\n    assertTrue(reader1 != null);\n    assertTrue(reader2 != null);\n\n    reader = new MultiReader(readers);\n\n    assertTrue(dir != null);\n    assertTrue(sis != null);\n    \n    return reader;\n  }\n\n","sourceOld":"  @Override\n  protected IndexReader openReader() throws IOException {\n    IndexReader reader;\n\n    sis.read(dir);\n    SegmentReader reader1 = SegmentReader.get(false, sis.info(0), IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    SegmentReader reader2 = SegmentReader.get(false, sis.info(1), IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    readers[0] = reader1;\n    readers[1] = reader2;\n    assertTrue(reader1 != null);\n    assertTrue(reader2 != null);\n\n    reader = new MultiReader(readers);\n\n    assertTrue(dir != null);\n    assertTrue(sis != null);\n    assertTrue(reader != null);\n    \n    return reader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestMultiReader#openReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestMultiReader#openReader().mjava","sourceNew":"  @Override\n  protected IndexReader openReader() throws IOException {\n    IndexReader reader;\n\n    sis.read(dir);\n    SegmentReader reader1 = SegmentReader.get(false, sis.info(0), IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    SegmentReader reader2 = SegmentReader.get(false, sis.info(1), IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    readers[0] = reader1;\n    readers[1] = reader2;\n    assertTrue(reader1 != null);\n    assertTrue(reader2 != null);\n\n    reader = new MultiReader(readers);\n\n    assertTrue(dir != null);\n    assertTrue(sis != null);\n    \n    return reader;\n  }\n\n","sourceOld":"  @Override\n  protected IndexReader openReader() throws IOException {\n    IndexReader reader;\n\n    sis.read(dir);\n    SegmentReader reader1 = SegmentReader.get(false, sis.info(0), IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    SegmentReader reader2 = SegmentReader.get(false, sis.info(1), IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    readers[0] = reader1;\n    readers[1] = reader2;\n    assertTrue(reader1 != null);\n    assertTrue(reader2 != null);\n\n    reader = new MultiReader(readers);\n\n    assertTrue(dir != null);\n    assertTrue(sis != null);\n    \n    return reader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1"],"125b5699f11b58d9be0820c6ce8b1648812902e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"125b5699f11b58d9be0820c6ce8b1648812902e8":["be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}