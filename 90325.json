{"path":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#SwitchTo(int).mjava","commits":[{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#SwitchTo(int).mjava","pathOld":"/dev/null","sourceNew":"/** Switch to specified lex state. */\npublic void SwitchTo(int lexState)\n{\n   if (lexState >= 3 || lexState < 0)\n      throw new TokenMgrError(\"Error: Ignoring invalid lexical state : \" + lexState + \". State unchanged.\", TokenMgrError.INVALID_LEXICAL_STATE);\n   else\n      curLexState = lexState;\n}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#SwitchTo(int).mjava","pathOld":"/dev/null","sourceNew":"/** Switch to specified lex state. */\npublic void SwitchTo(int lexState)\n{\n   if (lexState >= 3 || lexState < 0)\n      throw new TokenMgrError(\"Error: Ignoring invalid lexical state : \" + lexState + \". State unchanged.\", TokenMgrError.INVALID_LEXICAL_STATE);\n   else\n      curLexState = lexState;\n}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57e3101a41ed818f22eb79567303e8523da9f00f","date":1438797043,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#SwitchTo(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#SwitchTo(int).mjava","sourceNew":"/** Switch to specified lex state. */\npublic void SwitchTo(int lexState)\n{\n   if (lexState >= 4 || lexState < 0)\n      throw new TokenMgrError(\"Error: Ignoring invalid lexical state : \" + lexState + \". State unchanged.\", TokenMgrError.INVALID_LEXICAL_STATE);\n   else\n      curLexState = lexState;\n}\n\n","sourceOld":"/** Switch to specified lex state. */\npublic void SwitchTo(int lexState)\n{\n   if (lexState >= 3 || lexState < 0)\n      throw new TokenMgrError(\"Error: Ignoring invalid lexical state : \" + lexState + \". State unchanged.\", TokenMgrError.INVALID_LEXICAL_STATE);\n   else\n      curLexState = lexState;\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4bf8c857cdf9b9be903cae84ef15985ad090a05","date":1600342158,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#SwitchTo(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#SwitchTo(int).mjava","sourceNew":"  /** Switch to specified lex state. */\n  public void SwitchTo(int lexState)\n  {\n    if (lexState >= 4 || lexState < 0)\n      throw new TokenMgrError(\"Error: Ignoring invalid lexical state : \" + lexState + \". State unchanged.\", TokenMgrError.INVALID_LEXICAL_STATE);\n    else\n      curLexState = lexState;\n  }\n\n","sourceOld":"/** Switch to specified lex state. */\npublic void SwitchTo(int lexState)\n{\n   if (lexState >= 4 || lexState < 0)\n      throw new TokenMgrError(\"Error: Ignoring invalid lexical state : \" + lexState + \". State unchanged.\", TokenMgrError.INVALID_LEXICAL_STATE);\n   else\n      curLexState = lexState;\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3cdb67100dc016748799a77218aa409478372d79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb67100dc016748799a77218aa409478372d79"],"57e3101a41ed818f22eb79567303e8523da9f00f":["3cdb67100dc016748799a77218aa409478372d79"],"c4bf8c857cdf9b9be903cae84ef15985ad090a05":["57e3101a41ed818f22eb79567303e8523da9f00f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c4bf8c857cdf9b9be903cae84ef15985ad090a05"]},"commit2Childs":{"3cdb67100dc016748799a77218aa409478372d79":["407687e67faf6e1f02a211ca078d8e3eed631027","57e3101a41ed818f22eb79567303e8523da9f00f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"57e3101a41ed818f22eb79567303e8523da9f00f":["c4bf8c857cdf9b9be903cae84ef15985ad090a05"],"c4bf8c857cdf9b9be903cae84ef15985ad090a05":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}