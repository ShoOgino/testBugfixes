{"path":"lucene/queries/src/java/org/apache/lucene/queries/function/IndexReaderFunctions.TermFreqDoubleValuesSource#getValues(LeafReaderContext,DoubleValues).mjava","commits":[{"id":"a38488a55cc52553c9792da5044dd31b15128cd8","date":1510755769,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/IndexReaderFunctions.TermFreqDoubleValuesSource#getValues(LeafReaderContext,DoubleValues).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public DoubleValues getValues(LeafReaderContext ctx, DoubleValues scores) throws IOException {\n      Terms terms = ctx.reader().terms(term.field());\n      TermsEnum te = terms == null ? null : terms.iterator();\n\n      if (te == null || te.seekExact(term.bytes()) == false) {\n        return DoubleValues.EMPTY;\n      }\n\n      final PostingsEnum pe = te.postings(null);\n      assert pe != null;\n\n      return new DoubleValues() {\n        @Override\n        public double doubleValue() throws IOException {\n          return pe.freq();\n        }\n\n        @Override\n        public boolean advanceExact(int doc) throws IOException {\n          if (pe.docID() > doc)\n            return false;\n          return pe.docID() == doc || pe.advance(doc) == doc;\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a38488a55cc52553c9792da5044dd31b15128cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a38488a55cc52553c9792da5044dd31b15128cd8"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a38488a55cc52553c9792da5044dd31b15128cd8"],"a38488a55cc52553c9792da5044dd31b15128cd8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}