{"path":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsReader#files(Directory,SegmentInfo,Set[String]).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsReader#files(Directory,SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40NormsReader#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"  static void files(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    // TODO: This is what SI always did... but we can do this cleaner?\n    // like first FI that has norms but doesn't have separate norms?\n    final String normsFileName = IndexFileNames.segmentFileName(info.name, \"\", Lucene40NormsWriter.NORMS_EXTENSION);\n    if (dir.fileExists(normsFileName)) {\n      files.add(normsFileName);\n    }\n  }\n\n","sourceOld":"  static void files(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    // TODO: This is what SI always did... but we can do this cleaner?\n    // like first FI that has norms but doesn't have separate norms?\n    final String normsFileName = IndexFileNames.segmentFileName(info.name, \"\", Lucene40NormsWriter.NORMS_EXTENSION);\n    if (dir.fileExists(normsFileName)) {\n      files.add(normsFileName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6e3376a314fcc2b31bc46d399c2ff23552b78d6","date":1325780477,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xNormsProducer#files(Directory,SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsReader#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"  static void files(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    // TODO: This is what SI always did... but we can do this cleaner?\n    // like first FI that has norms but doesn't have separate norms?\n    final String normsFileName = IndexFileNames.segmentFileName(info.name, \"\", NORMS_EXTENSION);\n    if (dir.fileExists(normsFileName)) {\n      files.add(normsFileName);\n    }\n  }\n\n","sourceOld":"  static void files(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    // TODO: This is what SI always did... but we can do this cleaner?\n    // like first FI that has norms but doesn't have separate norms?\n    final String normsFileName = IndexFileNames.segmentFileName(info.name, \"\", Lucene40NormsWriter.NORMS_EXTENSION);\n    if (dir.fileExists(normsFileName)) {\n      files.add(normsFileName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6e3376a314fcc2b31bc46d399c2ff23552b78d6","date":1325780477,"type":6,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/simpletext/SimpleTextNormsProducer#files(Directory,SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsReader#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"  static void files(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    // TODO: This is what SI always did... but we can do this cleaner?\n    // like first FI that has norms but doesn't have separate norms?\n    final String normsFileName = IndexFileNames.segmentFileName(info.name, \"\", SimpleTextNormsConsumer.NORMS_EXTENSION);\n    if (dir.fileExists(normsFileName)) {\n      files.add(normsFileName);\n    }\n  }\n\n","sourceOld":"  static void files(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    // TODO: This is what SI always did... but we can do this cleaner?\n    // like first FI that has norms but doesn't have separate norms?\n    final String normsFileName = IndexFileNames.segmentFileName(info.name, \"\", Lucene40NormsWriter.NORMS_EXTENSION);\n    if (dir.fileExists(normsFileName)) {\n      files.add(normsFileName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}