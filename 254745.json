{"path":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","sourceNew":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newField(\"content\", \"aaa \" + (i%4), TextField.TYPE_UNSTORED));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    tmp.setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newField(\"content\", \"aaa \" + (i%4), TextField.TYPE_UNSTORED));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    tmp.setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","sourceNew":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newField(\"content\", \"aaa \" + (i%4), TextField.TYPE_UNSTORED));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    tmp.setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newField(\"content\", \"aaa \" + (i%4), TextField.TYPE_UNSTORED));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    tmp.setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0791b41f65aecff2e75db0c1ebf95d745a5ab1b1","date":1338332414,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","sourceNew":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newField(\"content\", \"aaa \" + (i%4), TextField.TYPE_UNSTORED));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    ((TieredMergePolicy) w.getConfig().getMergePolicy()).setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newField(\"content\", \"aaa \" + (i%4), TextField.TYPE_UNSTORED));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    tmp.setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.close();\n    dir.close();\n  }\n\n","bugFix":["34ce7c842452c79b12c45a8feb64e4597c7110e8"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","sourceNew":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"content\", \"aaa \" + (i%4), Field.Store.NO));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    ((TieredMergePolicy) w.getConfig().getMergePolicy()).setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newField(\"content\", \"aaa \" + (i%4), TextField.TYPE_UNSTORED));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    ((TieredMergePolicy) w.getConfig().getMergePolicy()).setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.close();\n    dir.close();\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","sourceNew":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"content\", \"aaa \" + (i%4), Field.Store.NO));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    ((TieredMergePolicy) w.getConfig().getMergePolicy()).setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"content\", \"aaa \" + (i%4), Field.Store.NO));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    ((TieredMergePolicy) w.getConfig().getMergePolicy()).setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","sourceNew":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"content\", \"aaa \" + (i%4), Field.Store.NO));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    ((TieredMergePolicy) w.getConfig().getMergePolicy()).setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"content\", \"aaa \" + (i%4), Field.Store.NO));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    ((TieredMergePolicy) w.getConfig().getMergePolicy()).setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","sourceNew":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"content\", \"aaa \" + (i%4), Field.Store.NO));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    ((TieredMergePolicy) w.getConfig().getMergePolicy()).setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"content\", \"aaa \" + (i%4), Field.Store.NO));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    ((TieredMergePolicy) w.getConfig().getMergePolicy()).setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a90cc8c90aa53ddf51fbd15019989ac269514a3","date":1531845066,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","sourceNew":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setDeletesPctAllowed(50.0);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"content\", \"aaa \" + (i%4), Field.Store.NO));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    ((TieredMergePolicy) w.getConfig().getMergePolicy()).setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"content\", \"aaa \" + (i%4), Field.Store.NO));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    ((TieredMergePolicy) w.getConfig().getMergePolicy()).setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","sourceNew":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setDeletesPctAllowed(50.0);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"content\", \"aaa \" + (i%4), Field.Store.NO));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    ((TieredMergePolicy) w.getConfig().getMergePolicy()).setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"content\", \"aaa \" + (i%4), Field.Store.NO));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    ((TieredMergePolicy) w.getConfig().getMergePolicy()).setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"feb4029567b43f074ed7b6eb8fb126d355075dfd","date":1544812585,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletes().mjava","sourceNew":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setDeletesPctAllowed(50.0);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"content\", \"aaa \" + (i%4), Field.Store.NO));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.getDocStats().maxDoc);\n    assertEquals(80, w.getDocStats().numDocs);\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.getDocStats().maxDoc);\n    assertEquals(60, w.getDocStats().numDocs);\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    ((TieredMergePolicy) w.getConfig().getMergePolicy()).setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.getDocStats().maxDoc);\n    assertEquals(60, w.getDocStats().numDocs);\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testForceMergeDeletes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    TieredMergePolicy tmp = newTieredMergePolicy();\n    conf.setMergePolicy(tmp);\n    conf.setMaxBufferedDocs(4);\n    tmp.setMaxMergeAtOnce(100);\n    tmp.setSegmentsPerTier(100);\n    tmp.setDeletesPctAllowed(50.0);\n    tmp.setForceMergeDeletesPctAllowed(30.0);\n    IndexWriter w = new IndexWriter(dir, conf);\n    for(int i=0;i<80;i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"content\", \"aaa \" + (i%4), Field.Store.NO));\n      w.addDocument(doc);\n    }\n    assertEquals(80, w.maxDoc());\n    assertEquals(80, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: delete docs\");\n    }\n    w.deleteDocuments(new Term(\"content\", \"0\"));\n    w.forceMergeDeletes();\n\n    assertEquals(80, w.maxDoc());\n    assertEquals(60, w.numDocs());\n\n    if (VERBOSE) {\n      System.out.println(\"\\nTEST: forceMergeDeletes2\");\n    }\n    ((TieredMergePolicy) w.getConfig().getMergePolicy()).setForceMergeDeletesPctAllowed(10.0);\n    w.forceMergeDeletes();\n    assertEquals(60, w.maxDoc());\n    assertEquals(60, w.numDocs());\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["0791b41f65aecff2e75db0c1ebf95d745a5ab1b1"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["d0ef034a4f10871667ae75181537775ddcf8ade4","4a90cc8c90aa53ddf51fbd15019989ac269514a3"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"feb4029567b43f074ed7b6eb8fb126d355075dfd":["4a90cc8c90aa53ddf51fbd15019989ac269514a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"0791b41f65aecff2e75db0c1ebf95d745a5ab1b1":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"4a90cc8c90aa53ddf51fbd15019989ac269514a3":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["feb4029567b43f074ed7b6eb8fb126d355075dfd"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"feb4029567b43f074ed7b6eb8fb126d355075dfd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","4a90cc8c90aa53ddf51fbd15019989ac269514a3"],"0791b41f65aecff2e75db0c1ebf95d745a5ab1b1":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"4a90cc8c90aa53ddf51fbd15019989ac269514a3":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","feb4029567b43f074ed7b6eb8fb126d355075dfd"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["0791b41f65aecff2e75db0c1ebf95d745a5ab1b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}