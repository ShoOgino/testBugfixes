{"path":"src/java/org/apache/lucene/search/payloads/PayloadSpanUtil#getPayloadsForQuery(Query).mjava","commits":[{"id":"fd5947db4de866f035b932f219674c03562d904e","date":1219248396,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/payloads/PayloadSpanUtil#getPayloadsForQuery(Query).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Query should be rewritten for wild/fuzzy support.\n   * \n   * @param query\n   * @return\n   * @throws IOException\n   */\n  public Collection getPayloadsForQuery(Query query) throws IOException {\n    Collection payloads = new ArrayList();\n    queryToSpanQuery(query, payloads);\n    return payloads;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7090080cddd69b6a3ea2c6daf923e7b1111fa7a","date":1221835864,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/payloads/PayloadSpanUtil#getPayloadsForQuery(Query).mjava","pathOld":"src/java/org/apache/lucene/search/payloads/PayloadSpanUtil#getPayloadsForQuery(Query).mjava","sourceNew":"  /**\n   * Query should be rewritten for wild/fuzzy support.\n   * \n   * @param query\n   * @return payloads Collection\n   * @throws IOException\n   */\n  public Collection getPayloadsForQuery(Query query) throws IOException {\n    Collection payloads = new ArrayList();\n    queryToSpanQuery(query, payloads);\n    return payloads;\n  }\n\n","sourceOld":"  /**\n   * Query should be rewritten for wild/fuzzy support.\n   * \n   * @param query\n   * @return\n   * @throws IOException\n   */\n  public Collection getPayloadsForQuery(Query query) throws IOException {\n    Collection payloads = new ArrayList();\n    queryToSpanQuery(query, payloads);\n    return payloads;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef82ff03e4016c705811b2658e81471a645c0e49","date":1255900293,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/payloads/PayloadSpanUtil#getPayloadsForQuery(Query).mjava","pathOld":"src/java/org/apache/lucene/search/payloads/PayloadSpanUtil#getPayloadsForQuery(Query).mjava","sourceNew":"  /**\n   * Query should be rewritten for wild/fuzzy support.\n   * \n   * @param query\n   * @return payloads Collection\n   * @throws IOException\n   */\n  public Collection<byte[]> getPayloadsForQuery(Query query) throws IOException {\n    Collection<byte[]> payloads = new ArrayList<byte[]>();\n    queryToSpanQuery(query, payloads);\n    return payloads;\n  }\n\n","sourceOld":"  /**\n   * Query should be rewritten for wild/fuzzy support.\n   * \n   * @param query\n   * @return payloads Collection\n   * @throws IOException\n   */\n  public Collection getPayloadsForQuery(Query query) throws IOException {\n    Collection payloads = new ArrayList();\n    queryToSpanQuery(query, payloads);\n    return payloads;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/payloads/PayloadSpanUtil#getPayloadsForQuery(Query).mjava","pathOld":"src/java/org/apache/lucene/search/payloads/PayloadSpanUtil#getPayloadsForQuery(Query).mjava","sourceNew":"  /**\n   * Query should be rewritten for wild/fuzzy support.\n   * \n   * @param query\n   * @return payloads Collection\n   * @throws IOException\n   */\n  public Collection<byte[]> getPayloadsForQuery(Query query) throws IOException {\n    Collection<byte[]> payloads = new ArrayList<byte[]>();\n    queryToSpanQuery(query, payloads);\n    return payloads;\n  }\n\n","sourceOld":"  /**\n   * Query should be rewritten for wild/fuzzy support.\n   * \n   * @param query\n   * @return payloads Collection\n   * @throws IOException\n   */\n  public Collection<byte[]> getPayloadsForQuery(Query query) throws IOException {\n    Collection<byte[]> payloads = new ArrayList<byte[]>();\n    queryToSpanQuery(query, payloads);\n    return payloads;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ef82ff03e4016c705811b2658e81471a645c0e49":["a7090080cddd69b6a3ea2c6daf923e7b1111fa7a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd5947db4de866f035b932f219674c03562d904e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a7090080cddd69b6a3ea2c6daf923e7b1111fa7a":["fd5947db4de866f035b932f219674c03562d904e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ef82ff03e4016c705811b2658e81471a645c0e49"]},"commit2Childs":{"ef82ff03e4016c705811b2658e81471a645c0e49":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fd5947db4de866f035b932f219674c03562d904e"],"fd5947db4de866f035b932f219674c03562d904e":["a7090080cddd69b6a3ea2c6daf923e7b1111fa7a"],"a7090080cddd69b6a3ea2c6daf923e7b1111fa7a":["ef82ff03e4016c705811b2658e81471a645c0e49"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}