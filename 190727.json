{"path":"solr/core/src/test/org/apache/solr/util/TimeZoneUtilsTest#testCustom().mjava","commits":[{"id":"b3c7501e15f71c01b69ba22749b192827fa2019b","date":1335285341,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/TimeZoneUtilsTest#testCustom().mjava","pathOld":"/dev/null","sourceNew":"  public void testCustom() throws Exception {\n\n    for (String input : new String[] {\"GMT+08\",\"GMT+8\",\n                                      \"GMT-0800\",\"GMT-08:00\",\n                                      \"GMT+23\", \"GMT+2300\"}) {\n      assertEquals(input, \n                   TimeZone.getTimeZone(input),\n                   TimeZoneUtils.getTimeZone(input));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c88521700b633fceb909f2b3faf67047f408be3","date":1335289399,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/TimeZoneUtilsTest#testCustom().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/TimeZoneUtilsTest#testCustom().mjava","sourceNew":"  public void testCustom() throws Exception {\n\n    for (String input : new String[] {\"GMT-00\", \"GMT+00\", \"GMT-0\", \"GMT+0\", \n                                      \"GMT+08\",\"GMT+8\", \"GMT-08\",\"GMT-8\",\n                                      \"GMT+0800\",\"GMT+08:00\",\n                                      \"GMT-0800\",\"GMT-08:00\",\n                                      \"GMT+23\", \"GMT+2300\",\n                                      \"GMT-23\", \"GMT-2300\"}) {\n      assertEquals(input, \n                   TimeZone.getTimeZone(input),\n                   TimeZoneUtils.getTimeZone(input));\n    }\n  }\n\n","sourceOld":"  public void testCustom() throws Exception {\n\n    for (String input : new String[] {\"GMT+08\",\"GMT+8\",\n                                      \"GMT-0800\",\"GMT-08:00\",\n                                      \"GMT+23\", \"GMT+2300\"}) {\n      assertEquals(input, \n                   TimeZone.getTimeZone(input),\n                   TimeZoneUtils.getTimeZone(input));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"210ddb28897ffc5a75f04dd53de6a2fb8dacca29","date":1335293446,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/TimeZoneUtilsTest#testCustom().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/TimeZoneUtilsTest#testCustom().mjava","sourceNew":"  public void testCustom() throws Exception {\n\n    for (String input : new String[] {\"GMT-00\", \"GMT+00\", \"GMT-0\", \"GMT+0\", \n                                      \"GMT+08\",\"GMT+8\", \"GMT-08\",\"GMT-8\",\n                                      \"GMT+0800\",\"GMT+08:00\",\n                                      \"GMT-0800\",\"GMT-08:00\",\n                                      \"GMT+23\", \"GMT+2300\",\n                                      \"GMT-23\", \"GMT-2300\"}) {\n      assertSameRules(input, \n                      TimeZone.getTimeZone(input),\n                      TimeZoneUtils.getTimeZone(input));\n    }\n  }\n\n","sourceOld":"  public void testCustom() throws Exception {\n\n    for (String input : new String[] {\"GMT-00\", \"GMT+00\", \"GMT-0\", \"GMT+0\", \n                                      \"GMT+08\",\"GMT+8\", \"GMT-08\",\"GMT-8\",\n                                      \"GMT+0800\",\"GMT+08:00\",\n                                      \"GMT-0800\",\"GMT-08:00\",\n                                      \"GMT+23\", \"GMT+2300\",\n                                      \"GMT-23\", \"GMT-2300\"}) {\n      assertEquals(input, \n                   TimeZone.getTimeZone(input),\n                   TimeZoneUtils.getTimeZone(input));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"210ddb28897ffc5a75f04dd53de6a2fb8dacca29":["4c88521700b633fceb909f2b3faf67047f408be3"],"b3c7501e15f71c01b69ba22749b192827fa2019b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4c88521700b633fceb909f2b3faf67047f408be3":["b3c7501e15f71c01b69ba22749b192827fa2019b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["210ddb28897ffc5a75f04dd53de6a2fb8dacca29"]},"commit2Childs":{"210ddb28897ffc5a75f04dd53de6a2fb8dacca29":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b3c7501e15f71c01b69ba22749b192827fa2019b":["4c88521700b633fceb909f2b3faf67047f408be3"],"4c88521700b633fceb909f2b3faf67047f408be3":["210ddb28897ffc5a75f04dd53de6a2fb8dacca29"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3c7501e15f71c01b69ba22749b192827fa2019b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}