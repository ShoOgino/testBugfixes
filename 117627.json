{"path":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#convertMapWriter(String,MapWriter,Predicate[CharSequence],boolean,boolean,String,BiConsumer[String,Object]).mjava","commits":[{"id":"233211c3dbff6f367588be5bbb4ac77f72eae193","date":1602085975,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#convertMapWriter(String,MapWriter,Predicate[CharSequence],boolean,boolean,String,BiConsumer[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  static void convertMapWriter(String name, MapWriter metric,\n                               Predicate<CharSequence> propertyFilter, boolean simple, boolean compact,\n                               String separator, BiConsumer<String, Object> consumer) {\n    ConditionalKeyMapWriter filteredMetric = new ConditionalKeyMapWriter(metric, propertyFilter);\n    if (compact || simple) {\n      if (simple) {\n        filteredMetric._forEachEntry((k, v) ->\n            consumer.accept(name + separator + k, v));\n      } else {\n        if (filteredMetric._size() > 0) {\n          consumer.accept(name, filteredMetric);\n        }\n      }\n    } else {\n      if (filteredMetric._size() > 0) {\n        consumer.accept(name, (MapWriter) ew -> ew.putNoEx(\"value\", filteredMetric));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"233211c3dbff6f367588be5bbb4ac77f72eae193":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["233211c3dbff6f367588be5bbb4ac77f72eae193"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["233211c3dbff6f367588be5bbb4ac77f72eae193"],"233211c3dbff6f367588be5bbb4ac77f72eae193":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}