{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseCloudSolrClient#registerDocCollectionWatcher(String,DocCollectionWatcher).mjava","commits":[{"id":"7b366e7dd3172289251a86be96031af4002cd19c","date":1560790783,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseCloudSolrClient#registerDocCollectionWatcher(String,DocCollectionWatcher).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Register a DocCollectionWatcher to be called when the cluster state for a collection changes.\n   *\n   * <p>\n   * The Watcher will automatically be removed when it's \n   * <code>onStateChanged</code> returns <code>true</code>\n   * </p>\n   *\n   * @see ZkStateReader#registerDocCollectionWatcher\n   * @param collection the collection to watch\n   * @param watcher    a watcher that will be called when the state changes\n   */\n  public void registerDocCollectionWatcher(String collection, DocCollectionWatcher watcher) {\n    getClusterStateProvider().connect();\n    assertZKStateProvider().zkStateReader.registerDocCollectionWatcher(collection, watcher);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b366e7dd3172289251a86be96031af4002cd19c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b366e7dd3172289251a86be96031af4002cd19c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b366e7dd3172289251a86be96031af4002cd19c"],"7b366e7dd3172289251a86be96031af4002cd19c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}