{"path":"solr/core/src/java/org/apache/solr/core/RequestHandlers.DynamicLazyRequestHandlerWrapper#init(PluginInfo).mjava","commits":[{"id":"b96ad5eead3ef9b09cee72d7b54b8bfc369859bd","date":1419078070,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers.DynamicLazyRequestHandlerWrapper#init(PluginInfo).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void init(PluginInfo info) {\n      super.init(info);\n      this.lib = _pluginInfo.attributes.get(\"lib\");\n\n      if(disableExternalLib){\n        errMsg = \"ERROR external library loading is disabled\";\n        unrecoverable = true;\n        _handler = this;\n        log.error(errMsg);\n        return;\n      }\n\n      version = _pluginInfo.attributes.get(\"version\");\n      if (version == null) {\n        errMsg = \"ERROR 'lib' attribute must be accompanied with version also\";\n        unrecoverable = true;\n        _handler = this;\n        log.error(errMsg);\n        return;\n      }\n      classLoader = new MemClassLoader(this);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"27785308abb8944af28e85eeacd67a8db055dd76","date":1421424050,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers.DynamicLazyRequestHandlerWrapper#init(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RequestHandlers.DynamicLazyRequestHandlerWrapper#init(PluginInfo).mjava","sourceNew":"    @Override\n    public void init(PluginInfo info) {\n      super.init(info);\n      this.lib = _pluginInfo.attributes.get(\"lib\");\n\n      if(disableExternalLib){\n        errMsg = \"ERROR external library loading is disabled\";\n        unrecoverable = true;\n        _handler = this;\n        log.error(errMsg);\n        return;\n      }\n\n      if (_pluginInfo.attributes.get(\"version\") == null ){\n        errMsg = \"ERROR 'lib' attribute must be accompanied with version also\";\n        unrecoverable = true;\n        _handler = this;\n        log.error(errMsg);\n        return;\n      }\n      version = String.valueOf(_pluginInfo.attributes.get(\"version\"));\n      classLoader = new MemClassLoader(this);\n    }\n\n","sourceOld":"    @Override\n    public void init(PluginInfo info) {\n      super.init(info);\n      this.lib = _pluginInfo.attributes.get(\"lib\");\n\n      if(disableExternalLib){\n        errMsg = \"ERROR external library loading is disabled\";\n        unrecoverable = true;\n        _handler = this;\n        log.error(errMsg);\n        return;\n      }\n\n      version = _pluginInfo.attributes.get(\"version\");\n      if (version == null) {\n        errMsg = \"ERROR 'lib' attribute must be accompanied with version also\";\n        unrecoverable = true;\n        _handler = this;\n        log.error(errMsg);\n        return;\n      }\n      classLoader = new MemClassLoader(this);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9793ccb9bd91c55b6b02e491778569200a781488","date":1423662803,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers.DynamicLazyRequestHandlerWrapper#init(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RequestHandlers.DynamicLazyRequestHandlerWrapper#init(PluginInfo).mjava","sourceNew":"    @Override\n    public void init(PluginInfo info) {\n      super.init(info);\n      this.lib = _pluginInfo.attributes.get(\"lib\");\n\n      if (disableExternalLib) {\n        errMsg = \"ERROR external library loading is disabled\";\n        unrecoverable = true;\n        _handler = this;\n        log.error(errMsg);\n        return;\n      }\n\n      if (_pluginInfo.attributes.get(\"version\") == null) {\n        errMsg = \"ERROR 'lib' attribute must be accompanied with version also\";\n        unrecoverable = true;\n        _handler = this;\n        log.error(errMsg);\n        return;\n      }\n      version = String.valueOf(_pluginInfo.attributes.get(\"version\"));\n      classLoader = new MemClassLoader(this);\n    }\n\n","sourceOld":"    @Override\n    public void init(PluginInfo info) {\n      super.init(info);\n      this.lib = _pluginInfo.attributes.get(\"lib\");\n\n      if(disableExternalLib){\n        errMsg = \"ERROR external library loading is disabled\";\n        unrecoverable = true;\n        _handler = this;\n        log.error(errMsg);\n        return;\n      }\n\n      if (_pluginInfo.attributes.get(\"version\") == null ){\n        errMsg = \"ERROR 'lib' attribute must be accompanied with version also\";\n        unrecoverable = true;\n        _handler = this;\n        log.error(errMsg);\n        return;\n      }\n      version = String.valueOf(_pluginInfo.attributes.get(\"version\"));\n      classLoader = new MemClassLoader(this);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9aea0485ecacb6734c17da2d02569816c23a69c1","date":1425707735,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/RequestHandlers.DynamicLazyRequestHandlerWrapper#init(PluginInfo).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void init(PluginInfo info) {\n      super.init(info);\n      this.lib = _pluginInfo.attributes.get(\"lib\");\n\n      if (disableExternalLib) {\n        errMsg = \"ERROR external library loading is disabled\";\n        unrecoverable = true;\n        _handler = this;\n        log.error(errMsg);\n        return;\n      }\n\n      if (_pluginInfo.attributes.get(\"version\") == null) {\n        errMsg = \"ERROR 'lib' attribute must be accompanied with version also\";\n        unrecoverable = true;\n        _handler = this;\n        log.error(errMsg);\n        return;\n      }\n      version = String.valueOf(_pluginInfo.attributes.get(\"version\"));\n      classLoader = new MemClassLoader(this);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/RequestHandlers.DynamicLazyRequestHandlerWrapper#init(PluginInfo).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void init(PluginInfo info) {\n      super.init(info);\n      this.lib = _pluginInfo.attributes.get(\"lib\");\n\n      if (disableExternalLib) {\n        errMsg = \"ERROR external library loading is disabled\";\n        unrecoverable = true;\n        _handler = this;\n        log.error(errMsg);\n        return;\n      }\n\n      if (_pluginInfo.attributes.get(\"version\") == null) {\n        errMsg = \"ERROR 'lib' attribute must be accompanied with version also\";\n        unrecoverable = true;\n        _handler = this;\n        log.error(errMsg);\n        return;\n      }\n      version = String.valueOf(_pluginInfo.attributes.get(\"version\"));\n      classLoader = new MemClassLoader(this);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["9793ccb9bd91c55b6b02e491778569200a781488","9aea0485ecacb6734c17da2d02569816c23a69c1"],"b96ad5eead3ef9b09cee72d7b54b8bfc369859bd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"27785308abb8944af28e85eeacd67a8db055dd76":["b96ad5eead3ef9b09cee72d7b54b8bfc369859bd"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["9793ccb9bd91c55b6b02e491778569200a781488"],"9793ccb9bd91c55b6b02e491778569200a781488":["27785308abb8944af28e85eeacd67a8db055dd76"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9aea0485ecacb6734c17da2d02569816c23a69c1"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b96ad5eead3ef9b09cee72d7b54b8bfc369859bd":["27785308abb8944af28e85eeacd67a8db055dd76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b96ad5eead3ef9b09cee72d7b54b8bfc369859bd"],"27785308abb8944af28e85eeacd67a8db055dd76":["9793ccb9bd91c55b6b02e491778569200a781488"],"9793ccb9bd91c55b6b02e491778569200a781488":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9aea0485ecacb6734c17da2d02569816c23a69c1"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}