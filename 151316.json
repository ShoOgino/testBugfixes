{"path":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#testHeartList().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#testHeartList().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#testHeartList().mjava","sourceNew":"  /**\n   * Tests whether all similarities return three documents for the query word\n   * \"heart\".\n   */\n  public void testHeartList() throws IOException {\n    Query q = new TermQuery(new Term(FIELD_BODY, \"heart\"));\n    \n    for (SimilarityBase sim : sims) {\n      searcher.setSimilarity(sim);\n      TopDocs topDocs = searcher.search(q, 1000);\n      assertEquals(\"Failed: \" + sim.toString(), 3, topDocs.totalHits);\n    }\n  }\n\n","sourceOld":"  /**\n   * Tests whether all similarities return three documents for the query word\n   * \"heart\".\n   */\n  public void testHeartList() throws IOException {\n    Query q = new TermQuery(new Term(FIELD_BODY, \"heart\"));\n    \n    for (SimilarityBase sim : sims) {\n      searcher.setSimilarity(sim);\n      TopDocs topDocs = searcher.search(q, 1000);\n      assertEquals(\"Failed: \" + sim.toString(), 3, topDocs.totalHits);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#testHeartList().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#testHeartList().mjava","sourceNew":"  /**\n   * Tests whether all similarities return three documents for the query word\n   * \"heart\".\n   */\n  public void testHeartList() throws IOException {\n    Query q = new TermQuery(new Term(FIELD_BODY, \"heart\"));\n    \n    for (SimilarityBase sim : sims) {\n      searcher.setSimilarity(sim);\n      TopDocs topDocs = searcher.search(q, 1000);\n      assertEquals(\"Failed: \" + sim.toString(), 3, topDocs.totalHits.value);\n    }\n  }\n\n","sourceOld":"  /**\n   * Tests whether all similarities return three documents for the query word\n   * \"heart\".\n   */\n  public void testHeartList() throws IOException {\n    Query q = new TermQuery(new Term(FIELD_BODY, \"heart\"));\n    \n    for (SimilarityBase sim : sims) {\n      searcher.setSimilarity(sim);\n      TopDocs topDocs = searcher.search(q, 1000);\n      assertEquals(\"Failed: \" + sim.toString(), 3, topDocs.totalHits);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83788ad129a5154d5c6562c4e8ce3db48793aada":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}