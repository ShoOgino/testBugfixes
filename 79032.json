{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/Operations.PathNode#nextLabel(Automaton).mjava","commits":[{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Operations.PathNode#nextLabel(Automaton).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/SpecialOperations.LightPathNode#nextLabel(LightAutomaton).mjava","sourceNew":"    /** Returns next label of current transition, or\n     *  advances to next transition and returns its first\n     *  label, if current one is exhausted.  If there are\n     *  no more transitions, returns -1. */\n    public int nextLabel(Automaton a) {\n      if (label > t.max) {\n        // We've exhaused the current transition's labels;\n        // move to next transitions:\n        transition++;\n        if (transition >= a.getNumTransitions(state)) {\n          // We're done iterating transitions leaving this state\n          return -1;\n        }\n        a.getTransition(state, transition, t);\n        label = t.min;\n        to = t.dest;\n      }\n      return label++;\n    }\n\n","sourceOld":"    /** Returns next label of current transition, or\n     *  advances to next transition and returns its first\n     *  label, if current one is exhausted.  If there are\n     *  no more transitions, returns -1. */\n    public int nextLabel(LightAutomaton a) {\n      if (label > t.max) {\n        // We've exhaused the current transition's labels;\n        // move to next transitions:\n        transition++;\n        if (transition >= a.getNumTransitions(state)) {\n          // We're done iterating transitions leaving this state\n          return -1;\n        }\n        a.getTransition(state, transition, t);\n        label = t.min;\n        to = t.dest;\n      }\n      return label++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c84485629d80d203608e8975a1139de9933cc38","date":1403166128,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Operations.PathNode#nextLabel(Automaton).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/SpecialOperations.PathNode#nextLabel().mjava","sourceNew":"    /** Returns next label of current transition, or\n     *  advances to next transition and returns its first\n     *  label, if current one is exhausted.  If there are\n     *  no more transitions, returns -1. */\n    public int nextLabel(Automaton a) {\n      if (label > t.max) {\n        // We've exhaused the current transition's labels;\n        // move to next transitions:\n        transition++;\n        if (transition >= a.getNumTransitions(state)) {\n          // We're done iterating transitions leaving this state\n          return -1;\n        }\n        a.getTransition(state, transition, t);\n        label = t.min;\n        to = t.dest;\n      }\n      return label++;\n    }\n\n","sourceOld":"    /** Returns next label of current transition, or\n     *  advances to next transition and returns its first\n     *  label, if current one is exhausted.  If there are\n     *  no more transitions, returns -1. */\n    public int nextLabel() {\n      if (label > state.transitionsArray[transition].max) {\n        // We've exhaused the current transition's labels;\n        // move to next transitions:\n        transition++;\n        if (transition >= state.numTransitions()) {\n          // We're done iterating transitions leaving this state\n          return -1;\n        }\n        Transition t = state.transitionsArray[transition];\n        label = t.min;\n        to = t.to;\n      }\n      return label++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"35fa550f45857d99d3d6d743420ee54b4d0c37f8","date":1436039255,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/FiniteStringsIterator.PathNode#nextLabel(Automaton).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/Operations.PathNode#nextLabel(Automaton).mjava","sourceNew":"    /** Returns next label of current transition, or\n     *  advances to next transition and returns its first\n     *  label, if current one is exhausted.  If there are\n     *  no more transitions, returns -1. */\n    public int nextLabel(Automaton a) {\n      if (label > t.max) {\n        // We've exhaused the current transition's labels;\n        // move to next transitions:\n        transition++;\n        if (transition >= a.getNumTransitions(state)) {\n          // We're done iterating transitions leaving this state\n          label = -1;\n          return -1;\n        }\n        a.getTransition(state, transition, t);\n        label = t.min;\n        to = t.dest;\n      }\n      return label++;\n    }\n\n","sourceOld":"    /** Returns next label of current transition, or\n     *  advances to next transition and returns its first\n     *  label, if current one is exhausted.  If there are\n     *  no more transitions, returns -1. */\n    public int nextLabel(Automaton a) {\n      if (label > t.max) {\n        // We've exhaused the current transition's labels;\n        // move to next transitions:\n        transition++;\n        if (transition >= a.getNumTransitions(state)) {\n          // We're done iterating transitions leaving this state\n          return -1;\n        }\n        a.getTransition(state, transition, t);\n        label = t.min;\n        to = t.dest;\n      }\n      return label++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"35fa550f45857d99d3d6d743420ee54b4d0c37f8":["5c84485629d80d203608e8975a1139de9933cc38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5c84485629d80d203608e8975a1139de9933cc38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["35fa550f45857d99d3d6d743420ee54b4d0c37f8"]},"commit2Childs":{"35fa550f45857d99d3d6d743420ee54b4d0c37f8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","5c84485629d80d203608e8975a1139de9933cc38"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["5c84485629d80d203608e8975a1139de9933cc38"],"5c84485629d80d203608e8975a1139de9933cc38":["35fa550f45857d99d3d6d743420ee54b4d0c37f8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}