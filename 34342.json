{"path":"solr/core/src/java/org/apache/solr/handler/SortingResponseWriter[ExportWriter].PriorityQueue#updateTop().mjava","commits":[{"id":"50f05d6b69cfaabd51b5d26cba4e3122f51fff83","date":1478603228,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SortingResponseWriter[ExportWriter].PriorityQueue#updateTop().mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.PriorityQueue#updateTop().mjava","sourceNew":"    /**\n     * Should be called when the Object at top changes values. Still log(n) worst\n     * case, but it's at least twice as fast to\n     *\n     * <pre class=\"prettyprint\">\n     * pq.top().change();\n     * pq.updateTop();\n     * </pre>\n     *\n     * instead of\n     *\n     * <pre class=\"prettyprint\">\n     * o = pq.pop();\n     * o.change();\n     * pq.push(o);\n     * </pre>\n     *\n     * @return the new 'top' element.\n     */\n    public final T updateTop() {\n      downHeap();\n      return heap[1];\n    }\n\n","sourceOld":"    /**\n     * Should be called when the Object at top changes values. Still log(n) worst\n     * case, but it's at least twice as fast to\n     *\n     * <pre class=\"prettyprint\">\n     * pq.top().change();\n     * pq.updateTop();\n     * </pre>\n     *\n     * instead of\n     *\n     * <pre class=\"prettyprint\">\n     * o = pq.pop();\n     * o.change();\n     * pq.push(o);\n     * </pre>\n     *\n     * @return the new 'top' element.\n     */\n    public final T updateTop() {\n      downHeap();\n      return heap[1];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbb7f1f4cf1e9a820364c090bb7e9a590f351339","date":1478603266,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ExportWriter.PriorityQueue#updateTop().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SortingResponseWriter[ExportWriter].PriorityQueue#updateTop().mjava","sourceNew":"    /**\n     * Should be called when the Object at top changes values. Still log(n) worst\n     * case, but it's at least twice as fast to\n     *\n     * <pre class=\"prettyprint\">\n     * pq.top().change();\n     * pq.updateTop();\n     * </pre>\n     *\n     * instead of\n     *\n     * <pre class=\"prettyprint\">\n     * o = pq.pop();\n     * o.change();\n     * pq.push(o);\n     * </pre>\n     *\n     * @return the new 'top' element.\n     */\n    public final T updateTop() {\n      downHeap();\n      return heap[1];\n    }\n\n","sourceOld":"    /**\n     * Should be called when the Object at top changes values. Still log(n) worst\n     * case, but it's at least twice as fast to\n     *\n     * <pre class=\"prettyprint\">\n     * pq.top().change();\n     * pq.updateTop();\n     * </pre>\n     *\n     * instead of\n     *\n     * <pre class=\"prettyprint\">\n     * o = pq.pop();\n     * o.change();\n     * pq.push(o);\n     * </pre>\n     *\n     * @return the new 'top' element.\n     */\n    public final T updateTop() {\n      downHeap();\n      return heap[1];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"50f05d6b69cfaabd51b5d26cba4e3122f51fff83":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cbb7f1f4cf1e9a820364c090bb7e9a590f351339":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cbb7f1f4cf1e9a820364c090bb7e9a590f351339"]},"commit2Childs":{"50f05d6b69cfaabd51b5d26cba4e3122f51fff83":["cbb7f1f4cf1e9a820364c090bb7e9a590f351339"],"cbb7f1f4cf1e9a820364c090bb7e9a590f351339":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}