{"path":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#testSliceOutOfBounds().mjava","commits":[{"id":"1571ade32131789d3a35df04bcb923f72885caa1","date":1405501288,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#testSliceOutOfBounds().mjava","pathOld":"/dev/null","sourceNew":"  public void testSliceOutOfBounds() throws Exception {\n    Directory dir = getDirectory(createTempDir(\"testSliceOutOfBounds\"));\n    IndexOutput o = dir.createOutput(\"out\", newIOContext(random()));\n    final int len = random().nextInt(2040) + 8;\n    byte[] b = new byte[len];\n    o.writeBytes(b, 0, len);\n    o.close();\n    IndexInput i = dir.openInput(\"out\", newIOContext(random()));\n    try {\n      i.slice(\"slice1\", 0, len + 1);\n      fail(\"Did not get IllegalArgumentException\");\n    } catch (IllegalArgumentException iae) {\n      // pass\n    }\n    try {\n      i.slice(\"slice2\", -1, len);\n      fail(\"Did not get IllegalArgumentException\");\n    } catch (IllegalArgumentException iae) {\n      // pass\n    }\n    IndexInput slice = i.slice(\"slice3\", 4, len / 2);\n    try {\n      slice.slice(\"slice3sub\", 1, len / 2);\n      fail(\"Did not get IllegalArgumentException\");\n    } catch (IllegalArgumentException iae) {\n      // pass\n    }\n    i.close();\n    dir.close();    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#testSliceOutOfBounds().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#testSliceOutOfBounds().mjava","sourceNew":"  public void testSliceOutOfBounds() throws Exception {\n    Directory dir = getDirectory(createTempDir(\"testSliceOutOfBounds\"));\n    IndexOutput o = dir.createOutput(\"out\", newIOContext(random()));\n    final int len = random().nextInt(2040) + 8;\n    byte[] b = new byte[len];\n    o.writeBytes(b, 0, len);\n    o.close();\n    IndexInput i = dir.openInput(\"out\", newIOContext(random()));\n    expectThrows(IllegalArgumentException.class, () -> {      \n      i.slice(\"slice1\", 0, len + 1);\n    });\n\n    expectThrows(IllegalArgumentException.class, () -> {      \n      i.slice(\"slice2\", -1, len);\n    });\n\n    IndexInput slice = i.slice(\"slice3\", 4, len / 2);\n    expectThrows(IllegalArgumentException.class, () -> {      \n      slice.slice(\"slice3sub\", 1, len / 2);\n    });\n\n    i.close();\n    dir.close();    \n  }\n\n","sourceOld":"  public void testSliceOutOfBounds() throws Exception {\n    Directory dir = getDirectory(createTempDir(\"testSliceOutOfBounds\"));\n    IndexOutput o = dir.createOutput(\"out\", newIOContext(random()));\n    final int len = random().nextInt(2040) + 8;\n    byte[] b = new byte[len];\n    o.writeBytes(b, 0, len);\n    o.close();\n    IndexInput i = dir.openInput(\"out\", newIOContext(random()));\n    try {\n      i.slice(\"slice1\", 0, len + 1);\n      fail(\"Did not get IllegalArgumentException\");\n    } catch (IllegalArgumentException iae) {\n      // pass\n    }\n    try {\n      i.slice(\"slice2\", -1, len);\n      fail(\"Did not get IllegalArgumentException\");\n    } catch (IllegalArgumentException iae) {\n      // pass\n    }\n    IndexInput slice = i.slice(\"slice3\", 4, len / 2);\n    try {\n      slice.slice(\"slice3sub\", 1, len / 2);\n      fail(\"Did not get IllegalArgumentException\");\n    } catch (IllegalArgumentException iae) {\n      // pass\n    }\n    i.close();\n    dir.close();    \n  }\n\n","bugFix":["1571ade32131789d3a35df04bcb923f72885caa1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3adea0022cffaaa592081efed775a7b8bf86b51","date":1532414870,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#testSliceOutOfBounds().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#testSliceOutOfBounds().mjava","sourceNew":"  public void testSliceOutOfBounds() throws Exception {\n    try (Directory dir = getDirectory(createTempDir(\"testSliceOutOfBounds\"))) {\n      IndexOutput o = dir.createOutput(\"out\", newIOContext(random()));\n      final int len = random().nextInt(2040) + 8;\n      byte[] b = new byte[len];\n      o.writeBytes(b, 0, len);\n      o.close();\n      IndexInput i = dir.openInput(\"out\", newIOContext(random()));\n      expectThrows(IllegalArgumentException.class, () -> {\n        i.slice(\"slice1\", 0, len + 1);\n      });\n\n      expectThrows(IllegalArgumentException.class, () -> {\n        i.slice(\"slice2\", -1, len);\n      });\n\n      IndexInput slice = i.slice(\"slice3\", 4, len / 2);\n      expectThrows(IllegalArgumentException.class, () -> {\n        slice.slice(\"slice3sub\", 1, len / 2);\n      });\n\n      i.close();\n    }\n  }\n\n","sourceOld":"  public void testSliceOutOfBounds() throws Exception {\n    Directory dir = getDirectory(createTempDir(\"testSliceOutOfBounds\"));\n    IndexOutput o = dir.createOutput(\"out\", newIOContext(random()));\n    final int len = random().nextInt(2040) + 8;\n    byte[] b = new byte[len];\n    o.writeBytes(b, 0, len);\n    o.close();\n    IndexInput i = dir.openInput(\"out\", newIOContext(random()));\n    expectThrows(IllegalArgumentException.class, () -> {      \n      i.slice(\"slice1\", 0, len + 1);\n    });\n\n    expectThrows(IllegalArgumentException.class, () -> {      \n      i.slice(\"slice2\", -1, len);\n    });\n\n    IndexInput slice = i.slice(\"slice3\", 4, len / 2);\n    expectThrows(IllegalArgumentException.class, () -> {      \n      slice.slice(\"slice3sub\", 1, len / 2);\n    });\n\n    i.close();\n    dir.close();    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1571ade32131789d3a35df04bcb923f72885caa1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["1571ade32131789d3a35df04bcb923f72885caa1"],"f3adea0022cffaaa592081efed775a7b8bf86b51":["05fe562aa248790944d43cdd478f512572835ba0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f3adea0022cffaaa592081efed775a7b8bf86b51"]},"commit2Childs":{"1571ade32131789d3a35df04bcb923f72885caa1":["05fe562aa248790944d43cdd478f512572835ba0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1571ade32131789d3a35df04bcb923f72885caa1"],"05fe562aa248790944d43cdd478f512572835ba0":["f3adea0022cffaaa592081efed775a7b8bf86b51"],"f3adea0022cffaaa592081efed775a7b8bf86b51":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}