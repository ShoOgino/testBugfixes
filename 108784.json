{"path":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","commits":[{"id":"c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d","date":1382570352,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n    assertU(commit());\n\n    //Test collapse by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='50']\");\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=3]\", \"//doc[./int[1][@name='test_ti']='5']\");\n\n    //Test collapse by min int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='5']\");\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='50']\");\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='5']\");\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='50']\");\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='50']\");\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='5']\");\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    assertQ(req(params), \"*[count(//doc)=3]\");\n\n    //Test nullPolicy collapse\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_ti:(500 5000)\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='500']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["dfc6a597ede3930c7c84f3be4335d50c6a191fcd","ceae51e37bbff02dcdeaa12303fec10d3eaaa004"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ceae51e37bbff02dcdeaa12303fec10d3eaaa004","date":1387382773,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","sourceNew":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n  }\n\n","sourceOld":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n    assertU(commit());\n\n    //Test collapse by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='50']\");\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=3]\", \"//doc[./int[1][@name='test_ti']='5']\");\n\n    //Test collapse by min int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='5']\");\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='50']\");\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='5']\");\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='50']\");\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='50']\");\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='5']\");\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    assertQ(req(params), \"*[count(//doc)=3]\");\n\n    //Test nullPolicy collapse\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_ti:(500 5000)\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='500']\");\n  }\n\n","bugFix":["c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d"],"bugIntro":["dfc6a597ede3930c7c84f3be4335d50c6a191fcd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","sourceNew":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n  }\n\n","sourceOld":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n    assertU(commit());\n\n    //Test collapse by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='50']\");\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=3]\", \"//doc[./int[1][@name='test_ti']='5']\");\n\n    //Test collapse by min int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='5']\");\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='50']\");\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='5']\");\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='50']\");\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='50']\");\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='5']\");\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    assertQ(req(params), \"*[count(//doc)=3]\");\n\n    //Test nullPolicy collapse\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_ti:(500 5000)\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='500']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51e87f816b84771636e67fc67039925030ebe671","date":1388500548,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","sourceNew":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n    // Test value source collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=field(test_ti)}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=cscore()}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with compound cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=sum(cscore(),field(test_ti))}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n  }\n\n","sourceOld":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n  }\n\n","bugFix":null,"bugIntro":["dfc6a597ede3930c7c84f3be4335d50c6a191fcd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"27e1ffb161cee77467d6a2f7924df2cc4a832456","date":1390950445,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","sourceNew":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n    // Test value source collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=field(test_ti)}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=cscore()}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with compound cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=sum(cscore(),field(test_ti))}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n    // SOLR-5230 - ensure CollapsingFieldValueCollector.finish() is called\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"group\", \"true\");\n    params.add(\"group.field\", \"id\");\n    assertQ(req(params), \"*[count(//doc)=2]\");\n\n  }\n\n","sourceOld":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n    // Test value source collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=field(test_ti)}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=cscore()}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with compound cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=sum(cscore(),field(test_ti))}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n  }\n\n","bugFix":null,"bugIntro":["dfc6a597ede3930c7c84f3be4335d50c6a191fcd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6f9eac2f0b568b3694682edb863185a273fbbc6f","date":1391883217,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","sourceNew":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n    // Test value source collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=field(test_ti)}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=cscore()}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with compound cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=sum(cscore(),field(test_ti))}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[3]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n    // SOLR-5230 - ensure CollapsingFieldValueCollector.finish() is called\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"group\", \"true\");\n    params.add(\"group.field\", \"id\");\n    assertQ(req(params), \"*[count(//doc)=2]\");\n\n  }\n\n","sourceOld":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n    // Test value source collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=field(test_ti)}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=cscore()}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with compound cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=sum(cscore(),field(test_ti))}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n    // SOLR-5230 - ensure CollapsingFieldValueCollector.finish() is called\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"group\", \"true\");\n    params.add(\"group.field\", \"id\");\n    assertQ(req(params), \"*[count(//doc)=2]\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0a72d053a3654ff5cb7da6c761dfbfbea4258aa5","date":1396311813,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","sourceNew":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n    // Test value source collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=field(test_ti)}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=cscore()}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with compound cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=sum(cscore(),field(test_ti))}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[3]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n    //Test SOLR-5773 with score collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\");\n\n    //Test SOLR-5773 with max field collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='4.0']\");\n\n\n    //Test SOLR-5773 elevating documents with null group\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"3,4\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n    // SOLR-5230 - ensure CollapsingFieldValueCollector.finish() is called\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"group\", \"true\");\n    params.add(\"group.field\", \"id\");\n    assertQ(req(params), \"*[count(//doc)=2]\");\n\n  }\n\n","sourceOld":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n    // Test value source collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=field(test_ti)}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=cscore()}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with compound cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=sum(cscore(),field(test_ti))}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[3]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n    // SOLR-5230 - ensure CollapsingFieldValueCollector.finish() is called\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"group\", \"true\");\n    params.add(\"group.field\", \"id\");\n    assertQ(req(params), \"*[count(//doc)=2]\");\n\n  }\n\n","bugFix":null,"bugIntro":["dfc6a597ede3930c7c84f3be4335d50c6a191fcd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","sourceNew":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n    // Test value source collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=field(test_ti)}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=cscore()}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with compound cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=sum(cscore(),field(test_ti))}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[3]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n    //Test SOLR-5773 with score collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\");\n\n    //Test SOLR-5773 with max field collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='4.0']\");\n\n\n    //Test SOLR-5773 elevating documents with null group\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"3,4\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n    // SOLR-5230 - ensure CollapsingFieldValueCollector.finish() is called\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"group\", \"true\");\n    params.add(\"group.field\", \"id\");\n    assertQ(req(params), \"*[count(//doc)=2]\");\n\n  }\n\n","sourceOld":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n    // Test value source collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=field(test_ti)}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=cscore()}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with compound cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=sum(cscore(),field(test_ti))}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[3]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n    // SOLR-5230 - ensure CollapsingFieldValueCollector.finish() is called\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"group\", \"true\");\n    params.add(\"group.field\", \"id\");\n    assertQ(req(params), \"*[count(//doc)=2]\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d2a0d31db2043d132de531deaa30027254abc21","date":1398746587,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","sourceNew":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n    // Test value source collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=field(test_ti)}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=cscore()}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with compound cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=sum(cscore(),field(test_ti))}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[3]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n    //Test SOLR-5773 with score collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\");\n\n    //Test SOLR-5773 with max field collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='4.0']\");\n\n\n    //Test SOLR-5773 elevating documents with null group\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"3,4\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n    // SOLR-5230 - ensure CollapsingFieldValueCollector.finish() is called\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"group\", \"true\");\n    params.add(\"group.field\", \"id\");\n    assertQ(req(params), \"*[count(//doc)=2]\");\n\n\n    // delete the elevated docs, confirm collapsing still works\n    assertU(delI(\"1\"));\n    assertU(delI(\"2\"));\n    assertU(commit());\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n    // Test value source collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=field(test_ti)}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=cscore()}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with compound cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=sum(cscore(),field(test_ti))}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[3]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n    //Test SOLR-5773 with score collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\");\n\n    //Test SOLR-5773 with max field collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='4.0']\");\n\n\n    //Test SOLR-5773 elevating documents with null group\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"3,4\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n    // SOLR-5230 - ensure CollapsingFieldValueCollector.finish() is called\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"group\", \"true\");\n    params.add(\"group.field\", \"id\");\n    assertQ(req(params), \"*[count(//doc)=2]\");\n\n  }\n\n","bugFix":null,"bugIntro":["dfc6a597ede3930c7c84f3be4335d50c6a191fcd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","sourceNew":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n    // Test value source collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=field(test_ti)}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=cscore()}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with compound cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=sum(cscore(),field(test_ti))}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[3]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n    //Test SOLR-5773 with score collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\");\n\n    //Test SOLR-5773 with max field collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='4.0']\");\n\n\n    //Test SOLR-5773 elevating documents with null group\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"3,4\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n    // SOLR-5230 - ensure CollapsingFieldValueCollector.finish() is called\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"group\", \"true\");\n    params.add(\"group.field\", \"id\");\n    assertQ(req(params), \"*[count(//doc)=2]\");\n\n\n    // delete the elevated docs, confirm collapsing still works\n    assertU(delI(\"1\"));\n    assertU(delI(\"2\"));\n    assertU(commit());\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n    // Test value source collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=field(test_ti)}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=cscore()}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with compound cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=sum(cscore(),field(test_ti))}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[3]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n    //Test SOLR-5773 with score collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\");\n\n    //Test SOLR-5773 with max field collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='4.0']\");\n\n\n    //Test SOLR-5773 elevating documents with null group\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"3,4\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n    // SOLR-5230 - ensure CollapsingFieldValueCollector.finish() is called\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"group\", \"true\");\n    params.add(\"group.field\", \"id\");\n    assertQ(req(params), \"*[count(//doc)=2]\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dfc6a597ede3930c7c84f3be4335d50c6a191fcd","date":1417401558,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","sourceNew":"  @Test\n  public void testCollapseQueries() throws Exception {\n    final String group = (random().nextBoolean() ? \"group_s\" : \"group_s_dv\");\n    \n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params, \"indent\", \"on\"), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n    // Test value source collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=collapse min=field(test_ti)}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=collapse min=cscore()}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with compound cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=collapse min=sum(cscore(),field(test_ti))}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[3]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n    //Test SOLR-5773 with score collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\");\n\n    //Test SOLR-5773 with max field collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_ti nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='4.0']\");\n\n\n    //Test SOLR-5773 elevating documents with null group\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"3,4\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n    // SOLR-5230 - ensure CollapsingFieldValueCollector.finish() is called\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\"}\");\n    params.add(\"group\", \"true\");\n    params.add(\"group.field\", \"id\");\n    assertQ(req(params), \"*[count(//doc)=2]\");\n\n\n    // delete the elevated docs, confirm collapsing still works\n    assertU(delI(\"1\"));\n    assertU(delI(\"2\"));\n    assertU(commit());\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testCollapseQueries() throws Exception {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", \"group_s\", \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n    // Test value source collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=field(test_ti)}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=cscore()}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with compound cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse min=sum(cscore(),field(test_ti))}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[3]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n    //Test SOLR-5773 with score collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\");\n\n    //Test SOLR-5773 with max field collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='4.0']\");\n\n\n    //Test SOLR-5773 elevating documents with null group\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"3,4\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n    // SOLR-5230 - ensure CollapsingFieldValueCollector.finish() is called\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"group\", \"true\");\n    params.add(\"group.field\", \"id\");\n    assertQ(req(params), \"*[count(//doc)=2]\");\n\n\n    // delete the elevated docs, confirm collapsing still works\n    assertU(delI(\"1\"));\n    assertU(delI(\"2\"));\n    assertU(commit());\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n  }\n\n","bugFix":["0a72d053a3654ff5cb7da6c761dfbfbea4258aa5","1d2a0d31db2043d132de531deaa30027254abc21","ceae51e37bbff02dcdeaa12303fec10d3eaaa004","51e87f816b84771636e67fc67039925030ebe671","c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d","27e1ffb161cee77467d6a2f7924df2cc4a832456"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ced52befdc8d88d90766aadbaac496f3fd0e4ee","date":1421070034,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries(String,String,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testCollapseQueries().mjava","sourceNew":"  private void testCollapseQueries(String group, String hint, boolean numeric) throws Exception {\n\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n    String[] doc6 = {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\", \"test_ti\", \"8\", \"test_tl\", \"50\", \"test_tf\", \"300\"};\n    assertU(adoc(doc6));\n    assertU(commit());\n\n\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\"\"+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params, \"indent\", \"on\"), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=expand min=test_tf\"+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n    // Test value source collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=collapse min=field(test_ti)\"+hint+\"}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=collapse min=cscore()\"+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with compound cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=collapse min=sum(cscore(),field(test_ti))\"+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=collapse\"+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[3]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n    //Test SOLR-5773 with score collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=collapse\"+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\");\n\n    //Test SOLR-5773 with max field collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_ti nullPolicy=collapse\"+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='4.0']\");\n\n\n    //Test SOLR-5773 elevating documents with null group\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\"\"+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"3,4\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_ti\"+hint+\"}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_ti\"+hint+\"}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_ti\"+hint+\"}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_ti\"+hint+\"}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" max=test_ti\"+hint+\"}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n    try {\n      //Test collapse by min long field\n      params = new ModifiableSolrParams();\n      params.add(\"q\", \"*:*\");\n      params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_tl\"+hint+\"}\");\n      params.add(\"sort\", \"test_ti desc\");\n      assertQ(req(params), \"*[count(//doc)=2]\",\n          \"//result/doc[1]/float[@name='id'][.='1.0']\",\n          \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n      //Test collapse by max long field\n      params = new ModifiableSolrParams();\n      params.add(\"q\", \"*:*\");\n      params.add(\"fq\", \"{!collapse field=\"+group+\" max=test_tl\"+hint+\"}\");\n      params.add(\"sort\", \"test_ti desc\");\n      assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='6.0']\");\n    } catch (Exception e) {\n      if(!numeric) {\n        throw e;\n      }\n    }\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_tf\"+hint+\"}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" max=test_tf\"+hint+\"}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" max=test_tf\"+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" max=test_tf nullPolicy=expand\"+hint+\"}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" max=test_tf nullPolicy=collapse\"+hint+\"}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n    // SOLR-5230 - ensure CollapsingFieldValueCollector.finish() is called\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"group\", \"true\");\n    params.add(\"group.field\", \"id\");\n    assertQ(req(params), \"*[count(//doc)=2]\");\n\n\n    // delete the elevated docs, confirm collapsing still works\n    assertU(delI(\"1\"));\n    assertU(delI(\"2\"));\n    assertU(commit());\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n                         \"//result/doc[1]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[3]/float[@name='id'][.='7.0']\");\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testCollapseQueries() throws Exception {\n    final String group = (random().nextBoolean() ? \"group_s\" : \"group_s_dv\");\n    \n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"group1\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"group1\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"group2\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"group2\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n\n\n    //Test collapse by score and following sort by score\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params, \"indent\", \"on\"), \"*[count(//doc)=2]\",\n                       \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                       \"//result/doc[2]/float[@name='id'][.='6.0']\"\n        );\n\n\n    // SOLR-5544 test ordering with empty sort param\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=expand min=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"sort\",\"\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\"\n    );\n\n    // Test value source collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=collapse min=field(test_ti)}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=collapse min=cscore()}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    // Test value source collapse criteria with compound cscore function\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=collapse min=sum(cscore(),field(test_ti))}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='4.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\",\n        \"//result/doc[3]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test collapse by score with elevation\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[3]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n    //Test SOLR-5773 with score collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\");\n\n    //Test SOLR-5773 with max field collapse criteria\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_ti nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"1,5\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\",\n        \"//result/doc[3]/float[@name='id'][.='4.0']\");\n\n\n    //Test SOLR-5773 elevating documents with null group\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"3,4\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='3.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='2.0']\",\n        \"//result/doc[4]/float[@name='id'][.='6.0']\");\n\n\n\n    //Test collapse by min int field and sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_ti}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                           \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                           \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_ti}\");\n    params.add(\"sort\", \"id asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='1.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_ti}\");\n    params.add(\"sort\", \"test_tl asc,id desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\n\n    //Test collapse by max int field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" max=test_ti}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='6.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='2.0']\"\n        );\n\n\n\n    //Test collapse by min long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='1.0']\",\n        \"//result/doc[2]/float[@name='id'][.='5.0']\");\n\n\n    //Test collapse by max long field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" max=test_tl}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" min=test_tf}\");\n    params.add(\"sort\", \"test_ti desc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='2.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n\n\n    //Test collapse by min float field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" max=test_tf}\");\n    params.add(\"sort\", \"test_ti asc\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n    //Test collapse by min float field sort by score\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" max=test_tf}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    params.add(\"fl\", \"score, id\");\n    params.add(\"facet\",\"true\");\n    params.add(\"fq\", \"{!tag=test}term_s:YYYY\");\n    params.add(\"facet.field\", \"{!ex=test}term_s\");\n\n    assertQ(req(params), \"*[count(//doc)=2]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n    //Test nullPolicy expand\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" max=test_tf nullPolicy=expand}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=4]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='3.0']\",\n        \"//result/doc[4]/float[@name='id'][.='1.0']\");\n\n    //Test nullPolicy collapse\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" max=test_tf nullPolicy=collapse}\");\n    params.add(\"sort\", \"id desc\");\n    assertQ(req(params), \"*[count(//doc)=3]\",\n        \"//result/doc[1]/float[@name='id'][.='5.0']\",\n        \"//result/doc[2]/float[@name='id'][.='4.0']\",\n        \"//result/doc[3]/float[@name='id'][.='1.0']\");\n\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}id:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    params.add(\"facet.mincount\", \"1\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]\");\n\n    // SOLR-5230 - ensure CollapsingFieldValueCollector.finish() is called\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\"}\");\n    params.add(\"group\", \"true\");\n    params.add(\"group.field\", \"id\");\n    assertQ(req(params), \"*[count(//doc)=2]\");\n\n\n    // delete the elevated docs, confirm collapsing still works\n    assertU(delI(\"1\"));\n    assertU(delI(\"2\"));\n    assertU(commit());\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=\"+group+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                         \"//result/doc[1]/float[@name='id'][.='3.0']\",\n                         \"//result/doc[2]/float[@name='id'][.='6.0']\");\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["6f9eac2f0b568b3694682edb863185a273fbbc6f","0a72d053a3654ff5cb7da6c761dfbfbea4258aa5"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["0a72d053a3654ff5cb7da6c761dfbfbea4258aa5","1d2a0d31db2043d132de531deaa30027254abc21"],"dfc6a597ede3930c7c84f3be4335d50c6a191fcd":["1d2a0d31db2043d132de531deaa30027254abc21"],"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["dfc6a597ede3930c7c84f3be4335d50c6a191fcd"],"27e1ffb161cee77467d6a2f7924df2cc4a832456":["51e87f816b84771636e67fc67039925030ebe671"],"0a72d053a3654ff5cb7da6c761dfbfbea4258aa5":["6f9eac2f0b568b3694682edb863185a273fbbc6f"],"1d2a0d31db2043d132de531deaa30027254abc21":["0a72d053a3654ff5cb7da6c761dfbfbea4258aa5"],"51e87f816b84771636e67fc67039925030ebe671":["ceae51e37bbff02dcdeaa12303fec10d3eaaa004"],"c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d","ceae51e37bbff02dcdeaa12303fec10d3eaaa004"],"6f9eac2f0b568b3694682edb863185a273fbbc6f":["27e1ffb161cee77467d6a2f7924df2cc4a832456"],"ceae51e37bbff02dcdeaa12303fec10d3eaaa004":["c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"dfc6a597ede3930c7c84f3be4335d50c6a191fcd":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"27e1ffb161cee77467d6a2f7924df2cc4a832456":["6f9eac2f0b568b3694682edb863185a273fbbc6f"],"0a72d053a3654ff5cb7da6c761dfbfbea4258aa5":["5eb2511ababf862ea11e10761c70ee560cd84510","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","1d2a0d31db2043d132de531deaa30027254abc21"],"1d2a0d31db2043d132de531deaa30027254abc21":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","dfc6a597ede3930c7c84f3be4335d50c6a191fcd"],"51e87f816b84771636e67fc67039925030ebe671":["27e1ffb161cee77467d6a2f7924df2cc4a832456"],"c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","ceae51e37bbff02dcdeaa12303fec10d3eaaa004"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"6f9eac2f0b568b3694682edb863185a273fbbc6f":["5eb2511ababf862ea11e10761c70ee560cd84510","0a72d053a3654ff5cb7da6c761dfbfbea4258aa5"],"ceae51e37bbff02dcdeaa12303fec10d3eaaa004":["51e87f816b84771636e67fc67039925030ebe671","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}