{"path":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#MockIndexInputWrapper(MockDirectoryWrapper,String,IndexInput).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#MockIndexInputWrapper(MockDirectoryWrapper,String,IndexInput).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/store/MockIndexInputWrapper#MockIndexInputWrapper(MockDirectoryWrapper,String,IndexInput).mjava","sourceNew":"  /** Construct an empty output buffer. */\n  public MockIndexInputWrapper(MockDirectoryWrapper dir, String name, IndexInput delegate) {\n    super(\"MockIndexInputWrapper(name=\" + name + \" delegate=\" + delegate + \")\");\n    this.name = name;\n    this.dir = dir;\n    this.delegate = delegate;\n  }\n\n","sourceOld":"  /** Construct an empty output buffer. */\n  public MockIndexInputWrapper(MockDirectoryWrapper dir, String name, IndexInput delegate) {\n    super(\"MockIndexInputWrapper(name=\" + name + \" delegate=\" + delegate + \")\");\n    this.name = name;\n    this.dir = dir;\n    this.delegate = delegate;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5e561b4438c227a4d8960523d49ce735652ae66","date":1470733409,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#MockIndexInputWrapper(MockDirectoryWrapper,String,IndexInput,MockIndexInputWrapper).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#MockIndexInputWrapper(MockDirectoryWrapper,String,IndexInput).mjava","sourceNew":"  /** Sole constructor */\n  public MockIndexInputWrapper(MockDirectoryWrapper dir, String name, IndexInput delegate, MockIndexInputWrapper parent) {\n    super(\"MockIndexInputWrapper(name=\" + name + \" delegate=\" + delegate + \")\");\n\n    // If we are a clone then our parent better not be a clone!\n    assert parent == null || parent.parent == null;\n    \n    this.parent = parent;\n    this.name = name;\n    this.dir = dir;\n    this.delegate = delegate;\n  }\n\n","sourceOld":"  /** Construct an empty output buffer. */\n  public MockIndexInputWrapper(MockDirectoryWrapper dir, String name, IndexInput delegate) {\n    super(\"MockIndexInputWrapper(name=\" + name + \" delegate=\" + delegate + \")\");\n    this.name = name;\n    this.dir = dir;\n    this.delegate = delegate;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8bca25eefa1f2205e2b0ef713701dc3a0fecd702","date":1470810578,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#MockIndexInputWrapper(MockDirectoryWrapper,String,IndexInput,MockIndexInputWrapper).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#MockIndexInputWrapper(MockDirectoryWrapper,String,IndexInput).mjava","sourceNew":"  /** Sole constructor */\n  public MockIndexInputWrapper(MockDirectoryWrapper dir, String name, IndexInput delegate, MockIndexInputWrapper parent) {\n    super(\"MockIndexInputWrapper(name=\" + name + \" delegate=\" + delegate + \")\");\n\n    // If we are a clone then our parent better not be a clone!\n    assert parent == null || parent.parent == null;\n    \n    this.parent = parent;\n    this.name = name;\n    this.dir = dir;\n    this.delegate = delegate;\n  }\n\n","sourceOld":"  /** Construct an empty output buffer. */\n  public MockIndexInputWrapper(MockDirectoryWrapper dir, String name, IndexInput delegate) {\n    super(\"MockIndexInputWrapper(name=\" + name + \" delegate=\" + delegate + \")\");\n    this.name = name;\n    this.dir = dir;\n    this.delegate = delegate;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#MockIndexInputWrapper(MockDirectoryWrapper,String,IndexInput).mjava","sourceNew":null,"sourceOld":"  /** Construct an empty output buffer. */\n  public MockIndexInputWrapper(MockDirectoryWrapper dir, String name, IndexInput delegate) {\n    super(\"MockIndexInputWrapper(name=\" + name + \" delegate=\" + delegate + \")\");\n    this.name = name;\n    this.dir = dir;\n    this.delegate = delegate;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#MockIndexInputWrapper(MockDirectoryWrapper,String,IndexInput).mjava","sourceNew":null,"sourceOld":"  /** Construct an empty output buffer. */\n  public MockIndexInputWrapper(MockDirectoryWrapper dir, String name, IndexInput delegate) {\n    super(\"MockIndexInputWrapper(name=\" + name + \" delegate=\" + delegate + \")\");\n    this.name = name;\n    this.dir = dir;\n    this.delegate = delegate;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8bca25eefa1f2205e2b0ef713701dc3a0fecd702":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","a5e561b4438c227a4d8960523d49ce735652ae66"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5e561b4438c227a4d8960523d49ce735652ae66":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8bca25eefa1f2205e2b0ef713701dc3a0fecd702"]},"commit2Childs":{"8bca25eefa1f2205e2b0ef713701dc3a0fecd702":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8bca25eefa1f2205e2b0ef713701dc3a0fecd702","a5e561b4438c227a4d8960523d49ce735652ae66","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a5e561b4438c227a4d8960523d49ce735652ae66":["8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}