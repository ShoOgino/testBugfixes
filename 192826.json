{"path":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testNoFragments().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testNoFragments().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testNoFragments().mjava","sourceNew":"  public void testNoFragments() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      @Override\n      public void run() throws Exception {\n        doSearching(new TermQuery(new Term(FIELD_NAME, \"aninvalidquerywhichshouldyieldnoresults\")));\n\n        for (String text : texts) {\n          TokenStream tokenStream = analyzer.tokenStream(FIELD_NAME, new StringReader(text));\n          Highlighter highlighter = getHighlighter(query, FIELD_NAME,\n              HighlighterTest.this);\n          String result = highlighter.getBestFragment(tokenStream, text);\n          assertNull(\"The highlight result should be null for text with no query terms\", result);\n        }\n      }\n    };\n\n    helper.start();\n  }\n\n","sourceOld":"  public void testNoFragments() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      @Override\n      public void run() throws Exception {\n        doSearching(new TermQuery(new Term(FIELD_NAME, \"aninvalidquerywhichshouldyieldnoresults\")));\n\n        for (String text : texts) {\n          TokenStream tokenStream = analyzer.tokenStream(FIELD_NAME, new StringReader(text));\n          Highlighter highlighter = getHighlighter(query, FIELD_NAME,\n              HighlighterTest.this);\n          String result = highlighter.getBestFragment(tokenStream, text);\n          assertNull(\"The highlight result should be null for text with no query terms\", result);\n        }\n      }\n    };\n\n    helper.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c83d6c4335f31cae14f625a222bc842f20073dcd","date":1373306148,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testNoFragments().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testNoFragments().mjava","sourceNew":"  public void testNoFragments() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      @Override\n      public void run() throws Exception {\n        doSearching(new TermQuery(new Term(FIELD_NAME, \"aninvalidquerywhichshouldyieldnoresults\")));\n\n        for (String text : texts) {\n          TokenStream tokenStream = analyzer.tokenStream(FIELD_NAME, text);\n          Highlighter highlighter = getHighlighter(query, FIELD_NAME,\n              HighlighterTest.this);\n          String result = highlighter.getBestFragment(tokenStream, text);\n          assertNull(\"The highlight result should be null for text with no query terms\", result);\n        }\n      }\n    };\n\n    helper.start();\n  }\n\n","sourceOld":"  public void testNoFragments() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      @Override\n      public void run() throws Exception {\n        doSearching(new TermQuery(new Term(FIELD_NAME, \"aninvalidquerywhichshouldyieldnoresults\")));\n\n        for (String text : texts) {\n          TokenStream tokenStream = analyzer.tokenStream(FIELD_NAME, new StringReader(text));\n          Highlighter highlighter = getHighlighter(query, FIELD_NAME,\n              HighlighterTest.this);\n          String result = highlighter.getBestFragment(tokenStream, text);\n          assertNull(\"The highlight result should be null for text with no query terms\", result);\n        }\n      }\n    };\n\n    helper.start();\n  }\n\n","bugFix":["69e043c521d4e8db770cc140c63f5ef51f03426a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testNoFragments().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testNoFragments().mjava","sourceNew":"  public void testNoFragments() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      @Override\n      public void run() throws Exception {\n        doSearching(new TermQuery(new Term(FIELD_NAME, \"aninvalidquerywhichshouldyieldnoresults\")));\n\n        for (String text : texts) {\n          TokenStream tokenStream = analyzer.tokenStream(FIELD_NAME, text);\n          Highlighter highlighter = getHighlighter(query, FIELD_NAME,\n              HighlighterTest.this);\n          String result = highlighter.getBestFragment(tokenStream, text);\n          assertNull(\"The highlight result should be null for text with no query terms\", result);\n        }\n      }\n    };\n\n    helper.start();\n  }\n\n","sourceOld":"  public void testNoFragments() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      @Override\n      public void run() throws Exception {\n        doSearching(new TermQuery(new Term(FIELD_NAME, \"aninvalidquerywhichshouldyieldnoresults\")));\n\n        for (String text : texts) {\n          TokenStream tokenStream = analyzer.tokenStream(FIELD_NAME, new StringReader(text));\n          Highlighter highlighter = getHighlighter(query, FIELD_NAME,\n              HighlighterTest.this);\n          String result = highlighter.getBestFragment(tokenStream, text);\n          assertNull(\"The highlight result should be null for text with no query terms\", result);\n        }\n      }\n    };\n\n    helper.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["b89678825b68eccaf09e6ab71675fc0b0af1e099","c83d6c4335f31cae14f625a222bc842f20073dcd"],"c83d6c4335f31cae14f625a222bc842f20073dcd":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c83d6c4335f31cae14f625a222bc842f20073dcd"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["37a0f60745e53927c4c876cfe5b5a58170f0646c","c83d6c4335f31cae14f625a222bc842f20073dcd"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c83d6c4335f31cae14f625a222bc842f20073dcd":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}