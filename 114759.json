{"path":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","commits":[{"id":"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4","date":1368446242,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = _TestUtil.getTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = _TestUtil.getTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = _TestUtil.getTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = _TestUtil.getTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = _TestUtil.getTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = _TestUtil.getTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n    config = new FacetsConfig(publishTaxoWriter);\n    config.setHierarchical(\"A\", true);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = _TestUtil.getTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd83550e4b0bdd36e7d9dca9273264100782440b","date":1385761753,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = _TestUtil.getTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n    config = new FacetsConfig();\n    config.setHierarchical(\"A\", true);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = _TestUtil.getTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n    config = new FacetsConfig(publishTaxoWriter);\n    config.setHierarchical(\"A\", true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = _TestUtil.getTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n    config = new FacetsConfig();\n    config.setHierarchical(\"A\", true);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = _TestUtil.getTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = TestUtil.getTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n    config = new FacetsConfig();\n    config.setHierarchical(\"A\", true);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = _TestUtil.getTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n    config = new FacetsConfig();\n    config.setHierarchical(\"A\", true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = TestUtil.createTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n    config = new FacetsConfig();\n    config.setHierarchical(\"A\", true);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = TestUtil.getTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n    config = new FacetsConfig();\n    config.setHierarchical(\"A\", true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c","date":1396633078,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = createTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n    config = new FacetsConfig();\n    config.setHierarchical(\"A\", true);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = TestUtil.createTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n    config = new FacetsConfig();\n    config.setHierarchical(\"A\", true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = createTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n    config = new FacetsConfig();\n    config.setHierarchical(\"A\", true);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = TestUtil.getTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n    config = new FacetsConfig();\n    config.setHierarchical(\"A\", true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = createTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n    config = new FacetsConfig();\n    config.setHierarchical(\"A\", true);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    publishIndexDir = newDirectory();\n    publishTaxoDir = newDirectory();\n    handlerIndexDir = newMockDirectory();\n    handlerTaxoDir = newMockDirectory();\n    clientWorkDir = createTempDir(\"replicationClientTest\");\n    sourceDirFactory = new PerSessionDirectoryFactory(clientWorkDir);\n    replicator = new LocalReplicator();\n    callback = new IndexAndTaxonomyReadyCallback(handlerIndexDir, handlerTaxoDir);\n    handler = new IndexAndTaxonomyReplicationHandler(handlerIndexDir, handlerTaxoDir, callback);\n    client = new ReplicationClient(replicator, handler, sourceDirFactory);\n    \n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));\n    publishIndexWriter = new IndexWriter(publishIndexDir, conf);\n    publishTaxoWriter = new SnapshotDirectoryTaxonomyWriter(publishTaxoDir);\n    config = new FacetsConfig();\n    config.setHierarchical(\"A\", true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["6613659748fe4411a7dcf85266e55db1f95f7315","a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"6613659748fe4411a7dcf85266e55db1f95f7315":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"d0d579490a72f2e6297eaa648940611234c57cf1":["6613659748fe4411a7dcf85266e55db1f95f7315"],"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["d0d579490a72f2e6297eaa648940611234c57cf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["21d36d0db865f7b84026b447bec653469a6e66df"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["19275ba31e621f6da1b83bf13af75233876fd3d4","fd83550e4b0bdd36e7d9dca9273264100782440b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"6613659748fe4411a7dcf85266e55db1f95f7315":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","d0d579490a72f2e6297eaa648940611234c57cf1"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["21d36d0db865f7b84026b447bec653469a6e66df","3cc728b07df73b197e6d940d27f9b08b63918f13"],"d0d579490a72f2e6297eaa648940611234c57cf1":["a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4":["19275ba31e621f6da1b83bf13af75233876fd3d4","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"21d36d0db865f7b84026b447bec653469a6e66df":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"fd83550e4b0bdd36e7d9dca9273264100782440b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["6613659748fe4411a7dcf85266e55db1f95f7315"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}