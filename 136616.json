{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/SearcherTaxonomyManager#decRef(SearcherAndTaxonomy).mjava","commits":[{"id":"77925d097d69ba9a9806554c5afe4779fafa142d","date":1365611122,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/SearcherTaxonomyManager#decRef(SearcherAndTaxonomy).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void decRef(SearcherAndTaxonomy ref) throws IOException {\n    ref.searcher.getIndexReader().decRef();\n\n    // This decRef can fail, and then in theory we should\n    // tryIncRef the searcher to put back the ref count\n    // ... but 1) the below decRef should only fail because\n    // it decRef'd to 0 and closed and hit some IOException\n    // during close, in which case 2) very likely the\n    // searcher was also just closed by the above decRef and\n    // a tryIncRef would fail:\n    ref.taxonomyReader.decRef();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/SearcherTaxonomyManager#decRef(SearcherAndTaxonomy).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/SearcherTaxonomyManager#decRef(SearcherAndTaxonomy).mjava","sourceNew":"  @Override\n  protected void decRef(SearcherAndTaxonomy ref) throws IOException {\n    ref.searcher.getIndexReader().decRef();\n\n    // This decRef can fail, and then in theory we should\n    // tryIncRef the searcher to put back the ref count\n    // ... but 1) the below decRef should only fail because\n    // it decRef'd to 0 and closed and hit some IOException\n    // during close, in which case 2) very likely the\n    // searcher was also just closed by the above decRef and\n    // a tryIncRef would fail:\n    ref.taxonomyReader.decRef();\n  }\n\n","sourceOld":"  @Override\n  protected void decRef(SearcherAndTaxonomy ref) throws IOException {\n    ref.searcher.getIndexReader().decRef();\n\n    // This decRef can fail, and then in theory we should\n    // tryIncRef the searcher to put back the ref count\n    // ... but 1) the below decRef should only fail because\n    // it decRef'd to 0 and closed and hit some IOException\n    // during close, in which case 2) very likely the\n    // searcher was also just closed by the above decRef and\n    // a tryIncRef would fail:\n    ref.taxonomyReader.decRef();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/SearcherTaxonomyManager#decRef(SearcherAndTaxonomy).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/SearcherTaxonomyManager#decRef(SearcherAndTaxonomy).mjava","sourceNew":"  @Override\n  protected void decRef(SearcherAndTaxonomy ref) throws IOException {\n    ref.searcher.getIndexReader().decRef();\n\n    // This decRef can fail, and then in theory we should\n    // tryIncRef the searcher to put back the ref count\n    // ... but 1) the below decRef should only fail because\n    // it decRef'd to 0 and closed and hit some IOException\n    // during close, in which case 2) very likely the\n    // searcher was also just closed by the above decRef and\n    // a tryIncRef would fail:\n    ref.taxonomyReader.decRef();\n  }\n\n","sourceOld":"  @Override\n  protected void decRef(SearcherAndTaxonomy ref) throws IOException {\n    ref.searcher.getIndexReader().decRef();\n\n    // This decRef can fail, and then in theory we should\n    // tryIncRef the searcher to put back the ref count\n    // ... but 1) the below decRef should only fail because\n    // it decRef'd to 0 and closed and hit some IOException\n    // during close, in which case 2) very likely the\n    // searcher was also just closed by the above decRef and\n    // a tryIncRef would fail:\n    ref.taxonomyReader.decRef();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d33e19a97046248623a7591aeaa6547233fd15e2":["77925d097d69ba9a9806554c5afe4779fafa142d"],"77925d097d69ba9a9806554c5afe4779fafa142d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["77925d097d69ba9a9806554c5afe4779fafa142d","d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"77925d097d69ba9a9806554c5afe4779fafa142d":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["77925d097d69ba9a9806554c5afe4779fafa142d"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}