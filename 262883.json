{"path":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#SimpleDrillDownQuery(Query).mjava","commits":[{"id":"519ac3b8f2711b5bfeb1c90c77bb007032270a41","date":1384456090,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#SimpleDrillDownQuery(Query).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new {@link DrillDownQuery} over the given base query. Can be\n   * {@code null}, in which case the result {@link Query} from\n   * {@link #rewrite(IndexReader)} will be a pure browsing query, filtering on\n   * the added categories only.\n   */\n  public SimpleDrillDownQuery(Query baseQuery) {\n    query = new BooleanQuery(true); // disable coord\n    if (baseQuery != null) {\n      query.add(baseQuery, Occur.MUST);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#SimpleDrillDownQuery(Query).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#SimpleDrillDownQuery(Query).mjava","sourceNew":"  /**\n   * Creates a new {@code SimpleDrillDownQuery} over the given base query. Can be\n   * {@code null}, in which case the result {@link Query} from\n   * {@link #rewrite(IndexReader)} will be a pure browsing query, filtering on\n   * the added categories only.\n   */\n  public SimpleDrillDownQuery(Query baseQuery) {\n    query = new BooleanQuery(true); // disable coord\n    if (baseQuery != null) {\n      query.add(baseQuery, Occur.MUST);\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link DrillDownQuery} over the given base query. Can be\n   * {@code null}, in which case the result {@link Query} from\n   * {@link #rewrite(IndexReader)} will be a pure browsing query, filtering on\n   * the added categories only.\n   */\n  public SimpleDrillDownQuery(Query baseQuery) {\n    query = new BooleanQuery(true); // disable coord\n    if (baseQuery != null) {\n      query.add(baseQuery, Occur.MUST);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fdb15e93058f718a65d564872aadbed5ca78296","date":1384720267,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#SimpleDrillDownQuery(FacetsConfig,Query).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#SimpleDrillDownQuery(Query).mjava","sourceNew":"  /**\n   * Creates a new {@code SimpleDrillDownQuery} over the given base query. Can be\n   * {@code null}, in which case the result {@link Query} from\n   * {@link #rewrite(IndexReader)} will be a pure browsing query, filtering on\n   * the added categories only.\n   */\n  public SimpleDrillDownQuery(FacetsConfig config, Query baseQuery) {\n    query = new BooleanQuery(true); // disable coord\n    if (baseQuery != null) {\n      query.add(baseQuery, Occur.MUST);\n    }\n    this.config = config;\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@code SimpleDrillDownQuery} over the given base query. Can be\n   * {@code null}, in which case the result {@link Query} from\n   * {@link #rewrite(IndexReader)} will be a pure browsing query, filtering on\n   * the added categories only.\n   */\n  public SimpleDrillDownQuery(Query baseQuery) {\n    query = new BooleanQuery(true); // disable coord\n    if (baseQuery != null) {\n      query.add(baseQuery, Occur.MUST);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9fdb15e93058f718a65d564872aadbed5ca78296":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"519ac3b8f2711b5bfeb1c90c77bb007032270a41":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["519ac3b8f2711b5bfeb1c90c77bb007032270a41"]},"commit2Childs":{"9fdb15e93058f718a65d564872aadbed5ca78296":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["519ac3b8f2711b5bfeb1c90c77bb007032270a41","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"519ac3b8f2711b5bfeb1c90c77bb007032270a41":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["9fdb15e93058f718a65d564872aadbed5ca78296"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9fdb15e93058f718a65d564872aadbed5ca78296","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}