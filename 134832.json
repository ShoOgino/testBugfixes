{"path":"src/test/org/apache/lucene/search/CheckHits#hits2str(Hits,Hits,int,int).mjava","commits":[{"id":"9a5ad5c18e239ce1e266fa045f3016ec1cb80cdc","date":1131138902,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/CheckHits#hits2str(Hits,Hits,int,int).mjava","pathOld":"/dev/null","sourceNew":"  public static String hits2str(Hits hits1, Hits hits2, int start, int end) throws IOException {\n    StringBuffer sb = new StringBuffer();\n    int len1=hits1==null ? 0 : hits1.length();\n    int len2=hits2==null ? 0 : hits2.length();\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n    sb.append(\"Hits length1=\" + len1 + \"\\tlength2=\"+len2);\n\n    sb.append(\"\\n\");\n    for (int i=start; i<end; i++) {\n      sb.append(\"hit=\" + i + \":\");\n      if (i<len1) {\n        sb.append(\" doc\"+hits1.id(i) + \"=\" + hits1.score(i));\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\"+hits2.id(i) + \"=\" + hits2.score(i));\n      }\n      sb.append(\"\\n\");\n    }\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b97548d27406e9f33187836e1de98d473a63f5d","date":1196088721,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/CheckHits#hits2str(Hits,Hits,int,int).mjava","pathOld":"src/test/org/apache/lucene/search/CheckHits#hits2str(Hits,Hits,int,int).mjava","sourceNew":"  public static String hits2str(Hits hits1, Hits hits2, int start, int end) throws IOException {\n    StringBuffer sb = new StringBuffer();\n    int len1=hits1==null ? 0 : hits1.length();\n    int len2=hits2==null ? 0 : hits2.length();\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n      sb.append(\"Hits length1=\").append(len1).append(\"\\tlength2=\").append(len2);\n\n    sb.append('\\n');\n    for (int i=start; i<end; i++) {\n        sb.append(\"hit=\").append(i).append(':');\n      if (i<len1) {\n          sb.append(\" doc\").append(hits1.id(i)).append('=').append(hits1.score(i));\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\").append(hits2.id(i)).append('=').append(hits2.score(i));\n      }\n      sb.append('\\n');\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  public static String hits2str(Hits hits1, Hits hits2, int start, int end) throws IOException {\n    StringBuffer sb = new StringBuffer();\n    int len1=hits1==null ? 0 : hits1.length();\n    int len2=hits2==null ? 0 : hits2.length();\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n    sb.append(\"Hits length1=\" + len1 + \"\\tlength2=\"+len2);\n\n    sb.append(\"\\n\");\n    for (int i=start; i<end; i++) {\n      sb.append(\"hit=\" + i + \":\");\n      if (i<len1) {\n        sb.append(\" doc\"+hits1.id(i) + \"=\" + hits1.score(i));\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\"+hits2.id(i) + \"=\" + hits2.score(i));\n      }\n      sb.append(\"\\n\");\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5af07783dbc171e26a694c4f7d735e30c2769faa","date":1211569075,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/CheckHits#hits2str(ScoreDoc[],ScoreDoc[],int,int).mjava","pathOld":"src/test/org/apache/lucene/search/CheckHits#hits2str(Hits,Hits,int,int).mjava","sourceNew":"  public static String hits2str(ScoreDoc[] hits1, ScoreDoc[] hits2, int start, int end) throws IOException {\n    StringBuffer sb = new StringBuffer();\n    int len1=hits1==null ? 0 : hits1.length;\n    int len2=hits2==null ? 0 : hits2.length;\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n      sb.append(\"Hits length1=\").append(len1).append(\"\\tlength2=\").append(len2);\n\n    sb.append('\\n');\n    for (int i=start; i<end; i++) {\n        sb.append(\"hit=\").append(i).append(':');\n      if (i<len1) {\n          sb.append(\" doc\").append(hits1[i].doc).append('=').append(hits1[i].score);\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\").append(hits2[i].doc).append('=').append(hits2[i].score);\n      }\n      sb.append('\\n');\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  public static String hits2str(Hits hits1, Hits hits2, int start, int end) throws IOException {\n    StringBuffer sb = new StringBuffer();\n    int len1=hits1==null ? 0 : hits1.length();\n    int len2=hits2==null ? 0 : hits2.length();\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n      sb.append(\"Hits length1=\").append(len1).append(\"\\tlength2=\").append(len2);\n\n    sb.append('\\n');\n    for (int i=start; i<end; i++) {\n        sb.append(\"hit=\").append(i).append(':');\n      if (i<len1) {\n          sb.append(\" doc\").append(hits1.id(i)).append('=').append(hits1.score(i));\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\").append(hits2.id(i)).append('=').append(hits2.score(i));\n      }\n      sb.append('\\n');\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"9a5ad5c18e239ce1e266fa045f3016ec1cb80cdc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5af07783dbc171e26a694c4f7d735e30c2769faa":["8b97548d27406e9f33187836e1de98d473a63f5d"],"8b97548d27406e9f33187836e1de98d473a63f5d":["9a5ad5c18e239ce1e266fa045f3016ec1cb80cdc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5af07783dbc171e26a694c4f7d735e30c2769faa"]},"commit2Childs":{"9a5ad5c18e239ce1e266fa045f3016ec1cb80cdc":["8b97548d27406e9f33187836e1de98d473a63f5d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9a5ad5c18e239ce1e266fa045f3016ec1cb80cdc"],"5af07783dbc171e26a694c4f7d735e30c2769faa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8b97548d27406e9f33187836e1de98d473a63f5d":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}