{"path":"lucene/src/java/org/apache/lucene/index/DocumentStoredFieldVisitor#stringField(FieldInfo,IndexInput,int).mjava","commits":[{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentStoredFieldVisitor#stringField(FieldInfo,IndexInput,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean stringField(FieldInfo fieldInfo, IndexInput in, int numUTF8Bytes) throws IOException {\n    if (accept(fieldInfo)) {\n      final byte[] b = new byte[numUTF8Bytes];\n      in.readBytes(b, 0, b.length);\n      FieldType ft = new FieldType(TextField.TYPE_STORED);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setStoreTermVectorPositions(fieldInfo.storePositionWithTermVector);\n      ft.setStoreTermVectorOffsets(fieldInfo.storeOffsetWithTermVector);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setOmitNorms(fieldInfo.omitNorms);\n      ft.setIndexOptions(fieldInfo.indexOptions);\n      doc.add(new Field(fieldInfo.name,\n                        ft,\n                        new String(b, \"UTF-8\")));\n    } else {\n      in.seek(in.getFilePointer() + numUTF8Bytes);\n    }\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98e72ae21226d6197488db1ac528982fa5a7809e","date":1314473708,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentStoredFieldVisitor#stringField(FieldInfo,IndexInput,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentStoredFieldVisitor#stringField(FieldInfo,IndexInput,int).mjava","sourceNew":"  @Override\n  public boolean stringField(FieldInfo fieldInfo, IndexInput in, int numUTF8Bytes) throws IOException {\n    if (accept(fieldInfo)) {\n      final byte[] b = new byte[numUTF8Bytes];\n      in.readBytes(b, 0, b.length);\n      final FieldType ft = new FieldType(TextField.TYPE_STORED);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setStoreTermVectorPositions(fieldInfo.storePositionWithTermVector);\n      ft.setStoreTermVectorOffsets(fieldInfo.storeOffsetWithTermVector);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setIndexed(fieldInfo.isIndexed);\n      ft.setOmitNorms(fieldInfo.omitNorms);\n      ft.setIndexOptions(fieldInfo.indexOptions);\n      doc.add(new Field(fieldInfo.name,\n                        ft,\n                        new String(b, \"UTF-8\")));\n    } else {\n      in.seek(in.getFilePointer() + numUTF8Bytes);\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean stringField(FieldInfo fieldInfo, IndexInput in, int numUTF8Bytes) throws IOException {\n    if (accept(fieldInfo)) {\n      final byte[] b = new byte[numUTF8Bytes];\n      in.readBytes(b, 0, b.length);\n      FieldType ft = new FieldType(TextField.TYPE_STORED);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setStoreTermVectorPositions(fieldInfo.storePositionWithTermVector);\n      ft.setStoreTermVectorOffsets(fieldInfo.storeOffsetWithTermVector);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setOmitNorms(fieldInfo.omitNorms);\n      ft.setIndexOptions(fieldInfo.indexOptions);\n      doc.add(new Field(fieldInfo.name,\n                        ft,\n                        new String(b, \"UTF-8\")));\n    } else {\n      in.seek(in.getFilePointer() + numUTF8Bytes);\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e0c02278aba151a2fdcc66e7b8063e6a92c75dc","date":1317146779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,IndexInput,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentStoredFieldVisitor#stringField(FieldInfo,IndexInput,int).mjava","sourceNew":"  @Override\n  public boolean stringField(FieldInfo fieldInfo, IndexInput in, int numUTF8Bytes) throws IOException {\n    if (accept(fieldInfo)) {\n      final byte[] b = new byte[numUTF8Bytes];\n      in.readBytes(b, 0, b.length);\n      final FieldType ft = new FieldType(TextField.TYPE_STORED);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setStoreTermVectorPositions(fieldInfo.storePositionWithTermVector);\n      ft.setStoreTermVectorOffsets(fieldInfo.storeOffsetWithTermVector);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setIndexed(fieldInfo.isIndexed);\n      ft.setOmitNorms(fieldInfo.omitNorms);\n      ft.setIndexOptions(fieldInfo.indexOptions);\n      doc.add(new Field(fieldInfo.name,\n                        ft,\n                        new String(b, \"UTF-8\")));\n    } else {\n      in.seek(in.getFilePointer() + numUTF8Bytes);\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean stringField(FieldInfo fieldInfo, IndexInput in, int numUTF8Bytes) throws IOException {\n    if (accept(fieldInfo)) {\n      final byte[] b = new byte[numUTF8Bytes];\n      in.readBytes(b, 0, b.length);\n      final FieldType ft = new FieldType(TextField.TYPE_STORED);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setStoreTermVectorPositions(fieldInfo.storePositionWithTermVector);\n      ft.setStoreTermVectorOffsets(fieldInfo.storeOffsetWithTermVector);\n      ft.setStoreTermVectors(fieldInfo.storeTermVector);\n      ft.setIndexed(fieldInfo.isIndexed);\n      ft.setOmitNorms(fieldInfo.omitNorms);\n      ft.setIndexOptions(fieldInfo.indexOptions);\n      doc.add(new Field(fieldInfo.name,\n                        ft,\n                        new String(b, \"UTF-8\")));\n    } else {\n      in.seek(in.getFilePointer() + numUTF8Bytes);\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"98e72ae21226d6197488db1ac528982fa5a7809e":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"6e0c02278aba151a2fdcc66e7b8063e6a92c75dc":["98e72ae21226d6197488db1ac528982fa5a7809e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6e0c02278aba151a2fdcc66e7b8063e6a92c75dc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["98e72ae21226d6197488db1ac528982fa5a7809e"],"98e72ae21226d6197488db1ac528982fa5a7809e":["6e0c02278aba151a2fdcc66e7b8063e6a92c75dc"],"6e0c02278aba151a2fdcc66e7b8063e6a92c75dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}