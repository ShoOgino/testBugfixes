{"path":"lucene/src/java/org/apache/lucene/util/ReaderUtil#subReader(IndexReader,int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/ReaderUtil#subReader(IndexReader,int).mjava","pathOld":"src/java/org/apache/lucene/util/ReaderUtil#subReader(IndexReader,int).mjava","sourceNew":"  /**\n   * Returns sub-reader subIndex from reader.\n   * \n   * @param reader parent reader\n   * @param subIndex index of desired sub reader\n   * @return the subreader at subIndex\n   */\n  public static IndexReader subReader(IndexReader reader, int subIndex) {\n    List<IndexReader> subReadersList = new ArrayList<IndexReader>();\n    ReaderUtil.gatherSubReaders(subReadersList, reader);\n    IndexReader[] subReaders = subReadersList\n        .toArray(new IndexReader[subReadersList.size()]);\n    return subReaders[subIndex];\n  }\n\n","sourceOld":"  /**\n   * Returns sub-reader subIndex from reader.\n   * \n   * @param reader parent reader\n   * @param subIndex index of desired sub reader\n   * @return the subreader at subIndex\n   */\n  public static IndexReader subReader(IndexReader reader, int subIndex) {\n    List<IndexReader> subReadersList = new ArrayList<IndexReader>();\n    ReaderUtil.gatherSubReaders(subReadersList, reader);\n    IndexReader[] subReaders = subReadersList\n        .toArray(new IndexReader[subReadersList.size()]);\n    return subReaders[subIndex];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/util/ReaderUtil#subReader(IndexReader,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns sub-reader subIndex from reader.\n   * \n   * @param reader parent reader\n   * @param subIndex index of desired sub reader\n   * @return the subreader at subIndex\n   */\n  public static IndexReader subReader(IndexReader reader, int subIndex) {\n    List<IndexReader> subReadersList = new ArrayList<IndexReader>();\n    ReaderUtil.gatherSubReaders(subReadersList, reader);\n    IndexReader[] subReaders = subReadersList\n        .toArray(new IndexReader[subReadersList.size()]);\n    return subReaders[subIndex];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14bf88ab84c82ebc0ad000a9e520123a6785c83d","date":1327409527,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/util/ReaderUtil#subReader(IndexReader,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns sub-reader subIndex from reader.\n   * \n   * @param reader parent reader\n   * @param subIndex index of desired sub reader\n   * @return the subreader at subIndex\n   */\n  public static IndexReader subReader(IndexReader reader, int subIndex) {\n    List<IndexReader> subReadersList = new ArrayList<IndexReader>();\n    ReaderUtil.gatherSubReaders(subReadersList, reader);\n    IndexReader[] subReaders = subReadersList\n        .toArray(new IndexReader[subReadersList.size()]);\n    return subReaders[subIndex];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/util/ReaderUtil#subReader(IndexReader,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns sub-reader subIndex from reader.\n   * \n   * @param reader parent reader\n   * @param subIndex index of desired sub reader\n   * @return the subreader at subIndex\n   */\n  public static IndexReader subReader(IndexReader reader, int subIndex) {\n    List<IndexReader> subReadersList = new ArrayList<IndexReader>();\n    ReaderUtil.gatherSubReaders(subReadersList, reader);\n    IndexReader[] subReaders = subReadersList\n        .toArray(new IndexReader[subReadersList.size()]);\n    return subReaders[subIndex];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["9454a6510e2db155fb01faa5c049b06ece95fab9","14bf88ab84c82ebc0ad000a9e520123a6785c83d"],"14bf88ab84c82ebc0ad000a9e520123a6785c83d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["14bf88ab84c82ebc0ad000a9e520123a6785c83d"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"14bf88ab84c82ebc0ad000a9e520123a6785c83d":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","14bf88ab84c82ebc0ad000a9e520123a6785c83d","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":[]},"heads":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}