{"path":"src/java/org/apache/lucene/store/IndexInput#readChars(char[],int,int).mjava","commits":[{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":1,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexInput#readChars(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/InputStream#readChars(char[],int,int).mjava","sourceNew":"  /** Reads UTF-8 encoded characters into an array.\n   * @param buffer the array to read characters into\n   * @param start the offset in the array to start storing characters\n   * @param length the number of characters to read\n   * @see OutputStream#writeChars(String,int,int)\n   */\n  public void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else\n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n    }\n  }\n\n","sourceOld":"  /** Reads UTF-8 encoded characters into an array.\n   * @param buffer the array to read characters into\n   * @param start the offset in the array to start storing characters\n   * @param length the number of characters to read\n   * @see OutputStream#writeChars(String,int,int)\n   */\n  public final void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else\n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dda77265180d41bf85c84c995e25eda7b8e1b74d","date":1096395352,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexInput#readChars(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/IndexInput#readChars(char[],int,int).mjava","sourceNew":"  /** Reads UTF-8 encoded characters into an array.\n   * @param buffer the array to read characters into\n   * @param start the offset in the array to start storing characters\n   * @param length the number of characters to read\n   * @see IndexOutput#writeChars(String,int,int)\n   */\n  public void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else\n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n    }\n  }\n\n","sourceOld":"  /** Reads UTF-8 encoded characters into an array.\n   * @param buffer the array to read characters into\n   * @param start the offset in the array to start storing characters\n   * @param length the number of characters to read\n   * @see OutputStream#writeChars(String,int,int)\n   */\n  public void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else\n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4","date":1206538765,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexInput#readChars(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/IndexInput#readChars(char[],int,int).mjava","sourceNew":"  /** Reads Lucene's old \"modified UTF-8\" encoded\n   *  characters into an array.\n   * @param buffer the array to read characters into\n   * @param start the offset in the array to start storing characters\n   * @param length the number of characters to read\n   * @see IndexOutput#writeChars(String,int,int)\n   * @deprecated -- please use readString or readBytes\n   *                instead, and construct the string\n   *                from those utf8 bytes\n   */\n  public void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else\n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n    }\n  }\n\n","sourceOld":"  /** Reads UTF-8 encoded characters into an array.\n   * @param buffer the array to read characters into\n   * @param start the offset in the array to start storing characters\n   * @param length the number of characters to read\n   * @see IndexOutput#writeChars(String,int,int)\n   */\n  public void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else\n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5","date":1262514702,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexInput#readChars(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/IndexInput#readChars(char[],int,int).mjava","sourceNew":"  /** Reads Lucene's old \"modified UTF-8\" encoded\n   *  characters into an array.\n   * @param buffer the array to read characters into\n   * @param start the offset in the array to start storing characters\n   * @param length the number of characters to read\n   * @see IndexOutput#writeChars(String,int,int)\n   * @deprecated -- please use readString or readBytes\n   *                instead, and construct the string\n   *                from those utf8 bytes\n   */\n  @Deprecated\n  public void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else\n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n    }\n  }\n\n","sourceOld":"  /** Reads Lucene's old \"modified UTF-8\" encoded\n   *  characters into an array.\n   * @param buffer the array to read characters into\n   * @param start the offset in the array to start storing characters\n   * @param length the number of characters to read\n   * @see IndexOutput#writeChars(String,int,int)\n   * @deprecated -- please use readString or readBytes\n   *                instead, and construct the string\n   *                from those utf8 bytes\n   */\n  public void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else\n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a43a81875fea76763cb9f1ff5a41f2c5b79a6585","date":1264678816,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexInput#readChars(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/IndexInput#readChars(char[],int,int).mjava","sourceNew":"  /** Reads Lucene's old \"modified UTF-8\" encoded\n   *  characters into an array.\n   * @param buffer the array to read characters into\n   * @param start the offset in the array to start storing characters\n   * @param length the number of characters to read\n   * @see IndexOutput#writeChars(String,int,int)\n   * @deprecated -- please use readString or readBytes\n   *                instead, and construct the string\n   *                from those utf8 bytes\n   */\n  @Deprecated\n  public void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else {\n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n      }\n    }\n  }\n\n","sourceOld":"  /** Reads Lucene's old \"modified UTF-8\" encoded\n   *  characters into an array.\n   * @param buffer the array to read characters into\n   * @param start the offset in the array to start storing characters\n   * @param length the number of characters to read\n   * @see IndexOutput#writeChars(String,int,int)\n   * @deprecated -- please use readString or readBytes\n   *                instead, and construct the string\n   *                from those utf8 bytes\n   */\n  @Deprecated\n  public void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else\n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/IndexInput#readChars(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/IndexInput#readChars(char[],int,int).mjava","sourceNew":"  /** Reads Lucene's old \"modified UTF-8\" encoded\n   *  characters into an array.\n   * @param buffer the array to read characters into\n   * @param start the offset in the array to start storing characters\n   * @param length the number of characters to read\n   * @see IndexOutput#writeChars(String,int,int)\n   * @deprecated -- please use readString or readBytes\n   *                instead, and construct the string\n   *                from those utf8 bytes\n   */\n  @Deprecated\n  public void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else {\n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n      }\n    }\n  }\n\n","sourceOld":"  /** Reads Lucene's old \"modified UTF-8\" encoded\n   *  characters into an array.\n   * @param buffer the array to read characters into\n   * @param start the offset in the array to start storing characters\n   * @param length the number of characters to read\n   * @see IndexOutput#writeChars(String,int,int)\n   * @deprecated -- please use readString or readBytes\n   *                instead, and construct the string\n   *                from those utf8 bytes\n   */\n  @Deprecated\n  public void readChars(char[] buffer, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      byte b = readByte();\n      if ((b & 0x80) == 0)\n\tbuffer[i] = (char)(b & 0x7F);\n      else if ((b & 0xE0) != 0xE0) {\n\tbuffer[i] = (char)(((b & 0x1F) << 6)\n\t\t | (readByte() & 0x3F));\n      } else {\n\tbuffer[i] = (char)(((b & 0x0F) << 12)\n\t\t| ((readByte() & 0x3F) << 6)\n\t        |  (readByte() & 0x3F));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"],"e971ba25509e21a130fef61f0687be0446ca27a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dda77265180d41bf85c84c995e25eda7b8e1b74d":["e971ba25509e21a130fef61f0687be0446ca27a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["dda77265180d41bf85c84c995e25eda7b8e1b74d"],"a43a81875fea76763cb9f1ff5a41f2c5b79a6585":["5384d626ad24f6a1d56141ba6b0b144d1b2eafc5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a43a81875fea76763cb9f1ff5a41f2c5b79a6585"]},"commit2Childs":{"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5":["a43a81875fea76763cb9f1ff5a41f2c5b79a6585"],"e971ba25509e21a130fef61f0687be0446ca27a0":["dda77265180d41bf85c84c995e25eda7b8e1b74d"],"dda77265180d41bf85c84c995e25eda7b8e1b74d":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e971ba25509e21a130fef61f0687be0446ca27a0"],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["5384d626ad24f6a1d56141ba6b0b144d1b2eafc5"],"a43a81875fea76763cb9f1ff5a41f2c5b79a6585":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}