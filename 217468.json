{"path":"contrib/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","commits":[{"id":"aa8dcd4adc562c6e8da67c42872ef9194f8598fa","date":1108145465,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","pathOld":"sandbox/contributions/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","sourceNew":"    /**\n     * Test driver.\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n     */\n    public static void main(String[] a) throws Throwable {\n        String indexName = \"localhost_index\";\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n        URL url = null;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i].equals(\"-i\")) {\n                indexName = a[++i];\n            }\n            else if (a[i].equals(\"-f\")) {\n                fn = a[++i];\n            }\n            else if (a[i].equals(\"-url\")) {\n                url = new URL(a[++i]);\n            }\n        }\n\n        PrintStream o = System.out;\n        IndexReader r = IndexReader.open(indexName);\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n        MoreLikeThis mlt = new MoreLikeThis(r);\n\n        o.println(\"Query generation parameters:\");\n        o.println(mlt.describeParams());\n        o.println();\n\n        Query query = null;\n        if (url != null) {\n            o.println(\"Parsing URL: \" + url);\n            query = mlt.like(url);\n        }\n        else if (fn != null) {\n            o.println(\"Parsing file: \" + fn);\n            query = mlt.like(new File(fn));\n        }\n\n        o.println(\"q: \" + query);\n        o.println();\n        IndexSearcher searcher = new IndexSearcher(indexName);\n\n        Hits hits = searcher.search(query);\n        int len = hits.length();\n        o.println(\"found: \" + len + \" documents matching\");\n        o.println();\n        for (int i = 0; i < Math.min(25, len); i++) {\n            Document d = hits.doc(i);\n            o.println(\"score  : \" + hits.score(i));\n            o.println(\"url    : \" + d.get(\"url\"));\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\n            o.println(\"\\tsummary: \" + d.get(\"summary\"));\n            o.println();\n        }\n    }\n\n","sourceOld":"    /**\n     * Test driver.\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n     */\n    public static void main(String[] a) throws Throwable {\n        String indexName = \"localhost_index\";\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n        URL url = null;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i].equals(\"-i\")) {\n                indexName = a[++i];\n            }\n            else if (a[i].equals(\"-f\")) {\n                fn = a[++i];\n            }\n            else if (a[i].equals(\"-url\")) {\n                url = new URL(a[++i]);\n            }\n        }\n\n        PrintStream o = System.out;\n        IndexReader r = IndexReader.open(indexName);\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n        MoreLikeThis mlt = new MoreLikeThis(r);\n\n        o.println(\"Query generation parameters:\");\n        o.println(mlt.describeParams());\n        o.println();\n\n        Query query = null;\n        if (url != null) {\n            o.println(\"Parsing URL: \" + url);\n            query = mlt.like(url);\n        }\n        else if (fn != null) {\n            o.println(\"Parsing file: \" + fn);\n            query = mlt.like(new File(fn));\n        }\n\n        o.println(\"q: \" + query);\n        o.println();\n        IndexSearcher searcher = new IndexSearcher(indexName);\n\n        Hits hits = searcher.search(query);\n        int len = hits.length();\n        o.println(\"found: \" + len + \" documents matching\");\n        o.println();\n        for (int i = 0; i < Math.min(25, len); i++) {\n            Document d = hits.doc(i);\n            o.println(\"score  : \" + hits.score(i));\n            o.println(\"url    : \" + d.get(\"url\"));\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\n            o.println(\"\\tsummary: \" + d.get(\"summary\"));\n            o.println();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"27082692740f4a6786f78da27e654fc14d8d6a76","date":1115674670,"type":3,"author":"David Spencer","isMerge":false,"pathNew":"contrib/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","pathOld":"contrib/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","sourceNew":"    /**\n     * Test driver.\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n     */\n    public static void main(String[] a) throws Throwable {\n        String indexName = \"localhost_index\";\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n        URL url = null;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i].equals(\"-i\")) {\n                indexName = a[++i];\n            }\n            else if (a[i].equals(\"-f\")) {\n                fn = a[++i];\n            }\n            else if (a[i].equals(\"-url\")) {\n                url = new URL(a[++i]);\n            }\n        }\n\n        PrintStream o = System.out;\n        IndexReader r = IndexReader.open(indexName);\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n        MoreLikeThis mlt = new MoreLikeThis(r);\n\n        o.println(\"Query generation parameters:\");\n        o.println(mlt.describeParams());\n        o.println();\n\n        Query query = null;\n        if (url != null) {\n            o.println(\"Parsing URL: \" + url);\n            query = mlt.like(url);\n        }\n        else if (fn != null) {\n            o.println(\"Parsing file: \" + fn);\n            query = mlt.like(new File(fn));\n        }\n\n        o.println(\"q: \" + query);\n        o.println();\n        IndexSearcher searcher = new IndexSearcher(indexName);\n\n        Hits hits = searcher.search(query);\n        int len = hits.length();\n        o.println(\"found: \" + len + \" documents matching\");\n        o.println();\n        for (int i = 0; i < Math.min(25, len); i++) {\n            Document d = hits.doc(i);\n\t\t\tString summary = d.get( \"summary\");\n            o.println(\"score  : \" + hits.score(i));\n            o.println(\"url    : \" + d.get(\"url\"));\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\n\t\t\tif ( summary != null)\n\t\t\t\to.println(\"\\tsummary: \" + d.get(\"summary\"));\n            o.println();\n        }\n    }\n\n","sourceOld":"    /**\n     * Test driver.\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n     */\n    public static void main(String[] a) throws Throwable {\n        String indexName = \"localhost_index\";\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n        URL url = null;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i].equals(\"-i\")) {\n                indexName = a[++i];\n            }\n            else if (a[i].equals(\"-f\")) {\n                fn = a[++i];\n            }\n            else if (a[i].equals(\"-url\")) {\n                url = new URL(a[++i]);\n            }\n        }\n\n        PrintStream o = System.out;\n        IndexReader r = IndexReader.open(indexName);\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n        MoreLikeThis mlt = new MoreLikeThis(r);\n\n        o.println(\"Query generation parameters:\");\n        o.println(mlt.describeParams());\n        o.println();\n\n        Query query = null;\n        if (url != null) {\n            o.println(\"Parsing URL: \" + url);\n            query = mlt.like(url);\n        }\n        else if (fn != null) {\n            o.println(\"Parsing file: \" + fn);\n            query = mlt.like(new File(fn));\n        }\n\n        o.println(\"q: \" + query);\n        o.println();\n        IndexSearcher searcher = new IndexSearcher(indexName);\n\n        Hits hits = searcher.search(query);\n        int len = hits.length();\n        o.println(\"found: \" + len + \" documents matching\");\n        o.println();\n        for (int i = 0; i < Math.min(25, len); i++) {\n            Document d = hits.doc(i);\n            o.println(\"score  : \" + hits.score(i));\n            o.println(\"url    : \" + d.get(\"url\"));\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\n            o.println(\"\\tsummary: \" + d.get(\"summary\"));\n            o.println();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f49ac1854a94b947e36bbdaffa355cb7707aa768","date":1164746802,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","sourceNew":null,"sourceOld":"    /**\n     * Test driver.\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n     */\n    public static void main(String[] a) throws Throwable {\n        String indexName = \"localhost_index\";\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n        URL url = null;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i].equals(\"-i\")) {\n                indexName = a[++i];\n            }\n            else if (a[i].equals(\"-f\")) {\n                fn = a[++i];\n            }\n            else if (a[i].equals(\"-url\")) {\n                url = new URL(a[++i]);\n            }\n        }\n\n        PrintStream o = System.out;\n        IndexReader r = IndexReader.open(indexName);\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n        MoreLikeThis mlt = new MoreLikeThis(r);\n\n        o.println(\"Query generation parameters:\");\n        o.println(mlt.describeParams());\n        o.println();\n\n        Query query = null;\n        if (url != null) {\n            o.println(\"Parsing URL: \" + url);\n            query = mlt.like(url);\n        }\n        else if (fn != null) {\n            o.println(\"Parsing file: \" + fn);\n            query = mlt.like(new File(fn));\n        }\n\n        o.println(\"q: \" + query);\n        o.println();\n        IndexSearcher searcher = new IndexSearcher(indexName);\n\n        Hits hits = searcher.search(query);\n        int len = hits.length();\n        o.println(\"found: \" + len + \" documents matching\");\n        o.println();\n        for (int i = 0; i < Math.min(25, len); i++) {\n            Document d = hits.doc(i);\n\t\t\tString summary = d.get( \"summary\");\n            o.println(\"score  : \" + hits.score(i));\n            o.println(\"url    : \" + d.get(\"url\"));\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\n\t\t\tif ( summary != null)\n\t\t\t\to.println(\"\\tsummary: \" + d.get(\"summary\"));\n            o.println();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f49ac1854a94b947e36bbdaffa355cb7707aa768":["27082692740f4a6786f78da27e654fc14d8d6a76"],"aa8dcd4adc562c6e8da67c42872ef9194f8598fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"27082692740f4a6786f78da27e654fc14d8d6a76":["aa8dcd4adc562c6e8da67c42872ef9194f8598fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f49ac1854a94b947e36bbdaffa355cb7707aa768"]},"commit2Childs":{"f49ac1854a94b947e36bbdaffa355cb7707aa768":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aa8dcd4adc562c6e8da67c42872ef9194f8598fa":["27082692740f4a6786f78da27e654fc14d8d6a76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aa8dcd4adc562c6e8da67c42872ef9194f8598fa"],"27082692740f4a6786f78da27e654fc14d8d6a76":["f49ac1854a94b947e36bbdaffa355cb7707aa768"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}