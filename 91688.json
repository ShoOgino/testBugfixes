{"path":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ZkStateReader,String).mjava","commits":[{"id":"a5093a9e893633cc091cf2f729d7863671c2b715","date":1339132888,"type":1,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ZkStateReader,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(SolrZkClient,ZkStateReader,String).mjava","sourceNew":"  public Overseer(final ZkStateReader reader, final String id) throws KeeperException, InterruptedException {\n    log.info(\"Overseer (id=\" + id + \") starting\");\n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer state updater.\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(reader, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n  }\n\n","sourceOld":"  public Overseer(final SolrZkClient zkClient, final ZkStateReader reader, String id) throws KeeperException, InterruptedException {\n    log.info(\"Constructing new Overseer id=\" + id);\n    this.zkClient = zkClient;\n    this.zkCmdExecutor = new ZkCmdExecutor();\n    createWatches();\n    \n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer delayed state updater\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(fifo, reader, zkClient, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7fc3dbbe93b8019e6a9343b07d0a2fe503282f32","date":1339406523,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ZkStateReader,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ZkStateReader,String).mjava","sourceNew":"  public Overseer(final ZkStateReader reader, final String id) throws KeeperException, InterruptedException {\n    log.info(\"Overseer (id=\" + id + \") starting\");\n    createOverseerNode(reader.getZkClient());\n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer state updater.\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(reader, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n  }\n\n","sourceOld":"  public Overseer(final ZkStateReader reader, final String id) throws KeeperException, InterruptedException {\n    log.info(\"Overseer (id=\" + id + \") starting\");\n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer state updater.\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(reader, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ZkStateReader,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ZkStateReader,String).mjava","sourceNew":"  public Overseer(final ZkStateReader reader, final String id) {\n    log.info(\"Overseer (id=\" + id + \") starting\");\n    createOverseerNode(reader.getZkClient());\n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer state updater.\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(reader, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n  }\n\n","sourceOld":"  public Overseer(final ZkStateReader reader, final String id) throws KeeperException, InterruptedException {\n    log.info(\"Overseer (id=\" + id + \") starting\");\n    createOverseerNode(reader.getZkClient());\n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer state updater.\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(reader, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n  }\n\n","bugFix":["a5093a9e893633cc091cf2f729d7863671c2b715"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33d0ed80b7b47e34ad3ff033a77544563aba3085","date":1341244632,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ShardHandler,String,ZkStateReader,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ZkStateReader,String).mjava","sourceNew":"  public Overseer(ShardHandler shardHandler, String adminPath, final ZkStateReader reader, final String id) throws KeeperException, InterruptedException {\n    log.info(\"Overseer (id=\" + id + \") starting\");\n    createOverseerNode(reader.getZkClient());\n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer state updater.\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(reader, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n    \n    ThreadGroup ccTg = new ThreadGroup(\"Overseer collection creation process.\");\n    Thread ccThread = new Thread(ccTg, new OverseerCollectionProcessor(reader, id, shardHandler, adminPath));\n    ccThread.setDaemon(true);\n    ccThread.start();\n  }\n\n","sourceOld":"  public Overseer(final ZkStateReader reader, final String id) {\n    log.info(\"Overseer (id=\" + id + \") starting\");\n    createOverseerNode(reader.getZkClient());\n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer state updater.\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(reader, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ZkStateReader,String).mjava","sourceNew":null,"sourceOld":"  public Overseer(final ZkStateReader reader, final String id) throws KeeperException, InterruptedException {\n    log.info(\"Overseer (id=\" + id + \") starting\");\n    createOverseerNode(reader.getZkClient());\n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer state updater.\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(reader, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"33d0ed80b7b47e34ad3ff033a77544563aba3085":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["7fc3dbbe93b8019e6a9343b07d0a2fe503282f32","33d0ed80b7b47e34ad3ff033a77544563aba3085"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5093a9e893633cc091cf2f729d7863671c2b715":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["7fc3dbbe93b8019e6a9343b07d0a2fe503282f32"],"7fc3dbbe93b8019e6a9343b07d0a2fe503282f32":["a5093a9e893633cc091cf2f729d7863671c2b715"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["33d0ed80b7b47e34ad3ff033a77544563aba3085"]},"commit2Childs":{"33d0ed80b7b47e34ad3ff033a77544563aba3085":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5093a9e893633cc091cf2f729d7863671c2b715"],"a5093a9e893633cc091cf2f729d7863671c2b715":["7fc3dbbe93b8019e6a9343b07d0a2fe503282f32"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["33d0ed80b7b47e34ad3ff033a77544563aba3085"],"7fc3dbbe93b8019e6a9343b07d0a2fe503282f32":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}