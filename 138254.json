{"path":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-IndexableField],FieldInfos).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-IndexableField],FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-IndexableField],FieldInfos).mjava","sourceNew":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends IndexableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        storedCount++;\n      }\n    }\n    \n    startDocument(storedCount);\n\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n      }\n    }\n  }\n\n","sourceOld":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends IndexableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        storedCount++;\n      }\n    }\n    \n    startDocument(storedCount);\n\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a","date":1341524239,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-StorableField],FieldInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-IndexableField],FieldInfos).mjava","sourceNew":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends StorableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (StorableField field : doc) {\n      storedCount++;\n    }\n    \n    startDocument(storedCount);\n\n    for (StorableField field : doc) {\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n  }\n\n","sourceOld":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends IndexableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        storedCount++;\n      }\n    }\n    \n    startDocument(storedCount);\n\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-StorableField],FieldInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-IndexableField],FieldInfos).mjava","sourceNew":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends StorableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (StorableField field : doc) {\n      storedCount++;\n    }\n    \n    startDocument(storedCount);\n\n    for (StorableField field : doc) {\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n  }\n\n","sourceOld":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends IndexableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        storedCount++;\n      }\n    }\n    \n    startDocument(storedCount);\n\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1d028314cced5858683a1bb4741423d0f934257b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a"],"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d028314cced5858683a1bb4741423d0f934257b"]},"commit2Childs":{"1d028314cced5858683a1bb4741423d0f934257b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a":["1d028314cced5858683a1bb4741423d0f934257b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1d028314cced5858683a1bb4741423d0f934257b","33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}