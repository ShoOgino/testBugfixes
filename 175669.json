{"path":"src/java/org/apache/lucene/index/IndexWriter#mergeSegments(int,boolean).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#mergeSegments(int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Pops segments off of segmentInfos stack down to minSegment, merges them,\n    and pushes the merged index onto the top of the segmentInfos stack. */\n  private final void mergeSegments(int minSegment, boolean delete)\n      throws IOException {\n    String mergedName = newSegmentName();\n    int mergedDocCount = 0;\n    if (infoStream != null) infoStream.print(\"merging segments\");\n    SegmentMerger merger = new SegmentMerger(directory, mergedName);\n    Vector segmentsToDelete = new Vector();\n    for (int i = minSegment; i < segmentInfos.size(); i++) {\n      SegmentInfo si = segmentInfos.info(i);\n      if (infoStream != null)\n\tinfoStream.print(\" \" + si.name + \" (\" + si.docCount + \" docs)\");\n      SegmentReader reader = new SegmentReader(si);\n      merger.add(reader);\n      if (delete)\n\tsegmentsToDelete.addElement(reader);\t  // queue for deletion\n      mergedDocCount += si.docCount;\n    }\n    if (infoStream != null) {\n      infoStream.println();\n      infoStream.println(\" into \"+mergedName+\" (\"+mergedDocCount+\" docs)\");\n    }\n    merger.merge();\n\n    segmentInfos.setSize(minSegment);\t\t  // pop old infos & add new\n    segmentInfos.addElement(new SegmentInfo(mergedName, mergedDocCount,\n\t\t\t\t\t    directory));\n    \n    synchronized (directory) {\n      segmentInfos.write(directory);\t\t  // commit before deleting\n      deleteSegments(segmentsToDelete);\t\t  // delete now-unused segments\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a10198efba39d45c46f8714efe9a15616f9c79d","date":1001608022,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#mergeSegments(int,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#mergeSegments(int,boolean).mjava","sourceNew":"  /** Pops segments off of segmentInfos stack down to minSegment, merges them,\n    and pushes the merged index onto the top of the segmentInfos stack. */\n  private final void mergeSegments(int minSegment, boolean delete)\n      throws IOException {\n    String mergedName = newSegmentName();\n    int mergedDocCount = 0;\n    if (infoStream != null) infoStream.print(\"merging segments\");\n    SegmentMerger merger = new SegmentMerger(directory, mergedName);\n    final Vector segmentsToDelete = new Vector();\n    for (int i = minSegment; i < segmentInfos.size(); i++) {\n      SegmentInfo si = segmentInfos.info(i);\n      if (infoStream != null)\n\tinfoStream.print(\" \" + si.name + \" (\" + si.docCount + \" docs)\");\n      SegmentReader reader = new SegmentReader(si);\n      merger.add(reader);\n      if (delete)\n\tsegmentsToDelete.addElement(reader);\t  // queue for deletion\n      mergedDocCount += si.docCount;\n    }\n    if (infoStream != null) {\n      infoStream.println();\n      infoStream.println(\" into \"+mergedName+\" (\"+mergedDocCount+\" docs)\");\n    }\n    merger.merge();\n\n    segmentInfos.setSize(minSegment);\t\t  // pop old infos & add new\n    segmentInfos.addElement(new SegmentInfo(mergedName, mergedDocCount,\n\t\t\t\t\t    directory));\n    \n    synchronized (directory) {\t\t\t  // in- & inter-process sync\n      new Lock.With(directory.makeLock(\"commit.lock\")) {\n\t  public Object doBody() throws IOException {\n\t    segmentInfos.write(directory);\t  // commit before deleting\n\t    deleteSegments(segmentsToDelete);\t  // delete now-unused segments\n\t    return null;\n\t  }\n\t}.run();\n    }\n  }\n\n","sourceOld":"  /** Pops segments off of segmentInfos stack down to minSegment, merges them,\n    and pushes the merged index onto the top of the segmentInfos stack. */\n  private final void mergeSegments(int minSegment, boolean delete)\n      throws IOException {\n    String mergedName = newSegmentName();\n    int mergedDocCount = 0;\n    if (infoStream != null) infoStream.print(\"merging segments\");\n    SegmentMerger merger = new SegmentMerger(directory, mergedName);\n    Vector segmentsToDelete = new Vector();\n    for (int i = minSegment; i < segmentInfos.size(); i++) {\n      SegmentInfo si = segmentInfos.info(i);\n      if (infoStream != null)\n\tinfoStream.print(\" \" + si.name + \" (\" + si.docCount + \" docs)\");\n      SegmentReader reader = new SegmentReader(si);\n      merger.add(reader);\n      if (delete)\n\tsegmentsToDelete.addElement(reader);\t  // queue for deletion\n      mergedDocCount += si.docCount;\n    }\n    if (infoStream != null) {\n      infoStream.println();\n      infoStream.println(\" into \"+mergedName+\" (\"+mergedDocCount+\" docs)\");\n    }\n    merger.merge();\n\n    segmentInfos.setSize(minSegment);\t\t  // pop old infos & add new\n    segmentInfos.addElement(new SegmentInfo(mergedName, mergedDocCount,\n\t\t\t\t\t    directory));\n    \n    synchronized (directory) {\n      segmentInfos.write(directory);\t\t  // commit before deleting\n      deleteSegments(segmentsToDelete);\t\t  // delete now-unused segments\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e745568eabfe0f163a0eddb52ef01a6a8404656","date":1012321816,"type":4,"author":"Doug Cutting","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/IndexWriter#mergeSegments(int,boolean).mjava","sourceNew":null,"sourceOld":"  /** Pops segments off of segmentInfos stack down to minSegment, merges them,\n    and pushes the merged index onto the top of the segmentInfos stack. */\n  private final void mergeSegments(int minSegment, boolean delete)\n      throws IOException {\n    String mergedName = newSegmentName();\n    int mergedDocCount = 0;\n    if (infoStream != null) infoStream.print(\"merging segments\");\n    SegmentMerger merger = new SegmentMerger(directory, mergedName);\n    final Vector segmentsToDelete = new Vector();\n    for (int i = minSegment; i < segmentInfos.size(); i++) {\n      SegmentInfo si = segmentInfos.info(i);\n      if (infoStream != null)\n\tinfoStream.print(\" \" + si.name + \" (\" + si.docCount + \" docs)\");\n      SegmentReader reader = new SegmentReader(si);\n      merger.add(reader);\n      if (delete)\n\tsegmentsToDelete.addElement(reader);\t  // queue for deletion\n      mergedDocCount += si.docCount;\n    }\n    if (infoStream != null) {\n      infoStream.println();\n      infoStream.println(\" into \"+mergedName+\" (\"+mergedDocCount+\" docs)\");\n    }\n    merger.merge();\n\n    segmentInfos.setSize(minSegment);\t\t  // pop old infos & add new\n    segmentInfos.addElement(new SegmentInfo(mergedName, mergedDocCount,\n\t\t\t\t\t    directory));\n    \n    synchronized (directory) {\t\t\t  // in- & inter-process sync\n      new Lock.With(directory.makeLock(\"commit.lock\")) {\n\t  public Object doBody() throws IOException {\n\t    segmentInfos.write(directory);\t  // commit before deleting\n\t    deleteSegments(segmentsToDelete);\t  // delete now-unused segments\n\t    return null;\n\t  }\n\t}.run();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a10198efba39d45c46f8714efe9a15616f9c79d":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3e745568eabfe0f163a0eddb52ef01a6a8404656":["3a10198efba39d45c46f8714efe9a15616f9c79d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e745568eabfe0f163a0eddb52ef01a6a8404656"]},"commit2Childs":{"3a10198efba39d45c46f8714efe9a15616f9c79d":["3e745568eabfe0f163a0eddb52ef01a6a8404656"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["3a10198efba39d45c46f8714efe9a15616f9c79d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"3e745568eabfe0f163a0eddb52ef01a6a8404656":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}