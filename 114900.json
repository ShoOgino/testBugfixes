{"path":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput).mjava","commits":[{"id":"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","date":1400786907,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching postings writer\n    CodecUtil.checkHeader(termsIn,\n                          IDVersionPostingsWriter.TERMS_CODEC,\n                          IDVersionPostingsWriter.VERSION_START,\n                          IDVersionPostingsWriter.VERSION_CURRENT);\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching postings writer\n    CodecUtil.checkHeader(termsIn,\n                          IDVersionPostingsWriter.TERMS_CODEC,\n                          IDVersionPostingsWriter.VERSION_START,\n                          IDVersionPostingsWriter.VERSION_CURRENT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching postings writer\n    CodecUtil.checkHeader(termsIn,\n                          IDVersionPostingsWriter.TERMS_CODEC,\n                          IDVersionPostingsWriter.VERSION_START,\n                          IDVersionPostingsWriter.VERSION_CURRENT);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d640273789c74bf4f1412b99c67294c14293d154","date":1412169281,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching postings writer\n    CodecUtil.checkSegmentHeader(termsIn,\n                                 IDVersionPostingsWriter.TERMS_CODEC,\n                                 IDVersionPostingsWriter.VERSION_START,\n                                 IDVersionPostingsWriter.VERSION_CURRENT,\n                                 state.segmentInfo.getId(), state.segmentSuffix);\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching postings writer\n    CodecUtil.checkHeader(termsIn,\n                          IDVersionPostingsWriter.TERMS_CODEC,\n                          IDVersionPostingsWriter.VERSION_START,\n                          IDVersionPostingsWriter.VERSION_CURRENT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching postings writer\n    CodecUtil.checkSegmentHeader(termsIn,\n                                 IDVersionPostingsWriter.TERMS_CODEC,\n                                 IDVersionPostingsWriter.VERSION_START,\n                                 IDVersionPostingsWriter.VERSION_CURRENT,\n                                 state.segmentInfo.getId(), state.segmentSuffix);\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching postings writer\n    CodecUtil.checkHeader(termsIn,\n                          IDVersionPostingsWriter.TERMS_CODEC,\n                          IDVersionPostingsWriter.VERSION_START,\n                          IDVersionPostingsWriter.VERSION_CURRENT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99eb4a732d1a908f4636ace52928876136bf1896","date":1413829552,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput,SegmentReadState).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn, SegmentReadState state) throws IOException {\n    // Make sure we are talking to the matching postings writer\n    CodecUtil.checkSegmentHeader(termsIn,\n                                 IDVersionPostingsWriter.TERMS_CODEC,\n                                 IDVersionPostingsWriter.VERSION_START,\n                                 IDVersionPostingsWriter.VERSION_CURRENT,\n                                 state.segmentInfo.getId(), state.segmentSuffix);\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching postings writer\n    CodecUtil.checkSegmentHeader(termsIn,\n                                 IDVersionPostingsWriter.TERMS_CODEC,\n                                 IDVersionPostingsWriter.VERSION_START,\n                                 IDVersionPostingsWriter.VERSION_CURRENT,\n                                 state.segmentInfo.getId(), state.segmentSuffix);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput,SegmentReadState).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn, SegmentReadState state) throws IOException {\n    // Make sure we are talking to the matching postings writer\n    CodecUtil.checkIndexHeader(termsIn,\n                                 IDVersionPostingsWriter.TERMS_CODEC,\n                                 IDVersionPostingsWriter.VERSION_START,\n                                 IDVersionPostingsWriter.VERSION_CURRENT,\n                                 state.segmentInfo.getId(), state.segmentSuffix);\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching postings writer\n    CodecUtil.checkSegmentHeader(termsIn,\n                                 IDVersionPostingsWriter.TERMS_CODEC,\n                                 IDVersionPostingsWriter.VERSION_START,\n                                 IDVersionPostingsWriter.VERSION_CURRENT,\n                                 state.segmentInfo.getId(), state.segmentSuffix);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e"],"99eb4a732d1a908f4636ace52928876136bf1896":["d640273789c74bf4f1412b99c67294c14293d154"],"9bb9a29a5e71a90295f175df8919802993142c9a":["4d637064d608752565d4f9f41b2497dfdfdde50e","d640273789c74bf4f1412b99c67294c14293d154"],"d640273789c74bf4f1412b99c67294c14293d154":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["9bb9a29a5e71a90295f175df8919802993142c9a","99eb4a732d1a908f4636ace52928876136bf1896"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"]},"commit2Childs":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["9bb9a29a5e71a90295f175df8919802993142c9a","d640273789c74bf4f1412b99c67294c14293d154"],"99eb4a732d1a908f4636ace52928876136bf1896":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"d640273789c74bf4f1412b99c67294c14293d154":["99eb4a732d1a908f4636ace52928876136bf1896","9bb9a29a5e71a90295f175df8919802993142c9a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","4d637064d608752565d4f9f41b2497dfdfdde50e"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}