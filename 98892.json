{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#primary().mjava","commits":[{"id":"f18d4e1cdc7330101ca433af5e8564dfd894f2bf","date":1379041877,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#primary().mjava","pathOld":"/dev/null","sourceNew":"    // $ANTLR start \"primary\"\n    // src/java/org/apache/lucene/expressions/js/Javascript.g:315:1: primary : ( ID | numeric | AT_LPAREN ! conditional AT_RPAREN !);\n    public final JavascriptParser.primary_return primary() throws RecognitionException {\n        JavascriptParser.primary_return retval = new JavascriptParser.primary_return();\n        retval.start = input.LT(1);\n\n\n        CommonTree root_0 = null;\n\n        Token ID49=null;\n        Token AT_LPAREN51=null;\n        Token AT_RPAREN53=null;\n        JavascriptParser.numeric_return numeric50 =null;\n\n        JavascriptParser.conditional_return conditional52 =null;\n\n\n        CommonTree ID49_tree=null;\n        CommonTree AT_LPAREN51_tree=null;\n        CommonTree AT_RPAREN53_tree=null;\n\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:316:5: ( ID | numeric | AT_LPAREN ! conditional AT_RPAREN !)\n            int alt15=3;\n            switch ( input.LA(1) ) {\n            case ID:\n                {\n                alt15=1;\n                }\n                break;\n            case DECIMAL:\n            case HEX:\n            case OCTAL:\n                {\n                alt15=2;\n                }\n                break;\n            case AT_LPAREN:\n                {\n                alt15=3;\n                }\n                break;\n            default:\n                NoViableAltException nvae =\n                    new NoViableAltException(\"\", 15, 0, input);\n\n                throw nvae;\n\n            }\n\n            switch (alt15) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:316:7: ID\n                    {\n                    root_0 = (CommonTree)adaptor.nil();\n\n\n                    ID49=(Token)match(input,ID,FOLLOW_ID_in_primary1198); \n                    ID49_tree = \n                    (CommonTree)adaptor.create(ID49)\n                    ;\n                    adaptor.addChild(root_0, ID49_tree);\n\n\n                    }\n                    break;\n                case 2 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:317:7: numeric\n                    {\n                    root_0 = (CommonTree)adaptor.nil();\n\n\n                    pushFollow(FOLLOW_numeric_in_primary1206);\n                    numeric50=numeric();\n\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, numeric50.getTree());\n\n                    }\n                    break;\n                case 3 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:318:7: AT_LPAREN ! conditional AT_RPAREN !\n                    {\n                    root_0 = (CommonTree)adaptor.nil();\n\n\n                    AT_LPAREN51=(Token)match(input,AT_LPAREN,FOLLOW_AT_LPAREN_in_primary1214); \n\n                    pushFollow(FOLLOW_conditional_in_primary1217);\n                    conditional52=conditional();\n\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, conditional52.getTree());\n\n                    AT_RPAREN53=(Token)match(input,AT_RPAREN,FOLLOW_AT_RPAREN_in_primary1219); \n\n                    }\n                    break;\n\n            }\n            retval.stop = input.LT(-1);\n\n\n            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n    \tretval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n\n        }\n\n        finally {\n        \t// do for sure before leaving\n        }\n        return retval;\n    }\n    // $ANTLR end \"primary\"\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3623d67605fbbdfce2fadea678e2f4bbe2ab2310","date":1379042933,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#primary().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#primary().mjava","sourceNew":"    // $ANTLR start \"primary\"\n    // src/java/org/apache/lucene/expressions/js/Javascript.g:315:1: primary : ( ID | numeric | AT_LPAREN ! conditional AT_RPAREN !);\n    public final JavascriptParser.primary_return primary() throws RecognitionException {\n        JavascriptParser.primary_return retval = new JavascriptParser.primary_return();\n        retval.start = input.LT(1);\n\n\n        CommonTree root_0 = null;\n\n        Token ID49=null;\n        Token AT_LPAREN51=null;\n        Token AT_RPAREN53=null;\n        JavascriptParser.numeric_return numeric50 =null;\n\n        JavascriptParser.conditional_return conditional52 =null;\n\n\n        CommonTree ID49_tree=null;\n        CommonTree AT_LPAREN51_tree=null;\n        CommonTree AT_RPAREN53_tree=null;\n\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:316:5: ( ID | numeric | AT_LPAREN ! conditional AT_RPAREN !)\n            int alt15=3;\n            switch ( input.LA(1) ) {\n            case ID:\n                {\n                alt15=1;\n                }\n                break;\n            case DECIMAL:\n            case HEX:\n            case OCTAL:\n                {\n                alt15=2;\n                }\n                break;\n            case AT_LPAREN:\n                {\n                alt15=3;\n                }\n                break;\n            default:\n                NoViableAltException nvae =\n                    new NoViableAltException(\"\", 15, 0, input);\n\n                throw nvae;\n\n            }\n\n            switch (alt15) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:316:7: ID\n                    {\n                    root_0 = (CommonTree)adaptor.nil();\n\n\n                    ID49=(Token)match(input,ID,FOLLOW_ID_in_primary1198); \n                    ID49_tree = \n                    (CommonTree)adaptor.create(ID49)\n                    ;\n                    adaptor.addChild(root_0, ID49_tree);\n\n\n                    }\n                    break;\n                case 2 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:317:7: numeric\n                    {\n                    root_0 = (CommonTree)adaptor.nil();\n\n\n                    pushFollow(FOLLOW_numeric_in_primary1206);\n                    numeric50=numeric();\n\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, numeric50.getTree());\n\n                    }\n                    break;\n                case 3 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:318:7: AT_LPAREN ! conditional AT_RPAREN !\n                    {\n                    root_0 = (CommonTree)adaptor.nil();\n\n\n                    AT_LPAREN51=(Token)match(input,AT_LPAREN,FOLLOW_AT_LPAREN_in_primary1214); \n\n                    pushFollow(FOLLOW_conditional_in_primary1217);\n                    conditional52=conditional();\n\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, conditional52.getTree());\n\n                    AT_RPAREN53=(Token)match(input,AT_RPAREN,FOLLOW_AT_RPAREN_in_primary1219); \n\n                    }\n                    break;\n\n            }\n            retval.stop = input.LT(-1);\n\n\n            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n\n        }\n\n        finally {\n            // do for sure before leaving\n        }\n        return retval;\n    }\n    // $ANTLR end \"primary\"\n\n","sourceOld":"    // $ANTLR start \"primary\"\n    // src/java/org/apache/lucene/expressions/js/Javascript.g:315:1: primary : ( ID | numeric | AT_LPAREN ! conditional AT_RPAREN !);\n    public final JavascriptParser.primary_return primary() throws RecognitionException {\n        JavascriptParser.primary_return retval = new JavascriptParser.primary_return();\n        retval.start = input.LT(1);\n\n\n        CommonTree root_0 = null;\n\n        Token ID49=null;\n        Token AT_LPAREN51=null;\n        Token AT_RPAREN53=null;\n        JavascriptParser.numeric_return numeric50 =null;\n\n        JavascriptParser.conditional_return conditional52 =null;\n\n\n        CommonTree ID49_tree=null;\n        CommonTree AT_LPAREN51_tree=null;\n        CommonTree AT_RPAREN53_tree=null;\n\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:316:5: ( ID | numeric | AT_LPAREN ! conditional AT_RPAREN !)\n            int alt15=3;\n            switch ( input.LA(1) ) {\n            case ID:\n                {\n                alt15=1;\n                }\n                break;\n            case DECIMAL:\n            case HEX:\n            case OCTAL:\n                {\n                alt15=2;\n                }\n                break;\n            case AT_LPAREN:\n                {\n                alt15=3;\n                }\n                break;\n            default:\n                NoViableAltException nvae =\n                    new NoViableAltException(\"\", 15, 0, input);\n\n                throw nvae;\n\n            }\n\n            switch (alt15) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:316:7: ID\n                    {\n                    root_0 = (CommonTree)adaptor.nil();\n\n\n                    ID49=(Token)match(input,ID,FOLLOW_ID_in_primary1198); \n                    ID49_tree = \n                    (CommonTree)adaptor.create(ID49)\n                    ;\n                    adaptor.addChild(root_0, ID49_tree);\n\n\n                    }\n                    break;\n                case 2 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:317:7: numeric\n                    {\n                    root_0 = (CommonTree)adaptor.nil();\n\n\n                    pushFollow(FOLLOW_numeric_in_primary1206);\n                    numeric50=numeric();\n\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, numeric50.getTree());\n\n                    }\n                    break;\n                case 3 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:318:7: AT_LPAREN ! conditional AT_RPAREN !\n                    {\n                    root_0 = (CommonTree)adaptor.nil();\n\n\n                    AT_LPAREN51=(Token)match(input,AT_LPAREN,FOLLOW_AT_LPAREN_in_primary1214); \n\n                    pushFollow(FOLLOW_conditional_in_primary1217);\n                    conditional52=conditional();\n\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, conditional52.getTree());\n\n                    AT_RPAREN53=(Token)match(input,AT_RPAREN,FOLLOW_AT_RPAREN_in_primary1219); \n\n                    }\n                    break;\n\n            }\n            retval.stop = input.LT(-1);\n\n\n            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n    \tretval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n\n        }\n\n        finally {\n        \t// do for sure before leaving\n        }\n        return retval;\n    }\n    // $ANTLR end \"primary\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2","date":1379096281,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#primary().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#primary().mjava","sourceNew":"    // $ANTLR start \"primary\"\n    // src/java/org/apache/lucene/expressions/js/Javascript.g:315:1: primary : ( ID | numeric | AT_LPAREN ! conditional AT_RPAREN !);\n    public final JavascriptParser.primary_return primary() throws RecognitionException {\n        JavascriptParser.primary_return retval = new JavascriptParser.primary_return();\n        retval.start = input.LT(1);\n\n        CommonTree root_0 = null;\n\n        Token ID49=null;\n        Token AT_LPAREN51=null;\n        Token AT_RPAREN53=null;\n        ParserRuleReturnScope numeric50 =null;\n        ParserRuleReturnScope conditional52 =null;\n\n        CommonTree ID49_tree=null;\n        CommonTree AT_LPAREN51_tree=null;\n        CommonTree AT_RPAREN53_tree=null;\n\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:316:5: ( ID | numeric | AT_LPAREN ! conditional AT_RPAREN !)\n            int alt15=3;\n            switch ( input.LA(1) ) {\n            case ID:\n                {\n                alt15=1;\n                }\n                break;\n            case DECIMAL:\n            case HEX:\n            case OCTAL:\n                {\n                alt15=2;\n                }\n                break;\n            case AT_LPAREN:\n                {\n                alt15=3;\n                }\n                break;\n            default:\n                NoViableAltException nvae =\n                    new NoViableAltException(\"\", 15, 0, input);\n                throw nvae;\n            }\n            switch (alt15) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:316:7: ID\n                    {\n                    root_0 = (CommonTree)adaptor.nil();\n\n\n                    ID49=(Token)match(input,ID,FOLLOW_ID_in_primary1198); \n                    ID49_tree = (CommonTree)adaptor.create(ID49);\n                    adaptor.addChild(root_0, ID49_tree);\n\n                    }\n                    break;\n                case 2 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:317:7: numeric\n                    {\n                    root_0 = (CommonTree)adaptor.nil();\n\n\n                    pushFollow(FOLLOW_numeric_in_primary1206);\n                    numeric50=numeric();\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, numeric50.getTree());\n\n                    }\n                    break;\n                case 3 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:318:7: AT_LPAREN ! conditional AT_RPAREN !\n                    {\n                    root_0 = (CommonTree)adaptor.nil();\n\n\n                    AT_LPAREN51=(Token)match(input,AT_LPAREN,FOLLOW_AT_LPAREN_in_primary1214); \n                    pushFollow(FOLLOW_conditional_in_primary1217);\n                    conditional52=conditional();\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, conditional52.getTree());\n\n                    AT_RPAREN53=(Token)match(input,AT_RPAREN,FOLLOW_AT_RPAREN_in_primary1219); \n                    }\n                    break;\n\n            }\n            retval.stop = input.LT(-1);\n\n            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n            retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n        }\n        finally {\n            // do for sure before leaving\n        }\n        return retval;\n    }\n    // $ANTLR end \"primary\"\n\n","sourceOld":"    // $ANTLR start \"primary\"\n    // src/java/org/apache/lucene/expressions/js/Javascript.g:315:1: primary : ( ID | numeric | AT_LPAREN ! conditional AT_RPAREN !);\n    public final JavascriptParser.primary_return primary() throws RecognitionException {\n        JavascriptParser.primary_return retval = new JavascriptParser.primary_return();\n        retval.start = input.LT(1);\n\n\n        CommonTree root_0 = null;\n\n        Token ID49=null;\n        Token AT_LPAREN51=null;\n        Token AT_RPAREN53=null;\n        JavascriptParser.numeric_return numeric50 =null;\n\n        JavascriptParser.conditional_return conditional52 =null;\n\n\n        CommonTree ID49_tree=null;\n        CommonTree AT_LPAREN51_tree=null;\n        CommonTree AT_RPAREN53_tree=null;\n\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:316:5: ( ID | numeric | AT_LPAREN ! conditional AT_RPAREN !)\n            int alt15=3;\n            switch ( input.LA(1) ) {\n            case ID:\n                {\n                alt15=1;\n                }\n                break;\n            case DECIMAL:\n            case HEX:\n            case OCTAL:\n                {\n                alt15=2;\n                }\n                break;\n            case AT_LPAREN:\n                {\n                alt15=3;\n                }\n                break;\n            default:\n                NoViableAltException nvae =\n                    new NoViableAltException(\"\", 15, 0, input);\n\n                throw nvae;\n\n            }\n\n            switch (alt15) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:316:7: ID\n                    {\n                    root_0 = (CommonTree)adaptor.nil();\n\n\n                    ID49=(Token)match(input,ID,FOLLOW_ID_in_primary1198); \n                    ID49_tree = \n                    (CommonTree)adaptor.create(ID49)\n                    ;\n                    adaptor.addChild(root_0, ID49_tree);\n\n\n                    }\n                    break;\n                case 2 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:317:7: numeric\n                    {\n                    root_0 = (CommonTree)adaptor.nil();\n\n\n                    pushFollow(FOLLOW_numeric_in_primary1206);\n                    numeric50=numeric();\n\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, numeric50.getTree());\n\n                    }\n                    break;\n                case 3 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:318:7: AT_LPAREN ! conditional AT_RPAREN !\n                    {\n                    root_0 = (CommonTree)adaptor.nil();\n\n\n                    AT_LPAREN51=(Token)match(input,AT_LPAREN,FOLLOW_AT_LPAREN_in_primary1214); \n\n                    pushFollow(FOLLOW_conditional_in_primary1217);\n                    conditional52=conditional();\n\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, conditional52.getTree());\n\n                    AT_RPAREN53=(Token)match(input,AT_RPAREN,FOLLOW_AT_RPAREN_in_primary1219); \n\n                    }\n                    break;\n\n            }\n            retval.stop = input.LT(-1);\n\n\n            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n\n        }\n\n        finally {\n            // do for sure before leaving\n        }\n        return retval;\n    }\n    // $ANTLR end \"primary\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1441eba4282a646ef88d12acb797483db37554e","date":1379096538,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#primary().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#primary().mjava","sourceNew":"  // $ANTLR start \"primary\"\n  // src/java/org/apache/lucene/expressions/js/Javascript.g:315:1: primary : ( ID | numeric | AT_LPAREN ! conditional AT_RPAREN !);\n  public final JavascriptParser.primary_return primary() throws RecognitionException {\n    JavascriptParser.primary_return retval = new JavascriptParser.primary_return();\n    retval.start = input.LT(1);\n\n    CommonTree root_0 = null;\n\n    Token ID49=null;\n    Token AT_LPAREN51=null;\n    Token AT_RPAREN53=null;\n    ParserRuleReturnScope numeric50 =null;\n    ParserRuleReturnScope conditional52 =null;\n\n    CommonTree ID49_tree=null;\n    CommonTree AT_LPAREN51_tree=null;\n    CommonTree AT_RPAREN53_tree=null;\n\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:316:5: ( ID | numeric | AT_LPAREN ! conditional AT_RPAREN !)\n      int alt15=3;\n      switch ( input.LA(1) ) {\n      case ID:\n        {\n        alt15=1;\n        }\n        break;\n      case DECIMAL:\n      case HEX:\n      case OCTAL:\n        {\n        alt15=2;\n        }\n        break;\n      case AT_LPAREN:\n        {\n        alt15=3;\n        }\n        break;\n      default:\n        NoViableAltException nvae =\n          new NoViableAltException(\"\", 15, 0, input);\n        throw nvae;\n      }\n      switch (alt15) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:316:7: ID\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          ID49=(Token)match(input,ID,FOLLOW_ID_in_primary1198); \n          ID49_tree = (CommonTree)adaptor.create(ID49);\n          adaptor.addChild(root_0, ID49_tree);\n\n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:317:7: numeric\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          pushFollow(FOLLOW_numeric_in_primary1206);\n          numeric50=numeric();\n          state._fsp--;\n\n          adaptor.addChild(root_0, numeric50.getTree());\n\n          }\n          break;\n        case 3 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:318:7: AT_LPAREN ! conditional AT_RPAREN !\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          AT_LPAREN51=(Token)match(input,AT_LPAREN,FOLLOW_AT_LPAREN_in_primary1214); \n          pushFollow(FOLLOW_conditional_in_primary1217);\n          conditional52=conditional();\n          state._fsp--;\n\n          adaptor.addChild(root_0, conditional52.getTree());\n\n          AT_RPAREN53=(Token)match(input,AT_RPAREN,FOLLOW_AT_RPAREN_in_primary1219); \n          }\n          break;\n\n      }\n      retval.stop = input.LT(-1);\n\n      retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n      adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n    }\n    catch (RecognitionException re) {\n      reportError(re);\n      recover(input,re);\n      retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n    }\n    finally {\n      // do for sure before leaving\n    }\n    return retval;\n  }\n  // $ANTLR end \"primary\"\n\n","sourceOld":"    // $ANTLR start \"primary\"\n    // src/java/org/apache/lucene/expressions/js/Javascript.g:315:1: primary : ( ID | numeric | AT_LPAREN ! conditional AT_RPAREN !);\n    public final JavascriptParser.primary_return primary() throws RecognitionException {\n        JavascriptParser.primary_return retval = new JavascriptParser.primary_return();\n        retval.start = input.LT(1);\n\n        CommonTree root_0 = null;\n\n        Token ID49=null;\n        Token AT_LPAREN51=null;\n        Token AT_RPAREN53=null;\n        ParserRuleReturnScope numeric50 =null;\n        ParserRuleReturnScope conditional52 =null;\n\n        CommonTree ID49_tree=null;\n        CommonTree AT_LPAREN51_tree=null;\n        CommonTree AT_RPAREN53_tree=null;\n\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:316:5: ( ID | numeric | AT_LPAREN ! conditional AT_RPAREN !)\n            int alt15=3;\n            switch ( input.LA(1) ) {\n            case ID:\n                {\n                alt15=1;\n                }\n                break;\n            case DECIMAL:\n            case HEX:\n            case OCTAL:\n                {\n                alt15=2;\n                }\n                break;\n            case AT_LPAREN:\n                {\n                alt15=3;\n                }\n                break;\n            default:\n                NoViableAltException nvae =\n                    new NoViableAltException(\"\", 15, 0, input);\n                throw nvae;\n            }\n            switch (alt15) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:316:7: ID\n                    {\n                    root_0 = (CommonTree)adaptor.nil();\n\n\n                    ID49=(Token)match(input,ID,FOLLOW_ID_in_primary1198); \n                    ID49_tree = (CommonTree)adaptor.create(ID49);\n                    adaptor.addChild(root_0, ID49_tree);\n\n                    }\n                    break;\n                case 2 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:317:7: numeric\n                    {\n                    root_0 = (CommonTree)adaptor.nil();\n\n\n                    pushFollow(FOLLOW_numeric_in_primary1206);\n                    numeric50=numeric();\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, numeric50.getTree());\n\n                    }\n                    break;\n                case 3 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:318:7: AT_LPAREN ! conditional AT_RPAREN !\n                    {\n                    root_0 = (CommonTree)adaptor.nil();\n\n\n                    AT_LPAREN51=(Token)match(input,AT_LPAREN,FOLLOW_AT_LPAREN_in_primary1214); \n                    pushFollow(FOLLOW_conditional_in_primary1217);\n                    conditional52=conditional();\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, conditional52.getTree());\n\n                    AT_RPAREN53=(Token)match(input,AT_RPAREN,FOLLOW_AT_RPAREN_in_primary1219); \n                    }\n                    break;\n\n            }\n            retval.stop = input.LT(-1);\n\n            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n            retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n        }\n        finally {\n            // do for sure before leaving\n        }\n        return retval;\n    }\n    // $ANTLR end \"primary\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f0e44787cffbb978aa2182761e3f9b184545a1e","date":1379265303,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#primary().mjava","pathOld":"/dev/null","sourceNew":"  // $ANTLR start \"primary\"\n  // src/java/org/apache/lucene/expressions/js/Javascript.g:315:1: primary : ( ID | numeric | AT_LPAREN ! conditional AT_RPAREN !);\n  public final JavascriptParser.primary_return primary() throws RecognitionException {\n    JavascriptParser.primary_return retval = new JavascriptParser.primary_return();\n    retval.start = input.LT(1);\n\n    CommonTree root_0 = null;\n\n    Token ID49=null;\n    Token AT_LPAREN51=null;\n    Token AT_RPAREN53=null;\n    ParserRuleReturnScope numeric50 =null;\n    ParserRuleReturnScope conditional52 =null;\n\n    CommonTree ID49_tree=null;\n    CommonTree AT_LPAREN51_tree=null;\n    CommonTree AT_RPAREN53_tree=null;\n\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:316:5: ( ID | numeric | AT_LPAREN ! conditional AT_RPAREN !)\n      int alt15=3;\n      switch ( input.LA(1) ) {\n      case ID:\n        {\n        alt15=1;\n        }\n        break;\n      case DECIMAL:\n      case HEX:\n      case OCTAL:\n        {\n        alt15=2;\n        }\n        break;\n      case AT_LPAREN:\n        {\n        alt15=3;\n        }\n        break;\n      default:\n        NoViableAltException nvae =\n          new NoViableAltException(\"\", 15, 0, input);\n        throw nvae;\n      }\n      switch (alt15) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:316:7: ID\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          ID49=(Token)match(input,ID,FOLLOW_ID_in_primary1198); \n          ID49_tree = (CommonTree)adaptor.create(ID49);\n          adaptor.addChild(root_0, ID49_tree);\n\n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:317:7: numeric\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          pushFollow(FOLLOW_numeric_in_primary1206);\n          numeric50=numeric();\n          state._fsp--;\n\n          adaptor.addChild(root_0, numeric50.getTree());\n\n          }\n          break;\n        case 3 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:318:7: AT_LPAREN ! conditional AT_RPAREN !\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          AT_LPAREN51=(Token)match(input,AT_LPAREN,FOLLOW_AT_LPAREN_in_primary1214); \n          pushFollow(FOLLOW_conditional_in_primary1217);\n          conditional52=conditional();\n          state._fsp--;\n\n          adaptor.addChild(root_0, conditional52.getTree());\n\n          AT_RPAREN53=(Token)match(input,AT_RPAREN,FOLLOW_AT_RPAREN_in_primary1219); \n          }\n          break;\n\n      }\n      retval.stop = input.LT(-1);\n\n      retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n      adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n    }\n    catch (RecognitionException re) {\n      reportError(re);\n      recover(input,re);\n      retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n    }\n    finally {\n      // do for sure before leaving\n    }\n    return retval;\n  }\n  // $ANTLR end \"primary\"\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d639dc27b5b3eae561ef321b06f3cad9280c529","date":1383945027,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#primary().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#primary().mjava","sourceNew":"  // $ANTLR start \"primary\"\n  // src/java/org/apache/lucene/expressions/js/Javascript.g:315:1: primary : ( NAMESPACE_ID | numeric | AT_LPAREN ! conditional AT_RPAREN !);\n  public final JavascriptParser.primary_return primary() throws RecognitionException {\n    JavascriptParser.primary_return retval = new JavascriptParser.primary_return();\n    retval.start = input.LT(1);\n\n    CommonTree root_0 = null;\n\n    Token NAMESPACE_ID49=null;\n    Token AT_LPAREN51=null;\n    Token AT_RPAREN53=null;\n    ParserRuleReturnScope numeric50 =null;\n    ParserRuleReturnScope conditional52 =null;\n\n    CommonTree NAMESPACE_ID49_tree=null;\n    CommonTree AT_LPAREN51_tree=null;\n    CommonTree AT_RPAREN53_tree=null;\n\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:316:5: ( NAMESPACE_ID | numeric | AT_LPAREN ! conditional AT_RPAREN !)\n      int alt15=3;\n      switch ( input.LA(1) ) {\n      case NAMESPACE_ID:\n        {\n        alt15=1;\n        }\n        break;\n      case DECIMAL:\n      case HEX:\n      case OCTAL:\n        {\n        alt15=2;\n        }\n        break;\n      case AT_LPAREN:\n        {\n        alt15=3;\n        }\n        break;\n      default:\n        NoViableAltException nvae =\n          new NoViableAltException(\"\", 15, 0, input);\n        throw nvae;\n      }\n      switch (alt15) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:316:7: NAMESPACE_ID\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          NAMESPACE_ID49=(Token)match(input,NAMESPACE_ID,FOLLOW_NAMESPACE_ID_in_primary1198); \n          NAMESPACE_ID49_tree = (CommonTree)adaptor.create(NAMESPACE_ID49);\n          adaptor.addChild(root_0, NAMESPACE_ID49_tree);\n\n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:317:7: numeric\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          pushFollow(FOLLOW_numeric_in_primary1206);\n          numeric50=numeric();\n          state._fsp--;\n\n          adaptor.addChild(root_0, numeric50.getTree());\n\n          }\n          break;\n        case 3 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:318:7: AT_LPAREN ! conditional AT_RPAREN !\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          AT_LPAREN51=(Token)match(input,AT_LPAREN,FOLLOW_AT_LPAREN_in_primary1214); \n          pushFollow(FOLLOW_conditional_in_primary1217);\n          conditional52=conditional();\n          state._fsp--;\n\n          adaptor.addChild(root_0, conditional52.getTree());\n\n          AT_RPAREN53=(Token)match(input,AT_RPAREN,FOLLOW_AT_RPAREN_in_primary1219); \n          }\n          break;\n\n      }\n      retval.stop = input.LT(-1);\n\n      retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n      adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n    }\n    catch (RecognitionException re) {\n      reportError(re);\n      recover(input,re);\n      retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n    }\n    finally {\n      // do for sure before leaving\n    }\n    return retval;\n  }\n  // $ANTLR end \"primary\"\n\n","sourceOld":"  // $ANTLR start \"primary\"\n  // src/java/org/apache/lucene/expressions/js/Javascript.g:315:1: primary : ( ID | numeric | AT_LPAREN ! conditional AT_RPAREN !);\n  public final JavascriptParser.primary_return primary() throws RecognitionException {\n    JavascriptParser.primary_return retval = new JavascriptParser.primary_return();\n    retval.start = input.LT(1);\n\n    CommonTree root_0 = null;\n\n    Token ID49=null;\n    Token AT_LPAREN51=null;\n    Token AT_RPAREN53=null;\n    ParserRuleReturnScope numeric50 =null;\n    ParserRuleReturnScope conditional52 =null;\n\n    CommonTree ID49_tree=null;\n    CommonTree AT_LPAREN51_tree=null;\n    CommonTree AT_RPAREN53_tree=null;\n\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:316:5: ( ID | numeric | AT_LPAREN ! conditional AT_RPAREN !)\n      int alt15=3;\n      switch ( input.LA(1) ) {\n      case ID:\n        {\n        alt15=1;\n        }\n        break;\n      case DECIMAL:\n      case HEX:\n      case OCTAL:\n        {\n        alt15=2;\n        }\n        break;\n      case AT_LPAREN:\n        {\n        alt15=3;\n        }\n        break;\n      default:\n        NoViableAltException nvae =\n          new NoViableAltException(\"\", 15, 0, input);\n        throw nvae;\n      }\n      switch (alt15) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:316:7: ID\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          ID49=(Token)match(input,ID,FOLLOW_ID_in_primary1198); \n          ID49_tree = (CommonTree)adaptor.create(ID49);\n          adaptor.addChild(root_0, ID49_tree);\n\n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:317:7: numeric\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          pushFollow(FOLLOW_numeric_in_primary1206);\n          numeric50=numeric();\n          state._fsp--;\n\n          adaptor.addChild(root_0, numeric50.getTree());\n\n          }\n          break;\n        case 3 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:318:7: AT_LPAREN ! conditional AT_RPAREN !\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          AT_LPAREN51=(Token)match(input,AT_LPAREN,FOLLOW_AT_LPAREN_in_primary1214); \n          pushFollow(FOLLOW_conditional_in_primary1217);\n          conditional52=conditional();\n          state._fsp--;\n\n          adaptor.addChild(root_0, conditional52.getTree());\n\n          AT_RPAREN53=(Token)match(input,AT_RPAREN,FOLLOW_AT_RPAREN_in_primary1219); \n          }\n          break;\n\n      }\n      retval.stop = input.LT(-1);\n\n      retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n      adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n    }\n    catch (RecognitionException re) {\n      reportError(re);\n      recover(input,re);\n      retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n    }\n    finally {\n      // do for sure before leaving\n    }\n    return retval;\n  }\n  // $ANTLR end \"primary\"\n\n","bugFix":null,"bugIntro":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c","date":1404947938,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#primary().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#primary().mjava","sourceNew":"  // $ANTLR start \"primary\"\n  // src/java/org/apache/lucene/expressions/js/Javascript.g:315:1: primary : ( VARIABLE | numeric | AT_LPAREN ! conditional AT_RPAREN !);\n  public final JavascriptParser.primary_return primary() throws RecognitionException {\n    JavascriptParser.primary_return retval = new JavascriptParser.primary_return();\n    retval.start = input.LT(1);\n\n    CommonTree root_0 = null;\n\n    Token VARIABLE49=null;\n    Token AT_LPAREN51=null;\n    Token AT_RPAREN53=null;\n    ParserRuleReturnScope numeric50 =null;\n    ParserRuleReturnScope conditional52 =null;\n\n    CommonTree VARIABLE49_tree=null;\n    CommonTree AT_LPAREN51_tree=null;\n    CommonTree AT_RPAREN53_tree=null;\n\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:316:5: ( VARIABLE | numeric | AT_LPAREN ! conditional AT_RPAREN !)\n      int alt15=3;\n      switch ( input.LA(1) ) {\n      case VARIABLE:\n        {\n        alt15=1;\n        }\n        break;\n      case DECIMAL:\n      case HEX:\n      case OCTAL:\n        {\n        alt15=2;\n        }\n        break;\n      case AT_LPAREN:\n        {\n        alt15=3;\n        }\n        break;\n      default:\n        NoViableAltException nvae =\n          new NoViableAltException(\"\", 15, 0, input);\n        throw nvae;\n      }\n      switch (alt15) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:316:7: VARIABLE\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          VARIABLE49=(Token)match(input,VARIABLE,FOLLOW_VARIABLE_in_primary1198); \n          VARIABLE49_tree = (CommonTree)adaptor.create(VARIABLE49);\n          adaptor.addChild(root_0, VARIABLE49_tree);\n\n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:317:7: numeric\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          pushFollow(FOLLOW_numeric_in_primary1206);\n          numeric50=numeric();\n          state._fsp--;\n\n          adaptor.addChild(root_0, numeric50.getTree());\n\n          }\n          break;\n        case 3 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:318:7: AT_LPAREN ! conditional AT_RPAREN !\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          AT_LPAREN51=(Token)match(input,AT_LPAREN,FOLLOW_AT_LPAREN_in_primary1214); \n          pushFollow(FOLLOW_conditional_in_primary1217);\n          conditional52=conditional();\n          state._fsp--;\n\n          adaptor.addChild(root_0, conditional52.getTree());\n\n          AT_RPAREN53=(Token)match(input,AT_RPAREN,FOLLOW_AT_RPAREN_in_primary1219); \n          }\n          break;\n\n      }\n      retval.stop = input.LT(-1);\n\n      retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n      adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n    }\n    catch (RecognitionException re) {\n      reportError(re);\n      recover(input,re);\n      retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n    }\n    finally {\n      // do for sure before leaving\n    }\n    return retval;\n  }\n  // $ANTLR end \"primary\"\n\n","sourceOld":"  // $ANTLR start \"primary\"\n  // src/java/org/apache/lucene/expressions/js/Javascript.g:315:1: primary : ( NAMESPACE_ID | numeric | AT_LPAREN ! conditional AT_RPAREN !);\n  public final JavascriptParser.primary_return primary() throws RecognitionException {\n    JavascriptParser.primary_return retval = new JavascriptParser.primary_return();\n    retval.start = input.LT(1);\n\n    CommonTree root_0 = null;\n\n    Token NAMESPACE_ID49=null;\n    Token AT_LPAREN51=null;\n    Token AT_RPAREN53=null;\n    ParserRuleReturnScope numeric50 =null;\n    ParserRuleReturnScope conditional52 =null;\n\n    CommonTree NAMESPACE_ID49_tree=null;\n    CommonTree AT_LPAREN51_tree=null;\n    CommonTree AT_RPAREN53_tree=null;\n\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:316:5: ( NAMESPACE_ID | numeric | AT_LPAREN ! conditional AT_RPAREN !)\n      int alt15=3;\n      switch ( input.LA(1) ) {\n      case NAMESPACE_ID:\n        {\n        alt15=1;\n        }\n        break;\n      case DECIMAL:\n      case HEX:\n      case OCTAL:\n        {\n        alt15=2;\n        }\n        break;\n      case AT_LPAREN:\n        {\n        alt15=3;\n        }\n        break;\n      default:\n        NoViableAltException nvae =\n          new NoViableAltException(\"\", 15, 0, input);\n        throw nvae;\n      }\n      switch (alt15) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:316:7: NAMESPACE_ID\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          NAMESPACE_ID49=(Token)match(input,NAMESPACE_ID,FOLLOW_NAMESPACE_ID_in_primary1198); \n          NAMESPACE_ID49_tree = (CommonTree)adaptor.create(NAMESPACE_ID49);\n          adaptor.addChild(root_0, NAMESPACE_ID49_tree);\n\n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:317:7: numeric\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          pushFollow(FOLLOW_numeric_in_primary1206);\n          numeric50=numeric();\n          state._fsp--;\n\n          adaptor.addChild(root_0, numeric50.getTree());\n\n          }\n          break;\n        case 3 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:318:7: AT_LPAREN ! conditional AT_RPAREN !\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          AT_LPAREN51=(Token)match(input,AT_LPAREN,FOLLOW_AT_LPAREN_in_primary1214); \n          pushFollow(FOLLOW_conditional_in_primary1217);\n          conditional52=conditional();\n          state._fsp--;\n\n          adaptor.addChild(root_0, conditional52.getTree());\n\n          AT_RPAREN53=(Token)match(input,AT_RPAREN,FOLLOW_AT_RPAREN_in_primary1219); \n          }\n          break;\n\n      }\n      retval.stop = input.LT(-1);\n\n      retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n      adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n    }\n    catch (RecognitionException re) {\n      reportError(re);\n      recover(input,re);\n      retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n    }\n    finally {\n      // do for sure before leaving\n    }\n    return retval;\n  }\n  // $ANTLR end \"primary\"\n\n","bugFix":["8d639dc27b5b3eae561ef321b06f3cad9280c529"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d23d4828afa583ebf35b4a541763af6206133458","date":1438931440,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#primary().mjava","sourceNew":null,"sourceOld":"  // $ANTLR start \"primary\"\n  // src/java/org/apache/lucene/expressions/js/Javascript.g:315:1: primary : ( VARIABLE | numeric | AT_LPAREN ! conditional AT_RPAREN !);\n  public final JavascriptParser.primary_return primary() throws RecognitionException {\n    JavascriptParser.primary_return retval = new JavascriptParser.primary_return();\n    retval.start = input.LT(1);\n\n    CommonTree root_0 = null;\n\n    Token VARIABLE49=null;\n    Token AT_LPAREN51=null;\n    Token AT_RPAREN53=null;\n    ParserRuleReturnScope numeric50 =null;\n    ParserRuleReturnScope conditional52 =null;\n\n    CommonTree VARIABLE49_tree=null;\n    CommonTree AT_LPAREN51_tree=null;\n    CommonTree AT_RPAREN53_tree=null;\n\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:316:5: ( VARIABLE | numeric | AT_LPAREN ! conditional AT_RPAREN !)\n      int alt15=3;\n      switch ( input.LA(1) ) {\n      case VARIABLE:\n        {\n        alt15=1;\n        }\n        break;\n      case DECIMAL:\n      case HEX:\n      case OCTAL:\n        {\n        alt15=2;\n        }\n        break;\n      case AT_LPAREN:\n        {\n        alt15=3;\n        }\n        break;\n      default:\n        NoViableAltException nvae =\n          new NoViableAltException(\"\", 15, 0, input);\n        throw nvae;\n      }\n      switch (alt15) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:316:7: VARIABLE\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          VARIABLE49=(Token)match(input,VARIABLE,FOLLOW_VARIABLE_in_primary1198); \n          VARIABLE49_tree = (CommonTree)adaptor.create(VARIABLE49);\n          adaptor.addChild(root_0, VARIABLE49_tree);\n\n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:317:7: numeric\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          pushFollow(FOLLOW_numeric_in_primary1206);\n          numeric50=numeric();\n          state._fsp--;\n\n          adaptor.addChild(root_0, numeric50.getTree());\n\n          }\n          break;\n        case 3 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:318:7: AT_LPAREN ! conditional AT_RPAREN !\n          {\n          root_0 = (CommonTree)adaptor.nil();\n\n\n          AT_LPAREN51=(Token)match(input,AT_LPAREN,FOLLOW_AT_LPAREN_in_primary1214); \n          pushFollow(FOLLOW_conditional_in_primary1217);\n          conditional52=conditional();\n          state._fsp--;\n\n          adaptor.addChild(root_0, conditional52.getTree());\n\n          AT_RPAREN53=(Token)match(input,AT_RPAREN,FOLLOW_AT_RPAREN_in_primary1219); \n          }\n          break;\n\n      }\n      retval.stop = input.LT(-1);\n\n      retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n      adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n    }\n    catch (RecognitionException re) {\n      reportError(re);\n      recover(input,re);\n      retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n    }\n    finally {\n      // do for sure before leaving\n    }\n    return retval;\n  }\n  // $ANTLR end \"primary\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d23d4828afa583ebf35b4a541763af6206133458":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2":["3623d67605fbbdfce2fadea678e2f4bbe2ab2310"],"f18d4e1cdc7330101ca433af5e8564dfd894f2bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d1441eba4282a646ef88d12acb797483db37554e":["68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2"],"8d639dc27b5b3eae561ef321b06f3cad9280c529":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c":["8d639dc27b5b3eae561ef321b06f3cad9280c529"],"3623d67605fbbdfce2fadea678e2f4bbe2ab2310":["f18d4e1cdc7330101ca433af5e8564dfd894f2bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d23d4828afa583ebf35b4a541763af6206133458"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d1441eba4282a646ef88d12acb797483db37554e"]},"commit2Childs":{"d23d4828afa583ebf35b4a541763af6206133458":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2":["d1441eba4282a646ef88d12acb797483db37554e"],"f18d4e1cdc7330101ca433af5e8564dfd894f2bf":["3623d67605fbbdfce2fadea678e2f4bbe2ab2310"],"d1441eba4282a646ef88d12acb797483db37554e":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"8d639dc27b5b3eae561ef321b06f3cad9280c529":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f18d4e1cdc7330101ca433af5e8564dfd894f2bf","5f0e44787cffbb978aa2182761e3f9b184545a1e"],"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c":["d23d4828afa583ebf35b4a541763af6206133458"],"3623d67605fbbdfce2fadea678e2f4bbe2ab2310":["68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["8d639dc27b5b3eae561ef321b06f3cad9280c529"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}