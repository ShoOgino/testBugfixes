{"path":"lucene/core/src/java/org/apache/lucene/search/SynonymQuery.Builder#addTerm(Term,float).mjava","commits":[{"id":"df25592b82060bc1c800e87bf019444bf0ddf9d4","date":1552296011,"type":0,"author":"jimczi","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SynonymQuery.Builder#addTerm(Term,float).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Adds the provided {@code term} as a synonym, document frequencies of this term\n     * will be boosted by {@code boost}.\n     */\n    public Builder addTerm(Term term, float boost) {\n      if (field.equals(term.field()) == false) {\n        throw new IllegalArgumentException(\"Synonyms must be across the same field\");\n      }\n      if (Float.isNaN(boost) || Float.compare(boost, 0f) <= 0 || Float.compare(boost, 1f) > 0) {\n        throw new IllegalArgumentException(\"boost must be a positive float between 0 (exclusive) and 1 (inclusive)\");\n      }\n      terms.add(new TermAndBoost(term, boost));\n      if (terms.size() > BooleanQuery.getMaxClauseCount()) {\n        throw new BooleanQuery.TooManyClauses();\n      }\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36c70eb3b44de4355a7168b762cadc0f1cf194bc","date":1561542955,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SynonymQuery.Builder#addTerm(Term,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SynonymQuery.Builder#addTerm(Term,float).mjava","sourceNew":"    /**\n     * Adds the provided {@code term} as a synonym, document frequencies of this term\n     * will be boosted by {@code boost}.\n     */\n    public Builder addTerm(Term term, float boost) {\n      if (field.equals(term.field()) == false) {\n        throw new IllegalArgumentException(\"Synonyms must be across the same field\");\n      }\n      if (Float.isNaN(boost) || Float.compare(boost, 0f) <= 0 || Float.compare(boost, 1f) > 0) {\n        throw new IllegalArgumentException(\"boost must be a positive float between 0 (exclusive) and 1 (inclusive)\");\n      }\n      terms.add(new TermAndBoost(term, boost));\n      if (terms.size() > IndexSearcher.getMaxClauseCount()) {\n        throw new IndexSearcher.TooManyClauses();\n      }\n      return this;\n    }\n\n","sourceOld":"    /**\n     * Adds the provided {@code term} as a synonym, document frequencies of this term\n     * will be boosted by {@code boost}.\n     */\n    public Builder addTerm(Term term, float boost) {\n      if (field.equals(term.field()) == false) {\n        throw new IllegalArgumentException(\"Synonyms must be across the same field\");\n      }\n      if (Float.isNaN(boost) || Float.compare(boost, 0f) <= 0 || Float.compare(boost, 1f) > 0) {\n        throw new IllegalArgumentException(\"boost must be a positive float between 0 (exclusive) and 1 (inclusive)\");\n      }\n      terms.add(new TermAndBoost(term, boost));\n      if (terms.size() > BooleanQuery.getMaxClauseCount()) {\n        throw new BooleanQuery.TooManyClauses();\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"df25592b82060bc1c800e87bf019444bf0ddf9d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"36c70eb3b44de4355a7168b762cadc0f1cf194bc":["df25592b82060bc1c800e87bf019444bf0ddf9d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["36c70eb3b44de4355a7168b762cadc0f1cf194bc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["df25592b82060bc1c800e87bf019444bf0ddf9d4"],"df25592b82060bc1c800e87bf019444bf0ddf9d4":["36c70eb3b44de4355a7168b762cadc0f1cf194bc"],"36c70eb3b44de4355a7168b762cadc0f1cf194bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}