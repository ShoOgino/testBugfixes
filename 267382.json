{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingTermVectorsFormat.AssertingTermVectorsWriter#finish(FieldInfos,int).mjava","commits":[{"id":"fc7a7bb1aa79cf53564793bb5ffa270250c679da","date":1357817084,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingTermVectorsFormat.AssertingTermVectorsWriter#finish(FieldInfos,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void finish(FieldInfos fis, int numDocs) throws IOException {\n      assert docStatus == (numDocs > 0 ? Status.FINISHED : Status.UNDEFINED);\n      assert fieldStatus != Status.STARTED;\n      assert termStatus != Status.STARTED;\n      in.finish(fis, numDocs);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingTermVectorsFormat.AssertingTermVectorsWriter#finish(FieldInfos,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void finish(FieldInfos fis, int numDocs) throws IOException {\n      assert docStatus == (numDocs > 0 ? Status.FINISHED : Status.UNDEFINED);\n      assert fieldStatus != Status.STARTED;\n      assert termStatus != Status.STARTED;\n      in.finish(fis, numDocs);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bae90027d0d714cdac6614a01356b920289e57a","date":1360845294,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingTermVectorsFormat.AssertingTermVectorsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingTermVectorsFormat.AssertingTermVectorsWriter#finish(FieldInfos,int).mjava","sourceNew":"    @Override\n    public void finish(FieldInfos fis, int numDocs) throws IOException {\n      assert docCount == numDocs;\n      assert docStatus == (numDocs > 0 ? Status.FINISHED : Status.UNDEFINED);\n      assert fieldStatus != Status.STARTED;\n      assert termStatus != Status.STARTED;\n      in.finish(fis, numDocs);\n    }\n\n","sourceOld":"    @Override\n    public void finish(FieldInfos fis, int numDocs) throws IOException {\n      assert docStatus == (numDocs > 0 ? Status.FINISHED : Status.UNDEFINED);\n      assert fieldStatus != Status.STARTED;\n      assert termStatus != Status.STARTED;\n      in.finish(fis, numDocs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b41f996b22bd5518650f897d050088ff808ec03","date":1360969107,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingTermVectorsFormat.AssertingTermVectorsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingTermVectorsFormat.AssertingTermVectorsWriter#finish(FieldInfos,int).mjava","sourceNew":"    @Override\n    public void finish(FieldInfos fis, int numDocs) throws IOException {\n      assert docCount == numDocs;\n      assert docStatus == (numDocs > 0 ? Status.FINISHED : Status.UNDEFINED);\n      assert fieldStatus != Status.STARTED;\n      assert termStatus != Status.STARTED;\n      in.finish(fis, numDocs);\n    }\n\n","sourceOld":"    @Override\n    public void finish(FieldInfos fis, int numDocs) throws IOException {\n      assert docStatus == (numDocs > 0 ? Status.FINISHED : Status.UNDEFINED);\n      assert fieldStatus != Status.STARTED;\n      assert termStatus != Status.STARTED;\n      in.finish(fis, numDocs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3bae90027d0d714cdac6614a01356b920289e57a":["fc7a7bb1aa79cf53564793bb5ffa270250c679da"],"3b41f996b22bd5518650f897d050088ff808ec03":["fc7a7bb1aa79cf53564793bb5ffa270250c679da","3bae90027d0d714cdac6614a01356b920289e57a"],"fc7a7bb1aa79cf53564793bb5ffa270250c679da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fc7a7bb1aa79cf53564793bb5ffa270250c679da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3bae90027d0d714cdac6614a01356b920289e57a"]},"commit2Childs":{"3bae90027d0d714cdac6614a01356b920289e57a":["3b41f996b22bd5518650f897d050088ff808ec03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3b41f996b22bd5518650f897d050088ff808ec03":[],"fc7a7bb1aa79cf53564793bb5ffa270250c679da":["3bae90027d0d714cdac6614a01356b920289e57a","3b41f996b22bd5518650f897d050088ff808ec03","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fc7a7bb1aa79cf53564793bb5ffa270250c679da","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3b41f996b22bd5518650f897d050088ff808ec03","4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}