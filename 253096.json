{"path":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","commits":[{"id":"6066dbe072ec5334ff5824f474e9d3abd1620fb7","date":1278709584,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void readHeader(IndexInput in) throws IOException {\n    CodecUtil.checkHeader(in, AppendingTermsDictWriter.CODEC_NAME, StandardTermsDictWriter.VERSION_CURRENT);    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0cd8367c3d48e4b63dee1895a261d4986c716bbb","date":1279637747,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","sourceNew":"  @Override\n  protected void readHeader(IndexInput in) throws IOException {\n    CodecUtil.checkHeader(in, AppendingTermsDictWriter.CODEC_NAME,\n      StandardTermsDictWriter.VERSION_START, StandardTermsDictWriter.VERSION_CURRENT);    \n  }\n\n","sourceOld":"  @Override\n  protected void readHeader(IndexInput in) throws IOException {\n    CodecUtil.checkHeader(in, AppendingTermsDictWriter.CODEC_NAME, StandardTermsDictWriter.VERSION_CURRENT);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void readHeader(IndexInput in) throws IOException {\n    CodecUtil.checkHeader(in, AppendingTermsDictWriter.CODEC_NAME,\n      StandardTermsDictWriter.VERSION_START, StandardTermsDictWriter.VERSION_CURRENT);    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99cf56f3a650b908f7017a72f9d23940418f8a52","date":1284891529,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","sourceNew":"  @Override\n  protected void readHeader(IndexInput in) throws IOException {\n    CodecUtil.checkHeader(in, AppendingTermsDictWriter.CODEC_NAME,\n      PrefixCodedTermsWriter.VERSION_START, PrefixCodedTermsWriter.VERSION_CURRENT);    \n  }\n\n","sourceOld":"  @Override\n  protected void readHeader(IndexInput in) throws IOException {\n    CodecUtil.checkHeader(in, AppendingTermsDictWriter.CODEC_NAME,\n      StandardTermsDictWriter.VERSION_START, StandardTermsDictWriter.VERSION_CURRENT);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","sourceNew":"  @Override\n  protected void readHeader(IndexInput in) throws IOException {\n    CodecUtil.checkHeader(in, AppendingTermsDictWriter.CODEC_NAME,\n      PrefixCodedTermsWriter.VERSION_START, PrefixCodedTermsWriter.VERSION_CURRENT);    \n  }\n\n","sourceOld":"  @Override\n  protected void readHeader(IndexInput in) throws IOException {\n    CodecUtil.checkHeader(in, AppendingTermsDictWriter.CODEC_NAME,\n      StandardTermsDictWriter.VERSION_START, StandardTermsDictWriter.VERSION_CURRENT);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","sourceNew":"  @Override\n  protected void readHeader(IndexInput in) throws IOException {\n    CodecUtil.checkHeader(in, AppendingTermsDictWriter.CODEC_NAME,\n      BlockTermsWriter.VERSION_START, BlockTermsWriter.VERSION_CURRENT);    \n  }\n\n","sourceOld":"  @Override\n  protected void readHeader(IndexInput in) throws IOException {\n    CodecUtil.checkHeader(in, AppendingTermsDictWriter.CODEC_NAME,\n      PrefixCodedTermsWriter.VERSION_START, PrefixCodedTermsWriter.VERSION_CURRENT);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","sourceNew":"  @Override\n  protected void readHeader(IndexInput in) throws IOException {\n    CodecUtil.checkHeader(in, AppendingTermsDictWriter.CODEC_NAME,\n      BlockTermsWriter.VERSION_START, BlockTermsWriter.VERSION_CURRENT);    \n  }\n\n","sourceOld":"  @Override\n  protected void readHeader(IndexInput in) throws IOException {\n    CodecUtil.checkHeader(in, AppendingTermsDictWriter.CODEC_NAME,\n      PrefixCodedTermsWriter.VERSION_START, PrefixCodedTermsWriter.VERSION_CURRENT);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","sourceNew":"  @Override\n  protected void readHeader(IndexInput in) throws IOException {\n    CodecUtil.checkHeader(in, AppendingTermsDictWriter.CODEC_NAME,\n      BlockTermsWriter.VERSION_START, BlockTermsWriter.VERSION_CURRENT);    \n  }\n\n","sourceOld":"  @Override\n  protected void readHeader(IndexInput in) throws IOException {\n    CodecUtil.checkHeader(in, AppendingTermsDictWriter.CODEC_NAME,\n      PrefixCodedTermsWriter.VERSION_START, PrefixCodedTermsWriter.VERSION_CURRENT);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9eda19c7aeddd50f2d8bc261c8567cdeb7f094d7","date":1323207588,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","sourceNew":"  @Override\n  protected void readHeader(IndexInput in) throws IOException {\n    CodecUtil.checkHeader(in, AppendingTermsDictWriter.CODEC_NAME,\n      BlockTermsWriter.VERSION_START, BlockTermsWriter.VERSION_CURRENT);    \n  }\n\n","sourceOld":"  @Override\n  protected void readHeader(IndexInput in) throws IOException {\n    CodecUtil.checkHeader(in, AppendingTermsDictWriter.CODEC_NAME,\n      BlockTermsWriter.VERSION_START, BlockTermsWriter.VERSION_CURRENT);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"929d416aad35e36f2d2743c625e05e23908e7563","date":1323209095,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsDictReader#readHeader(IndexInput).mjava","sourceNew":"  @Override\n  protected void readHeader(IndexInput in) throws IOException {\n    CodecUtil.checkHeader(in, AppendingTermsDictWriter.CODEC_NAME,\n      BlockTermsWriter.VERSION_START, BlockTermsWriter.VERSION_CURRENT);    \n  }\n\n","sourceOld":"  @Override\n  protected void readHeader(IndexInput in) throws IOException {\n    CodecUtil.checkHeader(in, AppendingTermsDictWriter.CODEC_NAME,\n      BlockTermsWriter.VERSION_START, BlockTermsWriter.VERSION_CURRENT);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"929d416aad35e36f2d2743c625e05e23908e7563":["b1add9ddc0005b07550d4350720aac22dc9886b3","9eda19c7aeddd50f2d8bc261c8567cdeb7f094d7"],"6066dbe072ec5334ff5824f474e9d3abd1620fb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["99cf56f3a650b908f7017a72f9d23940418f8a52","b1add9ddc0005b07550d4350720aac22dc9886b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0cd8367c3d48e4b63dee1895a261d4986c716bbb":["6066dbe072ec5334ff5824f474e9d3abd1620fb7"],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0cd8367c3d48e4b63dee1895a261d4986c716bbb"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["99cf56f3a650b908f7017a72f9d23940418f8a52"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","99cf56f3a650b908f7017a72f9d23940418f8a52"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b1add9ddc0005b07550d4350720aac22dc9886b3"],"9eda19c7aeddd50f2d8bc261c8567cdeb7f094d7":["b1add9ddc0005b07550d4350720aac22dc9886b3"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["0cd8367c3d48e4b63dee1895a261d4986c716bbb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9eda19c7aeddd50f2d8bc261c8567cdeb7f094d7"]},"commit2Childs":{"929d416aad35e36f2d2743c625e05e23908e7563":[],"6066dbe072ec5334ff5824f474e9d3abd1620fb7":["0cd8367c3d48e4b63dee1895a261d4986c716bbb"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6066dbe072ec5334ff5824f474e9d3abd1620fb7","5f4e87790277826a2aea119328600dfb07761f32"],"0cd8367c3d48e4b63dee1895a261d4986c716bbb":["5f4e87790277826a2aea119328600dfb07761f32","99cf56f3a650b908f7017a72f9d23940418f8a52"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["929d416aad35e36f2d2743c625e05e23908e7563","29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","9eda19c7aeddd50f2d8bc261c8567cdeb7f094d7"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"9eda19c7aeddd50f2d8bc261c8567cdeb7f094d7":["929d416aad35e36f2d2743c625e05e23908e7563","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["29ef99d61cda9641b6250bf9567329a6e65f901d","b1add9ddc0005b07550d4350720aac22dc9886b3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["929d416aad35e36f2d2743c625e05e23908e7563","29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}