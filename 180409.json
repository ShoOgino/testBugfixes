{"path":"lucene/backwards/src/java/org/apache/lucene/index/PositionBasedTermVectorMapper#setExpectations(String,int,boolean,boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/PositionBasedTermVectorMapper#setExpectations(String,int,boolean,boolean).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/PositionBasedTermVectorMapper#setExpectations(String,int,boolean,boolean).mjava","sourceNew":"  /**\n   * Callback mechanism used by the TermVectorReader\n   * @param field  The field being read\n   * @param numTerms The number of terms in the vector\n   * @param storeOffsets Whether offsets are available\n   * @param storePositions Whether positions are available\n   */\n  @Override\n  public void setExpectations(String field, int numTerms, boolean storeOffsets, boolean storePositions) {\n    if (storePositions == false)\n    {\n      throw new RuntimeException(\"You must store positions in order to use this Mapper\");\n    }\n    if (storeOffsets == true)\n    {\n      //ignoring offsets\n    }\n    fieldToTerms = new HashMap<String,Map<Integer,TVPositionInfo>>(numTerms);\n    this.storeOffsets = storeOffsets;\n    currentField = field;\n    currentPositions = new HashMap<Integer,TVPositionInfo>();\n    fieldToTerms.put(currentField, currentPositions);\n  }\n\n","sourceOld":"  /**\n   * Callback mechanism used by the TermVectorReader\n   * @param field  The field being read\n   * @param numTerms The number of terms in the vector\n   * @param storeOffsets Whether offsets are available\n   * @param storePositions Whether positions are available\n   */\n  @Override\n  public void setExpectations(String field, int numTerms, boolean storeOffsets, boolean storePositions) {\n    if (storePositions == false)\n    {\n      throw new RuntimeException(\"You must store positions in order to use this Mapper\");\n    }\n    if (storeOffsets == true)\n    {\n      //ignoring offsets\n    }\n    fieldToTerms = new HashMap<String,Map<Integer,TVPositionInfo>>(numTerms);\n    this.storeOffsets = storeOffsets;\n    currentField = field;\n    currentPositions = new HashMap<Integer,TVPositionInfo>();\n    fieldToTerms.put(currentField, currentPositions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/index/PositionBasedTermVectorMapper#setExpectations(String,int,boolean,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Callback mechanism used by the TermVectorReader\n   * @param field  The field being read\n   * @param numTerms The number of terms in the vector\n   * @param storeOffsets Whether offsets are available\n   * @param storePositions Whether positions are available\n   */\n  @Override\n  public void setExpectations(String field, int numTerms, boolean storeOffsets, boolean storePositions) {\n    if (storePositions == false)\n    {\n      throw new RuntimeException(\"You must store positions in order to use this Mapper\");\n    }\n    if (storeOffsets == true)\n    {\n      //ignoring offsets\n    }\n    fieldToTerms = new HashMap<String,Map<Integer,TVPositionInfo>>(numTerms);\n    this.storeOffsets = storeOffsets;\n    currentField = field;\n    currentPositions = new HashMap<Integer,TVPositionInfo>();\n    fieldToTerms.put(currentField, currentPositions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}