{"path":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#testNesting2().mjava","commits":[{"id":"a11f5eaf4fe6bafe41b09a57c4598f8309943377","date":1524738462,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#testNesting2().mjava","pathOld":"/dev/null","sourceNew":"  public void testNesting2() throws IOException {\n    checkIntervals(\n        Intervals.unordered(\n            Intervals.ordered(\n                Intervals.term(\"like\"),\n                Intervals.term(\"it\"),\n                Intervals.term(\"cold\")\n            ),\n            Intervals.term(\"pease\")\n        ),\n        \"field1\", 2, new int[][]{\n            {},\n            {6, 21},\n            {6, 17},\n            {},\n            {},\n            {}\n        });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2375622520a4e480775e3104a2f9a423536755b4","date":1536005521,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#testNesting2().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#testNesting2().mjava","sourceNew":"  public void testNesting2() throws IOException {\n    IntervalsSource source = Intervals.unordered(\n        Intervals.ordered(\n            Intervals.term(\"like\"),\n            Intervals.term(\"it\"),\n            Intervals.term(\"cold\")\n        ),\n        Intervals.term(\"pease\")\n    );\n    checkIntervals(source, \"field1\", 2, new int[][]{\n            {},\n            {6, 21},\n            {6, 17},\n            {},\n            {},\n            {}\n        });\n    assertNull(getMatches(source, 0, \"field1\"));\n    MatchesIterator it = getMatches(source, 1, \"field1\");\n    assertMatch(it, 6, 21, 41, 118);\n    MatchesIterator sub = it.getSubMatches();\n    assertMatch(sub, 6, 6, 41, 46);\n    assertMatch(sub, 19, 19, 106, 110);\n    assertMatch(sub, 20, 20, 111, 113);\n    assertMatch(sub, 21, 21, 114, 118);\n    assertFalse(sub.next());\n    assertFalse(it.next());\n  }\n\n","sourceOld":"  public void testNesting2() throws IOException {\n    checkIntervals(\n        Intervals.unordered(\n            Intervals.ordered(\n                Intervals.term(\"like\"),\n                Intervals.term(\"it\"),\n                Intervals.term(\"cold\")\n            ),\n            Intervals.term(\"pease\")\n        ),\n        \"field1\", 2, new int[][]{\n            {},\n            {6, 21},\n            {6, 17},\n            {},\n            {},\n            {}\n        });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"362cb5d910af28f1dadaddc4c7670d7d166b23c2","date":1547647156,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#testNesting2().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#testNesting2().mjava","sourceNew":"  public void testNesting2() throws IOException {\n    IntervalsSource source = Intervals.unordered(\n        Intervals.ordered(\n            Intervals.term(\"like\"),\n            Intervals.term(\"it\"),\n            Intervals.term(\"cold\")\n        ),\n        Intervals.term(\"pease\")\n    );\n    checkIntervals(source, \"field1\", 2, new int[][]{\n            {},\n            {6, 21},\n            {6, 17},\n            {},\n            {},\n            {}\n        });\n    assertNull(getMatches(source, 0, \"field1\"));\n    MatchesIterator it = getMatches(source, 1, \"field1\");\n    assertMatch(it, 6, 21, 41, 118);\n    MatchesIterator sub = it.getSubMatches();\n    assertMatch(sub, 6, 6, 41, 46);\n    assertMatch(sub, 19, 19, 106, 110);\n    assertMatch(sub, 20, 20, 111, 113);\n    assertMatch(sub, 21, 21, 114, 118);\n    assertFalse(sub.next());\n    assertFalse(it.next());\n    assertEquals(4, source.minExtent());\n  }\n\n","sourceOld":"  public void testNesting2() throws IOException {\n    IntervalsSource source = Intervals.unordered(\n        Intervals.ordered(\n            Intervals.term(\"like\"),\n            Intervals.term(\"it\"),\n            Intervals.term(\"cold\")\n        ),\n        Intervals.term(\"pease\")\n    );\n    checkIntervals(source, \"field1\", 2, new int[][]{\n            {},\n            {6, 21},\n            {6, 17},\n            {},\n            {},\n            {}\n        });\n    assertNull(getMatches(source, 0, \"field1\"));\n    MatchesIterator it = getMatches(source, 1, \"field1\");\n    assertMatch(it, 6, 21, 41, 118);\n    MatchesIterator sub = it.getSubMatches();\n    assertMatch(sub, 6, 6, 41, 46);\n    assertMatch(sub, 19, 19, 106, 110);\n    assertMatch(sub, 20, 20, 111, 113);\n    assertMatch(sub, 21, 21, 114, 118);\n    assertFalse(sub.next());\n    assertFalse(it.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/intervals/TestIntervals#testNesting2().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#testNesting2().mjava","sourceNew":"  public void testNesting2() throws IOException {\n    IntervalsSource source = Intervals.unordered(\n        Intervals.ordered(\n            Intervals.term(\"like\"),\n            Intervals.term(\"it\"),\n            Intervals.term(\"cold\")\n        ),\n        Intervals.term(\"pease\")\n    );\n    checkIntervals(source, \"field1\", 2, new int[][]{\n            {},\n            {6, 21},\n            {6, 17},\n            {},\n            {},\n            {}\n        });\n    assertNull(getMatches(source, 0, \"field1\"));\n    MatchesIterator it = getMatches(source, 1, \"field1\");\n    assertMatch(it, 6, 21, 41, 118);\n    MatchesIterator sub = it.getSubMatches();\n    assertMatch(sub, 6, 6, 41, 46);\n    assertMatch(sub, 19, 19, 106, 110);\n    assertMatch(sub, 20, 20, 111, 113);\n    assertMatch(sub, 21, 21, 114, 118);\n    assertFalse(sub.next());\n    assertFalse(it.next());\n    assertEquals(4, source.minExtent());\n  }\n\n","sourceOld":"  public void testNesting2() throws IOException {\n    IntervalsSource source = Intervals.unordered(\n        Intervals.ordered(\n            Intervals.term(\"like\"),\n            Intervals.term(\"it\"),\n            Intervals.term(\"cold\")\n        ),\n        Intervals.term(\"pease\")\n    );\n    checkIntervals(source, \"field1\", 2, new int[][]{\n            {},\n            {6, 21},\n            {6, 17},\n            {},\n            {},\n            {}\n        });\n    assertNull(getMatches(source, 0, \"field1\"));\n    MatchesIterator it = getMatches(source, 1, \"field1\");\n    assertMatch(it, 6, 21, 41, 118);\n    MatchesIterator sub = it.getSubMatches();\n    assertMatch(sub, 6, 6, 41, 46);\n    assertMatch(sub, 19, 19, 106, 110);\n    assertMatch(sub, 20, 20, 111, 113);\n    assertMatch(sub, 21, 21, 114, 118);\n    assertFalse(sub.next());\n    assertFalse(it.next());\n    assertEquals(4, source.minExtent());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["362cb5d910af28f1dadaddc4c7670d7d166b23c2"],"a11f5eaf4fe6bafe41b09a57c4598f8309943377":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"362cb5d910af28f1dadaddc4c7670d7d166b23c2":["2375622520a4e480775e3104a2f9a423536755b4"],"2375622520a4e480775e3104a2f9a423536755b4":["a11f5eaf4fe6bafe41b09a57c4598f8309943377"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a11f5eaf4fe6bafe41b09a57c4598f8309943377":["2375622520a4e480775e3104a2f9a423536755b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a11f5eaf4fe6bafe41b09a57c4598f8309943377"],"362cb5d910af28f1dadaddc4c7670d7d166b23c2":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"2375622520a4e480775e3104a2f9a423536755b4":["362cb5d910af28f1dadaddc4c7670d7d166b23c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}