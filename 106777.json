{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeCommonPrefixes(DataOutput,int[],byte[]).mjava","commits":[{"id":"c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9","date":1481155163,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeCommonPrefixes(DataOutput,int[],byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeCommonPrefixes(IndexOutput,int[],byte[]).mjava","sourceNew":"  private void writeCommonPrefixes(DataOutput out, int[] commonPrefixes, byte[] packedValue) throws IOException {\n    for(int dim=0;dim<numDims;dim++) {\n      out.writeVInt(commonPrefixes[dim]);\n      //System.out.println(commonPrefixes[dim] + \" of \" + bytesPerDim);\n      out.writeBytes(packedValue, dim*bytesPerDim, commonPrefixes[dim]);\n    }\n  }\n\n","sourceOld":"  private void writeCommonPrefixes(IndexOutput out, int[] commonPrefixes, byte[] packedValue) throws IOException {\n    for(int dim=0;dim<numDims;dim++) {\n      out.writeVInt(commonPrefixes[dim]);\n      //System.out.println(commonPrefixes[dim] + \" of \" + bytesPerDim);\n      out.writeBytes(packedValue, dim*bytesPerDim, commonPrefixes[dim]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeCommonPrefixes(DataOutput,int[],byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeCommonPrefixes(IndexOutput,int[],byte[]).mjava","sourceNew":"  private void writeCommonPrefixes(DataOutput out, int[] commonPrefixes, byte[] packedValue) throws IOException {\n    for(int dim=0;dim<numDims;dim++) {\n      out.writeVInt(commonPrefixes[dim]);\n      //System.out.println(commonPrefixes[dim] + \" of \" + bytesPerDim);\n      out.writeBytes(packedValue, dim*bytesPerDim, commonPrefixes[dim]);\n    }\n  }\n\n","sourceOld":"  protected void writeCommonPrefixes(IndexOutput out, int[] commonPrefixes, byte[] packedValue) throws IOException {\n    for(int dim=0;dim<numDims;dim++) {\n      out.writeVInt(commonPrefixes[dim]);\n      //System.out.println(commonPrefixes[dim] + \" of \" + bytesPerDim);\n      out.writeBytes(packedValue, dim*bytesPerDim, commonPrefixes[dim]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6652c943595e92c187ee904c382863013eae28f","date":1539042663,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeCommonPrefixes(DataOutput,int[],byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeCommonPrefixes(DataOutput,int[],byte[]).mjava","sourceNew":"  private void writeCommonPrefixes(DataOutput out, int[] commonPrefixes, byte[] packedValue) throws IOException {\n    for(int dim=0;dim<numDataDims;dim++) {\n      out.writeVInt(commonPrefixes[dim]);\n      //System.out.println(commonPrefixes[dim] + \" of \" + bytesPerDim);\n      out.writeBytes(packedValue, dim*bytesPerDim, commonPrefixes[dim]);\n    }\n  }\n\n","sourceOld":"  private void writeCommonPrefixes(DataOutput out, int[] commonPrefixes, byte[] packedValue) throws IOException {\n    for(int dim=0;dim<numDims;dim++) {\n      out.writeVInt(commonPrefixes[dim]);\n      //System.out.println(commonPrefixes[dim] + \" of \" + bytesPerDim);\n      out.writeBytes(packedValue, dim*bytesPerDim, commonPrefixes[dim]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb94bf667d51f9c390c99d97afb36b7caab6b6e9","date":1599548621,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeCommonPrefixes(DataOutput,int[],byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeCommonPrefixes(DataOutput,int[],byte[]).mjava","sourceNew":"  private void writeCommonPrefixes(DataOutput out, int[] commonPrefixes, byte[] packedValue) throws IOException {\n    for(int dim=0;dim<config.numDims;dim++) {\n      out.writeVInt(commonPrefixes[dim]);\n      //System.out.println(commonPrefixes[dim] + \" of \" + config.bytesPerDim);\n      out.writeBytes(packedValue, dim*config.bytesPerDim, commonPrefixes[dim]);\n    }\n  }\n\n","sourceOld":"  private void writeCommonPrefixes(DataOutput out, int[] commonPrefixes, byte[] packedValue) throws IOException {\n    for(int dim=0;dim<numDataDims;dim++) {\n      out.writeVInt(commonPrefixes[dim]);\n      //System.out.println(commonPrefixes[dim] + \" of \" + bytesPerDim);\n      out.writeBytes(packedValue, dim*bytesPerDim, commonPrefixes[dim]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["f6652c943595e92c187ee904c382863013eae28f"],"f6652c943595e92c187ee904c382863013eae28f":["c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9856095f7afb5a607bf5e65077615ed91273508c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"],"c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f6652c943595e92c187ee904c382863013eae28f":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9856095f7afb5a607bf5e65077615ed91273508c","c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9":["f6652c943595e92c187ee904c382863013eae28f","9856095f7afb5a607bf5e65077615ed91273508c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}