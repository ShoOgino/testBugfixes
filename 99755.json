{"path":"lucene/facet/src/java/org/apache/lucene/facet/index/params/DefaultFacetIndexingParams#hashCode().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/DefaultFacetIndexingParams#hashCode().mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/index/params/DefaultFacetIndexingParams#hashCode().mjava","sourceNew":"  /* (non-Javadoc)\n   * @see java.lang.Object#hashCode()\n   */\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result\n        + ((clpParams == null) ? 0 : clpParams.hashCode());\n    result = prime * result\n        + ((ordinalPolicy == null) ? 0 : ordinalPolicy.hashCode());\n    result = prime * result + partitionSize;\n    result = prime * result\n        + ((pathPolicy == null) ? 0 : pathPolicy.hashCode());\n    \n    for (CategoryListParams clp: getAllCategoryListParams()) {\n      result ^= clp.hashCode();\n    }\n    \n    return result;\n  }\n\n","sourceOld":"  /* (non-Javadoc)\n   * @see java.lang.Object#hashCode()\n   */\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result\n        + ((clpParams == null) ? 0 : clpParams.hashCode());\n    result = prime * result\n        + ((ordinalPolicy == null) ? 0 : ordinalPolicy.hashCode());\n    result = prime * result + partitionSize;\n    result = prime * result\n        + ((pathPolicy == null) ? 0 : pathPolicy.hashCode());\n    \n    for (CategoryListParams clp: getAllCategoryListParams()) {\n      result ^= clp.hashCode();\n    }\n    \n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4c6c7f3cda7a0595cabd16e5e9107ca29852708","date":1355402234,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#hashCode().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/DefaultFacetIndexingParams#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((clParams == null) ? 0 : clParams.hashCode());\n    result = prime * result + ((ordinalPolicy == null) ? 0 : ordinalPolicy.hashCode());\n    result = prime * result + partitionSize;\n    result = prime * result + ((pathPolicy == null) ? 0 : pathPolicy.hashCode());\n    \n    for (CategoryListParams clp : getAllCategoryListParams()) {\n      result ^= clp.hashCode();\n    }\n    \n    return result;\n  }\n\n","sourceOld":"  /* (non-Javadoc)\n   * @see java.lang.Object#hashCode()\n   */\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result\n        + ((clpParams == null) ? 0 : clpParams.hashCode());\n    result = prime * result\n        + ((ordinalPolicy == null) ? 0 : ordinalPolicy.hashCode());\n    result = prime * result + partitionSize;\n    result = prime * result\n        + ((pathPolicy == null) ? 0 : pathPolicy.hashCode());\n    \n    for (CategoryListParams clp: getAllCategoryListParams()) {\n      result ^= clp.hashCode();\n    }\n    \n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/DefaultFacetIndexingParams#hashCode().mjava","sourceNew":null,"sourceOld":"  /* (non-Javadoc)\n   * @see java.lang.Object#hashCode()\n   */\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result\n        + ((clpParams == null) ? 0 : clpParams.hashCode());\n    result = prime * result\n        + ((ordinalPolicy == null) ? 0 : ordinalPolicy.hashCode());\n    result = prime * result + partitionSize;\n    result = prime * result\n        + ((pathPolicy == null) ? 0 : pathPolicy.hashCode());\n    \n    for (CategoryListParams clp: getAllCategoryListParams()) {\n      result ^= clp.hashCode();\n    }\n    \n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4c6c7f3cda7a0595cabd16e5e9107ca29852708"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}