{"path":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/core/nodes/TestQueryNode#testAddChildren().mjava","commits":[{"id":"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","date":1310612214,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/core/nodes/TestQueryNode#testAddChildren().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/core/nodes/TestQueryNode#testAddChildren().mjava","sourceNew":"  /* LUCENE-2227 bug in QueryNodeImpl.add() */\n  public void testAddChildren() throws Exception {\n    QueryNode nodeA = new FieldQueryNode(\"foo\", \"A\", 0, 1);\n    QueryNode nodeB = new FieldQueryNode(\"foo\", \"B\", 1, 2);\n    BooleanQueryNode bq = new BooleanQueryNode(\n        Arrays.asList(nodeA));\n    bq.add(Arrays.asList(nodeB));\n    assertEquals(2, bq.getChildren().size());\n  }\n\n","sourceOld":"  /* LUCENE-2227 bug in QueryNodeImpl.add() */\n  public void testAddChildren() throws Exception {\n    QueryNode nodeA = new FieldQueryNode(\"foo\", \"A\", 0, 1);\n    QueryNode nodeB = new FieldQueryNode(\"foo\", \"B\", 1, 2);\n    BooleanQueryNode bq = new BooleanQueryNode(\n        Arrays.asList(nodeA));\n    bq.add(Arrays.asList(nodeB));\n    assertEquals(2, bq.getChildren().size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/core/nodes/TestQueryNode#testAddChildren().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/core/nodes/TestQueryNode#testAddChildren().mjava","sourceNew":"  /* LUCENE-2227 bug in QueryNodeImpl.add() */\n  public void testAddChildren() throws Exception {\n    QueryNode nodeA = new FieldQueryNode(\"foo\", \"A\", 0, 1);\n    QueryNode nodeB = new FieldQueryNode(\"foo\", \"B\", 1, 2);\n    BooleanQueryNode bq = new BooleanQueryNode(\n        Arrays.asList(nodeA));\n    bq.add(Arrays.asList(nodeB));\n    assertEquals(2, bq.getChildren().size());\n  }\n\n","sourceOld":"  /* LUCENE-2227 bug in QueryNodeImpl.add() */\n  public void testAddChildren() throws Exception {\n    QueryNode nodeA = new FieldQueryNode(\"foo\", \"A\", 0, 1);\n    QueryNode nodeB = new FieldQueryNode(\"foo\", \"B\", 1, 2);\n    BooleanQueryNode bq = new BooleanQueryNode(\n        Arrays.asList(nodeA));\n    bq.add(Arrays.asList(nodeB));\n    assertEquals(2, bq.getChildren().size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}