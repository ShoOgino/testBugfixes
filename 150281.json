{"path":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest.CloudJettyRunner#CloudJettyRunner(JettySolrRunner,Replica,String,String,String).mjava","commits":[{"id":"86290366cefc1b9d4eced13b430858c4a4c0421d","date":1432321109,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest.CloudJettyRunner#CloudJettyRunner(JettySolrRunner,Replica,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"    public CloudJettyRunner(JettySolrRunner jetty, Replica replica,\n                            String collection, String shard, String coreNodeName) {\n      this.jetty = jetty;\n      this.info = replica;\n      this.collection = collection;\n\n      // we need to update the jetty's shard so that it registers itself to the right shard when restarted\n      this.shard = shard;\n      this.jetty.setShards(this.shard);\n\n      // we need to update the jetty's shard so that it registers itself under the right core name when restarted\n      this.coreNodeName = coreNodeName;\n      this.jetty.setCoreNodeName(this.coreNodeName);\n\n      this.nodeName = replica.getNodeName();\n\n      ZkCoreNodeProps coreNodeProps = new ZkCoreNodeProps(info);\n      this.url = coreNodeProps.getCoreUrl();\n\n      // strip the trailing slash as this can cause issues when executing requests\n      this.client = createNewSolrServer(this.url.substring(0, this.url.length() - 1));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"733eaf468f18297b1bcc51031353bdfdd1913bdf","date":1456928540,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest.CloudJettyRunner#CloudJettyRunner(JettySolrRunner,Replica,String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest.CloudJettyRunner#CloudJettyRunner(JettySolrRunner,Replica,String,String,String).mjava","sourceNew":"    public CloudJettyRunner(JettySolrRunner jetty, Replica replica,\n                            String collection, String shard, String coreNodeName) {\n      this.jetty = jetty;\n      this.info = replica;\n      this.collection = collection;\n      \n      Properties nodeProperties = jetty.getNodeProperties();\n\n      // we need to update the jetty's shard so that it registers itself to the right shard when restarted\n      this.shard = shard;\n      nodeProperties.setProperty(CoreDescriptor.CORE_SHARD, this.shard);\n\n      // we need to update the jetty's shard so that it registers itself under the right core name when restarted\n      this.coreNodeName = coreNodeName;\n      nodeProperties.setProperty(CoreDescriptor.CORE_NODE_NAME, this.coreNodeName);\n\n      this.nodeName = replica.getNodeName();\n\n      ZkCoreNodeProps coreNodeProps = new ZkCoreNodeProps(info);\n      this.url = coreNodeProps.getCoreUrl();\n\n      // strip the trailing slash as this can cause issues when executing requests\n      this.client = createNewSolrServer(this.url.substring(0, this.url.length() - 1));\n    }\n\n","sourceOld":"    public CloudJettyRunner(JettySolrRunner jetty, Replica replica,\n                            String collection, String shard, String coreNodeName) {\n      this.jetty = jetty;\n      this.info = replica;\n      this.collection = collection;\n\n      // we need to update the jetty's shard so that it registers itself to the right shard when restarted\n      this.shard = shard;\n      this.jetty.setShards(this.shard);\n\n      // we need to update the jetty's shard so that it registers itself under the right core name when restarted\n      this.coreNodeName = coreNodeName;\n      this.jetty.setCoreNodeName(this.coreNodeName);\n\n      this.nodeName = replica.getNodeName();\n\n      ZkCoreNodeProps coreNodeProps = new ZkCoreNodeProps(info);\n      this.url = coreNodeProps.getCoreUrl();\n\n      // strip the trailing slash as this can cause issues when executing requests\n      this.client = createNewSolrServer(this.url.substring(0, this.url.length() - 1));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest.CloudJettyRunner#CloudJettyRunner(JettySolrRunner,Replica,String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest.CloudJettyRunner#CloudJettyRunner(JettySolrRunner,Replica,String,String,String).mjava","sourceNew":"    public CloudJettyRunner(JettySolrRunner jetty, Replica replica,\n                            String collection, String shard, String coreNodeName) {\n      this.jetty = jetty;\n      this.info = replica;\n      this.collection = collection;\n      \n      Properties nodeProperties = jetty.getNodeProperties();\n\n      // we need to update the jetty's shard so that it registers itself to the right shard when restarted\n      this.shard = shard;\n      nodeProperties.setProperty(CoreDescriptor.CORE_SHARD, this.shard);\n\n      // we need to update the jetty's shard so that it registers itself under the right core name when restarted\n      this.coreNodeName = coreNodeName;\n      nodeProperties.setProperty(CoreDescriptor.CORE_NODE_NAME, this.coreNodeName);\n\n      this.nodeName = replica.getNodeName();\n\n      ZkCoreNodeProps coreNodeProps = new ZkCoreNodeProps(info);\n      this.url = coreNodeProps.getCoreUrl();\n\n      // strip the trailing slash as this can cause issues when executing requests\n      this.client = createNewSolrServer(this.url.substring(0, this.url.length() - 1));\n    }\n\n","sourceOld":"    public CloudJettyRunner(JettySolrRunner jetty, Replica replica,\n                            String collection, String shard, String coreNodeName) {\n      this.jetty = jetty;\n      this.info = replica;\n      this.collection = collection;\n\n      // we need to update the jetty's shard so that it registers itself to the right shard when restarted\n      this.shard = shard;\n      this.jetty.setShards(this.shard);\n\n      // we need to update the jetty's shard so that it registers itself under the right core name when restarted\n      this.coreNodeName = coreNodeName;\n      this.jetty.setCoreNodeName(this.coreNodeName);\n\n      this.nodeName = replica.getNodeName();\n\n      ZkCoreNodeProps coreNodeProps = new ZkCoreNodeProps(info);\n      this.url = coreNodeProps.getCoreUrl();\n\n      // strip the trailing slash as this can cause issues when executing requests\n      this.client = createNewSolrServer(this.url.substring(0, this.url.length() - 1));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7da9d8536c11576df10e348efa79d2739170936","date":1509475399,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest.CloudJettyRunner#CloudJettyRunner(JettySolrRunner,Replica,String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest.CloudJettyRunner#CloudJettyRunner(JettySolrRunner,Replica,String,String,String).mjava","sourceNew":"    public CloudJettyRunner(JettySolrRunner jetty, Replica replica,\n                            String collection, String shard, String coreNodeName) {\n      this.jetty = jetty;\n      this.info = replica;\n      this.collection = collection;\n      \n      Properties nodeProperties = jetty.getNodeProperties();\n\n      // we need to update the jetty's shard so that it registers itself to the right shard when restarted\n      this.shard = shard;\n      nodeProperties.setProperty(CoreDescriptor.CORE_SHARD, this.shard);\n\n      // we need to update the jetty's shard so that it registers itself under the right core name when restarted\n      this.coreNodeName = coreNodeName;\n      nodeProperties.setProperty(CoreDescriptor.CORE_NODE_NAME, this.coreNodeName);\n\n      this.nodeName = replica.getNodeName();\n\n      ZkCoreNodeProps coreNodeProps = new ZkCoreNodeProps(info);\n      this.url = coreNodeProps.getCoreUrl();\n\n      // strip the trailing slash as this can cause issues when executing requests\n      this.client = createNewSolrServer(this.url.substring(0, this.url.length() - 1));\n    }\n\n","sourceOld":"    public CloudJettyRunner(JettySolrRunner jetty, Replica replica,\n                            String collection, String shard, String coreNodeName) {\n      this.jetty = jetty;\n      this.info = replica;\n      this.collection = collection;\n      \n      Properties nodeProperties = jetty.getNodeProperties();\n\n      // we need to update the jetty's shard so that it registers itself to the right shard when restarted\n      this.shard = shard;\n      nodeProperties.setProperty(CoreDescriptor.CORE_SHARD, this.shard);\n\n      // we need to update the jetty's shard so that it registers itself under the right core name when restarted\n      this.coreNodeName = coreNodeName;\n      nodeProperties.setProperty(CoreDescriptor.CORE_NODE_NAME, this.coreNodeName);\n\n      this.nodeName = replica.getNodeName();\n\n      ZkCoreNodeProps coreNodeProps = new ZkCoreNodeProps(info);\n      this.url = coreNodeProps.getCoreUrl();\n\n      // strip the trailing slash as this can cause issues when executing requests\n      this.client = createNewSolrServer(this.url.substring(0, this.url.length() - 1));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d","date":1509475828,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest.CloudJettyRunner#CloudJettyRunner(JettySolrRunner,Replica,String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest.CloudJettyRunner#CloudJettyRunner(JettySolrRunner,Replica,String,String,String).mjava","sourceNew":"    public CloudJettyRunner(JettySolrRunner jetty, Replica replica,\n                            String collection, String shard, String coreNodeName) {\n      this.jetty = jetty;\n      this.info = replica;\n      this.collection = collection;\n      \n      Properties nodeProperties = jetty.getNodeProperties();\n\n      // we need to update the jetty's shard so that it registers itself to the right shard when restarted\n      this.shard = shard;\n      nodeProperties.setProperty(CoreDescriptor.CORE_SHARD, this.shard);\n\n      // we need to update the jetty's shard so that it registers itself under the right core name when restarted\n      this.coreNodeName = coreNodeName;\n      nodeProperties.setProperty(CoreDescriptor.CORE_NODE_NAME, this.coreNodeName);\n\n      this.nodeName = replica.getNodeName();\n\n      ZkCoreNodeProps coreNodeProps = new ZkCoreNodeProps(info);\n      this.url = coreNodeProps.getCoreUrl();\n\n      // strip the trailing slash as this can cause issues when executing requests\n      this.client = createNewSolrServer(this.url.substring(0, this.url.length() - 1));\n    }\n\n","sourceOld":"    public CloudJettyRunner(JettySolrRunner jetty, Replica replica,\n                            String collection, String shard, String coreNodeName) {\n      this.jetty = jetty;\n      this.info = replica;\n      this.collection = collection;\n      \n      Properties nodeProperties = jetty.getNodeProperties();\n\n      // we need to update the jetty's shard so that it registers itself to the right shard when restarted\n      this.shard = shard;\n      nodeProperties.setProperty(CoreDescriptor.CORE_SHARD, this.shard);\n\n      // we need to update the jetty's shard so that it registers itself under the right core name when restarted\n      this.coreNodeName = coreNodeName;\n      nodeProperties.setProperty(CoreDescriptor.CORE_NODE_NAME, this.coreNodeName);\n\n      this.nodeName = replica.getNodeName();\n\n      ZkCoreNodeProps coreNodeProps = new ZkCoreNodeProps(info);\n      this.url = coreNodeProps.getCoreUrl();\n\n      // strip the trailing slash as this can cause issues when executing requests\n      this.client = createNewSolrServer(this.url.substring(0, this.url.length() - 1));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fba58147c9753bb58bbfbd2ebbbf02aecc1eafde","date":1509748659,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest.CloudJettyRunner#CloudJettyRunner(JettySolrRunner,Replica,String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest.CloudJettyRunner#CloudJettyRunner(JettySolrRunner,Replica,String,String,String).mjava","sourceNew":"    public CloudJettyRunner(JettySolrRunner jetty, Replica replica,\n                            String collection, String shard, String coreNodeName) {\n      this.jetty = jetty;\n      this.info = replica;\n      this.collection = collection;\n      \n      Properties nodeProperties = jetty.getNodeProperties();\n\n      // we need to update the jetty's shard so that it registers itself to the right shard when restarted\n      this.shard = shard;\n      nodeProperties.setProperty(CoreDescriptor.CORE_SHARD, this.shard);\n\n      // we need to update the jetty's shard so that it registers itself under the right core name when restarted\n      this.coreNodeName = coreNodeName;\n      nodeProperties.setProperty(CoreDescriptor.CORE_NODE_NAME, this.coreNodeName);\n\n      this.nodeName = replica.getNodeName();\n\n      ZkCoreNodeProps coreNodeProps = new ZkCoreNodeProps(info);\n      this.url = coreNodeProps.getCoreUrl();\n\n      // strip the trailing slash as this can cause issues when executing requests\n      this.client = createNewSolrServer(this.url.substring(0, this.url.length() - 1));\n    }\n\n","sourceOld":"    public CloudJettyRunner(JettySolrRunner jetty, Replica replica,\n                            String collection, String shard, String coreNodeName) {\n      this.jetty = jetty;\n      this.info = replica;\n      this.collection = collection;\n      \n      Properties nodeProperties = jetty.getNodeProperties();\n\n      // we need to update the jetty's shard so that it registers itself to the right shard when restarted\n      this.shard = shard;\n      nodeProperties.setProperty(CoreDescriptor.CORE_SHARD, this.shard);\n\n      // we need to update the jetty's shard so that it registers itself under the right core name when restarted\n      this.coreNodeName = coreNodeName;\n      nodeProperties.setProperty(CoreDescriptor.CORE_NODE_NAME, this.coreNodeName);\n\n      this.nodeName = replica.getNodeName();\n\n      ZkCoreNodeProps coreNodeProps = new ZkCoreNodeProps(info);\n      this.url = coreNodeProps.getCoreUrl();\n\n      // strip the trailing slash as this can cause issues when executing requests\n      this.client = createNewSolrServer(this.url.substring(0, this.url.length() - 1));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d523b8189b211dd1630166aa77b8c88bb48b3fcc","date":1510144168,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest.CloudJettyRunner#CloudJettyRunner(JettySolrRunner,Replica,String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest.CloudJettyRunner#CloudJettyRunner(JettySolrRunner,Replica,String,String,String).mjava","sourceNew":"    public CloudJettyRunner(JettySolrRunner jetty, Replica replica,\n                            String collection, String shard, String coreNodeName) {\n      this.jetty = jetty;\n      this.info = replica;\n      this.collection = collection;\n      \n      Properties nodeProperties = jetty.getNodeProperties();\n\n      // we need to update the jetty's shard so that it registers itself to the right shard when restarted\n      this.shard = shard;\n      nodeProperties.setProperty(CoreDescriptor.CORE_SHARD, this.shard);\n\n      // we need to update the jetty's shard so that it registers itself under the right core name when restarted\n      this.coreNodeName = coreNodeName;\n      nodeProperties.setProperty(CoreDescriptor.CORE_NODE_NAME, this.coreNodeName);\n\n      this.nodeName = replica.getNodeName();\n\n      ZkCoreNodeProps coreNodeProps = new ZkCoreNodeProps(info);\n      this.url = coreNodeProps.getCoreUrl();\n\n      // strip the trailing slash as this can cause issues when executing requests\n      this.client = createNewSolrServer(this.url.substring(0, this.url.length() - 1));\n    }\n\n","sourceOld":"    public CloudJettyRunner(JettySolrRunner jetty, Replica replica,\n                            String collection, String shard, String coreNodeName) {\n      this.jetty = jetty;\n      this.info = replica;\n      this.collection = collection;\n      \n      Properties nodeProperties = jetty.getNodeProperties();\n\n      // we need to update the jetty's shard so that it registers itself to the right shard when restarted\n      this.shard = shard;\n      nodeProperties.setProperty(CoreDescriptor.CORE_SHARD, this.shard);\n\n      // we need to update the jetty's shard so that it registers itself under the right core name when restarted\n      this.coreNodeName = coreNodeName;\n      nodeProperties.setProperty(CoreDescriptor.CORE_NODE_NAME, this.coreNodeName);\n\n      this.nodeName = replica.getNodeName();\n\n      ZkCoreNodeProps coreNodeProps = new ZkCoreNodeProps(info);\n      this.url = coreNodeProps.getCoreUrl();\n\n      // strip the trailing slash as this can cause issues when executing requests\n      this.client = createNewSolrServer(this.url.substring(0, this.url.length() - 1));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fba58147c9753bb58bbfbd2ebbbf02aecc1eafde":["1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d"],"e7da9d8536c11576df10e348efa79d2739170936":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d","fba58147c9753bb58bbfbd2ebbbf02aecc1eafde"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["86290366cefc1b9d4eced13b430858c4a4c0421d","733eaf468f18297b1bcc51031353bdfdd1913bdf"],"1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d":["e7da9d8536c11576df10e348efa79d2739170936"],"733eaf468f18297b1bcc51031353bdfdd1913bdf":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"]},"commit2Childs":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","733eaf468f18297b1bcc51031353bdfdd1913bdf"],"fba58147c9753bb58bbfbd2ebbbf02aecc1eafde":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"e7da9d8536c11576df10e348efa79d2739170936":["1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["e7da9d8536c11576df10e348efa79d2739170936"],"1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d":["fba58147c9753bb58bbfbd2ebbbf02aecc1eafde","d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"733eaf468f18297b1bcc51031353bdfdd1913bdf":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}