{"path":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#AssertingLeafReader(LeafReader).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#AssertingLeafReader(LeafReader).mjava","pathOld":"/dev/null","sourceNew":"  public AssertingLeafReader(LeafReader in) {\n    super(in);\n    // check some basic reader sanity\n    assert in.maxDoc() >= 0;\n    assert in.numDocs() <= in.maxDoc();\n    assert in.numDeletedDocs() + in.numDocs() == in.maxDoc();\n    assert !in.hasDeletions() || in.numDeletedDocs() > 0 && in.numDocs() < in.maxDoc();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1e9b5fc0abfd22167fc144d6a55b290bdc331dc","date":1431966006,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#AssertingLeafReader(LeafReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#AssertingLeafReader(LeafReader).mjava","sourceNew":"  public AssertingLeafReader(LeafReader in) {\n    super(in);\n    // check some basic reader sanity\n    assert in.maxDoc() >= 0;\n    assert in.numDocs() <= in.maxDoc();\n    assert in.numDeletedDocs() + in.numDocs() == in.maxDoc();\n    assert !in.hasDeletions() || in.numDeletedDocs() > 0 && in.numDocs() < in.maxDoc();\n\n    addCoreClosedListener(new CoreClosedListener() {\n      @Override\n      public void onClose(Object ownerCoreCacheKey) throws IOException {\n        final Object expectedKey = getCoreCacheKey();\n        assert expectedKey == ownerCoreCacheKey\n            : \"Core closed listener called on a different key \" + expectedKey + \" <> \" + ownerCoreCacheKey;\n      }\n    });\n  }\n\n","sourceOld":"  public AssertingLeafReader(LeafReader in) {\n    super(in);\n    // check some basic reader sanity\n    assert in.maxDoc() >= 0;\n    assert in.numDocs() <= in.maxDoc();\n    assert in.numDeletedDocs() + in.numDocs() == in.maxDoc();\n    assert !in.hasDeletions() || in.numDeletedDocs() > 0 && in.numDocs() < in.maxDoc();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7572e4a65adc4053c239781245b1a15b430b279","date":1475129002,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#AssertingLeafReader(LeafReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#AssertingLeafReader(LeafReader).mjava","sourceNew":"  public AssertingLeafReader(LeafReader in) {\n    super(in);\n    // check some basic reader sanity\n    assert in.maxDoc() >= 0;\n    assert in.numDocs() <= in.maxDoc();\n    assert in.numDeletedDocs() + in.numDocs() == in.maxDoc();\n    assert !in.hasDeletions() || in.numDeletedDocs() > 0 && in.numDocs() < in.maxDoc();\n\n    addCoreClosedListener(ownerCoreCacheKey -> {\n      final Object expectedKey = getCoreCacheKey();\n      assert expectedKey == ownerCoreCacheKey\n          : \"Core closed listener called on a different key \" + expectedKey + \" <> \" + ownerCoreCacheKey;\n    });\n  }\n\n","sourceOld":"  public AssertingLeafReader(LeafReader in) {\n    super(in);\n    // check some basic reader sanity\n    assert in.maxDoc() >= 0;\n    assert in.numDocs() <= in.maxDoc();\n    assert in.numDeletedDocs() + in.numDocs() == in.maxDoc();\n    assert !in.hasDeletions() || in.numDeletedDocs() > 0 && in.numDocs() < in.maxDoc();\n\n    addCoreClosedListener(new CoreClosedListener() {\n      @Override\n      public void onClose(Object ownerCoreCacheKey) throws IOException {\n        final Object expectedKey = getCoreCacheKey();\n        assert expectedKey == ownerCoreCacheKey\n            : \"Core closed listener called on a different key \" + expectedKey + \" <> \" + ownerCoreCacheKey;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#AssertingLeafReader(LeafReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#AssertingLeafReader(LeafReader).mjava","sourceNew":"  public AssertingLeafReader(LeafReader in) {\n    super(in);\n    // check some basic reader sanity\n    assert in.maxDoc() >= 0;\n    assert in.numDocs() <= in.maxDoc();\n    assert in.numDeletedDocs() + in.numDocs() == in.maxDoc();\n    assert !in.hasDeletions() || in.numDeletedDocs() > 0 && in.numDocs() < in.maxDoc();\n\n    addCoreClosedListener(ownerCoreCacheKey -> {\n      final Object expectedKey = getCoreCacheKey();\n      assert expectedKey == ownerCoreCacheKey\n          : \"Core closed listener called on a different key \" + expectedKey + \" <> \" + ownerCoreCacheKey;\n    });\n  }\n\n","sourceOld":"  public AssertingLeafReader(LeafReader in) {\n    super(in);\n    // check some basic reader sanity\n    assert in.maxDoc() >= 0;\n    assert in.numDocs() <= in.maxDoc();\n    assert in.numDeletedDocs() + in.numDocs() == in.maxDoc();\n    assert !in.hasDeletions() || in.numDeletedDocs() > 0 && in.numDocs() < in.maxDoc();\n\n    addCoreClosedListener(new CoreClosedListener() {\n      @Override\n      public void onClose(Object ownerCoreCacheKey) throws IOException {\n        final Object expectedKey = getCoreCacheKey();\n        assert expectedKey == ownerCoreCacheKey\n            : \"Core closed listener called on a different key \" + expectedKey + \" <> \" + ownerCoreCacheKey;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#AssertingLeafReader(LeafReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#AssertingLeafReader(LeafReader).mjava","sourceNew":"  public AssertingLeafReader(LeafReader in) {\n    super(in);\n    // check some basic reader sanity\n    assert in.maxDoc() >= 0;\n    assert in.numDocs() <= in.maxDoc();\n    assert in.numDeletedDocs() + in.numDocs() == in.maxDoc();\n    assert !in.hasDeletions() || in.numDeletedDocs() > 0 && in.numDocs() < in.maxDoc();\n\n    addCoreClosedListener(ownerCoreCacheKey -> {\n      final Object expectedKey = getCoreCacheKey();\n      assert expectedKey == ownerCoreCacheKey\n          : \"Core closed listener called on a different key \" + expectedKey + \" <> \" + ownerCoreCacheKey;\n    });\n  }\n\n","sourceOld":"  public AssertingLeafReader(LeafReader in) {\n    super(in);\n    // check some basic reader sanity\n    assert in.maxDoc() >= 0;\n    assert in.numDocs() <= in.maxDoc();\n    assert in.numDeletedDocs() + in.numDocs() == in.maxDoc();\n    assert !in.hasDeletions() || in.numDeletedDocs() > 0 && in.numDocs() < in.maxDoc();\n\n    addCoreClosedListener(new CoreClosedListener() {\n      @Override\n      public void onClose(Object ownerCoreCacheKey) throws IOException {\n        final Object expectedKey = getCoreCacheKey();\n        assert expectedKey == ownerCoreCacheKey\n            : \"Core closed listener called on a different key \" + expectedKey + \" <> \" + ownerCoreCacheKey;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d211216c83f01894810543d1c107160a9ae3650b","date":1488289605,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#AssertingLeafReader(LeafReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#AssertingLeafReader(LeafReader).mjava","sourceNew":"  public AssertingLeafReader(LeafReader in) {\n    super(in);\n    // check some basic reader sanity\n    assert in.maxDoc() >= 0;\n    assert in.numDocs() <= in.maxDoc();\n    assert in.numDeletedDocs() + in.numDocs() == in.maxDoc();\n    assert !in.hasDeletions() || in.numDeletedDocs() > 0 && in.numDocs() < in.maxDoc();\n\n    CacheHelper coreCacheHelper = in.getCoreCacheHelper();\n    if (coreCacheHelper != null) {\n      coreCacheHelper.addClosedListener(cacheKey -> {\n        final Object expectedKey = coreCacheHelper.getKey();\n        assert expectedKey == cacheKey\n            : \"Core closed listener called on a different key \" + expectedKey + \" <> \" + cacheKey;\n      });\n    }\n\n    CacheHelper readerCacheHelper = in.getReaderCacheHelper();\n    if (readerCacheHelper != null) {\n      readerCacheHelper.addClosedListener(cacheKey -> {\n        final Object expectedKey = readerCacheHelper.getKey();\n        assert expectedKey == cacheKey\n            : \"Core closed listener called on a different key \" + expectedKey + \" <> \" + cacheKey;\n      });\n    }\n  }\n\n","sourceOld":"  public AssertingLeafReader(LeafReader in) {\n    super(in);\n    // check some basic reader sanity\n    assert in.maxDoc() >= 0;\n    assert in.numDocs() <= in.maxDoc();\n    assert in.numDeletedDocs() + in.numDocs() == in.maxDoc();\n    assert !in.hasDeletions() || in.numDeletedDocs() > 0 && in.numDocs() < in.maxDoc();\n\n    addCoreClosedListener(ownerCoreCacheKey -> {\n      final Object expectedKey = getCoreCacheKey();\n      assert expectedKey == ownerCoreCacheKey\n          : \"Core closed listener called on a different key \" + expectedKey + \" <> \" + ownerCoreCacheKey;\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a7572e4a65adc4053c239781245b1a15b430b279":["c1e9b5fc0abfd22167fc144d6a55b290bdc331dc"],"c1e9b5fc0abfd22167fc144d6a55b290bdc331dc":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"d211216c83f01894810543d1c107160a9ae3650b":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["c1e9b5fc0abfd22167fc144d6a55b290bdc331dc","a7572e4a65adc4053c239781245b1a15b430b279"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["c1e9b5fc0abfd22167fc144d6a55b290bdc331dc","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d211216c83f01894810543d1c107160a9ae3650b"]},"commit2Childs":{"a7572e4a65adc4053c239781245b1a15b430b279":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"c1e9b5fc0abfd22167fc144d6a55b290bdc331dc":["a7572e4a65adc4053c239781245b1a15b430b279","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"d211216c83f01894810543d1c107160a9ae3650b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["d211216c83f01894810543d1c107160a9ae3650b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["c1e9b5fc0abfd22167fc144d6a55b290bdc331dc"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}