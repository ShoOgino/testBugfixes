{"path":"solr/core/src/test/org/apache/solr/index/WrapperMergePolicyFactoryTest#implTestUpgradeIndexMergePolicyFactory(Double,Double).mjava","commits":[{"id":"9abf799bced7394515f650212c0d7a685c716d65","date":1455143055,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/index/WrapperMergePolicyFactoryTest#implTestUpgradeIndexMergePolicyFactory(Double,Double).mjava","pathOld":"/dev/null","sourceNew":"  private void implTestUpgradeIndexMergePolicyFactory(Double wrappingNoCFSRatio, Double wrappedNoCFSRatio) {\n    final MergePolicyFactoryArgs args = new MergePolicyFactoryArgs();\n    if (wrappingNoCFSRatio != null) {\n      args.add(\"noCFSRatio\", wrappingNoCFSRatio); // noCFSRatio for the wrapping merge policy\n    }\n    args.add(WrapperMergePolicyFactory.WRAPPED_PREFIX, \"wrapped\");\n    args.add(\"wrapped.class\", TieredMergePolicyFactory.class.getName());\n    if (wrappedNoCFSRatio != null) {\n      args.add(\"wrapped.noCFSRatio\", wrappedNoCFSRatio); // noCFSRatio for the wrapped merge policy\n    }\n\n    MergePolicyFactory mpf;\n    try {\n      mpf = new UpgradeIndexMergePolicyFactory(resourceLoader, args, null);\n      assertFalse(\"Should only reach here if wrapping and wrapped args don't overlap!\",\n          (wrappingNoCFSRatio != null && wrappedNoCFSRatio != null));\n\n      for (int ii=1; ii<=2; ++ii) { // it should be okay to call getMergePolicy() more than once\n        final MergePolicy mp = mpf.getMergePolicy();\n        if (wrappingNoCFSRatio != null) {\n          assertEquals(\"#\"+ii+\" wrappingNoCFSRatio\", wrappingNoCFSRatio.doubleValue(), mp.getNoCFSRatio(), 0.0d);\n        }\n        if (wrappedNoCFSRatio != null) {\n          assertEquals(\"#\"+ii+\" wrappedNoCFSRatio\", wrappedNoCFSRatio.doubleValue(), mp.getNoCFSRatio(), 0.0d);\n        }\n        assertSame(mp.getClass(), UpgradeIndexMergePolicy.class);\n      }\n\n    } catch (IllegalArgumentException iae) {\n      assertEquals(\"Wrapping and wrapped merge policy args overlap! [noCFSRatio]\", iae.getMessage());\n      assertTrue(\"Should only reach here if wrapping and wrapped args do overlap!\",\n          (wrappingNoCFSRatio != null && wrappedNoCFSRatio != null));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9abf799bced7394515f650212c0d7a685c716d65":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9abf799bced7394515f650212c0d7a685c716d65"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9abf799bced7394515f650212c0d7a685c716d65"],"9abf799bced7394515f650212c0d7a685c716d65":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}