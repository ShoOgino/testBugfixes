{"path":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","pathOld":"solr/src/common/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","sourceNew":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    out.write(buf, 0, pos);\n    written += pos;\n    pos=0;\n  }\n\n","sourceOld":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    out.write(buf, 0, pos);\n    written += pos;\n    pos=0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","pathOld":"solr/src/common/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","sourceNew":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    out.write(buf, 0, pos);\n    written += pos;\n    pos=0;\n  }\n\n","sourceOld":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    out.write(buf, 0, pos);\n    written += pos;\n    pos=0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","pathOld":"solr/src/common/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","sourceNew":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    out.write(buf, 0, pos);\n    written += pos;\n    pos=0;\n  }\n\n","sourceOld":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    out.write(buf, 0, pos);\n    written += pos;\n    pos=0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd0ef6574805f3cb9880e0983b7548a6aa933508","date":1315345052,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","sourceNew":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    if (pos > 0) {\n      out.write(buf, 0, pos);\n      written += pos;\n      pos=0;\n    }\n  }\n\n","sourceOld":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    out.write(buf, 0, pos);\n    written += pos;\n    pos=0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cad90908fe6b90a8b7310dc8c2dceac34341580c","date":1344538399,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","sourceNew":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    if (pos > 0) {\n      flush(buf, 0, pos);\n      written += pos;\n      pos=0;\n    }\n  }\n\n","sourceOld":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    if (pos > 0) {\n      out.write(buf, 0, pos);\n      written += pos;\n      pos=0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","sourceNew":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    if (pos > 0) {\n      flush(buf, 0, pos);\n      written += pos;\n      pos=0;\n    }\n  }\n\n","sourceOld":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    if (pos > 0) {\n      out.write(buf, 0, pos);\n      written += pos;\n      pos=0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","sourceNew":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    if (pos > 0) {\n      flush(buf, 0, pos);\n      written += pos;\n      pos=0;\n    }\n  }\n\n","sourceOld":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    if (pos > 0) {\n      out.write(buf, 0, pos);\n      written += pos;\n      pos=0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb5e2d9cb6380aa54e123da56915c9be394a0952","date":1345248904,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","sourceNew":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    if (pos > 0) {\n      written += pos;\n      flush(buf, 0, pos);\n      pos=0;\n    }\n  }\n\n","sourceOld":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    if (pos > 0) {\n      flush(buf, 0, pos);\n      written += pos;\n      pos=0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70fa1c0f4d75735ff2e1485e059d9bc5efa50598","date":1345296911,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","sourceNew":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    if (pos > 0) {\n      written += pos;\n      flush(buf, 0, pos);\n      pos=0;\n    }\n  }\n\n","sourceOld":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    if (pos > 0) {\n      flush(buf, 0, pos);\n      written += pos;\n      pos=0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"616c1830142ff5c1ddedec1ed898733b73c8e23b","date":1345368925,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","sourceNew":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    if (pos > 0) {\n      written += pos;\n      flush(buf, 0, pos);\n      pos=0;\n    }\n  }\n\n","sourceOld":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    if (pos > 0) {\n      flush(buf, 0, pos);\n      written += pos;\n      pos=0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","sourceNew":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    if (pos > 0) {\n      written += pos;\n      flush(buf, 0, pos);\n      pos=0;\n    }\n  }\n\n","sourceOld":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    if (pos > 0) {\n      written += pos;\n      flush(buf, 0, pos);\n      pos=0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream#flushBuffer().mjava","sourceNew":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    if (pos > 0) {\n      written += pos;\n      flush(buf, 0, pos);\n      pos=0;\n    }\n  }\n\n","sourceOld":"  /** Only flushes the buffer of the FastOutputStream, not that of the\n   * underlying stream.\n   */\n  public void flushBuffer() throws IOException {\n    if (pos > 0) {\n      written += pos;\n      flush(buf, 0, pos);\n      pos=0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["fb5e2d9cb6380aa54e123da56915c9be394a0952","19275ba31e621f6da1b83bf13af75233876fd3d4"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":["d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","fb5e2d9cb6380aa54e123da56915c9be394a0952"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["fb5e2d9cb6380aa54e123da56915c9be394a0952"],"fb5e2d9cb6380aa54e123da56915c9be394a0952":["cad90908fe6b90a8b7310dc8c2dceac34341580c"],"bd0ef6574805f3cb9880e0983b7548a6aa933508":["c26f00b574427b55127e869b935845554afde1fa"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["bd0ef6574805f3cb9880e0983b7548a6aa933508","cad90908fe6b90a8b7310dc8c2dceac34341580c"],"cad90908fe6b90a8b7310dc8c2dceac34341580c":["bd0ef6574805f3cb9880e0983b7548a6aa933508"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":["c7869f64c874ebf7f317d22c00baf2b6857797a6","fb5e2d9cb6380aa54e123da56915c9be394a0952"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["bd0ef6574805f3cb9880e0983b7548a6aa933508","cad90908fe6b90a8b7310dc8c2dceac34341580c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19275ba31e621f6da1b83bf13af75233876fd3d4"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"616c1830142ff5c1ddedec1ed898733b73c8e23b":[],"c26f00b574427b55127e869b935845554afde1fa":["bd0ef6574805f3cb9880e0983b7548a6aa933508"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fb5e2d9cb6380aa54e123da56915c9be394a0952":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","616c1830142ff5c1ddedec1ed898733b73c8e23b","19275ba31e621f6da1b83bf13af75233876fd3d4","70fa1c0f4d75735ff2e1485e059d9bc5efa50598"],"bd0ef6574805f3cb9880e0983b7548a6aa933508":["c7869f64c874ebf7f317d22c00baf2b6857797a6","cad90908fe6b90a8b7310dc8c2dceac34341580c","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["70fa1c0f4d75735ff2e1485e059d9bc5efa50598"],"cad90908fe6b90a8b7310dc8c2dceac34341580c":["fb5e2d9cb6380aa54e123da56915c9be394a0952","c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["616c1830142ff5c1ddedec1ed898733b73c8e23b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}