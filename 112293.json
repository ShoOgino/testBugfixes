{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testReadOnlyCloneAfterFullMerge().mjava","commits":[{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testReadOnlyCloneAfterFullMerge().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testReadOnlyCloneAfterOptimize().mjava","sourceNew":"  // open non-readOnly reader1 on multi-segment index, then\n  // fully merge the index, then clone to readOnly reader2\n  public void testReadOnlyCloneAfterFullMerge() throws Exception {\n    final Directory dir1 = newDirectory();\n\n    TestIndexReaderReopen.createIndex(random, dir1, true);\n    IndexReader reader1 = IndexReader.open(dir1, false);\n    IndexWriter w = new IndexWriter(dir1, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n    IndexReader reader2 = reader1.clone(true);\n    assertTrue(isReadOnly(reader2));\n    reader1.close();\n    reader2.close();\n    dir1.close();\n  }\n\n","sourceOld":"  // open non-readOnly reader1 on multi-segment index, then\n  // optimize the index, then clone to readOnly reader2\n  public void testReadOnlyCloneAfterOptimize() throws Exception {\n    final Directory dir1 = newDirectory();\n\n    TestIndexReaderReopen.createIndex(random, dir1, true);\n    IndexReader reader1 = IndexReader.open(dir1, false);\n    IndexWriter w = new IndexWriter(dir1, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.optimize();\n    w.close();\n    IndexReader reader2 = reader1.clone(true);\n    assertTrue(isReadOnly(reader2));\n    reader1.close();\n    reader2.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b8414cdacb05e1277df96a30710f570f4251d9a","date":1323040348,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testReadOnlyCloneAfterFullMerge().mjava","sourceNew":null,"sourceOld":"  // open non-readOnly reader1 on multi-segment index, then\n  // fully merge the index, then clone to readOnly reader2\n  public void testReadOnlyCloneAfterFullMerge() throws Exception {\n    final Directory dir1 = newDirectory();\n\n    TestIndexReaderReopen.createIndex(random, dir1, true);\n    IndexReader reader1 = IndexReader.open(dir1, false);\n    IndexWriter w = new IndexWriter(dir1, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n    IndexReader reader2 = reader1.clone(true);\n    assertTrue(isReadOnly(reader2));\n    reader1.close();\n    reader2.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testReadOnlyCloneAfterFullMerge().mjava","sourceNew":null,"sourceOld":"  // open non-readOnly reader1 on multi-segment index, then\n  // fully merge the index, then clone to readOnly reader2\n  public void testReadOnlyCloneAfterFullMerge() throws Exception {\n    final Directory dir1 = newDirectory();\n\n    TestIndexReaderReopen.createIndex(random, dir1, true);\n    IndexReader reader1 = IndexReader.open(dir1, false);\n    IndexWriter w = new IndexWriter(dir1, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n    IndexReader reader2 = reader1.clone(true);\n    assertTrue(isReadOnly(reader2));\n    reader1.close();\n    reader2.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testReadOnlyCloneAfterFullMerge().mjava","sourceNew":null,"sourceOld":"  // open non-readOnly reader1 on multi-segment index, then\n  // fully merge the index, then clone to readOnly reader2\n  public void testReadOnlyCloneAfterFullMerge() throws Exception {\n    final Directory dir1 = newDirectory();\n\n    TestIndexReaderReopen.createIndex(random, dir1, true);\n    IndexReader reader1 = IndexReader.open(dir1, false);\n    IndexWriter w = new IndexWriter(dir1, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n    IndexReader reader2 = reader1.clone(true);\n    assertTrue(isReadOnly(reader2));\n    reader1.close();\n    reader2.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b8414cdacb05e1277df96a30710f570f4251d9a":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","4b8414cdacb05e1277df96a30710f570f4251d9a"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3615ce4a1f785ae1b779244de52c6a7d99227e60"]},"commit2Childs":{"4b8414cdacb05e1277df96a30710f570f4251d9a":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["4b8414cdacb05e1277df96a30710f570f4251d9a","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}