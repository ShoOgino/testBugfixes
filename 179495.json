{"path":"solr/core/src/test/org/apache/solr/cloud/TestPrepRecovery#testLeaderUnloaded().mjava","commits":[{"id":"8dcdc17e7cf73a4779ecf173ff719b51fe2a2dd1","date":1499091633,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPrepRecovery#testLeaderUnloaded().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLeaderUnloaded() throws Exception {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n\n    String collectionName = \"testLeaderUnloaded\";\n    CollectionAdminRequest.createCollection(collectionName, 1, 2)\n        .process(solrClient);\n\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 2 replicas\",\n        collectionName, clusterShape(1, 2));\n\n    JettySolrRunner newNode = cluster.startJettySolrRunner();\n    String newNodeName = newNode.getNodeName();\n\n    // add a replica to the new node so that it starts watching the collection\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // now delete the leader\n    Replica leader = solrClient.getZkStateReader().getLeaderRetry(collectionName, \"shard1\");\n    CollectionAdminRequest.deleteReplica(collectionName, \"shard1\", leader.getName())\n        .process(solrClient);\n\n    // add another replica to the new node. When it starts recovering, it will likely have stale state\n    // and ask the erstwhile leader to PREPRECOVERY which will hang for about 30 seconds\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // in the absence of the fixes made in SOLR-10914, this statement will timeout after 90s\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 3 replicas\",\n        collectionName, clusterShape(1, 3));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPrepRecovery#testLeaderUnloaded().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLeaderUnloaded() throws Exception {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n\n    String collectionName = \"testLeaderUnloaded\";\n    CollectionAdminRequest.createCollection(collectionName, 1, 2)\n        .process(solrClient);\n\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 2 replicas\",\n        collectionName, clusterShape(1, 2));\n\n    JettySolrRunner newNode = cluster.startJettySolrRunner();\n    String newNodeName = newNode.getNodeName();\n\n    // add a replica to the new node so that it starts watching the collection\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // now delete the leader\n    Replica leader = solrClient.getZkStateReader().getLeaderRetry(collectionName, \"shard1\");\n    CollectionAdminRequest.deleteReplica(collectionName, \"shard1\", leader.getName())\n        .process(solrClient);\n\n    // add another replica to the new node. When it starts recovering, it will likely have stale state\n    // and ask the erstwhile leader to PREPRECOVERY which will hang for about 30 seconds\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // in the absence of the fixes made in SOLR-10914, this statement will timeout after 90s\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 3 replicas\",\n        collectionName, clusterShape(1, 3));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff5e25fb60ccc8574bcbd65396786ae9163f0149","date":1519706112,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPrepRecovery#testLeaderUnloaded().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestPrepRecovery#testLeaderUnloaded().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testLeaderUnloaded() throws Exception {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n\n    String collectionName = \"testLeaderUnloaded\";\n    CollectionAdminRequest.createCollection(collectionName, 1, 2)\n        .process(solrClient);\n\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 2 replicas\",\n        collectionName, clusterShape(1, 2));\n\n    JettySolrRunner newNode = cluster.startJettySolrRunner();\n    String newNodeName = newNode.getNodeName();\n\n    // add a replica to the new node so that it starts watching the collection\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // now delete the leader\n    Replica leader = solrClient.getZkStateReader().getLeaderRetry(collectionName, \"shard1\");\n    CollectionAdminRequest.deleteReplica(collectionName, \"shard1\", leader.getName())\n        .process(solrClient);\n\n    // add another replica to the new node. When it starts recovering, it will likely have stale state\n    // and ask the erstwhile leader to PREPRECOVERY which will hang for about 30 seconds\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // in the absence of the fixes made in SOLR-10914, this statement will timeout after 90s\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 3 replicas\",\n        collectionName, clusterShape(1, 3));\n  }\n\n","sourceOld":"  @Test\n  public void testLeaderUnloaded() throws Exception {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n\n    String collectionName = \"testLeaderUnloaded\";\n    CollectionAdminRequest.createCollection(collectionName, 1, 2)\n        .process(solrClient);\n\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 2 replicas\",\n        collectionName, clusterShape(1, 2));\n\n    JettySolrRunner newNode = cluster.startJettySolrRunner();\n    String newNodeName = newNode.getNodeName();\n\n    // add a replica to the new node so that it starts watching the collection\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // now delete the leader\n    Replica leader = solrClient.getZkStateReader().getLeaderRetry(collectionName, \"shard1\");\n    CollectionAdminRequest.deleteReplica(collectionName, \"shard1\", leader.getName())\n        .process(solrClient);\n\n    // add another replica to the new node. When it starts recovering, it will likely have stale state\n    // and ask the erstwhile leader to PREPRECOVERY which will hang for about 30 seconds\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // in the absence of the fixes made in SOLR-10914, this statement will timeout after 90s\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 3 replicas\",\n        collectionName, clusterShape(1, 3));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a1c374690db69470f6aa4bffc43dcacf1f4e3e49","date":1529007399,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPrepRecovery#testLeaderUnloaded().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestPrepRecovery#testLeaderUnloaded().mjava","sourceNew":"  @Test\n// 12-Jun-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testLeaderUnloaded() throws Exception {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n\n    String collectionName = \"testLeaderUnloaded\";\n    CollectionAdminRequest.createCollection(collectionName, 1, 2)\n        .process(solrClient);\n\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 2 replicas\",\n        collectionName, clusterShape(1, 2));\n\n    JettySolrRunner newNode = cluster.startJettySolrRunner();\n    String newNodeName = newNode.getNodeName();\n\n    // add a replica to the new node so that it starts watching the collection\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // now delete the leader\n    Replica leader = solrClient.getZkStateReader().getLeaderRetry(collectionName, \"shard1\");\n    CollectionAdminRequest.deleteReplica(collectionName, \"shard1\", leader.getName())\n        .process(solrClient);\n\n    // add another replica to the new node. When it starts recovering, it will likely have stale state\n    // and ask the erstwhile leader to PREPRECOVERY which will hang for about 30 seconds\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // in the absence of the fixes made in SOLR-10914, this statement will timeout after 90s\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 3 replicas\",\n        collectionName, clusterShape(1, 3));\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testLeaderUnloaded() throws Exception {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n\n    String collectionName = \"testLeaderUnloaded\";\n    CollectionAdminRequest.createCollection(collectionName, 1, 2)\n        .process(solrClient);\n\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 2 replicas\",\n        collectionName, clusterShape(1, 2));\n\n    JettySolrRunner newNode = cluster.startJettySolrRunner();\n    String newNodeName = newNode.getNodeName();\n\n    // add a replica to the new node so that it starts watching the collection\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // now delete the leader\n    Replica leader = solrClient.getZkStateReader().getLeaderRetry(collectionName, \"shard1\");\n    CollectionAdminRequest.deleteReplica(collectionName, \"shard1\", leader.getName())\n        .process(solrClient);\n\n    // add another replica to the new node. When it starts recovering, it will likely have stale state\n    // and ask the erstwhile leader to PREPRECOVERY which will hang for about 30 seconds\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // in the absence of the fixes made in SOLR-10914, this statement will timeout after 90s\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 3 replicas\",\n        collectionName, clusterShape(1, 3));\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPrepRecovery#testLeaderUnloaded().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestPrepRecovery#testLeaderUnloaded().mjava","sourceNew":"  @Test\n// 12-Jun-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testLeaderUnloaded() throws Exception {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n\n    String collectionName = \"testLeaderUnloaded\";\n    CollectionAdminRequest.createCollection(collectionName, 1, 2)\n        .process(solrClient);\n\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 2 replicas\",\n        collectionName, clusterShape(1, 2));\n\n    JettySolrRunner newNode = cluster.startJettySolrRunner();\n    String newNodeName = newNode.getNodeName();\n\n    // add a replica to the new node so that it starts watching the collection\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // now delete the leader\n    Replica leader = solrClient.getZkStateReader().getLeaderRetry(collectionName, \"shard1\");\n    CollectionAdminRequest.deleteReplica(collectionName, \"shard1\", leader.getName())\n        .process(solrClient);\n\n    // add another replica to the new node. When it starts recovering, it will likely have stale state\n    // and ask the erstwhile leader to PREPRECOVERY which will hang for about 30 seconds\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // in the absence of the fixes made in SOLR-10914, this statement will timeout after 90s\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 3 replicas\",\n        collectionName, clusterShape(1, 3));\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testLeaderUnloaded() throws Exception {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n\n    String collectionName = \"testLeaderUnloaded\";\n    CollectionAdminRequest.createCollection(collectionName, 1, 2)\n        .process(solrClient);\n\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 2 replicas\",\n        collectionName, clusterShape(1, 2));\n\n    JettySolrRunner newNode = cluster.startJettySolrRunner();\n    String newNodeName = newNode.getNodeName();\n\n    // add a replica to the new node so that it starts watching the collection\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // now delete the leader\n    Replica leader = solrClient.getZkStateReader().getLeaderRetry(collectionName, \"shard1\");\n    CollectionAdminRequest.deleteReplica(collectionName, \"shard1\", leader.getName())\n        .process(solrClient);\n\n    // add another replica to the new node. When it starts recovering, it will likely have stale state\n    // and ask the erstwhile leader to PREPRECOVERY which will hang for about 30 seconds\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // in the absence of the fixes made in SOLR-10914, this statement will timeout after 90s\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 3 replicas\",\n        collectionName, clusterShape(1, 3));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPrepRecovery#testLeaderUnloaded().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestPrepRecovery#testLeaderUnloaded().mjava","sourceNew":"  @Test\n// 12-Jun-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testLeaderUnloaded() throws Exception {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n\n    String collectionName = \"testLeaderUnloaded\";\n    CollectionAdminRequest.createCollection(collectionName, 1, 2)\n        .process(solrClient);\n\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 2 replicas\",\n        collectionName, clusterShape(1, 2));\n\n    JettySolrRunner newNode = cluster.startJettySolrRunner();\n    String newNodeName = newNode.getNodeName();\n\n    // add a replica to the new node so that it starts watching the collection\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // now delete the leader\n    Replica leader = solrClient.getZkStateReader().getLeaderRetry(collectionName, \"shard1\");\n    CollectionAdminRequest.deleteReplica(collectionName, \"shard1\", leader.getName())\n        .process(solrClient);\n\n    // add another replica to the new node. When it starts recovering, it will likely have stale state\n    // and ask the erstwhile leader to PREPRECOVERY which will hang for about 30 seconds\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // in the absence of the fixes made in SOLR-10914, this statement will timeout after 90s\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 3 replicas\",\n        collectionName, clusterShape(1, 3));\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testLeaderUnloaded() throws Exception {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n\n    String collectionName = \"testLeaderUnloaded\";\n    CollectionAdminRequest.createCollection(collectionName, 1, 2)\n        .process(solrClient);\n\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 2 replicas\",\n        collectionName, clusterShape(1, 2));\n\n    JettySolrRunner newNode = cluster.startJettySolrRunner();\n    String newNodeName = newNode.getNodeName();\n\n    // add a replica to the new node so that it starts watching the collection\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // now delete the leader\n    Replica leader = solrClient.getZkStateReader().getLeaderRetry(collectionName, \"shard1\");\n    CollectionAdminRequest.deleteReplica(collectionName, \"shard1\", leader.getName())\n        .process(solrClient);\n\n    // add another replica to the new node. When it starts recovering, it will likely have stale state\n    // and ask the erstwhile leader to PREPRECOVERY which will hang for about 30 seconds\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // in the absence of the fixes made in SOLR-10914, this statement will timeout after 90s\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 3 replicas\",\n        collectionName, clusterShape(1, 3));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPrepRecovery#testLeaderUnloaded().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestPrepRecovery#testLeaderUnloaded().mjava","sourceNew":"  @Test\n  public void testLeaderUnloaded() throws Exception {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n\n    String collectionName = \"testLeaderUnloaded\";\n    CollectionAdminRequest.createCollection(collectionName, 1, 2)\n        .process(solrClient);\n\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 2 replicas\",\n        collectionName, clusterShape(1, 2));\n\n    JettySolrRunner newNode = cluster.startJettySolrRunner();\n    String newNodeName = newNode.getNodeName();\n\n    // add a replica to the new node so that it starts watching the collection\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // now delete the leader\n    Replica leader = solrClient.getZkStateReader().getLeaderRetry(collectionName, \"shard1\");\n    CollectionAdminRequest.deleteReplica(collectionName, \"shard1\", leader.getName())\n        .process(solrClient);\n\n    // add another replica to the new node. When it starts recovering, it will likely have stale state\n    // and ask the erstwhile leader to PREPRECOVERY which will hang for about 30 seconds\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // in the absence of the fixes made in SOLR-10914, this statement will timeout after 90s\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 3 replicas\",\n        collectionName, clusterShape(1, 3));\n  }\n\n","sourceOld":"  @Test\n// 12-Jun-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testLeaderUnloaded() throws Exception {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n\n    String collectionName = \"testLeaderUnloaded\";\n    CollectionAdminRequest.createCollection(collectionName, 1, 2)\n        .process(solrClient);\n\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 2 replicas\",\n        collectionName, clusterShape(1, 2));\n\n    JettySolrRunner newNode = cluster.startJettySolrRunner();\n    String newNodeName = newNode.getNodeName();\n\n    // add a replica to the new node so that it starts watching the collection\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // now delete the leader\n    Replica leader = solrClient.getZkStateReader().getLeaderRetry(collectionName, \"shard1\");\n    CollectionAdminRequest.deleteReplica(collectionName, \"shard1\", leader.getName())\n        .process(solrClient);\n\n    // add another replica to the new node. When it starts recovering, it will likely have stale state\n    // and ask the erstwhile leader to PREPRECOVERY which will hang for about 30 seconds\n    CollectionAdminRequest.addReplicaToShard(collectionName, \"shard1\")\n        .setNode(newNodeName)\n        .process(solrClient);\n\n    // in the absence of the fixes made in SOLR-10914, this statement will timeout after 90s\n    waitForState(\"Expected collection: testLeaderUnloaded to be live with 1 shard and 3 replicas\",\n        collectionName, clusterShape(1, 3));\n  }\n\n","bugFix":["a1c374690db69470f6aa4bffc43dcacf1f4e3e49"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["ff5e25fb60ccc8574bcbd65396786ae9163f0149","a1c374690db69470f6aa4bffc43dcacf1f4e3e49"],"ff5e25fb60ccc8574bcbd65396786ae9163f0149":["8dcdc17e7cf73a4779ecf173ff719b51fe2a2dd1"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["a1c374690db69470f6aa4bffc43dcacf1f4e3e49"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8dcdc17e7cf73a4779ecf173ff719b51fe2a2dd1"],"8dcdc17e7cf73a4779ecf173ff719b51fe2a2dd1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"a1c374690db69470f6aa4bffc43dcacf1f4e3e49":["ff5e25fb60ccc8574bcbd65396786ae9163f0149"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["ff5e25fb60ccc8574bcbd65396786ae9163f0149","a1c374690db69470f6aa4bffc43dcacf1f4e3e49"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"ff5e25fb60ccc8574bcbd65396786ae9163f0149":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","a1c374690db69470f6aa4bffc43dcacf1f4e3e49","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30c8e5574b55d57947e989443dfde611646530ee","8dcdc17e7cf73a4779ecf173ff719b51fe2a2dd1"],"30c8e5574b55d57947e989443dfde611646530ee":[],"8dcdc17e7cf73a4779ecf173ff719b51fe2a2dd1":["ff5e25fb60ccc8574bcbd65396786ae9163f0149","30c8e5574b55d57947e989443dfde611646530ee"],"a1c374690db69470f6aa4bffc43dcacf1f4e3e49":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","bb222a3f9d9421d5c95afce73013fbd8de07ea1f","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}