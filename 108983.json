{"path":"solr/core/src/test/org/apache/solr/update/TestNestedUpdateProcessor#testNumberInName().mjava","commits":[{"id":"8da0c9170fd1c418b47b9a76a0447c60b1b99e5f","date":1548699906,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestNestedUpdateProcessor#testNumberInName().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testNumberInName() throws Exception {\n    // child named \"grandChild99\"  (has a number in it)\n    indexSampleData(jDoc.replace(\"grandChild\", \"grandChild99\"));\n    //assertQ(req(\"qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", IndexSchema.NEST_PATH_FIELD_NAME), \"false\"); // for debugging\n\n    // find it\n    assertJQ(req(\"q\", \"{!field f=\" + IndexSchema.NEST_PATH_FIELD_NAME + \"}/children/grandChild99\"),\n        \"/response/numFound==1\");\n    // should *NOT* find it; different number\n    assertJQ(req(\"q\", \"{!field f=\" + IndexSchema.NEST_PATH_FIELD_NAME + \"}/children/grandChild22\"),\n        \"/response/numFound==0\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"213e062dd7cfdd10e8df198b43616cb99b0c4fdd","date":1600693537,"type":3,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestNestedUpdateProcessor#testNumberInName().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/TestNestedUpdateProcessor#testNumberInName().mjava","sourceNew":"  @Test\n  public void testNumberInName() throws Exception {\n    // child named \"grandChild99\"  (has a number in it)\n    indexSampleData(jDoc.replace(\"grandChild\", \"grandChild99\"));\n    //assertQ(req(\"qt\", \"/terms\", \"terms.fl\", IndexSchema.NEST_PATH_FIELD_NAME), \"false\"); // for debugging\n\n    // find it\n    assertJQ(req(\"q\", \"{!field f=\" + IndexSchema.NEST_PATH_FIELD_NAME + \"}/children/grandChild99\"),\n        \"/response/numFound==1\");\n    // should *NOT* find it; different number\n    assertJQ(req(\"q\", \"{!field f=\" + IndexSchema.NEST_PATH_FIELD_NAME + \"}/children/grandChild22\"),\n        \"/response/numFound==0\");\n\n  }\n\n","sourceOld":"  @Test\n  public void testNumberInName() throws Exception {\n    // child named \"grandChild99\"  (has a number in it)\n    indexSampleData(jDoc.replace(\"grandChild\", \"grandChild99\"));\n    //assertQ(req(\"qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", IndexSchema.NEST_PATH_FIELD_NAME), \"false\"); // for debugging\n\n    // find it\n    assertJQ(req(\"q\", \"{!field f=\" + IndexSchema.NEST_PATH_FIELD_NAME + \"}/children/grandChild99\"),\n        \"/response/numFound==1\");\n    // should *NOT* find it; different number\n    assertJQ(req(\"q\", \"{!field f=\" + IndexSchema.NEST_PATH_FIELD_NAME + \"}/children/grandChild22\"),\n        \"/response/numFound==0\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8da0c9170fd1c418b47b9a76a0447c60b1b99e5f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"213e062dd7cfdd10e8df198b43616cb99b0c4fdd":["8da0c9170fd1c418b47b9a76a0447c60b1b99e5f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["213e062dd7cfdd10e8df198b43616cb99b0c4fdd"]},"commit2Childs":{"8da0c9170fd1c418b47b9a76a0447c60b1b99e5f":["213e062dd7cfdd10e8df198b43616cb99b0c4fdd"],"213e062dd7cfdd10e8df198b43616cb99b0c4fdd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8da0c9170fd1c418b47b9a76a0447c60b1b99e5f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}