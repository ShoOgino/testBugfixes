{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/CoresVariable#getTotalCores(Policy.Session,AtomicInteger).mjava","commits":[{"id":"cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb","date":1533364463,"type":0,"author":"noble","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/CoresVariable#getTotalCores(Policy.Session,AtomicInteger).mjava","pathOld":"/dev/null","sourceNew":"  private int getTotalCores(Policy.Session session, AtomicInteger liveNodes) {\n    int[] coresCount = new int[1];\n    for (Row row : session.matrix) {\n      if (!row.isLive) continue;\n      liveNodes.incrementAndGet();\n      row.forEachReplica(replicaInfo -> coresCount[0]++);\n    }\n    return coresCount[0];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58e890cd5653ae8550bc6088d739f4eaaf950aff","date":1547036285,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/CoresVariable#getTotalCores(Policy.Session,AtomicInteger).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/CoresVariable#getTotalCores(Policy.Session,AtomicInteger).mjava","sourceNew":"  private int getTotalCores(Policy.Session session, AtomicInteger liveNodes) {\n    int coresCount = 0;\n    for (Row row : session.matrix) {\n      if (!row.isLive) continue;\n      liveNodes.incrementAndGet();\n      Integer res = row.computeCacheIfAbsent(TOTALCORES, o -> {\n        int[] result = new int[1];\n        row.forEachReplica(replicaInfo -> result[0]++);\n        return result[0];\n      });\n      if (res != null)\n        coresCount += res;\n\n\n    }\n    return coresCount;\n  }\n\n","sourceOld":"  private int getTotalCores(Policy.Session session, AtomicInteger liveNodes) {\n    int[] coresCount = new int[1];\n    for (Row row : session.matrix) {\n      if (!row.isLive) continue;\n      liveNodes.incrementAndGet();\n      row.forEachReplica(replicaInfo -> coresCount[0]++);\n    }\n    return coresCount[0];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/CoresVariable#getTotalCores(Policy.Session,AtomicInteger).mjava","sourceNew":null,"sourceOld":"  private int getTotalCores(Policy.Session session, AtomicInteger liveNodes) {\n    int coresCount = 0;\n    for (Row row : session.matrix) {\n      if (!row.isLive) continue;\n      liveNodes.incrementAndGet();\n      Integer res = row.computeCacheIfAbsent(TOTALCORES, o -> {\n        int[] result = new int[1];\n        row.forEachReplica(replicaInfo -> result[0]++);\n        return result[0];\n      });\n      if (res != null)\n        coresCount += res;\n\n\n    }\n    return coresCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58e890cd5653ae8550bc6088d739f4eaaf950aff":["cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb"],"3f504512a03d978990cbff30db0522b354e846db":["58e890cd5653ae8550bc6088d739f4eaaf950aff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"58e890cd5653ae8550bc6088d739f4eaaf950aff":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb"],"cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb":["58e890cd5653ae8550bc6088d739f4eaaf950aff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}