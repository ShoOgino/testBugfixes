{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Stemmer#Stemmer(Dictionary,int).mjava","commits":[{"id":"c214bc712d04c78c4d434119d560d0a4dd2fce4f","date":1393216863,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Stemmer#Stemmer(Dictionary,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Constructs a new Stemmer which will use the provided Dictionary to create its stems.\n   *\n   * @param dictionary Dictionary that will be used to create the stems\n   * @param recursionCap maximum level of recursion stemmer can go into\n   */\n  public Stemmer(Dictionary dictionary, int recursionCap) {\n    this.dictionary = dictionary;\n    this.recursionCap = recursionCap;\n  } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2c9254ffcc358b8a9b1a89c7d5e74fe8a98531c","date":1393521555,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Stemmer#Stemmer(Dictionary,int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Stemmer#Stemmer(Dictionary,int).mjava","sourceNew":"  /**\n   * Constructs a new Stemmer which will use the provided Dictionary to create its stems.\n   *\n   * @param dictionary Dictionary that will be used to create the stems\n   * @param recursionCap maximum level of recursion stemmer can go into\n   */\n  public Stemmer(Dictionary dictionary, int recursionCap) {\n    this.dictionary = dictionary;\n    this.affixReader = new ByteArrayDataInput(dictionary.affixData);\n    this.recursionCap = recursionCap;\n  } \n\n","sourceOld":"  /**\n   * Constructs a new Stemmer which will use the provided Dictionary to create its stems.\n   *\n   * @param dictionary Dictionary that will be used to create the stems\n   * @param recursionCap maximum level of recursion stemmer can go into\n   */\n  public Stemmer(Dictionary dictionary, int recursionCap) {\n    this.dictionary = dictionary;\n    this.recursionCap = recursionCap;\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e","date":1393532367,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/Stemmer#Stemmer(Dictionary,int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Stemmer#Stemmer(Dictionary,int).mjava","sourceNew":"  /**\n   * Constructs a new Stemmer which will use the provided Dictionary to create its stems.\n   *\n   * @param dictionary Dictionary that will be used to create the stems\n   * @param recursionCap maximum level of recursion stemmer can go into\n   */\n  public Stemmer(Dictionary dictionary, int recursionCap) {\n    this.dictionary = dictionary;\n    this.affixReader = new ByteArrayDataInput(dictionary.affixData);\n    this.recursionCap = recursionCap;\n  } \n\n","sourceOld":"  /**\n   * Constructs a new Stemmer which will use the provided Dictionary to create its stems.\n   *\n   * @param dictionary Dictionary that will be used to create the stems\n   * @param recursionCap maximum level of recursion stemmer can go into\n   */\n  public Stemmer(Dictionary dictionary, int recursionCap) {\n    this.dictionary = dictionary;\n    this.affixReader = new ByteArrayDataInput(dictionary.affixData);\n    this.recursionCap = recursionCap;\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":["e2c9254ffcc358b8a9b1a89c7d5e74fe8a98531c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e2c9254ffcc358b8a9b1a89c7d5e74fe8a98531c":["c214bc712d04c78c4d434119d560d0a4dd2fce4f"],"c214bc712d04c78c4d434119d560d0a4dd2fce4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":[],"e2c9254ffcc358b8a9b1a89c7d5e74fe8a98531c":["dc3f094cafa4a87b4066e1d6710fa4e6afe6260e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c214bc712d04c78c4d434119d560d0a4dd2fce4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c214bc712d04c78c4d434119d560d0a4dd2fce4f":["e2c9254ffcc358b8a9b1a89c7d5e74fe8a98531c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["dc3f094cafa4a87b4066e1d6710fa4e6afe6260e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}