{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeMerge(MergePolicy,MergeTrigger,int).mjava","commits":[{"id":"ee59f646cf24586a449cad77391a60a3ac8d8959","date":1408015131,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeMerge(MergePolicy,MergeTrigger,int).mjava","pathOld":"/dev/null","sourceNew":"  private final void maybeMerge(MergePolicy mergePolicy, MergeTrigger trigger, int maxNumSegments) throws IOException {\n    ensureOpen(false);\n    boolean newMergesFound = updatePendingMerges(mergePolicy, trigger, maxNumSegments);\n    mergeScheduler.merge(this, trigger, newMergesFound);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeMerge(MergePolicy,MergeTrigger,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeMerge(MergePolicy,MergeTrigger,int).mjava","sourceNew":"  final void maybeMerge(MergePolicy mergePolicy, MergeTrigger trigger, int maxNumSegments) throws IOException {\n    ensureOpen(false);\n    boolean newMergesFound = updatePendingMerges(mergePolicy, trigger, maxNumSegments);\n    mergeScheduler.merge(this, trigger, newMergesFound);\n  }\n\n","sourceOld":"  private final void maybeMerge(MergePolicy mergePolicy, MergeTrigger trigger, int maxNumSegments) throws IOException {\n    ensureOpen(false);\n    boolean newMergesFound = updatePendingMerges(mergePolicy, trigger, maxNumSegments);\n    mergeScheduler.merge(this, trigger, newMergesFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeMerge(MergePolicy,MergeTrigger,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeMerge(MergePolicy,MergeTrigger,int).mjava","sourceNew":"  final void maybeMerge(MergePolicy mergePolicy, MergeTrigger trigger, int maxNumSegments) throws IOException {\n    ensureOpen(false);\n    boolean newMergesFound = updatePendingMerges(mergePolicy, trigger, maxNumSegments);\n    mergeScheduler.merge(this, trigger, newMergesFound);\n  }\n\n","sourceOld":"  private final void maybeMerge(MergePolicy mergePolicy, MergeTrigger trigger, int maxNumSegments) throws IOException {\n    ensureOpen(false);\n    boolean newMergesFound = updatePendingMerges(mergePolicy, trigger, maxNumSegments);\n    mergeScheduler.merge(this, trigger, newMergesFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeMerge(MergePolicy,MergeTrigger,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeMerge(MergePolicy,MergeTrigger,int).mjava","sourceNew":"  final void maybeMerge(MergePolicy mergePolicy, MergeTrigger trigger, int maxNumSegments) throws IOException {\n    ensureOpen(false);\n    boolean newMergesFound = updatePendingMerges(mergePolicy, trigger, maxNumSegments);\n    mergeScheduler.merge(this, trigger, newMergesFound);\n  }\n\n","sourceOld":"  private final void maybeMerge(MergePolicy mergePolicy, MergeTrigger trigger, int maxNumSegments) throws IOException {\n    ensureOpen(false);\n    boolean newMergesFound = updatePendingMerges(mergePolicy, trigger, maxNumSegments);\n    mergeScheduler.merge(this, trigger, newMergesFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2178aefcd4690bd53785e9673e2c918cdb64165","date":1587583605,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeMerge(MergePolicy,MergeTrigger,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeMerge(MergePolicy,MergeTrigger,int).mjava","sourceNew":"  final void maybeMerge(MergePolicy mergePolicy, MergeTrigger trigger, int maxNumSegments) throws IOException {\n    ensureOpen(false);\n    if (updatePendingMerges(mergePolicy, trigger, maxNumSegments)) {\n      mergeScheduler.merge(this, trigger);\n    }\n  }\n\n","sourceOld":"  final void maybeMerge(MergePolicy mergePolicy, MergeTrigger trigger, int maxNumSegments) throws IOException {\n    ensureOpen(false);\n    boolean newMergesFound = updatePendingMerges(mergePolicy, trigger, maxNumSegments);\n    mergeScheduler.merge(this, trigger, newMergesFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89697e7abc9807639c384eecf5a2a6eef1080426","date":1587733375,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeMerge(MergePolicy,MergeTrigger,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeMerge(MergePolicy,MergeTrigger,int).mjava","sourceNew":"  final void maybeMerge(MergePolicy mergePolicy, MergeTrigger trigger, int maxNumSegments) throws IOException {\n    ensureOpen(false);\n    if (updatePendingMerges(mergePolicy, trigger, maxNumSegments)) {\n      mergeScheduler.merge(mergeSource, trigger);\n    }\n  }\n\n","sourceOld":"  final void maybeMerge(MergePolicy mergePolicy, MergeTrigger trigger, int maxNumSegments) throws IOException {\n    ensureOpen(false);\n    if (updatePendingMerges(mergePolicy, trigger, maxNumSegments)) {\n      mergeScheduler.merge(this, trigger);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2","date":1588002560,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeMerge(MergePolicy,MergeTrigger,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeMerge(MergePolicy,MergeTrigger,int).mjava","sourceNew":"  private final void maybeMerge(MergePolicy mergePolicy, MergeTrigger trigger, int maxNumSegments) throws IOException {\n    ensureOpen(false);\n    if (updatePendingMerges(mergePolicy, trigger, maxNumSegments)) {\n      mergeScheduler.merge(mergeSource, trigger);\n    }\n  }\n\n","sourceOld":"  final void maybeMerge(MergePolicy mergePolicy, MergeTrigger trigger, int maxNumSegments) throws IOException {\n    ensureOpen(false);\n    if (updatePendingMerges(mergePolicy, trigger, maxNumSegments)) {\n      mergeScheduler.merge(mergeSource, trigger);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af4f318fc7955d8e4e40cdf4a8a93931004fe7c0","date":1592426892,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeMerge(MergePolicy,MergeTrigger,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeMerge(MergePolicy,MergeTrigger,int).mjava","sourceNew":"  private final void maybeMerge(MergePolicy mergePolicy, MergeTrigger trigger, int maxNumSegments) throws IOException {\n    ensureOpen(false);\n    if (updatePendingMerges(mergePolicy, trigger, maxNumSegments) != null) {\n      mergeScheduler.merge(mergeSource, trigger);\n    }\n  }\n\n","sourceOld":"  private final void maybeMerge(MergePolicy mergePolicy, MergeTrigger trigger, int maxNumSegments) throws IOException {\n    ensureOpen(false);\n    if (updatePendingMerges(mergePolicy, trigger, maxNumSegments)) {\n      mergeScheduler.merge(mergeSource, trigger);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f354ba79a5a3e8491ec2953f14f365a02c058ac","date":1598293148,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeMerge(MergePolicy,MergeTrigger,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeMerge(MergePolicy,MergeTrigger,int).mjava","sourceNew":"  private final void maybeMerge(MergePolicy mergePolicy, MergeTrigger trigger, int maxNumSegments) throws IOException {\n    ensureOpen(false);\n    if (updatePendingMerges(mergePolicy, trigger, maxNumSegments) != null) {\n      executeMerge(trigger);\n    }\n  }\n\n","sourceOld":"  private final void maybeMerge(MergePolicy mergePolicy, MergeTrigger trigger, int maxNumSegments) throws IOException {\n    ensureOpen(false);\n    if (updatePendingMerges(mergePolicy, trigger, maxNumSegments) != null) {\n      mergeScheduler.merge(mergeSource, trigger);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af4f318fc7955d8e4e40cdf4a8a93931004fe7c0":["8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2"],"89697e7abc9807639c384eecf5a2a6eef1080426":["d2178aefcd4690bd53785e9673e2c918cdb64165"],"d2178aefcd4690bd53785e9673e2c918cdb64165":["28288370235ed02234a64753cdbf0c6ec096304a"],"ee59f646cf24586a449cad77391a60a3ac8d8959":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["ee59f646cf24586a449cad77391a60a3ac8d8959"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2":["89697e7abc9807639c384eecf5a2a6eef1080426"],"3f354ba79a5a3e8491ec2953f14f365a02c058ac":["af4f318fc7955d8e4e40cdf4a8a93931004fe7c0"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["ee59f646cf24586a449cad77391a60a3ac8d8959","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["ee59f646cf24586a449cad77391a60a3ac8d8959","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f354ba79a5a3e8491ec2953f14f365a02c058ac"]},"commit2Childs":{"af4f318fc7955d8e4e40cdf4a8a93931004fe7c0":["3f354ba79a5a3e8491ec2953f14f365a02c058ac"],"89697e7abc9807639c384eecf5a2a6eef1080426":["8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2"],"d2178aefcd4690bd53785e9673e2c918cdb64165":["89697e7abc9807639c384eecf5a2a6eef1080426"],"ee59f646cf24586a449cad77391a60a3ac8d8959":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ee59f646cf24586a449cad77391a60a3ac8d8959"],"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2":["af4f318fc7955d8e4e40cdf4a8a93931004fe7c0"],"3f354ba79a5a3e8491ec2953f14f365a02c058ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["d2178aefcd4690bd53785e9673e2c918cdb64165"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}