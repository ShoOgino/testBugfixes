{"path":"lucene/core/src/java/org/apache/lucene/index/MultiFields#totalTermFreq(IndexReader,String,BytesRef).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#totalTermFreq(IndexReader,String,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiFields#totalTermFreq(IndexReader,String,BytesRef).mjava","sourceNew":"  public static long totalTermFreq(IndexReader r, String field, BytesRef text) throws IOException {\n    final Terms terms = getTerms(r, field);\n    if (terms != null) {\n      final TermsEnum termsEnum = terms.iterator(null);\n      if (termsEnum.seekExact(text, true)) {\n        return termsEnum.totalTermFreq();\n      }\n    }\n    return 0;\n  }\n\n","sourceOld":"  public static long totalTermFreq(IndexReader r, String field, BytesRef text) throws IOException {\n    final Terms terms = getTerms(r, field);\n    if (terms != null) {\n      final TermsEnum termsEnum = terms.iterator(null);\n      if (termsEnum.seekExact(text, true)) {\n        return termsEnum.totalTermFreq();\n      }\n    }\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3b4a63b6b0155323dde6b827e0dc22a43580753","date":1346168671,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#totalTermFreq(IndexReader,String,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#totalTermFreq(IndexReader,String,BytesRef).mjava","sourceNew":"  /** Returns the total number of occurrences of this term\n   *  across all documents (the sum of the freq() for each\n   *  doc that has this term).  This will be -1 if the\n   *  codec doesn't support this measure.  Note that, like\n   *  other term measures, this measure does not take\n   *  deleted documents into account.\n   * @see TermsEnum#totalTermFreq()\n   */\n  public static long totalTermFreq(IndexReader r, String field, BytesRef text) throws IOException {\n    final Terms terms = getTerms(r, field);\n    if (terms != null) {\n      final TermsEnum termsEnum = terms.iterator(null);\n      if (termsEnum.seekExact(text, true)) {\n        return termsEnum.totalTermFreq();\n      }\n    }\n    return 0;\n  }\n\n","sourceOld":"  public static long totalTermFreq(IndexReader r, String field, BytesRef text) throws IOException {\n    final Terms terms = getTerms(r, field);\n    if (terms != null) {\n      final TermsEnum termsEnum = terms.iterator(null);\n      if (termsEnum.seekExact(text, true)) {\n        return termsEnum.totalTermFreq();\n      }\n    }\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#totalTermFreq(IndexReader,String,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#totalTermFreq(IndexReader,String,BytesRef).mjava","sourceNew":"  /** Returns the total number of occurrences of this term\n   *  across all documents (the sum of the freq() for each\n   *  doc that has this term).  This will be -1 if the\n   *  codec doesn't support this measure.  Note that, like\n   *  other term measures, this measure does not take\n   *  deleted documents into account.\n   * @see TermsEnum#totalTermFreq()\n   */\n  public static long totalTermFreq(IndexReader r, String field, BytesRef text) throws IOException {\n    final Terms terms = getTerms(r, field);\n    if (terms != null) {\n      final TermsEnum termsEnum = terms.iterator(null);\n      if (termsEnum.seekExact(text, true)) {\n        return termsEnum.totalTermFreq();\n      }\n    }\n    return 0;\n  }\n\n","sourceOld":"  public static long totalTermFreq(IndexReader r, String field, BytesRef text) throws IOException {\n    final Terms terms = getTerms(r, field);\n    if (terms != null) {\n      final TermsEnum termsEnum = terms.iterator(null);\n      if (termsEnum.seekExact(text, true)) {\n        return termsEnum.totalTermFreq();\n      }\n    }\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10cc809885aee4d16fe14baa327d43c5592ec55c","date":1363795545,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#totalTermFreq(IndexReader,String,BytesRef).mjava","sourceNew":null,"sourceOld":"  /** Returns the total number of occurrences of this term\n   *  across all documents (the sum of the freq() for each\n   *  doc that has this term).  This will be -1 if the\n   *  codec doesn't support this measure.  Note that, like\n   *  other term measures, this measure does not take\n   *  deleted documents into account.\n   * @see TermsEnum#totalTermFreq()\n   */\n  public static long totalTermFreq(IndexReader r, String field, BytesRef text) throws IOException {\n    final Terms terms = getTerms(r, field);\n    if (terms != null) {\n      final TermsEnum termsEnum = terms.iterator(null);\n      if (termsEnum.seekExact(text, true)) {\n        return termsEnum.totalTermFreq();\n      }\n    }\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"10cc809885aee4d16fe14baa327d43c5592ec55c":["a3b4a63b6b0155323dde6b827e0dc22a43580753"],"a3b4a63b6b0155323dde6b827e0dc22a43580753":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05a14b2611ead08655a2b2bdc61632eb31316e57":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","a3b4a63b6b0155323dde6b827e0dc22a43580753"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["10cc809885aee4d16fe14baa327d43c5592ec55c"]},"commit2Childs":{"10cc809885aee4d16fe14baa327d43c5592ec55c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3b4a63b6b0155323dde6b827e0dc22a43580753":["10cc809885aee4d16fe14baa327d43c5592ec55c","05a14b2611ead08655a2b2bdc61632eb31316e57"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a3b4a63b6b0155323dde6b827e0dc22a43580753","05a14b2611ead08655a2b2bdc61632eb31316e57"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}