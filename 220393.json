{"path":"src/test/org/apache/lucene/search/PayloadFilter[TestPositionIncrement]#incrementToken().mjava","commits":[{"id":"9c576fba1e3c6d11c61fa0802214d5150fb5c633","date":1243676170,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/PayloadFilter[TestPositionIncrement]#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      payloadAttr.setPayload(new Payload((\"pos: \" + pos).getBytes()));\n      int posIncr;\n      if (i % 2 == 1) {\n        posIncr = 1;\n      } else {\n        posIncr = 0;\n      }\n      posIncrAttr.setPositionIncrement(posIncr);\n      pos += posIncr;\n      // System.out.println(\"term=\" + termAttr.term() + \" pos=\" + pos);\n      i++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/PayloadFilter[TestPositionIncrement]#incrementToken().mjava","pathOld":"src/test/org/apache/lucene/search/PayloadFilter[TestPositionIncrement]#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      payloadAttr.setPayload(new Payload((\"pos: \" + pos).getBytes()));\n      int posIncr;\n      if (i % 2 == 1) {\n        posIncr = 1;\n      } else {\n        posIncr = 0;\n      }\n      posIncrAttr.setPositionIncrement(posIncr);\n      pos += posIncr;\n      // System.out.println(\"term=\" + termAttr.term() + \" pos=\" + pos);\n      i++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      payloadAttr.setPayload(new Payload((\"pos: \" + pos).getBytes()));\n      int posIncr;\n      if (i % 2 == 1) {\n        posIncr = 1;\n      } else {\n        posIncr = 0;\n      }\n      posIncrAttr.setPositionIncrement(posIncr);\n      pos += posIncr;\n      // System.out.println(\"term=\" + termAttr.term() + \" pos=\" + pos);\n      i++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/PayloadFilter[TestPositionIncrement]#incrementToken().mjava","pathOld":"src/test/org/apache/lucene/search/PayloadFilter[TestPositionIncrement]#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      payloadAttr.setPayload(new Payload((\"pos: \" + pos).getBytes()));\n      int posIncr;\n      if (i % 2 == 1) {\n        posIncr = 1;\n      } else {\n        posIncr = 0;\n      }\n      posIncrAttr.setPositionIncrement(posIncr);\n      pos += posIncr;\n      // System.out.println(\"term=\" + termAttr.term() + \" pos=\" + pos);\n      i++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      payloadAttr.setPayload(new Payload((\"pos: \" + pos).getBytes()));\n      int posIncr;\n      if (i % 2 == 1) {\n        posIncr = 1;\n      } else {\n        posIncr = 0;\n      }\n      posIncrAttr.setPositionIncrement(posIncr);\n      pos += posIncr;\n      // System.out.println(\"term=\" + termAttr.term() + \" pos=\" + pos);\n      i++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["9c576fba1e3c6d11c61fa0802214d5150fb5c633"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"9c576fba1e3c6d11c61fa0802214d5150fb5c633":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9c576fba1e3c6d11c61fa0802214d5150fb5c633"],"9c576fba1e3c6d11c61fa0802214d5150fb5c633":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}