{"path":"src/java/org/apache/solr/analysis/GreekLowerCaseFilterFactory#init(Map[String,String]).mjava","commits":[{"id":"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014","date":1195912306,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/GreekLowerCaseFilterFactory#init(Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/analysis/GreekLowerCaseFilterFactory#init(SolrConfig,Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    String charsetName = args.get(\"charset\");\n    if (null != charsetName) charset = CHARSETS.get(charsetName);\n    if (null == charset) {\n      throw new SolrException(ErrorCode.SERVER_ERROR,\n                              \"Don't understand charset: \" + charsetName);\n    }\n  }\n\n","sourceOld":"  public void init(SolrConfig solrConfig, Map<String, String> args) {\n    super.init(solrConfig, args);\n    String charsetName = args.get(\"charset\");\n    if (null != charsetName) charset = CHARSETS.get(charsetName);\n    if (null == charset) {\n      throw new SolrException(ErrorCode.SERVER_ERROR,\n                              \"Don't understand charset: \" + charsetName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b88b4d450791fc8d1f192d35864e0b3634fa8c4","date":1252468692,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/GreekLowerCaseFilterFactory#init(Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/analysis/GreekLowerCaseFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    String charsetName = args.get(\"charset\");\n    if (null != charsetName) {\n      charset = CHARSETS.get(charsetName);\n      if (charset.equals(GreekCharsets.UnicodeGreek))\n        logger.warn(\"Specifying UnicodeGreek is no longer required (default).  \"\n            + \"Use of the charset parameter will cause an error in Solr 1.5\");\n      else\n        logger.warn(\"Support for this custom encoding is deprecated.  \"\n            + \"Use of the charset parameter will cause an error in Solr 1.5\");\n    } else {\n      charset = GreekCharsets.UnicodeGreek; /* default to unicode */\n    }\n    if (null == charset) {\n      throw new SolrException(ErrorCode.SERVER_ERROR,\n                              \"Don't understand charset: \" + charsetName);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    String charsetName = args.get(\"charset\");\n    if (null != charsetName) charset = CHARSETS.get(charsetName);\n    if (null == charset) {\n      throw new SolrException(ErrorCode.SERVER_ERROR,\n                              \"Don't understand charset: \" + charsetName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef28ac95f5f85bbf872801277448c0924b0a6827","date":1268600312,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/GreekLowerCaseFilterFactory#init(Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/analysis/GreekLowerCaseFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    String charsetName = args.get(\"charset\");\n    if (null != charsetName) {\n      charset = CHARSETS.get(charsetName);\n      if (charset.equals(GreekCharsets.UnicodeGreek))\n        logger.warn(\"Specifying UnicodeGreek is no longer required (default).  \"\n            + \"Use of the charset parameter will cause an error in Solr 1.5\");\n      else\n        logger.warn(\"Support for this custom encoding is deprecated.  \"\n            + \"Use of the charset parameter will cause an error in Solr 1.5\");\n    } else {\n      charset = GreekCharsets.UnicodeGreek; /* default to unicode */\n    }\n    if (null == charset) {\n      throw new SolrException(ErrorCode.SERVER_ERROR,\n                              \"Don't understand charset: \" + charsetName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af0961e1f0fb1815c2f245a9de3a42e7c47a1d44","date":1268601407,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/GreekLowerCaseFilterFactory#init(Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/analysis/GreekLowerCaseFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    if (args.containsKey(\"charset\"))\n      throw new SolrException(ErrorCode.SERVER_ERROR,\n          \"The charset parameter is no longer supported.  \"\n          + \"Please process your documents as Unicode instead.\");\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/GreekLowerCaseFilterFactory#init(Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/analysis/GreekLowerCaseFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    if (args.containsKey(\"charset\"))\n      throw new SolrException(ErrorCode.SERVER_ERROR,\n          \"The charset parameter is no longer supported.  \"\n          + \"Please process your documents as Unicode instead.\");\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    if (args.containsKey(\"charset\"))\n      throw new SolrException(ErrorCode.SERVER_ERROR,\n          \"The charset parameter is no longer supported.  \"\n          + \"Please process your documents as Unicode instead.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af0961e1f0fb1815c2f245a9de3a42e7c47a1d44":["ef28ac95f5f85bbf872801277448c0924b0a6827"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ef28ac95f5f85bbf872801277448c0924b0a6827":["2b88b4d450791fc8d1f192d35864e0b3634fa8c4"],"2b88b4d450791fc8d1f192d35864e0b3634fa8c4":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"ad94625fb8d088209f46650c8097196fec67f00c":["af0961e1f0fb1815c2f245a9de3a42e7c47a1d44"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"af0961e1f0fb1815c2f245a9de3a42e7c47a1d44":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"ef28ac95f5f85bbf872801277448c0924b0a6827":["af0961e1f0fb1815c2f245a9de3a42e7c47a1d44"],"2b88b4d450791fc8d1f192d35864e0b3634fa8c4":["ef28ac95f5f85bbf872801277448c0924b0a6827"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["2b88b4d450791fc8d1f192d35864e0b3634fa8c4"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}