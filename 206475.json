{"path":"solr/core/src/test/org/apache/solr/schema/TestPointFields#doTestFloatPointFieldsAtomicUpdates(String).mjava","commits":[{"id":"17e844d4f9ba6804f10747d7e51e83a9a8868c94","date":1500054875,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestPointFields#doTestFloatPointFieldsAtomicUpdates(String).mjava","pathOld":"/dev/null","sourceNew":"  private void doTestFloatPointFieldsAtomicUpdates(String field) throws Exception {\n    float number1 = getRandomFloats(1, false).get(0);\n    float number2;\n    double inc1;\n    for ( ; ; ) {\n      number2 = getRandomFloats(1, false).get(0);\n      inc1 = (double)number2 - (double)number1;\n      if (Math.abs(inc1) < (double)Float.MAX_VALUE) {\n        number2 = number1 + (float)inc1;\n        break;\n      }\n    }\n    assertU(adoc(sdoc(\"id\", \"1\", field, String.valueOf(number1))));\n    assertU(commit());\n\n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"inc\", (float)inc1))));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/float[@name='\" + field + \"'][.='\" + number2 + \"']\");\n\n    float number3 = getRandomFloats(1, false).get(0);\n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"set\", number3))));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/float[@name='\" + field + \"'][.='\" + number3 + \"']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aaf90fc29510e72665ac7934f34c3d1c25efad64","date":1500354819,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestPointFields#doTestFloatPointFieldsAtomicUpdates(String).mjava","pathOld":"/dev/null","sourceNew":"  private void doTestFloatPointFieldsAtomicUpdates(String field) throws Exception {\n    float number1 = getRandomFloats(1, false).get(0);\n    float number2;\n    double inc1;\n    for ( ; ; ) {\n      number2 = getRandomFloats(1, false).get(0);\n      inc1 = (double)number2 - (double)number1;\n      if (Math.abs(inc1) < (double)Float.MAX_VALUE) {\n        number2 = number1 + (float)inc1;\n        break;\n      }\n    }\n    assertU(adoc(sdoc(\"id\", \"1\", field, String.valueOf(number1))));\n    assertU(commit());\n\n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"inc\", (float)inc1))));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/float[@name='\" + field + \"'][.='\" + number2 + \"']\");\n\n    float number3 = getRandomFloats(1, false).get(0);\n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"set\", number3))));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/float[@name='\" + field + \"'][.='\" + number3 + \"']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aaf90fc29510e72665ac7934f34c3d1c25efad64":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e844d4f9ba6804f10747d7e51e83a9a8868c94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e844d4f9ba6804f10747d7e51e83a9a8868c94":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e844d4f9ba6804f10747d7e51e83a9a8868c94"]},"commit2Childs":{"aaf90fc29510e72665ac7934f34c3d1c25efad64":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aaf90fc29510e72665ac7934f34c3d1c25efad64","17e844d4f9ba6804f10747d7e51e83a9a8868c94"],"17e844d4f9ba6804f10747d7e51e83a9a8868c94":["aaf90fc29510e72665ac7934f34c3d1c25efad64","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aaf90fc29510e72665ac7934f34c3d1c25efad64","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}