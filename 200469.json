{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/StreamUtils.Type#outputStream(OutputStream).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/StreamUtils.Type#outputStream(OutputStream).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/StreamUtils.Type#outputStream(OutputStream).mjava","sourceNew":"\t\tprivate OutputStream outputStream(OutputStream os) throws IOException {\n\t\t\ttry {\n\t\t\t\treturn csfType==null ? os : new CompressorStreamFactory().createCompressorOutputStream(csfType, os);\n\t\t\t} catch (CompressorException e) {\n\t\t\t\tIOException ioe = new IOException(e.getMessage());\n\t\t\t\tioe.initCause(e);\n\t\t\t\tthrow ioe;  \n\t\t\t}  \n\t\t}\n\n","sourceOld":"\t\tprivate OutputStream outputStream(OutputStream os) throws IOException {\n\t\t\ttry {\n\t\t\t\treturn csfType==null ? os : new CompressorStreamFactory().createCompressorOutputStream(csfType, os);\n\t\t\t} catch (CompressorException e) {\n\t\t\t\tIOException ioe = new IOException(e.getMessage());\n\t\t\t\tioe.initCause(e);\n\t\t\t\tthrow ioe;  \n\t\t\t}  \n\t\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/StreamUtils.Type#outputStream(OutputStream).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/StreamUtils.Type#outputStream(OutputStream).mjava","sourceNew":"    private OutputStream outputStream(OutputStream os) throws IOException {\n      try {\n        return csfType==null ? os : new CompressorStreamFactory().createCompressorOutputStream(csfType, os);\n      } catch (CompressorException e) {\n        IOException ioe = new IOException(e.getMessage());\n        ioe.initCause(e);\n        throw ioe;\n      }\n    }\n\n","sourceOld":"\t\tprivate OutputStream outputStream(OutputStream os) throws IOException {\n\t\t\ttry {\n\t\t\t\treturn csfType==null ? os : new CompressorStreamFactory().createCompressorOutputStream(csfType, os);\n\t\t\t} catch (CompressorException e) {\n\t\t\t\tIOException ioe = new IOException(e.getMessage());\n\t\t\t\tioe.initCause(e);\n\t\t\t\tthrow ioe;  \n\t\t\t}  \n\t\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3de2e9a536c4115b4f53f14b6ab496ba3af1840c","date":1400252137,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/StreamUtils.Type#outputStream(OutputStream).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/StreamUtils.Type#outputStream(OutputStream).mjava","sourceNew":"    private OutputStream outputStream(OutputStream os) throws IOException {\n      try {\n        return csfType==null ? os : new CompressorStreamFactory().createCompressorOutputStream(csfType, os);\n      } catch (CompressorException e) {\n        throw new IOException(e.getMessage(), e);\n      }\n    }\n\n","sourceOld":"    private OutputStream outputStream(OutputStream os) throws IOException {\n      try {\n        return csfType==null ? os : new CompressorStreamFactory().createCompressorOutputStream(csfType, os);\n      } catch (CompressorException e) {\n        IOException ioe = new IOException(e.getMessage());\n        ioe.initCause(e);\n        throw ioe;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ccc69a67d5c846a04c7f71e28cb1914e3af895f3","date":1400252660,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/StreamUtils.Type#outputStream(OutputStream).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/StreamUtils.Type#outputStream(OutputStream).mjava","sourceNew":"    private OutputStream outputStream(OutputStream os) throws IOException {\n      try {\n        return csfType==null ? os : new CompressorStreamFactory().createCompressorOutputStream(csfType, os);\n      } catch (CompressorException e) {\n        throw new IOException(e.getMessage(), e);\n      }\n    }\n\n","sourceOld":"    private OutputStream outputStream(OutputStream os) throws IOException {\n      try {\n        return csfType==null ? os : new CompressorStreamFactory().createCompressorOutputStream(csfType, os);\n      } catch (CompressorException e) {\n        IOException ioe = new IOException(e.getMessage());\n        ioe.initCause(e);\n        throw ioe;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/StreamUtils.Type#outputStream(OutputStream).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/StreamUtils.Type#outputStream(OutputStream).mjava","sourceNew":"    private OutputStream outputStream(OutputStream os) throws IOException {\n      try {\n        return csfType==null ? os : new CompressorStreamFactory().createCompressorOutputStream(csfType, os);\n      } catch (CompressorException e) {\n        throw new IOException(e.getMessage(), e);\n      }\n    }\n\n","sourceOld":"    private OutputStream outputStream(OutputStream os) throws IOException {\n      try {\n        return csfType==null ? os : new CompressorStreamFactory().createCompressorOutputStream(csfType, os);\n      } catch (CompressorException e) {\n        IOException ioe = new IOException(e.getMessage());\n        ioe.initCause(e);\n        throw ioe;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"56572ec06f1407c066d6b7399413178b33176cd8":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376","3de2e9a536c4115b4f53f14b6ab496ba3af1840c"],"3de2e9a536c4115b4f53f14b6ab496ba3af1840c":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3de2e9a536c4115b4f53f14b6ab496ba3af1840c"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ccc69a67d5c846a04c7f71e28cb1914e3af895f3":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376","3de2e9a536c4115b4f53f14b6ab496ba3af1840c"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"3de2e9a536c4115b4f53f14b6ab496ba3af1840c":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817","ccc69a67d5c846a04c7f71e28cb1914e3af895f3"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["56572ec06f1407c066d6b7399413178b33176cd8","3de2e9a536c4115b4f53f14b6ab496ba3af1840c","ccc69a67d5c846a04c7f71e28cb1914e3af895f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"ccc69a67d5c846a04c7f71e28cb1914e3af895f3":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817","ccc69a67d5c846a04c7f71e28cb1914e3af895f3"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}