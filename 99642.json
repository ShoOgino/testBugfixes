{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger#wrapDs(DataSource).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger#wrapDs(DataSource).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DebugLogger#wrapDs(DataSource).mjava","sourceNew":"  DataSource wrapDs(final DataSource ds) {\n    return new DataSource() {\n      @Override\n      public void init(Context context, Properties initProps) {\n        ds.init(context, initProps);\n      }\n\n      @Override\n      public void close() {\n        ds.close();\n      }\n\n      @Override\n      public Object getData(String query) {\n        writer.log(SolrWriter.ENTITY_META, \"query\", query);\n        long start = System.currentTimeMillis();\n        try {\n          return ds.getData(query);\n        } catch (DataImportHandlerException de) {\n          writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, de);\n          throw de;\n        } catch (Exception e) {\n          writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, e);\n          DataImportHandlerException de = new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, \"\", e);\n          de.debugged = true;\n          throw de;\n        } finally {\n          writer.log(SolrWriter.ENTITY_META, \"time-taken\", DocBuilder\n                  .getTimeElapsedSince(start));\n        }\n      }\n    };\n  }\n\n","sourceOld":"  DataSource wrapDs(final DataSource ds) {\n    return new DataSource() {\n      @Override\n      public void init(Context context, Properties initProps) {\n        ds.init(context, initProps);\n      }\n\n      @Override\n      public void close() {\n        ds.close();\n      }\n\n      @Override\n      public Object getData(String query) {\n        writer.log(SolrWriter.ENTITY_META, \"query\", query);\n        long start = System.currentTimeMillis();\n        try {\n          return ds.getData(query);\n        } catch (DataImportHandlerException de) {\n          writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, de);\n          throw de;\n        } catch (Exception e) {\n          writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, e);\n          DataImportHandlerException de = new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, \"\", e);\n          de.debugged = true;\n          throw de;\n        } finally {\n          writer.log(SolrWriter.ENTITY_META, \"time-taken\", DocBuilder\n                  .getTimeElapsedSince(start));\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger#wrapDs(DataSource).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DebugLogger#wrapDs(DataSource).mjava","sourceNew":"  DataSource wrapDs(final DataSource ds) {\n    return new DataSource() {\n      @Override\n      public void init(Context context, Properties initProps) {\n        ds.init(context, initProps);\n      }\n\n      @Override\n      public void close() {\n        ds.close();\n      }\n\n      @Override\n      public Object getData(String query) {\n        writer.log(SolrWriter.ENTITY_META, \"query\", query);\n        long start = System.currentTimeMillis();\n        try {\n          return ds.getData(query);\n        } catch (DataImportHandlerException de) {\n          writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, de);\n          throw de;\n        } catch (Exception e) {\n          writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, e);\n          DataImportHandlerException de = new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, \"\", e);\n          de.debugged = true;\n          throw de;\n        } finally {\n          writer.log(SolrWriter.ENTITY_META, \"time-taken\", DocBuilder\n                  .getTimeElapsedSince(start));\n        }\n      }\n    };\n  }\n\n","sourceOld":"  DataSource wrapDs(final DataSource ds) {\n    return new DataSource() {\n      @Override\n      public void init(Context context, Properties initProps) {\n        ds.init(context, initProps);\n      }\n\n      @Override\n      public void close() {\n        ds.close();\n      }\n\n      @Override\n      public Object getData(String query) {\n        writer.log(SolrWriter.ENTITY_META, \"query\", query);\n        long start = System.currentTimeMillis();\n        try {\n          return ds.getData(query);\n        } catch (DataImportHandlerException de) {\n          writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, de);\n          throw de;\n        } catch (Exception e) {\n          writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, e);\n          DataImportHandlerException de = new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, \"\", e);\n          de.debugged = true;\n          throw de;\n        } finally {\n          writer.log(SolrWriter.ENTITY_META, \"time-taken\", DocBuilder\n                  .getTimeElapsedSince(start));\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a136026dd5340a1feb1e3efd8cafe390616c1d8","date":1311317263,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger#wrapDs(DataSource).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger#wrapDs(DataSource).mjava","sourceNew":"  DataSource wrapDs(final DataSource ds) {\n    return new DataSource() {\n      @Override\n      public void init(Context context, Properties initProps) {\n        ds.init(context, initProps);\n      }\n\n      @Override\n      public void close() {\n        ds.close();\n      }\n\n      @Override\n      public Object getData(String query) {\n        log(DIHLogLevels.ENTITY_META, \"query\", query);\n        long start = System.currentTimeMillis();\n        try {\n          return ds.getData(query);\n        } catch (DataImportHandlerException de) {\n          log(DIHLogLevels.ENTITY_EXCEPTION,\n                  null, de);\n          throw de;\n        } catch (Exception e) {\n          log(DIHLogLevels.ENTITY_EXCEPTION,\n                  null, e);\n          DataImportHandlerException de = new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, \"\", e);\n          de.debugged = true;\n          throw de;\n        } finally {\n          log(DIHLogLevels.ENTITY_META, \"time-taken\", DocBuilder\n                  .getTimeElapsedSince(start));\n        }\n      }\n    };\n  }\n\n","sourceOld":"  DataSource wrapDs(final DataSource ds) {\n    return new DataSource() {\n      @Override\n      public void init(Context context, Properties initProps) {\n        ds.init(context, initProps);\n      }\n\n      @Override\n      public void close() {\n        ds.close();\n      }\n\n      @Override\n      public Object getData(String query) {\n        writer.log(SolrWriter.ENTITY_META, \"query\", query);\n        long start = System.currentTimeMillis();\n        try {\n          return ds.getData(query);\n        } catch (DataImportHandlerException de) {\n          writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, de);\n          throw de;\n        } catch (Exception e) {\n          writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, e);\n          DataImportHandlerException de = new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, \"\", e);\n          de.debugged = true;\n          throw de;\n        } finally {\n          writer.log(SolrWriter.ENTITY_META, \"time-taken\", DocBuilder\n                  .getTimeElapsedSince(start));\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd5bc858b8426d40bbe90b94120ead37c77d7954","date":1393812525,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger#wrapDs(DataSource).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger#wrapDs(DataSource).mjava","sourceNew":"  DataSource wrapDs(final DataSource ds) {\n    return new DataSource() {\n      @Override\n      public void init(Context context, Properties initProps) {\n        ds.init(context, initProps);\n      }\n\n      @Override\n      public void close() {\n        ds.close();\n      }\n\n      @Override\n      public Object getData(String query) {\n        log(DIHLogLevels.ENTITY_META, \"query\", query);\n        long start = System.nanoTime();\n        try {\n          return ds.getData(query);\n        } catch (DataImportHandlerException de) {\n          log(DIHLogLevels.ENTITY_EXCEPTION,\n                  null, de);\n          throw de;\n        } catch (Exception e) {\n          log(DIHLogLevels.ENTITY_EXCEPTION,\n                  null, e);\n          DataImportHandlerException de = new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, \"\", e);\n          de.debugged = true;\n          throw de;\n        } finally {\n          log(DIHLogLevels.ENTITY_META, \"time-taken\", DocBuilder\n                  .getTimeElapsedSince(start));\n        }\n      }\n    };\n  }\n\n","sourceOld":"  DataSource wrapDs(final DataSource ds) {\n    return new DataSource() {\n      @Override\n      public void init(Context context, Properties initProps) {\n        ds.init(context, initProps);\n      }\n\n      @Override\n      public void close() {\n        ds.close();\n      }\n\n      @Override\n      public Object getData(String query) {\n        log(DIHLogLevels.ENTITY_META, \"query\", query);\n        long start = System.currentTimeMillis();\n        try {\n          return ds.getData(query);\n        } catch (DataImportHandlerException de) {\n          log(DIHLogLevels.ENTITY_EXCEPTION,\n                  null, de);\n          throw de;\n        } catch (Exception e) {\n          log(DIHLogLevels.ENTITY_EXCEPTION,\n                  null, e);\n          DataImportHandlerException de = new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, \"\", e);\n          de.debugged = true;\n          throw de;\n        } finally {\n          log(DIHLogLevels.ENTITY_META, \"time-taken\", DocBuilder\n                  .getTimeElapsedSince(start));\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"024e13388acbf5562fcbb77a129620982a5e2d79","date":1591531835,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger#wrapDs(DataSource).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger#wrapDs(DataSource).mjava","sourceNew":"  @SuppressWarnings({\"rawtypes\"})\n  DataSource wrapDs(final DataSource ds) {\n    return new DataSource() {\n      @Override\n      public void init(Context context, Properties initProps) {\n        ds.init(context, initProps);\n      }\n\n      @Override\n      public void close() {\n        ds.close();\n      }\n\n      @Override\n      public Object getData(String query) {\n        log(DIHLogLevels.ENTITY_META, \"query\", query);\n        long start = System.nanoTime();\n        try {\n          return ds.getData(query);\n        } catch (DataImportHandlerException de) {\n          log(DIHLogLevels.ENTITY_EXCEPTION,\n                  null, de);\n          throw de;\n        } catch (Exception e) {\n          log(DIHLogLevels.ENTITY_EXCEPTION,\n                  null, e);\n          DataImportHandlerException de = new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, \"\", e);\n          de.debugged = true;\n          throw de;\n        } finally {\n          log(DIHLogLevels.ENTITY_META, \"time-taken\", DocBuilder\n                  .getTimeElapsedSince(start));\n        }\n      }\n    };\n  }\n\n","sourceOld":"  DataSource wrapDs(final DataSource ds) {\n    return new DataSource() {\n      @Override\n      public void init(Context context, Properties initProps) {\n        ds.init(context, initProps);\n      }\n\n      @Override\n      public void close() {\n        ds.close();\n      }\n\n      @Override\n      public Object getData(String query) {\n        log(DIHLogLevels.ENTITY_META, \"query\", query);\n        long start = System.nanoTime();\n        try {\n          return ds.getData(query);\n        } catch (DataImportHandlerException de) {\n          log(DIHLogLevels.ENTITY_EXCEPTION,\n                  null, de);\n          throw de;\n        } catch (Exception e) {\n          log(DIHLogLevels.ENTITY_EXCEPTION,\n                  null, e);\n          DataImportHandlerException de = new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, \"\", e);\n          de.debugged = true;\n          throw de;\n        } finally {\n          log(DIHLogLevels.ENTITY_META, \"time-taken\", DocBuilder\n                  .getTimeElapsedSince(start));\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger#wrapDs(DataSource).mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings({\"rawtypes\"})\n  DataSource wrapDs(final DataSource ds) {\n    return new DataSource() {\n      @Override\n      public void init(Context context, Properties initProps) {\n        ds.init(context, initProps);\n      }\n\n      @Override\n      public void close() {\n        ds.close();\n      }\n\n      @Override\n      public Object getData(String query) {\n        log(DIHLogLevels.ENTITY_META, \"query\", query);\n        long start = System.nanoTime();\n        try {\n          return ds.getData(query);\n        } catch (DataImportHandlerException de) {\n          log(DIHLogLevels.ENTITY_EXCEPTION,\n                  null, de);\n          throw de;\n        } catch (Exception e) {\n          log(DIHLogLevels.ENTITY_EXCEPTION,\n                  null, e);\n          DataImportHandlerException de = new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, \"\", e);\n          de.debugged = true;\n          throw de;\n        } finally {\n          log(DIHLogLevels.ENTITY_META, \"time-taken\", DocBuilder\n                  .getTimeElapsedSince(start));\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["024e13388acbf5562fcbb77a129620982a5e2d79"],"024e13388acbf5562fcbb77a129620982a5e2d79":["fd5bc858b8426d40bbe90b94120ead37c77d7954"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7a136026dd5340a1feb1e3efd8cafe390616c1d8":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"fd5bc858b8426d40bbe90b94120ead37c77d7954":["7a136026dd5340a1feb1e3efd8cafe390616c1d8"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"024e13388acbf5562fcbb77a129620982a5e2d79":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7a136026dd5340a1feb1e3efd8cafe390616c1d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"7a136026dd5340a1feb1e3efd8cafe390616c1d8":["fd5bc858b8426d40bbe90b94120ead37c77d7954"],"fd5bc858b8426d40bbe90b94120ead37c77d7954":["024e13388acbf5562fcbb77a129620982a5e2d79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}