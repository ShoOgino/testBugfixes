{"path":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","commits":[{"id":"732b0bb4cb809b90ddaf1abce658bbceb75eb032","date":1180638816,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"/dev/null","sourceNew":"  public void setUp() throws Exception {\n\n    IndexWriter writer = new IndexWriter(store, new WhitespaceAnalyzer(), true);\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n\n    IndexWriter writer = new IndexWriter(store, new WhitespaceAnalyzer(), true);\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n\n    IndexWriter writer = new IndexWriter(store, new WhitespaceAnalyzer(), true);\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87c966e9308847938a7c905c2e46a56d8df788b8","date":1255035452,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n\n    IndexWriter writer = new IndexWriter(store, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n\n    IndexWriter writer = new IndexWriter(store, new WhitespaceAnalyzer(), true);\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n\n    IndexWriter writer = new IndexWriter(store, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n\n    IndexWriter writer = new IndexWriter(store, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ced3401b9c4e7ed2be67711dbc83e48b81aa736","date":1265394056,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n\n    IndexWriter writer = new IndexWriter(store, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n\n    IndexWriter writer = new IndexWriter(store, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(store, new WhitespaceAnalyzer(LuceneTestCase.TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n\n    IndexWriter writer = new IndexWriter(store, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(store, new IndexWriterConfig(TEST_VERSION_CURRENT));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(store, new WhitespaceAnalyzer(LuceneTestCase.TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(store, new WhitespaceAnalyzer(LuceneTestCase.TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(store, new IndexWriterConfig(TEST_VERSION_CURRENT));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(store, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(store, new WhitespaceAnalyzer(LuceneTestCase.TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","pathOld":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(store, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(store, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n    Document doc;\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new Field(\"aaa\", \"foo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Tom\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new  Document();\n    doc.add(new  Field(\"contents\", \"Jerry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"zzz\", \"bar\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["87c966e9308847938a7c905c2e46a56d8df788b8"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["732b0bb4cb809b90ddaf1abce658bbceb75eb032"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"87c966e9308847938a7c905c2e46a56d8df788b8":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"6ced3401b9c4e7ed2be67711dbc83e48b81aa736":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["6ced3401b9c4e7ed2be67711dbc83e48b81aa736"],"732b0bb4cb809b90ddaf1abce658bbceb75eb032":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["732b0bb4cb809b90ddaf1abce658bbceb75eb032"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["6ced3401b9c4e7ed2be67711dbc83e48b81aa736"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["87c966e9308847938a7c905c2e46a56d8df788b8"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"87c966e9308847938a7c905c2e46a56d8df788b8":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"6ced3401b9c4e7ed2be67711dbc83e48b81aa736":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"732b0bb4cb809b90ddaf1abce658bbceb75eb032":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}