{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object transformRow(Map<String, Object> row, Context context) {\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = context.replaceTokens(field.get(STRIP_HTML));\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        List results = new ArrayList();\n        for (String input : inputs) {\n          if (input == null)\n            continue;\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object transformRow(Map<String, Object> row, Context context) {\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = context.replaceTokens(field.get(STRIP_HTML));\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        List results = new ArrayList();\n        for (String input : inputs) {\n          if (input == null)\n            continue;\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object transformRow(Map<String, Object> row, Context context) {\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = context.replaceTokens(field.get(STRIP_HTML));\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        List results = new ArrayList();\n        for (String input : inputs) {\n          if (input == null)\n            continue;\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object transformRow(Map<String, Object> row, Context context) {\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = context.replaceTokens(field.get(STRIP_HTML));\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        List results = new ArrayList();\n        for (String input : inputs) {\n          if (input == null)\n            continue;\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"  @Override\n  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public Object transformRow(Map<String, Object> row, Context context) {\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = context.replaceTokens(field.get(STRIP_HTML));\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        List results = new ArrayList();\n        for (String input : inputs) {\n          if (input == null)\n            continue;\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object transformRow(Map<String, Object> row, Context context) {\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = context.replaceTokens(field.get(STRIP_HTML));\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        List results = new ArrayList();\n        for (String input : inputs) {\n          if (input == null)\n            continue;\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object transformRow(Map<String, Object> row, Context context) {\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = context.replaceTokens(field.get(STRIP_HTML));\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        List results = new ArrayList();\n        for (String input : inputs) {\n          if (input == null)\n            continue;\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public Object transformRow(Map<String, Object> row, Context context) {\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = context.replaceTokens(field.get(STRIP_HTML));\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        List results = new ArrayList();\n        for (String input : inputs) {\n          if (input == null)\n            continue;\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"024e13388acbf5562fcbb77a129620982a5e2d79","date":1591531835,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object transformRow(Map<String, Object> row, Context context) {\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = context.replaceTokens(field.get(STRIP_HTML));\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        @SuppressWarnings({\"rawtypes\"})\n        List results = new ArrayList();\n        for (String input : inputs) {\n          if (input == null)\n            continue;\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object transformRow(Map<String, Object> row, Context context) {\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = context.replaceTokens(field.get(STRIP_HTML));\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        List results = new ArrayList();\n        for (String input : inputs) {\n          if (input == null)\n            continue;\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":null,"sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object transformRow(Map<String, Object> row, Context context) {\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = context.replaceTokens(field.get(STRIP_HTML));\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        @SuppressWarnings({\"rawtypes\"})\n        List results = new ArrayList();\n        for (String input : inputs) {\n          if (input == null)\n            continue;\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["024e13388acbf5562fcbb77a129620982a5e2d79"],"024e13388acbf5562fcbb77a129620982a5e2d79":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"024e13388acbf5562fcbb77a129620982a5e2d79":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["024e13388acbf5562fcbb77a129620982a5e2d79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}