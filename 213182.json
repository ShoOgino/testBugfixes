{"path":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","sourceNew":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = new MockRAMDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new StandardAnalyzer(\n        TEST_VERSION_CURRENT, Collections.emptySet())));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = new IndexSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = new MockRAMDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new StandardAnalyzer(\n        TEST_VERSION_CURRENT, Collections.emptySet())));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = new IndexSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","sourceNew":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = new MockRAMDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = new IndexSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = new MockRAMDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new StandardAnalyzer(\n        TEST_VERSION_CURRENT, Collections.emptySet())));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = new IndexSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","sourceNew":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory(random);\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = new IndexSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = new MockRAMDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = new IndexSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","sourceNew":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = new IndexSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory(random);\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = new IndexSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","sourceNew":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = new IndexSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = new MockRAMDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = new IndexSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"790e1fde4caa765b3faaad3fbcd25c6973450336","date":1296689245,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","sourceNew":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = new IndexSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","sourceNew":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = new IndexSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","sourceNew":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = new IndexSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","sourceNew":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","sourceNew":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","sourceNew":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","sourceNew":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","sourceNew":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","sourceNew":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","sourceNew":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir, true);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7c2454a6a8237bfd0e953f5b940838408c9055","date":1323649300,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","sourceNew":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","sourceNew":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    searcher.close();\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#testNPESpanQuery().mjava","sourceNew":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1404\n  public void testNPESpanQuery() throws Throwable {\n    final Directory dir = newDirectory();\n    final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // Add documents\n    addDoc(writer, \"1\", \"the big dogs went running to the market\");\n    addDoc(writer, \"2\", \"the cat chased the mouse, then the cat ate the mouse quickly\");\n    \n    // Commit\n    writer.close();\n\n    // Get searcher\n    final IndexReader reader = IndexReader.open(dir);\n    final IndexSearcher searcher = newSearcher(reader);\n\n    // Control (make sure docs indexed)\n    assertEquals(2, hitCount(searcher, \"the\"));\n    assertEquals(1, hitCount(searcher, \"cat\"));\n    assertEquals(1, hitCount(searcher, \"dogs\"));\n    assertEquals(0, hitCount(searcher, \"rabbit\"));\n\n    // This throws exception (it shouldn't)\n    assertEquals(1,\n                 searcher.search(createSpan(0, true,                                 \n                                            new SpanQuery[] {createSpan(4, false, \"chased\", \"cat\"),\n                                                             createSpan(\"ate\")}), 10).totalHits);\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["d572389229127c297dd1fa5ce4758e1cec41e799"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["f2c5f0cb44df114db4228c8f77861714b5cabaea","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["0e7c2454a6a8237bfd0e953f5b940838408c9055"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","0e7c2454a6a8237bfd0e953f5b940838408c9055"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"962d04139994fce5193143ef35615499a9a96d78":["bde51b089eb7f86171eb3406e38a274743f9b7ac","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","1f653cfcf159baeaafe5d01682a911e95bba4012"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["790e1fde4caa765b3faaad3fbcd25c6973450336","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["1f653cfcf159baeaafe5d01682a911e95bba4012","790e1fde4caa765b3faaad3fbcd25c6973450336"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["f2c5f0cb44df114db4228c8f77861714b5cabaea","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","790e1fde4caa765b3faaad3fbcd25c6973450336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","135621f3a0670a9394eb563224a3b76cc4dddc0f","1c5b026d03cbbb03ca4c0b97d14e9839682281dc","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","790e1fde4caa765b3faaad3fbcd25c6973450336","29ef99d61cda9641b6250bf9567329a6e65f901d"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","0e7c2454a6a8237bfd0e953f5b940838408c9055"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["962d04139994fce5193143ef35615499a9a96d78"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}