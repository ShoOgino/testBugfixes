{"path":"solr/core/src/test/org/apache/solr/search/function/TestMinMaxOnMultiValuedField#testExpectedSortMissingOrderings().mjava","commits":[{"id":"4cf2282b6a7c3f113e7a233b785b80527c03d590","date":1516129064,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestMinMaxOnMultiValuedField#testExpectedSortMissingOrderings().mjava","pathOld":"/dev/null","sourceNew":"  public void testExpectedSortMissingOrderings() {\n\n    // NOTE: we never test the \"true\" min/max value for a type, because\n    // (in this simple test) we aren't using a secondary sort, so there is no way to disambiguate\n    // docs that have those values from docs that have those *effective* sort values\n\n    testSortMissingMinMax(\"val_str\", \"a\", \"aaaaaa\", \"xxxxx\", \"zzzzzzzzzzzzzzzzzzz\");\n    testSortMissingMinMax(\"val_int\",\n                          Integer.MIN_VALUE+1L, -9999, 0, 99999, Integer.MAX_VALUE-1L);\n    testSortMissingMinMax(\"val_long\",\n                          Long.MIN_VALUE+1L, -99999999L, 0, 9999999999L, Long.MAX_VALUE-1L);\n    testSortMissingMinMax(\"val_float\",\n                          Math.nextAfter(Float.NEGATIVE_INFINITY, 0F), -99.99F,\n                          0F, 99.99F, Math.nextAfter(Float.POSITIVE_INFINITY, 0F));\n    testSortMissingMinMax(\"val_double\",\n                          Math.nextAfter(Double.NEGATIVE_INFINITY, 0D), -99.99D, \n                          0D, 99.99D, Math.nextAfter(Double.POSITIVE_INFINITY, 0F));\n    testSortMissingMinMax(\"val_date\",\n                          \"-1000000-01-01T00:00:00Z\", \"NOW-1YEAR\", \"NOW\", \"NOW+1YEAR\", \"+1000000-01-01T00:00:00Z\");\n    testSortMissingMinMax(\"val_bool\", false, true);\n    testSortMissingMinMax(\"val_enum\", \"Not Available\", \"Low\", \"High\", \"Critical\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestMinMaxOnMultiValuedField#testExpectedSortMissingOrderings().mjava","pathOld":"/dev/null","sourceNew":"  public void testExpectedSortMissingOrderings() {\n\n    // NOTE: we never test the \"true\" min/max value for a type, because\n    // (in this simple test) we aren't using a secondary sort, so there is no way to disambiguate\n    // docs that have those values from docs that have those *effective* sort values\n\n    testSortMissingMinMax(\"val_str\", \"a\", \"aaaaaa\", \"xxxxx\", \"zzzzzzzzzzzzzzzzzzz\");\n    testSortMissingMinMax(\"val_int\",\n                          Integer.MIN_VALUE+1L, -9999, 0, 99999, Integer.MAX_VALUE-1L);\n    testSortMissingMinMax(\"val_long\",\n                          Long.MIN_VALUE+1L, -99999999L, 0, 9999999999L, Long.MAX_VALUE-1L);\n    testSortMissingMinMax(\"val_float\",\n                          Math.nextAfter(Float.NEGATIVE_INFINITY, 0F), -99.99F,\n                          0F, 99.99F, Math.nextAfter(Float.POSITIVE_INFINITY, 0F));\n    testSortMissingMinMax(\"val_double\",\n                          Math.nextAfter(Double.NEGATIVE_INFINITY, 0D), -99.99D, \n                          0D, 99.99D, Math.nextAfter(Double.POSITIVE_INFINITY, 0F));\n    testSortMissingMinMax(\"val_date\",\n                          \"-1000000-01-01T00:00:00Z\", \"NOW-1YEAR\", \"NOW\", \"NOW+1YEAR\", \"+1000000-01-01T00:00:00Z\");\n    testSortMissingMinMax(\"val_bool\", false, true);\n    testSortMissingMinMax(\"val_enum\", \"Not Available\", \"Low\", \"High\", \"Critical\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09db84b25dda87b73022d145a68f14c86a3a552d","date":1517506829,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestMinMaxOnMultiValuedField#testExpectedSortMissingOrderings().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/TestMinMaxOnMultiValuedField#testExpectedSortMissingOrderings().mjava","sourceNew":"  public void testExpectedSortMissingOrderings() {\n\n    // NOTE: we never test the \"true\" min/max value for a type, because\n    // (in this simple test) we aren't using a secondary sort, so there is no way to disambiguate\n    // docs that have those values from docs that have those *effective* sort values\n\n    testSortMissingMinMax(\"val_str\",  \"a\", \"aaaaaa\", \"xxxxx\", \"zzzzzzzzzzzzzzzzzzz\");\n    testSortMissingMinMax(\"val_stxt\", \"a\", \"aaaaaa\", \"xxxxx\", \"zzzzzzzzzzzzzzzzzzz\");\n    \n    testSortMissingMinMax(\"val_int\",\n                          Integer.MIN_VALUE+1L, -9999, 0, 99999, Integer.MAX_VALUE-1L);\n    testSortMissingMinMax(\"val_long\",\n                          Long.MIN_VALUE+1L, -99999999L, 0, 9999999999L, Long.MAX_VALUE-1L);\n    testSortMissingMinMax(\"val_float\",\n                          Math.nextAfter(Float.NEGATIVE_INFINITY, 0F), -99.99F,\n                          0F, 99.99F, Math.nextAfter(Float.POSITIVE_INFINITY, 0F));\n    testSortMissingMinMax(\"val_double\",\n                          Math.nextAfter(Double.NEGATIVE_INFINITY, 0D), -99.99D, \n                          0D, 99.99D, Math.nextAfter(Double.POSITIVE_INFINITY, 0F));\n    testSortMissingMinMax(\"val_date\",\n                          \"-1000000-01-01T00:00:00Z\", \"NOW-1YEAR\", \"NOW\", \"NOW+1YEAR\", \"+1000000-01-01T00:00:00Z\");\n    testSortMissingMinMax(\"val_bool\", false, true);\n    testSortMissingMinMax(\"val_enum\", \"Not Available\", \"Low\", \"High\", \"Critical\");\n\n  }\n\n","sourceOld":"  public void testExpectedSortMissingOrderings() {\n\n    // NOTE: we never test the \"true\" min/max value for a type, because\n    // (in this simple test) we aren't using a secondary sort, so there is no way to disambiguate\n    // docs that have those values from docs that have those *effective* sort values\n\n    testSortMissingMinMax(\"val_str\", \"a\", \"aaaaaa\", \"xxxxx\", \"zzzzzzzzzzzzzzzzzzz\");\n    testSortMissingMinMax(\"val_int\",\n                          Integer.MIN_VALUE+1L, -9999, 0, 99999, Integer.MAX_VALUE-1L);\n    testSortMissingMinMax(\"val_long\",\n                          Long.MIN_VALUE+1L, -99999999L, 0, 9999999999L, Long.MAX_VALUE-1L);\n    testSortMissingMinMax(\"val_float\",\n                          Math.nextAfter(Float.NEGATIVE_INFINITY, 0F), -99.99F,\n                          0F, 99.99F, Math.nextAfter(Float.POSITIVE_INFINITY, 0F));\n    testSortMissingMinMax(\"val_double\",\n                          Math.nextAfter(Double.NEGATIVE_INFINITY, 0D), -99.99D, \n                          0D, 99.99D, Math.nextAfter(Double.POSITIVE_INFINITY, 0F));\n    testSortMissingMinMax(\"val_date\",\n                          \"-1000000-01-01T00:00:00Z\", \"NOW-1YEAR\", \"NOW\", \"NOW+1YEAR\", \"+1000000-01-01T00:00:00Z\");\n    testSortMissingMinMax(\"val_bool\", false, true);\n    testSortMissingMinMax(\"val_enum\", \"Not Available\", \"Low\", \"High\", \"Critical\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4cf2282b6a7c3f113e7a233b785b80527c03d590"],"09db84b25dda87b73022d145a68f14c86a3a552d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cf2282b6a7c3f113e7a233b785b80527c03d590":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09db84b25dda87b73022d145a68f14c86a3a552d"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["09db84b25dda87b73022d145a68f14c86a3a552d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","4cf2282b6a7c3f113e7a233b785b80527c03d590"],"09db84b25dda87b73022d145a68f14c86a3a552d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cf2282b6a7c3f113e7a233b785b80527c03d590":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}