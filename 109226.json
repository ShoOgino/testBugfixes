{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#addNamespace().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#addNamespace().mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#addNamespace().mjava","sourceNew":"  private void addNamespace() {\n    Map<String, Object> namespace = new HashMap<String, Object>();\n    Set<String> allNames = new HashSet<String>();\n    if (commonFields != null) allNames.addAll(commonFields);\n    if (placeHolderVariables != null) allNames.addAll(placeHolderVariables);\n    if(allNames.isEmpty()) return;\n\n    for (String name : allNames) {\n      Object val = context.getSessionAttribute(name, Context.SCOPE_ENTITY);\n      if (val != null) namespace.put(name, val);\n    }\n    ((VariableResolverImpl)context.getVariableResolver()).addNamespace(entityName, namespace);\n  }\n\n","sourceOld":"  private void addNamespace() {\n    Map<String, Object> namespace = new HashMap<String, Object>();\n    Set<String> allNames = new HashSet<String>();\n    if (commonFields != null) allNames.addAll(commonFields);\n    if (placeHolderVariables != null) allNames.addAll(placeHolderVariables);\n    if(allNames.isEmpty()) return;\n\n    for (String name : allNames) {\n      Object val = context.getSessionAttribute(name, Context.SCOPE_ENTITY);\n      if (val != null) namespace.put(name, val);\n    }\n    ((VariableResolverImpl)context.getVariableResolver()).addNamespace(entityName, namespace);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#addNamespace().mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#addNamespace().mjava","sourceNew":"  private void addNamespace() {\n    Map<String, Object> namespace = new HashMap<String, Object>();\n    Set<String> allNames = new HashSet<String>();\n    if (commonFields != null) allNames.addAll(commonFields);\n    if (placeHolderVariables != null) allNames.addAll(placeHolderVariables);\n    if(allNames.isEmpty()) return;\n\n    for (String name : allNames) {\n      Object val = context.getSessionAttribute(name, Context.SCOPE_ENTITY);\n      if (val != null) namespace.put(name, val);\n    }\n    ((VariableResolverImpl)context.getVariableResolver()).addNamespace(entityName, namespace);\n  }\n\n","sourceOld":"  private void addNamespace() {\n    Map<String, Object> namespace = new HashMap<String, Object>();\n    Set<String> allNames = new HashSet<String>();\n    if (commonFields != null) allNames.addAll(commonFields);\n    if (placeHolderVariables != null) allNames.addAll(placeHolderVariables);\n    if(allNames.isEmpty()) return;\n\n    for (String name : allNames) {\n      Object val = context.getSessionAttribute(name, Context.SCOPE_ENTITY);\n      if (val != null) namespace.put(name, val);\n    }\n    ((VariableResolverImpl)context.getVariableResolver()).addNamespace(entityName, namespace);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c7b0ae5716b6c2044195a818e9ae58205175659","date":1353342230,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#addNamespace().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#addNamespace().mjava","sourceNew":"  private void addNamespace() {\n    Map<String, Object> namespace = new HashMap<String, Object>();\n    Set<String> allNames = new HashSet<String>();\n    if (commonFields != null) allNames.addAll(commonFields);\n    if (placeHolderVariables != null) allNames.addAll(placeHolderVariables);\n    if(allNames.isEmpty()) return;\n\n    for (String name : allNames) {\n      Object val = context.getSessionAttribute(name, Context.SCOPE_ENTITY);\n      if (val != null) namespace.put(name, val);\n    }\n    ((VariableResolver)context.getVariableResolver()).addNamespace(entityName, namespace);\n  }\n\n","sourceOld":"  private void addNamespace() {\n    Map<String, Object> namespace = new HashMap<String, Object>();\n    Set<String> allNames = new HashSet<String>();\n    if (commonFields != null) allNames.addAll(commonFields);\n    if (placeHolderVariables != null) allNames.addAll(placeHolderVariables);\n    if(allNames.isEmpty()) return;\n\n    for (String name : allNames) {\n      Object val = context.getSessionAttribute(name, Context.SCOPE_ENTITY);\n      if (val != null) namespace.put(name, val);\n    }\n    ((VariableResolverImpl)context.getVariableResolver()).addNamespace(entityName, namespace);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#addNamespace().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#addNamespace().mjava","sourceNew":"  private void addNamespace() {\n    Map<String, Object> namespace = new HashMap<String, Object>();\n    Set<String> allNames = new HashSet<String>();\n    if (commonFields != null) allNames.addAll(commonFields);\n    if (placeHolderVariables != null) allNames.addAll(placeHolderVariables);\n    if(allNames.isEmpty()) return;\n\n    for (String name : allNames) {\n      Object val = context.getSessionAttribute(name, Context.SCOPE_ENTITY);\n      if (val != null) namespace.put(name, val);\n    }\n    ((VariableResolver)context.getVariableResolver()).addNamespace(entityName, namespace);\n  }\n\n","sourceOld":"  private void addNamespace() {\n    Map<String, Object> namespace = new HashMap<String, Object>();\n    Set<String> allNames = new HashSet<String>();\n    if (commonFields != null) allNames.addAll(commonFields);\n    if (placeHolderVariables != null) allNames.addAll(placeHolderVariables);\n    if(allNames.isEmpty()) return;\n\n    for (String name : allNames) {\n      Object val = context.getSessionAttribute(name, Context.SCOPE_ENTITY);\n      if (val != null) namespace.put(name, val);\n    }\n    ((VariableResolverImpl)context.getVariableResolver()).addNamespace(entityName, namespace);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#addNamespace().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#addNamespace().mjava","sourceNew":"  private void addNamespace() {\n    Map<String, Object> namespace = new HashMap<>();\n    Set<String> allNames = new HashSet<>();\n    if (commonFields != null) allNames.addAll(commonFields);\n    if (placeHolderVariables != null) allNames.addAll(placeHolderVariables);\n    if(allNames.isEmpty()) return;\n\n    for (String name : allNames) {\n      Object val = context.getSessionAttribute(name, Context.SCOPE_ENTITY);\n      if (val != null) namespace.put(name, val);\n    }\n    ((VariableResolver)context.getVariableResolver()).addNamespace(entityName, namespace);\n  }\n\n","sourceOld":"  private void addNamespace() {\n    Map<String, Object> namespace = new HashMap<String, Object>();\n    Set<String> allNames = new HashSet<String>();\n    if (commonFields != null) allNames.addAll(commonFields);\n    if (placeHolderVariables != null) allNames.addAll(placeHolderVariables);\n    if(allNames.isEmpty()) return;\n\n    for (String name : allNames) {\n      Object val = context.getSessionAttribute(name, Context.SCOPE_ENTITY);\n      if (val != null) namespace.put(name, val);\n    }\n    ((VariableResolver)context.getVariableResolver()).addNamespace(entityName, namespace);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"024e13388acbf5562fcbb77a129620982a5e2d79","date":1591531835,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#addNamespace().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#addNamespace().mjava","sourceNew":"  private void addNamespace() {\n    Map<String, Object> namespace = new HashMap<>();\n    Set<String> allNames = new HashSet<>();\n    if (commonFields != null) allNames.addAll(commonFields);\n    if (placeHolderVariables != null) allNames.addAll(placeHolderVariables);\n    if(allNames.isEmpty()) return;\n\n    for (String name : allNames) {\n      Object val = context.getSessionAttribute(name, Context.SCOPE_ENTITY);\n      if (val != null) namespace.put(name, val);\n    }\n    context.getVariableResolver().addNamespace(entityName, namespace);\n  }\n\n","sourceOld":"  private void addNamespace() {\n    Map<String, Object> namespace = new HashMap<>();\n    Set<String> allNames = new HashSet<>();\n    if (commonFields != null) allNames.addAll(commonFields);\n    if (placeHolderVariables != null) allNames.addAll(placeHolderVariables);\n    if(allNames.isEmpty()) return;\n\n    for (String name : allNames) {\n      Object val = context.getSessionAttribute(name, Context.SCOPE_ENTITY);\n      if (val != null) namespace.put(name, val);\n    }\n    ((VariableResolver)context.getVariableResolver()).addNamespace(entityName, namespace);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#addNamespace().mjava","sourceNew":null,"sourceOld":"  private void addNamespace() {\n    Map<String, Object> namespace = new HashMap<>();\n    Set<String> allNames = new HashSet<>();\n    if (commonFields != null) allNames.addAll(commonFields);\n    if (placeHolderVariables != null) allNames.addAll(placeHolderVariables);\n    if(allNames.isEmpty()) return;\n\n    for (String name : allNames) {\n      Object val = context.getSessionAttribute(name, Context.SCOPE_ENTITY);\n      if (val != null) namespace.put(name, val);\n    }\n    context.getVariableResolver().addNamespace(entityName, namespace);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["7c7b0ae5716b6c2044195a818e9ae58205175659"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["024e13388acbf5562fcbb77a129620982a5e2d79"],"024e13388acbf5562fcbb77a129620982a5e2d79":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["c26f00b574427b55127e869b935845554afde1fa","7c7b0ae5716b6c2044195a818e9ae58205175659"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["024e13388acbf5562fcbb77a129620982a5e2d79"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"024e13388acbf5562fcbb77a129620982a5e2d79":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","407687e67faf6e1f02a211ca078d8e3eed631027"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7c7b0ae5716b6c2044195a818e9ae58205175659","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}