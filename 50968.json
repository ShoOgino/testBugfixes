{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/gl/GalicianAnalyzer#createComponents(String,Reader).mjava","commits":[{"id":"81d6d41a6e097c5c1e2c81055a12d7f24e147ec7","date":1294324237,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/gl/GalicianAnalyzer#createComponents(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.util.ReusableAnalyzerBase.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.util.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link LowerCaseFilter}, {@link StopFilter}\n   *         , {@link KeywordMarkerFilter} if a stem exclusion set is\n   *         provided and {@link GalicianStemFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(matchVersion, source);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new StopFilter(matchVersion, result, stopwords);\n    if(!stemExclusionSet.isEmpty())\n      result = new KeywordMarkerFilter(result, stemExclusionSet);\n    result = new GalicianStemFilter(result);\n    return new TokenStreamComponents(source, result);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/gl/GalicianAnalyzer#createComponents(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.util.ReusableAnalyzerBase.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.util.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link LowerCaseFilter}, {@link StopFilter}\n   *         , {@link KeywordMarkerFilter} if a stem exclusion set is\n   *         provided and {@link GalicianStemFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(matchVersion, source);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new StopFilter(matchVersion, result, stopwords);\n    if(!stemExclusionSet.isEmpty())\n      result = new KeywordMarkerFilter(result, stemExclusionSet);\n    result = new GalicianStemFilter(result);\n    return new TokenStreamComponents(source, result);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/gl/GalicianAnalyzer#createComponents(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.util.ReusableAnalyzerBase.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.util.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link LowerCaseFilter}, {@link StopFilter}\n   *         , {@link KeywordMarkerFilter} if a stem exclusion set is\n   *         provided and {@link GalicianStemFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(matchVersion, source);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new StopFilter(matchVersion, result, stopwords);\n    if(!stemExclusionSet.isEmpty())\n      result = new KeywordMarkerFilter(result, stemExclusionSet);\n    result = new GalicianStemFilter(result);\n    return new TokenStreamComponents(source, result);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8f1fd760e2a7a87de661158ca069c8dacab8360","date":1313992891,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/gl/GalicianAnalyzer#createComponents(String,Reader).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/gl/GalicianAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link LowerCaseFilter}, {@link StopFilter}\n   *         , {@link KeywordMarkerFilter} if a stem exclusion set is\n   *         provided and {@link GalicianStemFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(matchVersion, source);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new StopFilter(matchVersion, result, stopwords);\n    if(!stemExclusionSet.isEmpty())\n      result = new KeywordMarkerFilter(result, stemExclusionSet);\n    result = new GalicianStemFilter(result);\n    return new TokenStreamComponents(source, result);\n  }\n\n","sourceOld":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.util.ReusableAnalyzerBase.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.util.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link LowerCaseFilter}, {@link StopFilter}\n   *         , {@link KeywordMarkerFilter} if a stem exclusion set is\n   *         provided and {@link GalicianStemFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(matchVersion, source);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new StopFilter(matchVersion, result, stopwords);\n    if(!stemExclusionSet.isEmpty())\n      result = new KeywordMarkerFilter(result, stemExclusionSet);\n    result = new GalicianStemFilter(result);\n    return new TokenStreamComponents(source, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f49143da0a5d278a72f741432047fcfa6da996e","date":1316927425,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/gl/GalicianAnalyzer#createComponents(String,Reader).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/gl/GalicianAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link LowerCaseFilter}, {@link StopFilter}\n   *         , {@link KeywordMarkerFilter} if a stem exclusion set is\n   *         provided and {@link GalicianStemFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(matchVersion, source);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new StopFilter(matchVersion, result, stopwords);\n    if(!stemExclusionSet.isEmpty())\n      result = new KeywordMarkerFilter(result, stemExclusionSet);\n    result = new GalicianStemFilter(result);\n    return new TokenStreamComponents(source, result);\n  }\n\n","sourceOld":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link LowerCaseFilter}, {@link StopFilter}\n   *         , {@link KeywordMarkerFilter} if a stem exclusion set is\n   *         provided and {@link GalicianStemFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(matchVersion, source);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new StopFilter(matchVersion, result, stopwords);\n    if(!stemExclusionSet.isEmpty())\n      result = new KeywordMarkerFilter(result, stemExclusionSet);\n    result = new GalicianStemFilter(result);\n    return new TokenStreamComponents(source, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/gl/GalicianAnalyzer#createComponents(String,Reader).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/gl/GalicianAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link LowerCaseFilter}, {@link StopFilter}\n   *         , {@link KeywordMarkerFilter} if a stem exclusion set is\n   *         provided and {@link GalicianStemFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(matchVersion, source);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new StopFilter(matchVersion, result, stopwords);\n    if(!stemExclusionSet.isEmpty())\n      result = new KeywordMarkerFilter(result, stemExclusionSet);\n    result = new GalicianStemFilter(result);\n    return new TokenStreamComponents(source, result);\n  }\n\n","sourceOld":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link LowerCaseFilter}, {@link StopFilter}\n   *         , {@link KeywordMarkerFilter} if a stem exclusion set is\n   *         provided and {@link GalicianStemFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(matchVersion, source);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new StopFilter(matchVersion, result, stopwords);\n    if(!stemExclusionSet.isEmpty())\n      result = new KeywordMarkerFilter(result, stemExclusionSet);\n    result = new GalicianStemFilter(result);\n    return new TokenStreamComponents(source, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["2f49143da0a5d278a72f741432047fcfa6da996e"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","81d6d41a6e097c5c1e2c81055a12d7f24e147ec7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f49143da0a5d278a72f741432047fcfa6da996e":["b8f1fd760e2a7a87de661158ca069c8dacab8360"],"b8f1fd760e2a7a87de661158ca069c8dacab8360":["81d6d41a6e097c5c1e2c81055a12d7f24e147ec7"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","81d6d41a6e097c5c1e2c81055a12d7f24e147ec7"],"81d6d41a6e097c5c1e2c81055a12d7f24e147ec7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","81d6d41a6e097c5c1e2c81055a12d7f24e147ec7"],"2f49143da0a5d278a72f741432047fcfa6da996e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b8f1fd760e2a7a87de661158ca069c8dacab8360":["2f49143da0a5d278a72f741432047fcfa6da996e"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"81d6d41a6e097c5c1e2c81055a12d7f24e147ec7":["29ef99d61cda9641b6250bf9567329a6e65f901d","b8f1fd760e2a7a87de661158ca069c8dacab8360","868da859b43505d9d2a023bfeae6dd0c795f5295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}