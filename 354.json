{"path":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor#withKeyAndLookup().mjava","commits":[{"id":"2a03a1c391a8e16977859a4af2c997bfb4c59b77","date":1238972294,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor#withKeyAndLookup().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void withKeyAndLookup() {\n    List fields = new ArrayList();\n    fields.add(AbstractDataImportHandlerTest.createMap(\"column\", \"id\"));\n    fields.add(AbstractDataImportHandlerTest.createMap(\"column\", \"desc\"));\n    String q = \"select * from x\";\n    Map<String, String> entityAttrs = AbstractDataImportHandlerTest.createMap(\n            \"query\", q, \"where\", \"id=x.id\");    \n    MockDataSource ds = new MockDataSource();\n    VariableResolverImpl vr = new VariableResolverImpl();\n    Map xNamespace = AbstractDataImportHandlerTest.createMap(\"id\", 0);\n    vr.addNamespace(\"x\", xNamespace);\n    Context context = AbstractDataImportHandlerTest.getContext(null, vr, ds, 0,\n            fields, entityAttrs);\n\n\n    doWhereTest(q, context, ds, xNamespace);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"594d4ee17b3d941ed34827ca6646e378cf7d8d2a","date":1239868870,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor#withKeyAndLookup().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor#withKeyAndLookup().mjava","sourceNew":"  @Test\n  public void withKeyAndLookup() {\n    List fields = new ArrayList();\n    fields.add(AbstractDataImportHandlerTest.createMap(\"column\", \"id\"));\n    fields.add(AbstractDataImportHandlerTest.createMap(\"column\", \"desc\"));\n    String q = \"select * from x\";\n    Map<String, String> entityAttrs = AbstractDataImportHandlerTest.createMap(\"query\", q, \"where\", \"id=x.id\");\n    MockDataSource ds = new MockDataSource();\n    VariableResolverImpl vr = new VariableResolverImpl();\n    Map xNamespace = AbstractDataImportHandlerTest.createMap(\"id\", 0);\n    vr.addNamespace(\"x\", xNamespace);\n    Context context = AbstractDataImportHandlerTest.getContext(null, vr, ds, Context.FULL_DUMP, fields, entityAttrs);\n    doWhereTest(q, context, ds, xNamespace);\n  }\n\n","sourceOld":"  @Test\n  public void withKeyAndLookup() {\n    List fields = new ArrayList();\n    fields.add(AbstractDataImportHandlerTest.createMap(\"column\", \"id\"));\n    fields.add(AbstractDataImportHandlerTest.createMap(\"column\", \"desc\"));\n    String q = \"select * from x\";\n    Map<String, String> entityAttrs = AbstractDataImportHandlerTest.createMap(\n            \"query\", q, \"where\", \"id=x.id\");    \n    MockDataSource ds = new MockDataSource();\n    VariableResolverImpl vr = new VariableResolverImpl();\n    Map xNamespace = AbstractDataImportHandlerTest.createMap(\"id\", 0);\n    vr.addNamespace(\"x\", xNamespace);\n    Context context = AbstractDataImportHandlerTest.getContext(null, vr, ds, 0,\n            fields, entityAttrs);\n\n\n    doWhereTest(q, context, ds, xNamespace);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor#withKeyAndLookup().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor#withKeyAndLookup().mjava","sourceNew":"  @Test\n  public void withKeyAndLookup() {\n    List fields = new ArrayList();\n    fields.add(AbstractDataImportHandlerTest.createMap(\"column\", \"id\"));\n    fields.add(AbstractDataImportHandlerTest.createMap(\"column\", \"desc\"));\n    String q = \"select * from x\";\n    Map<String, String> entityAttrs = AbstractDataImportHandlerTest.createMap(\"query\", q, \"where\", \"id=x.id\");\n    MockDataSource ds = new MockDataSource();\n    VariableResolverImpl vr = new VariableResolverImpl();\n    Map xNamespace = AbstractDataImportHandlerTest.createMap(\"id\", 0);\n    vr.addNamespace(\"x\", xNamespace);\n    Context context = AbstractDataImportHandlerTest.getContext(null, vr, ds, Context.FULL_DUMP, fields, entityAttrs);\n    doWhereTest(q, context, ds, xNamespace);\n  }\n\n","sourceOld":"  @Test\n  public void withKeyAndLookup() {\n    List fields = new ArrayList();\n    fields.add(AbstractDataImportHandlerTest.createMap(\"column\", \"id\"));\n    fields.add(AbstractDataImportHandlerTest.createMap(\"column\", \"desc\"));\n    String q = \"select * from x\";\n    Map<String, String> entityAttrs = AbstractDataImportHandlerTest.createMap(\"query\", q, \"where\", \"id=x.id\");\n    MockDataSource ds = new MockDataSource();\n    VariableResolverImpl vr = new VariableResolverImpl();\n    Map xNamespace = AbstractDataImportHandlerTest.createMap(\"id\", 0);\n    vr.addNamespace(\"x\", xNamespace);\n    Context context = AbstractDataImportHandlerTest.getContext(null, vr, ds, Context.FULL_DUMP, fields, entityAttrs);\n    doWhereTest(q, context, ds, xNamespace);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"2a03a1c391a8e16977859a4af2c997bfb4c59b77":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["594d4ee17b3d941ed34827ca6646e378cf7d8d2a"],"594d4ee17b3d941ed34827ca6646e378cf7d8d2a":["2a03a1c391a8e16977859a4af2c997bfb4c59b77"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["2a03a1c391a8e16977859a4af2c997bfb4c59b77"],"2a03a1c391a8e16977859a4af2c997bfb4c59b77":["594d4ee17b3d941ed34827ca6646e378cf7d8d2a"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"594d4ee17b3d941ed34827ca6646e378cf7d8d2a":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}