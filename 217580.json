{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","sourceNew":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(_TestUtil.getTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random, d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random, d, newIndexWriterConfig(TEST_VERSION_CURRENT, null).setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(_TestUtil.getTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random, d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random, d, newIndexWriterConfig(TEST_VERSION_CURRENT, null).setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","sourceNew":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(_TestUtil.getTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(TEST_VERSION_CURRENT, null).setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(_TestUtil.getTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random, d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random, d, newIndexWriterConfig(TEST_VERSION_CURRENT, null).setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","sourceNew":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(TestUtil.getTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(TEST_VERSION_CURRENT, null).setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(_TestUtil.getTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(TEST_VERSION_CURRENT, null).setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","sourceNew":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(TestUtil.createTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(TEST_VERSION_CURRENT, null).setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(TestUtil.getTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(TEST_VERSION_CURRENT, null).setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c","date":1396633078,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","sourceNew":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(createTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(TEST_VERSION_CURRENT, null).setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(TestUtil.createTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(TEST_VERSION_CURRENT, null).setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","sourceNew":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(createTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(TEST_VERSION_CURRENT, null).setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(TestUtil.getTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(TEST_VERSION_CURRENT, null).setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","sourceNew":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(createTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(TEST_VERSION_CURRENT, null).setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.shutdown();\n    d.close();\n  }\n\n","sourceOld":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(createTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(TEST_VERSION_CURRENT, null).setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","sourceNew":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(createTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(null)\n                                           .setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.shutdown();\n    d.close();\n  }\n\n","sourceOld":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(createTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(TEST_VERSION_CURRENT, null).setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.shutdown();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","sourceNew":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(createTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(null)\n                                           .setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(createTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(null)\n                                           .setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.shutdown();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"285cdc737de75b7cc7c284a156b20214deb67bca","date":1415535483,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","sourceNew":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    Directory d = newFSDirectory(createTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"), SimpleFSLockFactory.INSTANCE);\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(null)\n                                           .setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    Directory d = newFSDirectory(createTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"));\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    d.setLockFactory(new SimpleFSLockFactory());\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(null)\n                                           .setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"618635065f043788c9e034f96ca5cd5cea1b4592","date":1433442044,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","sourceNew":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    Directory d = newFSDirectory(createTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"), SimpleFSLockFactory.INSTANCE);\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(null));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    Directory d = newFSDirectory(createTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"), SimpleFSLockFactory.INSTANCE);\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(null)\n                                           .setWriteLockTimeout(100));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testWhetherDeleteAllDeletesWriteLock().mjava","sourceNew":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    Directory d = newFSDirectory(createTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"), SimpleFSLockFactory.INSTANCE);\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    expectThrows(LockObtainFailedException.class, () -> {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(null));\n    });\n\n    w1.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testWhetherDeleteAllDeletesWriteLock() throws Exception {\n    // Must use SimpleFSLockFactory... NativeFSLockFactory\n    // somehow \"knows\" a lock is held against write.lock\n    // even if you remove that file:\n    Directory d = newFSDirectory(createTempDir(\"TestIndexWriter.testWhetherDeleteAllDeletesWriteLock\"), SimpleFSLockFactory.INSTANCE);\n    RandomIndexWriter w1 = new RandomIndexWriter(random(), d);\n    w1.deleteAll();\n    try {\n      new RandomIndexWriter(random(), d, newIndexWriterConfig(null));\n      fail(\"should not be able to create another writer\");\n    } catch (LockObtainFailedException lofe) {\n      // expected\n    }\n    w1.close();\n    d.close();\n  }\n\n","bugFix":["7b91922b55d15444d554721b352861d028eb8278"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["6613659748fe4411a7dcf85266e55db1f95f7315","a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"6613659748fe4411a7dcf85266e55db1f95f7315":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"285cdc737de75b7cc7c284a156b20214deb67bca":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"05fe562aa248790944d43cdd478f512572835ba0":["618635065f043788c9e034f96ca5cd5cea1b4592"],"d0d579490a72f2e6297eaa648940611234c57cf1":["6613659748fe4411a7dcf85266e55db1f95f7315"],"618635065f043788c9e034f96ca5cd5cea1b4592":["285cdc737de75b7cc7c284a156b20214deb67bca"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["d0d579490a72f2e6297eaa648940611234c57cf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"6613659748fe4411a7dcf85266e55db1f95f7315":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","d0d579490a72f2e6297eaa648940611234c57cf1"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"285cdc737de75b7cc7c284a156b20214deb67bca":["618635065f043788c9e034f96ca5cd5cea1b4592"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0d579490a72f2e6297eaa648940611234c57cf1":["a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"618635065f043788c9e034f96ca5cd5cea1b4592":["05fe562aa248790944d43cdd478f512572835ba0"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["285cdc737de75b7cc7c284a156b20214deb67bca"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["6613659748fe4411a7dcf85266e55db1f95f7315"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}