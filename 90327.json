{"path":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#couldIbeSubShardLeader(DocCollection).mjava","commits":[{"id":"7b4c4001c33d7e459f31c8810ea8fd129c7b6ea7","date":1391654280,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#couldIbeSubShardLeader(DocCollection).mjava","pathOld":"/dev/null","sourceNew":"  private boolean couldIbeSubShardLeader(DocCollection coll) {\n    // Could I be the leader of a shard in \"construction/recovery\" state?\n    String myShardId = req.getCore().getCoreDescriptor().getCloudDescriptor()\n        .getShardId();\n    Slice mySlice = coll.getSlice(myShardId);\n    String state = mySlice.getState();\n    return (Slice.CONSTRUCTION.equals(state) || Slice.RECOVERY.equals(state));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0dcc63c22f7cfe3d3a83aee576d0fc5b403a296","date":1427866967,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#couldIbeSubShardLeader(DocCollection).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#couldIbeSubShardLeader(DocCollection).mjava","sourceNew":"  private boolean couldIbeSubShardLeader(DocCollection coll) {\n    // Could I be the leader of a shard in \"construction/recovery\" state?\n    String myShardId = req.getCore().getCoreDescriptor().getCloudDescriptor().getShardId();\n    Slice mySlice = coll.getSlice(myShardId);\n    State state = mySlice.getState();\n    return state == Slice.State.CONSTRUCTION || state == Slice.State.RECOVERY;\n  }\n\n","sourceOld":"  private boolean couldIbeSubShardLeader(DocCollection coll) {\n    // Could I be the leader of a shard in \"construction/recovery\" state?\n    String myShardId = req.getCore().getCoreDescriptor().getCloudDescriptor()\n        .getShardId();\n    Slice mySlice = coll.getSlice(myShardId);\n    String state = mySlice.getState();\n    return (Slice.CONSTRUCTION.equals(state) || Slice.RECOVERY.equals(state));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c924d4069ef5a5bc479a493befe0121aada6896","date":1427901860,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#couldIbeSubShardLeader(DocCollection).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#couldIbeSubShardLeader(DocCollection).mjava","sourceNew":"  private boolean couldIbeSubShardLeader(DocCollection coll) {\n    // Could I be the leader of a shard in \"construction/recovery\" state?\n    String myShardId = req.getCore().getCoreDescriptor().getCloudDescriptor().getShardId();\n    Slice mySlice = coll.getSlice(myShardId);\n    State state = mySlice.getState();\n    return state == Slice.State.CONSTRUCTION || state == Slice.State.RECOVERY;\n  }\n\n","sourceOld":"  private boolean couldIbeSubShardLeader(DocCollection coll) {\n    // Could I be the leader of a shard in \"construction/recovery\" state?\n    String myShardId = req.getCore().getCoreDescriptor().getCloudDescriptor()\n        .getShardId();\n    Slice mySlice = coll.getSlice(myShardId);\n    String state = mySlice.getState();\n    return (Slice.CONSTRUCTION.equals(state) || Slice.RECOVERY.equals(state));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"601f914e4448cab7640fecfb5d15f8f2e2af0bf6","date":1508947828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#couldIbeSubShardLeader(DocCollection).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#couldIbeSubShardLeader(DocCollection).mjava","sourceNew":"  private boolean couldIbeSubShardLeader(DocCollection coll) {\n    // Could I be the leader of a shard in \"construction/recovery\" state?\n    String myShardId = cloudDesc.getShardId();\n    Slice mySlice = coll.getSlice(myShardId);\n    State state = mySlice.getState();\n    return state == Slice.State.CONSTRUCTION || state == Slice.State.RECOVERY;\n  }\n\n","sourceOld":"  private boolean couldIbeSubShardLeader(DocCollection coll) {\n    // Could I be the leader of a shard in \"construction/recovery\" state?\n    String myShardId = req.getCore().getCoreDescriptor().getCloudDescriptor().getShardId();\n    Slice mySlice = coll.getSlice(myShardId);\n    State state = mySlice.getState();\n    return state == Slice.State.CONSTRUCTION || state == Slice.State.RECOVERY;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad55ff45b3a5483090d87a63019d0e6a8d4b5a65","date":1509551229,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#couldIbeSubShardLeader(DocCollection).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#couldIbeSubShardLeader(DocCollection).mjava","sourceNew":"  /** For {@link CollectionParams.CollectionAction#SPLITSHARD} */\n  private boolean couldIbeSubShardLeader(DocCollection coll) {\n    // Could I be the leader of a shard in \"construction/recovery\" state?\n    String myShardId = cloudDesc.getShardId();\n    Slice mySlice = coll.getSlice(myShardId);\n    State state = mySlice.getState();\n    return state == Slice.State.CONSTRUCTION || state == Slice.State.RECOVERY;\n  }\n\n","sourceOld":"  private boolean couldIbeSubShardLeader(DocCollection coll) {\n    // Could I be the leader of a shard in \"construction/recovery\" state?\n    String myShardId = cloudDesc.getShardId();\n    Slice mySlice = coll.getSlice(myShardId);\n    State state = mySlice.getState();\n    return state == Slice.State.CONSTRUCTION || state == Slice.State.RECOVERY;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3f27bd66feacd34399839572de1b2e927d4f367","date":1509582546,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#couldIbeSubShardLeader(DocCollection).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#couldIbeSubShardLeader(DocCollection).mjava","sourceNew":"  /** For {@link org.apache.solr.common.params.CollectionParams.CollectionAction#SPLITSHARD} */\n  private boolean couldIbeSubShardLeader(DocCollection coll) {\n    // Could I be the leader of a shard in \"construction/recovery\" state?\n    String myShardId = cloudDesc.getShardId();\n    Slice mySlice = coll.getSlice(myShardId);\n    State state = mySlice.getState();\n    return state == Slice.State.CONSTRUCTION || state == Slice.State.RECOVERY;\n  }\n\n","sourceOld":"  /** For {@link CollectionParams.CollectionAction#SPLITSHARD} */\n  private boolean couldIbeSubShardLeader(DocCollection coll) {\n    // Could I be the leader of a shard in \"construction/recovery\" state?\n    String myShardId = cloudDesc.getShardId();\n    Slice mySlice = coll.getSlice(myShardId);\n    State state = mySlice.getState();\n    return state == Slice.State.CONSTRUCTION || state == Slice.State.RECOVERY;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d70e774cb25c8a8d2c3e5e84200f235f9168d87","date":1553016391,"type":5,"author":"Bar Rotstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedZkUpdateProcessor#couldIbeSubShardLeader(DocCollection).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#couldIbeSubShardLeader(DocCollection).mjava","sourceNew":"  /** For {@link org.apache.solr.common.params.CollectionParams.CollectionAction#SPLITSHARD} */\n  private boolean couldIbeSubShardLeader(DocCollection coll) {\n    // Could I be the leader of a shard in \"construction/recovery\" state?\n    String myShardId = cloudDesc.getShardId();\n    Slice mySlice = coll.getSlice(myShardId);\n    Slice.State state = mySlice.getState();\n    return state == Slice.State.CONSTRUCTION || state == Slice.State.RECOVERY;\n  }\n\n","sourceOld":"  /** For {@link org.apache.solr.common.params.CollectionParams.CollectionAction#SPLITSHARD} */\n  private boolean couldIbeSubShardLeader(DocCollection coll) {\n    // Could I be the leader of a shard in \"construction/recovery\" state?\n    String myShardId = cloudDesc.getShardId();\n    Slice mySlice = coll.getSlice(myShardId);\n    State state = mySlice.getState();\n    return state == Slice.State.CONSTRUCTION || state == Slice.State.RECOVERY;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"601f914e4448cab7640fecfb5d15f8f2e2af0bf6":["d0dcc63c22f7cfe3d3a83aee576d0fc5b403a296"],"d0dcc63c22f7cfe3d3a83aee576d0fc5b403a296":["7b4c4001c33d7e459f31c8810ea8fd129c7b6ea7"],"7b4c4001c33d7e459f31c8810ea8fd129c7b6ea7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ad55ff45b3a5483090d87a63019d0e6a8d4b5a65":["601f914e4448cab7640fecfb5d15f8f2e2af0bf6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c3f27bd66feacd34399839572de1b2e927d4f367":["ad55ff45b3a5483090d87a63019d0e6a8d4b5a65"],"9d70e774cb25c8a8d2c3e5e84200f235f9168d87":["c3f27bd66feacd34399839572de1b2e927d4f367"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9d70e774cb25c8a8d2c3e5e84200f235f9168d87"],"0c924d4069ef5a5bc479a493befe0121aada6896":["7b4c4001c33d7e459f31c8810ea8fd129c7b6ea7","d0dcc63c22f7cfe3d3a83aee576d0fc5b403a296"]},"commit2Childs":{"601f914e4448cab7640fecfb5d15f8f2e2af0bf6":["ad55ff45b3a5483090d87a63019d0e6a8d4b5a65"],"d0dcc63c22f7cfe3d3a83aee576d0fc5b403a296":["601f914e4448cab7640fecfb5d15f8f2e2af0bf6","0c924d4069ef5a5bc479a493befe0121aada6896"],"7b4c4001c33d7e459f31c8810ea8fd129c7b6ea7":["d0dcc63c22f7cfe3d3a83aee576d0fc5b403a296","0c924d4069ef5a5bc479a493befe0121aada6896"],"ad55ff45b3a5483090d87a63019d0e6a8d4b5a65":["c3f27bd66feacd34399839572de1b2e927d4f367"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b4c4001c33d7e459f31c8810ea8fd129c7b6ea7"],"c3f27bd66feacd34399839572de1b2e927d4f367":["9d70e774cb25c8a8d2c3e5e84200f235f9168d87"],"9d70e774cb25c8a8d2c3e5e84200f235f9168d87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"0c924d4069ef5a5bc479a493befe0121aada6896":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","0c924d4069ef5a5bc479a493befe0121aada6896"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}