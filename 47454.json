{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50StoredFieldsFormat#impl(Mode).mjava","commits":[{"id":"ca02638278b6e8ae6b18f9db9e55ddbb3092cd13","date":1417836602,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50StoredFieldsFormat#impl(Mode).mjava","pathOld":"/dev/null","sourceNew":"  StoredFieldsFormat impl(Mode mode) {\n    switch (mode) {\n      case BEST_SPEED: \n        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsFast\", CompressionMode.FAST, 1 << 14, 128);\n      case BEST_COMPRESSION: \n        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsHigh\", CompressionMode.HIGH_COMPRESSION, 24576, 512);\n      default: throw new AssertionError();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f55cf5f2eb86208d0eb5a11bcac35c3c35e29fc3","date":1418173179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50StoredFieldsFormat#impl(Mode).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50StoredFieldsFormat#impl(Mode).mjava","sourceNew":"  StoredFieldsFormat impl(Mode mode) {\n    switch (mode) {\n      case BEST_SPEED: \n        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsFast\", CompressionMode.FAST, 1 << 14, 128);\n      case BEST_COMPRESSION: \n        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsHigh\", CompressionMode.HIGH_COMPRESSION, 61440, 512);\n      default: throw new AssertionError();\n    }\n  }\n\n","sourceOld":"  StoredFieldsFormat impl(Mode mode) {\n    switch (mode) {\n      case BEST_SPEED: \n        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsFast\", CompressionMode.FAST, 1 << 14, 128);\n      case BEST_COMPRESSION: \n        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsHigh\", CompressionMode.HIGH_COMPRESSION, 24576, 512);\n      default: throw new AssertionError();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59d4661023aa9541b0a759e4d2e11dcf83b923a0","date":1420124226,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50StoredFieldsFormat#impl(Mode).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50StoredFieldsFormat#impl(Mode).mjava","sourceNew":"  StoredFieldsFormat impl(Mode mode) {\n    switch (mode) {\n      case BEST_SPEED: \n        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsFast\", CompressionMode.FAST, 1 << 14, 128, 1024);\n      case BEST_COMPRESSION: \n        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsHigh\", CompressionMode.HIGH_COMPRESSION, 61440, 512, 1024);\n      default: throw new AssertionError();\n    }\n  }\n\n","sourceOld":"  StoredFieldsFormat impl(Mode mode) {\n    switch (mode) {\n      case BEST_SPEED: \n        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsFast\", CompressionMode.FAST, 1 << 14, 128);\n      case BEST_COMPRESSION: \n        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsHigh\", CompressionMode.HIGH_COMPRESSION, 61440, 512);\n      default: throw new AssertionError();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70a4487b07c49a1861c05720e04624826ecbe9fa","date":1580924108,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50StoredFieldsFormat#impl(Mode).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50StoredFieldsFormat#impl(Mode).mjava","sourceNew":"  StoredFieldsFormat impl(Mode mode) {\n    switch (mode) {\n      case BEST_SPEED: \n        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsFastData\", CompressionMode.FAST, 1 << 14, 128, 10);\n      case BEST_COMPRESSION: \n        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsHighData\", CompressionMode.HIGH_COMPRESSION, 61440, 512, 10);\n      default: throw new AssertionError();\n    }\n  }\n\n","sourceOld":"  StoredFieldsFormat impl(Mode mode) {\n    switch (mode) {\n      case BEST_SPEED: \n        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsFast\", CompressionMode.FAST, 1 << 14, 128, 1024);\n      case BEST_COMPRESSION: \n        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsHigh\", CompressionMode.HIGH_COMPRESSION, 61440, 512, 1024);\n      default: throw new AssertionError();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db8230c9dbe474fc18e1e71cf04c1ada8046ec9","date":1598432674,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene50/Lucene50StoredFieldsFormat#impl(Mode).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50StoredFieldsFormat#impl(Mode).mjava","sourceNew":"  StoredFieldsFormat impl(Mode mode) {\n    switch (mode) {\n      case BEST_SPEED: \n        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsFastData\", CompressionMode.FAST, 1 << 14, 128, 10);\n      case BEST_COMPRESSION: \n        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsHighData\", CompressionMode.HIGH_COMPRESSION, 61440, 512, 10);\n      default: throw new AssertionError();\n    }\n  }\n\n","sourceOld":"  StoredFieldsFormat impl(Mode mode) {\n    switch (mode) {\n      case BEST_SPEED: \n        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsFastData\", CompressionMode.FAST, 1 << 14, 128, 10);\n      case BEST_COMPRESSION: \n        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsHighData\", CompressionMode.HIGH_COMPRESSION, 61440, 512, 10);\n      default: throw new AssertionError();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70a4487b07c49a1861c05720e04624826ecbe9fa":["59d4661023aa9541b0a759e4d2e11dcf83b923a0"],"59d4661023aa9541b0a759e4d2e11dcf83b923a0":["f55cf5f2eb86208d0eb5a11bcac35c3c35e29fc3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0db8230c9dbe474fc18e1e71cf04c1ada8046ec9":["70a4487b07c49a1861c05720e04624826ecbe9fa"],"f55cf5f2eb86208d0eb5a11bcac35c3c35e29fc3":["ca02638278b6e8ae6b18f9db9e55ddbb3092cd13"],"ca02638278b6e8ae6b18f9db9e55ddbb3092cd13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0db8230c9dbe474fc18e1e71cf04c1ada8046ec9"]},"commit2Childs":{"70a4487b07c49a1861c05720e04624826ecbe9fa":["0db8230c9dbe474fc18e1e71cf04c1ada8046ec9"],"59d4661023aa9541b0a759e4d2e11dcf83b923a0":["70a4487b07c49a1861c05720e04624826ecbe9fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ca02638278b6e8ae6b18f9db9e55ddbb3092cd13"],"0db8230c9dbe474fc18e1e71cf04c1ada8046ec9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f55cf5f2eb86208d0eb5a11bcac35c3c35e29fc3":["59d4661023aa9541b0a759e4d2e11dcf83b923a0"],"ca02638278b6e8ae6b18f9db9e55ddbb3092cd13":["f55cf5f2eb86208d0eb5a11bcac35c3c35e29fc3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}