{"path":"solr/core/src/test/org/apache/solr/schema/DateFieldTest#assertFormatParsed(String,String).mjava","commits":[{"id":"2106271e380c198349e0f6eac0395bb462913fab","date":1397072894,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/DateFieldTest#assertFormatParsed(String,String).mjava","pathOld":"/dev/null","sourceNew":"  public void assertFormatParsed(String expected, String input) throws ParseException {\n    assertEquals(\"Input: \" + input, expected, f.formatDate(f.parseMath(new Date(), input)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331","date":1437383270,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/DateFieldTest#assertFormatParsed(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/DateFieldTest#assertFormatParsed(String,String).mjava","sourceNew":"  public void assertFormatParsed(String expected, String input) throws ParseException {\n    assertEquals(\"Input: \" + input, expected, DateFormatUtil.formatDate(DateFormatUtil.parseMath(new Date(), input)));\n  }\n\n","sourceOld":"  public void assertFormatParsed(String expected, String input) throws ParseException {\n    assertEquals(\"Input: \" + input, expected, f.formatDate(f.parseMath(new Date(), input)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3f6c7717a0f1decd1668144537943efcc70cd95","date":1459359762,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/DateFieldTest#assertFormatParsed(String,String).mjava","sourceNew":null,"sourceOld":"  public void assertFormatParsed(String expected, String input) throws ParseException {\n    assertEquals(\"Input: \" + input, expected, DateFormatUtil.formatDate(DateFormatUtil.parseMath(new Date(), input)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3f6c7717a0f1decd1668144537943efcc70cd95":["0c38a05f7a7b43c2dabbd25f12f9941c64bb2331"],"2106271e380c198349e0f6eac0395bb462913fab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3f6c7717a0f1decd1668144537943efcc70cd95"],"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331":["2106271e380c198349e0f6eac0395bb462913fab"]},"commit2Childs":{"d3f6c7717a0f1decd1668144537943efcc70cd95":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2106271e380c198349e0f6eac0395bb462913fab":["0c38a05f7a7b43c2dabbd25f12f9941c64bb2331"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2106271e380c198349e0f6eac0395bb462913fab"],"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331":["d3f6c7717a0f1decd1668144537943efcc70cd95"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}