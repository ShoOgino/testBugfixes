{"path":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","sourceNew":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random);\n    TokenStream stream = analyzer.tokenStream(\"dummy\", new StringReader(testString));\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    stream.close();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","sourceOld":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random);\n    TokenStream stream = analyzer.tokenStream(\"dummy\", new StringReader(testString));\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    stream.close();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","sourceNew":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random());\n    TokenStream stream = analyzer.tokenStream(\"dummy\", new StringReader(testString));\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    stream.close();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","sourceOld":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random);\n    TokenStream stream = analyzer.tokenStream(\"dummy\", new StringReader(testString));\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    stream.close();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c83d6c4335f31cae14f625a222bc842f20073dcd","date":1373306148,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","sourceNew":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random());\n    TokenStream stream = analyzer.tokenStream(\"dummy\", testString);\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    stream.close();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","sourceOld":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random());\n    TokenStream stream = analyzer.tokenStream(\"dummy\", new StringReader(testString));\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    stream.close();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","bugFix":["69e043c521d4e8db770cc140c63f5ef51f03426a"],"bugIntro":["782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","sourceNew":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random());\n    TokenStream stream = analyzer.tokenStream(\"dummy\", testString);\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    stream.close();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","sourceOld":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random());\n    TokenStream stream = analyzer.tokenStream(\"dummy\", new StringReader(testString));\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    stream.close();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df1b735b811bfe6055a98336ee8dfd1e43cf2dc0","date":1379858263,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","sourceNew":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random());\n    TokenStream stream = analyzer.tokenStream(\"dummy\", testString);\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    stream.close();\n    \n    assertAnalyzesTo(analyzer, testString, new String[] { \"t\" });\n  }\n\n","sourceOld":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random());\n    TokenStream stream = analyzer.tokenStream(\"dummy\", testString);\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    stream.close();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"782ed6a4b4ba50ec19734fc8db4e570ee193d627","date":1381127065,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","sourceNew":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random());\n    try (TokenStream stream = analyzer.tokenStream(\"dummy\", testString)) {\n      stream.reset();\n      while (stream.incrementToken()) {\n        // consume\n      }\n      stream.end();\n    }\n    \n    assertAnalyzesTo(analyzer, testString, new String[] { \"t\" });\n  }\n\n","sourceOld":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random());\n    TokenStream stream = analyzer.tokenStream(\"dummy\", testString);\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    stream.close();\n    \n    assertAnalyzesTo(analyzer, testString, new String[] { \"t\" });\n  }\n\n","bugFix":["47ef98c97dcd0008187c6ae3c5b4dfe61fbe55cf","c83d6c4335f31cae14f625a222bc842f20073dcd","e2efdd13c0f37dbe4a292a6f98ddcf8e8f872ac4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","sourceNew":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random());\n    try (TokenStream stream = analyzer.tokenStream(\"dummy\", testString)) {\n      stream.reset();\n      while (stream.incrementToken()) {\n        // consume\n      }\n      stream.end();\n    }\n    \n    assertAnalyzesTo(analyzer, testString, new String[] { \"t\" });\n  }\n\n","sourceOld":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random());\n    try (TokenStream stream = analyzer.tokenStream(\"dummy\", testString)) {\n      stream.reset();\n      while (stream.incrementToken()) {\n        // consume\n      }\n      stream.end();\n    }\n    \n    assertAnalyzesTo(analyzer, testString, new String[] { \"t\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df1b735b811bfe6055a98336ee8dfd1e43cf2dc0":["c83d6c4335f31cae14f625a222bc842f20073dcd"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","c83d6c4335f31cae14f625a222bc842f20073dcd"],"c83d6c4335f31cae14f625a222bc842f20073dcd":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"782ed6a4b4ba50ec19734fc8db4e570ee193d627":["df1b735b811bfe6055a98336ee8dfd1e43cf2dc0"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"df1b735b811bfe6055a98336ee8dfd1e43cf2dc0":["782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c83d6c4335f31cae14f625a222bc842f20073dcd":["df1b735b811bfe6055a98336ee8dfd1e43cf2dc0","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["37a0f60745e53927c4c876cfe5b5a58170f0646c","c83d6c4335f31cae14f625a222bc842f20073dcd"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"782ed6a4b4ba50ec19734fc8db4e570ee193d627":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}