{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEventQueue#fromMap(Map[String,Object]).mjava","commits":[{"id":"464244264804e3f981bf1fb4b732516d8d62dbc2","date":1495736161,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEventQueue#fromMap(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  private TriggerEvent fromMap(Map<String, Object> map) {\n    String id = (String)map.get(\"id\");\n    String source = (String)map.get(\"source\");\n    long eventTime = ((Number)map.get(\"eventTime\")).longValue();\n    AutoScaling.EventType eventType = AutoScaling.EventType.valueOf((String)map.get(\"eventType\"));\n    Map<String, Object> properties = (Map<String, Object>)map.get(\"properties\");\n    TriggerEvent res = new TriggerEvent(id, eventType, source, eventTime, properties);\n    res.getProperties().put(DEQUEUE_TIME, timeSource.getTime());\n    return res;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5531f16a602ef350b6c9adfb08ebaa13a60fe3db","date":1495756318,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEventQueue#fromMap(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  private TriggerEvent fromMap(Map<String, Object> map) {\n    String id = (String)map.get(\"id\");\n    String source = (String)map.get(\"source\");\n    long eventTime = ((Number)map.get(\"eventTime\")).longValue();\n    AutoScaling.EventType eventType = AutoScaling.EventType.valueOf((String)map.get(\"eventType\"));\n    Map<String, Object> properties = (Map<String, Object>)map.get(\"properties\");\n    TriggerEvent res = new TriggerEvent(id, eventType, source, eventTime, properties);\n    res.getProperties().put(DEQUEUE_TIME, timeSource.getTime());\n    return res;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25","date":1499961129,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEventQueue#fromMap(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEventQueue#fromMap(Map[String,Object]).mjava","sourceNew":"  private TriggerEvent fromMap(Map<String, Object> map) {\n    String id = (String)map.get(\"id\");\n    String source = (String)map.get(\"source\");\n    long eventTime = ((Number)map.get(\"eventTime\")).longValue();\n    TriggerEventType eventType = TriggerEventType.valueOf((String)map.get(\"eventType\"));\n    Map<String, Object> properties = (Map<String, Object>)map.get(\"properties\");\n    TriggerEvent res = new TriggerEvent(id, eventType, source, eventTime, properties);\n    res.getProperties().put(DEQUEUE_TIME, timeSource.getTime());\n    return res;\n  }\n\n","sourceOld":"  private TriggerEvent fromMap(Map<String, Object> map) {\n    String id = (String)map.get(\"id\");\n    String source = (String)map.get(\"source\");\n    long eventTime = ((Number)map.get(\"eventTime\")).longValue();\n    AutoScaling.EventType eventType = AutoScaling.EventType.valueOf((String)map.get(\"eventType\"));\n    Map<String, Object> properties = (Map<String, Object>)map.get(\"properties\");\n    TriggerEvent res = new TriggerEvent(id, eventType, source, eventTime, properties);\n    res.getProperties().put(DEQUEUE_TIME, timeSource.getTime());\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEventQueue#fromMap(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  private TriggerEvent fromMap(Map<String, Object> map) {\n    String id = (String)map.get(\"id\");\n    String source = (String)map.get(\"source\");\n    long eventTime = ((Number)map.get(\"eventTime\")).longValue();\n    TriggerEventType eventType = TriggerEventType.valueOf((String)map.get(\"eventType\"));\n    Map<String, Object> properties = (Map<String, Object>)map.get(\"properties\");\n    TriggerEvent res = new TriggerEvent(id, eventType, source, eventTime, properties);\n    res.getProperties().put(DEQUEUE_TIME, timeSource.getTime());\n    return res;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEventQueue#fromMap(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  private TriggerEvent fromMap(Map<String, Object> map) {\n    String id = (String)map.get(\"id\");\n    String source = (String)map.get(\"source\");\n    long eventTime = ((Number)map.get(\"eventTime\")).longValue();\n    TriggerEventType eventType = TriggerEventType.valueOf((String)map.get(\"eventType\"));\n    Map<String, Object> properties = (Map<String, Object>)map.get(\"properties\");\n    TriggerEvent res = new TriggerEvent(id, eventType, source, eventTime, properties);\n    res.getProperties().put(DEQUEUE_TIME, timeSource.getTime());\n    return res;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4412883c12067d8a4e2a354aa8adc58c32be1d6","date":1521129281,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEventQueue#fromMap(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEventQueue#fromMap(Map[String,Object]).mjava","sourceNew":"  private TriggerEvent fromMap(Map<String, Object> map) {\n    String id = (String)map.get(\"id\");\n    String source = (String)map.get(\"source\");\n    long eventTime = ((Number)map.get(\"eventTime\")).longValue();\n    TriggerEventType eventType = TriggerEventType.valueOf((String)map.get(\"eventType\"));\n    Map<String, Object> properties = (Map<String, Object>)map.get(\"properties\");\n    TriggerEvent res = new TriggerEvent(id, eventType, source, eventTime, properties);\n    res.getProperties().put(DEQUEUE_TIME, timeSource.getTimeNs());\n    return res;\n  }\n\n","sourceOld":"  private TriggerEvent fromMap(Map<String, Object> map) {\n    String id = (String)map.get(\"id\");\n    String source = (String)map.get(\"source\");\n    long eventTime = ((Number)map.get(\"eventTime\")).longValue();\n    TriggerEventType eventType = TriggerEventType.valueOf((String)map.get(\"eventType\"));\n    Map<String, Object> properties = (Map<String, Object>)map.get(\"properties\");\n    TriggerEvent res = new TriggerEvent(id, eventType, source, eventTime, properties);\n    res.getProperties().put(DEQUEUE_TIME, timeSource.getTime());\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"976feb6756f29529c6ce5b578e7d6fa8b1efcb30","date":1535461878,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEventQueue#fromMap(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEventQueue#fromMap(Map[String,Object]).mjava","sourceNew":"  private TriggerEvent fromMap(Map<String, Object> map) {\n    TriggerEvent res = TriggerEvent.fromMap(map);\n    res.getProperties().put(DEQUEUE_TIME, timeSource.getTimeNs());\n    return res;\n  }\n\n","sourceOld":"  private TriggerEvent fromMap(Map<String, Object> map) {\n    String id = (String)map.get(\"id\");\n    String source = (String)map.get(\"source\");\n    long eventTime = ((Number)map.get(\"eventTime\")).longValue();\n    TriggerEventType eventType = TriggerEventType.valueOf((String)map.get(\"eventType\"));\n    Map<String, Object> properties = (Map<String, Object>)map.get(\"properties\");\n    TriggerEvent res = new TriggerEvent(id, eventType, source, eventTime, properties);\n    res.getProperties().put(DEQUEUE_TIME, timeSource.getTimeNs());\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEventQueue#fromMap(Map[String,Object]).mjava","sourceNew":null,"sourceOld":"  private TriggerEvent fromMap(Map<String, Object> map) {\n    TriggerEvent res = TriggerEvent.fromMap(map);\n    res.getProperties().put(DEQUEUE_TIME, timeSource.getTimeNs());\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"3f504512a03d978990cbff30db0522b354e846db":["976feb6756f29529c6ce5b578e7d6fa8b1efcb30"],"5531f16a602ef350b6c9adfb08ebaa13a60fe3db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","464244264804e3f981bf1fb4b732516d8d62dbc2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"464244264804e3f981bf1fb4b732516d8d62dbc2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4412883c12067d8a4e2a354aa8adc58c32be1d6":["560c18d71dad43d675158783c3840f8c80d6d39c"],"976feb6756f29529c6ce5b578e7d6fa8b1efcb30":["d4412883c12067d8a4e2a354aa8adc58c32be1d6"],"560c18d71dad43d675158783c3840f8c80d6d39c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":["5531f16a602ef350b6c9adfb08ebaa13a60fe3db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5531f16a602ef350b6c9adfb08ebaa13a60fe3db":["219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c304e97e7c1d472bc70e801b35ee78583916c6cd","5531f16a602ef350b6c9adfb08ebaa13a60fe3db","464244264804e3f981bf1fb4b732516d8d62dbc2","560c18d71dad43d675158783c3840f8c80d6d39c"],"464244264804e3f981bf1fb4b732516d8d62dbc2":["5531f16a602ef350b6c9adfb08ebaa13a60fe3db"],"d4412883c12067d8a4e2a354aa8adc58c32be1d6":["976feb6756f29529c6ce5b578e7d6fa8b1efcb30"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"976feb6756f29529c6ce5b578e7d6fa8b1efcb30":["3f504512a03d978990cbff30db0522b354e846db"],"560c18d71dad43d675158783c3840f8c80d6d39c":["d4412883c12067d8a4e2a354aa8adc58c32be1d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}