{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector#isWithin(Membership[],Membership...).mjava","commits":[{"id":"7068f8ae7a1c26fc559b74e13088efa5f67bd1bf","date":1462474060,"type":1,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector#isWithin(Membership[],Membership...).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector#isWithin(Membership[],Membership[]).mjava","sourceNew":"  /**\n   * Determine if this vector, taken from the origin,\n   * describes a point within a set of planes.\n   *\n   * @param bounds     is the first part of the set of planes.\n   * @param moreBounds is the second part of the set of planes.\n   * @return true if the point is within the bounds.\n   */\n  public boolean isWithin(final Membership[] bounds, final Membership... moreBounds) {\n    // Return true if the point described is within all provided bounds\n    //System.err.println(\"  checking if \"+this+\" is within bounds\");\n    for (final Membership bound : bounds) {\n      if (bound != null && !bound.isWithin(this)) {\n        //System.err.println(\"    NOT within \"+bound);\n        return false;\n      }\n    }\n    for (final Membership bound : moreBounds) {\n      if (bound != null && !bound.isWithin(this)) {\n        //System.err.println(\"    NOT within \"+bound);\n        return false;\n      }\n    }\n    //System.err.println(\"    is within\");\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Determine if this vector, taken from the origin,\n   * describes a point within a set of planes.\n   *\n   * @param bounds     is the first part of the set of planes.\n   * @param moreBounds is the second part of the set of planes.\n   * @return true if the point is within the bounds.\n   */\n  public boolean isWithin(final Membership[] bounds, final Membership[] moreBounds) {\n    // Return true if the point described is within all provided bounds\n    //System.err.println(\"  checking if \"+this+\" is within bounds\");\n    for (Membership bound : bounds) {\n      if (bound != null && !bound.isWithin(this)) {\n        //System.err.println(\"    NOT within \"+bound);\n        return false;\n      }\n    }\n    for (Membership bound : moreBounds) {\n      if (bound != null && !bound.isWithin(this)) {\n        //System.err.println(\"    NOT within \"+bound);\n        return false;\n      }\n    }\n    //System.err.println(\"    is within\");\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","date":1462576651,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector#isWithin(Membership[],Membership...).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector#isWithin(Membership[],Membership[]).mjava","sourceNew":"  /**\n   * Determine if this vector, taken from the origin,\n   * describes a point within a set of planes.\n   *\n   * @param bounds     is the first part of the set of planes.\n   * @param moreBounds is the second part of the set of planes.\n   * @return true if the point is within the bounds.\n   */\n  public boolean isWithin(final Membership[] bounds, final Membership... moreBounds) {\n    // Return true if the point described is within all provided bounds\n    //System.err.println(\"  checking if \"+this+\" is within bounds\");\n    for (final Membership bound : bounds) {\n      if (bound != null && !bound.isWithin(this)) {\n        //System.err.println(\"    NOT within \"+bound);\n        return false;\n      }\n    }\n    for (final Membership bound : moreBounds) {\n      if (bound != null && !bound.isWithin(this)) {\n        //System.err.println(\"    NOT within \"+bound);\n        return false;\n      }\n    }\n    //System.err.println(\"    is within\");\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Determine if this vector, taken from the origin,\n   * describes a point within a set of planes.\n   *\n   * @param bounds     is the first part of the set of planes.\n   * @param moreBounds is the second part of the set of planes.\n   * @return true if the point is within the bounds.\n   */\n  public boolean isWithin(final Membership[] bounds, final Membership[] moreBounds) {\n    // Return true if the point described is within all provided bounds\n    //System.err.println(\"  checking if \"+this+\" is within bounds\");\n    for (Membership bound : bounds) {\n      if (bound != null && !bound.isWithin(this)) {\n        //System.err.println(\"    NOT within \"+bound);\n        return false;\n      }\n    }\n    for (Membership bound : moreBounds) {\n      if (bound != null && !bound.isWithin(this)) {\n        //System.err.println(\"    NOT within \"+bound);\n        return false;\n      }\n    }\n    //System.err.println(\"    is within\");\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector#isWithin(Membership[],Membership...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Determine if this vector, taken from the origin,\n   * describes a point within a set of planes.\n   *\n   * @param bounds     is the first part of the set of planes.\n   * @param moreBounds is the second part of the set of planes.\n   * @return true if the point is within the bounds.\n   */\n  public boolean isWithin(final Membership[] bounds, final Membership... moreBounds) {\n    // Return true if the point described is within all provided bounds\n    //System.err.println(\"  checking if \"+this+\" is within bounds\");\n    for (final Membership bound : bounds) {\n      if (bound != null && !bound.isWithin(this)) {\n        //System.err.println(\"    NOT within \"+bound);\n        return false;\n      }\n    }\n    for (final Membership bound : moreBounds) {\n      if (bound != null && !bound.isWithin(this)) {\n        //System.err.println(\"    NOT within \"+bound);\n        return false;\n      }\n    }\n    //System.err.println(\"    is within\");\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7068f8ae7a1c26fc559b74e13088efa5f67bd1bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7068f8ae7a1c26fc559b74e13088efa5f67bd1bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7068f8ae7a1c26fc559b74e13088efa5f67bd1bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7068f8ae7a1c26fc559b74e13088efa5f67bd1bf"]},"commit2Childs":{"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","7068f8ae7a1c26fc559b74e13088efa5f67bd1bf","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"7068f8ae7a1c26fc559b74e13088efa5f67bd1bf":["a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}