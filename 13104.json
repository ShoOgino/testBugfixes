{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#getDataSourceInstance(DataConfig.Entity).mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#getDataSourceInstance(DataConfig.Entity).mjava","pathOld":"/dev/null","sourceNew":"  DataSource getDataSourceInstance(DataConfig.Entity key) {\n    Properties p = dataSourceProps.get(key.dataSource);\n    if (p == null)\n      p = config.dataSources.get(key.dataSource);\n    if (p == null)\n      p = dataSourceProps.get(null);// for default data source\n    if (p == null)\n      p = config.dataSources.get(null);\n    if (p == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"No dataSource :\" + key.dataSource + \" available for entity :\"\n                      + key.name);\n    String impl = p.getProperty(TYPE);\n    DataSource dataSrc = null;\n    if (impl == null) {\n      dataSrc = new JdbcDataSource();\n    } else {\n      try {\n        dataSrc = (DataSource) DocBuilder.loadClass(impl).newInstance();\n      } catch (Exception e) {\n        throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n                \"Invalid type for data source: \" + impl, e);\n      }\n    }\n    try {\n      Properties copyProps = new Properties();\n      copyProps.putAll(p);\n      dataSrc.init(new ContextImpl(key, null, dataSrc, 0,\n              Collections.EMPTY_MAP, new HashMap(), null, this), copyProps);\n    } catch (Exception e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed to initialize DataSource: \" + key.dataSource, e);\n    }\n    return dataSrc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5101aff20e65c9a285c274627ec956eb5409d253","5101aff20e65c9a285c274627ec956eb5409d253","8d22c66b0638c82521891318fc352042c5b86e03","3dd73fb6c61a8c05893f26d0a5c8405760e27ab1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e5167c2af9d2ee6ef81cf6cdd6406dec18df3d92","date":1219939485,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#getDataSourceInstance(DataConfig.Entity,String,Context).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#getDataSourceInstance(DataConfig.Entity).mjava","sourceNew":"  DataSource getDataSourceInstance(DataConfig.Entity key, String name, Context ctx ) {\n    Properties p = dataSourceProps.get(name);\n    if (p == null)\n      p = config.dataSources.get(name);\n    if (p == null)\n      p = dataSourceProps.get(null);// for default data source\n    if (p == null)\n      p = config.dataSources.get(null);\n    if (p == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"No dataSource :\" + name + \" available for entity :\"\n                      + key.name);\n    String impl = p.getProperty(TYPE);\n    DataSource dataSrc = null;\n    if (impl == null) {\n      dataSrc = new JdbcDataSource();\n    } else {\n      try {\n        dataSrc = (DataSource) DocBuilder.loadClass(impl).newInstance();\n      } catch (Exception e) {\n        throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n                \"Invalid type for data source: \" + impl, e);\n      }\n    }\n    try {\n      Properties copyProps = new Properties();\n      copyProps.putAll(p);\n      if(ctx == null)\n        ctx = new ContextImpl(key, null, dataSrc, 0,\n              Collections.EMPTY_MAP, new HashMap(), null, this);\n      dataSrc.init(ctx, copyProps);\n    } catch (Exception e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed to initialize DataSource: \" + key.dataSource, e);\n    }\n    return dataSrc;\n  }\n\n","sourceOld":"  DataSource getDataSourceInstance(DataConfig.Entity key) {\n    Properties p = dataSourceProps.get(key.dataSource);\n    if (p == null)\n      p = config.dataSources.get(key.dataSource);\n    if (p == null)\n      p = dataSourceProps.get(null);// for default data source\n    if (p == null)\n      p = config.dataSources.get(null);\n    if (p == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"No dataSource :\" + key.dataSource + \" available for entity :\"\n                      + key.name);\n    String impl = p.getProperty(TYPE);\n    DataSource dataSrc = null;\n    if (impl == null) {\n      dataSrc = new JdbcDataSource();\n    } else {\n      try {\n        dataSrc = (DataSource) DocBuilder.loadClass(impl).newInstance();\n      } catch (Exception e) {\n        throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n                \"Invalid type for data source: \" + impl, e);\n      }\n    }\n    try {\n      Properties copyProps = new Properties();\n      copyProps.putAll(p);\n      dataSrc.init(new ContextImpl(key, null, dataSrc, 0,\n              Collections.EMPTY_MAP, new HashMap(), null, this), copyProps);\n    } catch (Exception e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed to initialize DataSource: \" + key.dataSource, e);\n    }\n    return dataSrc;\n  }\n\n","bugFix":null,"bugIntro":["5101aff20e65c9a285c274627ec956eb5409d253","5101aff20e65c9a285c274627ec956eb5409d253","33c5df47ecbf734182bdfec8f59154a8dbecc2e3"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e5167c2af9d2ee6ef81cf6cdd6406dec18df3d92":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e5167c2af9d2ee6ef81cf6cdd6406dec18df3d92":[],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["e5167c2af9d2ee6ef81cf6cdd6406dec18df3d92"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e5167c2af9d2ee6ef81cf6cdd6406dec18df3d92","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}