{"path":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(AtomicReaderContext,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(AtomicReaderContext,int).mjava","pathOld":"modules/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(AtomicReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext reader, int doc) throws IOException {\n      // TODO\n      throw new UnsupportedOperationException(getClass().getName() +\n                                              \" cannot explain match on parent document\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(AtomicReaderContext reader, int doc) throws IOException {\n      // TODO\n      throw new UnsupportedOperationException(getClass().getName() +\n                                              \" cannot explain match on parent document\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b538dc75c275415cfba029900b48590b36b3b68","date":1339713606,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(AtomicReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(AtomicReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context, true, false, context.reader().getLiveDocs());\n      if (scorer != null) {\n        if (scorer.advance(doc) == doc) {\n          return scorer.explain(context.docBase);\n        }\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(AtomicReaderContext reader, int doc) throws IOException {\n      // TODO\n      throw new UnsupportedOperationException(getClass().getName() +\n                                              \" cannot explain match on parent document\");\n    }\n\n","bugFix":null,"bugIntro":["ab5548b8f3ccb00ab6a8702dfc85a949d2a05a11"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab5548b8f3ccb00ab6a8702dfc85a949d2a05a11","date":1367321736,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(AtomicReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(AtomicReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context, true, false, context.reader().getLiveDocs());\n      if (scorer != null && scorer.advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context, true, false, context.reader().getLiveDocs());\n      if (scorer != null) {\n        if (scorer.advance(doc) == doc) {\n          return scorer.explain(context.docBase);\n        }\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","bugFix":["6b538dc75c275415cfba029900b48590b36b3b68"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e18c86f811939bfa8cd24046c96ed026f2e9b34","date":1393893071,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(AtomicReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(AtomicReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context, context.reader().getLiveDocs());\n      if (scorer != null && scorer.advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context, true, false, context.reader().getLiveDocs());\n      if (scorer != null && scorer.advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acf00221f44c5f08ccea014f2492b53af15ecd66","date":1394568293,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(AtomicReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(AtomicReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context, context.reader().getLiveDocs());\n      if (scorer != null && scorer.advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context, true, false, context.reader().getLiveDocs());\n      if (scorer != null && scorer.advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(AtomicReaderContext,int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context, context.reader().getLiveDocs());\n      if (scorer != null && scorer.advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["ab5548b8f3ccb00ab6a8702dfc85a949d2a05a11"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab5548b8f3ccb00ab6a8702dfc85a949d2a05a11":["6b538dc75c275415cfba029900b48590b36b3b68"],"6b538dc75c275415cfba029900b48590b36b3b68":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["ab5548b8f3ccb00ab6a8702dfc85a949d2a05a11","2e18c86f811939bfa8cd24046c96ed026f2e9b34"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["6b538dc75c275415cfba029900b48590b36b3b68"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ab5548b8f3ccb00ab6a8702dfc85a949d2a05a11":["2e18c86f811939bfa8cd24046c96ed026f2e9b34","acf00221f44c5f08ccea014f2492b53af15ecd66"],"6b538dc75c275415cfba029900b48590b36b3b68":["ab5548b8f3ccb00ab6a8702dfc85a949d2a05a11"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}