{"path":"lucene/contrib/queries/src/java/org/apache/lucene/search/BoostingQuery#equals(Object).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/BoostingQuery#equals(Object).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/BoostingQuery#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      BoostingQuery other = (BoostingQuery) obj;\n      if (Float.floatToIntBits(boost) != Float.floatToIntBits(other.boost))\n        return false;\n      if (context == null) {\n        if (other.context != null)\n          return false;\n      } else if (!context.equals(other.context))\n        return false;\n      if (match == null) {\n        if (other.match != null)\n          return false;\n      } else if (!match.equals(other.match))\n        return false;\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      BoostingQuery other = (BoostingQuery) obj;\n      if (Float.floatToIntBits(boost) != Float.floatToIntBits(other.boost))\n        return false;\n      if (context == null) {\n        if (other.context != null)\n          return false;\n      } else if (!context.equals(other.context))\n        return false;\n      if (match == null) {\n        if (other.match != null)\n          return false;\n      } else if (!match.equals(other.match))\n        return false;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e141595402370bee958745de8b1c9de1fa182581","date":1310547892,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/BoostingQuery#equals(Object).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/BoostingQuery#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj) {\n        return true;\n      }\n      if (obj == null) {\n        return false;\n      }\n      if (getClass() != obj.getClass()) {\n        return false;\n      }\n\n      BoostingQuery other = (BoostingQuery) obj;\n      if (Float.floatToIntBits(boost) != Float.floatToIntBits(other.boost)) {\n        return false;\n      }\n      \n      if (context == null) {\n        if (other.context != null) {\n          return false;\n        }\n      } else if (!context.equals(other.context)) {\n        return false;\n      }\n      \n      if (match == null) {\n        if (other.match != null) {\n          return false;\n        }\n      } else if (!match.equals(other.match)) {\n        return false;\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      BoostingQuery other = (BoostingQuery) obj;\n      if (Float.floatToIntBits(boost) != Float.floatToIntBits(other.boost))\n        return false;\n      if (context == null) {\n        if (other.context != null)\n          return false;\n      } else if (!context.equals(other.context))\n        return false;\n      if (match == null) {\n        if (other.match != null)\n          return false;\n      } else if (!match.equals(other.match))\n        return false;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f9f2355d68aab1348539f7a1603279405e566a4","date":1313634992,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/BoostingQuery#equals(Object).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/BoostingQuery#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj) {\n        return true;\n      }\n      if (obj == null) {\n        return false;\n      }\n      if (getClass() != obj.getClass()) {\n        return false;\n      }\n\n      BoostingQuery other = (BoostingQuery) obj;\n      if (Float.floatToIntBits(boost) != Float.floatToIntBits(other.boost)) {\n        return false;\n      }\n      \n      if (context == null) {\n        if (other.context != null) {\n          return false;\n        }\n      } else if (!context.equals(other.context)) {\n        return false;\n      }\n      \n      if (match == null) {\n        if (other.match != null) {\n          return false;\n        }\n      } else if (!match.equals(other.match)) {\n        return false;\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj) {\n        return true;\n      }\n      if (obj == null) {\n        return false;\n      }\n      if (getClass() != obj.getClass()) {\n        return false;\n      }\n\n      BoostingQuery other = (BoostingQuery) obj;\n      if (Float.floatToIntBits(boost) != Float.floatToIntBits(other.boost)) {\n        return false;\n      }\n      \n      if (context == null) {\n        if (other.context != null) {\n          return false;\n        }\n      } else if (!context.equals(other.context)) {\n        return false;\n      }\n      \n      if (match == null) {\n        if (other.match != null) {\n          return false;\n        }\n      } else if (!match.equals(other.match)) {\n        return false;\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e141595402370bee958745de8b1c9de1fa182581":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1f9f2355d68aab1348539f7a1603279405e566a4"],"1f9f2355d68aab1348539f7a1603279405e566a4":["e141595402370bee958745de8b1c9de1fa182581"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e141595402370bee958745de8b1c9de1fa182581":["1f9f2355d68aab1348539f7a1603279405e566a4"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e141595402370bee958745de8b1c9de1fa182581"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"1f9f2355d68aab1348539f7a1603279405e566a4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}