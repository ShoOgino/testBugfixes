{"path":"backwards/src/java/org/apache/lucene/analysis/TokenStream#reset().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/analysis/TokenStream#reset().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Resets this stream to the beginning. This is an optional operation, so\n   * subclasses may or may not implement this method. {@link #reset()} is not needed for\n   * the standard indexing process. However, if the tokens of a\n   * <code>TokenStream</code> are intended to be consumed more than once, it is\n   * necessary to implement {@link #reset()}. Note that if your TokenStream\n   * caches tokens and feeds them back again after a reset, it is imperative\n   * that you clone the tokens when you store them away (on the first pass) as\n   * well as when you return them (on future passes after {@link #reset()}).\n   */\n  public void reset() throws IOException {}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/analysis/TokenStream#reset().mjava","pathOld":"backwards/src/java/org/apache/lucene/analysis/TokenStream#reset().mjava","sourceNew":"  /**\n   * Resets this stream to the beginning. This is an optional operation, so\n   * subclasses may or may not implement this method. {@link #reset()} is not needed for\n   * the standard indexing process. However, if the tokens of a\n   * <code>TokenStream</code> are intended to be consumed more than once, it is\n   * necessary to implement {@link #reset()}. Note that if your TokenStream\n   * caches tokens and feeds them back again after a reset, it is imperative\n   * that you clone the tokens when you store them away (on the first pass) as\n   * well as when you return them (on future passes after {@link #reset()}).\n   */\n  public void reset() throws IOException {}\n\n","sourceOld":"  /**\n   * Resets this stream to the beginning. This is an optional operation, so\n   * subclasses may or may not implement this method. {@link #reset()} is not needed for\n   * the standard indexing process. However, if the tokens of a\n   * <code>TokenStream</code> are intended to be consumed more than once, it is\n   * necessary to implement {@link #reset()}. Note that if your TokenStream\n   * caches tokens and feeds them back again after a reset, it is imperative\n   * that you clone the tokens when you store them away (on the first pass) as\n   * well as when you return them (on future passes after {@link #reset()}).\n   */\n  public void reset() throws IOException {}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":6,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/TokenStream#reset().mjava","pathOld":"backwards/src/java/org/apache/lucene/analysis/TokenStream#reset().mjava","sourceNew":"  /**\n   * Resets this stream to the beginning. This is an optional operation, so\n   * subclasses may or may not implement this method. {@link #reset()} is not needed for\n   * the standard indexing process. However, if the tokens of a\n   * <code>TokenStream</code> are intended to be consumed more than once, it is\n   * necessary to implement {@link #reset()}. Note that if your TokenStream\n   * caches tokens and feeds them back again after a reset, it is imperative\n   * that you clone the tokens when you store them away (on the first pass) as\n   * well as when you return them (on future passes after {@link #reset()}).\n   */\n  public void reset() throws IOException {}\n\n","sourceOld":"  /**\n   * Resets this stream to the beginning. This is an optional operation, so\n   * subclasses may or may not implement this method. {@link #reset()} is not needed for\n   * the standard indexing process. However, if the tokens of a\n   * <code>TokenStream</code> are intended to be consumed more than once, it is\n   * necessary to implement {@link #reset()}. Note that if your TokenStream\n   * caches tokens and feeds them back again after a reset, it is imperative\n   * that you clone the tokens when you store them away (on the first pass) as\n   * well as when you return them (on future passes after {@link #reset()}).\n   */\n  public void reset() throws IOException {}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}