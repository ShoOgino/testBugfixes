{"path":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSIndexOutput#close().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSIndexOutput#close().mjava","pathOld":"src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSIndexOutput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      // only close the file if it has not been closed yet\n      if (isOpen) {\n        boolean success = false;\n        try {\n          super.close();\n          success = true;\n        } finally {\n          isOpen = false;\n          if (!success) {\n            try {\n              file.close();\n            } catch (Throwable t) {\n              // Suppress so we don't mask original exception\n            }\n          } else\n            file.close();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      // only close the file if it has not been closed yet\n      if (isOpen) {\n        boolean success = false;\n        try {\n          super.close();\n          success = true;\n        } finally {\n          isOpen = false;\n          if (!success) {\n            try {\n              file.close();\n            } catch (Throwable t) {\n              // Suppress so we don't mask original exception\n            }\n          } else\n            file.close();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e4b4e97a5e8ab5b96cc56c561131d720c756756b","date":1269362401,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSIndexOutput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      // only close the file if it has not been closed yet\n      if (isOpen) {\n        boolean success = false;\n        try {\n          super.close();\n          success = true;\n        } finally {\n          isOpen = false;\n          if (!success) {\n            try {\n              file.close();\n              parent.onIndexOutputClosed(this);\n            } catch (Throwable t) {\n              // Suppress so we don't mask original exception\n            }\n          } else\n            file.close();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      // only close the file if it has not been closed yet\n      if (isOpen) {\n        boolean success = false;\n        try {\n          super.close();\n          success = true;\n        } finally {\n          isOpen = false;\n          if (!success) {\n            try {\n              file.close();\n            } catch (Throwable t) {\n              // Suppress so we don't mask original exception\n            }\n          } else\n            file.close();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e4b4e97a5e8ab5b96cc56c561131d720c756756b"],"e4b4e97a5e8ab5b96cc56c561131d720c756756b":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e4b4e97a5e8ab5b96cc56c561131d720c756756b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e4b4e97a5e8ab5b96cc56c561131d720c756756b"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}