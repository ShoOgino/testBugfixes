{"path":"lucene/facet/src/test/org/apache/lucene/facet/TestLongValueFacetCounts#testBasic().mjava","commits":[{"id":"4513731041236fcf659e5bfc43d8862e1721a310","date":1504022253,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestLongValueFacetCounts#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  public void testBasic() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    for (long l = 0; l < 100; l++) {\n      Document doc = new Document();\n      doc.add(new NumericDocValuesField(\"field\", l % 5));\n      w.addDocument(doc);\n    }\n\n    // Also add Long.MAX_VALUE\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"field\", Long.MAX_VALUE));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    w.close();\n\n    FacetsCollector fc = new FacetsCollector();\n    IndexSearcher s = newSearcher(r);\n    s.search(new MatchAllDocsQuery(), fc);\n\n    LongValueFacetCounts facets = new LongValueFacetCounts(\"field\", fc, false);\n\n    FacetResult result = facets.getAllChildrenSortByValue();\n    assertEquals(\"dim=field path=[] value=101 childCount=6\\n  0 (20)\\n  1 (20)\\n  2 (20)\\n  3 (20)\\n  \" +\n                 \"4 (20)\\n  9223372036854775807 (1)\\n\",\n                 result.toString());\n    r.close();\n    d.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6028626aa0f7c266ef725110257eed11e5b3d1d7","date":1504104056,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestLongValueFacetCounts#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  public void testBasic() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    for (long l = 0; l < 100; l++) {\n      Document doc = new Document();\n      doc.add(new NumericDocValuesField(\"field\", l % 5));\n      w.addDocument(doc);\n    }\n\n    // Also add Long.MAX_VALUE\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"field\", Long.MAX_VALUE));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    w.close();\n\n    FacetsCollector fc = new FacetsCollector();\n    IndexSearcher s = newSearcher(r);\n    s.search(new MatchAllDocsQuery(), fc);\n\n    LongValueFacetCounts facets = new LongValueFacetCounts(\"field\", fc, false);\n\n    FacetResult result = facets.getAllChildrenSortByValue();\n    assertEquals(\"dim=field path=[] value=101 childCount=6\\n  0 (20)\\n  1 (20)\\n  2 (20)\\n  3 (20)\\n  \" +\n                 \"4 (20)\\n  9223372036854775807 (1)\\n\",\n                 result.toString());\n    r.close();\n    d.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestLongValueFacetCounts#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  public void testBasic() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    for (long l = 0; l < 100; l++) {\n      Document doc = new Document();\n      doc.add(new NumericDocValuesField(\"field\", l % 5));\n      w.addDocument(doc);\n    }\n\n    // Also add Long.MAX_VALUE\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"field\", Long.MAX_VALUE));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    w.close();\n\n    FacetsCollector fc = new FacetsCollector();\n    IndexSearcher s = newSearcher(r);\n    s.search(new MatchAllDocsQuery(), fc);\n\n    LongValueFacetCounts facets = new LongValueFacetCounts(\"field\", fc, false);\n\n    FacetResult result = facets.getAllChildrenSortByValue();\n    assertEquals(\"dim=field path=[] value=101 childCount=6\\n  0 (20)\\n  1 (20)\\n  2 (20)\\n  3 (20)\\n  \" +\n                 \"4 (20)\\n  9223372036854775807 (1)\\n\",\n                 result.toString());\n    r.close();\n    d.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6028626aa0f7c266ef725110257eed11e5b3d1d7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4513731041236fcf659e5bfc43d8862e1721a310"],"4513731041236fcf659e5bfc43d8862e1721a310":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6028626aa0f7c266ef725110257eed11e5b3d1d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6028626aa0f7c266ef725110257eed11e5b3d1d7"]},"commit2Childs":{"6028626aa0f7c266ef725110257eed11e5b3d1d7":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4513731041236fcf659e5bfc43d8862e1721a310":["6028626aa0f7c266ef725110257eed11e5b3d1d7"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6028626aa0f7c266ef725110257eed11e5b3d1d7","4513731041236fcf659e5bfc43d8862e1721a310","3a7809d1d753b67f48b1a706e17034bf8b624ea3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}