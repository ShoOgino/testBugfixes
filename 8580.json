{"path":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#assertQueryEqualsAllowLeadingWildcard(String,Analyzer,String).mjava","commits":[{"id":"1d7d6c8c45bd7ba9d06a3f9c017bf7a78caae294","date":1249912446,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#assertQueryEqualsAllowLeadingWildcard(String,Analyzer,String).mjava","pathOld":"/dev/null","sourceNew":"  public void assertQueryEqualsAllowLeadingWildcard(String query, Analyzer a, String result)\n      throws Exception {\n    Query q = getQueryAllowLeadingWildcard(query, a);\n    String s = q.toString(\"field\");\n    if (!s.equals(result)) {\n      fail(\"Query /\" + query + \"/ yielded /\" + s + \"/, expecting /\" + result\n          + \"/\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#assertQueryEqualsAllowLeadingWildcard(String,Analyzer,String).mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#assertQueryEqualsAllowLeadingWildcard(String,Analyzer,String).mjava","sourceNew":"  public void assertQueryEqualsAllowLeadingWildcard(String query, Analyzer a, String result)\n      throws Exception {\n    Query q = getQueryAllowLeadingWildcard(query, a);\n    String s = q.toString(\"field\");\n    if (!s.equals(result)) {\n      fail(\"Query /\" + query + \"/ yielded /\" + s + \"/, expecting /\" + result\n          + \"/\");\n    }\n  }\n\n","sourceOld":"  public void assertQueryEqualsAllowLeadingWildcard(String query, Analyzer a, String result)\n      throws Exception {\n    Query q = getQueryAllowLeadingWildcard(query, a);\n    String s = q.toString(\"field\");\n    if (!s.equals(result)) {\n      fail(\"Query /\" + query + \"/ yielded /\" + s + \"/, expecting /\" + result\n          + \"/\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1d7d6c8c45bd7ba9d06a3f9c017bf7a78caae294":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1d7d6c8c45bd7ba9d06a3f9c017bf7a78caae294"]},"commit2Childs":{"1d7d6c8c45bd7ba9d06a3f9c017bf7a78caae294":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d7d6c8c45bd7ba9d06a3f9c017bf7a78caae294"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}