{"path":"lucene/backwards/src/java/org/apache/lucene/index/IndexWriter#mergeFinish(MergePolicy.OneMerge).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/IndexWriter#mergeFinish(MergePolicy.OneMerge).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/IndexWriter#mergeFinish(MergePolicy.OneMerge).mjava","sourceNew":"  /** Does fininishing for a merge, which is fast but holds\n   *  the synchronized lock on IndexWriter instance. */\n  final synchronized void mergeFinish(MergePolicy.OneMerge merge) throws IOException {\n    \n    // Optimize, addIndexes or finishMerges may be waiting\n    // on merges to finish.\n    notifyAll();\n\n    if (merge.increfDone)\n      decrefMergeSegments(merge);\n\n    // It's possible we are called twice, eg if there was an\n    // exception inside mergeInit\n    if (merge.registerDone) {\n      final SegmentInfos sourceSegments = merge.segments;\n      final int end = sourceSegments.size();\n      for(int i=0;i<end;i++)\n        mergingSegments.remove(sourceSegments.info(i));\n      mergingSegments.remove(merge.info);\n      merge.registerDone = false;\n    }\n\n    runningMerges.remove(merge);\n  }\n\n","sourceOld":"  /** Does fininishing for a merge, which is fast but holds\n   *  the synchronized lock on IndexWriter instance. */\n  final synchronized void mergeFinish(MergePolicy.OneMerge merge) throws IOException {\n    \n    // Optimize, addIndexes or finishMerges may be waiting\n    // on merges to finish.\n    notifyAll();\n\n    if (merge.increfDone)\n      decrefMergeSegments(merge);\n\n    // It's possible we are called twice, eg if there was an\n    // exception inside mergeInit\n    if (merge.registerDone) {\n      final SegmentInfos sourceSegments = merge.segments;\n      final int end = sourceSegments.size();\n      for(int i=0;i<end;i++)\n        mergingSegments.remove(sourceSegments.info(i));\n      mergingSegments.remove(merge.info);\n      merge.registerDone = false;\n    }\n\n    runningMerges.remove(merge);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/index/IndexWriter#mergeFinish(MergePolicy.OneMerge).mjava","sourceNew":null,"sourceOld":"  /** Does fininishing for a merge, which is fast but holds\n   *  the synchronized lock on IndexWriter instance. */\n  final synchronized void mergeFinish(MergePolicy.OneMerge merge) throws IOException {\n    \n    // Optimize, addIndexes or finishMerges may be waiting\n    // on merges to finish.\n    notifyAll();\n\n    if (merge.increfDone)\n      decrefMergeSegments(merge);\n\n    // It's possible we are called twice, eg if there was an\n    // exception inside mergeInit\n    if (merge.registerDone) {\n      final SegmentInfos sourceSegments = merge.segments;\n      final int end = sourceSegments.size();\n      for(int i=0;i<end;i++)\n        mergingSegments.remove(sourceSegments.info(i));\n      mergingSegments.remove(merge.info);\n      merge.registerDone = false;\n    }\n\n    runningMerges.remove(merge);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}