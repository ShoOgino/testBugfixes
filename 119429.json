{"path":"solr/core/src/java/org/apache/solr/schema/FieldType#getExistenceQuery(QParser,SchemaField).mjava","commits":[{"id":"5c7ba457c7f2595139254fab54362be336c5c355","date":1579734055,"type":0,"author":"Houston Putman","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/FieldType#getExistenceQuery(QParser,SchemaField).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a Query instance for doing existence searches for a field.\n   * If the field does not have docValues or norms, this method will call {@link #getSpecializedExistenceQuery}, which defaults to an unbounded rangeQuery.\n   * <p>\n   * This method should only be overriden whenever a fieldType does not support {@link org.apache.lucene.search.DocValuesFieldExistsQuery} or {@link org.apache.lucene.search.NormsFieldExistsQuery}.\n   * If a fieldType does not support an unbounded rangeQuery as an existenceQuery (such as <code>double</code> or <code>float</code> fields), {@link #getSpecializedExistenceQuery} should be overriden.\n   *\n   * @param parser The {@link org.apache.solr.search.QParser} calling the method\n   * @param field The {@link org.apache.solr.schema.SchemaField} of the field to search\n   * @return The {@link org.apache.lucene.search.Query} instance.\n   */\n  public Query getExistenceQuery(QParser parser, SchemaField field) {\n    if (field.hasDocValues()) {\n      return new DocValuesFieldExistsQuery(field.getName());\n    } else if (!field.omitNorms() && !isPointField()) { //TODO: Remove !isPointField() for SOLR-14199\n      return new NormsFieldExistsQuery(field.getName());\n    } else {\n      // Default to an unbounded range query\n      return getSpecializedExistenceQuery(parser, field);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5c7ba457c7f2595139254fab54362be336c5c355":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c7ba457c7f2595139254fab54362be336c5c355"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5c7ba457c7f2595139254fab54362be336c5c355"],"5c7ba457c7f2595139254fab54362be336c5c355":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}