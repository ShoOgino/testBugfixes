{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Bytes.BytesWriterBase#BytesWriterBase(Directory,String,String,int,Counter,IOContext,Type).mjava","commits":[{"id":"de5bbadeb3abac0f650298bff584bd4317bd75aa","date":1331116004,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Bytes.BytesWriterBase#BytesWriterBase(Directory,String,String,int,Counter,IOContext,Type).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Bytes.BytesWriterBase#BytesWriterBase(Directory,String,String,int,Counter,IOContext).mjava","sourceNew":"    protected BytesWriterBase(Directory dir, String id, String codecName,\n        int version, Counter bytesUsed, IOContext context, Type type) throws IOException {\n      super(bytesUsed, type);\n      this.id = id;\n      this.dir = dir;\n      this.codecName = codecName;\n      this.version = version;\n      this.context = context;\n    }\n\n","sourceOld":"    protected BytesWriterBase(Directory dir, String id, String codecName,\n        int version, Counter bytesUsed, IOContext context) throws IOException {\n      super(bytesUsed);\n      this.id = id;\n      this.dir = dir;\n      this.codecName = codecName;\n      this.version = version;\n      this.context = context;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":1,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Bytes.BytesWriterBase#BytesWriterBase(Directory,String,String,int,Counter,IOContext,Type).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Bytes.BytesWriterBase#BytesWriterBase(Directory,String,String,int,Counter,IOContext).mjava","sourceNew":"    protected BytesWriterBase(Directory dir, String id, String codecName,\n        int version, Counter bytesUsed, IOContext context, Type type) throws IOException {\n      super(bytesUsed, type);\n      this.id = id;\n      this.dir = dir;\n      this.codecName = codecName;\n      this.version = version;\n      this.context = context;\n    }\n\n","sourceOld":"    protected BytesWriterBase(Directory dir, String id, String codecName,\n        int version, Counter bytesUsed, IOContext context) throws IOException {\n      super(bytesUsed);\n      this.id = id;\n      this.dir = dir;\n      this.codecName = codecName;\n      this.version = version;\n      this.context = context;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32e43f282bea25b8cc26e4a842d98deafd617e9b","date":1337759516,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Bytes.BytesWriterBase#BytesWriterBase(Directory,String,String,String,int,Counter,IOContext,Type).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Bytes.BytesWriterBase#BytesWriterBase(Directory,String,String,int,Counter,IOContext,Type).mjava","sourceNew":"    protected BytesWriterBase(Directory dir, String id, String codecNameIdx, String codecNameDat,\n        int version, Counter bytesUsed, IOContext context, Type type) throws IOException {\n      super(bytesUsed, type);\n      this.id = id;\n      this.dir = dir;\n      this.codecNameIdx = codecNameIdx;\n      this.codecNameDat = codecNameDat;\n      this.version = version;\n      this.context = context;\n      assert codecNameDat != null || codecNameIdx != null: \"both codec names are null\";\n      assert (codecNameDat != null && !codecNameDat.equals(codecNameIdx)) \n      || (codecNameIdx != null && !codecNameIdx.equals(codecNameDat)):\n        \"index and data codec names must not be equal\";\n    }\n\n","sourceOld":"    protected BytesWriterBase(Directory dir, String id, String codecName,\n        int version, Counter bytesUsed, IOContext context, Type type) throws IOException {\n      super(bytesUsed, type);\n      this.id = id;\n      this.dir = dir;\n      this.codecName = codecName;\n      this.version = version;\n      this.context = context;\n    }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3599646b4d4c346cf74d334813488b8b337b5bf5","date":1337790261,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Bytes.BytesWriterBase#BytesWriterBase(Directory,String,String,String,int,Counter,IOContext,Type).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Bytes.BytesWriterBase#BytesWriterBase(Directory,String,String,int,Counter,IOContext,Type).mjava","sourceNew":"    protected BytesWriterBase(Directory dir, String id, String codecNameIdx, String codecNameDat,\n        int version, Counter bytesUsed, IOContext context, Type type) throws IOException {\n      super(bytesUsed, type);\n      this.id = id;\n      this.dir = dir;\n      this.codecNameIdx = codecNameIdx;\n      this.codecNameDat = codecNameDat;\n      this.version = version;\n      this.context = context;\n      assert codecNameDat != null || codecNameIdx != null: \"both codec names are null\";\n      assert (codecNameDat != null && !codecNameDat.equals(codecNameIdx)) \n      || (codecNameIdx != null && !codecNameIdx.equals(codecNameDat)):\n        \"index and data codec names must not be equal\";\n    }\n\n","sourceOld":"    protected BytesWriterBase(Directory dir, String id, String codecName,\n        int version, Counter bytesUsed, IOContext context, Type type) throws IOException {\n      super(bytesUsed, type);\n      this.id = id;\n      this.dir = dir;\n      this.codecName = codecName;\n      this.version = version;\n      this.context = context;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","de5bbadeb3abac0f650298bff584bd4317bd75aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3599646b4d4c346cf74d334813488b8b337b5bf5":["de5bbadeb3abac0f650298bff584bd4317bd75aa","32e43f282bea25b8cc26e4a842d98deafd617e9b"],"32e43f282bea25b8cc26e4a842d98deafd617e9b":["de5bbadeb3abac0f650298bff584bd4317bd75aa"],"de5bbadeb3abac0f650298bff584bd4317bd75aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["32e43f282bea25b8cc26e4a842d98deafd617e9b"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","de5bbadeb3abac0f650298bff584bd4317bd75aa"],"3599646b4d4c346cf74d334813488b8b337b5bf5":[],"de5bbadeb3abac0f650298bff584bd4317bd75aa":["38e3b736c7ca086d61b7dbb841c905ee115490da","3599646b4d4c346cf74d334813488b8b337b5bf5","32e43f282bea25b8cc26e4a842d98deafd617e9b"],"32e43f282bea25b8cc26e4a842d98deafd617e9b":["3599646b4d4c346cf74d334813488b8b337b5bf5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","3599646b4d4c346cf74d334813488b8b337b5bf5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}