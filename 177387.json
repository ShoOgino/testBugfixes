{"path":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery#getSlop().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery#getSlop().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/PhraseQuery#getSlop().mjava","sourceNew":"  /** Returns the slop.  See setSlop(). */\n  public int getSlop() { return slop; }\n\n","sourceOld":"  /** Returns the slop.  See setSlop(). */\n  public int getSlop() { return slop; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9e1499c5d26c936238506df90a3c02c76707722","date":1434449920,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery#getSlop().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery#getSlop().mjava","sourceNew":"  /**\n   * Return the slop for this {@link PhraseQuery}.\n   *\n   * <p>The slop is an edit distance between respective positions of terms as\n   * defined in this {@link PhraseQuery} and the positions of terms in a\n   * document.\n   *\n   * <p>For instance, when searching for {@code \"quick fox\"}, it is expected that\n   * the difference between the positions of {@code fox} and {@code quick} is 1.\n   * So {@code \"a quick brown fox\"} would be at an edit distance of 1 since the\n   * difference of the positions of {@code fox} and {@code quick} is 2.\n   * Similarly, {@code \"the fox is quick\"} would be at an edit distance of 3\n   * since the difference of the positions of {@code fox} and {@code quick} is -2.\n   * The slop defines the maximum edit distance for a document to match.\n   *\n   * <p>More exact matches are scored higher than sloppier matches, thus search\n   * results are sorted by exactness.\n   */\n  public int getSlop() { return slop; }\n\n","sourceOld":"  /** Returns the slop.  See setSlop(). */\n  public int getSlop() { return slop; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9e1499c5d26c936238506df90a3c02c76707722":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e9e1499c5d26c936238506df90a3c02c76707722"]},"commit2Childs":{"e9e1499c5d26c936238506df90a3c02c76707722":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e9e1499c5d26c936238506df90a3c02c76707722"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}