{"path":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","commits":[{"id":"3e00f80591de714c6975f454e33e0fa5218b5902","date":1294514405,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher).mjava","sourceNew":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(IndexSearcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","pathOld":"/dev/null","sourceNew":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03cb5827cf46528aa8d9b3ef5eaeeccda861b1f4","date":1295478199,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","sourceNew":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","sourceNew":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9325c7ff9928fabe81c28553b41fc7aa57dfab","date":1295896411,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","sourceNew":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarityProvider = searcher.getSimilarityProvider();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","sourceNew":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarityProvider = searcher.getSimilarityProvider();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","pathOld":"/dev/null","sourceNew":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarityProvider = searcher.getSimilarityProvider();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee1513e4ee2237693ff50a460d78dff5246c3d34","date":1311330418,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","sourceNew":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarityProvider = searcher.getSimilarityProvider();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      boolean termConjunction = clauses.isEmpty() || minNrShouldMatch != 0 ? false : true;\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        Weight w = c.getQuery().createWeight(searcher);\n        if (!(c.isRequired() && (w instanceof TermWeight))) {\n          termConjunction = false;\n        }\n        weights.add(w);\n        if (!c.isProhibited()) maxCoord++;\n      }\n      this.termConjunction = termConjunction;\n    }\n\n","sourceOld":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarityProvider = searcher.getSimilarityProvider();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","bugFix":null,"bugIntro":["7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b","date":1328532481,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","sourceNew":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      boolean termConjunction = clauses.isEmpty() || minNrShouldMatch != 0 ? false : true;\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        Weight w = c.getQuery().createWeight(searcher);\n        if (!(c.isRequired() && (w instanceof TermWeight))) {\n          termConjunction = false;\n        }\n        weights.add(w);\n        if (!c.isProhibited()) maxCoord++;\n      }\n      this.termConjunction = termConjunction;\n    }\n\n","sourceOld":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarityProvider = searcher.getSimilarityProvider();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      boolean termConjunction = clauses.isEmpty() || minNrShouldMatch != 0 ? false : true;\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        Weight w = c.getQuery().createWeight(searcher);\n        if (!(c.isRequired() && (w instanceof TermWeight))) {\n          termConjunction = false;\n        }\n        weights.add(w);\n        if (!c.isProhibited()) maxCoord++;\n      }\n      this.termConjunction = termConjunction;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","sourceNew":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      boolean termConjunction = clauses.isEmpty() || minNrShouldMatch != 0 ? false : true;\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        Weight w = c.getQuery().createWeight(searcher);\n        if (!(c.isRequired() && (w instanceof TermWeight))) {\n          termConjunction = false;\n        }\n        weights.add(w);\n        if (!c.isProhibited()) maxCoord++;\n      }\n      this.termConjunction = termConjunction;\n    }\n\n","sourceOld":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      boolean termConjunction = clauses.isEmpty() || minNrShouldMatch != 0 ? false : true;\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        Weight w = c.getQuery().createWeight(searcher);\n        if (!(c.isRequired() && (w instanceof TermWeight))) {\n          termConjunction = false;\n        }\n        weights.add(w);\n        if (!c.isProhibited()) maxCoord++;\n      }\n      this.termConjunction = termConjunction;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["03cb5827cf46528aa8d9b3ef5eaeeccda861b1f4"],"3e00f80591de714c6975f454e33e0fa5218b5902":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"03cb5827cf46528aa8d9b3ef5eaeeccda861b1f4":["3e00f80591de714c6975f454e33e0fa5218b5902"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["ee1513e4ee2237693ff50a460d78dff5246c3d34"],"ee1513e4ee2237693ff50a460d78dff5246c3d34":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3e00f80591de714c6975f454e33e0fa5218b5902"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["868da859b43505d9d2a023bfeae6dd0c795f5295","03cb5827cf46528aa8d9b3ef5eaeeccda861b1f4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["e79a6d080bdd5b2a8f56342cf571b5476de04180","fd9325c7ff9928fabe81c28553b41fc7aa57dfab"]},"commit2Childs":{"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["29ef99d61cda9641b6250bf9567329a6e65f901d","ee1513e4ee2237693ff50a460d78dff5246c3d34","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"3e00f80591de714c6975f454e33e0fa5218b5902":["03cb5827cf46528aa8d9b3ef5eaeeccda861b1f4","868da859b43505d9d2a023bfeae6dd0c795f5295"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"03cb5827cf46528aa8d9b3ef5eaeeccda861b1f4":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e00f80591de714c6975f454e33e0fa5218b5902","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"ee1513e4ee2237693ff50a460d78dff5246c3d34":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}