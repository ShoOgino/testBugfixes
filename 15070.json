{"path":"contrib/misc/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","commits":[{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, analyzer, MaxFieldLength.UNLIMITED);\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, analyzer, MaxFieldLength.UNLIMITED);\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, analyzer, MaxFieldLength.UNLIMITED);\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, analyzer, MaxFieldLength.UNLIMITED);\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, analyzer, MaxFieldLength.UNLIMITED);\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, analyzer, MaxFieldLength.UNLIMITED);\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, analyzer, MaxFieldLength.UNLIMITED);\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, analyzer, MaxFieldLength.UNLIMITED);\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, analyzer, MaxFieldLength.UNLIMITED);\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, analyzer, MaxFieldLength.UNLIMITED);\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, analyzer, MaxFieldLength.UNLIMITED);\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["4256bc1b3c94786287ccdfc751230374521843cf"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"4256bc1b3c94786287ccdfc751230374521843cf":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["4256bc1b3c94786287ccdfc751230374521843cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"4256bc1b3c94786287ccdfc751230374521843cf":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}