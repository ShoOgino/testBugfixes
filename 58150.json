{"path":"solr/core/src/java/org/apache/solr/core/SolrXMLSerializer#persistFile(File,SolrXMLDef).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXMLSerializer#persistFile(File,SolrXMLDef).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrXMLSerializer#persistFile(File,SolrXMLDef).mjava","sourceNew":"  void persistFile(File file, SolrXMLDef solrXMLDef) {\n    log.info(\"Persisting cores config to \" + file);\n    \n    File tmpFile = null;\n    try {\n      // write in temp first\n      tmpFile = File.createTempFile(\"solr\", \".xml\", file.getParentFile());\n      \n      java.io.FileOutputStream out = new java.io.FileOutputStream(tmpFile);\n      Writer writer = new BufferedWriter(new OutputStreamWriter(out, \"UTF-8\"));\n      try {\n        persist(writer, solrXMLDef);\n      } finally {\n        writer.close();\n        out.close();\n      }\n      // rename over origin or copy if this fails\n      if (tmpFile != null) {\n        if (tmpFile.renameTo(file)) tmpFile = null;\n        else fileCopy(tmpFile, file);\n      }\n    } catch (java.io.FileNotFoundException xnf) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xnf);\n    } catch (java.io.IOException xio) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xio);\n    } finally {\n      if (tmpFile != null) {\n        if (!tmpFile.delete()) tmpFile.deleteOnExit();\n      }\n    }\n  }\n\n","sourceOld":"  void persistFile(File file, SolrXMLDef solrXMLDef) {\n    log.info(\"Persisting cores config to \" + file);\n    \n    File tmpFile = null;\n    try {\n      // write in temp first\n      tmpFile = File.createTempFile(\"solr\", \".xml\", file.getParentFile());\n      \n      java.io.FileOutputStream out = new java.io.FileOutputStream(tmpFile);\n      Writer writer = new BufferedWriter(new OutputStreamWriter(out, \"UTF-8\"));\n      try {\n        persist(writer, solrXMLDef);\n      } finally {\n        writer.close();\n        out.close();\n      }\n      // rename over origin or copy if this fails\n      if (tmpFile != null) {\n        if (tmpFile.renameTo(file)) tmpFile = null;\n        else fileCopy(tmpFile, file);\n      }\n    } catch (java.io.FileNotFoundException xnf) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xnf);\n    } catch (java.io.IOException xio) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xio);\n    } finally {\n      if (tmpFile != null) {\n        if (!tmpFile.delete()) tmpFile.deleteOnExit();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXMLSerializer#persistFile(File,SolrXMLDef).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrXMLSerializer#persistFile(File,SolrXMLDef).mjava","sourceNew":"  void persistFile(File file, SolrXMLDef solrXMLDef) {\n    log.info(\"Persisting cores config to \" + file);\n    \n    File tmpFile = null;\n    try {\n      // write in temp first\n      tmpFile = File.createTempFile(\"solr\", \".xml\", file.getParentFile());\n      \n      java.io.FileOutputStream out = new java.io.FileOutputStream(tmpFile);\n      Writer writer = new BufferedWriter(new OutputStreamWriter(out, \"UTF-8\"));\n      try {\n        persist(writer, solrXMLDef);\n      } finally {\n        writer.close();\n        out.close();\n      }\n      // rename over origin or copy if this fails\n      if (tmpFile != null) {\n        if (tmpFile.renameTo(file)) tmpFile = null;\n        else fileCopy(tmpFile, file);\n      }\n    } catch (java.io.FileNotFoundException xnf) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xnf);\n    } catch (java.io.IOException xio) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xio);\n    } finally {\n      if (tmpFile != null) {\n        if (!tmpFile.delete()) tmpFile.deleteOnExit();\n      }\n    }\n  }\n\n","sourceOld":"  void persistFile(File file, SolrXMLDef solrXMLDef) {\n    log.info(\"Persisting cores config to \" + file);\n    \n    File tmpFile = null;\n    try {\n      // write in temp first\n      tmpFile = File.createTempFile(\"solr\", \".xml\", file.getParentFile());\n      \n      java.io.FileOutputStream out = new java.io.FileOutputStream(tmpFile);\n      Writer writer = new BufferedWriter(new OutputStreamWriter(out, \"UTF-8\"));\n      try {\n        persist(writer, solrXMLDef);\n      } finally {\n        writer.close();\n        out.close();\n      }\n      // rename over origin or copy if this fails\n      if (tmpFile != null) {\n        if (tmpFile.renameTo(file)) tmpFile = null;\n        else fileCopy(tmpFile, file);\n      }\n    } catch (java.io.FileNotFoundException xnf) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xnf);\n    } catch (java.io.IOException xio) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xio);\n    } finally {\n      if (tmpFile != null) {\n        if (!tmpFile.delete()) tmpFile.deleteOnExit();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXMLSerializer#persistFile(File,SolrXMLDef).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrXMLSerializer#persistFile(File,SolrXMLDef).mjava","sourceNew":"  void persistFile(File file, SolrXMLDef solrXMLDef) {\n    log.info(\"Persisting cores config to \" + file);\n    \n    File tmpFile = null;\n    try {\n      // write in temp first\n      tmpFile = File.createTempFile(\"solr\", \".xml\", file.getParentFile());\n      \n      java.io.FileOutputStream out = new java.io.FileOutputStream(tmpFile);\n      Writer writer = new BufferedWriter(new OutputStreamWriter(out, \"UTF-8\"));\n      try {\n        persist(writer, solrXMLDef);\n      } finally {\n        writer.close();\n        out.close();\n      }\n      // rename over origin or copy if this fails\n      if (tmpFile != null) {\n        if (tmpFile.renameTo(file)) tmpFile = null;\n        else fileCopy(tmpFile, file);\n      }\n    } catch (java.io.FileNotFoundException xnf) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xnf);\n    } catch (java.io.IOException xio) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xio);\n    } finally {\n      if (tmpFile != null) {\n        if (!tmpFile.delete()) tmpFile.deleteOnExit();\n      }\n    }\n  }\n\n","sourceOld":"  void persistFile(File file, SolrXMLDef solrXMLDef) {\n    log.info(\"Persisting cores config to \" + file);\n    \n    File tmpFile = null;\n    try {\n      // write in temp first\n      tmpFile = File.createTempFile(\"solr\", \".xml\", file.getParentFile());\n      \n      java.io.FileOutputStream out = new java.io.FileOutputStream(tmpFile);\n      Writer writer = new BufferedWriter(new OutputStreamWriter(out, \"UTF-8\"));\n      try {\n        persist(writer, solrXMLDef);\n      } finally {\n        writer.close();\n        out.close();\n      }\n      // rename over origin or copy if this fails\n      if (tmpFile != null) {\n        if (tmpFile.renameTo(file)) tmpFile = null;\n        else fileCopy(tmpFile, file);\n      }\n    } catch (java.io.FileNotFoundException xnf) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xnf);\n    } catch (java.io.IOException xio) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xio);\n    } finally {\n      if (tmpFile != null) {\n        if (!tmpFile.delete()) tmpFile.deleteOnExit();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXMLSerializer#persistFile(File,SolrXMLDef).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrXMLSerializer#persistFile(File,SolrXMLDef).mjava","sourceNew":"  void persistFile(File file, SolrXMLDef solrXMLDef) {\n    log.info(\"Persisting cores config to \" + file.getAbsolutePath());\n    \n    File tmpFile = null;\n    try {\n      // write in temp first\n      tmpFile = File.createTempFile(\"solr\", \".xml\", file.getParentFile());\n      \n      java.io.FileOutputStream out = new java.io.FileOutputStream(tmpFile);\n      Writer writer = new BufferedWriter(new OutputStreamWriter(out, \"UTF-8\"));\n      try {\n        persist(writer, solrXMLDef);\n      } finally {\n        writer.close();\n        out.close();\n      }\n      // rename over origin or copy if this fails\n      if (tmpFile != null) {\n        if (tmpFile.renameTo(file)) tmpFile = null;\n        else fileCopy(tmpFile, file);\n      }\n    } catch (java.io.FileNotFoundException xnf) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xnf);\n    } catch (java.io.IOException xio) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xio);\n    } finally {\n      if (tmpFile != null) {\n        if (!tmpFile.delete()) tmpFile.deleteOnExit();\n      }\n    }\n  }\n\n","sourceOld":"  void persistFile(File file, SolrXMLDef solrXMLDef) {\n    log.info(\"Persisting cores config to \" + file);\n    \n    File tmpFile = null;\n    try {\n      // write in temp first\n      tmpFile = File.createTempFile(\"solr\", \".xml\", file.getParentFile());\n      \n      java.io.FileOutputStream out = new java.io.FileOutputStream(tmpFile);\n      Writer writer = new BufferedWriter(new OutputStreamWriter(out, \"UTF-8\"));\n      try {\n        persist(writer, solrXMLDef);\n      } finally {\n        writer.close();\n        out.close();\n      }\n      // rename over origin or copy if this fails\n      if (tmpFile != null) {\n        if (tmpFile.renameTo(file)) tmpFile = null;\n        else fileCopy(tmpFile, file);\n      }\n    } catch (java.io.FileNotFoundException xnf) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xnf);\n    } catch (java.io.IOException xio) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xio);\n    } finally {\n      if (tmpFile != null) {\n        if (!tmpFile.delete()) tmpFile.deleteOnExit();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXMLSerializer#persistFile(File,SolrXMLDef).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrXMLSerializer#persistFile(File,SolrXMLDef).mjava","sourceNew":"  void persistFile(File file, SolrXMLDef solrXMLDef) {\n    log.info(\"Persisting cores config to \" + file.getAbsolutePath());\n    \n    File tmpFile = null;\n    try {\n      // write in temp first\n      tmpFile = File.createTempFile(\"solr\", \".xml\", file.getParentFile());\n      \n      java.io.FileOutputStream out = new java.io.FileOutputStream(tmpFile);\n      Writer writer = new BufferedWriter(new OutputStreamWriter(out, \"UTF-8\"));\n      try {\n        persist(writer, solrXMLDef);\n      } finally {\n        writer.close();\n        out.close();\n      }\n      // rename over origin or copy if this fails\n      if (tmpFile != null) {\n        if (tmpFile.renameTo(file)) tmpFile = null;\n        else fileCopy(tmpFile, file);\n      }\n    } catch (java.io.FileNotFoundException xnf) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xnf);\n    } catch (java.io.IOException xio) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xio);\n    } finally {\n      if (tmpFile != null) {\n        if (!tmpFile.delete()) tmpFile.deleteOnExit();\n      }\n    }\n  }\n\n","sourceOld":"  void persistFile(File file, SolrXMLDef solrXMLDef) {\n    log.info(\"Persisting cores config to \" + file);\n    \n    File tmpFile = null;\n    try {\n      // write in temp first\n      tmpFile = File.createTempFile(\"solr\", \".xml\", file.getParentFile());\n      \n      java.io.FileOutputStream out = new java.io.FileOutputStream(tmpFile);\n      Writer writer = new BufferedWriter(new OutputStreamWriter(out, \"UTF-8\"));\n      try {\n        persist(writer, solrXMLDef);\n      } finally {\n        writer.close();\n        out.close();\n      }\n      // rename over origin or copy if this fails\n      if (tmpFile != null) {\n        if (tmpFile.renameTo(file)) tmpFile = null;\n        else fileCopy(tmpFile, file);\n      }\n    } catch (java.io.FileNotFoundException xnf) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xnf);\n    } catch (java.io.IOException xio) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xio);\n    } finally {\n      if (tmpFile != null) {\n        if (!tmpFile.delete()) tmpFile.deleteOnExit();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXMLSerializer#persistFile(File,SolrXMLDef).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrXMLSerializer#persistFile(File,SolrXMLDef).mjava","sourceNew":"  void persistFile(File file, SolrXMLDef solrXMLDef) {\n    log.info(\"Persisting cores config to \" + file.getAbsolutePath());\n    \n    File tmpFile = null;\n    try {\n      // write in temp first\n      tmpFile = File.createTempFile(\"solr\", \".xml\", file.getParentFile());\n      \n      java.io.FileOutputStream out = new java.io.FileOutputStream(tmpFile);\n      Writer writer = new BufferedWriter(new OutputStreamWriter(out, StandardCharsets.UTF_8));\n      try {\n        persist(writer, solrXMLDef);\n      } finally {\n        writer.close();\n        out.close();\n      }\n      // rename over origin or copy if this fails\n      if (tmpFile != null) {\n        if (tmpFile.renameTo(file)) tmpFile = null;\n        else fileCopy(tmpFile, file);\n      }\n    } catch (java.io.FileNotFoundException xnf) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xnf);\n    } catch (java.io.IOException xio) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xio);\n    } finally {\n      if (tmpFile != null) {\n        if (!tmpFile.delete()) tmpFile.deleteOnExit();\n      }\n    }\n  }\n\n","sourceOld":"  void persistFile(File file, SolrXMLDef solrXMLDef) {\n    log.info(\"Persisting cores config to \" + file.getAbsolutePath());\n    \n    File tmpFile = null;\n    try {\n      // write in temp first\n      tmpFile = File.createTempFile(\"solr\", \".xml\", file.getParentFile());\n      \n      java.io.FileOutputStream out = new java.io.FileOutputStream(tmpFile);\n      Writer writer = new BufferedWriter(new OutputStreamWriter(out, \"UTF-8\"));\n      try {\n        persist(writer, solrXMLDef);\n      } finally {\n        writer.close();\n        out.close();\n      }\n      // rename over origin or copy if this fails\n      if (tmpFile != null) {\n        if (tmpFile.renameTo(file)) tmpFile = null;\n        else fileCopy(tmpFile, file);\n      }\n    } catch (java.io.FileNotFoundException xnf) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xnf);\n    } catch (java.io.IOException xio) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xio);\n    } finally {\n      if (tmpFile != null) {\n        if (!tmpFile.delete()) tmpFile.deleteOnExit();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXMLSerializer#persistFile(File,SolrXMLDef).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrXMLSerializer#persistFile(File,SolrXMLDef).mjava","sourceNew":"  void persistFile(File file, SolrXMLDef solrXMLDef) {\n    log.info(\"Persisting cores config to \" + file.getAbsolutePath());\n    \n    File tmpFile = null;\n    try {\n      // write in temp first\n      tmpFile = File.createTempFile(\"solr\", \".xml\", file.getParentFile());\n      \n      java.io.FileOutputStream out = new java.io.FileOutputStream(tmpFile);\n      Writer writer = new BufferedWriter(new OutputStreamWriter(out, StandardCharsets.UTF_8));\n      try {\n        persist(writer, solrXMLDef);\n      } finally {\n        writer.close();\n        out.close();\n      }\n      // rename over origin or copy if this fails\n      if (tmpFile != null) {\n        if (tmpFile.renameTo(file)) tmpFile = null;\n        else fileCopy(tmpFile, file);\n      }\n    } catch (java.io.FileNotFoundException xnf) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xnf);\n    } catch (java.io.IOException xio) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xio);\n    } finally {\n      if (tmpFile != null) {\n        if (!tmpFile.delete()) tmpFile.deleteOnExit();\n      }\n    }\n  }\n\n","sourceOld":"  void persistFile(File file, SolrXMLDef solrXMLDef) {\n    log.info(\"Persisting cores config to \" + file.getAbsolutePath());\n    \n    File tmpFile = null;\n    try {\n      // write in temp first\n      tmpFile = File.createTempFile(\"solr\", \".xml\", file.getParentFile());\n      \n      java.io.FileOutputStream out = new java.io.FileOutputStream(tmpFile);\n      Writer writer = new BufferedWriter(new OutputStreamWriter(out, \"UTF-8\"));\n      try {\n        persist(writer, solrXMLDef);\n      } finally {\n        writer.close();\n        out.close();\n      }\n      // rename over origin or copy if this fails\n      if (tmpFile != null) {\n        if (tmpFile.renameTo(file)) tmpFile = null;\n        else fileCopy(tmpFile, file);\n      }\n    } catch (java.io.FileNotFoundException xnf) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xnf);\n    } catch (java.io.IOException xio) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xio);\n    } finally {\n      if (tmpFile != null) {\n        if (!tmpFile.delete()) tmpFile.deleteOnExit();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"862bf0de4075dc8febeba1ba433bcf74c78d356e","date":1407456501,"type":4,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrXMLSerializer#persistFile(File,SolrXMLDef).mjava","sourceNew":null,"sourceOld":"  void persistFile(File file, SolrXMLDef solrXMLDef) {\n    log.info(\"Persisting cores config to \" + file.getAbsolutePath());\n    \n    File tmpFile = null;\n    try {\n      // write in temp first\n      tmpFile = File.createTempFile(\"solr\", \".xml\", file.getParentFile());\n      \n      java.io.FileOutputStream out = new java.io.FileOutputStream(tmpFile);\n      Writer writer = new BufferedWriter(new OutputStreamWriter(out, StandardCharsets.UTF_8));\n      try {\n        persist(writer, solrXMLDef);\n      } finally {\n        writer.close();\n        out.close();\n      }\n      // rename over origin or copy if this fails\n      if (tmpFile != null) {\n        if (tmpFile.renameTo(file)) tmpFile = null;\n        else fileCopy(tmpFile, file);\n      }\n    } catch (java.io.FileNotFoundException xnf) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xnf);\n    } catch (java.io.IOException xio) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xio);\n    } finally {\n      if (tmpFile != null) {\n        if (!tmpFile.delete()) tmpFile.deleteOnExit();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["7116474e2e390259937401cf928323e0cbc75e60","7d89d7e4e5101347833eea558851bf4209218619"],"7116474e2e390259937401cf928323e0cbc75e60":["c26f00b574427b55127e869b935845554afde1fa"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["c26f00b574427b55127e869b935845554afde1fa","7116474e2e390259937401cf928323e0cbc75e60"],"862bf0de4075dc8febeba1ba433bcf74c78d356e":["7d89d7e4e5101347833eea558851bf4209218619"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7d89d7e4e5101347833eea558851bf4209218619":["7116474e2e390259937401cf928323e0cbc75e60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["862bf0de4075dc8febeba1ba433bcf74c78d356e"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"7116474e2e390259937401cf928323e0cbc75e60":["5eb2511ababf862ea11e10761c70ee560cd84510","37a0f60745e53927c4c876cfe5b5a58170f0646c","7d89d7e4e5101347833eea558851bf4209218619"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"862bf0de4075dc8febeba1ba433bcf74c78d356e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7116474e2e390259937401cf928323e0cbc75e60","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","862bf0de4075dc8febeba1ba433bcf74c78d356e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","37a0f60745e53927c4c876cfe5b5a58170f0646c","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}