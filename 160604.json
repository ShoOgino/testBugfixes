{"path":"lucene/src/java/org/apache/lucene/index/codecs/docvalues/DocValuesProducerBase#load(FieldInfos,String,int,Directory,String).mjava","commits":[{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/docvalues/DocValuesProducerBase#load(FieldInfos,String,int,Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/docvalues/DocValuesProducerBase#load(FieldInfos,String,int,Directory).mjava","sourceNew":"  // Only opens files... doesn't actually load any values\n  protected void load(FieldInfos fieldInfos, String segment, int docCount,\n      Directory dir, String codecId) throws IOException {\n    final int numFields = fieldInfos.size();\n    for (int i = 0; i < numFields; i++) {\n      final FieldInfo fieldInfo = fieldInfos.fieldInfo(i);\n      final Values v = fieldInfo.getDocValues();\n      final String field = fieldInfo.name;\n      //TODO can we have a compound file  per segment and codec for docvalues?\n      final String id = IndexFileNames.segmentFileName(segment, codecId+\"-\"+fieldInfo.number, \"\");\n      if (v != null && dir.fileExists(id + \".\" +  Writer.DATA_EXTENSION)) {\n        docValues.put(field, loadDocValues(docCount, dir, id, v));\n      } \n    }\n  }\n\n","sourceOld":"  // Only opens files... doesn't actually load any values\n  protected void load(FieldInfos fieldInfos, String segment, int docCount,\n      Directory dir) throws IOException {\n    final int numFields = fieldInfos.size();\n    for (int i = 0; i < numFields; i++) {\n      final FieldInfo fieldInfo = fieldInfos.fieldInfo(i);\n      final Values v = fieldInfo.getDocValues();\n      final String field = fieldInfo.name;\n      final String id = IndexFileNames.segmentFileName(segment, Integer\n          .toString(fieldInfo.number),\"\");\n      if (v != null && dir.fileExists(id + \".\" +  Writer.DATA_EXTENSION)) {\n        docValues.put(field, loadDocValues(docCount, dir, id, v));\n      } \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d84736c4614acce6720851cbd2c823d7cd516e4","date":1290551630,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/docvalues/DocValuesProducerBase#load(FieldInfos,String,int,Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/docvalues/DocValuesProducerBase#load(FieldInfos,String,int,Directory,String).mjava","sourceNew":"  // Only opens files... doesn't actually load any values\n  protected void load(FieldInfos fieldInfos, String segment, int docCount,\n      Directory dir, String codecId) throws IOException {\n    final IntsRef valueFields = info.fieldIDs();\n    for (int i = valueFields.offset; i < valueFields.length; i++) {\n      final int fieldNumber = valueFields.ints[i];\n      final FieldInfo fieldInfo = fieldInfos.fieldInfo(fieldNumber);\n      assert fieldInfo.hasDocValues();\n      final String field = fieldInfo.name;\n      //TODO can we have a compound file  per segment and codec for docvalues?\n      final String id = info.docValuesId( segment, codecId, fieldNumber+\"\");\n      docValues.put(field, loadDocValues(docCount, dir, id, fieldInfo.getDocValues()));\n    }\n  }\n\n","sourceOld":"  // Only opens files... doesn't actually load any values\n  protected void load(FieldInfos fieldInfos, String segment, int docCount,\n      Directory dir, String codecId) throws IOException {\n    final int numFields = fieldInfos.size();\n    for (int i = 0; i < numFields; i++) {\n      final FieldInfo fieldInfo = fieldInfos.fieldInfo(i);\n      final Values v = fieldInfo.getDocValues();\n      final String field = fieldInfo.name;\n      //TODO can we have a compound file  per segment and codec for docvalues?\n      final String id = IndexFileNames.segmentFileName(segment, codecId+\"-\"+fieldInfo.number, \"\");\n      if (v != null && dir.fileExists(id + \".\" +  Writer.DATA_EXTENSION)) {\n        docValues.put(field, loadDocValues(docCount, dir, id, v));\n      } \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16dc5aef9648bb8fedce2ef55874f52e62c2766d","date":1293994163,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/docvalues/DocValuesProducerBase#load(FieldInfos,String,int,Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/docvalues/DocValuesProducerBase#load(FieldInfos,String,int,Directory,String).mjava","sourceNew":"  // Only opens files... doesn't actually load any values\n  protected void load(FieldInfos fieldInfos, String segment, int docCount,\n      Directory dir, String codecId) throws IOException {\n    final IntsRef valueFields = info.fieldIDs();\n    for (int i = valueFields.offset; i < valueFields.length; i++) {\n      final int fieldNumber = valueFields.ints[i];\n      final FieldInfo fieldInfo = fieldInfos.fieldInfo(fieldNumber);\n      assert fieldInfo.hasDocValues();\n      final String field = fieldInfo.name;\n      // TODO can we have a compound file per segment and codec for docvalues?\n      final String id = info.docValuesId(segment, codecId, fieldNumber + \"\");\n      docValues.put(field, loadDocValues(docCount, dir, id, fieldInfo\n          .getDocValues()));\n    }\n  }\n\n","sourceOld":"  // Only opens files... doesn't actually load any values\n  protected void load(FieldInfos fieldInfos, String segment, int docCount,\n      Directory dir, String codecId) throws IOException {\n    final IntsRef valueFields = info.fieldIDs();\n    for (int i = valueFields.offset; i < valueFields.length; i++) {\n      final int fieldNumber = valueFields.ints[i];\n      final FieldInfo fieldInfo = fieldInfos.fieldInfo(fieldNumber);\n      assert fieldInfo.hasDocValues();\n      final String field = fieldInfo.name;\n      //TODO can we have a compound file  per segment and codec for docvalues?\n      final String id = info.docValuesId( segment, codecId, fieldNumber+\"\");\n      docValues.put(field, loadDocValues(docCount, dir, id, fieldInfo.getDocValues()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/docvalues/DocValuesProducerBase#load(FieldInfos,String,int,Directory,String).mjava","sourceNew":null,"sourceOld":"  // Only opens files... doesn't actually load any values\n  protected void load(FieldInfos fieldInfos, String segment, int docCount,\n      Directory dir, String codecId) throws IOException {\n    final IntsRef valueFields = info.fieldIDs();\n    for (int i = valueFields.offset; i < valueFields.length; i++) {\n      final int fieldNumber = valueFields.ints[i];\n      final FieldInfo fieldInfo = fieldInfos.fieldInfo(fieldNumber);\n      assert fieldInfo.hasDocValues();\n      final String field = fieldInfo.name;\n      // TODO can we have a compound file per segment and codec for docvalues?\n      final String id = info.docValuesId(segment, codecId, fieldNumber + \"\");\n      docValues.put(field, loadDocValues(docCount, dir, id, fieldInfo\n          .getDocValues()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2d84736c4614acce6720851cbd2c823d7cd516e4":["9ab1f5591dc05f1f2b5407d809c9699f75554a32"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["16dc5aef9648bb8fedce2ef55874f52e62c2766d","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16dc5aef9648bb8fedce2ef55874f52e62c2766d":["2d84736c4614acce6720851cbd2c823d7cd516e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"2d84736c4614acce6720851cbd2c823d7cd516e4":["16dc5aef9648bb8fedce2ef55874f52e62c2766d"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["2d84736c4614acce6720851cbd2c823d7cd516e4"],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"16dc5aef9648bb8fedce2ef55874f52e62c2766d":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}