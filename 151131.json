{"path":"lucene/core/src/java/org/apache/lucene/index/TwoPhaseCommit#commit().mjava","commits":[{"id":"bcce0e518c0546269a896ca6124ba4313059185f","date":1340381078,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TwoPhaseCommit#commit().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/TwoPhaseCommit#commit().mjava","sourceNew":"  /**\n   * The second phase of a 2-phase commit. Implementations should ideally do\n   * very little work in this method (following {@link #prepareCommit()}, and\n   * after it returns, the caller can assume that the changes were successfully\n   * committed to the underlying storage.\n   */\n  public void commit() throws IOException;\n\n","sourceOld":"  /**\n   * The second phase of a 2-phase commit. Implementations should ideally do\n   * very little work in this method (following {@link #prepareCommit()}, and\n   * after it returns, the caller can assume that the changes were successfully\n   * committed to the underlying storage.\n   */\n  public void commit() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TwoPhaseCommit#commit().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/TwoPhaseCommit#commit().mjava","sourceNew":"  /**\n   * The second phase of a 2-phase commit. Implementations should ideally do\n   * very little work in this method (following {@link #prepareCommit()}, and\n   * after it returns, the caller can assume that the changes were successfully\n   * committed to the underlying storage.\n   */\n  public void commit() throws IOException;\n\n","sourceOld":"  /**\n   * The second phase of a 2-phase commit. Implementations should ideally do\n   * very little work in this method (following {@link #prepareCommit()}, and\n   * after it returns, the caller can assume that the changes were successfully\n   * committed to the underlying storage.\n   */\n  public void commit() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f492fe129985750df09c8dac738aecc503158bb3","date":1464099630,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TwoPhaseCommit#commit().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TwoPhaseCommit#commit().mjava","sourceNew":"  /**\n   * The second phase of a 2-phase commit. Implementations should ideally do\n   * very little work in this method (following {@link #prepareCommit()}, and\n   * after it returns, the caller can assume that the changes were successfully\n   * committed to the underlying storage.\n   */\n  public long commit() throws IOException;\n\n","sourceOld":"  /**\n   * The second phase of a 2-phase commit. Implementations should ideally do\n   * very little work in this method (following {@link #prepareCommit()}, and\n   * after it returns, the caller can assume that the changes were successfully\n   * committed to the underlying storage.\n   */\n  public void commit() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6483e4260c08168709c02238ae083a51519a28dd","date":1465117546,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TwoPhaseCommit#commit().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TwoPhaseCommit#commit().mjava","sourceNew":"  /**\n   * The second phase of a 2-phase commit. Implementations should ideally do\n   * very little work in this method (following {@link #prepareCommit()}, and\n   * after it returns, the caller can assume that the changes were successfully\n   * committed to the underlying storage.\n   */\n  public long commit() throws IOException;\n\n","sourceOld":"  /**\n   * The second phase of a 2-phase commit. Implementations should ideally do\n   * very little work in this method (following {@link #prepareCommit()}, and\n   * after it returns, the caller can assume that the changes were successfully\n   * committed to the underlying storage.\n   */\n  public void commit() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"191128ac5b85671b1671e2c857437694283b6ebf","date":1465297861,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TwoPhaseCommit#commit().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TwoPhaseCommit#commit().mjava","sourceNew":"  /**\n   * The second phase of a 2-phase commit. Implementations should ideally do\n   * very little work in this method (following {@link #prepareCommit()}, and\n   * after it returns, the caller can assume that the changes were successfully\n   * committed to the underlying storage.\n   */\n  public long commit() throws IOException;\n\n","sourceOld":"  /**\n   * The second phase of a 2-phase commit. Implementations should ideally do\n   * very little work in this method (following {@link #prepareCommit()}, and\n   * after it returns, the caller can assume that the changes were successfully\n   * committed to the underlying storage.\n   */\n  public void commit() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TwoPhaseCommit#commit().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TwoPhaseCommit#commit().mjava","sourceNew":"  /**\n   * The second phase of a 2-phase commit. Implementations should ideally do\n   * very little work in this method (following {@link #prepareCommit()}, and\n   * after it returns, the caller can assume that the changes were successfully\n   * committed to the underlying storage.\n   */\n  public long commit() throws IOException;\n\n","sourceOld":"  /**\n   * The second phase of a 2-phase commit. Implementations should ideally do\n   * very little work in this method (following {@link #prepareCommit()}, and\n   * after it returns, the caller can assume that the changes were successfully\n   * committed to the underlying storage.\n   */\n  public void commit() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bcce0e518c0546269a896ca6124ba4313059185f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bcce0e518c0546269a896ca6124ba4313059185f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f492fe129985750df09c8dac738aecc503158bb3":["bcce0e518c0546269a896ca6124ba4313059185f"],"6483e4260c08168709c02238ae083a51519a28dd":["bcce0e518c0546269a896ca6124ba4313059185f","f492fe129985750df09c8dac738aecc503158bb3"],"191128ac5b85671b1671e2c857437694283b6ebf":["bcce0e518c0546269a896ca6124ba4313059185f","6483e4260c08168709c02238ae083a51519a28dd"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["bcce0e518c0546269a896ca6124ba4313059185f","191128ac5b85671b1671e2c857437694283b6ebf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["191128ac5b85671b1671e2c857437694283b6ebf"]},"commit2Childs":{"bcce0e518c0546269a896ca6124ba4313059185f":["fe33227f6805edab2036cbb80645cc4e2d1fa424","f492fe129985750df09c8dac738aecc503158bb3","6483e4260c08168709c02238ae083a51519a28dd","191128ac5b85671b1671e2c857437694283b6ebf","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bcce0e518c0546269a896ca6124ba4313059185f","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"f492fe129985750df09c8dac738aecc503158bb3":["6483e4260c08168709c02238ae083a51519a28dd"],"6483e4260c08168709c02238ae083a51519a28dd":["191128ac5b85671b1671e2c857437694283b6ebf"],"191128ac5b85671b1671e2c857437694283b6ebf":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}