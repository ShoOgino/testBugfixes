{"path":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#sortsEqual(List[Bucket],String,List[Pair[String,String]]).mjava","commits":[{"id":"fa4a466195c69a11a113b33adc90f9069031e54e","date":1477605536,"type":1,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#sortsEqual(List[Bucket],String,List[Pair[String,String]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#sortsEqual(List[Bucket],String,List[String]).mjava","sourceNew":"  private boolean sortsEqual(List<Bucket> buckets, String direction, List<Pair<String, String>> orders) {\n    if(buckets.size() != orders.size()) {\n      return false;\n    }\n\n    for(int i=0; i< buckets.size(); i++) {\n      Bucket bucket = buckets.get(i);\n      Pair<String, String> order = orders.get(i);\n      if(!bucket.toString().equals(getSortField(order))) {\n        return false;\n      }\n\n\n      if(!getSortDirection(order).equalsIgnoreCase(direction)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":"  private boolean sortsEqual(List<Bucket> buckets, String direction, List<String> orderList) {\n    if(buckets.size() != orderList.size()) {\n      return false;\n    }\n\n    for(int i=0; i< buckets.size(); i++) {\n      Bucket bucket = buckets.get(i);\n      String orderItem = orderList.get(i);\n      if(!bucket.toString().equals(getSortField(orderItem))) {\n        return false;\n      }\n\n\n      if(!getSortDirection(orderItem).equalsIgnoreCase(direction)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"612da0a0a2d5f4409da55729b9833e799f905ac5","date":1479142562,"type":4,"author":"Kevin Risden","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#sortsEqual(List[Bucket],String,List[Pair[String,String]]).mjava","sourceNew":null,"sourceOld":"  private boolean sortsEqual(List<Bucket> buckets, String direction, List<Pair<String, String>> orders) {\n    if(buckets.size() != orders.size()) {\n      return false;\n    }\n\n    for(int i=0; i< buckets.size(); i++) {\n      Bucket bucket = buckets.get(i);\n      Pair<String, String> order = orders.get(i);\n      if(!bucket.toString().equals(getSortField(order))) {\n        return false;\n      }\n\n\n      if(!getSortDirection(order).equalsIgnoreCase(direction)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"612da0a0a2d5f4409da55729b9833e799f905ac5":["fa4a466195c69a11a113b33adc90f9069031e54e"],"fa4a466195c69a11a113b33adc90f9069031e54e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"612da0a0a2d5f4409da55729b9833e799f905ac5":[],"fa4a466195c69a11a113b33adc90f9069031e54e":["612da0a0a2d5f4409da55729b9833e799f905ac5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa4a466195c69a11a113b33adc90f9069031e54e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["612da0a0a2d5f4409da55729b9833e799f905ac5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}