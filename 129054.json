{"path":"lucene/core/src/java/org/apache/lucene/search/LegacyNumericRangeQuery#hashCode().mjava","commits":[{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LegacyNumericRangeQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/NumericRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash += precisionStep^0x64365465;\n    if (min != null) hash += min.hashCode()^0x14fa55fb;\n    if (max != null) hash += max.hashCode()^0x733fa5fe;\n    return hash +\n      (Boolean.valueOf(minInclusive).hashCode()^0x14fa55fb)+\n      (Boolean.valueOf(maxInclusive).hashCode()^0x733fa5fe);\n  }\n\n","sourceOld":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash += precisionStep^0x64365465;\n    if (min != null) hash += min.hashCode()^0x14fa55fb;\n    if (max != null) hash += max.hashCode()^0x733fa5fe;\n    return hash +\n      (Boolean.valueOf(minInclusive).hashCode()^0x14fa55fb)+\n      (Boolean.valueOf(maxInclusive).hashCode()^0x733fa5fe);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e6095f4816e81955ff9eb0d103188c24cb8081f","date":1456501631,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LegacyNumericRangeQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LegacyNumericRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + precisionStep;\n    hash = 31 * hash + Objects.hashCode(min);\n    hash = 31 * hash + Objects.hashCode(max);\n    hash = 31 * hash + Objects.hashCode(minInclusive);\n    hash = 31 * hash + Objects.hashCode(maxInclusive);\n    return hash;\n  }\n\n","sourceOld":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash += precisionStep^0x64365465;\n    if (min != null) hash += min.hashCode()^0x14fa55fb;\n    if (max != null) hash += max.hashCode()^0x733fa5fe;\n    return hash +\n      (Boolean.valueOf(minInclusive).hashCode()^0x14fa55fb)+\n      (Boolean.valueOf(maxInclusive).hashCode()^0x733fa5fe);\n  }\n\n","bugFix":["45ede1fd11bf564bb5c8c195d421782675d1e61c","955c32f886db6f6356c9fcdea6b1f1cb4effda24","53b6c192847de8643a5da505cc433cbf8476a175"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LegacyNumericRangeQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LegacyNumericRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + precisionStep;\n    hash = 31 * hash + Objects.hashCode(min);\n    hash = 31 * hash + Objects.hashCode(max);\n    hash = 31 * hash + Objects.hashCode(minInclusive);\n    hash = 31 * hash + Objects.hashCode(maxInclusive);\n    return hash;\n  }\n\n","sourceOld":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash += precisionStep^0x64365465;\n    if (min != null) hash += min.hashCode()^0x14fa55fb;\n    if (max != null) hash += max.hashCode()^0x733fa5fe;\n    return hash +\n      (Boolean.valueOf(minInclusive).hashCode()^0x14fa55fb)+\n      (Boolean.valueOf(maxInclusive).hashCode()^0x733fa5fe);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5af5ba0166322092193d4c29880b0f7670fc7ca0","date":1471440525,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/legacy/LegacyNumericRangeQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LegacyNumericRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + precisionStep;\n    hash = 31 * hash + Objects.hashCode(min);\n    hash = 31 * hash + Objects.hashCode(max);\n    hash = 31 * hash + Objects.hashCode(minInclusive);\n    hash = 31 * hash + Objects.hashCode(maxInclusive);\n    return hash;\n  }\n\n","sourceOld":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + precisionStep;\n    hash = 31 * hash + Objects.hashCode(min);\n    hash = 31 * hash + Objects.hashCode(max);\n    hash = 31 * hash + Objects.hashCode(minInclusive);\n    hash = 31 * hash + Objects.hashCode(maxInclusive);\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/legacy/LegacyNumericRangeQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LegacyNumericRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + precisionStep;\n    hash = 31 * hash + Objects.hashCode(min);\n    hash = 31 * hash + Objects.hashCode(max);\n    hash = 31 * hash + Objects.hashCode(minInclusive);\n    hash = 31 * hash + Objects.hashCode(maxInclusive);\n    return hash;\n  }\n\n","sourceOld":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + precisionStep;\n    hash = 31 * hash + Objects.hashCode(min);\n    hash = 31 * hash + Objects.hashCode(max);\n    hash = 31 * hash + Objects.hashCode(minInclusive);\n    hash = 31 * hash + Objects.hashCode(maxInclusive);\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/legacy/LegacyNumericRangeQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LegacyNumericRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + precisionStep;\n    hash = 31 * hash + Objects.hashCode(min);\n    hash = 31 * hash + Objects.hashCode(max);\n    hash = 31 * hash + Objects.hashCode(minInclusive);\n    hash = 31 * hash + Objects.hashCode(maxInclusive);\n    return hash;\n  }\n\n","sourceOld":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + precisionStep;\n    hash = 31 * hash + Objects.hashCode(min);\n    hash = 31 * hash + Objects.hashCode(max);\n    hash = 31 * hash + Objects.hashCode(minInclusive);\n    hash = 31 * hash + Objects.hashCode(maxInclusive);\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/legacy/LegacyNumericRangeQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LegacyNumericRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + precisionStep;\n    hash = 31 * hash + Objects.hashCode(min);\n    hash = 31 * hash + Objects.hashCode(max);\n    hash = 31 * hash + Objects.hashCode(minInclusive);\n    hash = 31 * hash + Objects.hashCode(maxInclusive);\n    return hash;\n  }\n\n","sourceOld":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + precisionStep;\n    hash = 31 * hash + Objects.hashCode(min);\n    hash = 31 * hash + Objects.hashCode(max);\n    hash = 31 * hash + Objects.hashCode(minInclusive);\n    hash = 31 * hash + Objects.hashCode(maxInclusive);\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["770342641f7b505eaa8dccdc666158bff2419109","5e6095f4816e81955ff9eb0d103188c24cb8081f"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["af2638813028b254a88b418ebeafb541afb49653","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"5e6095f4816e81955ff9eb0d103188c24cb8081f":["770342641f7b505eaa8dccdc666158bff2419109"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5af5ba0166322092193d4c29880b0f7670fc7ca0":["af2638813028b254a88b418ebeafb541afb49653"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["af2638813028b254a88b418ebeafb541afb49653","5af5ba0166322092193d4c29880b0f7670fc7ca0"],"770342641f7b505eaa8dccdc666158bff2419109":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["af2638813028b254a88b418ebeafb541afb49653","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["403d05f7f8d69b65659157eff1bc1d2717f04c66"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["403d05f7f8d69b65659157eff1bc1d2717f04c66","5af5ba0166322092193d4c29880b0f7670fc7ca0","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5e6095f4816e81955ff9eb0d103188c24cb8081f":["af2638813028b254a88b418ebeafb541afb49653"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["770342641f7b505eaa8dccdc666158bff2419109"],"5af5ba0166322092193d4c29880b0f7670fc7ca0":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"770342641f7b505eaa8dccdc666158bff2419109":["af2638813028b254a88b418ebeafb541afb49653","5e6095f4816e81955ff9eb0d103188c24cb8081f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}