{"path":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","pathOld":"solr/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","sourceNew":"  public static CacheConfig[] getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList)solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes==null || nodes.getLength()==0) return null;\n    CacheConfig[] configs = new CacheConfig[nodes.getLength()];\n    for (int i=0; i<nodes.getLength(); i++) {\n      configs[i] = getConfig(solrConfig, nodes.item(i));\n    }\n    return configs;\n  }\n\n","sourceOld":"  public static CacheConfig[] getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList)solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes==null || nodes.getLength()==0) return null;\n    CacheConfig[] configs = new CacheConfig[nodes.getLength()];\n    for (int i=0; i<nodes.getLength(); i++) {\n      configs[i] = getConfig(solrConfig, nodes.item(i));\n    }\n    return configs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","pathOld":"solr/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","sourceNew":"  public static CacheConfig[] getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList)solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes==null || nodes.getLength()==0) return null;\n    CacheConfig[] configs = new CacheConfig[nodes.getLength()];\n    for (int i=0; i<nodes.getLength(); i++) {\n      configs[i] = getConfig(solrConfig, nodes.item(i));\n    }\n    return configs;\n  }\n\n","sourceOld":"  public static CacheConfig[] getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList)solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes==null || nodes.getLength()==0) return null;\n    CacheConfig[] configs = new CacheConfig[nodes.getLength()];\n    for (int i=0; i<nodes.getLength(); i++) {\n      configs[i] = getConfig(solrConfig, nodes.item(i));\n    }\n    return configs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","pathOld":"solr/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","sourceNew":"  public static CacheConfig[] getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList)solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes==null || nodes.getLength()==0) return null;\n    CacheConfig[] configs = new CacheConfig[nodes.getLength()];\n    for (int i=0; i<nodes.getLength(); i++) {\n      configs[i] = getConfig(solrConfig, nodes.item(i));\n    }\n    return configs;\n  }\n\n","sourceOld":"  public static CacheConfig[] getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList)solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes==null || nodes.getLength()==0) return null;\n    CacheConfig[] configs = new CacheConfig[nodes.getLength()];\n    for (int i=0; i<nodes.getLength(); i++) {\n      configs[i] = getConfig(solrConfig, nodes.item(i));\n    }\n    return configs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"531fe719c7218235a679452eb3d137bfd8fc6af1","date":1415191086,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","sourceNew":"  public static CacheConfig[] getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList)solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes==null || nodes.getLength()==0) return null;\n    CacheConfig[] configs = new CacheConfig[nodes.getLength()];\n    for (int i=0; i<nodes.getLength(); i++) {\n      configs[i] = getConfig(solrConfig, nodes.item(i).getNodeName(), DOMUtil.toMap(nodes.item(i).getAttributes()), configPath);\n    }\n    return configs;\n  }\n\n","sourceOld":"  public static CacheConfig[] getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList)solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes==null || nodes.getLength()==0) return null;\n    CacheConfig[] configs = new CacheConfig[nodes.getLength()];\n    for (int i=0; i<nodes.getLength(); i++) {\n      configs[i] = getConfig(solrConfig, nodes.item(i));\n    }\n    return configs;\n  }\n\n","bugFix":null,"bugIntro":["15f9a498a407241cefcbd00ca7fc84d5e7fa573e","15f9a498a407241cefcbd00ca7fc84d5e7fa573e","15f9a498a407241cefcbd00ca7fc84d5e7fa573e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15f9a498a407241cefcbd00ca7fc84d5e7fa573e","date":1470840868,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","sourceNew":"  public static Map<String, CacheConfig> getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      CacheConfig config = getConfig(solrConfig, nodes.item(i).getNodeName(), DOMUtil.toMap(nodes.item(i).getAttributes()), configPath);\n      result.put(config.args.get(NAME), config);\n    }\n    return result;\n  }\n\n","sourceOld":"  public static CacheConfig[] getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList)solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes==null || nodes.getLength()==0) return null;\n    CacheConfig[] configs = new CacheConfig[nodes.getLength()];\n    for (int i=0; i<nodes.getLength(); i++) {\n      configs[i] = getConfig(solrConfig, nodes.item(i).getNodeName(), DOMUtil.toMap(nodes.item(i).getAttributes()), configPath);\n    }\n    return configs;\n  }\n\n","bugFix":["531fe719c7218235a679452eb3d137bfd8fc6af1","6d6338c87060be5f66757a94945975f3bbd377a9"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","sourceNew":"  public static Map<String, CacheConfig> getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      CacheConfig config = getConfig(solrConfig, nodes.item(i).getNodeName(), DOMUtil.toMap(nodes.item(i).getAttributes()), configPath);\n      result.put(config.args.get(NAME), config);\n    }\n    return result;\n  }\n\n","sourceOld":"  public static CacheConfig[] getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList)solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes==null || nodes.getLength()==0) return null;\n    CacheConfig[] configs = new CacheConfig[nodes.getLength()];\n    for (int i=0; i<nodes.getLength(); i++) {\n      configs[i] = getConfig(solrConfig, nodes.item(i).getNodeName(), DOMUtil.toMap(nodes.item(i).getAttributes()), configPath);\n    }\n    return configs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","sourceNew":"  public static Map<String, CacheConfig> getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      CacheConfig config = getConfig(solrConfig, nodes.item(i).getNodeName(), DOMUtil.toMap(nodes.item(i).getAttributes()), configPath);\n      result.put(config.args.get(NAME), config);\n    }\n    return result;\n  }\n\n","sourceOld":"  public static CacheConfig[] getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList)solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes==null || nodes.getLength()==0) return null;\n    CacheConfig[] configs = new CacheConfig[nodes.getLength()];\n    for (int i=0; i<nodes.getLength(); i++) {\n      configs[i] = getConfig(solrConfig, nodes.item(i).getNodeName(), DOMUtil.toMap(nodes.item(i).getAttributes()), configPath);\n    }\n    return configs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","sourceNew":"  public static Map<String, CacheConfig> getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      CacheConfig config = getConfig(solrConfig, nodes.item(i).getNodeName(), DOMUtil.toMap(nodes.item(i).getAttributes()), configPath);\n      result.put(config.args.get(NAME), config);\n    }\n    return result;\n  }\n\n","sourceOld":"  public static CacheConfig[] getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList)solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes==null || nodes.getLength()==0) return null;\n    CacheConfig[] configs = new CacheConfig[nodes.getLength()];\n    for (int i=0; i<nodes.getLength(); i++) {\n      configs[i] = getConfig(solrConfig, nodes.item(i).getNodeName(), DOMUtil.toMap(nodes.item(i).getAttributes()), configPath);\n    }\n    return configs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"053c4cbd30d228154839dc536ca5a15a5f0c48bf","date":1564559417,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getConfigs(SolrConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","sourceNew":"  public static Map<String, CacheConfig> getConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      Map<String, String> args = DOMUtil.toMap(nodes.item(i).getAttributes());\n      result.put(args.get(NAME), new CacheConfig(args));\n    }\n    return result;\n  }\n\n","sourceOld":"  public static Map<String, CacheConfig> getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      CacheConfig config = getConfig(solrConfig, nodes.item(i).getNodeName(), DOMUtil.toMap(nodes.item(i).getAttributes()), configPath);\n      result.put(config.args.get(NAME), config);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":5,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getConfigs(SolrConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","sourceNew":"  public static Map<String, CacheConfig> getConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      Map<String, String> args = DOMUtil.toMap(nodes.item(i).getAttributes());\n      result.put(args.get(NAME), new CacheConfig(args));\n    }\n    return result;\n  }\n\n","sourceOld":"  public static Map<String, CacheConfig> getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      CacheConfig config = getConfig(solrConfig, nodes.item(i).getNodeName(), DOMUtil.toMap(nodes.item(i).getAttributes()), configPath);\n      result.put(config.args.get(NAME), config);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":1,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CacheConfig#getConfigs(SolrConfig,String).mjava","sourceNew":"  public static Map<String, CacheConfig> getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      CacheConfig config = getConfig(solrConfig, nodes.item(i).getNodeName(), DOMUtil.toMap(nodes.item(i).getAttributes()), configPath);\n      result.put(config.args.get(NAME), config);\n    }\n    return result;\n  }\n\n","sourceOld":"  public static Map<String, CacheConfig> getConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      Map<String, String> args = DOMUtil.toMap(nodes.item(i).getAttributes());\n      result.put(args.get(NAME), new CacheConfig(args, configPath+\"/\"+args.get(NAME)));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":0,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","pathOld":"/dev/null","sourceNew":"  public static Map<String, CacheConfig> getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      CacheConfig config = getConfig(solrConfig, nodes.item(i).getNodeName(), DOMUtil.toMap(nodes.item(i).getAttributes()), configPath);\n      result.put(config.args.get(NAME), config);\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6590c5560508826c2fb637ba966521ef9b6b9f1","date":1585765748,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","sourceNew":"  public static Map<String, CacheConfig> getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      Node node = nodes.item(i);\n      if (\"true\".equals(DOMUtil.getAttrOrDefault(node, \"enabled\", \"true\"))) {\n        CacheConfig config = getConfig(solrConfig, node.getNodeName(),\n                                       DOMUtil.toMap(node.getAttributes()), configPath);\n        result.put(config.args.get(NAME), config);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  public static Map<String, CacheConfig> getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      CacheConfig config = getConfig(solrConfig, nodes.item(i).getNodeName(), DOMUtil.toMap(nodes.item(i).getAttributes()), configPath);\n      result.put(config.args.get(NAME), config);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"531fe719c7218235a679452eb3d137bfd8fc6af1":["c26f00b574427b55127e869b935845554afde1fa"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["531fe719c7218235a679452eb3d137bfd8fc6af1","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"053c4cbd30d228154839dc536ca5a15a5f0c48bf":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"b6590c5560508826c2fb637ba966521ef9b6b9f1":["c44cc06c26e456fe9c215072b79fce30babe3975"],"c44cc06c26e456fe9c215072b79fce30babe3975":["053c4cbd30d228154839dc536ca5a15a5f0c48bf"],"f8061ddd97f3352007d927dae445884a6f3d857b":["403d05f7f8d69b65659157eff1bc1d2717f04c66","053c4cbd30d228154839dc536ca5a15a5f0c48bf"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["531fe719c7218235a679452eb3d137bfd8fc6af1","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"15f9a498a407241cefcbd00ca7fc84d5e7fa573e":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["531fe719c7218235a679452eb3d137bfd8fc6af1","15f9a498a407241cefcbd00ca7fc84d5e7fa573e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b6590c5560508826c2fb637ba966521ef9b6b9f1"],"b0b597c65628ca9e73913a07e81691f8229bae35":["053c4cbd30d228154839dc536ca5a15a5f0c48bf","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"531fe719c7218235a679452eb3d137bfd8fc6af1":["403d05f7f8d69b65659157eff1bc1d2717f04c66","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","15f9a498a407241cefcbd00ca7fc84d5e7fa573e","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["053c4cbd30d228154839dc536ca5a15a5f0c48bf","f8061ddd97f3352007d927dae445884a6f3d857b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"053c4cbd30d228154839dc536ca5a15a5f0c48bf":["c44cc06c26e456fe9c215072b79fce30babe3975","f8061ddd97f3352007d927dae445884a6f3d857b","b0b597c65628ca9e73913a07e81691f8229bae35"],"c26f00b574427b55127e869b935845554afde1fa":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"b6590c5560508826c2fb637ba966521ef9b6b9f1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c44cc06c26e456fe9c215072b79fce30babe3975":["b6590c5560508826c2fb637ba966521ef9b6b9f1","b0b597c65628ca9e73913a07e81691f8229bae35"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"15f9a498a407241cefcbd00ca7fc84d5e7fa573e":["3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}