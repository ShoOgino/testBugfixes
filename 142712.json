{"path":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/ComposedQuery#makeLuceneSubQueriesField(String,BasicQueryFactory).mjava","commits":[{"id":"d04b321158481d3895702b3cbf6821a3083e6c15","date":1120530543,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/ComposedQuery#makeLuceneSubQueriesField(String,BasicQueryFactory).mjava","pathOld":"/dev/null","sourceNew":"  public List makeLuceneSubQueriesField(String fn, BasicQueryFactory qf) {\n    ArrayList luceneSubQueries = new ArrayList();\n    Iterator sqi = getSubQueriesIterator();\n    while (sqi.hasNext()) {\n      luceneSubQueries.add( ((SrndQuery) sqi.next()).makeLuceneQueryField(fn, qf));\n    }\n    return luceneSubQueries;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["cb278067c961537864615b4862771ebc54dae426"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7b6cdc70e097da94da79a655ed8f94477ff69f5","date":1220815360,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/ComposedQuery#makeLuceneSubQueriesField(String,BasicQueryFactory).mjava","pathOld":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/ComposedQuery#makeLuceneSubQueriesField(String,BasicQueryFactory).mjava","sourceNew":"  public List makeLuceneSubQueriesField(String fn, BasicQueryFactory qf) {\n    List luceneSubQueries = new ArrayList();\n    Iterator sqi = getSubQueriesIterator();\n    while (sqi.hasNext()) {\n      luceneSubQueries.add( ((SrndQuery) sqi.next()).makeLuceneQueryField(fn, qf));\n    }\n    return luceneSubQueries;\n  }\n\n","sourceOld":"  public List makeLuceneSubQueriesField(String fn, BasicQueryFactory qf) {\n    ArrayList luceneSubQueries = new ArrayList();\n    Iterator sqi = getSubQueriesIterator();\n    while (sqi.hasNext()) {\n      luceneSubQueries.add( ((SrndQuery) sqi.next()).makeLuceneQueryField(fn, qf));\n    }\n    return luceneSubQueries;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"60cdc0e643184821eb066795a8791cd82559f46e","date":1257941914,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/ComposedQuery#makeLuceneSubQueriesField(String,BasicQueryFactory).mjava","pathOld":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/ComposedQuery#makeLuceneSubQueriesField(String,BasicQueryFactory).mjava","sourceNew":"  public List<Query> makeLuceneSubQueriesField(String fn, BasicQueryFactory qf) {\n    List<Query> luceneSubQueries = new ArrayList<Query>();\n    Iterator sqi = getSubQueriesIterator();\n    while (sqi.hasNext()) {\n      luceneSubQueries.add( ((SrndQuery) sqi.next()).makeLuceneQueryField(fn, qf));\n    }\n    return luceneSubQueries;\n  }\n\n","sourceOld":"  public List makeLuceneSubQueriesField(String fn, BasicQueryFactory qf) {\n    List luceneSubQueries = new ArrayList();\n    Iterator sqi = getSubQueriesIterator();\n    while (sqi.hasNext()) {\n      luceneSubQueries.add( ((SrndQuery) sqi.next()).makeLuceneQueryField(fn, qf));\n    }\n    return luceneSubQueries;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/ComposedQuery#makeLuceneSubQueriesField(String,BasicQueryFactory).mjava","pathOld":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/ComposedQuery#makeLuceneSubQueriesField(String,BasicQueryFactory).mjava","sourceNew":"  public List<Query> makeLuceneSubQueriesField(String fn, BasicQueryFactory qf) {\n    List<Query> luceneSubQueries = new ArrayList<Query>();\n    Iterator sqi = getSubQueriesIterator();\n    while (sqi.hasNext()) {\n      luceneSubQueries.add( ((SrndQuery) sqi.next()).makeLuceneQueryField(fn, qf));\n    }\n    return luceneSubQueries;\n  }\n\n","sourceOld":"  public List<Query> makeLuceneSubQueriesField(String fn, BasicQueryFactory qf) {\n    List<Query> luceneSubQueries = new ArrayList<Query>();\n    Iterator sqi = getSubQueriesIterator();\n    while (sqi.hasNext()) {\n      luceneSubQueries.add( ((SrndQuery) sqi.next()).makeLuceneQueryField(fn, qf));\n    }\n    return luceneSubQueries;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"60cdc0e643184821eb066795a8791cd82559f46e":["c7b6cdc70e097da94da79a655ed8f94477ff69f5"],"d04b321158481d3895702b3cbf6821a3083e6c15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c7b6cdc70e097da94da79a655ed8f94477ff69f5":["d04b321158481d3895702b3cbf6821a3083e6c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["60cdc0e643184821eb066795a8791cd82559f46e"]},"commit2Childs":{"60cdc0e643184821eb066795a8791cd82559f46e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d04b321158481d3895702b3cbf6821a3083e6c15":["c7b6cdc70e097da94da79a655ed8f94477ff69f5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d04b321158481d3895702b3cbf6821a3083e6c15"],"c7b6cdc70e097da94da79a655ed8f94477ff69f5":["60cdc0e643184821eb066795a8791cd82559f46e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}