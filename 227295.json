{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ab99e8c71442b92c320e218141dee04a9b91ce8","date":1269203801,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8dc26bfa5ebbc55b5a04fbec545dfcec647b046b","date":1280297653,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = newDirectory(random);\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory(random);\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = newDirectory(random);\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory(random);\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e1cbd7e289dc1243c7a59e1a83d078163a147fe","date":1292268032,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","date":1292695408,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      lmp.setUseCompoundDocStore(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        lmp2.setUseCompoundDocStore(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(new Field(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(new Field(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(new Field(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(new Field(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c19f985e36a65cc969e8e564fe337a0d41512075","date":1296330536,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      lmp.setMergeFactor(2);\n      lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", TextField.TYPE_UNSTORED));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_UNSTORED; \n        doc.add(newField(\"content1\", contents, TextField.TYPE_UNSTORED));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", Field.Store.NO,\n                          Field.Index.ANALYZED));\n      } else {\n        Field.Store storeVal;\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, Field.Store.YES,\n                            Field.Index.ANALYZED));\n          storeVal = Field.Store.YES;\n        } else\n          storeVal = Field.Store.NO;\n        doc.add(newField(\"content1\", contents, storeVal,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content3\", \"\", Field.Store.YES,\n                          Field.Index.ANALYZED));\n        doc.add(newField(\"content5\", \"\", storeVal,\n                          Field.Index.ANALYZED));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", TextField.TYPE_UNSTORED));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_UNSTORED; \n        doc.add(newField(\"content1\", contents, TextField.TYPE_UNSTORED));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", TextField.TYPE_UNSTORED));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_UNSTORED; \n        doc.add(newField(\"content1\", contents, TextField.TYPE_UNSTORED));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", TextField.TYPE_UNSTORED));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_UNSTORED; \n        doc.add(newField(\"content1\", contents, TextField.TYPE_UNSTORED));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", TextField.TYPE_UNSTORED));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_UNSTORED; \n        doc.add(newField(\"content1\", contents, TextField.TYPE_UNSTORED));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.optimize();\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"75ec8c9aaa10ac00b30fd4c2465409770c838f7b","date":1323020115,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", TextField.TYPE_UNSTORED));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_UNSTORED; \n        doc.add(newField(\"content1\", contents, TextField.TYPE_UNSTORED));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", TextField.TYPE_UNSTORED));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_UNSTORED; \n        doc.add(newField(\"content1\", contents, TextField.TYPE_UNSTORED));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", TextField.TYPE_UNSTORED));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_UNSTORED; \n        doc.add(newField(\"content1\", contents, TextField.TYPE_UNSTORED));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", TextField.TYPE_UNSTORED));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_UNSTORED; \n        doc.add(newField(\"content1\", contents, TextField.TYPE_UNSTORED));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", TextField.TYPE_UNSTORED));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_UNSTORED; \n        doc.add(newField(\"content1\", contents, TextField.TYPE_UNSTORED));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    int delID = 0;\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", TextField.TYPE_UNSTORED));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_UNSTORED; \n        doc.add(newField(\"content1\", contents, TextField.TYPE_UNSTORED));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n      reader.deleteDocument(delID++);\n      reader.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", TextField.TYPE_UNSTORED));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_UNSTORED; \n        doc.add(newField(\"content1\", contents, TextField.TYPE_UNSTORED));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", TextField.TYPE_UNSTORED));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_UNSTORED; \n        doc.add(newField(\"content1\", contents, TextField.TYPE_UNSTORED));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"75ec8c9aaa10ac00b30fd4c2465409770c838f7b":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["06584e6e98d592b34e1329b384182f368d2025e8"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["8dc26bfa5ebbc55b5a04fbec545dfcec647b046b","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"c19f985e36a65cc969e8e564fe337a0d41512075":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["c19f985e36a65cc969e8e564fe337a0d41512075"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["a05409176bd65129d67a785ee70e881e238a9aef"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","c19f985e36a65cc969e8e564fe337a0d41512075"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a05409176bd65129d67a785ee70e881e238a9aef":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["7e1cbd7e289dc1243c7a59e1a83d078163a147fe"],"7e1cbd7e289dc1243c7a59e1a83d078163a147fe":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c19f985e36a65cc969e8e564fe337a0d41512075"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"06584e6e98d592b34e1329b384182f368d2025e8":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["132903c28af3aa6f67284b78de91c0f0a99488c2","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"962d04139994fce5193143ef35615499a9a96d78":["bde51b089eb7f86171eb3406e38a274743f9b7ac","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"8dc26bfa5ebbc55b5a04fbec545dfcec647b046b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c19f985e36a65cc969e8e564fe337a0d41512075","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","75ec8c9aaa10ac00b30fd4c2465409770c838f7b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"75ec8c9aaa10ac00b30fd4c2465409770c838f7b":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["75ec8c9aaa10ac00b30fd4c2465409770c838f7b","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["7e1cbd7e289dc1243c7a59e1a83d078163a147fe","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c19f985e36a65cc969e8e564fe337a0d41512075":["f2c5f0cb44df114db4228c8f77861714b5cabaea","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","a3776dccca01c11e7046323cfad46a3b4a471233"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["1509f151d7692d84fae414b2b799ac06ba60fcb4","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a05409176bd65129d67a785ee70e881e238a9aef":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["06584e6e98d592b34e1329b384182f368d2025e8"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c19f985e36a65cc969e8e564fe337a0d41512075","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"7e1cbd7e289dc1243c7a59e1a83d078163a147fe":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["962d04139994fce5193143ef35615499a9a96d78"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a05409176bd65129d67a785ee70e881e238a9aef"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["d572389229127c297dd1fa5ce4758e1cec41e799"],"06584e6e98d592b34e1329b384182f368d2025e8":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"d572389229127c297dd1fa5ce4758e1cec41e799":["b21422ff1d1d56499dec481f193b402e5e8def5b","8dc26bfa5ebbc55b5a04fbec545dfcec647b046b"],"962d04139994fce5193143ef35615499a9a96d78":[],"8dc26bfa5ebbc55b5a04fbec545dfcec647b046b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}