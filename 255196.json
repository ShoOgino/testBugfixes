{"path":"lucene/core/src/test/org/apache/lucene/analysis/TestWordlistLoader#testSnowballListLoading().mjava","commits":[{"id":"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345","date":1465936684,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestWordlistLoader#testSnowballListLoading().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestWordlistLoader#testSnowballListLoading().mjava","sourceNew":"  /**\n   * Test stopwords in snowball format\n   */\n  public void testSnowballListLoading() throws IOException {\n    String s = \n      \"|comment\\n\" + // commented line\n      \" |comment\\n\" + // commented line with leading whitespace\n      \"\\n\" + // blank line\n      \"  \\t\\n\" + // line with only whitespace\n      \" |comment | comment\\n\" + // commented line with comment\n      \"ONE\\n\" + // stopword, in uppercase\n      \"   two   \\n\" + // stopword with leading/trailing space\n      \" three   four five \\n\" + // multiple stopwords\n      \"six seven | comment\\n\"; //multiple stopwords + comment\n    CharArraySet wordset = WordlistLoader.getSnowballWordSet(new StringReader(s));\n    assertEquals(7, wordset.size());\n    assertTrue(wordset.contains(\"ONE\"));\n    assertTrue(wordset.contains(\"two\"));\n    assertTrue(wordset.contains(\"three\"));\n    assertTrue(wordset.contains(\"four\"));\n    assertTrue(wordset.contains(\"five\"));\n    assertTrue(wordset.contains(\"six\"));\n    assertTrue(wordset.contains(\"seven\"));\n  }\n\n","sourceOld":"  /**\n   * Test stopwords in snowball format\n   */\n  public void testSnowballListLoading() throws IOException {\n    String s = \n      \"|comment\\n\" + // commented line\n      \" |comment\\n\" + // commented line with leading whitespace\n      \"\\n\" + // blank line\n      \"  \\t\\n\" + // line with only whitespace\n      \" |comment | comment\\n\" + // commented line with comment\n      \"ONE\\n\" + // stopword, in uppercase\n      \"   two   \\n\" + // stopword with leading/trailing space\n      \" three   four five \\n\" + // multiple stopwords\n      \"six seven | comment\\n\"; //multiple stopwords + comment\n    CharArraySet wordset = WordlistLoader.getSnowballWordSet(new StringReader(s));\n    assertEquals(7, wordset.size());\n    assertTrue(wordset.contains(\"ONE\"));\n    assertTrue(wordset.contains(\"two\"));\n    assertTrue(wordset.contains(\"three\"));\n    assertTrue(wordset.contains(\"four\"));\n    assertTrue(wordset.contains(\"five\"));\n    assertTrue(wordset.contains(\"six\"));\n    assertTrue(wordset.contains(\"seven\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestWordlistLoader#testSnowballListLoading().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestWordlistLoader#testSnowballListLoading().mjava","sourceNew":"  /**\n   * Test stopwords in snowball format\n   */\n  public void testSnowballListLoading() throws IOException {\n    String s = \n      \"|comment\\n\" + // commented line\n      \" |comment\\n\" + // commented line with leading whitespace\n      \"\\n\" + // blank line\n      \"  \\t\\n\" + // line with only whitespace\n      \" |comment | comment\\n\" + // commented line with comment\n      \"ONE\\n\" + // stopword, in uppercase\n      \"   two   \\n\" + // stopword with leading/trailing space\n      \" three   four five \\n\" + // multiple stopwords\n      \"six seven | comment\\n\"; //multiple stopwords + comment\n    CharArraySet wordset = WordlistLoader.getSnowballWordSet(new StringReader(s));\n    assertEquals(7, wordset.size());\n    assertTrue(wordset.contains(\"ONE\"));\n    assertTrue(wordset.contains(\"two\"));\n    assertTrue(wordset.contains(\"three\"));\n    assertTrue(wordset.contains(\"four\"));\n    assertTrue(wordset.contains(\"five\"));\n    assertTrue(wordset.contains(\"six\"));\n    assertTrue(wordset.contains(\"seven\"));\n  }\n\n","sourceOld":"  /**\n   * Test stopwords in snowball format\n   */\n  public void testSnowballListLoading() throws IOException {\n    String s = \n      \"|comment\\n\" + // commented line\n      \" |comment\\n\" + // commented line with leading whitespace\n      \"\\n\" + // blank line\n      \"  \\t\\n\" + // line with only whitespace\n      \" |comment | comment\\n\" + // commented line with comment\n      \"ONE\\n\" + // stopword, in uppercase\n      \"   two   \\n\" + // stopword with leading/trailing space\n      \" three   four five \\n\" + // multiple stopwords\n      \"six seven | comment\\n\"; //multiple stopwords + comment\n    CharArraySet wordset = WordlistLoader.getSnowballWordSet(new StringReader(s));\n    assertEquals(7, wordset.size());\n    assertTrue(wordset.contains(\"ONE\"));\n    assertTrue(wordset.contains(\"two\"));\n    assertTrue(wordset.contains(\"three\"));\n    assertTrue(wordset.contains(\"four\"));\n    assertTrue(wordset.contains(\"five\"));\n    assertTrue(wordset.contains(\"six\"));\n    assertTrue(wordset.contains(\"seven\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b266fe0ac2172d4ad87cff12bd9bf9f8c8247345"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b266fe0ac2172d4ad87cff12bd9bf9f8c8247345"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b266fe0ac2172d4ad87cff12bd9bf9f8c8247345","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}