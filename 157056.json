{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a54e23e03b47f3d568ab3020bdd386e4b2f0a05","date":1294877328,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", Similarity.getDefault().encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", Similarity.getDefault().encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", Similarity.getDefault().encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", Similarity.getDefault().encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", Similarity.getDefault().encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", Similarity.getDefault().encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", Similarity.getDefault().encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", Similarity.getDefault().encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", Similarity.getDefault().encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", Similarity.getDefault().encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", Similarity.getDefault().encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", Similarity.getDefault().encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", Similarity.getDefault().encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", Similarity.getDefault().encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", Similarity.getDefault().encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", Similarity.getDefault().encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", Similarity.getDefault().encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", Similarity.getDefault().encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", Similarity.getDefault().encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", Similarity.getDefault().encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", Similarity.getDefault().encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", Similarity.getDefault().encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", Similarity.getDefault().encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", Similarity.getDefault().encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", Similarity.getDefault().encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", Similarity.getDefault().encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", Similarity.getDefault().encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", Similarity.getDefault().encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", Similarity.getDefault().encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", Similarity.getDefault().encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9325c7ff9928fabe81c28553b41fc7aa57dfab","date":1295896411,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        SimilarityProvider sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.get(\"field1\").encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.get(\"field2\").encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.get(\"field4\").encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        SimilarityProvider sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.get(\"field1\").encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.get(\"field2\").encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", Similarity.getDefault().encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", Similarity.getDefault().encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", Similarity.getDefault().encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", Similarity.getDefault().encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", Similarity.getDefault().encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        SimilarityProvider sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.get(\"field1\").encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.get(\"field2\").encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.get(\"field4\").encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        SimilarityProvider sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.get(\"field1\").encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.get(\"field2\").encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", Similarity.getDefault().encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", Similarity.getDefault().encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", Similarity.getDefault().encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", Similarity.getDefault().encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", Similarity.getDefault().encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        SimilarityProvider sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.get(\"field1\").encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.get(\"field2\").encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.get(\"field4\").encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        SimilarityProvider sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.get(\"field1\").encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.get(\"field2\").encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a31c91eda919456f5f9237b086174385292f9935","date":1299074041,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        SimilarityProvider sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.get(\"field1\").encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.get(\"field2\").encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.get(\"field4\").encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        SimilarityProvider sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.get(\"field1\").encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.get(\"field2\").encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        SimilarityProvider sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.get(\"field1\").encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.get(\"field2\").encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.get(\"field4\").encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        SimilarityProvider sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.get(\"field1\").encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.get(\"field2\").encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        SimilarityProvider sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.get(\"field1\").encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.get(\"field2\").encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.get(\"field4\").encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        SimilarityProvider sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.get(\"field1\").encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.get(\"field2\").encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f3cee3d20b0c786e6fca20539454262e29edcab","date":1310101685,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        Similarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.setInfoStream(VERBOSE ? System.out : null);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.forceMerge(1);\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.forceMerge(1);\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4122a26e1fd0457a340616673a3d3aada370f713","date":1322955654,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":null,"sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.forceMerge(1);\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.forceMerge(1);\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ec62bd7d903ac435fcc4ad1f5a67ccc5700d9a3","date":1322958335,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"/dev/null","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.forceMerge(1);\n        w.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.forceMerge(1);\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.forceMerge(1);\n        w.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.forceMerge(1);\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.forceMerge(1);\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.forceMerge(1);\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.forceMerge(1);\n        w.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.forceMerge(1);\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(4, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(44, \"field2\", sim.encodeNormValue(222f));\n        reader.setNorm(44, \"field4\", sim.encodeNormValue(22f));\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.forceMerge(1);\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.forceMerge(1);\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        DefaultSimilarity sim = new DefaultSimilarity();\n        reader.setNorm(5, \"field1\", sim.encodeNormValue(123f));\n        reader.setNorm(55, \"field2\", sim.encodeNormValue(222f));\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.forceMerge(1);\n        w.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.forceMerge(1);\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        if (VERBOSE) {\n          System.out.println(\"TEST: modify index\");\n        }\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.forceMerge(1);\n        w.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.forceMerge(1);\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["06584e6e98d592b34e1329b384182f368d2025e8"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["7a54e23e03b47f3d568ab3020bdd386e4b2f0a05"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["e79a6d080bdd5b2a8f56342cf571b5476de04180","fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["b1add9ddc0005b07550d4350720aac22dc9886b3"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","a31c91eda919456f5f9237b086174385292f9935"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["a31c91eda919456f5f9237b086174385292f9935"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["a3776dccca01c11e7046323cfad46a3b4a471233","0f3cee3d20b0c786e6fca20539454262e29edcab"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d572389229127c297dd1fa5ce4758e1cec41e799","fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7a54e23e03b47f3d568ab3020bdd386e4b2f0a05":["d572389229127c297dd1fa5ce4758e1cec41e799"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a31c91eda919456f5f9237b086174385292f9935":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"06584e6e98d592b34e1329b384182f368d2025e8":["0f3cee3d20b0c786e6fca20539454262e29edcab"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["d619839baa8ce5503e496b94a9e42ad6f079293f","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"962d04139994fce5193143ef35615499a9a96d78":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["868da859b43505d9d2a023bfeae6dd0c795f5295","b1add9ddc0005b07550d4350720aac22dc9886b3"],"1291e4568eb7d9463d751627596ef14baf4c1603":["f2c5f0cb44df114db4228c8f77861714b5cabaea","0f3cee3d20b0c786e6fca20539454262e29edcab"],"2ec62bd7d903ac435fcc4ad1f5a67ccc5700d9a3":["4122a26e1fd0457a340616673a3d3aada370f713"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["29ef99d61cda9641b6250bf9567329a6e65f901d","a31c91eda919456f5f9237b086174385292f9935"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a31c91eda919456f5f9237b086174385292f9935","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","2ec62bd7d903ac435fcc4ad1f5a67ccc5700d9a3"],"4122a26e1fd0457a340616673a3d3aada370f713":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["d572389229127c297dd1fa5ce4758e1cec41e799","7a54e23e03b47f3d568ab3020bdd386e4b2f0a05"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60","4122a26e1fd0457a340616673a3d3aada370f713"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","29ef99d61cda9641b6250bf9567329a6e65f901d","a31c91eda919456f5f9237b086174385292f9935"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["962d04139994fce5193143ef35615499a9a96d78"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["0f3cee3d20b0c786e6fca20539454262e29edcab","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","1291e4568eb7d9463d751627596ef14baf4c1603","a3776dccca01c11e7046323cfad46a3b4a471233"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"7a54e23e03b47f3d568ab3020bdd386e4b2f0a05":["b1add9ddc0005b07550d4350720aac22dc9886b3","868da859b43505d9d2a023bfeae6dd0c795f5295"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["f0b9507caf22f292ac0e5e59f62db4275adf4511","06584e6e98d592b34e1329b384182f368d2025e8","1291e4568eb7d9463d751627596ef14baf4c1603"],"a31c91eda919456f5f9237b086174385292f9935":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","f2c5f0cb44df114db4228c8f77861714b5cabaea","d619839baa8ce5503e496b94a9e42ad6f079293f","a3776dccca01c11e7046323cfad46a3b4a471233"],"06584e6e98d592b34e1329b384182f368d2025e8":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["29ef99d61cda9641b6250bf9567329a6e65f901d","7a54e23e03b47f3d568ab3020bdd386e4b2f0a05","868da859b43505d9d2a023bfeae6dd0c795f5295"],"962d04139994fce5193143ef35615499a9a96d78":[],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"1291e4568eb7d9463d751627596ef14baf4c1603":[],"2ec62bd7d903ac435fcc4ad1f5a67ccc5700d9a3":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":["f0b9507caf22f292ac0e5e59f62db4275adf4511"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4122a26e1fd0457a340616673a3d3aada370f713":["2ec62bd7d903ac435fcc4ad1f5a67ccc5700d9a3"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","f0b9507caf22f292ac0e5e59f62db4275adf4511","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","1291e4568eb7d9463d751627596ef14baf4c1603","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}