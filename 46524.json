{"path":"solr/core/src/test/org/apache/solr/analysis/TokenizerChainTest#testNormalization().mjava","commits":[{"id":"775010bb49e348178e2a16473edb273df54e59d2","date":1520566239,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TokenizerChainTest#testNormalization().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testNormalization() throws Exception {\n    String fieldName = \"f\";\n    TokenFilterFactory[] tff = new TokenFilterFactory[2];\n    tff[0] = new LowerCaseFilterFactory(Collections.EMPTY_MAP);\n    tff[1] = new ASCIIFoldingFilterFactory(Collections.EMPTY_MAP);\n    TokenizerChain tokenizerChain = new TokenizerChain(\n        new MockTokenizerFactory(Collections.EMPTY_MAP),\n        tff);\n    assertEquals(new BytesRef(\"fooba\"),\n        tokenizerChain.normalize(fieldName, \"FOOB\\u00c4\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12ddd922ea96c1d0ea68a68506b6984a246cfb22","date":1554385731,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TokenizerChainTest#testNormalization().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TokenizerChainTest#testNormalization().mjava","sourceNew":"  @Test\n  public void testNormalization() throws Exception {\n    String fieldName = \"f\";\n    TokenFilterFactory[] tff = new TokenFilterFactory[2];\n    tff[0] = new LowerCaseFilterFactory(Collections.EMPTY_MAP);\n    tff[1] = new ASCIIFoldingFilterFactory(Collections.EMPTY_MAP);\n    TokenizerChain tokenizerChain = new TokenizerChain(\n        new MockTokenizerFactory(Collections.EMPTY_MAP),\n        tff);\n    assertEquals(new BytesRef(\"fooba\"),\n        tokenizerChain.normalize(fieldName, \"FOOB\\u00c4\"));\n    tokenizerChain.close();\n  }\n\n","sourceOld":"  @Test\n  public void testNormalization() throws Exception {\n    String fieldName = \"f\";\n    TokenFilterFactory[] tff = new TokenFilterFactory[2];\n    tff[0] = new LowerCaseFilterFactory(Collections.EMPTY_MAP);\n    tff[1] = new ASCIIFoldingFilterFactory(Collections.EMPTY_MAP);\n    TokenizerChain tokenizerChain = new TokenizerChain(\n        new MockTokenizerFactory(Collections.EMPTY_MAP),\n        tff);\n    assertEquals(new BytesRef(\"fooba\"),\n        tokenizerChain.normalize(fieldName, \"FOOB\\u00c4\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TokenizerChainTest#testNormalization().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TokenizerChainTest#testNormalization().mjava","sourceNew":"  @Test\n  @SuppressWarnings({\"unchecked\"})\n  public void testNormalization() throws Exception {\n    String fieldName = \"f\";\n    TokenFilterFactory[] tff = new TokenFilterFactory[2];\n    tff[0] = new LowerCaseFilterFactory(Collections.EMPTY_MAP);\n    tff[1] = new ASCIIFoldingFilterFactory(Collections.EMPTY_MAP);\n    TokenizerChain tokenizerChain = new TokenizerChain(\n        new MockTokenizerFactory(Collections.EMPTY_MAP),\n        tff);\n    assertEquals(new BytesRef(\"fooba\"),\n        tokenizerChain.normalize(fieldName, \"FOOB\\u00c4\"));\n    tokenizerChain.close();\n  }\n\n","sourceOld":"  @Test\n  public void testNormalization() throws Exception {\n    String fieldName = \"f\";\n    TokenFilterFactory[] tff = new TokenFilterFactory[2];\n    tff[0] = new LowerCaseFilterFactory(Collections.EMPTY_MAP);\n    tff[1] = new ASCIIFoldingFilterFactory(Collections.EMPTY_MAP);\n    TokenizerChain tokenizerChain = new TokenizerChain(\n        new MockTokenizerFactory(Collections.EMPTY_MAP),\n        tff);\n    assertEquals(new BytesRef(\"fooba\"),\n        tokenizerChain.normalize(fieldName, \"FOOB\\u00c4\"));\n    tokenizerChain.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"775010bb49e348178e2a16473edb273df54e59d2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"12ddd922ea96c1d0ea68a68506b6984a246cfb22":["775010bb49e348178e2a16473edb273df54e59d2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["12ddd922ea96c1d0ea68a68506b6984a246cfb22"]},"commit2Childs":{"775010bb49e348178e2a16473edb273df54e59d2":["12ddd922ea96c1d0ea68a68506b6984a246cfb22"],"12ddd922ea96c1d0ea68a68506b6984a246cfb22":["e98520789adb1d5ad05afb4956eca0944a929688"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["775010bb49e348178e2a16473edb273df54e59d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}