{"path":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#iterator().mjava","commits":[{"id":"172cf08877d0e6738a51edd238c4dc5ffc088345","date":1342794823,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#iterator().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FieldsEnum iterator() {\n\n      final Iterator<Map.Entry<String,DirectField>> iter = fields.entrySet().iterator();\n\n      return new FieldsEnum() {\n        Map.Entry<String,DirectField> current;\n        \n        @Override\n        public String next() {\n          if (iter.hasNext()) {\n            current = iter.next();\n            return current.getKey();\n          } else {\n            return null;\n          }\n        }\n\n        @Override\n        public Terms terms() {\n          return current.getValue();\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","date":1343059585,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#iterator().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FieldsEnum iterator() {\n\n      final Iterator<Map.Entry<String,DirectField>> iter = fields.entrySet().iterator();\n\n      return new FieldsEnum() {\n        Map.Entry<String,DirectField> current;\n        \n        @Override\n        public String next() {\n          if (iter.hasNext()) {\n            current = iter.next();\n            return current.getKey();\n          } else {\n            return null;\n          }\n        }\n\n        @Override\n        public Terms terms() {\n          return current.getValue();\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#iterator().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FieldsEnum iterator() {\n\n      final Iterator<Map.Entry<String,DirectField>> iter = fields.entrySet().iterator();\n\n      return new FieldsEnum() {\n        Map.Entry<String,DirectField> current;\n        \n        @Override\n        public String next() {\n          if (iter.hasNext()) {\n            current = iter.next();\n            return current.getKey();\n          } else {\n            return null;\n          }\n        }\n\n        @Override\n        public Terms terms() {\n          return current.getValue();\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb07ab105350b80ed9d63ca64b117084ed7391bc","date":1344824719,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#iterator().mjava","sourceNew":"    @Override\n    public Iterator<String> iterator() {\n      return new UnmodifiableIterator<String>(fields.keySet().iterator());\n    }\n\n","sourceOld":"    @Override\n    public FieldsEnum iterator() {\n\n      final Iterator<Map.Entry<String,DirectField>> iter = fields.entrySet().iterator();\n\n      return new FieldsEnum() {\n        Map.Entry<String,DirectField> current;\n        \n        @Override\n        public String next() {\n          if (iter.hasNext()) {\n            current = iter.next();\n            return current.getKey();\n          } else {\n            return null;\n          }\n        }\n\n        @Override\n        public Terms terms() {\n          return current.getValue();\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#iterator().mjava","sourceNew":"    @Override\n    public Iterator<String> iterator() {\n      return new UnmodifiableIterator<String>(fields.keySet().iterator());\n    }\n\n","sourceOld":"    @Override\n    public FieldsEnum iterator() {\n\n      final Iterator<Map.Entry<String,DirectField>> iter = fields.entrySet().iterator();\n\n      return new FieldsEnum() {\n        Map.Entry<String,DirectField> current;\n        \n        @Override\n        public String next() {\n          if (iter.hasNext()) {\n            current = iter.next();\n            return current.getKey();\n          } else {\n            return null;\n          }\n        }\n\n        @Override\n        public Terms terms() {\n          return current.getValue();\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#iterator().mjava","sourceNew":"    @Override\n    public Iterator<String> iterator() {\n      return new UnmodifiableIterator<String>(fields.keySet().iterator());\n    }\n\n","sourceOld":"    @Override\n    public FieldsEnum iterator() {\n\n      final Iterator<Map.Entry<String,DirectField>> iter = fields.entrySet().iterator();\n\n      return new FieldsEnum() {\n        Map.Entry<String,DirectField> current;\n        \n        @Override\n        public String next() {\n          if (iter.hasNext()) {\n            current = iter.next();\n            return current.getKey();\n          } else {\n            return null;\n          }\n        }\n\n        @Override\n        public Terms terms() {\n          return current.getValue();\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d56999cfc1772fd594a2a43a40007a11a188bd96","date":1345554776,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#iterator().mjava","sourceNew":"    @Override\n    public Iterator<String> iterator() {\n      return Collections.unmodifiableSet(fields.keySet()).iterator();\n    }\n\n","sourceOld":"    @Override\n    public Iterator<String> iterator() {\n      return new UnmodifiableIterator<String>(fields.keySet().iterator());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#iterator().mjava","sourceNew":"    @Override\n    public Iterator<String> iterator() {\n      return Collections.unmodifiableSet(fields.keySet()).iterator();\n    }\n\n","sourceOld":"    @Override\n    public Iterator<String> iterator() {\n      return new UnmodifiableIterator<String>(fields.keySet().iterator());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectFields#iterator().mjava","sourceNew":"    @Override\n    public Iterator<String> iterator() {\n      return Collections.unmodifiableSet(fields.keySet()).iterator();\n    }\n\n","sourceOld":"    @Override\n    public Iterator<String> iterator() {\n      return Collections.unmodifiableSet(fields.keySet()).iterator();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","d56999cfc1772fd594a2a43a40007a11a188bd96"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","172cf08877d0e6738a51edd238c4dc5ffc088345"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["d56999cfc1772fd594a2a43a40007a11a188bd96"],"fb07ab105350b80ed9d63ca64b117084ed7391bc":["172cf08877d0e6738a51edd238c4dc5ffc088345"],"172cf08877d0e6738a51edd238c4dc5ffc088345":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","172cf08877d0e6738a51edd238c4dc5ffc088345"],"d56999cfc1772fd594a2a43a40007a11a188bd96":["fb07ab105350b80ed9d63ca64b117084ed7391bc"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["aba371508186796cc6151d8223a5b4e16d02e26e","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"aba371508186796cc6151d8223a5b4e16d02e26e":["d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","172cf08877d0e6738a51edd238c4dc5ffc088345","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"172cf08877d0e6738a51edd238c4dc5ffc088345":["aba371508186796cc6151d8223a5b4e16d02e26e","fb07ab105350b80ed9d63ca64b117084ed7391bc","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"fb07ab105350b80ed9d63ca64b117084ed7391bc":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d56999cfc1772fd594a2a43a40007a11a188bd96","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["c7869f64c874ebf7f317d22c00baf2b6857797a6"],"d56999cfc1772fd594a2a43a40007a11a188bd96":["001b25b42373b22a52f399dbf072f1224632e8e6","3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["001b25b42373b22a52f399dbf072f1224632e8e6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","c7869f64c874ebf7f317d22c00baf2b6857797a6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}