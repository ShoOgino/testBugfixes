{"path":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/RegexTermsEnum#RegexTermsEnum(IndexReader,Term,RegexCapabilities).mjava","commits":[{"id":"28427ef110c4c5bf5b4057731b83110bd1e13724","date":1276701452,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/RegexTermsEnum#RegexTermsEnum(IndexReader,Term,RegexCapabilities).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/RegexTermEnum#RegexTermEnum(IndexReader,Term,RegexCapabilities).mjava","sourceNew":"  public RegexTermsEnum(IndexReader reader, Term term, RegexCapabilities regexImpl) throws IOException {\n    super(reader, term.field());\n    String text = term.text();\n    this.regexImpl = regexImpl;\n\n    regexImpl.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) pre = \"\";\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","sourceOld":"  public RegexTermEnum(IndexReader reader, Term term, RegexCapabilities regexImpl) throws IOException {\n    super();\n    field = term.field();\n    String text = term.text();\n    this.regexImpl = regexImpl;\n\n    regexImpl.compile(text);\n\n    pre = regexImpl.prefix();\n    if (pre == null) pre = \"\";\n\n    setEnum(reader.terms(new Term(term.field(), pre)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/RegexTermsEnum#RegexTermsEnum(IndexReader,Term,RegexCapabilities).mjava","pathOld":"/dev/null","sourceNew":"  public RegexTermsEnum(IndexReader reader, Term term, RegexCapabilities regexImpl) throws IOException {\n    super(reader, term.field());\n    String text = term.text();\n    this.regexImpl = regexImpl;\n\n    regexImpl.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) pre = \"\";\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f67387bc16fbb80062f4ee9865abd90aed3e207","date":1282216842,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/RegexTermsEnum#RegexTermsEnum(IndexReader,Term,RegexCapabilities).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/RegexTermsEnum#RegexTermsEnum(IndexReader,Term,RegexCapabilities).mjava","sourceNew":"  public RegexTermsEnum(IndexReader reader, Term term, RegexCapabilities regexCap) throws IOException {\n    super(reader, term.field());\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) pre = \"\";\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","sourceOld":"  public RegexTermsEnum(IndexReader reader, Term term, RegexCapabilities regexImpl) throws IOException {\n    super(reader, term.field());\n    String text = term.text();\n    this.regexImpl = regexImpl;\n\n    regexImpl.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) pre = \"\";\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8dd2a69747e9f2922fd8b6970bd1661b26a692d","date":1291080135,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/RegexTermsEnum#RegexTermsEnum(TermsEnum,Term,RegexCapabilities).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/RegexTermsEnum#RegexTermsEnum(IndexReader,Term,RegexCapabilities).mjava","sourceNew":"  public RegexTermsEnum(TermsEnum tenum, Term term, RegexCapabilities regexCap) throws IOException {\n    super(tenum);\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) pre = \"\";\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","sourceOld":"  public RegexTermsEnum(IndexReader reader, Term term, RegexCapabilities regexCap) throws IOException {\n    super(reader, term.field());\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) pre = \"\";\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/RegexTermsEnum#RegexTermsEnum(IndexReader,Term,RegexCapabilities).mjava","sourceNew":null,"sourceOld":"  public RegexTermsEnum(IndexReader reader, Term term, RegexCapabilities regexCap) throws IOException {\n    super(reader, term.field());\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) pre = \"\";\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/RegexTermsEnum#RegexTermsEnum(IndexReader,Term,RegexCapabilities).mjava","sourceNew":null,"sourceOld":"  public RegexTermsEnum(IndexReader reader, Term term, RegexCapabilities regexImpl) throws IOException {\n    super(reader, term.field());\n    String text = term.text();\n    this.regexImpl = regexImpl;\n\n    regexImpl.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) pre = \"\";\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28427ef110c4c5bf5b4057731b83110bd1e13724":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f67387bc16fbb80062f4ee9865abd90aed3e207":["28427ef110c4c5bf5b4057731b83110bd1e13724"],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","28427ef110c4c5bf5b4057731b83110bd1e13724"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","e8dd2a69747e9f2922fd8b6970bd1661b26a692d"],"e8dd2a69747e9f2922fd8b6970bd1661b26a692d":["0f67387bc16fbb80062f4ee9865abd90aed3e207"],"3bb13258feba31ab676502787ab2e1779f129b7a":["0f67387bc16fbb80062f4ee9865abd90aed3e207","e8dd2a69747e9f2922fd8b6970bd1661b26a692d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e8dd2a69747e9f2922fd8b6970bd1661b26a692d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["28427ef110c4c5bf5b4057731b83110bd1e13724","5f4e87790277826a2aea119328600dfb07761f32"],"28427ef110c4c5bf5b4057731b83110bd1e13724":["0f67387bc16fbb80062f4ee9865abd90aed3e207","5f4e87790277826a2aea119328600dfb07761f32"],"0f67387bc16fbb80062f4ee9865abd90aed3e207":["e8dd2a69747e9f2922fd8b6970bd1661b26a692d","3bb13258feba31ab676502787ab2e1779f129b7a"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"e8dd2a69747e9f2922fd8b6970bd1661b26a692d":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}