{"path":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser#getMultiplicativeBoosts().mjava","commits":[{"id":"c7e79e31f55cbb444e3023d430a340658755aa31","date":1357666399,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser#getMultiplicativeBoosts().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Parses all multiplicative boosts\n   */\n  protected List<ValueSource> getMultiplicativeBoosts() throws SyntaxError {\n    List<ValueSource> boosts = new ArrayList<ValueSource>();\n    if (config.hasMultiplicativeBoosts()) {\n      for (String boostStr : config.multBoosts) {\n        if (boostStr==null || boostStr.length()==0) continue;\n        Query boost = subQuery(boostStr, FunctionQParserPlugin.NAME).getQuery();\n        ValueSource vs;\n        if (boost instanceof FunctionQuery) {\n          vs = ((FunctionQuery)boost).getValueSource();\n        } else {\n          vs = new QueryValueSource(boost, 1.0f);\n        }\n        boosts.add(vs);\n      }\n    }\n    return boosts;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser#getMultiplicativeBoosts().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Parses all multiplicative boosts\n   */\n  protected List<ValueSource> getMultiplicativeBoosts() throws SyntaxError {\n    List<ValueSource> boosts = new ArrayList<ValueSource>();\n    if (config.hasMultiplicativeBoosts()) {\n      for (String boostStr : config.multBoosts) {\n        if (boostStr==null || boostStr.length()==0) continue;\n        Query boost = subQuery(boostStr, FunctionQParserPlugin.NAME).getQuery();\n        ValueSource vs;\n        if (boost instanceof FunctionQuery) {\n          vs = ((FunctionQuery)boost).getValueSource();\n        } else {\n          vs = new QueryValueSource(boost, 1.0f);\n        }\n        boosts.add(vs);\n      }\n    }\n    return boosts;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser#getMultiplicativeBoosts().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser#getMultiplicativeBoosts().mjava","sourceNew":"  /**\n   * Parses all multiplicative boosts\n   */\n  protected List<ValueSource> getMultiplicativeBoosts() throws SyntaxError {\n    List<ValueSource> boosts = new ArrayList<>();\n    if (config.hasMultiplicativeBoosts()) {\n      for (String boostStr : config.multBoosts) {\n        if (boostStr==null || boostStr.length()==0) continue;\n        Query boost = subQuery(boostStr, FunctionQParserPlugin.NAME).getQuery();\n        ValueSource vs;\n        if (boost instanceof FunctionQuery) {\n          vs = ((FunctionQuery)boost).getValueSource();\n        } else {\n          vs = new QueryValueSource(boost, 1.0f);\n        }\n        boosts.add(vs);\n      }\n    }\n    return boosts;\n  }\n\n","sourceOld":"  /**\n   * Parses all multiplicative boosts\n   */\n  protected List<ValueSource> getMultiplicativeBoosts() throws SyntaxError {\n    List<ValueSource> boosts = new ArrayList<ValueSource>();\n    if (config.hasMultiplicativeBoosts()) {\n      for (String boostStr : config.multBoosts) {\n        if (boostStr==null || boostStr.length()==0) continue;\n        Query boost = subQuery(boostStr, FunctionQParserPlugin.NAME).getQuery();\n        ValueSource vs;\n        if (boost instanceof FunctionQuery) {\n          vs = ((FunctionQuery)boost).getValueSource();\n        } else {\n          vs = new QueryValueSource(boost, 1.0f);\n        }\n        boosts.add(vs);\n      }\n    }\n    return boosts;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["c7e79e31f55cbb444e3023d430a340658755aa31"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c7e79e31f55cbb444e3023d430a340658755aa31":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c7e79e31f55cbb444e3023d430a340658755aa31"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7e79e31f55cbb444e3023d430a340658755aa31","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"c7e79e31f55cbb444e3023d430a340658755aa31":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}