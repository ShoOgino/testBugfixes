{"path":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberos#setupMiniKdc().mjava","commits":[{"id":"8293bb9f086fce9590482de97de6eac8381ae15a","date":1432275970,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberos#setupMiniKdc().mjava","pathOld":"/dev/null","sourceNew":"  private void setupMiniKdc() throws Exception {\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    kdc = KerberosTestUtil.getKdc(new File(kdcDir));\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    String zkServerPrincipal = \"zookeeper/127.0.0.1\";\n\n    kdc.start();\n    kdc.createPrincipal(keytabFile, solrServerPrincipal, zkServerPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrServerPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    Configuration conf = new KerberosTestUtil.JaasConfiguration(solrServerPrincipal, keytabFile, \"SolrClient\");\n    Configuration.setConfiguration(conf);\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    \n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"814b09f7caddc0d041bf4bac96336638511c7f5f","date":1432568708,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberos#setupMiniKdc().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberos#setupMiniKdc().mjava","sourceNew":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    kdc = KerberosTestUtil.getKdc(new File(kdcDir));\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    String zkServerPrincipal = \"zookeeper/127.0.0.1\";\n\n    kdc.start();\n    kdc.createPrincipal(keytabFile, solrServerPrincipal, zkServerPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrServerPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    Configuration conf = new KerberosTestUtil.JaasConfiguration(solrServerPrincipal, keytabFile, \"SolrClient\");\n    Configuration.setConfiguration(conf);\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    \n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","sourceOld":"  private void setupMiniKdc() throws Exception {\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    kdc = KerberosTestUtil.getKdc(new File(kdcDir));\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    String zkServerPrincipal = \"zookeeper/127.0.0.1\";\n\n    kdc.start();\n    kdc.createPrincipal(keytabFile, solrServerPrincipal, zkServerPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrServerPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    Configuration conf = new KerberosTestUtil.JaasConfiguration(solrServerPrincipal, keytabFile, \"SolrClient\");\n    Configuration.setConfiguration(conf);\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    \n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33c290fa45cdfec3aaa108916ec4b6017d0616cc","date":1432654478,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberos#setupMiniKdc().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberos#setupMiniKdc().mjava","sourceNew":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    kdc = KerberosTestUtil.getKdc(new File(kdcDir));\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    String solrClientPrincipal = \"solr\";\n    kdc.start();\n    kdc.createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    Configuration conf = new KerberosTestUtil.JaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\");\n    Configuration.setConfiguration(conf);\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","sourceOld":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    kdc = KerberosTestUtil.getKdc(new File(kdcDir));\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    String zkServerPrincipal = \"zookeeper/127.0.0.1\";\n\n    kdc.start();\n    kdc.createPrincipal(keytabFile, solrServerPrincipal, zkServerPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrServerPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    Configuration conf = new KerberosTestUtil.JaasConfiguration(solrServerPrincipal, keytabFile, \"SolrClient\");\n    Configuration.setConfiguration(conf);\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    \n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56c5e935e2f4830591e0b601b70925e02766a941","date":1440553685,"type":4,"author":"Anshum Gupta","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberos#setupMiniKdc().mjava","sourceNew":null,"sourceOld":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    kdc = KerberosTestUtil.getKdc(new File(kdcDir));\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    String solrClientPrincipal = \"solr\";\n    kdc.start();\n    kdc.createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    Configuration conf = new KerberosTestUtil.JaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\");\n    Configuration.setConfiguration(conf);\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"814b09f7caddc0d041bf4bac96336638511c7f5f":["8293bb9f086fce9590482de97de6eac8381ae15a"],"33c290fa45cdfec3aaa108916ec4b6017d0616cc":["814b09f7caddc0d041bf4bac96336638511c7f5f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8293bb9f086fce9590482de97de6eac8381ae15a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"56c5e935e2f4830591e0b601b70925e02766a941":["33c290fa45cdfec3aaa108916ec4b6017d0616cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["56c5e935e2f4830591e0b601b70925e02766a941"]},"commit2Childs":{"814b09f7caddc0d041bf4bac96336638511c7f5f":["33c290fa45cdfec3aaa108916ec4b6017d0616cc"],"33c290fa45cdfec3aaa108916ec4b6017d0616cc":["56c5e935e2f4830591e0b601b70925e02766a941"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8293bb9f086fce9590482de97de6eac8381ae15a"],"8293bb9f086fce9590482de97de6eac8381ae15a":["814b09f7caddc0d041bf4bac96336638511c7f5f"],"56c5e935e2f4830591e0b601b70925e02766a941":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}