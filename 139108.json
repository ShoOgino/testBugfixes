{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/email/TestUAX29URLEmailTokenizer#testMailtoSchemeEmails().mjava","commits":[{"id":"313c36388b6cae6118f75a1860ad0ba0af7e1344","date":1601279368,"type":1,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/email/TestUAX29URLEmailTokenizer#testMailtoSchemeEmails().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestUAX29URLEmailTokenizer#testMailtoSchemeEmails().mjava","sourceNew":"  public void testMailtoSchemeEmails () throws Exception {\n    // See LUCENE-3880\n    BaseTokenStreamTestCase.assertAnalyzesTo(a, \"mailto:test@example.org\",\n        new String[] {\"mailto\", \"test@example.org\"},\n        new String[] { \"<ALPHANUM>\", \"<EMAIL>\" });\n\n    // TODO: Support full mailto: scheme URIs. See RFC 6068: http://tools.ietf.org/html/rfc6068\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a,  \"mailto:personA@example.com,personB@example.com?cc=personC@example.com\"\n           + \"&subject=Subjectivity&body=Corpusivity%20or%20something%20like%20that\",\n         new String[] { \"mailto\",\n                        \"personA@example.com\",\n                        // TODO: recognize ',' address delimiter. Also, see examples of ';' delimiter use at: http://www.mailto.co.uk/\n                        \",personB@example.com\",\n                        \"?cc=personC@example.com\", // TODO: split field keys/values\n                        \"subject\", \"Subjectivity\",\n                        \"body\", \"Corpusivity\", \"20or\", \"20something\",\"20like\", \"20that\" }, // TODO: Hex decoding + re-tokenization\n         new String[] { \"<ALPHANUM>\",\n                        \"<EMAIL>\",\n                        \"<EMAIL>\",\n                        \"<EMAIL>\",\n                        \"<ALPHANUM>\", \"<ALPHANUM>\",\n                        \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\" });\n  }\n\n","sourceOld":"  public void testMailtoSchemeEmails () throws Exception {\n    // See LUCENE-3880\n    BaseTokenStreamTestCase.assertAnalyzesTo(a, \"mailto:test@example.org\",\n        new String[] {\"mailto\", \"test@example.org\"},\n        new String[] { \"<ALPHANUM>\", \"<EMAIL>\" });\n\n    // TODO: Support full mailto: scheme URIs. See RFC 6068: http://tools.ietf.org/html/rfc6068\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a,  \"mailto:personA@example.com,personB@example.com?cc=personC@example.com\"\n           + \"&subject=Subjectivity&body=Corpusivity%20or%20something%20like%20that\",\n         new String[] { \"mailto\",\n                        \"personA@example.com\",\n                        // TODO: recognize ',' address delimiter. Also, see examples of ';' delimiter use at: http://www.mailto.co.uk/\n                        \",personB@example.com\",\n                        \"?cc=personC@example.com\", // TODO: split field keys/values\n                        \"subject\", \"Subjectivity\",\n                        \"body\", \"Corpusivity\", \"20or\", \"20something\",\"20like\", \"20that\" }, // TODO: Hex decoding + re-tokenization\n         new String[] { \"<ALPHANUM>\",\n                        \"<EMAIL>\",\n                        \"<EMAIL>\",\n                        \"<EMAIL>\",\n                        \"<ALPHANUM>\", \"<ALPHANUM>\",\n                        \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"313c36388b6cae6118f75a1860ad0ba0af7e1344":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["313c36388b6cae6118f75a1860ad0ba0af7e1344"]},"commit2Childs":{"313c36388b6cae6118f75a1860ad0ba0af7e1344":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["313c36388b6cae6118f75a1860ad0ba0af7e1344"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}