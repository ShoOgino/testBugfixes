{"path":"lucene/test-framework/src/java/org/apache/lucene/geo/GeoTestUtil#containsSlowly(Polygon,double,double).mjava","commits":[{"id":"925fce43f3bac029d912b9b7de03c789e258a333","date":1461612714,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/GeoTestUtil#containsSlowly(Polygon,double,double).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#containsOriginal(double[],double[],double,double).mjava","sourceNew":"  /**\n   * Simple slow point in polygon check (for testing)\n   */\n  // direct port of PNPOLY C code (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html)\n  // this allows us to improve the code yet still ensure we have its properties\n  // it is under the BSD license (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html#License%20to%20Use)\n  //\n  // Copyright (c) 1970-2003, Wm. Randolph Franklin\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated \n  // documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation \n  // the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and \n  // to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n  //\n  // 1. Redistributions of source code must retain the above copyright \n  //    notice, this list of conditions and the following disclaimers.\n  // 2. Redistributions in binary form must reproduce the above copyright \n  //    notice in the documentation and/or other materials provided with \n  //    the distribution.\n  // 3. The name of W. Randolph Franklin may not be used to endorse or \n  //    promote products derived from this Software without specific \n  //    prior written permission. \n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED \n  // TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL \n  // THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \n  // CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS \n  // IN THE SOFTWARE. \n  public static boolean containsSlowly(Polygon polygon, double latitude, double longitude) {\n    if (polygon.getHoles().length > 0) {\n      throw new UnsupportedOperationException(\"this testing method does not support holes\");\n    }\n    double polyLats[] = polygon.getPolyLats();\n    double polyLons[] = polygon.getPolyLons();\n    // bounding box check required due to rounding errors (we don't solve that problem)\n    if (latitude < polygon.minLat || latitude > polygon.maxLat || longitude < polygon.minLon || longitude > polygon.maxLon) {\n      return false;\n    }\n    \n    boolean c = false;\n    int i, j;\n    int nvert = polyLats.length;\n    double verty[] = polyLats;\n    double vertx[] = polyLons;\n    double testy = latitude;\n    double testx = longitude;\n    for (i = 0, j = nvert-1; i < nvert; j = i++) {\n      if ( ((verty[i]>testy) != (verty[j]>testy)) &&\n     (testx < (vertx[j]-vertx[i]) * (testy-verty[i]) / (verty[j]-verty[i]) + vertx[i]) )\n         c = !c;\n    }\n    return c;\n  }\n\n","sourceOld":"  // direct port of PNPOLY C code (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html)\n  // this allows us to improve the code yet still ensure we have its properties\n  // it is under the BSD license (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html#License%20to%20Use)\n  //\n  // Copyright (c) 1970-2003, Wm. Randolph Franklin\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated \n  // documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation \n  // the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and \n  // to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n  //\n  // 1. Redistributions of source code must retain the above copyright \n  //    notice, this list of conditions and the following disclaimers.\n  // 2. Redistributions in binary form must reproduce the above copyright \n  //    notice in the documentation and/or other materials provided with \n  //    the distribution.\n  // 3. The name of W. Randolph Franklin may not be used to endorse or \n  //    promote products derived from this Software without specific \n  //    prior written permission. \n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED \n  // TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL \n  // THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \n  // CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS \n  // IN THE SOFTWARE. \n  private static boolean containsOriginal(double polyLats[], double polyLons[], double latitude, double longitude) {\n    boolean c = false;\n    int i, j;\n    int nvert = polyLats.length;\n    double verty[] = polyLats;\n    double vertx[] = polyLons;\n    double testy = latitude;\n    double testx = longitude;\n    for (i = 0, j = nvert-1; i < nvert; j = i++) {\n      if ( ((verty[i]>testy) != (verty[j]>testy)) &&\n     (testx < (vertx[j]-vertx[i]) * (testy-verty[i]) / (verty[j]-verty[i]) + vertx[i]) )\n         c = !c;\n    }\n    return c;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/GeoTestUtil#containsSlowly(Polygon,double,double).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#containsOriginal(double[],double[],double,double).mjava","sourceNew":"  /**\n   * Simple slow point in polygon check (for testing)\n   */\n  // direct port of PNPOLY C code (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html)\n  // this allows us to improve the code yet still ensure we have its properties\n  // it is under the BSD license (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html#License%20to%20Use)\n  //\n  // Copyright (c) 1970-2003, Wm. Randolph Franklin\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated \n  // documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation \n  // the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and \n  // to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n  //\n  // 1. Redistributions of source code must retain the above copyright \n  //    notice, this list of conditions and the following disclaimers.\n  // 2. Redistributions in binary form must reproduce the above copyright \n  //    notice in the documentation and/or other materials provided with \n  //    the distribution.\n  // 3. The name of W. Randolph Franklin may not be used to endorse or \n  //    promote products derived from this Software without specific \n  //    prior written permission. \n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED \n  // TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL \n  // THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \n  // CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS \n  // IN THE SOFTWARE. \n  public static boolean containsSlowly(Polygon polygon, double latitude, double longitude) {\n    if (polygon.getHoles().length > 0) {\n      throw new UnsupportedOperationException(\"this testing method does not support holes\");\n    }\n    double polyLats[] = polygon.getPolyLats();\n    double polyLons[] = polygon.getPolyLons();\n    // bounding box check required due to rounding errors (we don't solve that problem)\n    if (latitude < polygon.minLat || latitude > polygon.maxLat || longitude < polygon.minLon || longitude > polygon.maxLon) {\n      return false;\n    }\n    \n    boolean c = false;\n    int i, j;\n    int nvert = polyLats.length;\n    double verty[] = polyLats;\n    double vertx[] = polyLons;\n    double testy = latitude;\n    double testx = longitude;\n    for (i = 0, j = nvert-1; i < nvert; j = i++) {\n      if ( ((verty[i]>testy) != (verty[j]>testy)) &&\n     (testx < (vertx[j]-vertx[i]) * (testy-verty[i]) / (verty[j]-verty[i]) + vertx[i]) )\n         c = !c;\n    }\n    return c;\n  }\n\n","sourceOld":"  // direct port of PNPOLY C code (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html)\n  // this allows us to improve the code yet still ensure we have its properties\n  // it is under the BSD license (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html#License%20to%20Use)\n  //\n  // Copyright (c) 1970-2003, Wm. Randolph Franklin\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated \n  // documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation \n  // the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and \n  // to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n  //\n  // 1. Redistributions of source code must retain the above copyright \n  //    notice, this list of conditions and the following disclaimers.\n  // 2. Redistributions in binary form must reproduce the above copyright \n  //    notice in the documentation and/or other materials provided with \n  //    the distribution.\n  // 3. The name of W. Randolph Franklin may not be used to endorse or \n  //    promote products derived from this Software without specific \n  //    prior written permission. \n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED \n  // TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL \n  // THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \n  // CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS \n  // IN THE SOFTWARE. \n  private static boolean containsOriginal(double polyLats[], double polyLons[], double latitude, double longitude) {\n    boolean c = false;\n    int i, j;\n    int nvert = polyLats.length;\n    double verty[] = polyLats;\n    double vertx[] = polyLons;\n    double testy = latitude;\n    double testx = longitude;\n    for (i = 0, j = nvert-1; i < nvert; j = i++) {\n      if ( ((verty[i]>testy) != (verty[j]>testy)) &&\n     (testx < (vertx[j]-vertx[i]) * (testy-verty[i]) / (verty[j]-verty[i]) + vertx[i]) )\n         c = !c;\n    }\n    return c;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc005279ab64cbf458ccef2ada610bc1a04b6139","date":1554992856,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/GeoTestUtil#containsSlowly(Polygon,double,double).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/geo/GeoTestUtil#containsSlowly(Polygon,double,double).mjava","sourceNew":"  /**\n   * Simple slow point in polygon check (for testing)\n   */\n  // direct port of PNPOLY C code (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html)\n  // this allows us to improve the code yet still ensure we have its properties\n  // it is under the BSD license (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html#License%20to%20Use)\n  //\n  // Copyright (c) 1970-2003, Wm. Randolph Franklin\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated \n  // documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation \n  // the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and \n  // to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n  //\n  // 1. Redistributions of source code must retain the above copyright \n  //    notice, this list of conditions and the following disclaimers.\n  // 2. Redistributions in binary form must reproduce the above copyright \n  //    notice in the documentation and/or other materials provided with \n  //    the distribution.\n  // 3. The name of W. Randolph Franklin may not be used to endorse or \n  //    promote products derived from this Software without specific \n  //    prior written permission. \n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED \n  // TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL \n  // THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \n  // CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS \n  // IN THE SOFTWARE. \n  public static boolean containsSlowly(Polygon polygon, double latitude, double longitude) {\n    if (polygon.getHoles().length > 0) {\n      throw new UnsupportedOperationException(\"this testing method does not support holes\");\n    }\n    double polyLats[] = polygon.getPolyLats();\n    double polyLons[] = polygon.getPolyLons();\n    // bounding box check required due to rounding errors (we don't solve that problem)\n    if (latitude < polygon.minLat || latitude > polygon.maxLat || longitude < polygon.minLon || longitude > polygon.maxLon) {\n      return false;\n    }\n    \n    boolean c = false;\n    int i, j;\n    int nvert = polyLats.length;\n    double verty[] = polyLats;\n    double vertx[] = polyLons;\n    double testy = latitude;\n    double testx = longitude;\n    for (i = 0, j = 1; j < nvert; ++i, ++j) {\n      if (testy == verty[j] && testy == verty[i] ||\n          ((testy <= verty[j] && testy >= verty[i]) != (testy >= verty[j] && testy <= verty[i]))) {\n        if (GeoUtils.orient(vertx[i], verty[i], vertx[j], verty[j], testx, testy) == 0) {\n          // return true if point is on boundary\n          return true;\n        } else if ( ((verty[i] > testy) != (verty[j] > testy)) &&\n            (testx < (vertx[j]-vertx[i]) * (testy-verty[i]) / (verty[j]-verty[i]) + vertx[i]) ) {\n          c = !c;\n        }\n      }\n    }\n    return c;\n  }\n\n","sourceOld":"  /**\n   * Simple slow point in polygon check (for testing)\n   */\n  // direct port of PNPOLY C code (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html)\n  // this allows us to improve the code yet still ensure we have its properties\n  // it is under the BSD license (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html#License%20to%20Use)\n  //\n  // Copyright (c) 1970-2003, Wm. Randolph Franklin\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated \n  // documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation \n  // the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and \n  // to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n  //\n  // 1. Redistributions of source code must retain the above copyright \n  //    notice, this list of conditions and the following disclaimers.\n  // 2. Redistributions in binary form must reproduce the above copyright \n  //    notice in the documentation and/or other materials provided with \n  //    the distribution.\n  // 3. The name of W. Randolph Franklin may not be used to endorse or \n  //    promote products derived from this Software without specific \n  //    prior written permission. \n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED \n  // TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL \n  // THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \n  // CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS \n  // IN THE SOFTWARE. \n  public static boolean containsSlowly(Polygon polygon, double latitude, double longitude) {\n    if (polygon.getHoles().length > 0) {\n      throw new UnsupportedOperationException(\"this testing method does not support holes\");\n    }\n    double polyLats[] = polygon.getPolyLats();\n    double polyLons[] = polygon.getPolyLons();\n    // bounding box check required due to rounding errors (we don't solve that problem)\n    if (latitude < polygon.minLat || latitude > polygon.maxLat || longitude < polygon.minLon || longitude > polygon.maxLon) {\n      return false;\n    }\n    \n    boolean c = false;\n    int i, j;\n    int nvert = polyLats.length;\n    double verty[] = polyLats;\n    double vertx[] = polyLons;\n    double testy = latitude;\n    double testx = longitude;\n    for (i = 0, j = nvert-1; i < nvert; j = i++) {\n      if ( ((verty[i]>testy) != (verty[j]>testy)) &&\n     (testx < (vertx[j]-vertx[i]) * (testy-verty[i]) / (verty[j]-verty[i]) + vertx[i]) )\n         c = !c;\n    }\n    return c;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1ecb4377bcd108b858446b50f3696ca50f94409","date":1555611307,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/GeoTestUtil#containsSlowly(Polygon,double,double).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/geo/GeoTestUtil#containsSlowly(Polygon,double,double).mjava","sourceNew":"  /**\n   * Simple slow point in polygon check (for testing)\n   */\n  // direct port of PNPOLY C code (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html)\n  // this allows us to improve the code yet still ensure we have its properties\n  // it is under the BSD license (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html#License%20to%20Use)\n  //\n  // Copyright (c) 1970-2003, Wm. Randolph Franklin\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated \n  // documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation \n  // the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and \n  // to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n  //\n  // 1. Redistributions of source code must retain the above copyright \n  //    notice, this list of conditions and the following disclaimers.\n  // 2. Redistributions in binary form must reproduce the above copyright \n  //    notice in the documentation and/or other materials provided with \n  //    the distribution.\n  // 3. The name of W. Randolph Franklin may not be used to endorse or \n  //    promote products derived from this Software without specific \n  //    prior written permission. \n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED \n  // TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL \n  // THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \n  // CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS \n  // IN THE SOFTWARE. \n  public static boolean containsSlowly(Polygon polygon, double latitude, double longitude) {\n    if (polygon.getHoles().length > 0) {\n      throw new UnsupportedOperationException(\"this testing method does not support holes\");\n    }\n    double polyLats[] = polygon.getPolyLats();\n    double polyLons[] = polygon.getPolyLons();\n    // bounding box check required due to rounding errors (we don't solve that problem)\n    if (latitude < polygon.minLat || latitude > polygon.maxLat || longitude < polygon.minLon || longitude > polygon.maxLon) {\n      return false;\n    }\n    \n    boolean c = false;\n    int i, j;\n    int nvert = polyLats.length;\n    double verty[] = polyLats;\n    double vertx[] = polyLons;\n    double testy = latitude;\n    double testx = longitude;\n    for (i = 0, j = 1; j < nvert; ++i, ++j) {\n      if (testy == verty[j] && testy == verty[i] ||\n          ((testy <= verty[j] && testy >= verty[i]) != (testy >= verty[j] && testy <= verty[i]))) {\n        if ((testx == vertx[j] && testx == vertx[i]) ||\n            ((testx <= vertx[j] && testx >= vertx[i]) != (testx >= vertx[j] && testx <= vertx[i]) &&\n            GeoUtils.orient(vertx[i], verty[i], vertx[j], verty[j], testx, testy) == 0)) {\n          // return true if point is on boundary\n          return true;\n        } else if ( ((verty[i] > testy) != (verty[j] > testy)) &&\n            (testx < (vertx[j]-vertx[i]) * (testy-verty[i]) / (verty[j]-verty[i]) + vertx[i]) ) {\n          c = !c;\n        }\n      }\n    }\n    return c;\n  }\n\n","sourceOld":"  /**\n   * Simple slow point in polygon check (for testing)\n   */\n  // direct port of PNPOLY C code (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html)\n  // this allows us to improve the code yet still ensure we have its properties\n  // it is under the BSD license (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html#License%20to%20Use)\n  //\n  // Copyright (c) 1970-2003, Wm. Randolph Franklin\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated \n  // documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation \n  // the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and \n  // to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n  //\n  // 1. Redistributions of source code must retain the above copyright \n  //    notice, this list of conditions and the following disclaimers.\n  // 2. Redistributions in binary form must reproduce the above copyright \n  //    notice in the documentation and/or other materials provided with \n  //    the distribution.\n  // 3. The name of W. Randolph Franklin may not be used to endorse or \n  //    promote products derived from this Software without specific \n  //    prior written permission. \n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED \n  // TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL \n  // THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \n  // CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS \n  // IN THE SOFTWARE. \n  public static boolean containsSlowly(Polygon polygon, double latitude, double longitude) {\n    if (polygon.getHoles().length > 0) {\n      throw new UnsupportedOperationException(\"this testing method does not support holes\");\n    }\n    double polyLats[] = polygon.getPolyLats();\n    double polyLons[] = polygon.getPolyLons();\n    // bounding box check required due to rounding errors (we don't solve that problem)\n    if (latitude < polygon.minLat || latitude > polygon.maxLat || longitude < polygon.minLon || longitude > polygon.maxLon) {\n      return false;\n    }\n    \n    boolean c = false;\n    int i, j;\n    int nvert = polyLats.length;\n    double verty[] = polyLats;\n    double vertx[] = polyLons;\n    double testy = latitude;\n    double testx = longitude;\n    for (i = 0, j = 1; j < nvert; ++i, ++j) {\n      if (testy == verty[j] && testy == verty[i] ||\n          ((testy <= verty[j] && testy >= verty[i]) != (testy >= verty[j] && testy <= verty[i]))) {\n        if (GeoUtils.orient(vertx[i], verty[i], vertx[j], verty[j], testx, testy) == 0) {\n          // return true if point is on boundary\n          return true;\n        } else if ( ((verty[i] > testy) != (verty[j] > testy)) &&\n            (testx < (vertx[j]-vertx[i]) * (testy-verty[i]) / (verty[j]-verty[i]) + vertx[i]) ) {\n          c = !c;\n        }\n      }\n    }\n    return c;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d1ecb4377bcd108b858446b50f3696ca50f94409":["fc005279ab64cbf458ccef2ada610bc1a04b6139"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","925fce43f3bac029d912b9b7de03c789e258a333"],"fc005279ab64cbf458ccef2ada610bc1a04b6139":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1ecb4377bcd108b858446b50f3696ca50f94409"],"925fce43f3bac029d912b9b7de03c789e258a333":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d1ecb4377bcd108b858446b50f3696ca50f94409":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","925fce43f3bac029d912b9b7de03c789e258a333"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["fc005279ab64cbf458ccef2ada610bc1a04b6139"],"fc005279ab64cbf458ccef2ada610bc1a04b6139":["d1ecb4377bcd108b858446b50f3696ca50f94409"],"925fce43f3bac029d912b9b7de03c789e258a333":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}