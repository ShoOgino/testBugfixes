{"path":"modules/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","commits":[{"id":"b441220ceb933f50f32318ab45acc05d5943f3aa","date":1274352360,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","pathOld":"lucene/contrib/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","sourceNew":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return WORD_KANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","sourceOld":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return WORD_KANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94020289c63991e7e77fe81fa1c3d767d278cb2b","date":1297271266,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","pathOld":"modules/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","sourceNew":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return script == UScript.HIRAGANA ? WORD_HIRAGANA : WORD_KATAKANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return script == UScript.HANGUL ? WORD_HANGUL : WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","sourceOld":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return WORD_KANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","pathOld":"modules/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","sourceNew":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return script == UScript.HIRAGANA ? WORD_HIRAGANA : WORD_KATAKANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return script == UScript.HANGUL ? WORD_HANGUL : WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","sourceOld":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return WORD_KANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","pathOld":"modules/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","sourceNew":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return script == UScript.HIRAGANA ? WORD_HIRAGANA : WORD_KATAKANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return script == UScript.HANGUL ? WORD_HANGUL : WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","sourceOld":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return WORD_KANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","pathOld":"modules/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#getType(int,int).mjava","sourceNew":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return script == UScript.HIRAGANA ? WORD_HIRAGANA : WORD_KATAKANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return script == UScript.HANGUL ? WORD_HANGUL : WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","sourceOld":"  @Override\n  public String getType(int script, int ruleStatus) {\n    switch (ruleStatus) {\n      case RuleBasedBreakIterator.WORD_IDEO:\n        return WORD_IDEO;\n      case RuleBasedBreakIterator.WORD_KANA:\n        return script == UScript.HIRAGANA ? WORD_HIRAGANA : WORD_KATAKANA;\n      case RuleBasedBreakIterator.WORD_LETTER:\n        return script == UScript.HANGUL ? WORD_HANGUL : WORD_LETTER;\n      case RuleBasedBreakIterator.WORD_NUMBER:\n        return WORD_NUMBER;\n      default: /* some other custom code */\n        return \"<OTHER>\";\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["94020289c63991e7e77fe81fa1c3d767d278cb2b"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["b441220ceb933f50f32318ab45acc05d5943f3aa","94020289c63991e7e77fe81fa1c3d767d278cb2b"],"b441220ceb933f50f32318ab45acc05d5943f3aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["b441220ceb933f50f32318ab45acc05d5943f3aa","94020289c63991e7e77fe81fa1c3d767d278cb2b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"94020289c63991e7e77fe81fa1c3d767d278cb2b":["b441220ceb933f50f32318ab45acc05d5943f3aa"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"b441220ceb933f50f32318ab45acc05d5943f3aa":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","94020289c63991e7e77fe81fa1c3d767d278cb2b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b441220ceb933f50f32318ab45acc05d5943f3aa"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"94020289c63991e7e77fe81fa1c3d767d278cb2b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}