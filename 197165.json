{"path":"contrib/queries/src/java/org/apache/lucene/search/BoostingQuery#equals(Object).mjava","commits":[{"id":"d490856946856278b0595bde153c98cc2d6b6f1a","date":1239330064,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/BoostingQuery#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      BoostingQuery other = (BoostingQuery) obj;\n      if (Float.floatToIntBits(boost) != Float.floatToIntBits(other.boost))\n        return false;\n      if (context == null) {\n        if (other.context != null)\n          return false;\n      } else if (!context.equals(other.context))\n        return false;\n      if (match == null) {\n        if (other.match != null)\n          return false;\n      } else if (!match.equals(other.match))\n        return false;\n      return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/BoostingQuery#equals(Object).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/BoostingQuery#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      BoostingQuery other = (BoostingQuery) obj;\n      if (Float.floatToIntBits(boost) != Float.floatToIntBits(other.boost))\n        return false;\n      if (context == null) {\n        if (other.context != null)\n          return false;\n      } else if (!context.equals(other.context))\n        return false;\n      if (match == null) {\n        if (other.match != null)\n          return false;\n      } else if (!match.equals(other.match))\n        return false;\n      return true;\n    }\n\n","sourceOld":"    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      BoostingQuery other = (BoostingQuery) obj;\n      if (Float.floatToIntBits(boost) != Float.floatToIntBits(other.boost))\n        return false;\n      if (context == null) {\n        if (other.context != null)\n          return false;\n      } else if (!context.equals(other.context))\n        return false;\n      if (match == null) {\n        if (other.match != null)\n          return false;\n      } else if (!match.equals(other.match))\n        return false;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/BoostingQuery#equals(Object).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/BoostingQuery#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      BoostingQuery other = (BoostingQuery) obj;\n      if (Float.floatToIntBits(boost) != Float.floatToIntBits(other.boost))\n        return false;\n      if (context == null) {\n        if (other.context != null)\n          return false;\n      } else if (!context.equals(other.context))\n        return false;\n      if (match == null) {\n        if (other.match != null)\n          return false;\n      } else if (!match.equals(other.match))\n        return false;\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      BoostingQuery other = (BoostingQuery) obj;\n      if (Float.floatToIntBits(boost) != Float.floatToIntBits(other.boost))\n        return false;\n      if (context == null) {\n        if (other.context != null)\n          return false;\n      } else if (!context.equals(other.context))\n        return false;\n      if (match == null) {\n        if (other.match != null)\n          return false;\n      } else if (!match.equals(other.match))\n        return false;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["d490856946856278b0595bde153c98cc2d6b6f1a"],"d490856946856278b0595bde153c98cc2d6b6f1a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d490856946856278b0595bde153c98cc2d6b6f1a"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d490856946856278b0595bde153c98cc2d6b6f1a":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}