{"path":"src/solrj/org/apache/solr/client/solrj/impl/LBHttpSolrServer#setAliveCheckInterval(int).mjava","commits":[{"id":"d0e21d913dd196ddb03bd8eba703d966f9aead69","date":1237540237,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/impl/LBHttpSolrServer#setAliveCheckInterval(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * LBHttpSolrServer keeps pinging the dead servers at fixed interval to find if it is alive. Use this to set that\n   * interval\n   *\n   * @param interval time in seconds\n   */\n  public void setAliveCheckInterval(int interval) {\n    if (interval <= 0) {\n      throw new IllegalArgumentException(\"Alive check interval must be \" +\n              \"positive, specified value = \" + interval);\n    }\n    this.interval = interval;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fb7bf3bf0107b4fcd73620c18aa79d3efb8a692","date":1241862497,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/impl/LBHttpSolrServer#setAliveCheckInterval(int).mjava","pathOld":"src/solrj/org/apache/solr/client/solrj/impl/LBHttpSolrServer#setAliveCheckInterval(int).mjava","sourceNew":"  /**\n   * LBHttpSolrServer keeps pinging the dead servers at fixed interval to find if it is alive. Use this to set that\n   * interval\n   *\n   * @param interval time in milliseconds\n   */\n  public void setAliveCheckInterval(int interval) {\n    if (interval <= 0) {\n      throw new IllegalArgumentException(\"Alive check interval must be \" +\n              \"positive, specified value = \" + interval);\n    }\n    this.interval = interval;\n  }\n\n","sourceOld":"  /**\n   * LBHttpSolrServer keeps pinging the dead servers at fixed interval to find if it is alive. Use this to set that\n   * interval\n   *\n   * @param interval time in seconds\n   */\n  public void setAliveCheckInterval(int interval) {\n    if (interval <= 0) {\n      throw new IllegalArgumentException(\"Alive check interval must be \" +\n              \"positive, specified value = \" + interval);\n    }\n    this.interval = interval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/impl/LBHttpSolrServer#setAliveCheckInterval(int).mjava","pathOld":"src/solrj/org/apache/solr/client/solrj/impl/LBHttpSolrServer#setAliveCheckInterval(int).mjava","sourceNew":"  /**\n   * LBHttpSolrServer keeps pinging the dead servers at fixed interval to find if it is alive. Use this to set that\n   * interval\n   *\n   * @param interval time in milliseconds\n   */\n  public void setAliveCheckInterval(int interval) {\n    if (interval <= 0) {\n      throw new IllegalArgumentException(\"Alive check interval must be \" +\n              \"positive, specified value = \" + interval);\n    }\n    this.interval = interval;\n  }\n\n","sourceOld":"  /**\n   * LBHttpSolrServer keeps pinging the dead servers at fixed interval to find if it is alive. Use this to set that\n   * interval\n   *\n   * @param interval time in milliseconds\n   */\n  public void setAliveCheckInterval(int interval) {\n    if (interval <= 0) {\n      throw new IllegalArgumentException(\"Alive check interval must be \" +\n              \"positive, specified value = \" + interval);\n    }\n    this.interval = interval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9fb7bf3bf0107b4fcd73620c18aa79d3efb8a692":["d0e21d913dd196ddb03bd8eba703d966f9aead69"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0e21d913dd196ddb03bd8eba703d966f9aead69":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["9fb7bf3bf0107b4fcd73620c18aa79d3efb8a692"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9fb7bf3bf0107b4fcd73620c18aa79d3efb8a692":["ad94625fb8d088209f46650c8097196fec67f00c"],"d0e21d913dd196ddb03bd8eba703d966f9aead69":["9fb7bf3bf0107b4fcd73620c18aa79d3efb8a692"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["d0e21d913dd196ddb03bd8eba703d966f9aead69"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}