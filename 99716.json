{"path":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo,long).mjava","commits":[{"id":"b213cb4b7b825687d73e7ec995c615eb0cf68305","date":1510236177,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo,long).mjava","pathOld":"/dev/null","sourceNew":"    public FieldInfo add(FieldInfo fi, long dvGen) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(), dvGen,\n                                 fi.getPointDimensionCount(), fi.getPointNumBytes());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeba0a4d0845889a402dd225793d62f009d029c9","date":1527938093,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo,long).mjava","sourceNew":"    public FieldInfo add(FieldInfo fi, long dvGen) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(), dvGen,\n                                 fi.getPointDimensionCount(), fi.getPointNumBytes(), fi.isSoftDeletesField());\n    }\n\n","sourceOld":"    public FieldInfo add(FieldInfo fi, long dvGen) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(), dvGen,\n                                 fi.getPointDimensionCount(), fi.getPointNumBytes());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab548c8f96022b4780f7500a30b19b4f4a5feeb6","date":1527940044,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo,long).mjava","sourceNew":"    public FieldInfo add(FieldInfo fi, long dvGen) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(), dvGen,\n                                 fi.getPointDimensionCount(), fi.getPointNumBytes());\n    }\n\n","sourceOld":"    public FieldInfo add(FieldInfo fi, long dvGen) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(), dvGen,\n                                 fi.getPointDimensionCount(), fi.getPointNumBytes(), fi.isSoftDeletesField());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7e4ca6dc9612ff741d8713743e2bccfae5eadac","date":1528093718,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo,long).mjava","sourceNew":"    public FieldInfo add(FieldInfo fi, long dvGen) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(), dvGen,\n                                 fi.getPointDimensionCount(), fi.getPointNumBytes(), fi.isSoftDeletesField());\n    }\n\n","sourceOld":"    public FieldInfo add(FieldInfo fi, long dvGen) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(), dvGen,\n                                 fi.getPointDimensionCount(), fi.getPointNumBytes());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo,long).mjava","sourceNew":"    public FieldInfo add(FieldInfo fi, long dvGen) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(), dvGen,\n                                 fi.getPointDimensionCount(), fi.getPointNumBytes(), fi.isSoftDeletesField());\n    }\n\n","sourceOld":"    public FieldInfo add(FieldInfo fi, long dvGen) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(), dvGen,\n                                 fi.getPointDimensionCount(), fi.getPointNumBytes());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo,long).mjava","sourceNew":"    public FieldInfo add(FieldInfo fi, long dvGen) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(), dvGen,\n                                 fi.getPointDimensionCount(), fi.getPointNumBytes(), fi.isSoftDeletesField());\n    }\n\n","sourceOld":"    public FieldInfo add(FieldInfo fi, long dvGen) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(), dvGen,\n                                 fi.getPointDimensionCount(), fi.getPointNumBytes());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6652c943595e92c187ee904c382863013eae28f","date":1539042663,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo,long).mjava","sourceNew":"    public FieldInfo add(FieldInfo fi, long dvGen) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(), dvGen,\n                                 fi.getPointDataDimensionCount(), fi.getPointIndexDimensionCount(), fi.getPointNumBytes(),\n                                 fi.isSoftDeletesField());\n    }\n\n","sourceOld":"    public FieldInfo add(FieldInfo fi, long dvGen) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(), dvGen,\n                                 fi.getPointDimensionCount(), fi.getPointNumBytes(), fi.isSoftDeletesField());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1dbcafacd03baeb0f18199de611a1619606073c5","date":1546559081,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo,long).mjava","sourceNew":"    public FieldInfo add(FieldInfo fi, long dvGen) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(), dvGen,\n                                 fi.attributes(),\n                                 fi.getPointDataDimensionCount(), fi.getPointIndexDimensionCount(), fi.getPointNumBytes(),\n                                 fi.isSoftDeletesField());\n    }\n\n","sourceOld":"    public FieldInfo add(FieldInfo fi, long dvGen) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(), dvGen,\n                                 fi.getPointDataDimensionCount(), fi.getPointIndexDimensionCount(), fi.getPointNumBytes(),\n                                 fi.isSoftDeletesField());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59ed8c026ba85e3c42fb89605b2032dc6f9cc241","date":1581113294,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo,long).mjava","sourceNew":"    public FieldInfo add(FieldInfo fi, long dvGen) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(), dvGen,\n                                 fi.attributes(),\n                                 fi.getPointDimensionCount(), fi.getPointIndexDimensionCount(), fi.getPointNumBytes(),\n                                 fi.isSoftDeletesField());\n    }\n\n","sourceOld":"    public FieldInfo add(FieldInfo fi, long dvGen) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(), dvGen,\n                                 fi.attributes(),\n                                 fi.getPointDataDimensionCount(), fi.getPointIndexDimensionCount(), fi.getPointNumBytes(),\n                                 fi.isSoftDeletesField());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1dbcafacd03baeb0f18199de611a1619606073c5":["f6652c943595e92c187ee904c382863013eae28f"],"b213cb4b7b825687d73e7ec995c615eb0cf68305":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["1dbcafacd03baeb0f18199de611a1619606073c5"],"f6652c943595e92c187ee904c382863013eae28f":["b7e4ca6dc9612ff741d8713743e2bccfae5eadac"],"ab548c8f96022b4780f7500a30b19b4f4a5feeb6":["eeba0a4d0845889a402dd225793d62f009d029c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["b213cb4b7b825687d73e7ec995c615eb0cf68305","b7e4ca6dc9612ff741d8713743e2bccfae5eadac"],"b7e4ca6dc9612ff741d8713743e2bccfae5eadac":["ab548c8f96022b4780f7500a30b19b4f4a5feeb6"],"eeba0a4d0845889a402dd225793d62f009d029c9":["b213cb4b7b825687d73e7ec995c615eb0cf68305"],"f592209545c71895260367152601e9200399776d":["ab548c8f96022b4780f7500a30b19b4f4a5feeb6","b7e4ca6dc9612ff741d8713743e2bccfae5eadac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"]},"commit2Childs":{"1dbcafacd03baeb0f18199de611a1619606073c5":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"],"b213cb4b7b825687d73e7ec995c615eb0cf68305":["b70042a8a492f7054d480ccdd2be9796510d4327","eeba0a4d0845889a402dd225793d62f009d029c9"],"f6652c943595e92c187ee904c382863013eae28f":["1dbcafacd03baeb0f18199de611a1619606073c5"],"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b213cb4b7b825687d73e7ec995c615eb0cf68305"],"ab548c8f96022b4780f7500a30b19b4f4a5feeb6":["b7e4ca6dc9612ff741d8713743e2bccfae5eadac","f592209545c71895260367152601e9200399776d"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"b7e4ca6dc9612ff741d8713743e2bccfae5eadac":["f6652c943595e92c187ee904c382863013eae28f","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d"],"eeba0a4d0845889a402dd225793d62f009d029c9":["ab548c8f96022b4780f7500a30b19b4f4a5feeb6"],"f592209545c71895260367152601e9200399776d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}