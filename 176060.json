{"path":"lucene/tools/src/java/org/apache/lucene/validation/LibVersionsCheckTask#findLatestConflictVersions().mjava","commits":[{"id":"151d28379beec3adbc4c091c633cb33e496a2de3","date":1401909314,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/validation/LibVersionsCheckTask#findLatestConflictVersions().mjava","pathOld":"/dev/null","sourceNew":"  private boolean findLatestConflictVersions() {\n    boolean success = true;\n    StringBuilder latestIvyXml = new StringBuilder();\n    latestIvyXml.append(\"<ivy-module version=\\\"2.0\\\">\\n\");\n    latestIvyXml.append(\"  <info organisation=\\\"org.apache.lucene\\\" module=\\\"core-tools-find-latest-revision\\\"/>\\n\");\n    latestIvyXml.append(\"  <configurations>\\n\");\n    latestIvyXml.append(\"    <conf name=\\\"default\\\" transitive=\\\"false\\\"/>\\n\");\n    latestIvyXml.append(\"  </configurations>\\n\");\n    latestIvyXml.append(\"  <dependencies>\\n\");\n    for (Map.Entry<String, Dependency> directDependency : directDependencies.entrySet()) {\n      Dependency dependency = directDependency.getValue();\n      if (dependency.conflictLocations.entrySet().isEmpty()) {\n        continue;\n      }\n      latestIvyXml.append(\"    <dependency org=\\\"\");\n      latestIvyXml.append(dependency.org);\n      latestIvyXml.append(\"\\\" name=\\\"\");\n      latestIvyXml.append(dependency.name);\n      latestIvyXml.append(\"\\\" rev=\\\"latest.release\\\" conf=\\\"default->*\\\"/>\\n\");\n    }\n    latestIvyXml.append(\"  </dependencies>\\n\");\n    latestIvyXml.append(\"</ivy-module>\\n\");\n    File buildDir = new File(commonBuildDir, \"ivy-transitive-resolve\");\n    if ( ! buildDir.exists() && ! buildDir.mkdirs()) {\n      throw new BuildException(\"Could not create temp directory \" + buildDir.getPath());\n    }\n    File findLatestIvyXmlFile = new File(buildDir, \"find.latest.conflicts.ivy.xml\");\n    try {\n      try (Writer writer = new OutputStreamWriter(new FileOutputStream(findLatestIvyXmlFile), StandardCharsets.UTF_8)) {\n        writer.write(latestIvyXml.toString());\n      }\n      ResolveOptions options = new ResolveOptions();\n      options.setDownload(false);           // Download only module descriptors, not artifacts\n      options.setTransitive(false);         // Resolve only direct dependencies\n      options.setUseCacheOnly(false);       // Download the internet!\n      options.setOutputReport(false);       // Don't print to the console\n      options.setLog(LogOptions.LOG_QUIET); // Don't log to the console\n      options.setConfs(new String[] {\"*\"}); // Resolve all configurations\n      ResolveReport resolveReport = ivy.resolve(findLatestIvyXmlFile.toURI().toURL(), options);\n      IvyNodeElement root = IvyNodeElementAdapter.adapt(resolveReport);\n      for (IvyNodeElement element : root.getDependencies()) {\n        String coordinate = \"/\" + element.getOrganization() + \"/\" + element.getName();\n        Dependency dependency = directDependencies.get(coordinate);\n        if (null == dependency) {\n          log(\"ERROR: the following coordinate key does not appear in \"\n              + centralizedVersionsFile.getName() + \": \" + coordinate, Project.MSG_ERR);\n          success = false;\n        } else {\n          dependency.latestVersion = element.getRevision();\n        }\n      }\n    } catch (IOException e) {\n      log(\"Exception writing to \" + findLatestIvyXmlFile.getPath() + \": \" + e.toString(), Project.MSG_ERR);\n      success = false;\n    } catch (ParseException e) {\n      log(\"Exception parsing filename \" + findLatestIvyXmlFile.getPath() + \": \" + e.toString(), Project.MSG_ERR);\n      success = false;\n    }\n    return success;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e025cf1c07150c8db28879d785db17eb3a66ca9f","date":1598788864,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/tools/src/java/org/apache/lucene/validation/LibVersionsCheckTask#findLatestConflictVersions().mjava","sourceNew":null,"sourceOld":"  private boolean findLatestConflictVersions() {\n    boolean success = true;\n    StringBuilder latestIvyXml = new StringBuilder();\n    latestIvyXml.append(\"<ivy-module version=\\\"2.0\\\">\\n\");\n    latestIvyXml.append(\"  <info organisation=\\\"org.apache.lucene\\\" module=\\\"core-tools-find-latest-revision\\\"/>\\n\");\n    latestIvyXml.append(\"  <configurations>\\n\");\n    latestIvyXml.append(\"    <conf name=\\\"default\\\" transitive=\\\"false\\\"/>\\n\");\n    latestIvyXml.append(\"  </configurations>\\n\");\n    latestIvyXml.append(\"  <dependencies>\\n\");\n    for (Map.Entry<String, Dependency> directDependency : directDependencies.entrySet()) {\n      Dependency dependency = directDependency.getValue();\n      if (dependency.conflictLocations.entrySet().isEmpty()) {\n        continue;\n      }\n      latestIvyXml.append(\"    <dependency org=\\\"\");\n      latestIvyXml.append(dependency.org);\n      latestIvyXml.append(\"\\\" name=\\\"\");\n      latestIvyXml.append(dependency.name);\n      latestIvyXml.append(\"\\\" rev=\\\"latest.release\\\" conf=\\\"default->*\\\"/>\\n\");\n    }\n    latestIvyXml.append(\"  </dependencies>\\n\");\n    latestIvyXml.append(\"</ivy-module>\\n\");\n    File buildDir = new File(commonBuildDir, \"ivy-transitive-resolve\");\n    if ( ! buildDir.exists() && ! buildDir.mkdirs()) {\n      throw new BuildException(\"Could not create temp directory \" + buildDir.getPath());\n    }\n    File findLatestIvyXmlFile = new File(buildDir, \"find.latest.conflicts.ivy.xml\");\n    try {\n      try (Writer writer = new OutputStreamWriter(new FileOutputStream(findLatestIvyXmlFile), StandardCharsets.UTF_8)) {\n        writer.write(latestIvyXml.toString());\n      }\n      ResolveOptions options = new ResolveOptions();\n      options.setDownload(false);           // Download only module descriptors, not artifacts\n      options.setTransitive(false);         // Resolve only direct dependencies\n      options.setUseCacheOnly(false);       // Download the internet!\n      options.setOutputReport(false);       // Don't print to the console\n      options.setLog(LogOptions.LOG_QUIET); // Don't log to the console\n      options.setConfs(new String[] {\"*\"}); // Resolve all configurations\n      ResolveReport resolveReport = ivy.resolve(findLatestIvyXmlFile.toURI().toURL(), options);\n      IvyNodeElement root = IvyNodeElementAdapter.adapt(resolveReport);\n      for (IvyNodeElement element : root.getDependencies()) {\n        String coordinate = \"/\" + element.getOrganization() + \"/\" + element.getName();\n        Dependency dependency = directDependencies.get(coordinate);\n        if (null == dependency) {\n          log(\"ERROR: the following coordinate key does not appear in \"\n              + centralizedVersionsFile.getName() + \": \" + coordinate, Project.MSG_ERR);\n          success = false;\n        } else {\n          dependency.latestVersion = element.getRevision();\n        }\n      }\n    } catch (IOException e) {\n      log(\"Exception writing to \" + findLatestIvyXmlFile.getPath() + \": \" + e.toString(), Project.MSG_ERR);\n      success = false;\n    } catch (ParseException e) {\n      log(\"Exception parsing filename \" + findLatestIvyXmlFile.getPath() + \": \" + e.toString(), Project.MSG_ERR);\n      success = false;\n    }\n    return success;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"151d28379beec3adbc4c091c633cb33e496a2de3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e025cf1c07150c8db28879d785db17eb3a66ca9f":["151d28379beec3adbc4c091c633cb33e496a2de3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e025cf1c07150c8db28879d785db17eb3a66ca9f"]},"commit2Childs":{"151d28379beec3adbc4c091c633cb33e496a2de3":["e025cf1c07150c8db28879d785db17eb3a66ca9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["151d28379beec3adbc4c091c633cb33e496a2de3"],"e025cf1c07150c8db28879d785db17eb3a66ca9f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}