{"path":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene70/TestIndexedDISI#doTestRandom(Directory).mjava","commits":[{"id":"03e17b020972a0d6e8d6823f545571a66646a167","date":1547847724,"type":2,"author":"Toke Eskildsen","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene70/TestIndexedDISI#doTestRandom(Directory).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene70/TestIndexedDISI#doTestRandom(Directory).mjava","sourceNew":"  private void doTestRandom(Directory dir) throws IOException {\n    List<Integer> docs = new ArrayList<>();\n    final int maxStep = TestUtil.nextInt(random(), 1, 1 << TestUtil.nextInt(random(), 2, 20));\n    final int numDocs = TestUtil.nextInt(random(), 1, Math.min(100000, Integer.MAX_VALUE / maxStep));\n    for (int doc = -1, i = 0; i < numDocs; ++i) {\n      doc += TestUtil.nextInt(random(), 1, maxStep);\n      docs.add(doc);\n    }\n    final int maxDoc = docs.get(docs.size() - 1) + TestUtil.nextInt(random(), 1, 100);\n\n    FixedBitSet set = new FixedBitSet(maxDoc);\n    for (int doc : docs) {\n      set.set(doc);\n    }\n\n    doTest(set, dir);\n  }\n\n","sourceOld":"  private void doTestRandom(Directory dir) throws IOException {\n    List<Integer> docs = new ArrayList<>();\n    final int maxStep = TestUtil.nextInt(random(), 1, 1 << TestUtil.nextInt(random(), 2, 20));\n    final int numDocs = TestUtil.nextInt(random(), 1, Math.min(100000, Integer.MAX_VALUE / maxStep));\n    for (int doc = -1, i = 0; i < numDocs; ++i) {\n      doc += TestUtil.nextInt(random(), 1, maxStep);\n      docs.add(doc);\n    }\n    final int maxDoc = docs.get(docs.size() - 1) + TestUtil.nextInt(random(), 1, 100);\n\n    FixedBitSet set = new FixedBitSet(maxDoc);\n    for (int doc : docs) {\n      set.set(doc);\n    }\n\n    doTest(set, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c89f1ef80a9432f4eabaeda9a1e135cd72e60836","date":1547972642,"type":2,"author":"Tommaso Teofili","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene70/TestIndexedDISI#doTestRandom(Directory).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene70/TestIndexedDISI#doTestRandom(Directory).mjava","sourceNew":"  private void doTestRandom(Directory dir) throws IOException {\n    List<Integer> docs = new ArrayList<>();\n    final int maxStep = TestUtil.nextInt(random(), 1, 1 << TestUtil.nextInt(random(), 2, 20));\n    final int numDocs = TestUtil.nextInt(random(), 1, Math.min(100000, Integer.MAX_VALUE / maxStep));\n    for (int doc = -1, i = 0; i < numDocs; ++i) {\n      doc += TestUtil.nextInt(random(), 1, maxStep);\n      docs.add(doc);\n    }\n    final int maxDoc = docs.get(docs.size() - 1) + TestUtil.nextInt(random(), 1, 100);\n\n    FixedBitSet set = new FixedBitSet(maxDoc);\n    for (int doc : docs) {\n      set.set(doc);\n    }\n\n    doTest(set, dir);\n  }\n\n","sourceOld":"  private void doTestRandom(Directory dir) throws IOException {\n    List<Integer> docs = new ArrayList<>();\n    final int maxStep = TestUtil.nextInt(random(), 1, 1 << TestUtil.nextInt(random(), 2, 20));\n    final int numDocs = TestUtil.nextInt(random(), 1, Math.min(100000, Integer.MAX_VALUE / maxStep));\n    for (int doc = -1, i = 0; i < numDocs; ++i) {\n      doc += TestUtil.nextInt(random(), 1, maxStep);\n      docs.add(doc);\n    }\n    final int maxDoc = docs.get(docs.size() - 1) + TestUtil.nextInt(random(), 1, 100);\n\n    FixedBitSet set = new FixedBitSet(maxDoc);\n    for (int doc : docs) {\n      set.set(doc);\n    }\n\n    doTest(set, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57cb6df494f10aeb3fab477b1ce4a9187455a227","date":1574155024,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene70/TestIndexedDISI#doTestRandom(Directory).mjava","sourceNew":null,"sourceOld":"  private void doTestRandom(Directory dir) throws IOException {\n    List<Integer> docs = new ArrayList<>();\n    final int maxStep = TestUtil.nextInt(random(), 1, 1 << TestUtil.nextInt(random(), 2, 20));\n    final int numDocs = TestUtil.nextInt(random(), 1, Math.min(100000, Integer.MAX_VALUE / maxStep));\n    for (int doc = -1, i = 0; i < numDocs; ++i) {\n      doc += TestUtil.nextInt(random(), 1, maxStep);\n      docs.add(doc);\n    }\n    final int maxDoc = docs.get(docs.size() - 1) + TestUtil.nextInt(random(), 1, 100);\n\n    FixedBitSet set = new FixedBitSet(maxDoc);\n    for (int doc : docs) {\n      set.set(doc);\n    }\n\n    doTest(set, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"03e17b020972a0d6e8d6823f545571a66646a167":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","03e17b020972a0d6e8d6823f545571a66646a167"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57cb6df494f10aeb3fab477b1ce4a9187455a227":["03e17b020972a0d6e8d6823f545571a66646a167"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57cb6df494f10aeb3fab477b1ce4a9187455a227"]},"commit2Childs":{"03e17b020972a0d6e8d6823f545571a66646a167":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","57cb6df494f10aeb3fab477b1ce4a9187455a227"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["03e17b020972a0d6e8d6823f545571a66646a167","c89f1ef80a9432f4eabaeda9a1e135cd72e60836"],"57cb6df494f10aeb3fab477b1ce4a9187455a227":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}