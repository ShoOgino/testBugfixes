{"path":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#contains(Edge,double,double).mjava","commits":[{"id":"e4fccad460342b1af30cb328cc8297751a218d78","date":1541177339,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#contains(Edge,double,double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns true if the point crosses this edge subtree an odd number of times\n   * <p>\n   * See <a href=\"https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html\">\n   * https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html</a> for more information.\n   */\n  // ported to java from https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html\n  // original code under the BSD license (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html#License%20to%20Use)\n  //\n  // Copyright (c) 1970-2003, Wm. Randolph Franklin\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n  // documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n  // the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n  // to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n  //\n  // 1. Redistributions of source code must retain the above copyright\n  //    notice, this list of conditions and the following disclaimers.\n  // 2. Redistributions in binary form must reproduce the above copyright\n  //    notice in the documentation and/or other materials provided with\n  //    the distribution.\n  // 3. The name of W. Randolph Franklin may not be used to endorse or\n  //    promote products derived from this Software without specific\n  //    prior written permission.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n  // TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n  // THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n  // CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  // IN THE SOFTWARE.\n  private static boolean contains(Edge tree, double latitude, double longitude) {\n    // crossings algorithm is an odd-even algorithm, so we descend the tree xor'ing results along our path\n    boolean res = false;\n    if (latitude <= tree.max) {\n      if (tree.lat1 > latitude != tree.lat2 > latitude) {\n        if (longitude < (tree.lon1 - tree.lon2) * (latitude - tree.lat2) / (tree.lat1 - tree.lat2) + tree.lon2) {\n          res = true;\n        }\n      }\n      if (tree.left != null) {\n        res ^= contains(tree.left, latitude, longitude);\n      }\n      if (tree.right != null && latitude >= tree.low) {\n        res ^= contains(tree.right, latitude, longitude);\n      }\n    }\n    return res;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc005279ab64cbf458ccef2ada610bc1a04b6139","date":1554992856,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#contains(Edge,double,double,AtomicBoolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#contains(Edge,double,double).mjava","sourceNew":"  /**\n   * Returns true if the point crosses this edge subtree an odd number of times\n   * <p>\n   * See <a href=\"https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html\">\n   * https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html</a> for more information.\n   */\n  // ported to java from https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html\n  // original code under the BSD license (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html#License%20to%20Use)\n  //\n  // Copyright (c) 1970-2003, Wm. Randolph Franklin\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n  // documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n  // the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n  // to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n  //\n  // 1. Redistributions of source code must retain the above copyright\n  //    notice, this list of conditions and the following disclaimers.\n  // 2. Redistributions in binary form must reproduce the above copyright\n  //    notice in the documentation and/or other materials provided with\n  //    the distribution.\n  // 3. The name of W. Randolph Franklin may not be used to endorse or\n  //    promote products derived from this Software without specific\n  //    prior written permission.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n  // TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n  // THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n  // CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  // IN THE SOFTWARE.\n  private static boolean contains(Edge edge, double lat, double lon, AtomicBoolean isOnEdge) {\n    boolean res = false;\n    if (isOnEdge.get() == false && lat <= edge.max) {\n      if (lat == edge.lat1 && lat == edge.lat2 ||\n          (lat <= edge.lat1 && lat >= edge.lat2) != (lat >= edge.lat1 && lat <= edge.lat2)) {\n        if (GeoUtils.orient(edge.lon1, edge.lat1, edge.lon2, edge.lat2, lon, lat) == 0) {\n          // if its on the boundary return true\n          isOnEdge.set(true);\n          return true;\n        } else if (edge.lat1 > lat != edge.lat2 > lat) {\n          res = lon < (edge.lon2 - edge.lon1) * (lat - edge.lat1) / (edge.lat2 - edge.lat1) + edge.lon1;\n        }\n      }\n      if (edge.left != null) {\n        res ^= contains(edge.left, lat, lon, isOnEdge);\n      }\n\n      if (edge.right != null && lat >= edge.low) {\n        res ^= contains(edge.right, lat, lon, isOnEdge);\n      }\n    }\n    return isOnEdge.get() || res;\n  }\n\n","sourceOld":"  /**\n   * Returns true if the point crosses this edge subtree an odd number of times\n   * <p>\n   * See <a href=\"https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html\">\n   * https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html</a> for more information.\n   */\n  // ported to java from https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html\n  // original code under the BSD license (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html#License%20to%20Use)\n  //\n  // Copyright (c) 1970-2003, Wm. Randolph Franklin\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n  // documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n  // the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n  // to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n  //\n  // 1. Redistributions of source code must retain the above copyright\n  //    notice, this list of conditions and the following disclaimers.\n  // 2. Redistributions in binary form must reproduce the above copyright\n  //    notice in the documentation and/or other materials provided with\n  //    the distribution.\n  // 3. The name of W. Randolph Franklin may not be used to endorse or\n  //    promote products derived from this Software without specific\n  //    prior written permission.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n  // TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n  // THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n  // CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  // IN THE SOFTWARE.\n  private static boolean contains(Edge tree, double latitude, double longitude) {\n    // crossings algorithm is an odd-even algorithm, so we descend the tree xor'ing results along our path\n    boolean res = false;\n    if (latitude <= tree.max) {\n      if (tree.lat1 > latitude != tree.lat2 > latitude) {\n        if (longitude < (tree.lon1 - tree.lon2) * (latitude - tree.lat2) / (tree.lat1 - tree.lat2) + tree.lon2) {\n          res = true;\n        }\n      }\n      if (tree.left != null) {\n        res ^= contains(tree.left, latitude, longitude);\n      }\n      if (tree.right != null && latitude >= tree.low) {\n        res ^= contains(tree.right, latitude, longitude);\n      }\n    }\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e4fccad460342b1af30cb328cc8297751a218d78":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fc005279ab64cbf458ccef2ada610bc1a04b6139":["e4fccad460342b1af30cb328cc8297751a218d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fc005279ab64cbf458ccef2ada610bc1a04b6139"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e4fccad460342b1af30cb328cc8297751a218d78"],"e4fccad460342b1af30cb328cc8297751a218d78":["fc005279ab64cbf458ccef2ada610bc1a04b6139"],"fc005279ab64cbf458ccef2ada610bc1a04b6139":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}