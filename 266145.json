{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","sourceNew":"  @Test\n  public void testMultiThreaded() throws Exception {\n    SolrServer gserver = this.getSolrServer();\n    gserver.deleteByQuery( \"*:*\" ); // delete everything!\n    \n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      log.info(\"Started thread: \" + i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n\n    // some of the commits could have failed because maxWarmingSearchers exceeded,\n    // so do a final commit to make sure everything is visible.\n    gserver.commit();\n    \n    query(threadCount * numdocs);\n    log.info(\"done\");\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreaded() throws Exception {\n    SolrServer gserver = this.getSolrServer();\n    gserver.deleteByQuery( \"*:*\" ); // delete everything!\n    \n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      log.info(\"Started thread: \" + i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n\n    // some of the commits could have failed because maxWarmingSearchers exceeded,\n    // so do a final commit to make sure everything is visible.\n    gserver.commit();\n    \n    query(threadCount * numdocs);\n    log.info(\"done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","sourceNew":"  @Test\n  public void testMultiThreaded() throws Exception {\n    SolrServer gserver = this.getSolrServer();\n    gserver.deleteByQuery( \"*:*\" ); // delete everything!\n    \n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      log.info(\"Started thread: \" + i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n\n    // some of the commits could have failed because maxWarmingSearchers exceeded,\n    // so do a final commit to make sure everything is visible.\n    gserver.commit();\n    \n    query(threadCount * numdocs);\n    log.info(\"done\");\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreaded() throws Exception {\n    SolrServer gserver = this.getSolrServer();\n    gserver.deleteByQuery( \"*:*\" ); // delete everything!\n    \n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      log.info(\"Started thread: \" + i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n\n    // some of the commits could have failed because maxWarmingSearchers exceeded,\n    // so do a final commit to make sure everything is visible.\n    gserver.commit();\n    \n    query(threadCount * numdocs);\n    log.info(\"done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","sourceNew":"  @Test\n  public void testMultiThreaded() throws Exception {\n    SolrServer gserver = this.getSolrServer();\n    gserver.deleteByQuery( \"*:*\" ); // delete everything!\n    \n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      log.info(\"Started thread: \" + i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n\n    // some of the commits could have failed because maxWarmingSearchers exceeded,\n    // so do a final commit to make sure everything is visible.\n    gserver.commit();\n    \n    query(threadCount * numdocs);\n    log.info(\"done\");\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreaded() throws Exception {\n    SolrServer gserver = this.getSolrServer();\n    gserver.deleteByQuery( \"*:*\" ); // delete everything!\n    \n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      log.info(\"Started thread: \" + i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n\n    // some of the commits could have failed because maxWarmingSearchers exceeded,\n    // so do a final commit to make sure everything is visible.\n    gserver.commit();\n    \n    query(threadCount * numdocs);\n    log.info(\"done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","sourceNew":"  @Test\n  public void testMultiThreaded() throws Exception {\n    SolrClient client = this.getSolrClient();\n    client.deleteByQuery(\"*:*\"); // delete everything!\n    \n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      log.info(\"Started thread: \" + i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n\n    // some of the commits could have failed because maxWarmingSearchers exceeded,\n    // so do a final commit to make sure everything is visible.\n    client.commit();\n    \n    query(threadCount * numdocs);\n    log.info(\"done\");\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreaded() throws Exception {\n    SolrServer gserver = this.getSolrServer();\n    gserver.deleteByQuery( \"*:*\" ); // delete everything!\n    \n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      log.info(\"Started thread: \" + i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n\n    // some of the commits could have failed because maxWarmingSearchers exceeded,\n    // so do a final commit to make sure everything is visible.\n    gserver.commit();\n    \n    query(threadCount * numdocs);\n    log.info(\"done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6554f36a4636755009195a7840518bf6b4f03d6c","date":1481906808,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","sourceNew":"  @Test\n  public void testMultiThreaded() throws Exception {\n    SolrClient client = this.getSolrClient();\n    client.deleteByQuery(\"*:*\"); // delete everything!\n    \n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      log.info(\"Started thread: \" + i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n\n    // some of the commits could have failed because maxWarmingSearchers exceeded,\n    // so do a final commit to make sure everything is visible.\n    // This should no longer be true as of SOLR-9712 (Solr 6.4)\n    // client.commit();\n    \n    query(threadCount * numdocs);\n    log.info(\"done\");\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreaded() throws Exception {\n    SolrClient client = this.getSolrClient();\n    client.deleteByQuery(\"*:*\"); // delete everything!\n    \n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      log.info(\"Started thread: \" + i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n\n    // some of the commits could have failed because maxWarmingSearchers exceeded,\n    // so do a final commit to make sure everything is visible.\n    client.commit();\n    \n    query(threadCount * numdocs);\n    log.info(\"done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","sourceNew":"  @Test\n  public void testMultiThreaded() throws Exception {\n    SolrClient client = this.getSolrClient();\n    client.deleteByQuery(\"*:*\"); // delete everything!\n    \n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      log.info(\"Started thread: \" + i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n\n    // some of the commits could have failed because maxWarmingSearchers exceeded,\n    // so do a final commit to make sure everything is visible.\n    // This should no longer be true as of SOLR-9712 (Solr 6.4)\n    // client.commit();\n    \n    query(threadCount * numdocs);\n    log.info(\"done\");\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreaded() throws Exception {\n    SolrClient client = this.getSolrClient();\n    client.deleteByQuery(\"*:*\"); // delete everything!\n    \n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      log.info(\"Started thread: \" + i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n\n    // some of the commits could have failed because maxWarmingSearchers exceeded,\n    // so do a final commit to make sure everything is visible.\n    client.commit();\n    \n    query(threadCount * numdocs);\n    log.info(\"done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6dc613ed6f75d1988140301ee8de8fdb056fa337","date":1588034757,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","sourceNew":"  @Test\n  public void testMultiThreaded() throws Exception {\n    SolrClient client = this.getSolrClient();\n    client.deleteByQuery(\"*:*\"); // delete everything!\n    \n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      log.info(\"Started thread: {}\", i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n\n    // some of the commits could have failed because maxWarmingSearchers exceeded,\n    // so do a final commit to make sure everything is visible.\n    // This should no longer be true as of SOLR-9712 (Solr 6.4)\n    // client.commit();\n    \n    query(threadCount * numdocs);\n    log.info(\"done\");\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreaded() throws Exception {\n    SolrClient client = this.getSolrClient();\n    client.deleteByQuery(\"*:*\"); // delete everything!\n    \n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      log.info(\"Started thread: \" + i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n\n    // some of the commits could have failed because maxWarmingSearchers exceeded,\n    // so do a final commit to make sure everything is visible.\n    // This should no longer be true as of SOLR-9712 (Solr 6.4)\n    // client.commit();\n    \n    query(threadCount * numdocs);\n    log.info(\"done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6dc613ed6f75d1988140301ee8de8fdb056fa337":["6554f36a4636755009195a7840518bf6b4f03d6c"],"6554f36a4636755009195a7840518bf6b4f03d6c":["bafca15d8e408346a67f4282ad1143b88023893b"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["bafca15d8e408346a67f4282ad1143b88023893b","6554f36a4636755009195a7840518bf6b4f03d6c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6dc613ed6f75d1988140301ee8de8fdb056fa337"]},"commit2Childs":{"6dc613ed6f75d1988140301ee8de8fdb056fa337":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6554f36a4636755009195a7840518bf6b4f03d6c":["6dc613ed6f75d1988140301ee8de8fdb056fa337","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"bafca15d8e408346a67f4282ad1143b88023893b":["6554f36a4636755009195a7840518bf6b4f03d6c","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}