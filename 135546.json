{"path":"src/java/org/apache/lucene/index/IndexWriter#setMaxBufferedDeleteTerms(int).mjava","commits":[{"id":"42a18cb0bca2c4ac9747f31c7a74fac90c661f39","date":1171363388,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setMaxBufferedDeleteTerms(int).mjava","pathOld":"src/java/org/apache/lucene/index/NewIndexModifier#setMaxBufferedDeleteTerms(int).mjava","sourceNew":"  /**\n   * <p>Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms are applied and flushed. If there are documents\n   * buffered in memory at the time, they are merged and a new segment is\n   * created.</p>\n\n   * <p>The default value is {@link #DEFAULT_MAX_BUFFERED_DELETE_TERMS}.\n   * @throws IllegalArgumentException if maxBufferedDeleteTerms is smaller than 1</p>\n   */\n  public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    if (maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\"maxBufferedDeleteTerms must at least be 1\");\n    this.maxBufferedDeleteTerms = maxBufferedDeleteTerms;\n  }\n\n","sourceOld":"  /**\n   * Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms are applied and flushed. If there are documents\n   * buffered in memory at the time, they are merged and a new Segment is\n   * created. The delete terms are applied appropriately.\n   * <p>\n   * The default value is 10.\n   * @throws IllegalArgumentException if maxBufferedDeleteTerms is smaller than\n   *         1\n   */\n  public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    if (maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\"maxBufferedDeleteTerms must at least be 1\");\n    this.maxBufferedDeleteTerms = maxBufferedDeleteTerms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"328c1568e471f0c6eaa49ec00334ca59e573710f","date":1173897963,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setMaxBufferedDeleteTerms(int).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setMaxBufferedDeleteTerms(int).mjava","sourceNew":"  /**\n   * <p>Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms are applied and flushed. If there are documents\n   * buffered in memory at the time, they are merged and a new segment is\n   * created.</p>\n\n   * <p>The default value is {@link #DEFAULT_MAX_BUFFERED_DELETE_TERMS}.\n   * @throws IllegalArgumentException if maxBufferedDeleteTerms is smaller than 1</p>\n   */\n  public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    ensureOpen();\n    if (maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\"maxBufferedDeleteTerms must at least be 1\");\n    this.maxBufferedDeleteTerms = maxBufferedDeleteTerms;\n  }\n\n","sourceOld":"  /**\n   * <p>Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms are applied and flushed. If there are documents\n   * buffered in memory at the time, they are merged and a new segment is\n   * created.</p>\n\n   * <p>The default value is {@link #DEFAULT_MAX_BUFFERED_DELETE_TERMS}.\n   * @throws IllegalArgumentException if maxBufferedDeleteTerms is smaller than 1</p>\n   */\n  public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    if (maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\"maxBufferedDeleteTerms must at least be 1\");\n    this.maxBufferedDeleteTerms = maxBufferedDeleteTerms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fde68de507dbf344495d7b5e8052866fe5f254ab","date":1189434831,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setMaxBufferedDeleteTerms(int).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setMaxBufferedDeleteTerms(int).mjava","sourceNew":"  /**\n   * <p>Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms are applied and flushed. If there are documents\n   * buffered in memory at the time, they are merged and a new segment is\n   * created.</p>\n\n   * <p>The default value is {@link #DEFAULT_MAX_BUFFERED_DELETE_TERMS}.\n   * @throws IllegalArgumentException if maxBufferedDeleteTerms is smaller than 1</p>\n   */\n  public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    ensureOpen();\n    docWriter.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n  }\n\n","sourceOld":"  /**\n   * <p>Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms are applied and flushed. If there are documents\n   * buffered in memory at the time, they are merged and a new segment is\n   * created.</p>\n\n   * <p>The default value is {@link #DEFAULT_MAX_BUFFERED_DELETE_TERMS}.\n   * @throws IllegalArgumentException if maxBufferedDeleteTerms is smaller than 1</p>\n   */\n  public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    ensureOpen();\n    if (maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\"maxBufferedDeleteTerms must at least be 1\");\n    this.maxBufferedDeleteTerms = maxBufferedDeleteTerms;\n  }\n\n","bugFix":["6b772434f9f358356f8eedc2e017b9ddfb2615ec"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2558ddf9e14a97bc597f5b72bb3ecb5b7f6bba8e","date":1191352543,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setMaxBufferedDeleteTerms(int).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setMaxBufferedDeleteTerms(int).mjava","sourceNew":"  /**\n   * <p>Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms are applied and flushed. If there are documents\n   * buffered in memory at the time, they are merged and a new segment is\n   * created.</p>\n\n   * <p>Disabled by default (writer flushes by RAM usage).</p>\n   * \n   * @throws IllegalArgumentException if maxBufferedDeleteTerms\n   * is enabled but smaller than 1\n   * @see #setRAMBufferSizeMB\n   */\n  public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    ensureOpen();\n    if (maxBufferedDeleteTerms != DISABLE_AUTO_FLUSH\n        && maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\n          \"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    docWriter.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n  }\n\n","sourceOld":"  /**\n   * <p>Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms are applied and flushed. If there are documents\n   * buffered in memory at the time, they are merged and a new segment is\n   * created.</p>\n\n   * <p>The default value is {@link #DEFAULT_MAX_BUFFERED_DELETE_TERMS}.\n   * @throws IllegalArgumentException if maxBufferedDeleteTerms is smaller than 1</p>\n   */\n  public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    ensureOpen();\n    docWriter.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"67006a60923e2124212d3baa0d29b444bcbd8373","date":1191425052,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setMaxBufferedDeleteTerms(int).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setMaxBufferedDeleteTerms(int).mjava","sourceNew":"  /**\n   * <p>Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms are applied and flushed. If there are documents\n   * buffered in memory at the time, they are merged and a new segment is\n   * created.</p>\n\n   * <p>Disabled by default (writer flushes by RAM usage).</p>\n   * \n   * @throws IllegalArgumentException if maxBufferedDeleteTerms\n   * is enabled but smaller than 1\n   * @see #setRAMBufferSizeMB\n   */\n  public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    ensureOpen();\n    if (maxBufferedDeleteTerms != DISABLE_AUTO_FLUSH\n        && maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\n          \"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    docWriter.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n    if (infoStream != null)\n      message(\"setMaxBufferedDeleteTerms \" + maxBufferedDeleteTerms);\n  }\n\n","sourceOld":"  /**\n   * <p>Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms are applied and flushed. If there are documents\n   * buffered in memory at the time, they are merged and a new segment is\n   * created.</p>\n\n   * <p>Disabled by default (writer flushes by RAM usage).</p>\n   * \n   * @throws IllegalArgumentException if maxBufferedDeleteTerms\n   * is enabled but smaller than 1\n   * @see #setRAMBufferSizeMB\n   */\n  public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    ensureOpen();\n    if (maxBufferedDeleteTerms != DISABLE_AUTO_FLUSH\n        && maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\n          \"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    docWriter.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setMaxBufferedDeleteTerms(int).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setMaxBufferedDeleteTerms(int).mjava","sourceNew":"  /**\n   * <p>Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms are applied and flushed. If there are documents\n   * buffered in memory at the time, they are merged and a new segment is\n   * created.</p>\n\n   * <p>Disabled by default (writer flushes by RAM usage).</p>\n   * \n   * @throws IllegalArgumentException if maxBufferedDeleteTerms\n   * is enabled but smaller than 1\n   * @see #setRAMBufferSizeMB\n   * @deprecated use {@link IndexWriterConfig#setMaxBufferedDeleteTerms(int)} instead.\n   */\n  public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    ensureOpen();\n    if (maxBufferedDeleteTerms != DISABLE_AUTO_FLUSH\n        && maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\n          \"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    docWriter.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n    if (infoStream != null)\n      message(\"setMaxBufferedDeleteTerms \" + maxBufferedDeleteTerms);\n    // Required so config.getSimilarity returns the right value. But this will\n    // go away together with the method in 4.0.\n    config.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n  }\n\n","sourceOld":"  /**\n   * <p>Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms are applied and flushed. If there are documents\n   * buffered in memory at the time, they are merged and a new segment is\n   * created.</p>\n\n   * <p>Disabled by default (writer flushes by RAM usage).</p>\n   * \n   * @throws IllegalArgumentException if maxBufferedDeleteTerms\n   * is enabled but smaller than 1\n   * @see #setRAMBufferSizeMB\n   */\n  public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    ensureOpen();\n    if (maxBufferedDeleteTerms != DISABLE_AUTO_FLUSH\n        && maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\n          \"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    docWriter.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n    if (infoStream != null)\n      message(\"setMaxBufferedDeleteTerms \" + maxBufferedDeleteTerms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setMaxBufferedDeleteTerms(int).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setMaxBufferedDeleteTerms(int).mjava","sourceNew":"  /**\n   * <p>Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms are applied and flushed. If there are documents\n   * buffered in memory at the time, they are merged and a new segment is\n   * created.</p>\n\n   * <p>Disabled by default (writer flushes by RAM usage).</p>\n   * \n   * @throws IllegalArgumentException if maxBufferedDeleteTerms\n   * is enabled but smaller than 1\n   * @see #setRAMBufferSizeMB\n   */\n  public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    ensureOpen();\n    if (maxBufferedDeleteTerms != DISABLE_AUTO_FLUSH\n        && maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\n          \"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    docWriter.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n    if (infoStream != null)\n      message(\"setMaxBufferedDeleteTerms \" + maxBufferedDeleteTerms);\n  }\n\n","sourceOld":"  /**\n   * <p>Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms are applied and flushed. If there are documents\n   * buffered in memory at the time, they are merged and a new segment is\n   * created.</p>\n\n   * <p>Disabled by default (writer flushes by RAM usage).</p>\n   * \n   * @throws IllegalArgumentException if maxBufferedDeleteTerms\n   * is enabled but smaller than 1\n   * @see #setRAMBufferSizeMB\n   * @deprecated use {@link IndexWriterConfig#setMaxBufferedDeleteTerms(int)} instead.\n   */\n  public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    ensureOpen();\n    if (maxBufferedDeleteTerms != DISABLE_AUTO_FLUSH\n        && maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\n          \"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    docWriter.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n    if (infoStream != null)\n      message(\"setMaxBufferedDeleteTerms \" + maxBufferedDeleteTerms);\n    // Required so config.getSimilarity returns the right value. But this will\n    // go away together with the method in 4.0.\n    config.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setMaxBufferedDeleteTerms(int).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setMaxBufferedDeleteTerms(int).mjava","sourceNew":"  /**\n   * <p>Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms are applied and flushed. If there are documents\n   * buffered in memory at the time, they are merged and a new segment is\n   * created.</p>\n\n   * <p>Disabled by default (writer flushes by RAM usage).</p>\n   * \n   * @throws IllegalArgumentException if maxBufferedDeleteTerms\n   * is enabled but smaller than 1\n   * @see #setRAMBufferSizeMB\n   * @deprecated use {@link IndexWriterConfig#setMaxBufferedDeleteTerms(int)} instead.\n   */\n  public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    ensureOpen();\n    if (maxBufferedDeleteTerms != DISABLE_AUTO_FLUSH\n        && maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\n          \"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    docWriter.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n    if (infoStream != null)\n      message(\"setMaxBufferedDeleteTerms \" + maxBufferedDeleteTerms);\n    // Required so config.getSimilarity returns the right value. But this will\n    // go away together with the method in 4.0.\n    config.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n  }\n\n","sourceOld":"  /**\n   * <p>Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms are applied and flushed. If there are documents\n   * buffered in memory at the time, they are merged and a new segment is\n   * created.</p>\n\n   * <p>Disabled by default (writer flushes by RAM usage).</p>\n   * \n   * @throws IllegalArgumentException if maxBufferedDeleteTerms\n   * is enabled but smaller than 1\n   * @see #setRAMBufferSizeMB\n   */\n  public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    ensureOpen();\n    if (maxBufferedDeleteTerms != DISABLE_AUTO_FLUSH\n        && maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\n          \"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    docWriter.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n    if (infoStream != null)\n      message(\"setMaxBufferedDeleteTerms \" + maxBufferedDeleteTerms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#setMaxBufferedDeleteTerms(int).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setMaxBufferedDeleteTerms(int).mjava","sourceNew":"  /**\n   * <p>Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms are applied and flushed. If there are documents\n   * buffered in memory at the time, they are merged and a new segment is\n   * created.</p>\n\n   * <p>Disabled by default (writer flushes by RAM usage).</p>\n   * \n   * @throws IllegalArgumentException if maxBufferedDeleteTerms\n   * is enabled but smaller than 1\n   * @see #setRAMBufferSizeMB\n   * @deprecated use {@link IndexWriterConfig#setMaxBufferedDeleteTerms(int)} instead.\n   */\n  public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    ensureOpen();\n    if (maxBufferedDeleteTerms != DISABLE_AUTO_FLUSH\n        && maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\n          \"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    docWriter.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n    if (infoStream != null)\n      message(\"setMaxBufferedDeleteTerms \" + maxBufferedDeleteTerms);\n    // Required so config.getSimilarity returns the right value. But this will\n    // go away together with the method in 4.0.\n    config.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n  }\n\n","sourceOld":"  /**\n   * <p>Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms are applied and flushed. If there are documents\n   * buffered in memory at the time, they are merged and a new segment is\n   * created.</p>\n\n   * <p>Disabled by default (writer flushes by RAM usage).</p>\n   * \n   * @throws IllegalArgumentException if maxBufferedDeleteTerms\n   * is enabled but smaller than 1\n   * @see #setRAMBufferSizeMB\n   * @deprecated use {@link IndexWriterConfig#setMaxBufferedDeleteTerms(int)} instead.\n   */\n  public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    ensureOpen();\n    if (maxBufferedDeleteTerms != DISABLE_AUTO_FLUSH\n        && maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\n          \"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    docWriter.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n    if (infoStream != null)\n      message(\"setMaxBufferedDeleteTerms \" + maxBufferedDeleteTerms);\n    // Required so config.getSimilarity returns the right value. But this will\n    // go away together with the method in 4.0.\n    config.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"328c1568e471f0c6eaa49ec00334ca59e573710f":["42a18cb0bca2c4ac9747f31c7a74fac90c661f39"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"fde68de507dbf344495d7b5e8052866fe5f254ab":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"42a18cb0bca2c4ac9747f31c7a74fac90c661f39":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"67006a60923e2124212d3baa0d29b444bcbd8373":["2558ddf9e14a97bc597f5b72bb3ecb5b7f6bba8e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["67006a60923e2124212d3baa0d29b444bcbd8373"],"2558ddf9e14a97bc597f5b72bb3ecb5b7f6bba8e":["fde68de507dbf344495d7b5e8052866fe5f254ab"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"328c1568e471f0c6eaa49ec00334ca59e573710f":["fde68de507dbf344495d7b5e8052866fe5f254ab"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"fde68de507dbf344495d7b5e8052866fe5f254ab":["2558ddf9e14a97bc597f5b72bb3ecb5b7f6bba8e"],"42a18cb0bca2c4ac9747f31c7a74fac90c661f39":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["42a18cb0bca2c4ac9747f31c7a74fac90c661f39"],"67006a60923e2124212d3baa0d29b444bcbd8373":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"2558ddf9e14a97bc597f5b72bb3ecb5b7f6bba8e":["67006a60923e2124212d3baa0d29b444bcbd8373"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}