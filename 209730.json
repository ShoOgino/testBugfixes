{"path":"lucene/backwards/src/java/org/apache/lucene/store/DataOutput#writeChars(String,int,int).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/store/DataOutput#writeChars(String,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Writes a sub sequence of characters from s as the old\n   *  format (modified UTF-8 encoded bytes).\n   * @param s the source of the characters\n   * @param start the first character in the sequence\n   * @param length the number of characters in the sequence\n   * @deprecated -- please pre-convert to utf8 bytes\n   * instead or use {@link #writeString}\n   */\n  @Deprecated\n  public void writeChars(String s, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      final int code = s.charAt(i);\n      if (code >= 0x01 && code <= 0x7F)\n        writeByte((byte)code);\n      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {\n        writeByte((byte)(0xC0 | (code >> 6)));\n        writeByte((byte)(0x80 | (code & 0x3F)));\n      } else {\n        writeByte((byte)(0xE0 | (code >>> 12)));\n        writeByte((byte)(0x80 | ((code >> 6) & 0x3F)));\n        writeByte((byte)(0x80 | (code & 0x3F)));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/store/DataOutput#writeChars(String,int,int).mjava","sourceNew":null,"sourceOld":"  /** Writes a sub sequence of characters from s as the old\n   *  format (modified UTF-8 encoded bytes).\n   * @param s the source of the characters\n   * @param start the first character in the sequence\n   * @param length the number of characters in the sequence\n   * @deprecated -- please pre-convert to utf8 bytes\n   * instead or use {@link #writeString}\n   */\n  @Deprecated\n  public void writeChars(String s, int start, int length)\n       throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      final int code = s.charAt(i);\n      if (code >= 0x01 && code <= 0x7F)\n        writeByte((byte)code);\n      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {\n        writeByte((byte)(0xC0 | (code >> 6)));\n        writeByte((byte)(0x80 | (code & 0x3F)));\n      } else {\n        writeByte((byte)(0xE0 | (code >>> 12)));\n        writeByte((byte)(0x80 | ((code >> 6) & 0x3F)));\n        writeByte((byte)(0x80 | (code & 0x3F)));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}