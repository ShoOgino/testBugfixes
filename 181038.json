{"path":"src/test/org/apache/lucene/index/TestIndexReaderClone#testSegmentReaderCloseReferencing().mjava","commits":[{"id":"6db660b56f04fdb2853d25cdee8ee0d36559a521","date":1233313968,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderClone#testSegmentReaderCloseReferencing().mjava","pathOld":"/dev/null","sourceNew":"  public void testSegmentReaderCloseReferencing() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    SegmentReader origSegmentReader = (SegmentReader) IndexReader.open(dir1);\n    origSegmentReader.deleteDocument(1);\n    origSegmentReader.setNorm(4, \"field1\", 0.5f);\n\n    SegmentReader clonedSegmentReader = (SegmentReader) origSegmentReader\n        .clone();\n    assertDelDocsRefCountEquals(2, origSegmentReader);\n    origSegmentReader.close();\n    assertDelDocsRefCountEquals(1, origSegmentReader);\n    // check the norm refs\n    Norm norm = (Norm) clonedSegmentReader.norms.get(\"field1\");\n    assertEquals(1, norm.bytesRef().refCount());\n    clonedSegmentReader.close();\n    dir1.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1","date":1244392278,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderClone#testSegmentReaderCloseReferencing().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderClone#testSegmentReaderCloseReferencing().mjava","sourceNew":"  public void testSegmentReaderCloseReferencing() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    SegmentReader origSegmentReader = SegmentReader.getOnlySegmentReader(dir1);\n    origSegmentReader.deleteDocument(1);\n    origSegmentReader.setNorm(4, \"field1\", 0.5f);\n\n    SegmentReader clonedSegmentReader = (SegmentReader) origSegmentReader\n        .clone();\n    assertDelDocsRefCountEquals(2, origSegmentReader);\n    origSegmentReader.close();\n    assertDelDocsRefCountEquals(1, origSegmentReader);\n    // check the norm refs\n    Norm norm = (Norm) clonedSegmentReader.norms.get(\"field1\");\n    assertEquals(1, norm.bytesRef().refCount());\n    clonedSegmentReader.close();\n    dir1.close();\n  }\n\n","sourceOld":"  public void testSegmentReaderCloseReferencing() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    SegmentReader origSegmentReader = (SegmentReader) IndexReader.open(dir1);\n    origSegmentReader.deleteDocument(1);\n    origSegmentReader.setNorm(4, \"field1\", 0.5f);\n\n    SegmentReader clonedSegmentReader = (SegmentReader) origSegmentReader\n        .clone();\n    assertDelDocsRefCountEquals(2, origSegmentReader);\n    origSegmentReader.close();\n    assertDelDocsRefCountEquals(1, origSegmentReader);\n    // check the norm refs\n    Norm norm = (Norm) clonedSegmentReader.norms.get(\"field1\");\n    assertEquals(1, norm.bytesRef().refCount());\n    clonedSegmentReader.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef82ff03e4016c705811b2658e81471a645c0e49","date":1255900293,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderClone#testSegmentReaderCloseReferencing().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderClone#testSegmentReaderCloseReferencing().mjava","sourceNew":"  public void testSegmentReaderCloseReferencing() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    SegmentReader origSegmentReader = SegmentReader.getOnlySegmentReader(dir1);\n    origSegmentReader.deleteDocument(1);\n    origSegmentReader.setNorm(4, \"field1\", 0.5f);\n\n    SegmentReader clonedSegmentReader = (SegmentReader) origSegmentReader\n        .clone();\n    assertDelDocsRefCountEquals(2, origSegmentReader);\n    origSegmentReader.close();\n    assertDelDocsRefCountEquals(1, origSegmentReader);\n    // check the norm refs\n    Norm norm = clonedSegmentReader.norms.get(\"field1\");\n    assertEquals(1, norm.bytesRef().refCount());\n    clonedSegmentReader.close();\n    dir1.close();\n  }\n\n","sourceOld":"  public void testSegmentReaderCloseReferencing() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    SegmentReader origSegmentReader = SegmentReader.getOnlySegmentReader(dir1);\n    origSegmentReader.deleteDocument(1);\n    origSegmentReader.setNorm(4, \"field1\", 0.5f);\n\n    SegmentReader clonedSegmentReader = (SegmentReader) origSegmentReader\n        .clone();\n    assertDelDocsRefCountEquals(2, origSegmentReader);\n    origSegmentReader.close();\n    assertDelDocsRefCountEquals(1, origSegmentReader);\n    // check the norm refs\n    Norm norm = (Norm) clonedSegmentReader.norms.get(\"field1\");\n    assertEquals(1, norm.bytesRef().refCount());\n    clonedSegmentReader.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8514024f885b40613b5ec91876ce5e9d2167d89","date":1260313529,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderClone#testSegmentReaderCloseReferencing().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderClone#testSegmentReaderCloseReferencing().mjava","sourceNew":"  public void testSegmentReaderCloseReferencing() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    SegmentReader origSegmentReader = SegmentReader.getOnlySegmentReader(dir1);\n    origSegmentReader.deleteDocument(1);\n    origSegmentReader.setNorm(4, \"field1\", 0.5f);\n\n    SegmentReader clonedSegmentReader = (SegmentReader) origSegmentReader\n        .clone();\n    assertDelDocsRefCountEquals(2, origSegmentReader);\n    origSegmentReader.close();\n    assertDelDocsRefCountEquals(1, origSegmentReader);\n    // check the norm refs\n    Norm norm = clonedSegmentReader.norms.get(\"field1\");\n    assertEquals(1, norm.bytesRef().get());\n    clonedSegmentReader.close();\n    dir1.close();\n  }\n\n","sourceOld":"  public void testSegmentReaderCloseReferencing() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    SegmentReader origSegmentReader = SegmentReader.getOnlySegmentReader(dir1);\n    origSegmentReader.deleteDocument(1);\n    origSegmentReader.setNorm(4, \"field1\", 0.5f);\n\n    SegmentReader clonedSegmentReader = (SegmentReader) origSegmentReader\n        .clone();\n    assertDelDocsRefCountEquals(2, origSegmentReader);\n    origSegmentReader.close();\n    assertDelDocsRefCountEquals(1, origSegmentReader);\n    // check the norm refs\n    Norm norm = clonedSegmentReader.norms.get(\"field1\");\n    assertEquals(1, norm.bytesRef().refCount());\n    clonedSegmentReader.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testSegmentReaderCloseReferencing().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderClone#testSegmentReaderCloseReferencing().mjava","sourceNew":"  public void testSegmentReaderCloseReferencing() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    SegmentReader origSegmentReader = SegmentReader.getOnlySegmentReader(dir1);\n    origSegmentReader.deleteDocument(1);\n    origSegmentReader.setNorm(4, \"field1\", 0.5f);\n\n    SegmentReader clonedSegmentReader = (SegmentReader) origSegmentReader\n        .clone();\n    assertDelDocsRefCountEquals(2, origSegmentReader);\n    origSegmentReader.close();\n    assertDelDocsRefCountEquals(1, origSegmentReader);\n    // check the norm refs\n    Norm norm = clonedSegmentReader.norms.get(\"field1\");\n    assertEquals(1, norm.bytesRef().get());\n    clonedSegmentReader.close();\n    dir1.close();\n  }\n\n","sourceOld":"  public void testSegmentReaderCloseReferencing() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    SegmentReader origSegmentReader = SegmentReader.getOnlySegmentReader(dir1);\n    origSegmentReader.deleteDocument(1);\n    origSegmentReader.setNorm(4, \"field1\", 0.5f);\n\n    SegmentReader clonedSegmentReader = (SegmentReader) origSegmentReader\n        .clone();\n    assertDelDocsRefCountEquals(2, origSegmentReader);\n    origSegmentReader.close();\n    assertDelDocsRefCountEquals(1, origSegmentReader);\n    // check the norm refs\n    Norm norm = clonedSegmentReader.norms.get(\"field1\");\n    assertEquals(1, norm.bytesRef().get());\n    clonedSegmentReader.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6db660b56f04fdb2853d25cdee8ee0d36559a521":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["6db660b56f04fdb2853d25cdee8ee0d36559a521"],"ef82ff03e4016c705811b2658e81471a645c0e49":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d8514024f885b40613b5ec91876ce5e9d2167d89":["ef82ff03e4016c705811b2658e81471a645c0e49"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d8514024f885b40613b5ec91876ce5e9d2167d89"]},"commit2Childs":{"6db660b56f04fdb2853d25cdee8ee0d36559a521":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["ef82ff03e4016c705811b2658e81471a645c0e49"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6db660b56f04fdb2853d25cdee8ee0d36559a521"],"ef82ff03e4016c705811b2658e81471a645c0e49":["d8514024f885b40613b5ec91876ce5e9d2167d89"],"d8514024f885b40613b5ec91876ce5e9d2167d89":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}