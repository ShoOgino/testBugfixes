{"path":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ShardHandler,String,ZkStateReader,String).mjava","commits":[{"id":"33d0ed80b7b47e34ad3ff033a77544563aba3085","date":1341244632,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ShardHandler,String,ZkStateReader,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ZkStateReader,String).mjava","sourceNew":"  public Overseer(ShardHandler shardHandler, String adminPath, final ZkStateReader reader, final String id) throws KeeperException, InterruptedException {\n    log.info(\"Overseer (id=\" + id + \") starting\");\n    createOverseerNode(reader.getZkClient());\n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer state updater.\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(reader, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n    \n    ThreadGroup ccTg = new ThreadGroup(\"Overseer collection creation process.\");\n    Thread ccThread = new Thread(ccTg, new OverseerCollectionProcessor(reader, id, shardHandler, adminPath));\n    ccThread.setDaemon(true);\n    ccThread.start();\n  }\n\n","sourceOld":"  public Overseer(final ZkStateReader reader, final String id) {\n    log.info(\"Overseer (id=\" + id + \") starting\");\n    createOverseerNode(reader.getZkClient());\n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer state updater.\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(reader, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ShardHandler,String,ZkStateReader,String).mjava","pathOld":"/dev/null","sourceNew":"  public Overseer(ShardHandler shardHandler, String adminPath, final ZkStateReader reader, final String id) throws KeeperException, InterruptedException {\n    log.info(\"Overseer (id=\" + id + \") starting\");\n    createOverseerNode(reader.getZkClient());\n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer state updater.\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(reader, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n    \n    ThreadGroup ccTg = new ThreadGroup(\"Overseer collection creation process.\");\n    Thread ccThread = new Thread(ccTg, new OverseerCollectionProcessor(reader, id, shardHandler, adminPath));\n    ccThread.setDaemon(true);\n    ccThread.start();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"938e4fd7b1e4b34da1650edba7471764bbfaefde","date":1344033248,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#start(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ShardHandler,String,ZkStateReader,String).mjava","sourceNew":"  public void start(String id) {\n    log.info(\"Overseer (id=\" + id + \") starting\");\n    createOverseerNode(reader.getZkClient());\n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer state updater.\");\n    updaterThread = new Thread(tg, new CloudStateUpdater(reader, id));\n    updaterThread.setDaemon(true);\n\n    ThreadGroup ccTg = new ThreadGroup(\"Overseer collection creation process.\");\n    ccThread = new Thread(ccTg, new OverseerCollectionProcessor(reader, id, shardHandler, adminPath), \n        \"Overseer-\" + id);\n    ccThread.setDaemon(true);\n    \n    updaterThread.start();\n    ccThread.start();\n  }\n\n","sourceOld":"  public Overseer(ShardHandler shardHandler, String adminPath, final ZkStateReader reader, final String id) throws KeeperException, InterruptedException {\n    log.info(\"Overseer (id=\" + id + \") starting\");\n    createOverseerNode(reader.getZkClient());\n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer state updater.\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(reader, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n    \n    ThreadGroup ccTg = new ThreadGroup(\"Overseer collection creation process.\");\n    Thread ccThread = new Thread(ccTg, new OverseerCollectionProcessor(reader, id, shardHandler, adminPath));\n    ccThread.setDaemon(true);\n    ccThread.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#start(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ShardHandler,String,ZkStateReader,String).mjava","sourceNew":"  public void start(String id) {\n    log.info(\"Overseer (id=\" + id + \") starting\");\n    createOverseerNode(reader.getZkClient());\n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer state updater.\");\n    updaterThread = new Thread(tg, new ClusterStateUpdater(reader, id));\n    updaterThread.setDaemon(true);\n\n    ThreadGroup ccTg = new ThreadGroup(\"Overseer collection creation process.\");\n    ccThread = new Thread(ccTg, new OverseerCollectionProcessor(reader, id, shardHandler, adminPath), \n        \"Overseer-\" + id);\n    ccThread.setDaemon(true);\n    \n    updaterThread.start();\n    ccThread.start();\n  }\n\n","sourceOld":"  public Overseer(ShardHandler shardHandler, String adminPath, final ZkStateReader reader, final String id) throws KeeperException, InterruptedException {\n    log.info(\"Overseer (id=\" + id + \") starting\");\n    createOverseerNode(reader.getZkClient());\n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer state updater.\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(reader, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n    \n    ThreadGroup ccTg = new ThreadGroup(\"Overseer collection creation process.\");\n    Thread ccThread = new Thread(ccTg, new OverseerCollectionProcessor(reader, id, shardHandler, adminPath));\n    ccThread.setDaemon(true);\n    ccThread.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ShardHandler,String,ZkStateReader,String).mjava","sourceNew":null,"sourceOld":"  public Overseer(ShardHandler shardHandler, String adminPath, final ZkStateReader reader, final String id) throws KeeperException, InterruptedException {\n    log.info(\"Overseer (id=\" + id + \") starting\");\n    createOverseerNode(reader.getZkClient());\n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer state updater.\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(reader, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n    \n    ThreadGroup ccTg = new ThreadGroup(\"Overseer collection creation process.\");\n    Thread ccThread = new Thread(ccTg, new OverseerCollectionProcessor(reader, id, shardHandler, adminPath));\n    ccThread.setDaemon(true);\n    ccThread.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"33d0ed80b7b47e34ad3ff033a77544563aba3085":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"938e4fd7b1e4b34da1650edba7471764bbfaefde":["33d0ed80b7b47e34ad3ff033a77544563aba3085"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","33d0ed80b7b47e34ad3ff033a77544563aba3085"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["33d0ed80b7b47e34ad3ff033a77544563aba3085","938e4fd7b1e4b34da1650edba7471764bbfaefde"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["fe33227f6805edab2036cbb80645cc4e2d1fa424","938e4fd7b1e4b34da1650edba7471764bbfaefde"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["938e4fd7b1e4b34da1650edba7471764bbfaefde"]},"commit2Childs":{"33d0ed80b7b47e34ad3ff033a77544563aba3085":["938e4fd7b1e4b34da1650edba7471764bbfaefde","fe33227f6805edab2036cbb80645cc4e2d1fa424","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"938e4fd7b1e4b34da1650edba7471764bbfaefde":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["8fd5be977c105554c6a7b68afcdbc511439723ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["33d0ed80b7b47e34ad3ff033a77544563aba3085","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}