{"path":"lucene/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, new WhitespaceAnalyzer(Version.LUCENE_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexesNoOptimize(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, new WhitespaceAnalyzer(Version.LUCENE_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexesNoOptimize(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, new WhitespaceAnalyzer(Version.LUCENE_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, new WhitespaceAnalyzer(Version.LUCENE_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexesNoOptimize(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"31fd188d5e34d3af6691f8428fecc2d4665e2d56","date":1309225455,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, new WhitespaceAnalyzer(Version.LUCENE_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, new WhitespaceAnalyzer(Version.LUCENE_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, new WhitespaceAnalyzer(Version.LUCENE_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"31fd188d5e34d3af6691f8428fecc2d4665e2d56":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["31fd188d5e34d3af6691f8428fecc2d4665e2d56"],"2553b00f699380c64959ccb27991289aae87be2e":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6","31fd188d5e34d3af6691f8428fecc2d4665e2d56"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6","31fd188d5e34d3af6691f8428fecc2d4665e2d56"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"31fd188d5e34d3af6691f8428fecc2d4665e2d56":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2553b00f699380c64959ccb27991289aae87be2e":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["31fd188d5e34d3af6691f8428fecc2d4665e2d56","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}