{"path":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#doIterate2(BitSet,FixedBitSet).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#doIterate2(BitSet,FixedBitSet).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestFixedBitSet#doIterate2(BitSet,FixedBitSet).mjava","sourceNew":"  void doIterate2(BitSet a, FixedBitSet b) throws IOException {\n    int aa=-1,bb=-1;\n    DocIdSetIterator iterator = b.iterator();\n    do {\n      aa = a.nextSetBit(aa+1);\n      bb = random.nextBoolean() ? iterator.nextDoc() : iterator.advance(bb + 1);\n      assertEquals(aa == -1 ? DocIdSetIterator.NO_MORE_DOCS : aa, bb);\n    } while (aa>=0);\n  }\n\n","sourceOld":"  void doIterate2(BitSet a, FixedBitSet b) throws IOException {\n    int aa=-1,bb=-1;\n    DocIdSetIterator iterator = b.iterator();\n    do {\n      aa = a.nextSetBit(aa+1);\n      bb = random.nextBoolean() ? iterator.nextDoc() : iterator.advance(bb + 1);\n      assertEquals(aa == -1 ? DocIdSetIterator.NO_MORE_DOCS : aa, bb);\n    } while (aa>=0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#doIterate2(BitSet,FixedBitSet).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#doIterate2(BitSet,FixedBitSet).mjava","sourceNew":"  void doIterate2(BitSet a, FixedBitSet b) throws IOException {\n    int aa=-1,bb=-1;\n    DocIdSetIterator iterator = b.iterator();\n    do {\n      aa = a.nextSetBit(aa+1);\n      bb = random().nextBoolean() ? iterator.nextDoc() : iterator.advance(bb + 1);\n      assertEquals(aa == -1 ? DocIdSetIterator.NO_MORE_DOCS : aa, bb);\n    } while (aa>=0);\n  }\n\n","sourceOld":"  void doIterate2(BitSet a, FixedBitSet b) throws IOException {\n    int aa=-1,bb=-1;\n    DocIdSetIterator iterator = b.iterator();\n    do {\n      aa = a.nextSetBit(aa+1);\n      bb = random.nextBoolean() ? iterator.nextDoc() : iterator.advance(bb + 1);\n      assertEquals(aa == -1 ? DocIdSetIterator.NO_MORE_DOCS : aa, bb);\n    } while (aa>=0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80c55596a764e2d397e982828e75fcac5ce430a0","date":1413987559,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#doIterate2(BitSet,FixedBitSet).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#doIterate2(BitSet,FixedBitSet).mjava","sourceNew":"  void doIterate2(BitSet a, FixedBitSet b) throws IOException {\n    int aa=-1,bb=-1;\n    DocIdSetIterator iterator = new FixedBitSetIterator(b, 0);\n    do {\n      aa = a.nextSetBit(aa+1);\n      bb = random().nextBoolean() ? iterator.nextDoc() : iterator.advance(bb + 1);\n      assertEquals(aa == -1 ? DocIdSetIterator.NO_MORE_DOCS : aa, bb);\n    } while (aa>=0);\n  }\n\n","sourceOld":"  void doIterate2(BitSet a, FixedBitSet b) throws IOException {\n    int aa=-1,bb=-1;\n    DocIdSetIterator iterator = b.iterator();\n    do {\n      aa = a.nextSetBit(aa+1);\n      bb = random().nextBoolean() ? iterator.nextDoc() : iterator.advance(bb + 1);\n      assertEquals(aa == -1 ? DocIdSetIterator.NO_MORE_DOCS : aa, bb);\n    } while (aa>=0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e","date":1414135939,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#doIterate2(java.util.BitSet,FixedBitSet).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#doIterate2(BitSet,FixedBitSet).mjava","sourceNew":"  void doIterate2(java.util.BitSet a, FixedBitSet b) throws IOException {\n    int aa=-1,bb=-1;\n    DocIdSetIterator iterator = new BitSetIterator(b, 0);\n    do {\n      aa = a.nextSetBit(aa+1);\n      bb = random().nextBoolean() ? iterator.nextDoc() : iterator.advance(bb + 1);\n      assertEquals(aa == -1 ? DocIdSetIterator.NO_MORE_DOCS : aa, bb);\n    } while (aa>=0);\n  }\n\n","sourceOld":"  void doIterate2(BitSet a, FixedBitSet b) throws IOException {\n    int aa=-1,bb=-1;\n    DocIdSetIterator iterator = new FixedBitSetIterator(b, 0);\n    do {\n      aa = a.nextSetBit(aa+1);\n      bb = random().nextBoolean() ? iterator.nextDoc() : iterator.advance(bb + 1);\n      assertEquals(aa == -1 ? DocIdSetIterator.NO_MORE_DOCS : aa, bb);\n    } while (aa>=0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80c55596a764e2d397e982828e75fcac5ce430a0":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["80c55596a764e2d397e982828e75fcac5ce430a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"80c55596a764e2d397e982828e75fcac5ce430a0":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["80c55596a764e2d397e982828e75fcac5ce430a0"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}