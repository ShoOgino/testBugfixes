{"path":"lucene/src/java/org/apache/lucene/util/IOUtils#writeLength(DataOutput,BytesRef).mjava","commits":[{"id":"01f60198ece724a6e96cd0b45f289cf42ff83d4f","date":1286864103,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/IOUtils#writeLength(DataOutput,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Writes the length of the {@link BytesRef} as either a one or two bytes to\n   * the {@link DataOutput} and returns the number of bytes used.\n   * \n   * @param datOut\n   *          the output to write to\n   * @param bytes\n   *          the length to write\n   * @return the length of the {@link BytesRef} as either a one or two bytes to\n   *         the {@link DataOutput} and returns the number of bytes used.\n   * @throws IOException\n   *           if datOut throws an {@link IOException}\n   */\n  public static int writeLength(DataOutput datOut, BytesRef bytes)\n      throws IOException {\n    final int length = bytes.length;\n    if (length < 128) {\n      // 1 byte to store length\n      datOut.writeByte((byte) length);\n      return 1;\n    } else {\n      // 2 byte to store length\n      datOut.writeByte((byte) (0x80 | (length & 0x7f)));\n      datOut.writeByte((byte) ((length >> 7) & 0xff));\n      return 2;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23b28eea49e75cc98d5b2b3301999539352e3fdc","date":1290004199,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/util/IOUtils#writeLength(DataOutput,BytesRef).mjava","sourceNew":null,"sourceOld":"  /**\n   * Writes the length of the {@link BytesRef} as either a one or two bytes to\n   * the {@link DataOutput} and returns the number of bytes used.\n   * \n   * @param datOut\n   *          the output to write to\n   * @param bytes\n   *          the length to write\n   * @return the length of the {@link BytesRef} as either a one or two bytes to\n   *         the {@link DataOutput} and returns the number of bytes used.\n   * @throws IOException\n   *           if datOut throws an {@link IOException}\n   */\n  public static int writeLength(DataOutput datOut, BytesRef bytes)\n      throws IOException {\n    final int length = bytes.length;\n    if (length < 128) {\n      // 1 byte to store length\n      datOut.writeByte((byte) length);\n      return 1;\n    } else {\n      // 2 byte to store length\n      datOut.writeByte((byte) (0x80 | (length & 0x7f)));\n      datOut.writeByte((byte) ((length >> 7) & 0xff));\n      return 2;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"23b28eea49e75cc98d5b2b3301999539352e3fdc":["01f60198ece724a6e96cd0b45f289cf42ff83d4f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["01f60198ece724a6e96cd0b45f289cf42ff83d4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["23b28eea49e75cc98d5b2b3301999539352e3fdc"],"23b28eea49e75cc98d5b2b3301999539352e3fdc":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["23b28eea49e75cc98d5b2b3301999539352e3fdc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}