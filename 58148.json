{"path":"lucene/backwards/src/java/org/apache/lucene/document/Field#setValue(String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/document/Field#setValue(String).mjava","pathOld":"backwards/src/java/org/apache/lucene/document/Field#setValue(String).mjava","sourceNew":"  /** <p>Expert: change the value of this field.  This can\n   *  be used during indexing to re-use a single Field\n   *  instance to improve indexing speed by avoiding GC cost\n   *  of new'ing and reclaiming Field instances.  Typically\n   *  a single {@link Document} instance is re-used as\n   *  well.  This helps most on small documents.</p>\n   * \n   *  <p>Each Field instance should only be used once\n   *  within a single {@link Document} instance.  See <a\n   *  href=\"http://wiki.apache.org/lucene-java/ImproveIndexingSpeed\">ImproveIndexingSpeed</a>\n   *  for details.</p> */\n  public void setValue(String value) {\n    if (isBinary) {\n      throw new IllegalArgumentException(\"cannot set a String value on a binary field\");\n    }\n    fieldsData = value;\n  }\n\n","sourceOld":"  /** <p>Expert: change the value of this field.  This can\n   *  be used during indexing to re-use a single Field\n   *  instance to improve indexing speed by avoiding GC cost\n   *  of new'ing and reclaiming Field instances.  Typically\n   *  a single {@link Document} instance is re-used as\n   *  well.  This helps most on small documents.</p>\n   * \n   *  <p>Each Field instance should only be used once\n   *  within a single {@link Document} instance.  See <a\n   *  href=\"http://wiki.apache.org/lucene-java/ImproveIndexingSpeed\">ImproveIndexingSpeed</a>\n   *  for details.</p> */\n  public void setValue(String value) {\n    if (isBinary) {\n      throw new IllegalArgumentException(\"cannot set a String value on a binary field\");\n    }\n    fieldsData = value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/document/Field#setValue(String).mjava","sourceNew":null,"sourceOld":"  /** <p>Expert: change the value of this field.  This can\n   *  be used during indexing to re-use a single Field\n   *  instance to improve indexing speed by avoiding GC cost\n   *  of new'ing and reclaiming Field instances.  Typically\n   *  a single {@link Document} instance is re-used as\n   *  well.  This helps most on small documents.</p>\n   * \n   *  <p>Each Field instance should only be used once\n   *  within a single {@link Document} instance.  See <a\n   *  href=\"http://wiki.apache.org/lucene-java/ImproveIndexingSpeed\">ImproveIndexingSpeed</a>\n   *  for details.</p> */\n  public void setValue(String value) {\n    if (isBinary) {\n      throw new IllegalArgumentException(\"cannot set a String value on a binary field\");\n    }\n    fieldsData = value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}