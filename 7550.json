{"path":"solr/core/src/test/org/apache/hadoop/fs/RawLocalFileSystem#createPathHandle(FileStatus,Options.HandleOpt...).mjava","commits":[{"id":"6bdf107cf16be0f22504ae184fed81596665a244","date":1576012524,"type":0,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/fs/RawLocalFileSystem#createPathHandle(FileStatus,Options.HandleOpt...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Hook to implement support for {@link PathHandle} operations.\n   * @param stat Referent in the target FileSystem\n   * @param opts Constraints that determine the validity of the\n   *            {@link PathHandle} reference.\n   */\n  protected PathHandle createPathHandle(FileStatus stat,\n                                        Options.HandleOpt... opts) {\n    if (stat.isDirectory() || stat.isSymlink()) {\n      throw new IllegalArgumentException(\"PathHandle only available for files\");\n    }\n    String authority = stat.getPath().toUri().getAuthority();\n    if (authority != null && !authority.equals(\"file://\")) {\n      throw new IllegalArgumentException(\"Wrong FileSystem: \" + stat.getPath());\n    }\n    Options.HandleOpt.Data data =\n        Options.HandleOpt.getOpt(Options.HandleOpt.Data.class, opts)\n            .orElse(Options.HandleOpt.changed(false));\n    Options.HandleOpt.Location loc =\n        Options.HandleOpt.getOpt(Options.HandleOpt.Location.class, opts)\n            .orElse(Options.HandleOpt.moved(false));\n    if (loc.allowChange()) {\n      throw new UnsupportedOperationException(\"Tracking file movement in \" +\n          \"basic FileSystem is not supported\");\n    }\n    final Path p = stat.getPath();\n    final Optional<Long> mtime = !data.allowChange()\n        ? Optional.of(stat.getModificationTime())\n        : Optional.empty();\n    return new LocalFileSystemPathHandle(p.toString(), mtime);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a229cb50768e988c50a2106bdae3a92154f428bf","date":1576051038,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/hadoop/fs/RawLocalFileSystem#createPathHandle(FileStatus,Options.HandleOpt...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Hook to implement support for {@link PathHandle} operations.\n   * @param stat Referent in the target FileSystem\n   * @param opts Constraints that determine the validity of the\n   *            {@link PathHandle} reference.\n   */\n  protected PathHandle createPathHandle(FileStatus stat,\n                                        Options.HandleOpt... opts) {\n    if (stat.isDirectory() || stat.isSymlink()) {\n      throw new IllegalArgumentException(\"PathHandle only available for files\");\n    }\n    String authority = stat.getPath().toUri().getAuthority();\n    if (authority != null && !authority.equals(\"file://\")) {\n      throw new IllegalArgumentException(\"Wrong FileSystem: \" + stat.getPath());\n    }\n    Options.HandleOpt.Data data =\n        Options.HandleOpt.getOpt(Options.HandleOpt.Data.class, opts)\n            .orElse(Options.HandleOpt.changed(false));\n    Options.HandleOpt.Location loc =\n        Options.HandleOpt.getOpt(Options.HandleOpt.Location.class, opts)\n            .orElse(Options.HandleOpt.moved(false));\n    if (loc.allowChange()) {\n      throw new UnsupportedOperationException(\"Tracking file movement in \" +\n          \"basic FileSystem is not supported\");\n    }\n    final Path p = stat.getPath();\n    final Optional<Long> mtime = !data.allowChange()\n        ? Optional.of(stat.getModificationTime())\n        : Optional.empty();\n    return new LocalFileSystemPathHandle(p.toString(), mtime);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a229cb50768e988c50a2106bdae3a92154f428bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6bdf107cf16be0f22504ae184fed81596665a244"],"6bdf107cf16be0f22504ae184fed81596665a244":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6bdf107cf16be0f22504ae184fed81596665a244"]},"commit2Childs":{"a229cb50768e988c50a2106bdae3a92154f428bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a229cb50768e988c50a2106bdae3a92154f428bf","6bdf107cf16be0f22504ae184fed81596665a244"],"6bdf107cf16be0f22504ae184fed81596665a244":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}