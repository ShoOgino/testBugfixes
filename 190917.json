{"path":"client/java/solrj/src/org/apache/solr/client/solrj/response/LukeResponse#LukeResponse(NamedList[Object]).mjava","commits":[{"id":"acdd729ace9db5d0803eea4849ddc3c2ba196127","date":1181861605,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/response/LukeResponse#LukeResponse(NamedList[Object]).mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  public LukeResponse(NamedList<Object> res) {\n    super(res);\n    \n    // Parse indexinfo\n    indexInfo = (NamedList<Object>)res.get( \"index\" );\n    \n    NamedList<Object> flds = (NamedList<Object>)res.get( \"fields\" );\n    if( flds != null ) {\n      fieldInfo = new HashMap<String,FieldInfo>( );\n      for( Map.Entry<String, Object> field : flds ) {\n        FieldInfo f = new FieldInfo( field.getKey() );\n        f.read( (NamedList<Object>)field.getValue() );\n        fieldInfo.put( field.getKey(), f );\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbd380158d61c3c775f92ed257d557a821788200","date":1183138375,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/response/LukeResponse#LukeResponse(NamedList[Object]).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/response/LukeResponse#LukeResponse(NamedList[Object]).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  public LukeResponse(NamedList<Object> res) {\n    super(res);\n    \n    // Parse indexinfo\n    indexInfo = (NamedList<Object>)res.get( \"index\" );\n    \n    NamedList<Object> flds = (NamedList<Object>)res.get( \"fields\" );\n    if (flds==null) {\n    \tflds = (NamedList<Object>) ((NamedList<Object>)res.get( \"schema\" )).get(\"fields\");\n    }\n    if( flds != null ) {\n      fieldInfo = new HashMap<String,FieldInfo>( );\n      for( Map.Entry<String, Object> field : flds ) {\n        FieldInfo f = new FieldInfo( field.getKey() );\n        f.read( (NamedList<Object>)field.getValue() );\n        fieldInfo.put( field.getKey(), f );\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  public LukeResponse(NamedList<Object> res) {\n    super(res);\n    \n    // Parse indexinfo\n    indexInfo = (NamedList<Object>)res.get( \"index\" );\n    \n    NamedList<Object> flds = (NamedList<Object>)res.get( \"fields\" );\n    if( flds != null ) {\n      fieldInfo = new HashMap<String,FieldInfo>( );\n      for( Map.Entry<String, Object> field : flds ) {\n        FieldInfo f = new FieldInfo( field.getKey() );\n        f.read( (NamedList<Object>)field.getValue() );\n        fieldInfo.put( field.getKey(), f );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34a68b3240cf63c0ebea7a73b217a999a8f585c6","date":1190911422,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/response/LukeResponse#LukeResponse(NamedList[Object]).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/response/LukeResponse#LukeResponse(NamedList[Object]).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  public LukeResponse(NamedList<Object> res) {\n    super(res);\n\n    // Parse indexinfo\n    indexInfo = (NamedList<Object>) res.get(\"index\");\n\n    NamedList<Object> flds = (NamedList<Object>) res.get(\"fields\");\n    if (flds == null) {\n      flds = (NamedList<Object>) ((NamedList<Object>) res.get(\"schema\")).get(\"fields\");\n    }\n    if (flds != null) {\n      fieldInfo = new HashMap<String, FieldInfo>();\n      for (Map.Entry<String, Object> field : flds) {\n        FieldInfo f = new FieldInfo(field.getKey());\n        f.read((NamedList<Object>) field.getValue());\n        fieldInfo.put(field.getKey(), f);\n      }\n    }\n\n    NamedList<Object> fldTypes = (NamedList<Object>) ((NamedList<Object>) res.get(\"schema\")).get(\"types\");\n    if (fldTypes != null) {\n      fieldTypeInfo = new HashMap<String, FieldTypeInfo>();\n      for (Map.Entry<String, Object> fieldType : fldTypes) {\n        FieldTypeInfo ft = new FieldTypeInfo(fieldType.getKey());\n        ft.read((NamedList<Object>) fieldType.getValue());\n        fieldTypeInfo.put(fieldType.getKey(), ft);\n      }\n    }\n\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  public LukeResponse(NamedList<Object> res) {\n    super(res);\n    \n    // Parse indexinfo\n    indexInfo = (NamedList<Object>)res.get( \"index\" );\n    \n    NamedList<Object> flds = (NamedList<Object>)res.get( \"fields\" );\n    if (flds==null) {\n    \tflds = (NamedList<Object>) ((NamedList<Object>)res.get( \"schema\" )).get(\"fields\");\n    }\n    if( flds != null ) {\n      fieldInfo = new HashMap<String,FieldInfo>( );\n      for( Map.Entry<String, Object> field : flds ) {\n        FieldInfo f = new FieldInfo( field.getKey() );\n        f.read( (NamedList<Object>)field.getValue() );\n        fieldInfo.put( field.getKey(), f );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"404917f58690988d495b8d37e19004c568c110cc","date":1192809751,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/response/LukeResponse#LukeResponse(NamedList[Object]).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/response/LukeResponse#LukeResponse(NamedList[Object]).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  public LukeResponse(NamedList<Object> res) {\n    super(res);\n\n    // Parse indexinfo\n    indexInfo = (NamedList<Object>) res.get(\"index\");\n\n    NamedList<Object> schema = (NamedList<Object>) res.get(\"schema\");\n    NamedList<Object> flds = (NamedList<Object>) res.get(\"fields\");\n    if (flds == null && schema != null ) {\n      flds = (NamedList<Object>) schema.get(\"fields\");\n    }\n    if (flds != null) {\n      fieldInfo = new HashMap<String, FieldInfo>();\n      for (Map.Entry<String, Object> field : flds) {\n        FieldInfo f = new FieldInfo(field.getKey());\n        f.read((NamedList<Object>) field.getValue());\n        fieldInfo.put(field.getKey(), f);\n      }\n    }\n\n    if( schema != null ) {\n      NamedList<Object> fldTypes = (NamedList<Object>) schema.get(\"types\");\n      if (fldTypes != null) {\n        fieldTypeInfo = new HashMap<String, FieldTypeInfo>();\n        for (Map.Entry<String, Object> fieldType : fldTypes) {\n          FieldTypeInfo ft = new FieldTypeInfo(fieldType.getKey());\n          ft.read((NamedList<Object>) fieldType.getValue());\n          fieldTypeInfo.put(fieldType.getKey(), ft);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  public LukeResponse(NamedList<Object> res) {\n    super(res);\n\n    // Parse indexinfo\n    indexInfo = (NamedList<Object>) res.get(\"index\");\n\n    NamedList<Object> flds = (NamedList<Object>) res.get(\"fields\");\n    if (flds == null) {\n      flds = (NamedList<Object>) ((NamedList<Object>) res.get(\"schema\")).get(\"fields\");\n    }\n    if (flds != null) {\n      fieldInfo = new HashMap<String, FieldInfo>();\n      for (Map.Entry<String, Object> field : flds) {\n        FieldInfo f = new FieldInfo(field.getKey());\n        f.read((NamedList<Object>) field.getValue());\n        fieldInfo.put(field.getKey(), f);\n      }\n    }\n\n    NamedList<Object> fldTypes = (NamedList<Object>) ((NamedList<Object>) res.get(\"schema\")).get(\"types\");\n    if (fldTypes != null) {\n      fieldTypeInfo = new HashMap<String, FieldTypeInfo>();\n      for (Map.Entry<String, Object> fieldType : fldTypes) {\n        FieldTypeInfo ft = new FieldTypeInfo(fieldType.getKey());\n        ft.read((NamedList<Object>) fieldType.getValue());\n        fieldTypeInfo.put(fieldType.getKey(), ft);\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86dee79e60d6383c5eb9325aac82cf88813329be","date":1216955904,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/response/LukeResponse#setResponse(NamedList[Object]).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/response/LukeResponse#LukeResponse(NamedList[Object]).mjava","sourceNew":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public void setResponse(NamedList<Object> res) {\n    super.setResponse(res);\n\n    // Parse indexinfo\n    indexInfo = (NamedList<Object>) res.get(\"index\");\n\n    NamedList<Object> schema = (NamedList<Object>) res.get(\"schema\");\n    NamedList<Object> flds = (NamedList<Object>) res.get(\"fields\");\n    if (flds == null && schema != null ) {\n      flds = (NamedList<Object>) schema.get(\"fields\");\n    }\n    if (flds != null) {\n      fieldInfo = new HashMap<String, FieldInfo>();\n      for (Map.Entry<String, Object> field : flds) {\n        FieldInfo f = new FieldInfo(field.getKey());\n        f.read((NamedList<Object>) field.getValue());\n        fieldInfo.put(field.getKey(), f);\n      }\n    }\n\n    if( schema != null ) {\n      NamedList<Object> fldTypes = (NamedList<Object>) schema.get(\"types\");\n      if (fldTypes != null) {\n        fieldTypeInfo = new HashMap<String, FieldTypeInfo>();\n        for (Map.Entry<String, Object> fieldType : fldTypes) {\n          FieldTypeInfo ft = new FieldTypeInfo(fieldType.getKey());\n          ft.read((NamedList<Object>) fieldType.getValue());\n          fieldTypeInfo.put(fieldType.getKey(), ft);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  public LukeResponse(NamedList<Object> res) {\n    super(res);\n\n    // Parse indexinfo\n    indexInfo = (NamedList<Object>) res.get(\"index\");\n\n    NamedList<Object> schema = (NamedList<Object>) res.get(\"schema\");\n    NamedList<Object> flds = (NamedList<Object>) res.get(\"fields\");\n    if (flds == null && schema != null ) {\n      flds = (NamedList<Object>) schema.get(\"fields\");\n    }\n    if (flds != null) {\n      fieldInfo = new HashMap<String, FieldInfo>();\n      for (Map.Entry<String, Object> field : flds) {\n        FieldInfo f = new FieldInfo(field.getKey());\n        f.read((NamedList<Object>) field.getValue());\n        fieldInfo.put(field.getKey(), f);\n      }\n    }\n\n    if( schema != null ) {\n      NamedList<Object> fldTypes = (NamedList<Object>) schema.get(\"types\");\n      if (fldTypes != null) {\n        fieldTypeInfo = new HashMap<String, FieldTypeInfo>();\n        for (Map.Entry<String, Object> fieldType : fldTypes) {\n          FieldTypeInfo ft = new FieldTypeInfo(fieldType.getKey());\n          ft.read((NamedList<Object>) fieldType.getValue());\n          fieldTypeInfo.put(fieldType.getKey(), ft);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"404917f58690988d495b8d37e19004c568c110cc":["34a68b3240cf63c0ebea7a73b217a999a8f585c6"],"cbd380158d61c3c775f92ed257d557a821788200":["acdd729ace9db5d0803eea4849ddc3c2ba196127"],"acdd729ace9db5d0803eea4849ddc3c2ba196127":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"34a68b3240cf63c0ebea7a73b217a999a8f585c6":["cbd380158d61c3c775f92ed257d557a821788200"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"86dee79e60d6383c5eb9325aac82cf88813329be":["404917f58690988d495b8d37e19004c568c110cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"404917f58690988d495b8d37e19004c568c110cc":["86dee79e60d6383c5eb9325aac82cf88813329be"],"cbd380158d61c3c775f92ed257d557a821788200":["34a68b3240cf63c0ebea7a73b217a999a8f585c6"],"acdd729ace9db5d0803eea4849ddc3c2ba196127":["cbd380158d61c3c775f92ed257d557a821788200"],"34a68b3240cf63c0ebea7a73b217a999a8f585c6":["404917f58690988d495b8d37e19004c568c110cc"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["acdd729ace9db5d0803eea4849ddc3c2ba196127"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"86dee79e60d6383c5eb9325aac82cf88813329be":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["86dee79e60d6383c5eb9325aac82cf88813329be","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}