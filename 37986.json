{"path":"lucene/sandbox/src/java/org/apache/lucene/search/LargeNumHitsTopDocsCollector#populateResults(ScoreDoc[],int).mjava","commits":[{"id":"a4d745a1ee5367ec74a4af66528b1b81a4c33355","date":1562779072,"type":0,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/LargeNumHitsTopDocsCollector#populateResults(ScoreDoc[],int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Populates the results array with the ScoreDoc instances. This can be\n   * overridden in case a different ScoreDoc type should be returned.\n   */\n  protected void populateResults(ScoreDoc[] results, int howMany) {\n    if (pq != null) {\n      assert totalHits >= requestedHitCount;\n      for (int i = howMany - 1; i >= 0; i--) {\n        results[i] = pq.pop();\n      }\n      return;\n    }\n\n    // Total number of hits collected were less than requestedHitCount\n    assert totalHits < requestedHitCount;\n    Collections.sort(hits, Comparator.comparing((ScoreDoc scoreDoc) ->\n        scoreDoc.score).reversed().thenComparing(scoreDoc -> scoreDoc.doc));\n\n    for (int i = 0; i < howMany; i++) {\n      results[i] = hits.get(i);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a4d745a1ee5367ec74a4af66528b1b81a4c33355":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a4d745a1ee5367ec74a4af66528b1b81a4c33355"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4d745a1ee5367ec74a4af66528b1b81a4c33355"],"a4d745a1ee5367ec74a4af66528b1b81a4c33355":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}