{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","sourceNew":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","sourceNew":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","sourceNew":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","sourceNew":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","sourceNew":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    client.add(docs);\n    client.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = client.query( query );\n    \n    assertEquals(2, rsp.getResults().getNumFound());\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    client.add( docs );\n    client.commit();\n    \n    rsp = client.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = client.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fc9f4a33c8fefeb1260aea04273a36b0d32378e","date":1421852764,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","sourceNew":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    client.add(docs);\n    client.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSort(new SolrQuery.SortClause(\"price\", SolrQuery.ORDER.asc));\n    QueryResponse rsp = client.query( query );\n    \n    assertEquals(2, rsp.getResults().getNumFound());\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    client.add( docs );\n    client.commit();\n    \n    rsp = client.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = client.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    client.add(docs);\n    client.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = client.query( query );\n    \n    assertEquals(2, rsp.getResults().getNumFound());\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    client.add( docs );\n    client.commit();\n    \n    rsp = client.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = client.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","sourceNew":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\" );\n    doc1.addField( \"name\", \"doc1\" );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\" );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\" );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    client.add(docs);\n    client.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSort(new SolrQuery.SortClause(\"price\", SolrQuery.ORDER.asc));\n    QueryResponse rsp = client.query( query );\n    \n    assertEquals(2, rsp.getResults().getNumFound());\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    client.add( docs );\n    client.commit();\n    \n    rsp = client.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = client.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    client.add(docs);\n    client.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSort(new SolrQuery.SortClause(\"price\", SolrQuery.ORDER.asc));\n    QueryResponse rsp = client.query( query );\n    \n    assertEquals(2, rsp.getResults().getNumFound());\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    client.add( docs );\n    client.commit();\n    \n    rsp = client.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = client.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["c26f00b574427b55127e869b935845554afde1fa"],"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["bafca15d8e408346a67f4282ad1143b88023893b"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"acd9883560fd89e6448b2b447302fe543040cd4f":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["bafca15d8e408346a67f4282ad1143b88023893b"],"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["acd9883560fd89e6448b2b447302fe543040cd4f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"bafca15d8e408346a67f4282ad1143b88023893b":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}