{"path":"lucene/src/java/org/apache/lucene/index/DirectoryReader#openIfChanged(DirectoryReader,IndexCommit).mjava","commits":[{"id":"893d07555f01912f57b453a320e4d46363a31b50","date":1327312526,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#openIfChanged(DirectoryReader,IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#openIfChanged(CompositeIndexReader,IndexCommit).mjava","sourceNew":"  /**\n   * If the IndexCommit differs from what the\n   * provided reader is searching, open and return a new\n   * reader; else, return null.\n   *\n   * @see #openIfChanged(IndexReader)\n   */\n  public static DirectoryReader openIfChanged(DirectoryReader oldReader, IndexCommit commit) throws IOException {\n    final DirectoryReader newReader = oldReader.doOpenIfChanged(commit);\n    assert newReader != oldReader;\n    return newReader;\n  }\n\n","sourceOld":"  /**\n   * If the IndexCommit differs from what the\n   * provided reader is searching, open and return a new\n   * reader; else, return null.\n   *\n   * @see #openIfChanged(IndexReader)\n   */\n  public static CompositeIndexReader openIfChanged(CompositeIndexReader oldReader, IndexCommit commit) throws IOException {\n    final CompositeIndexReader newReader = oldReader.doOpenIfChanged(commit);\n    assert newReader != oldReader;\n    return newReader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fad1351342e15571fed2a68feaed0a8a3a18e5da","date":1327959908,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#openIfChanged(DirectoryReader,IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#openIfChanged(DirectoryReader,IndexCommit).mjava","sourceNew":"  /**\n   * If the IndexCommit differs from what the\n   * provided reader is searching, open and return a new\n   * reader; else, return null.\n   *\n   * @see #openIfChanged(DirectoryReader)\n   */\n  public static DirectoryReader openIfChanged(DirectoryReader oldReader, IndexCommit commit) throws IOException {\n    final DirectoryReader newReader = oldReader.doOpenIfChanged(commit);\n    assert newReader != oldReader;\n    return newReader;\n  }\n\n","sourceOld":"  /**\n   * If the IndexCommit differs from what the\n   * provided reader is searching, open and return a new\n   * reader; else, return null.\n   *\n   * @see #openIfChanged(IndexReader)\n   */\n  public static DirectoryReader openIfChanged(DirectoryReader oldReader, IndexCommit commit) throws IOException {\n    final DirectoryReader newReader = oldReader.doOpenIfChanged(commit);\n    assert newReader != oldReader;\n    return newReader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#openIfChanged(DirectoryReader,IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#openIfChanged(IndexReader,IndexCommit).mjava","sourceNew":"  /**\n   * If the IndexCommit differs from what the\n   * provided reader is searching, open and return a new\n   * reader; else, return null.\n   *\n   * @see #openIfChanged(DirectoryReader)\n   */\n  public static DirectoryReader openIfChanged(DirectoryReader oldReader, IndexCommit commit) throws IOException {\n    final DirectoryReader newReader = oldReader.doOpenIfChanged(commit);\n    assert newReader != oldReader;\n    return newReader;\n  }\n\n","sourceOld":"  /**\n   * If the IndexCommit differs from what the\n   * provided reader is searching, open and return a new\n   * reader; else, return null.\n   *\n   * @see #openIfChanged(IndexReader)\n   */\n  public static IndexReader openIfChanged(IndexReader oldReader, IndexCommit commit) throws IOException {\n    final IndexReader newReader = oldReader.doOpenIfChanged(commit);\n    assert newReader != oldReader;\n    return newReader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#openIfChanged(DirectoryReader,IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#openIfChanged(DirectoryReader,IndexCommit).mjava","sourceNew":"  /**\n   * If the IndexCommit differs from what the\n   * provided reader is searching, open and return a new\n   * reader; else, return null.\n   *\n   * @see #openIfChanged(DirectoryReader)\n   */\n  public static DirectoryReader openIfChanged(DirectoryReader oldReader, IndexCommit commit) throws IOException {\n    final DirectoryReader newReader = oldReader.doOpenIfChanged(commit);\n    assert newReader != oldReader;\n    return newReader;\n  }\n\n","sourceOld":"  /**\n   * If the IndexCommit differs from what the\n   * provided reader is searching, open and return a new\n   * reader; else, return null.\n   *\n   * @see #openIfChanged(DirectoryReader)\n   */\n  public static DirectoryReader openIfChanged(DirectoryReader oldReader, IndexCommit commit) throws IOException {\n    final DirectoryReader newReader = oldReader.doOpenIfChanged(commit);\n    assert newReader != oldReader;\n    return newReader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"893d07555f01912f57b453a320e4d46363a31b50":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fad1351342e15571fed2a68feaed0a8a3a18e5da":["893d07555f01912f57b453a320e4d46363a31b50"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fad1351342e15571fed2a68feaed0a8a3a18e5da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893d07555f01912f57b453a320e4d46363a31b50","5cab9a86bd67202d20b6adc463008c8e982b070a"],"893d07555f01912f57b453a320e4d46363a31b50":["fad1351342e15571fed2a68feaed0a8a3a18e5da"],"fad1351342e15571fed2a68feaed0a8a3a18e5da":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}