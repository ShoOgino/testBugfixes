{"path":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest#testRemoveregexMustMatchWholeValue().mjava","commits":[{"id":"6a25dacbb15b3a184ab77b437a6b4d54ff286b5d","date":1570469935,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest#testRemoveregexMustMatchWholeValue().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRemoveregexMustMatchWholeValue() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"ccc\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    List<String> removeList = new ArrayList<>();\n    removeList.add(\"bb\");\n    doc.setField(\"cat\", ImmutableMap.of(\"removeregex\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\"); // Was not removed - regex didn't match whole value\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    removeList = new ArrayList<>();\n    removeList.add(\"bbb\");\n    doc.setField(\"cat\", ImmutableMap.of(\"removeregex\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '0']\"); // Was removed now - regex matches\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":0,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest#testRemoveregexMustMatchWholeValue().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRemoveregexMustMatchWholeValue() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"ccc\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    List<String> removeList = new ArrayList<>();\n    removeList.add(\"bb\");\n    doc.setField(\"cat\", ImmutableMap.of(\"removeregex\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\"); // Was not removed - regex didn't match whole value\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    removeList = new ArrayList<>();\n    removeList.add(\"bbb\");\n    doc.setField(\"cat\", ImmutableMap.of(\"removeregex\", removeList)); //behavior when hitting Solr through ZK\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '0']\"); // Was removed now - regex matches\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6a25dacbb15b3a184ab77b437a6b4d54ff286b5d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6a25dacbb15b3a184ab77b437a6b4d54ff286b5d"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6a25dacbb15b3a184ab77b437a6b4d54ff286b5d"]},"commit2Childs":{"6a25dacbb15b3a184ab77b437a6b4d54ff286b5d":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6a25dacbb15b3a184ab77b437a6b4d54ff286b5d","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}