{"path":"solr/core/src/test/org/apache/solr/search/json/TestJsonRequest#doParamRefDslTest(Client).mjava","commits":[{"id":"1900ff20b0f8f377a2de0af89d5dff96418ad3ff","date":1590699113,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/json/TestJsonRequest#doParamRefDslTest(Client).mjava","pathOld":"/dev/null","sourceNew":"  private static void doParamRefDslTest(Client client) throws Exception {\n    // referencing in dsl                //nestedqp\n    client.testJQ( params(\"json\",\"{query: {query:  {param:'ref1'}}}\", \"ref1\",\"{!field f=cat_s}A\")\n        , \"response/numFound==2\"\n    );   \n    // referencing json string param\n    client.testJQ( params(\"json\", random().nextBoolean()  ? \n            \"{query:{query:{param:'ref1'}}}\"  // nestedqp\n           : \"{query: {query: {query:{param:'ref1'}}}}\",  // nestedqp, v local param  \n          \"json\",random().nextBoolean() \n              ? \"{params:{ref1:'{!field f=cat_s}A'}}\" // string param  \n              : \"{queries:{ref1:{field:{f:cat_s,query:A}}}}\" ) // qdsl\n        , \"response/numFound==2\"\n    );\n    {                                                     // shortest top level ref\n      final ModifiableSolrParams params = params(\"json\",\"{query:{param:'ref1'}}\");\n      if (random().nextBoolean()) {\n        params.add(\"ref1\",\"cat_s:A\"); // either to plain string\n      } else {\n        params.add(\"json\",\"{queries:{ref1:{field:{f:cat_s,query:A}}}}\");// or to qdsl\n      }\n      client.testJQ( params, \"response/numFound==2\");\n    }  // ref in bool must\n    client.testJQ( params(\"json\",\"{query:{bool: {must:[{param:fq1},{param:fq2}]}}}\",\n        \"json\",\"{params:{fq1:'cat_s:A', fq2:'where_s:NY'}}\", \"json.fields\", \"id\")\n        , \"response/docs==[{id:'1'}]\"\n    );// referencing dsl&strings from filters objs&array\n    client.testJQ( params(\"json.filter\",\"{param:fq1}\",\"json.filter\",\"{param:fq2}\",\n        \"json\", random().nextBoolean() ?\n             \"{queries:{fq1:{lucene:{query:'cat_s:A'}}, fq2:{lucene:{query:'where_s:NY'}}}}\" : \n             \"{params:{fq1:'cat_s:A', fq2:'where_s:NY'}}\", \n        \"json.fields\", \"id\", \"q\", \"*:*\")\n        , \"response/docs==[{id:'1'}]\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1900ff20b0f8f377a2de0af89d5dff96418ad3ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1900ff20b0f8f377a2de0af89d5dff96418ad3ff"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1900ff20b0f8f377a2de0af89d5dff96418ad3ff"],"1900ff20b0f8f377a2de0af89d5dff96418ad3ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}