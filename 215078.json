{"path":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testOrdAndRordOverPointsField().mjava","commits":[{"id":"d9e336b9a6f5841091d9af651e8a219656360379","date":1501525451,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testOrdAndRordOverPointsField().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testOrdAndRordOverPointsField() throws Exception {\n    assumeTrue(\"Skipping test when points=false\", Boolean.getBoolean(NUMERIC_POINTS_SYSPROP));\n    clearIndex();\n\n    String field = \"a_\" + new String[] {\"i\",\"l\",\"d\",\"f\"}[random().nextInt(4)];\n    assertU(adoc(\"id\", \"1\", field, \"1\"));\n    assertU(commit());\n\n    Exception e = expectThrows(SolrException.class, () -> h.query(req(\"q\", \"{!func}ord(\" + field + \")\", \"fq\", \"id:1\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, ((SolrException)e).code());\n    assertTrue(e.getMessage().contains(\"ord() is not supported over Points based field \" + field));\n\n    e = expectThrows(SolrException.class, () -> h.query(req(\"q\", \"{!func}rord(\" + field + \")\", \"fq\", \"id:1\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, ((SolrException)e).code());\n    assertTrue(e.getMessage().contains(\"rord() is not supported over Points based field \" + field));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testOrdAndRordOverPointsField().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testOrdAndRordOverPointsField() throws Exception {\n    assumeTrue(\"Skipping test when points=false\", Boolean.getBoolean(NUMERIC_POINTS_SYSPROP));\n    clearIndex();\n\n    String field = \"a_\" + new String[] {\"i\",\"l\",\"d\",\"f\"}[random().nextInt(4)];\n    assertU(adoc(\"id\", \"1\", field, \"1\"));\n    assertU(commit());\n\n    Exception e = expectThrows(SolrException.class, () -> h.query(req(\"q\", \"{!func}ord(\" + field + \")\", \"fq\", \"id:1\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, ((SolrException)e).code());\n    assertTrue(e.getMessage().contains(\"ord() is not supported over Points based field \" + field));\n\n    e = expectThrows(SolrException.class, () -> h.query(req(\"q\", \"{!func}rord(\" + field + \")\", \"fq\", \"id:1\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, ((SolrException)e).code());\n    assertTrue(e.getMessage().contains(\"rord() is not supported over Points based field \" + field));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d9e336b9a6f5841091d9af651e8a219656360379"],"d9e336b9a6f5841091d9af651e8a219656360379":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d9e336b9a6f5841091d9af651e8a219656360379"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"d9e336b9a6f5841091d9af651e8a219656360379":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","d9e336b9a6f5841091d9af651e8a219656360379"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}