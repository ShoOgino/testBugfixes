{"path":"solr/core/src/test/org/apache/solr/update/UpdateLogTest#buildAddUpdateCommand(SolrQueryRequest,SolrInputDocument).mjava","commits":[{"id":"415bbbe7da8065dd3c477bdc3c703c6425622998","date":1485393793,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/UpdateLogTest#buildAddUpdateCommand(SolrQueryRequest,SolrInputDocument).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Helper method to construct an <code>AddUpdateCommand</code> for a <code>SolrInputDocument</code> \n   * in the context of the specified <code>SolrQueryRequest</code>. \n   *\n   * NOTE: For test simplicity, the Solr input document must include the <code>_version_</code> field.\n   */ \n  public static AddUpdateCommand buildAddUpdateCommand(final SolrQueryRequest req, final SolrInputDocument sdoc) {\n    AddUpdateCommand cmd = new AddUpdateCommand(req);\n    cmd.solrDoc = sdoc;\n    assertTrue(\"\", cmd.solrDoc.containsKey(DistributedUpdateProcessor.VERSION_FIELD));\n    cmd.setVersion(Long.parseLong(cmd.solrDoc.getFieldValue(DistributedUpdateProcessor.VERSION_FIELD).toString()));\n    return cmd;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"598b5d23aa7c9732bf473c21a9cd309c44599394","date":1485530378,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/UpdateLogTest#buildAddUpdateCommand(SolrQueryRequest,SolrInputDocument).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Helper method to construct an <code>AddUpdateCommand</code> for a <code>SolrInputDocument</code> \n   * in the context of the specified <code>SolrQueryRequest</code>. \n   *\n   * NOTE: For test simplicity, the Solr input document must include the <code>_version_</code> field.\n   */ \n  public static AddUpdateCommand buildAddUpdateCommand(final SolrQueryRequest req, final SolrInputDocument sdoc) {\n    AddUpdateCommand cmd = new AddUpdateCommand(req);\n    cmd.solrDoc = sdoc;\n    assertTrue(\"\", cmd.solrDoc.containsKey(DistributedUpdateProcessor.VERSION_FIELD));\n    cmd.setVersion(Long.parseLong(cmd.solrDoc.getFieldValue(DistributedUpdateProcessor.VERSION_FIELD).toString()));\n    return cmd;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d2dadc1f5ca8703d8659f4964961f9967935d75","date":1490231750,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/UpdateLogTest#buildAddUpdateCommand(SolrQueryRequest,SolrInputDocument).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/UpdateLogTest#buildAddUpdateCommand(SolrQueryRequest,SolrInputDocument).mjava","sourceNew":"  /**\n   * Helper method to construct an <code>AddUpdateCommand</code> for a <code>SolrInputDocument</code> \n   * in the context of the specified <code>SolrQueryRequest</code>. \n   *\n   * NOTE: For test simplicity, the Solr input document must include the <code>_version_</code> field.\n   */ \n  public static AddUpdateCommand buildAddUpdateCommand(final SolrQueryRequest req, final SolrInputDocument sdoc) {\n    AddUpdateCommand cmd = new AddUpdateCommand(req);\n    cmd.solrDoc = sdoc;\n    assertTrue(\"\", cmd.solrDoc.containsKey(VERSION_FIELD));\n    cmd.setVersion(Long.parseLong(cmd.solrDoc.getFieldValue(VERSION_FIELD).toString()));\n    return cmd;\n  }\n\n","sourceOld":"  /**\n   * Helper method to construct an <code>AddUpdateCommand</code> for a <code>SolrInputDocument</code> \n   * in the context of the specified <code>SolrQueryRequest</code>. \n   *\n   * NOTE: For test simplicity, the Solr input document must include the <code>_version_</code> field.\n   */ \n  public static AddUpdateCommand buildAddUpdateCommand(final SolrQueryRequest req, final SolrInputDocument sdoc) {\n    AddUpdateCommand cmd = new AddUpdateCommand(req);\n    cmd.solrDoc = sdoc;\n    assertTrue(\"\", cmd.solrDoc.containsKey(DistributedUpdateProcessor.VERSION_FIELD));\n    cmd.setVersion(Long.parseLong(cmd.solrDoc.getFieldValue(DistributedUpdateProcessor.VERSION_FIELD).toString()));\n    return cmd;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5fa6615014cd2288fe930f8c8bb726f9504961d","date":1490280013,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/UpdateLogTest#buildAddUpdateCommand(SolrQueryRequest,SolrInputDocument).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/UpdateLogTest#buildAddUpdateCommand(SolrQueryRequest,SolrInputDocument).mjava","sourceNew":"  /**\n   * Helper method to construct an <code>AddUpdateCommand</code> for a <code>SolrInputDocument</code> \n   * in the context of the specified <code>SolrQueryRequest</code>. \n   *\n   * NOTE: For test simplicity, the Solr input document must include the <code>_version_</code> field.\n   */ \n  public static AddUpdateCommand buildAddUpdateCommand(final SolrQueryRequest req, final SolrInputDocument sdoc) {\n    AddUpdateCommand cmd = new AddUpdateCommand(req);\n    cmd.solrDoc = sdoc;\n    assertTrue(\"\", cmd.solrDoc.containsKey(VERSION_FIELD));\n    cmd.setVersion(Long.parseLong(cmd.solrDoc.getFieldValue(VERSION_FIELD).toString()));\n    return cmd;\n  }\n\n","sourceOld":"  /**\n   * Helper method to construct an <code>AddUpdateCommand</code> for a <code>SolrInputDocument</code> \n   * in the context of the specified <code>SolrQueryRequest</code>. \n   *\n   * NOTE: For test simplicity, the Solr input document must include the <code>_version_</code> field.\n   */ \n  public static AddUpdateCommand buildAddUpdateCommand(final SolrQueryRequest req, final SolrInputDocument sdoc) {\n    AddUpdateCommand cmd = new AddUpdateCommand(req);\n    cmd.solrDoc = sdoc;\n    assertTrue(\"\", cmd.solrDoc.containsKey(DistributedUpdateProcessor.VERSION_FIELD));\n    cmd.setVersion(Long.parseLong(cmd.solrDoc.getFieldValue(DistributedUpdateProcessor.VERSION_FIELD).toString()));\n    return cmd;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e5fa6615014cd2288fe930f8c8bb726f9504961d":["415bbbe7da8065dd3c477bdc3c703c6425622998"],"598b5d23aa7c9732bf473c21a9cd309c44599394":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","415bbbe7da8065dd3c477bdc3c703c6425622998"],"6d2dadc1f5ca8703d8659f4964961f9967935d75":["415bbbe7da8065dd3c477bdc3c703c6425622998"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6d2dadc1f5ca8703d8659f4964961f9967935d75"]},"commit2Childs":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["e5fa6615014cd2288fe930f8c8bb726f9504961d","598b5d23aa7c9732bf473c21a9cd309c44599394","6d2dadc1f5ca8703d8659f4964961f9967935d75"],"e5fa6615014cd2288fe930f8c8bb726f9504961d":[],"598b5d23aa7c9732bf473c21a9cd309c44599394":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["415bbbe7da8065dd3c477bdc3c703c6425622998","598b5d23aa7c9732bf473c21a9cd309c44599394"],"6d2dadc1f5ca8703d8659f4964961f9967935d75":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e5fa6615014cd2288fe930f8c8bb726f9504961d","598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}