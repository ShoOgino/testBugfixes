{"path":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","commits":[{"id":"fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead","date":1286986267,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestLineEntityProcessor#no_xsd_files().mjava","sourceNew":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolverImpl(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<String>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","sourceOld":"  @Test\n  /************************************************************************/\n  public void no_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = AbstractDataImportHandlerTestCase.createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = AbstractDataImportHandlerTestCase.getContext(\n            null,                          //parentEntity\n            new VariableResolverImpl(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<String>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    Assert.assertEquals(18, fList.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestLineEntityProcessor#no_xsd_files().mjava","sourceNew":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolverImpl(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<String>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","sourceOld":"  @Test\n  /************************************************************************/\n  public void no_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = AbstractDataImportHandlerTestCase.createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = AbstractDataImportHandlerTestCase.getContext(\n            null,                          //parentEntity\n            new VariableResolverImpl(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<String>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    Assert.assertEquals(18, fList.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolverImpl(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<String>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","sourceNew":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolverImpl(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<String>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","sourceOld":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolverImpl(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<String>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","sourceNew":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolverImpl(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<String>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","sourceOld":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolverImpl(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<String>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead"],"c26f00b574427b55127e869b935845554afde1fa":["fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead"],"fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}