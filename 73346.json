{"path":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#cardinality().mjava","commits":[{"id":"59ce67ef5584d0d65a576a6bbe06322cc84eb9b0","date":1412077943,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#cardinality().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Compute the cardinality of this set.\n   * NOTE: this operation runs in linear time.\n   */\n  public int cardinality() {\n    int cardinality = 0;\n    for (long[] bitArray : bits) {\n      if (bitArray != null) {\n        for (long bits : bitArray) {\n          cardinality += Long.bitCount(bits);\n        }\n      }\n    }\n    return cardinality;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5132ed7492455ab92d26486037983253997f6c65"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#cardinality().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Compute the cardinality of this set.\n   * NOTE: this operation runs in linear time.\n   */\n  public int cardinality() {\n    int cardinality = 0;\n    for (long[] bitArray : bits) {\n      if (bitArray != null) {\n        for (long bits : bitArray) {\n          cardinality += Long.bitCount(bits);\n        }\n      }\n    }\n    return cardinality;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5132ed7492455ab92d26486037983253997f6c65","date":1413792495,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#cardinality().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#cardinality().mjava","sourceNew":"  /**\n   * Compute the cardinality of this set.\n   * NOTE: this operation runs in linear time.\n   */\n  public int cardinality() {\n    int cardinality = 0;\n    for (Block block : blocks) {\n      if (block != null) {\n        final int numLongs = Long.bitCount(block.index);\n        for (int i = 0; i < numLongs; ++i) {\n          cardinality += Long.bitCount(block.bits[i]);\n        }\n      }\n    }\n    return cardinality;\n  }\n\n","sourceOld":"  /**\n   * Compute the cardinality of this set.\n   * NOTE: this operation runs in linear time.\n   */\n  public int cardinality() {\n    int cardinality = 0;\n    for (long[] bitArray : bits) {\n      if (bitArray != null) {\n        for (long bits : bitArray) {\n          cardinality += Long.bitCount(bits);\n        }\n      }\n    }\n    return cardinality;\n  }\n\n","bugFix":["59ce67ef5584d0d65a576a6bbe06322cc84eb9b0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b97a073eaa927466c93dba638b34d56f1beef80a","date":1413793531,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#cardinality().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#cardinality().mjava","sourceNew":"  /**\n   * Compute the cardinality of this set.\n   * NOTE: this operation runs in linear time.\n   */\n  public int cardinality() {\n    int cardinality = 0;\n    for (long[] bitArray : bits) {\n      if (bitArray != null) {\n        for (long bits : bitArray) {\n          cardinality += Long.bitCount(bits);\n        }\n      }\n    }\n    return cardinality;\n  }\n\n","sourceOld":"  /**\n   * Compute the cardinality of this set.\n   * NOTE: this operation runs in linear time.\n   */\n  public int cardinality() {\n    int cardinality = 0;\n    for (Block block : blocks) {\n      if (block != null) {\n        final int numLongs = Long.bitCount(block.index);\n        for (int i = 0; i < numLongs; ++i) {\n          cardinality += Long.bitCount(block.bits[i]);\n        }\n      }\n    }\n    return cardinality;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e","date":1414135939,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#cardinality().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#cardinality().mjava","sourceNew":"  @Override\n  public int cardinality() {\n    int cardinality = 0;\n    for (long[] bitArray : bits) {\n      if (bitArray != null) {\n        for (long bits : bitArray) {\n          cardinality += Long.bitCount(bits);\n        }\n      }\n    }\n    return cardinality;\n  }\n\n","sourceOld":"  /**\n   * Compute the cardinality of this set.\n   * NOTE: this operation runs in linear time.\n   */\n  public int cardinality() {\n    int cardinality = 0;\n    for (long[] bitArray : bits) {\n      if (bitArray != null) {\n        for (long bits : bitArray) {\n          cardinality += Long.bitCount(bits);\n        }\n      }\n    }\n    return cardinality;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5132ed7492455ab92d26486037983253997f6c65":["59ce67ef5584d0d65a576a6bbe06322cc84eb9b0"],"b97a073eaa927466c93dba638b34d56f1beef80a":["5132ed7492455ab92d26486037983253997f6c65"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","59ce67ef5584d0d65a576a6bbe06322cc84eb9b0"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["b97a073eaa927466c93dba638b34d56f1beef80a"],"59ce67ef5584d0d65a576a6bbe06322cc84eb9b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"]},"commit2Childs":{"5132ed7492455ab92d26486037983253997f6c65":["b97a073eaa927466c93dba638b34d56f1beef80a"],"b97a073eaa927466c93dba638b34d56f1beef80a":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d9a47902d6207303f5ed3e7aaca62ca33433af66","59ce67ef5584d0d65a576a6bbe06322cc84eb9b0"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"59ce67ef5584d0d65a576a6bbe06322cc84eb9b0":["5132ed7492455ab92d26486037983253997f6c65","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}