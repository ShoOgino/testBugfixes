{"path":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupSortingScore_withTotalGroupCount().mjava","commits":[{"id":"9c7cdfe5a1ea9db97faa404b251fa644faa73597","date":1308345959,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupSortingScore_withTotalGroupCount().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGroupingGroupSortingScore_withTotalGroupCount() {\n    assertU(add(doc(\"id\", \"1\",\"name\", \"author1\", \"title\", \"a book title\", \"group_si\", \"1\")));\n    assertU(add(doc(\"id\", \"2\",\"name\", \"author1\", \"title\", \"the title\", \"group_si\", \"2\")));\n    assertU(add(doc(\"id\", \"3\",\"name\", \"author2\", \"title\", \"a book title\", \"group_si\", \"1\")));\n    assertU(add(doc(\"id\", \"4\",\"name\", \"author2\", \"title\", \"title\", \"group_si\", \"2\")));\n    assertU(add(doc(\"id\", \"5\",\"name\", \"author3\", \"title\", \"the title of a title\", \"group_si\", \"1\")));\n    assertU(commit());\n\n    assertQ(req(\"q\",\"title:title\", \"group\", \"true\", \"group.field\",\"name\", \"group.ngroups\", \"true\")\n            ,\"//lst[@name='grouped']/lst[@name='name']\"\n            ,\"//lst[@name='grouped']/lst[@name='name']/int[@name='matches'][.='5']\"\n            ,\"//lst[@name='grouped']/lst[@name='name']/int[@name='ngroups'][.='3']\"\n            ,\"*[count(//arr[@name='groups']/lst) = 3]\"\n\n            ,\"//arr[@name='groups']/lst[1]/str[@name='groupValue'][.='author2']\"\n            ,\"//arr[@name='groups']/lst[1]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result/doc/*[@name='id'][.='4']\"\n\n            ,\"//arr[@name='groups']/lst[2]/str[@name='groupValue'][.='author1']\"\n            ,\"//arr[@name='groups']/lst[2]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[2]/result/doc/*[@name='id'][.='2']\"\n\n            ,\"//arr[@name='groups']/lst[3]/str[@name='groupValue'][.='author3']\"\n            ,\"//arr[@name='groups']/lst[3]/result[@numFound='1']\"\n            ,\"//arr[@name='groups']/lst[3]/result/doc/*[@name='id'][.='5']\"\n            );\n\n    assertQ(req(\"q\",\"title:title\", \"group\", \"true\", \"group.field\",\"group_si\", \"group.ngroups\", \"true\")\n            ,\"//lst[@name='grouped']/lst[@name='group_si']/int[@name='matches'][.='5']\"\n            ,\"//lst[@name='grouped']/lst[@name='group_si']/int[@name='ngroups'][.='2']\"\n            ,\"*[count(//arr[@name='groups']/lst) = 2]\"\n\n            ,\"//arr[@name='groups']/lst[1]/int[@name='groupValue'][.='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result/doc/*[@name='id'][.='4']\"\n\n            ,\"//arr[@name='groups']/lst[2]/int[@name='groupValue'][.='1']\"\n            ,\"//arr[@name='groups']/lst[2]/result[@numFound='3']\"\n            ,\"//arr[@name='groups']/lst[2]/result/doc/*[@name='id'][.='5']\"\n            );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["27e851527ef490dd0b790e19b7c62602b5778eb1","27e851527ef490dd0b790e19b7c62602b5778eb1","27e851527ef490dd0b790e19b7c62602b5778eb1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7edfc3f7caa7b49a18fe367692768b33b018e9db","date":1308374217,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupSortingScore_withTotalGroupCount().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGroupingGroupSortingScore_withTotalGroupCount() {\n    assertU(add(doc(\"id\", \"1\",\"name\", \"author1\", \"title\", \"a book title\", \"group_si\", \"1\")));\n    assertU(add(doc(\"id\", \"2\",\"name\", \"author1\", \"title\", \"the title\", \"group_si\", \"2\")));\n    assertU(add(doc(\"id\", \"3\",\"name\", \"author2\", \"title\", \"a book title\", \"group_si\", \"1\")));\n    assertU(add(doc(\"id\", \"4\",\"name\", \"author2\", \"title\", \"title\", \"group_si\", \"2\")));\n    assertU(add(doc(\"id\", \"5\",\"name\", \"author3\", \"title\", \"the title of a title\", \"group_si\", \"1\")));\n    assertU(commit());\n\n    assertQ(req(\"q\",\"title:title\", \"group\", \"true\", \"group.field\",\"name\", \"group.ngroups\", \"true\")\n            ,\"//lst[@name='grouped']/lst[@name='name']\"\n            ,\"//lst[@name='grouped']/lst[@name='name']/int[@name='matches'][.='5']\"\n            ,\"//lst[@name='grouped']/lst[@name='name']/int[@name='ngroups'][.='3']\"\n            ,\"*[count(//arr[@name='groups']/lst) = 3]\"\n\n            ,\"//arr[@name='groups']/lst[1]/str[@name='groupValue'][.='author2']\"\n            ,\"//arr[@name='groups']/lst[1]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result/doc/*[@name='id'][.='4']\"\n\n            ,\"//arr[@name='groups']/lst[2]/str[@name='groupValue'][.='author1']\"\n            ,\"//arr[@name='groups']/lst[2]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[2]/result/doc/*[@name='id'][.='2']\"\n\n            ,\"//arr[@name='groups']/lst[3]/str[@name='groupValue'][.='author3']\"\n            ,\"//arr[@name='groups']/lst[3]/result[@numFound='1']\"\n            ,\"//arr[@name='groups']/lst[3]/result/doc/*[@name='id'][.='5']\"\n            );\n\n    assertQ(req(\"q\",\"title:title\", \"group\", \"true\", \"group.field\",\"group_si\", \"group.ngroups\", \"true\")\n            ,\"//lst[@name='grouped']/lst[@name='group_si']/int[@name='matches'][.='5']\"\n            ,\"//lst[@name='grouped']/lst[@name='group_si']/int[@name='ngroups'][.='2']\"\n            ,\"*[count(//arr[@name='groups']/lst) = 2]\"\n\n            ,\"//arr[@name='groups']/lst[1]/int[@name='groupValue'][.='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result/doc/*[@name='id'][.='4']\"\n\n            ,\"//arr[@name='groups']/lst[2]/int[@name='groupValue'][.='1']\"\n            ,\"//arr[@name='groups']/lst[2]/result[@numFound='3']\"\n            ,\"//arr[@name='groups']/lst[2]/result/doc/*[@name='id'][.='5']\"\n            );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupSortingScore_withTotalGroupCount().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupSortingScore_withTotalGroupCount().mjava","sourceNew":"  @Test\n  public void testGroupingGroupSortingScore_withTotalGroupCount() {\n    assertU(add(doc(\"id\", \"1\",\"name\", \"author1\", \"title\", \"a book title\", \"group_si\", \"1\")));\n    assertU(add(doc(\"id\", \"2\",\"name\", \"author1\", \"title\", \"the title\", \"group_si\", \"2\")));\n    assertU(add(doc(\"id\", \"3\",\"name\", \"author2\", \"title\", \"a book title\", \"group_si\", \"1\")));\n    assertU(add(doc(\"id\", \"4\",\"name\", \"author2\", \"title\", \"title\", \"group_si\", \"2\")));\n    assertU(add(doc(\"id\", \"5\",\"name\", \"author3\", \"title\", \"the title of a title\", \"group_si\", \"1\")));\n    assertU(commit());\n\n    assertQ(req(\"q\",\"title:title\", \"group\", \"true\", \"group.field\",\"name\", \"group.ngroups\", \"true\")\n            ,\"//lst[@name='grouped']/lst[@name='name']\"\n            ,\"//lst[@name='grouped']/lst[@name='name']/int[@name='matches'][.='5']\"\n            ,\"//lst[@name='grouped']/lst[@name='name']/int[@name='ngroups'][.='3']\"\n            ,\"*[count(//arr[@name='groups']/lst) = 3]\"\n\n            ,\"//arr[@name='groups']/lst[1]/str[@name='groupValue'][.='author2']\"\n            ,\"//arr[@name='groups']/lst[1]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result/doc/*[@name='id'][.='4']\"\n\n            ,\"//arr[@name='groups']/lst[2]/str[@name='groupValue'][.='author1']\"\n            ,\"//arr[@name='groups']/lst[2]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[2]/result/doc/*[@name='id'][.='2']\"\n\n            ,\"//arr[@name='groups']/lst[3]/str[@name='groupValue'][.='author3']\"\n            ,\"//arr[@name='groups']/lst[3]/result[@numFound='1']\"\n            ,\"//arr[@name='groups']/lst[3]/result/doc/*[@name='id'][.='5']\"\n            );\n\n    assertQ(req(\"q\",\"title:title\", \"group\", \"true\", \"group.field\",\"group_si\", \"group.ngroups\", \"true\")\n            ,\"//lst[@name='grouped']/lst[@name='group_si']/int[@name='matches'][.='5']\"\n            ,\"//lst[@name='grouped']/lst[@name='group_si']/int[@name='ngroups'][.='2']\"\n            ,\"*[count(//arr[@name='groups']/lst) = 2]\"\n\n            ,\"//arr[@name='groups']/lst[1]/int[@name='groupValue'][.='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result/doc/*[@name='id'][.='4']\"\n\n            ,\"//arr[@name='groups']/lst[2]/int[@name='groupValue'][.='1']\"\n            ,\"//arr[@name='groups']/lst[2]/result[@numFound='3']\"\n            ,\"//arr[@name='groups']/lst[2]/result/doc/*[@name='id'][.='5']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupingGroupSortingScore_withTotalGroupCount() {\n    assertU(add(doc(\"id\", \"1\",\"name\", \"author1\", \"title\", \"a book title\", \"group_si\", \"1\")));\n    assertU(add(doc(\"id\", \"2\",\"name\", \"author1\", \"title\", \"the title\", \"group_si\", \"2\")));\n    assertU(add(doc(\"id\", \"3\",\"name\", \"author2\", \"title\", \"a book title\", \"group_si\", \"1\")));\n    assertU(add(doc(\"id\", \"4\",\"name\", \"author2\", \"title\", \"title\", \"group_si\", \"2\")));\n    assertU(add(doc(\"id\", \"5\",\"name\", \"author3\", \"title\", \"the title of a title\", \"group_si\", \"1\")));\n    assertU(commit());\n\n    assertQ(req(\"q\",\"title:title\", \"group\", \"true\", \"group.field\",\"name\", \"group.ngroups\", \"true\")\n            ,\"//lst[@name='grouped']/lst[@name='name']\"\n            ,\"//lst[@name='grouped']/lst[@name='name']/int[@name='matches'][.='5']\"\n            ,\"//lst[@name='grouped']/lst[@name='name']/int[@name='ngroups'][.='3']\"\n            ,\"*[count(//arr[@name='groups']/lst) = 3]\"\n\n            ,\"//arr[@name='groups']/lst[1]/str[@name='groupValue'][.='author2']\"\n            ,\"//arr[@name='groups']/lst[1]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result/doc/*[@name='id'][.='4']\"\n\n            ,\"//arr[@name='groups']/lst[2]/str[@name='groupValue'][.='author1']\"\n            ,\"//arr[@name='groups']/lst[2]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[2]/result/doc/*[@name='id'][.='2']\"\n\n            ,\"//arr[@name='groups']/lst[3]/str[@name='groupValue'][.='author3']\"\n            ,\"//arr[@name='groups']/lst[3]/result[@numFound='1']\"\n            ,\"//arr[@name='groups']/lst[3]/result/doc/*[@name='id'][.='5']\"\n            );\n\n    assertQ(req(\"q\",\"title:title\", \"group\", \"true\", \"group.field\",\"group_si\", \"group.ngroups\", \"true\")\n            ,\"//lst[@name='grouped']/lst[@name='group_si']/int[@name='matches'][.='5']\"\n            ,\"//lst[@name='grouped']/lst[@name='group_si']/int[@name='ngroups'][.='2']\"\n            ,\"*[count(//arr[@name='groups']/lst) = 2]\"\n\n            ,\"//arr[@name='groups']/lst[1]/int[@name='groupValue'][.='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result/doc/*[@name='id'][.='4']\"\n\n            ,\"//arr[@name='groups']/lst[2]/int[@name='groupValue'][.='1']\"\n            ,\"//arr[@name='groups']/lst[2]/result[@numFound='3']\"\n            ,\"//arr[@name='groups']/lst[2]/result/doc/*[@name='id'][.='5']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupSortingScore_withTotalGroupCount().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupSortingScore_withTotalGroupCount().mjava","sourceNew":"  @Test\n  public void testGroupingGroupSortingScore_withTotalGroupCount() {\n    assertU(add(doc(\"id\", \"1\",\"name\", \"author1\", \"title\", \"a book title\", \"group_si\", \"1\")));\n    assertU(add(doc(\"id\", \"2\",\"name\", \"author1\", \"title\", \"the title\", \"group_si\", \"2\")));\n    assertU(add(doc(\"id\", \"3\",\"name\", \"author2\", \"title\", \"a book title\", \"group_si\", \"1\")));\n    assertU(add(doc(\"id\", \"4\",\"name\", \"author2\", \"title\", \"title\", \"group_si\", \"2\")));\n    assertU(add(doc(\"id\", \"5\",\"name\", \"author3\", \"title\", \"the title of a title\", \"group_si\", \"1\")));\n    assertU(commit());\n\n    assertQ(req(\"q\",\"title:title\", \"group\", \"true\", \"group.field\",\"name\", \"group.ngroups\", \"true\")\n            ,\"//lst[@name='grouped']/lst[@name='name']\"\n            ,\"//lst[@name='grouped']/lst[@name='name']/int[@name='matches'][.='5']\"\n            ,\"//lst[@name='grouped']/lst[@name='name']/int[@name='ngroups'][.='3']\"\n            ,\"*[count(//arr[@name='groups']/lst) = 3]\"\n\n            ,\"//arr[@name='groups']/lst[1]/str[@name='groupValue'][.='author2']\"\n            ,\"//arr[@name='groups']/lst[1]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result/doc/*[@name='id'][.='4']\"\n\n            ,\"//arr[@name='groups']/lst[2]/str[@name='groupValue'][.='author1']\"\n            ,\"//arr[@name='groups']/lst[2]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[2]/result/doc/*[@name='id'][.='2']\"\n\n            ,\"//arr[@name='groups']/lst[3]/str[@name='groupValue'][.='author3']\"\n            ,\"//arr[@name='groups']/lst[3]/result[@numFound='1']\"\n            ,\"//arr[@name='groups']/lst[3]/result/doc/*[@name='id'][.='5']\"\n            );\n\n    assertQ(req(\"q\",\"title:title\", \"group\", \"true\", \"group.field\",\"group_si\", \"group.ngroups\", \"true\")\n            ,\"//lst[@name='grouped']/lst[@name='group_si']/int[@name='matches'][.='5']\"\n            ,\"//lst[@name='grouped']/lst[@name='group_si']/int[@name='ngroups'][.='2']\"\n            ,\"*[count(//arr[@name='groups']/lst) = 2]\"\n\n            ,\"//arr[@name='groups']/lst[1]/int[@name='groupValue'][.='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result/doc/*[@name='id'][.='4']\"\n\n            ,\"//arr[@name='groups']/lst[2]/int[@name='groupValue'][.='1']\"\n            ,\"//arr[@name='groups']/lst[2]/result[@numFound='3']\"\n            ,\"//arr[@name='groups']/lst[2]/result/doc/*[@name='id'][.='5']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupingGroupSortingScore_withTotalGroupCount() {\n    assertU(add(doc(\"id\", \"1\",\"name\", \"author1\", \"title\", \"a book title\", \"group_si\", \"1\")));\n    assertU(add(doc(\"id\", \"2\",\"name\", \"author1\", \"title\", \"the title\", \"group_si\", \"2\")));\n    assertU(add(doc(\"id\", \"3\",\"name\", \"author2\", \"title\", \"a book title\", \"group_si\", \"1\")));\n    assertU(add(doc(\"id\", \"4\",\"name\", \"author2\", \"title\", \"title\", \"group_si\", \"2\")));\n    assertU(add(doc(\"id\", \"5\",\"name\", \"author3\", \"title\", \"the title of a title\", \"group_si\", \"1\")));\n    assertU(commit());\n\n    assertQ(req(\"q\",\"title:title\", \"group\", \"true\", \"group.field\",\"name\", \"group.ngroups\", \"true\")\n            ,\"//lst[@name='grouped']/lst[@name='name']\"\n            ,\"//lst[@name='grouped']/lst[@name='name']/int[@name='matches'][.='5']\"\n            ,\"//lst[@name='grouped']/lst[@name='name']/int[@name='ngroups'][.='3']\"\n            ,\"*[count(//arr[@name='groups']/lst) = 3]\"\n\n            ,\"//arr[@name='groups']/lst[1]/str[@name='groupValue'][.='author2']\"\n            ,\"//arr[@name='groups']/lst[1]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result/doc/*[@name='id'][.='4']\"\n\n            ,\"//arr[@name='groups']/lst[2]/str[@name='groupValue'][.='author1']\"\n            ,\"//arr[@name='groups']/lst[2]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[2]/result/doc/*[@name='id'][.='2']\"\n\n            ,\"//arr[@name='groups']/lst[3]/str[@name='groupValue'][.='author3']\"\n            ,\"//arr[@name='groups']/lst[3]/result[@numFound='1']\"\n            ,\"//arr[@name='groups']/lst[3]/result/doc/*[@name='id'][.='5']\"\n            );\n\n    assertQ(req(\"q\",\"title:title\", \"group\", \"true\", \"group.field\",\"group_si\", \"group.ngroups\", \"true\")\n            ,\"//lst[@name='grouped']/lst[@name='group_si']/int[@name='matches'][.='5']\"\n            ,\"//lst[@name='grouped']/lst[@name='group_si']/int[@name='ngroups'][.='2']\"\n            ,\"*[count(//arr[@name='groups']/lst) = 2]\"\n\n            ,\"//arr[@name='groups']/lst[1]/int[@name='groupValue'][.='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result/doc/*[@name='id'][.='4']\"\n\n            ,\"//arr[@name='groups']/lst[2]/int[@name='groupValue'][.='1']\"\n            ,\"//arr[@name='groups']/lst[2]/result[@numFound='3']\"\n            ,\"//arr[@name='groups']/lst[2]/result/doc/*[@name='id'][.='5']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupSortingScore_withTotalGroupCount().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupSortingScore_withTotalGroupCount().mjava","sourceNew":"  @Test\n  public void testGroupingGroupSortingScore_withTotalGroupCount() {\n    assertU(add(doc(\"id\", \"1\",\"name\", \"author1\", \"title\", \"a book title\", \"group_si\", \"1\")));\n    assertU(add(doc(\"id\", \"2\",\"name\", \"author1\", \"title\", \"the title\", \"group_si\", \"2\")));\n    assertU(add(doc(\"id\", \"3\",\"name\", \"author2\", \"title\", \"a book title\", \"group_si\", \"1\")));\n    assertU(add(doc(\"id\", \"4\",\"name\", \"author2\", \"title\", \"title\", \"group_si\", \"2\")));\n    assertU(add(doc(\"id\", \"5\",\"name\", \"author3\", \"title\", \"the title of a title\", \"group_si\", \"1\")));\n    assertU(commit());\n\n    assertQ(req(\"q\",\"title:title\", \"group\", \"true\", \"group.field\",\"name\", \"group.ngroups\", \"true\")\n            ,\"//lst[@name='grouped']/lst[@name='name']\"\n            ,\"//lst[@name='grouped']/lst[@name='name']/int[@name='matches'][.='5']\"\n            ,\"//lst[@name='grouped']/lst[@name='name']/int[@name='ngroups'][.='3']\"\n            ,\"*[count(//arr[@name='groups']/lst) = 3]\"\n\n            ,\"//arr[@name='groups']/lst[1]/str[@name='groupValue'][.='author2']\"\n            ,\"//arr[@name='groups']/lst[1]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result/doc/*[@name='id'][.='4']\"\n\n            ,\"//arr[@name='groups']/lst[2]/str[@name='groupValue'][.='author1']\"\n            ,\"//arr[@name='groups']/lst[2]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[2]/result/doc/*[@name='id'][.='2']\"\n\n            ,\"//arr[@name='groups']/lst[3]/str[@name='groupValue'][.='author3']\"\n            ,\"//arr[@name='groups']/lst[3]/result[@numFound='1']\"\n            ,\"//arr[@name='groups']/lst[3]/result/doc/*[@name='id'][.='5']\"\n            );\n\n    assertQ(req(\"q\",\"title:title\", \"group\", \"true\", \"group.field\",\"group_si\", \"group.ngroups\", \"true\")\n            ,\"//lst[@name='grouped']/lst[@name='group_si']/int[@name='matches'][.='5']\"\n            ,\"//lst[@name='grouped']/lst[@name='group_si']/int[@name='ngroups'][.='2']\"\n            ,\"*[count(//arr[@name='groups']/lst) = 2]\"\n\n            ,\"//arr[@name='groups']/lst[1]/int[@name='groupValue'][.='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result/doc/*[@name='id'][.='4']\"\n\n            ,\"//arr[@name='groups']/lst[2]/int[@name='groupValue'][.='1']\"\n            ,\"//arr[@name='groups']/lst[2]/result[@numFound='3']\"\n            ,\"//arr[@name='groups']/lst[2]/result/doc/*[@name='id'][.='5']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupingGroupSortingScore_withTotalGroupCount() {\n    assertU(add(doc(\"id\", \"1\",\"name\", \"author1\", \"title\", \"a book title\", \"group_si\", \"1\")));\n    assertU(add(doc(\"id\", \"2\",\"name\", \"author1\", \"title\", \"the title\", \"group_si\", \"2\")));\n    assertU(add(doc(\"id\", \"3\",\"name\", \"author2\", \"title\", \"a book title\", \"group_si\", \"1\")));\n    assertU(add(doc(\"id\", \"4\",\"name\", \"author2\", \"title\", \"title\", \"group_si\", \"2\")));\n    assertU(add(doc(\"id\", \"5\",\"name\", \"author3\", \"title\", \"the title of a title\", \"group_si\", \"1\")));\n    assertU(commit());\n\n    assertQ(req(\"q\",\"title:title\", \"group\", \"true\", \"group.field\",\"name\", \"group.ngroups\", \"true\")\n            ,\"//lst[@name='grouped']/lst[@name='name']\"\n            ,\"//lst[@name='grouped']/lst[@name='name']/int[@name='matches'][.='5']\"\n            ,\"//lst[@name='grouped']/lst[@name='name']/int[@name='ngroups'][.='3']\"\n            ,\"*[count(//arr[@name='groups']/lst) = 3]\"\n\n            ,\"//arr[@name='groups']/lst[1]/str[@name='groupValue'][.='author2']\"\n            ,\"//arr[@name='groups']/lst[1]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result/doc/*[@name='id'][.='4']\"\n\n            ,\"//arr[@name='groups']/lst[2]/str[@name='groupValue'][.='author1']\"\n            ,\"//arr[@name='groups']/lst[2]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[2]/result/doc/*[@name='id'][.='2']\"\n\n            ,\"//arr[@name='groups']/lst[3]/str[@name='groupValue'][.='author3']\"\n            ,\"//arr[@name='groups']/lst[3]/result[@numFound='1']\"\n            ,\"//arr[@name='groups']/lst[3]/result/doc/*[@name='id'][.='5']\"\n            );\n\n    assertQ(req(\"q\",\"title:title\", \"group\", \"true\", \"group.field\",\"group_si\", \"group.ngroups\", \"true\")\n            ,\"//lst[@name='grouped']/lst[@name='group_si']/int[@name='matches'][.='5']\"\n            ,\"//lst[@name='grouped']/lst[@name='group_si']/int[@name='ngroups'][.='2']\"\n            ,\"*[count(//arr[@name='groups']/lst) = 2]\"\n\n            ,\"//arr[@name='groups']/lst[1]/int[@name='groupValue'][.='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result[@numFound='2']\"\n            ,\"//arr[@name='groups']/lst[1]/result/doc/*[@name='id'][.='4']\"\n\n            ,\"//arr[@name='groups']/lst[2]/int[@name='groupValue'][.='1']\"\n            ,\"//arr[@name='groups']/lst[2]/result[@numFound='3']\"\n            ,\"//arr[@name='groups']/lst[2]/result/doc/*[@name='id'][.='5']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7edfc3f7caa7b49a18fe367692768b33b018e9db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9c7cdfe5a1ea9db97faa404b251fa644faa73597"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["7edfc3f7caa7b49a18fe367692768b33b018e9db"],"c26f00b574427b55127e869b935845554afde1fa":["9c7cdfe5a1ea9db97faa404b251fa644faa73597","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9c7cdfe5a1ea9db97faa404b251fa644faa73597":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["9c7cdfe5a1ea9db97faa404b251fa644faa73597"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"7edfc3f7caa7b49a18fe367692768b33b018e9db":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7edfc3f7caa7b49a18fe367692768b33b018e9db","9c7cdfe5a1ea9db97faa404b251fa644faa73597"],"9c7cdfe5a1ea9db97faa404b251fa644faa73597":["7edfc3f7caa7b49a18fe367692768b33b018e9db","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}