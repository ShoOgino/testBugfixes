{"path":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#load(File).mjava","commits":[{"id":"4ff4f089150b5073dcd4fa1e2018954e3a1eb1af","date":1282571040,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#load(File).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean load(File storeDir) throws IOException {\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#load(File).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean load(File storeDir) throws IOException {\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2df6dcf97491e32d0853436240f3045d19aa457f","date":1298984641,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#load(File).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#load(File).mjava","sourceNew":"  @Override\n  public synchronized boolean load(File storeDir) throws IOException {\n    File data = new File(storeDir, FILENAME);\n    if (!data.exists() || !data.canRead()) {\n      return false;\n    }\n    DataInputStream in = new DataInputStream(new FileInputStream(data));\n    root = new TernaryTreeNode();\n    try {\n      readRecursively(in, root);\n    } finally {\n      in.close();\n    }\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean load(File storeDir) throws IOException {\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#load(File).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#load(File).mjava","sourceNew":"  @Override\n  public synchronized boolean load(File storeDir) throws IOException {\n    File data = new File(storeDir, FILENAME);\n    if (!data.exists() || !data.canRead()) {\n      return false;\n    }\n    DataInputStream in = new DataInputStream(new FileInputStream(data));\n    root = new TernaryTreeNode();\n    try {\n      readRecursively(in, root);\n    } finally {\n      in.close();\n    }\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean load(File storeDir) throws IOException {\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#load(File).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#load(File).mjava","sourceNew":"  @Override\n  public synchronized boolean load(File storeDir) throws IOException {\n    File data = new File(storeDir, FILENAME);\n    if (!data.exists() || !data.canRead()) {\n      return false;\n    }\n    DataInputStream in = new DataInputStream(new FileInputStream(data));\n    root = new TernaryTreeNode();\n    try {\n      readRecursively(in, root);\n    } finally {\n      in.close();\n    }\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean load(File storeDir) throws IOException {\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/tst/TSTLookup#load(File).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#load(File).mjava","sourceNew":"  @Override\n  public synchronized boolean load(File storeDir) throws IOException {\n    File data = new File(storeDir, FILENAME);\n    if (!data.exists() || !data.canRead()) {\n      return false;\n    }\n    DataInputStream in = new DataInputStream(new FileInputStream(data));\n    root = new TernaryTreeNode();\n    try {\n      readRecursively(in, root);\n    } finally {\n      in.close();\n    }\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public synchronized boolean load(File storeDir) throws IOException {\n    File data = new File(storeDir, FILENAME);\n    if (!data.exists() || !data.canRead()) {\n      return false;\n    }\n    DataInputStream in = new DataInputStream(new FileInputStream(data));\n    root = new TernaryTreeNode();\n    try {\n      readRecursively(in, root);\n    } finally {\n      in.close();\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/tst/TSTLookup#load(File).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#load(File).mjava","sourceNew":"  @Override\n  public synchronized boolean load(File storeDir) throws IOException {\n    File data = new File(storeDir, FILENAME);\n    if (!data.exists() || !data.canRead()) {\n      return false;\n    }\n    DataInputStream in = new DataInputStream(new FileInputStream(data));\n    root = new TernaryTreeNode();\n    try {\n      readRecursively(in, root);\n    } finally {\n      in.close();\n    }\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public synchronized boolean load(File storeDir) throws IOException {\n    File data = new File(storeDir, FILENAME);\n    if (!data.exists() || !data.canRead()) {\n      return false;\n    }\n    DataInputStream in = new DataInputStream(new FileInputStream(data));\n    root = new TernaryTreeNode();\n    try {\n      readRecursively(in, root);\n    } finally {\n      in.close();\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/tst/TSTLookup#load(File).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#load(File).mjava","sourceNew":"  @Override\n  public synchronized boolean load(File storeDir) throws IOException {\n    File data = new File(storeDir, FILENAME);\n    if (!data.exists() || !data.canRead()) {\n      return false;\n    }\n    DataInputStream in = new DataInputStream(new FileInputStream(data));\n    root = new TernaryTreeNode();\n    try {\n      readRecursively(in, root);\n    } finally {\n      in.close();\n    }\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public synchronized boolean load(File storeDir) throws IOException {\n    File data = new File(storeDir, FILENAME);\n    if (!data.exists() || !data.canRead()) {\n      return false;\n    }\n    DataInputStream in = new DataInputStream(new FileInputStream(data));\n    root = new TernaryTreeNode();\n    try {\n      readRecursively(in, root);\n    } finally {\n      in.close();\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ff4f089150b5073dcd4fa1e2018954e3a1eb1af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","2df6dcf97491e32d0853436240f3045d19aa457f"],"e230a61047bc041516c811baa08a7174d6f8322a":["2df6dcf97491e32d0853436240f3045d19aa457f"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["4ff4f089150b5073dcd4fa1e2018954e3a1eb1af","2df6dcf97491e32d0853436240f3045d19aa457f"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["2df6dcf97491e32d0853436240f3045d19aa457f","e230a61047bc041516c811baa08a7174d6f8322a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2df6dcf97491e32d0853436240f3045d19aa457f":["4ff4f089150b5073dcd4fa1e2018954e3a1eb1af"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4ff4f089150b5073dcd4fa1e2018954e3a1eb1af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e230a61047bc041516c811baa08a7174d6f8322a"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["d619839baa8ce5503e496b94a9e42ad6f079293f","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"4ff4f089150b5073dcd4fa1e2018954e3a1eb1af":["d619839baa8ce5503e496b94a9e42ad6f079293f","2df6dcf97491e32d0853436240f3045d19aa457f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"e230a61047bc041516c811baa08a7174d6f8322a":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ff4f089150b5073dcd4fa1e2018954e3a1eb1af","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"2df6dcf97491e32d0853436240f3045d19aa457f":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","e230a61047bc041516c811baa08a7174d6f8322a","d619839baa8ce5503e496b94a9e42ad6f079293f","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}