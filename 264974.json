{"path":"lucene/core/src/test/org/apache/lucene/search/TestTotalHitCountCollector#testBasics().mjava","commits":[{"id":"0b76e0d5091e53b744373acebce085504f898543","date":1360853175,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTotalHitCountCollector#testBasics().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort2#testCountingCollector().mjava","sourceNew":"  public void testBasics() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for(int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", \"a\"+i, Field.Store.NO));\n      doc.add(new StringField(\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCountingCollector() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for(int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", \"a\"+i, Field.Store.NO));\n      doc.add(new StringField(\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b41f996b22bd5518650f897d050088ff808ec03","date":1360969107,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTotalHitCountCollector#testBasics().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testCountingCollector().mjava","sourceNew":"  public void testBasics() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for(int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", \"a\"+i, Field.Store.NO));\n      doc.add(new StringField(\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCountingCollector() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for(int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", \"a\"+i, Field.Store.NO));\n      doc.add(new StringField(\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTotalHitCountCollector#testBasics().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTotalHitCountCollector#testBasics().mjava","sourceNew":"  public void testBasics() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for(int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", \"a\"+i, Field.Store.NO));\n      doc.add(new StringField(\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.shutdown();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testBasics() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for(int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", \"a\"+i, Field.Store.NO));\n      doc.add(new StringField(\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTotalHitCountCollector#testBasics().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTotalHitCountCollector#testBasics().mjava","sourceNew":"  public void testBasics() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for(int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", \"a\"+i, Field.Store.NO));\n      doc.add(new StringField(\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testBasics() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for(int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", \"a\"+i, Field.Store.NO));\n      doc.add(new StringField(\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.shutdown();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTotalHitCountCollector#testBasics().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTotalHitCountCollector#testBasics().mjava","sourceNew":"  public void testBasics() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for(int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", \"a\"+i, Field.Store.NO));\n      doc.add(new StringField(\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testBasics() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for(int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", \"a\"+i, Field.Store.NO));\n      doc.add(new StringField(\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3b41f996b22bd5518650f897d050088ff808ec03":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0b76e0d5091e53b744373acebce085504f898543"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"0b76e0d5091e53b744373acebce085504f898543":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["0b76e0d5091e53b744373acebce085504f898543"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"]},"commit2Childs":{"3b41f996b22bd5518650f897d050088ff808ec03":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b41f996b22bd5518650f897d050088ff808ec03","0b76e0d5091e53b744373acebce085504f898543"],"0b76e0d5091e53b744373acebce085504f898543":["3b41f996b22bd5518650f897d050088ff808ec03","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3b41f996b22bd5518650f897d050088ff808ec03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}