{"path":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotLargeTest#doTestDeepPivotStats().mjava","commits":[{"id":"4c18a95e9168a30be855f5d5e7d61a863186fdc5","date":1415142581,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotLargeTest#doTestDeepPivotStats().mjava","pathOld":"/dev/null","sourceNew":"  private void doTestDeepPivotStats() throws Exception {\n\n    QueryResponse rsp = query(\"q\", \"*:*\",\n                              \"rows\", \"0\",\n                              \"facet\", \"true\",\n                              \"facet.pivot\",\"{!stats=s1}place_s,company_t\",\n                              \"stats\", \"true\",\n                              \"stats.field\", \"{!key=avg_price tag=s1}pay_i\");\n\n    List<PivotField> pivots = rsp.getFacetPivot().get(\"place_s,company_t\");\n\n    PivotField cardiffPivotField = pivots.get(0);\n    assertEquals(\"cardiff\", cardiffPivotField.getValue());\n    assertEquals(257, cardiffPivotField.getCount());\n\n    FieldStatsInfo cardiffStatsInfo = cardiffPivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"avg_price\", cardiffStatsInfo.getName());\n    assertEquals(0.0, cardiffStatsInfo.getMin());\n    assertEquals(8742.0, cardiffStatsInfo.getMax());\n    assertEquals(257, (long) cardiffStatsInfo.getCount());\n    assertEquals(0, (long) cardiffStatsInfo.getMissing());\n    assertEquals(347554.0, cardiffStatsInfo.getSum());\n    assertEquals(8.20968772E8, cardiffStatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(1352.35019455253, (double) cardiffStatsInfo.getMean(), 0.1E-7);\n    assertEquals(1170.86048165857, cardiffStatsInfo.getStddev(), 0.1E-7);\n\n    PivotField bbcCardifftPivotField = cardiffPivotField.getPivot().get(0);\n    assertEquals(\"bbc\", bbcCardifftPivotField.getValue());\n    assertEquals(101, bbcCardifftPivotField.getCount());\n\n    FieldStatsInfo bbcCardifftPivotFieldStatsInfo = bbcCardifftPivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(2400.0, bbcCardifftPivotFieldStatsInfo.getMin());\n    assertEquals(8742.0, bbcCardifftPivotFieldStatsInfo.getMax());\n    assertEquals(101, (long) bbcCardifftPivotFieldStatsInfo.getCount());\n    assertEquals(0, (long) bbcCardifftPivotFieldStatsInfo.getMissing());\n    assertEquals(248742.0, bbcCardifftPivotFieldStatsInfo.getSum());\n    assertEquals(6.52422564E8, bbcCardifftPivotFieldStatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(2462.792079208, (double) bbcCardifftPivotFieldStatsInfo.getMean(), 0.1E-7);\n    assertEquals(631.0525860312, bbcCardifftPivotFieldStatsInfo.getStddev(), 0.1E-7);\n\n\n    PivotField placeholder0PivotField = pivots.get(2);\n    assertEquals(\"0placeholder\", placeholder0PivotField.getValue());\n    assertEquals(6, placeholder0PivotField.getCount());\n\n    FieldStatsInfo placeholder0PivotFieldStatsInfo = placeholder0PivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"avg_price\", placeholder0PivotFieldStatsInfo.getName());\n    assertEquals(2000.0, placeholder0PivotFieldStatsInfo.getMin());\n    assertEquals(6400.0, placeholder0PivotFieldStatsInfo.getMax());\n    assertEquals(6, (long) placeholder0PivotFieldStatsInfo.getCount());\n    assertEquals(0, (long) placeholder0PivotFieldStatsInfo.getMissing());\n    assertEquals(22700.0, placeholder0PivotFieldStatsInfo.getSum());\n    assertEquals(1.0105E8, placeholder0PivotFieldStatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(3783.333333333, (double) placeholder0PivotFieldStatsInfo.getMean(), 0.1E-7);\n    assertEquals(1741.742422595, placeholder0PivotFieldStatsInfo.getStddev(), 0.1E-7);\n\n    PivotField microsoftPlaceholder0PivotField = placeholder0PivotField.getPivot().get(1);\n    assertEquals(\"microsoft\", microsoftPlaceholder0PivotField.getValue());\n    assertEquals(6, microsoftPlaceholder0PivotField.getCount());\n\n    FieldStatsInfo microsoftPlaceholder0PivotFieldStatsInfo = microsoftPlaceholder0PivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"avg_price\", microsoftPlaceholder0PivotFieldStatsInfo.getName());\n    assertEquals(2000.0, microsoftPlaceholder0PivotFieldStatsInfo.getMin());\n    assertEquals(6400.0, microsoftPlaceholder0PivotFieldStatsInfo.getMax());\n    assertEquals(6, (long) microsoftPlaceholder0PivotFieldStatsInfo.getCount());\n    assertEquals(0, (long) microsoftPlaceholder0PivotFieldStatsInfo.getMissing());\n    assertEquals(22700.0, microsoftPlaceholder0PivotFieldStatsInfo.getSum());\n    assertEquals(1.0105E8, microsoftPlaceholder0PivotFieldStatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(3783.333333333, (double) microsoftPlaceholder0PivotFieldStatsInfo.getMean(), 0.1E-7);\n    assertEquals(1741.742422595, microsoftPlaceholder0PivotFieldStatsInfo.getStddev(), 0.1E-7);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"]},"commit2Childs":{"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}