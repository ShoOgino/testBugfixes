{"path":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenDisjunctionMaxQuery().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenDisjunctionMaxQuery().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenDisjunctionMaxQuery().mjava","sourceNew":"  public void testFlattenDisjunctionMaxQuery() throws Exception {\n    Query query = dmq( tq( \"A\" ), tq( \"B\" ), pqF( \"C\", \"D\" ) );\n    FieldQuery fq = new FieldQuery( query, true, true );\n    Set<Query> flatQueries = new HashSet<Query>();\n    fq.flatten( query, reader, flatQueries );\n    assertCollectionQueries( flatQueries, tq( \"A\" ), tq( \"B\" ), pqF( \"C\", \"D\" ) );\n  }\n\n","sourceOld":"  public void testFlattenDisjunctionMaxQuery() throws Exception {\n    Query query = dmq( tq( \"A\" ), tq( \"B\" ), pqF( \"C\", \"D\" ) );\n    FieldQuery fq = new FieldQuery( query, true, true );\n    Set<Query> flatQueries = new HashSet<Query>();\n    fq.flatten( query, reader, flatQueries );\n    assertCollectionQueries( flatQueries, tq( \"A\" ), tq( \"B\" ), pqF( \"C\", \"D\" ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94221e4190ec47a1ec4f0bd8f99b3648af295a06","date":1389175887,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenDisjunctionMaxQuery().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenDisjunctionMaxQuery().mjava","sourceNew":"  public void testFlattenDisjunctionMaxQuery() throws Exception {\n    initBoost();\n    Query query = dmq( tq( \"A\" ), tq( \"B\" ), pqF( \"C\", \"D\" ) );\n    query.setBoost( boost );\n    FieldQuery fq = new FieldQuery( query, true, true );\n    Set<Query> flatQueries = new HashSet<Query>();\n    fq.flatten( query, reader, flatQueries );\n    assertCollectionQueries( flatQueries, tq( boost, \"A\" ), tq( boost, \"B\" ), pqF( boost, \"C\", \"D\" ) );\n  }\n\n","sourceOld":"  public void testFlattenDisjunctionMaxQuery() throws Exception {\n    Query query = dmq( tq( \"A\" ), tq( \"B\" ), pqF( \"C\", \"D\" ) );\n    FieldQuery fq = new FieldQuery( query, true, true );\n    Set<Query> flatQueries = new HashSet<Query>();\n    fq.flatten( query, reader, flatQueries );\n    assertCollectionQueries( flatQueries, tq( \"A\" ), tq( \"B\" ), pqF( \"C\", \"D\" ) );\n  }\n\n","bugFix":["6108dae71b5018effc897a9669aa8a99133005e2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenDisjunctionMaxQuery().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenDisjunctionMaxQuery().mjava","sourceNew":"  public void testFlattenDisjunctionMaxQuery() throws Exception {\n    initBoost();\n    Query query = dmq( tq( \"A\" ), tq( \"B\" ), pqF( \"C\", \"D\" ) );\n    query.setBoost( boost );\n    FieldQuery fq = new FieldQuery( query, true, true );\n    Set<Query> flatQueries = new HashSet<>();\n    fq.flatten( query, reader, flatQueries );\n    assertCollectionQueries( flatQueries, tq( boost, \"A\" ), tq( boost, \"B\" ), pqF( boost, \"C\", \"D\" ) );\n  }\n\n","sourceOld":"  public void testFlattenDisjunctionMaxQuery() throws Exception {\n    initBoost();\n    Query query = dmq( tq( \"A\" ), tq( \"B\" ), pqF( \"C\", \"D\" ) );\n    query.setBoost( boost );\n    FieldQuery fq = new FieldQuery( query, true, true );\n    Set<Query> flatQueries = new HashSet<Query>();\n    fq.flatten( query, reader, flatQueries );\n    assertCollectionQueries( flatQueries, tq( boost, \"A\" ), tq( boost, \"B\" ), pqF( boost, \"C\", \"D\" ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenDisjunctionMaxQuery().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenDisjunctionMaxQuery().mjava","sourceNew":"  public void testFlattenDisjunctionMaxQuery() throws Exception {\n    initBoost();\n    Query query = dmq( tq( \"A\" ), tq( \"B\" ), pqF( \"C\", \"D\" ) );\n    query = new BoostQuery( query, boost );\n    FieldQuery fq = new FieldQuery( query, true, true );\n    Set<Query> flatQueries = new HashSet<>();\n    fq.flatten( query, reader, flatQueries, 1f );\n    assertCollectionQueries( flatQueries, tq( boost, \"A\" ), tq( boost, \"B\" ), pqF( boost, \"C\", \"D\" ) );\n  }\n\n","sourceOld":"  public void testFlattenDisjunctionMaxQuery() throws Exception {\n    initBoost();\n    Query query = dmq( tq( \"A\" ), tq( \"B\" ), pqF( \"C\", \"D\" ) );\n    query.setBoost( boost );\n    FieldQuery fq = new FieldQuery( query, true, true );\n    Set<Query> flatQueries = new HashSet<>();\n    fq.flatten( query, reader, flatQueries );\n    assertCollectionQueries( flatQueries, tq( boost, \"A\" ), tq( boost, \"B\" ), pqF( boost, \"C\", \"D\" ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["94221e4190ec47a1ec4f0bd8f99b3648af295a06"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"94221e4190ec47a1ec4f0bd8f99b3648af295a06":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2dfdf766e55e943d942055d7de53c7ad6bc45283"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["94221e4190ec47a1ec4f0bd8f99b3648af295a06"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"94221e4190ec47a1ec4f0bd8f99b3648af295a06":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}