{"path":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#changeUrlOnError(Exception).mjava","commits":[{"id":"98287baa2c8d136e801f366a73e27a23285b7b98","date":1427241813,"type":1,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#changeUrlOnError(Exception).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","sourceNew":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        cusc.shutdownNow();\n        cusc = new ConcurrentUpdateSolrClient(\n            ((HttpSolrClient) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3) {\n          @Override\n          public void handleError(Throwable ex) {\n            log.warn(\"cusc error\", ex);\n          }\n        };\n      }\n    }\n\n","sourceOld":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        cusc.shutdownNow();\n        cusc = new ConcurrentUpdateSolrClient(\n            ((HttpSolrClient) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3) {\n          @Override\n          public void handleError(Throwable ex) {\n            log.warn(\"cusc error\", ex);\n          }\n        };\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":1,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#changeUrlOnError(Exception).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","sourceNew":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        cusc.shutdownNow();\n        cusc = new ConcurrentUpdateSolrClient(\n            ((HttpSolrClient) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3) {\n          @Override\n          public void handleError(Throwable ex) {\n            log.warn(\"cusc error\", ex);\n          }\n        };\n      }\n    }\n\n","sourceOld":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        cusc.shutdownNow();\n        cusc = new ConcurrentUpdateSolrClient(\n            ((HttpSolrClient) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3) {\n          @Override\n          public void handleError(Throwable ex) {\n            log.warn(\"cusc error\", ex);\n          }\n        };\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#changeUrlOnError(Exception).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#changeUrlOnError(Exception).mjava","sourceNew":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        cusc.shutdownNow();\n        cusc = new ErrorLoggingConcurrentUpdateSolrClient(((HttpSolrClient) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3);\n      }\n    }\n\n","sourceOld":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        cusc.shutdownNow();\n        cusc = new ConcurrentUpdateSolrClient(\n            ((HttpSolrClient) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3) {\n          @Override\n          public void handleError(Throwable ex) {\n            log.warn(\"cusc error\", ex);\n          }\n        };\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#changeUrlOnError(Exception).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#changeUrlOnError(Exception).mjava","sourceNew":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        cusc.shutdownNow();\n        cusc = new ErrorLoggingConcurrentUpdateSolrClient(((HttpSolrClient) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3);\n      }\n    }\n\n","sourceOld":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        cusc.shutdownNow();\n        cusc = new ConcurrentUpdateSolrClient(\n            ((HttpSolrClient) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3) {\n          @Override\n          public void handleError(Throwable ex) {\n            log.warn(\"cusc error\", ex);\n          }\n        };\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61c45e99cf6676da48f19d7511c73712ad39402b","date":1495508331,"type":4,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#changeUrlOnError(Exception).mjava","sourceNew":null,"sourceOld":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        cusc.shutdownNow();\n        cusc = new ErrorLoggingConcurrentUpdateSolrClient(((HttpSolrClient) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#changeUrlOnError(Exception).mjava","sourceNew":null,"sourceOld":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        cusc.shutdownNow();\n        cusc = new ErrorLoggingConcurrentUpdateSolrClient(((HttpSolrClient) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","61c45e99cf6676da48f19d7511c73712ad39402b"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","98287baa2c8d136e801f366a73e27a23285b7b98"],"61c45e99cf6676da48f19d7511c73712ad39402b":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["98287baa2c8d136e801f366a73e27a23285b7b98"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"98287baa2c8d136e801f366a73e27a23285b7b98":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["98287baa2c8d136e801f366a73e27a23285b7b98","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["61c45e99cf6676da48f19d7511c73712ad39402b"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"61c45e99cf6676da48f19d7511c73712ad39402b":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","98287baa2c8d136e801f366a73e27a23285b7b98"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["e9017cf144952056066919f1ebc7897ff9bd71b1","61c45e99cf6676da48f19d7511c73712ad39402b"],"98287baa2c8d136e801f366a73e27a23285b7b98":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}