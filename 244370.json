{"path":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","commits":[{"id":"90213788e5007cc5e2b3d88200a8265de9d4e6d4","date":1359060940,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter, FacetIndexingParams params) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    int ordinalMap[] = map.getMap();\n    FacetIndexingParams params = FacetIndexingParams.ALL_PARENTS;\n\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd45d4a2ee01a1932d33eec42f5272c2402da679","date":1359316912,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter, FacetIndexingParams params) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    int ordinalMap[] = map.getMap();\n    FacetIndexingParams params = FacetIndexingParams.ALL_PARENTS;\n\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc","date":1359570667,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/util/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter, FacetIndexingParams params) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter, FacetIndexingParams params) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61d5f95d14e5b9b046998c51e16709a398c15226","date":1359603451,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/util/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter, FacetIndexingParams params) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter, FacetIndexingParams params) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90213788e5007cc5e2b3d88200a8265de9d4e6d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"61d5f95d14e5b9b046998c51e16709a398c15226":["dd45d4a2ee01a1932d33eec42f5272c2402da679","1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dd45d4a2ee01a1932d33eec42f5272c2402da679":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","90213788e5007cc5e2b3d88200a8265de9d4e6d4"],"1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc":["90213788e5007cc5e2b3d88200a8265de9d4e6d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc"]},"commit2Childs":{"90213788e5007cc5e2b3d88200a8265de9d4e6d4":["dd45d4a2ee01a1932d33eec42f5272c2402da679","1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc"],"61d5f95d14e5b9b046998c51e16709a398c15226":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["90213788e5007cc5e2b3d88200a8265de9d4e6d4","dd45d4a2ee01a1932d33eec42f5272c2402da679"],"dd45d4a2ee01a1932d33eec42f5272c2402da679":["61d5f95d14e5b9b046998c51e16709a398c15226"],"1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc":["61d5f95d14e5b9b046998c51e16709a398c15226","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["61d5f95d14e5b9b046998c51e16709a398c15226","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}