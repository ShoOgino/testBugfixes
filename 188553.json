{"path":"src/java/org/apache/lucene/index/IndexWriter#deleteDocuments(Query[]).mjava","commits":[{"id":"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be","date":1204801324,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#deleteDocuments(Query[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Deletes the document(s) matching any of the provided queries.\n   * All deletes are flushed at the same time.\n   * @param queries array of queries to identify the documents\n   * to be deleted\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void deleteDocuments(Query[] queries) throws CorruptIndexException, IOException {\n    ensureOpen();\n    boolean doFlush = docWriter.bufferDeleteQueries(queries);\n    if (doFlush)\n      flush(true, false, false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9665d17707cc21b1db995118ff36129723139ab","date":1225384420,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#deleteDocuments(Query[]).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#deleteDocuments(Query[]).mjava","sourceNew":"  /**\n   * Deletes the document(s) matching any of the provided queries.\n   * All deletes are flushed at the same time.\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @param queries array of queries to identify the documents\n   * to be deleted\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void deleteDocuments(Query[] queries) throws CorruptIndexException, IOException {\n    ensureOpen();\n    boolean doFlush = docWriter.bufferDeleteQueries(queries);\n    if (doFlush)\n      flush(true, false, false);\n  }\n\n","sourceOld":"  /**\n   * Deletes the document(s) matching any of the provided queries.\n   * All deletes are flushed at the same time.\n   * @param queries array of queries to identify the documents\n   * to be deleted\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void deleteDocuments(Query[] queries) throws CorruptIndexException, IOException {\n    ensureOpen();\n    boolean doFlush = docWriter.bufferDeleteQueries(queries);\n    if (doFlush)\n      flush(true, false, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7","date":1255555265,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#deleteDocuments(Query...).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#deleteDocuments(Query[]).mjava","sourceNew":"  /**\n   * Deletes the document(s) matching any of the provided queries.\n   * All deletes are flushed at the same time.\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @param queries array of queries to identify the documents\n   * to be deleted\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void deleteDocuments(Query... queries) throws CorruptIndexException, IOException {\n    ensureOpen();\n    boolean doFlush = docWriter.bufferDeleteQueries(queries);\n    if (doFlush)\n      flush(true, false, false);\n  }\n\n","sourceOld":"  /**\n   * Deletes the document(s) matching any of the provided queries.\n   * All deletes are flushed at the same time.\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @param queries array of queries to identify the documents\n   * to be deleted\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void deleteDocuments(Query[] queries) throws CorruptIndexException, IOException {\n    ensureOpen();\n    boolean doFlush = docWriter.bufferDeleteQueries(queries);\n    if (doFlush)\n      flush(true, false, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9665d17707cc21b1db995118ff36129723139ab":["a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7":["e9665d17707cc21b1db995118ff36129723139ab"],"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7"]},"commit2Childs":{"e9665d17707cc21b1db995118ff36129723139ab":["560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be"],"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be":["e9665d17707cc21b1db995118ff36129723139ab"],"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}