{"path":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdatesAreFlushed().mjava","commits":[{"id":"97f16b1401b4394d166abcc8d8da20335da81f67","date":1380632396,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdatesAreFlushed().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testUpdatesAreFlushed() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)).setRAMBufferSizeMB(0.00000001));\n    writer.addDocument(doc(0)); // val=1\n    writer.addDocument(doc(1)); // val=2\n    writer.addDocument(doc(3)); // val=2\n    writer.commit();\n    assertEquals(1, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-0\"), \"val\", 5L);\n    assertEquals(2, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-1\"), \"val\", 6L);\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L); \n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.getConfig().setRAMBufferSizeMB(1000d);\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L);\n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdatesAreFlushed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdatesAreFlushed().mjava","sourceNew":"  @Test\n  public void testUpdatesAreFlushed() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)).setRAMBufferSizeMB(0.00000001));\n    writer.addDocument(doc(0)); // val=1\n    writer.addDocument(doc(1)); // val=2\n    writer.addDocument(doc(3)); // val=2\n    writer.commit();\n    assertEquals(1, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-0\"), \"val\", 5L);\n    assertEquals(2, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-1\"), \"val\", 6L);\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L); \n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.getConfig().setRAMBufferSizeMB(1000d);\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L);\n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testUpdatesAreFlushed() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)).setRAMBufferSizeMB(0.00000001));\n    writer.addDocument(doc(0)); // val=1\n    writer.addDocument(doc(1)); // val=2\n    writer.addDocument(doc(3)); // val=2\n    writer.commit();\n    assertEquals(1, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-0\"), \"val\", 5L);\n    assertEquals(2, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-1\"), \"val\", 6L);\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L); \n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.getConfig().setRAMBufferSizeMB(1000d);\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L);\n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdatesAreFlushed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdatesAreFlushed().mjava","sourceNew":"  @Test\n  public void testUpdatesAreFlushed() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n                                                .setRAMBufferSizeMB(0.00000001));\n    writer.addDocument(doc(0)); // val=1\n    writer.addDocument(doc(1)); // val=2\n    writer.addDocument(doc(3)); // val=2\n    writer.commit();\n    assertEquals(1, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-0\"), \"val\", 5L);\n    assertEquals(2, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-1\"), \"val\", 6L);\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L); \n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.getConfig().setRAMBufferSizeMB(1000d);\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L);\n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testUpdatesAreFlushed() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)).setRAMBufferSizeMB(0.00000001));\n    writer.addDocument(doc(0)); // val=1\n    writer.addDocument(doc(1)); // val=2\n    writer.addDocument(doc(3)); // val=2\n    writer.commit();\n    assertEquals(1, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-0\"), \"val\", 5L);\n    assertEquals(2, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-1\"), \"val\", 6L);\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L); \n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.getConfig().setRAMBufferSizeMB(1000d);\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L);\n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdatesAreFlushed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdatesAreFlushed().mjava","sourceNew":"  @Test\n  public void testUpdatesAreFlushed() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n                                                .setRAMBufferSizeMB(0.00000001));\n    writer.addDocument(doc(0)); // val=1\n    writer.addDocument(doc(1)); // val=2\n    writer.addDocument(doc(3)); // val=2\n    writer.commit();\n    assertEquals(1, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-0\"), \"val\", 5L);\n    assertEquals(2, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-1\"), \"val\", 6L);\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L); \n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.getConfig().setRAMBufferSizeMB(1000d);\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L);\n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testUpdatesAreFlushed() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n                                                .setRAMBufferSizeMB(0.00000001));\n    writer.addDocument(doc(0)); // val=1\n    writer.addDocument(doc(1)); // val=2\n    writer.addDocument(doc(3)); // val=2\n    writer.commit();\n    assertEquals(1, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-0\"), \"val\", 5L);\n    assertEquals(2, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-1\"), \"val\", 6L);\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L); \n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.getConfig().setRAMBufferSizeMB(1000d);\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L);\n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdatesAreFlushed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdatesAreFlushed().mjava","sourceNew":"  public void testUpdatesAreFlushed() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n                                                .setRAMBufferSizeMB(0.00000001));\n    writer.addDocument(doc(0)); // val=1\n    writer.addDocument(doc(1)); // val=2\n    writer.addDocument(doc(3)); // val=2\n    writer.commit();\n    assertEquals(1, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-0\"), \"val\", 5L);\n    assertEquals(2, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-1\"), \"val\", 6L);\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L); \n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.getConfig().setRAMBufferSizeMB(1000d);\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L);\n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testUpdatesAreFlushed() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n                                                .setRAMBufferSizeMB(0.00000001));\n    writer.addDocument(doc(0)); // val=1\n    writer.addDocument(doc(1)); // val=2\n    writer.addDocument(doc(3)); // val=2\n    writer.commit();\n    assertEquals(1, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-0\"), \"val\", 5L);\n    assertEquals(2, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-1\"), \"val\", 6L);\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L); \n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.getConfig().setRAMBufferSizeMB(1000d);\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L);\n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdatesAreFlushed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdatesAreFlushed().mjava","sourceNew":"  public void testUpdatesAreFlushed() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n                                                .setRAMBufferSizeMB(0.00000001));\n    writer.addDocument(doc(0)); // val=1\n    writer.addDocument(doc(1)); // val=2\n    writer.addDocument(doc(3)); // val=2\n    writer.commit();\n    assertEquals(1, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-0\"), \"val\", 5L);\n    assertEquals(2, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-1\"), \"val\", 6L);\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L); \n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.getConfig().setRAMBufferSizeMB(1000d);\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L);\n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testUpdatesAreFlushed() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n                                                .setRAMBufferSizeMB(0.00000001));\n    writer.addDocument(doc(0)); // val=1\n    writer.addDocument(doc(1)); // val=2\n    writer.addDocument(doc(3)); // val=2\n    writer.commit();\n    assertEquals(1, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-0\"), \"val\", 5L);\n    assertEquals(2, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-1\"), \"val\", 6L);\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L); \n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.getConfig().setRAMBufferSizeMB(1000d);\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L);\n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdatesAreFlushed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdatesAreFlushed().mjava","sourceNew":"  public void testUpdatesAreFlushed() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n                                                .setRAMBufferSizeMB(0.00000001));\n    writer.addDocument(doc(0)); // val=1\n    writer.addDocument(doc(1)); // val=2\n    writer.addDocument(doc(3)); // val=2\n    writer.commit();\n    assertEquals(1, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-0\"), \"val\", 5L);\n    assertEquals(2, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-1\"), \"val\", 6L);\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L); \n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.getConfig().setRAMBufferSizeMB(1000d);\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L);\n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testUpdatesAreFlushed() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n                                                .setRAMBufferSizeMB(0.00000001));\n    writer.addDocument(doc(0)); // val=1\n    writer.addDocument(doc(1)); // val=2\n    writer.addDocument(doc(3)); // val=2\n    writer.commit();\n    assertEquals(1, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-0\"), \"val\", 5L);\n    assertEquals(2, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-1\"), \"val\", 6L);\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L); \n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.getConfig().setRAMBufferSizeMB(1000d);\n    writer.updateNumericDocValue(new Term(\"id\", \"doc-2\"), \"val\", 7L);\n    assertEquals(4, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"97f16b1401b4394d166abcc8d8da20335da81f67":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["97f16b1401b4394d166abcc8d8da20335da81f67"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["d0ef034a4f10871667ae75181537775ddcf8ade4","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["d0ef034a4f10871667ae75181537775ddcf8ade4","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"97f16b1401b4394d166abcc8d8da20335da81f67":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97f16b1401b4394d166abcc8d8da20335da81f67"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}