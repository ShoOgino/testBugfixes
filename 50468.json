{"path":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#afterClass().mjava","commits":[{"id":"106fbee5a2b8105d0628067f2c65cd0fedfc19e7","date":1464121813,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#afterClass().mjava","pathOld":"/dev/null","sourceNew":"  @AfterClass\n  private static void afterClass() throws Exception {\n    TestInjection.reset();\n    ExecutorUtil.shutdownAndAwaitTermination(EXEC_SERVICE);\n    EXEC_SERVICE = null;\n    CLOUD_CLIENT.close(); CLOUD_CLIENT = null;\n    for (HttpSolrClient client : CLIENTS) {\n      client.close();\n    }\n    CLIENTS = null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0e121d43b5a10f2df530f406f935102656e9c4e8","date":1464198131,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#afterClass().mjava","pathOld":"/dev/null","sourceNew":"  @AfterClass\n  private static void afterClass() throws Exception {\n    TestInjection.reset();\n    ExecutorUtil.shutdownAndAwaitTermination(EXEC_SERVICE);\n    EXEC_SERVICE = null;\n    CLOUD_CLIENT.close(); CLOUD_CLIENT = null;\n    for (HttpSolrClient client : CLIENTS) {\n      client.close();\n    }\n    CLIENTS = null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"83870855d82aba6819217abeff5a40779dbb28b4","date":1464291012,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#afterClass().mjava","pathOld":"/dev/null","sourceNew":"  @AfterClass\n  private static void afterClass() throws Exception {\n    TestInjection.reset();\n    ExecutorUtil.shutdownAndAwaitTermination(EXEC_SERVICE);\n    EXEC_SERVICE = null;\n    CLOUD_CLIENT.close(); CLOUD_CLIENT = null;\n    for (HttpSolrClient client : CLIENTS) {\n      client.close();\n    }\n    CLIENTS = null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#afterClass().mjava","pathOld":"/dev/null","sourceNew":"  @AfterClass\n  private static void afterClass() throws Exception {\n    TestInjection.reset();\n    ExecutorUtil.shutdownAndAwaitTermination(EXEC_SERVICE);\n    EXEC_SERVICE = null;\n    CLOUD_CLIENT.close(); CLOUD_CLIENT = null;\n    for (HttpSolrClient client : CLIENTS) {\n      client.close();\n    }\n    CLIENTS = null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#afterClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#afterClass().mjava","sourceNew":"  @AfterClass\n  private static void afterClass() throws Exception {\n    TestInjection.reset();\n    ExecutorUtil.shutdownAndAwaitTermination(EXEC_SERVICE);\n    EXEC_SERVICE = null;\n    IOUtils.closeQuietly(CLOUD_CLIENT);\n    CLOUD_CLIENT = null;\n    for (HttpSolrClient client : CLIENTS) {\n      client.close();\n    }\n    CLIENTS = null;\n  }\n\n","sourceOld":"  @AfterClass\n  private static void afterClass() throws Exception {\n    TestInjection.reset();\n    ExecutorUtil.shutdownAndAwaitTermination(EXEC_SERVICE);\n    EXEC_SERVICE = null;\n    CLOUD_CLIENT.close(); CLOUD_CLIENT = null;\n    for (HttpSolrClient client : CLIENTS) {\n      client.close();\n    }\n    CLIENTS = null;\n  }\n\n","bugFix":["106fbee5a2b8105d0628067f2c65cd0fedfc19e7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97b4cb60656656afd2caf38f9a1cf0cf27718c2b","date":1548717748,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#afterClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#afterClass().mjava","sourceNew":"  @AfterClass\n  private static void afterClass() throws Exception {\n    TestInjection.reset();\n    ExecutorUtil.shutdownAndAwaitTermination(EXEC_SERVICE);\n    EXEC_SERVICE = null;\n    IOUtils.closeQuietly(CLOUD_CLIENT);\n    CLOUD_CLIENT = null;\n    for (HttpSolrClient client : CLIENTS) {\n      if (null == client) {\n        log.error(\"CLIENTS contains a null SolrClient???\");\n      }\n      IOUtils.closeQuietly(client);\n    }\n    CLIENTS = null;\n  }\n\n","sourceOld":"  @AfterClass\n  private static void afterClass() throws Exception {\n    TestInjection.reset();\n    ExecutorUtil.shutdownAndAwaitTermination(EXEC_SERVICE);\n    EXEC_SERVICE = null;\n    IOUtils.closeQuietly(CLOUD_CLIENT);\n    CLOUD_CLIENT = null;\n    for (HttpSolrClient client : CLIENTS) {\n      client.close();\n    }\n    CLIENTS = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e60a9fe2e83aaddaa90d1f75d7eb7e137a8e0060","date":1558549372,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#afterClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#afterClass().mjava","sourceNew":"  @AfterClass\n  private static void afterClass() throws Exception {\n    TestInjection.reset();\n    ExecutorUtil.shutdownAndAwaitTermination(EXEC_SERVICE);\n    EXEC_SERVICE = null;\n    IOUtils.closeQuietly(CLOUD_CLIENT);\n    CLOUD_CLIENT = null;\n    for (HttpSolrClient client : CLIENTS) {\n      if (null == client) {\n        log.error(\"CLIENTS contains a null SolrClient???\");\n      }\n      IOUtils.closeQuietly(client);\n    }\n    CLIENTS.clear();\n  }\n\n","sourceOld":"  @AfterClass\n  private static void afterClass() throws Exception {\n    TestInjection.reset();\n    ExecutorUtil.shutdownAndAwaitTermination(EXEC_SERVICE);\n    EXEC_SERVICE = null;\n    IOUtils.closeQuietly(CLOUD_CLIENT);\n    CLOUD_CLIENT = null;\n    for (HttpSolrClient client : CLIENTS) {\n      if (null == client) {\n        log.error(\"CLIENTS contains a null SolrClient???\");\n      }\n      IOUtils.closeQuietly(client);\n    }\n    CLIENTS = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f1fbbb788f926837e98f9f0d1095e7a7e4001a6","date":1558594754,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#afterClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#afterClass().mjava","sourceNew":"  @AfterClass\n  private static void afterClass() throws Exception {\n    TestInjection.reset();\n    ExecutorUtil.shutdownAndAwaitTermination(EXEC_SERVICE);\n    EXEC_SERVICE = null;\n    IOUtils.closeQuietly(CLOUD_CLIENT);\n    CLOUD_CLIENT = null;\n    for (HttpSolrClient client : CLIENTS) {\n      if (null == client) {\n        log.error(\"CLIENTS contains a null SolrClient???\");\n      }\n      IOUtils.closeQuietly(client);\n    }\n    CLIENTS.clear();\n  }\n\n","sourceOld":"  @AfterClass\n  private static void afterClass() throws Exception {\n    TestInjection.reset();\n    ExecutorUtil.shutdownAndAwaitTermination(EXEC_SERVICE);\n    EXEC_SERVICE = null;\n    IOUtils.closeQuietly(CLOUD_CLIENT);\n    CLOUD_CLIENT = null;\n    for (HttpSolrClient client : CLIENTS) {\n      if (null == client) {\n        log.error(\"CLIENTS contains a null SolrClient???\");\n      }\n      IOUtils.closeQuietly(client);\n    }\n    CLIENTS = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1edfe287b5d8d16a9effaad9cf334bedae0c8857","date":1561656486,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#afterClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestStressCloudBlindAtomicUpdates#afterClass().mjava","sourceNew":"  @AfterClass\n  private static void afterClass() throws Exception {\n    TestInjection.reset();\n    if (null != EXEC_SERVICE) {\n      ExecutorUtil.shutdownAndAwaitTermination(EXEC_SERVICE);\n      EXEC_SERVICE = null;\n    }\n    if (null != CLOUD_CLIENT) {\n      IOUtils.closeQuietly(CLOUD_CLIENT);\n      CLOUD_CLIENT = null;\n    }\n    for (HttpSolrClient client : CLIENTS) {\n      if (null == client) {\n        log.error(\"CLIENTS contains a null SolrClient???\");\n      }\n      IOUtils.closeQuietly(client);\n    }\n    CLIENTS.clear();\n  }\n\n","sourceOld":"  @AfterClass\n  private static void afterClass() throws Exception {\n    TestInjection.reset();\n    ExecutorUtil.shutdownAndAwaitTermination(EXEC_SERVICE);\n    EXEC_SERVICE = null;\n    IOUtils.closeQuietly(CLOUD_CLIENT);\n    CLOUD_CLIENT = null;\n    for (HttpSolrClient client : CLIENTS) {\n      if (null == client) {\n        log.error(\"CLIENTS contains a null SolrClient???\");\n      }\n      IOUtils.closeQuietly(client);\n    }\n    CLIENTS.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0e121d43b5a10f2df530f406f935102656e9c4e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","106fbee5a2b8105d0628067f2c65cd0fedfc19e7"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"5f1fbbb788f926837e98f9f0d1095e7a7e4001a6":["97b4cb60656656afd2caf38f9a1cf0cf27718c2b","e60a9fe2e83aaddaa90d1f75d7eb7e137a8e0060"],"e60a9fe2e83aaddaa90d1f75d7eb7e137a8e0060":["97b4cb60656656afd2caf38f9a1cf0cf27718c2b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1edfe287b5d8d16a9effaad9cf334bedae0c8857":["5f1fbbb788f926837e98f9f0d1095e7a7e4001a6"],"97b4cb60656656afd2caf38f9a1cf0cf27718c2b":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"83870855d82aba6819217abeff5a40779dbb28b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0e121d43b5a10f2df530f406f935102656e9c4e8"],"106fbee5a2b8105d0628067f2c65cd0fedfc19e7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0e121d43b5a10f2df530f406f935102656e9c4e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1edfe287b5d8d16a9effaad9cf334bedae0c8857"]},"commit2Childs":{"0e121d43b5a10f2df530f406f935102656e9c4e8":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["97b4cb60656656afd2caf38f9a1cf0cf27718c2b"],"5f1fbbb788f926837e98f9f0d1095e7a7e4001a6":["1edfe287b5d8d16a9effaad9cf334bedae0c8857"],"e60a9fe2e83aaddaa90d1f75d7eb7e137a8e0060":["5f1fbbb788f926837e98f9f0d1095e7a7e4001a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0e121d43b5a10f2df530f406f935102656e9c4e8","83870855d82aba6819217abeff5a40779dbb28b4","106fbee5a2b8105d0628067f2c65cd0fedfc19e7","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"1edfe287b5d8d16a9effaad9cf334bedae0c8857":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"97b4cb60656656afd2caf38f9a1cf0cf27718c2b":["5f1fbbb788f926837e98f9f0d1095e7a7e4001a6","e60a9fe2e83aaddaa90d1f75d7eb7e137a8e0060"],"83870855d82aba6819217abeff5a40779dbb28b4":[],"106fbee5a2b8105d0628067f2c65cd0fedfc19e7":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}