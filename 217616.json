{"path":"src/java/org/apache/lucene/store/IndexOutput#copyBytes(IndexInput,long).mjava","commits":[{"id":"3b248d9b80f6b2fceade80b3c8683d1cca6e4c98","date":1194520024,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexOutput#copyBytes(IndexInput,long).mjava","pathOld":"/dev/null","sourceNew":"  /** Copy numBytes bytes from input to ourself. */\n  public void copyBytes(IndexInput input, long numBytes) throws IOException {\n    long left = numBytes;\n    if (copyBuffer == null)\n      copyBuffer = new byte[COPY_BUFFER_SIZE];\n    while(left > 0) {\n      final int toCopy;\n      if (left > COPY_BUFFER_SIZE)\n        toCopy = COPY_BUFFER_SIZE;\n      else\n        toCopy = (int) left;\n      input.readBytes(copyBuffer, 0, toCopy);\n      writeBytes(copyBuffer, 0, toCopy);\n      left -= toCopy;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0116f9029c16615130a7f0225834e7914521f834","date":1243852031,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexOutput#copyBytes(IndexInput,long).mjava","pathOld":"src/java/org/apache/lucene/store/IndexOutput#copyBytes(IndexInput,long).mjava","sourceNew":"  /** Copy numBytes bytes from input to ourself. */\n  public void copyBytes(IndexInput input, long numBytes) throws IOException {\n    assert numBytes >= 0: \"numBytes=\" + numBytes;\n    long left = numBytes;\n    if (copyBuffer == null)\n      copyBuffer = new byte[COPY_BUFFER_SIZE];\n    while(left > 0) {\n      final int toCopy;\n      if (left > COPY_BUFFER_SIZE)\n        toCopy = COPY_BUFFER_SIZE;\n      else\n        toCopy = (int) left;\n      input.readBytes(copyBuffer, 0, toCopy);\n      writeBytes(copyBuffer, 0, toCopy);\n      left -= toCopy;\n    }\n  }\n\n","sourceOld":"  /** Copy numBytes bytes from input to ourself. */\n  public void copyBytes(IndexInput input, long numBytes) throws IOException {\n    long left = numBytes;\n    if (copyBuffer == null)\n      copyBuffer = new byte[COPY_BUFFER_SIZE];\n    while(left > 0) {\n      final int toCopy;\n      if (left > COPY_BUFFER_SIZE)\n        toCopy = COPY_BUFFER_SIZE;\n      else\n        toCopy = (int) left;\n      input.readBytes(copyBuffer, 0, toCopy);\n      writeBytes(copyBuffer, 0, toCopy);\n      left -= toCopy;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/IndexOutput#copyBytes(IndexInput,long).mjava","pathOld":"src/java/org/apache/lucene/store/IndexOutput#copyBytes(IndexInput,long).mjava","sourceNew":"  /** Copy numBytes bytes from input to ourself. */\n  public void copyBytes(IndexInput input, long numBytes) throws IOException {\n    assert numBytes >= 0: \"numBytes=\" + numBytes;\n    long left = numBytes;\n    if (copyBuffer == null)\n      copyBuffer = new byte[COPY_BUFFER_SIZE];\n    while(left > 0) {\n      final int toCopy;\n      if (left > COPY_BUFFER_SIZE)\n        toCopy = COPY_BUFFER_SIZE;\n      else\n        toCopy = (int) left;\n      input.readBytes(copyBuffer, 0, toCopy);\n      writeBytes(copyBuffer, 0, toCopy);\n      left -= toCopy;\n    }\n  }\n\n","sourceOld":"  /** Copy numBytes bytes from input to ourself. */\n  public void copyBytes(IndexInput input, long numBytes) throws IOException {\n    assert numBytes >= 0: \"numBytes=\" + numBytes;\n    long left = numBytes;\n    if (copyBuffer == null)\n      copyBuffer = new byte[COPY_BUFFER_SIZE];\n    while(left > 0) {\n      final int toCopy;\n      if (left > COPY_BUFFER_SIZE)\n        toCopy = COPY_BUFFER_SIZE;\n      else\n        toCopy = (int) left;\n      input.readBytes(copyBuffer, 0, toCopy);\n      writeBytes(copyBuffer, 0, toCopy);\n      left -= toCopy;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3b248d9b80f6b2fceade80b3c8683d1cca6e4c98":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0116f9029c16615130a7f0225834e7914521f834":["3b248d9b80f6b2fceade80b3c8683d1cca6e4c98"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0116f9029c16615130a7f0225834e7914521f834"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b248d9b80f6b2fceade80b3c8683d1cca6e4c98"],"3b248d9b80f6b2fceade80b3c8683d1cca6e4c98":["0116f9029c16615130a7f0225834e7914521f834"],"0116f9029c16615130a7f0225834e7914521f834":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}