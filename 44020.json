{"path":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","sourceNew":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = 0.5f;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = 0.5f;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f03d60547476e008d3d993cd26872c1157f19cf","date":1270899773,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","sourceNew":"  final public QueryNode Term(CharSequence field) throws ParseException {\r\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\r\n  boolean fuzzy = false;\r\n  QueryNode q =null;\r\n  ParametricQueryNode qLower, qUpper;\r\n  float defaultMinSimilarity = 0.5f;\r\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n    case TERM:\r\n    case NUMBER:\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case TERM:\r\n        term = jj_consume_token(TERM);\r\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\r\n        break;\r\n      case NUMBER:\r\n        term = jj_consume_token(NUMBER);\r\n        break;\r\n      default:\r\n        jj_la1[9] = jj_gen;\r\n        jj_consume_token(-1);\r\n        throw new ParseException();\r\n      }\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case FUZZY_SLOP:\r\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\r\n                                fuzzy=true;\r\n        break;\r\n      default:\r\n        jj_la1[10] = jj_gen;\r\n        ;\r\n      }\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case CARAT:\r\n        jj_consume_token(CARAT);\r\n        boost = jj_consume_token(NUMBER);\r\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n        case FUZZY_SLOP:\r\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\r\n                                                         fuzzy=true;\r\n          break;\r\n        default:\r\n          jj_la1[11] = jj_gen;\r\n          ;\r\n        }\r\n        break;\r\n      default:\r\n        jj_la1[12] = jj_gen;\r\n        ;\r\n      }\r\n       if (fuzzy) {\r\n          float fms = defaultMinSimilarity;\r\n          try {\r\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\r\n          } catch (Exception ignored) { }\r\n         if(fms < 0.0f || fms > 1.0f){\r\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\r\n         }\r\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\r\n       }\r\n      break;\r\n    case RANGEIN_START:\r\n      jj_consume_token(RANGEIN_START);\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case RANGEIN_GOOP:\r\n        goop1 = jj_consume_token(RANGEIN_GOOP);\r\n        break;\r\n      case RANGEIN_QUOTED:\r\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\r\n        break;\r\n      default:\r\n        jj_la1[13] = jj_gen;\r\n        jj_consume_token(-1);\r\n        throw new ParseException();\r\n      }\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case RANGEIN_TO:\r\n        jj_consume_token(RANGEIN_TO);\r\n        break;\r\n      default:\r\n        jj_la1[14] = jj_gen;\r\n        ;\r\n      }\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case RANGEIN_GOOP:\r\n        goop2 = jj_consume_token(RANGEIN_GOOP);\r\n        break;\r\n      case RANGEIN_QUOTED:\r\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\r\n        break;\r\n      default:\r\n        jj_la1[15] = jj_gen;\r\n        jj_consume_token(-1);\r\n        throw new ParseException();\r\n      }\r\n      jj_consume_token(RANGEIN_END);\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case CARAT:\r\n        jj_consume_token(CARAT);\r\n        boost = jj_consume_token(NUMBER);\r\n        break;\r\n      default:\r\n        jj_la1[16] = jj_gen;\r\n        ;\r\n      }\r\n          if (goop1.kind == RANGEIN_QUOTED) {\r\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\r\n          }\r\n          if (goop2.kind == RANGEIN_QUOTED) {\r\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\r\n          }\r\n\r\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\r\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\r\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\r\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\r\n          q = new ParametricRangeQueryNode(qLower, qUpper);\r\n      break;\r\n    case RANGEEX_START:\r\n      jj_consume_token(RANGEEX_START);\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case RANGEEX_GOOP:\r\n        goop1 = jj_consume_token(RANGEEX_GOOP);\r\n        break;\r\n      case RANGEEX_QUOTED:\r\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\r\n        break;\r\n      default:\r\n        jj_la1[17] = jj_gen;\r\n        jj_consume_token(-1);\r\n        throw new ParseException();\r\n      }\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case RANGEEX_TO:\r\n        jj_consume_token(RANGEEX_TO);\r\n        break;\r\n      default:\r\n        jj_la1[18] = jj_gen;\r\n        ;\r\n      }\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case RANGEEX_GOOP:\r\n        goop2 = jj_consume_token(RANGEEX_GOOP);\r\n        break;\r\n      case RANGEEX_QUOTED:\r\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\r\n        break;\r\n      default:\r\n        jj_la1[19] = jj_gen;\r\n        jj_consume_token(-1);\r\n        throw new ParseException();\r\n      }\r\n      jj_consume_token(RANGEEX_END);\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case CARAT:\r\n        jj_consume_token(CARAT);\r\n        boost = jj_consume_token(NUMBER);\r\n        break;\r\n      default:\r\n        jj_la1[20] = jj_gen;\r\n        ;\r\n      }\r\n          if (goop1.kind == RANGEEX_QUOTED) {\r\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\r\n          }\r\n          if (goop2.kind == RANGEEX_QUOTED) {\r\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\r\n          }\r\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\r\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\r\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\r\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\r\n          q = new ParametricRangeQueryNode(qLower, qUpper);\r\n      break;\r\n    case QUOTED:\r\n      term = jj_consume_token(QUOTED);\r\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case FUZZY_SLOP:\r\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\r\n        break;\r\n      default:\r\n        jj_la1[21] = jj_gen;\r\n        ;\r\n      }\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case CARAT:\r\n        jj_consume_token(CARAT);\r\n        boost = jj_consume_token(NUMBER);\r\n        break;\r\n      default:\r\n        jj_la1[22] = jj_gen;\r\n        ;\r\n      }\r\n         int phraseSlop = 0;\r\n\r\n         if (fuzzySlop != null) {\r\n           try {\r\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\r\n             q = new SlopQueryNode(q, phraseSlop);\r\n           }\r\n           catch (Exception ignored) {\r\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\r\n\t         * slop number is invalid)\r\n\t         */\r\n           }\r\n         }\r\n      break;\r\n    default:\r\n      jj_la1[23] = jj_gen;\r\n      jj_consume_token(-1);\r\n      throw new ParseException();\r\n    }\r\n          if (boost != null) {\r\n                  float f = (float)1.0;\r\n                  try {\r\n                    f = Float.valueOf(boost.image).floatValue();\r\n                    // avoid boosting null queries, such as those caused by stop words\r\n                if (q != null) {\r\n                        q = new BoostQueryNode(q, f);\r\n                }\r\n                  } catch (Exception ignored) {\r\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\r\n\t         * boost number is invalid)\r\n\t         */\r\n                  }\r\n          }\r\n      {if (true) return q;}\r\n    throw new Error(\"Missing return statement in function\");\r\n  }\r\n\n","sourceOld":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = 0.5f;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f15bad88fcdb5cb75a8cd9f5dea23a87a3b04b6b","date":1270900166,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","sourceNew":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = 0.5f;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public QueryNode Term(CharSequence field) throws ParseException {\r\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\r\n  boolean fuzzy = false;\r\n  QueryNode q =null;\r\n  ParametricQueryNode qLower, qUpper;\r\n  float defaultMinSimilarity = 0.5f;\r\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n    case TERM:\r\n    case NUMBER:\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case TERM:\r\n        term = jj_consume_token(TERM);\r\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\r\n        break;\r\n      case NUMBER:\r\n        term = jj_consume_token(NUMBER);\r\n        break;\r\n      default:\r\n        jj_la1[9] = jj_gen;\r\n        jj_consume_token(-1);\r\n        throw new ParseException();\r\n      }\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case FUZZY_SLOP:\r\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\r\n                                fuzzy=true;\r\n        break;\r\n      default:\r\n        jj_la1[10] = jj_gen;\r\n        ;\r\n      }\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case CARAT:\r\n        jj_consume_token(CARAT);\r\n        boost = jj_consume_token(NUMBER);\r\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n        case FUZZY_SLOP:\r\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\r\n                                                         fuzzy=true;\r\n          break;\r\n        default:\r\n          jj_la1[11] = jj_gen;\r\n          ;\r\n        }\r\n        break;\r\n      default:\r\n        jj_la1[12] = jj_gen;\r\n        ;\r\n      }\r\n       if (fuzzy) {\r\n          float fms = defaultMinSimilarity;\r\n          try {\r\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\r\n          } catch (Exception ignored) { }\r\n         if(fms < 0.0f || fms > 1.0f){\r\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\r\n         }\r\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\r\n       }\r\n      break;\r\n    case RANGEIN_START:\r\n      jj_consume_token(RANGEIN_START);\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case RANGEIN_GOOP:\r\n        goop1 = jj_consume_token(RANGEIN_GOOP);\r\n        break;\r\n      case RANGEIN_QUOTED:\r\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\r\n        break;\r\n      default:\r\n        jj_la1[13] = jj_gen;\r\n        jj_consume_token(-1);\r\n        throw new ParseException();\r\n      }\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case RANGEIN_TO:\r\n        jj_consume_token(RANGEIN_TO);\r\n        break;\r\n      default:\r\n        jj_la1[14] = jj_gen;\r\n        ;\r\n      }\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case RANGEIN_GOOP:\r\n        goop2 = jj_consume_token(RANGEIN_GOOP);\r\n        break;\r\n      case RANGEIN_QUOTED:\r\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\r\n        break;\r\n      default:\r\n        jj_la1[15] = jj_gen;\r\n        jj_consume_token(-1);\r\n        throw new ParseException();\r\n      }\r\n      jj_consume_token(RANGEIN_END);\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case CARAT:\r\n        jj_consume_token(CARAT);\r\n        boost = jj_consume_token(NUMBER);\r\n        break;\r\n      default:\r\n        jj_la1[16] = jj_gen;\r\n        ;\r\n      }\r\n          if (goop1.kind == RANGEIN_QUOTED) {\r\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\r\n          }\r\n          if (goop2.kind == RANGEIN_QUOTED) {\r\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\r\n          }\r\n\r\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\r\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\r\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\r\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\r\n          q = new ParametricRangeQueryNode(qLower, qUpper);\r\n      break;\r\n    case RANGEEX_START:\r\n      jj_consume_token(RANGEEX_START);\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case RANGEEX_GOOP:\r\n        goop1 = jj_consume_token(RANGEEX_GOOP);\r\n        break;\r\n      case RANGEEX_QUOTED:\r\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\r\n        break;\r\n      default:\r\n        jj_la1[17] = jj_gen;\r\n        jj_consume_token(-1);\r\n        throw new ParseException();\r\n      }\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case RANGEEX_TO:\r\n        jj_consume_token(RANGEEX_TO);\r\n        break;\r\n      default:\r\n        jj_la1[18] = jj_gen;\r\n        ;\r\n      }\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case RANGEEX_GOOP:\r\n        goop2 = jj_consume_token(RANGEEX_GOOP);\r\n        break;\r\n      case RANGEEX_QUOTED:\r\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\r\n        break;\r\n      default:\r\n        jj_la1[19] = jj_gen;\r\n        jj_consume_token(-1);\r\n        throw new ParseException();\r\n      }\r\n      jj_consume_token(RANGEEX_END);\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case CARAT:\r\n        jj_consume_token(CARAT);\r\n        boost = jj_consume_token(NUMBER);\r\n        break;\r\n      default:\r\n        jj_la1[20] = jj_gen;\r\n        ;\r\n      }\r\n          if (goop1.kind == RANGEEX_QUOTED) {\r\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\r\n          }\r\n          if (goop2.kind == RANGEEX_QUOTED) {\r\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\r\n          }\r\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\r\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\r\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\r\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\r\n          q = new ParametricRangeQueryNode(qLower, qUpper);\r\n      break;\r\n    case QUOTED:\r\n      term = jj_consume_token(QUOTED);\r\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case FUZZY_SLOP:\r\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\r\n        break;\r\n      default:\r\n        jj_la1[21] = jj_gen;\r\n        ;\r\n      }\r\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r\n      case CARAT:\r\n        jj_consume_token(CARAT);\r\n        boost = jj_consume_token(NUMBER);\r\n        break;\r\n      default:\r\n        jj_la1[22] = jj_gen;\r\n        ;\r\n      }\r\n         int phraseSlop = 0;\r\n\r\n         if (fuzzySlop != null) {\r\n           try {\r\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\r\n             q = new SlopQueryNode(q, phraseSlop);\r\n           }\r\n           catch (Exception ignored) {\r\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\r\n\t         * slop number is invalid)\r\n\t         */\r\n           }\r\n         }\r\n      break;\r\n    default:\r\n      jj_la1[23] = jj_gen;\r\n      jj_consume_token(-1);\r\n      throw new ParseException();\r\n    }\r\n          if (boost != null) {\r\n                  float f = (float)1.0;\r\n                  try {\r\n                    f = Float.valueOf(boost.image).floatValue();\r\n                    // avoid boosting null queries, such as those caused by stop words\r\n                if (q != null) {\r\n                        q = new BoostQueryNode(q, f);\r\n                }\r\n                  } catch (Exception ignored) {\r\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\r\n\t         * boost number is invalid)\r\n\t         */\r\n                  }\r\n          }\r\n      {if (true) return q;}\r\n    throw new Error(\"Missing return statement in function\");\r\n  }\r\n\n","bugFix":null,"bugIntro":["383e6510a01a27ea3d860472f33049ed2c766e15","e91b7614171e0a6a82351457c2870d2a0124ba9a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d94d6afa51157e490fc169e192a154ffc4cdad0b","date":1283184289,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","sourceNew":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = 0.5f;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       } else if (regexp) {\n         q = new RegexpQueryNode(field, term.image, term.beginColumn, term.endColumn-1);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = 0.5f;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":["0b96ebf39aa5127497a01b3456891ab9a50957ce"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a4d59223802237d352245759cf541e315aab20a","date":1285686672,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","sourceNew":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = 0.5f;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         } else if (fms >= 1.0f && fms != (int) fms) {\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       } else if (regexp) {\n         q = new RegexpQueryNode(field, term.image, term.beginColumn, term.endColumn-1);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = 0.5f;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       } else if (regexp) {\n         q = new RegexpQueryNode(field, term.image, term.beginColumn, term.endColumn-1);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8c0b7c041280280c54063d34a48a0ee85332b1e3","date":1287540778,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","sourceNew":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = org.apache.lucene.search.FuzzyQuery.defaultMinSimilarity;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         } else if (fms >= 1.0f && fms != (int) fms) {\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       } else if (regexp) {\n         q = new RegexpQueryNode(field, term.image, term.beginColumn, term.endColumn-1);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = 0.5f;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         } else if (fms >= 1.0f && fms != (int) fms) {\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       } else if (regexp) {\n         q = new RegexpQueryNode(field, term.image, term.beginColumn, term.endColumn-1);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","sourceNew":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = org.apache.lucene.search.FuzzyQuery.defaultMinSimilarity;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         } else if (fms >= 1.0f && fms != (int) fms) {\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       } else if (regexp) {\n         q = new RegexpQueryNode(field, term.image, term.beginColumn, term.endColumn-1);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = 0.5f;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         } else if (fms >= 1.0f && fms != (int) fms) {\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       } else if (regexp) {\n         q = new RegexpQueryNode(field, term.image, term.beginColumn, term.endColumn-1);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","sourceNew":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = org.apache.lucene.search.FuzzyQuery.defaultMinSimilarity;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         } else if (fms >= 1.0f && fms != (int) fms) {\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       } else if (regexp) {\n         q = new RegexpQueryNode(field, term.image, term.beginColumn, term.endColumn-1);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = 0.5f;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","date":1310612214,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#Term(CharSequence).mjava","sourceNew":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = org.apache.lucene.search.FuzzyQuery.defaultMinSimilarity;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         } else if (fms >= 1.0f && fms != (int) fms) {\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       } else if (regexp) {\n         q = new RegexpQueryNode(field, term.image, term.beginColumn, term.endColumn-1);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public QueryNode Term(CharSequence field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean fuzzy = false;\n  boolean regexp = false;\n  QueryNode q =null;\n  ParametricQueryNode qLower, qUpper;\n  float defaultMinSimilarity = org.apache.lucene.search.FuzzyQuery.defaultMinSimilarity;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n                         q = new FieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       if (fuzzy) {\n          float fms = defaultMinSimilarity;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f){\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}\n         } else if (fms >= 1.0f && fms != (int) fms) {\n           {if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS));}\n         }\n         q = new FuzzyQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image), fms, term.beginColumn, term.endColumn);\n       } else if (regexp) {\n         q = new RegexpQueryNode(field, term.image, term.beginColumn, term.endColumn-1);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LE,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          qLower = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.GT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image), goop1.beginColumn, goop1.endColumn);\n                  qUpper = new ParametricQueryNode(field, ParametricQueryNode.CompareOperator.LT,\n                                               EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image), goop2.beginColumn, goop2.endColumn);\n          q = new ParametricRangeQueryNode(qLower, qUpper);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n                      q = new QuotedFieldQueryNode(field, EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1, term.image.length()-1)), term.beginColumn + 1, term.endColumn - 1);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int phraseSlop = 0;\n\n         if (fuzzySlop != null) {\n           try {\n             phraseSlop = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n             q = new SlopQueryNode(q, phraseSlop);\n           }\n           catch (Exception ignored) {\n            /* Should this be handled somehow? (defaults to \"no PhraseSlop\", if\n\t         * slop number is invalid)\n\t         */\n           }\n         }\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n          if (boost != null) {\n                  float f = (float)1.0;\n                  try {\n                    f = Float.valueOf(boost.image).floatValue();\n                    // avoid boosting null queries, such as those caused by stop words\n                if (q != null) {\n                        q = new BoostQueryNode(q, f);\n                }\n                  } catch (Exception ignored) {\n                        /* Should this be handled somehow? (defaults to \"no boost\", if\n\t         * boost number is invalid)\n\t         */\n                  }\n          }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["8c0b7c041280280c54063d34a48a0ee85332b1e3"],"d94d6afa51157e490fc169e192a154ffc4cdad0b":["f15bad88fcdb5cb75a8cd9f5dea23a87a3b04b6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8c0b7c041280280c54063d34a48a0ee85332b1e3":["3a4d59223802237d352245759cf541e315aab20a"],"3a4d59223802237d352245759cf541e315aab20a":["d94d6afa51157e490fc169e192a154ffc4cdad0b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["f15bad88fcdb5cb75a8cd9f5dea23a87a3b04b6b","8c0b7c041280280c54063d34a48a0ee85332b1e3"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["3a4d59223802237d352245759cf541e315aab20a","8c0b7c041280280c54063d34a48a0ee85332b1e3"],"f15bad88fcdb5cb75a8cd9f5dea23a87a3b04b6b":["1f03d60547476e008d3d993cd26872c1157f19cf"],"1f03d60547476e008d3d993cd26872c1157f19cf":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d94d6afa51157e490fc169e192a154ffc4cdad0b":["3a4d59223802237d352245759cf541e315aab20a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8c0b7c041280280c54063d34a48a0ee85332b1e3":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"3a4d59223802237d352245759cf541e315aab20a":["8c0b7c041280280c54063d34a48a0ee85332b1e3","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"f15bad88fcdb5cb75a8cd9f5dea23a87a3b04b6b":["d94d6afa51157e490fc169e192a154ffc4cdad0b","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"1f03d60547476e008d3d993cd26872c1157f19cf":["f15bad88fcdb5cb75a8cd9f5dea23a87a3b04b6b"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1f03d60547476e008d3d993cd26872c1157f19cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}