{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#assertSuggestions(TopDocs,Entry...).mjava","commits":[{"id":"8c33f6677a2078739058f81eca1df69d12cd62b0","date":1432799589,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#assertSuggestions(TopDocs,Entry...).mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#assertSuggestions(TopDocs,Entry...).mjava","sourceNew":"  static void assertSuggestions(TopDocs actual, Entry... expected) {\n    SuggestScoreDoc[] suggestScoreDocs = (SuggestScoreDoc[]) actual.scoreDocs;\n    assertThat(suggestScoreDocs.length, equalTo(expected.length));\n    for (int i = 0; i < suggestScoreDocs.length; i++) {\n      SuggestScoreDoc lookupDoc = suggestScoreDocs[i];\n      String msg = \"Expected: \" + toString(expected[i]) + \" Actual: \" + toString(lookupDoc);\n      assertThat(msg, lookupDoc.key.toString(), equalTo(expected[i].output));\n      assertThat(msg, lookupDoc.score, equalTo(expected[i].value));\n      assertThat(msg, lookupDoc.context, equalTo(expected[i].context));\n    }\n  }\n\n","sourceOld":"  private void assertSuggestions(TopDocs actual, Entry... expected) {\n    SuggestScoreDoc[] suggestScoreDocs = (SuggestScoreDoc[]) actual.scoreDocs;\n    assertThat(suggestScoreDocs.length, equalTo(expected.length));\n    for (int i = 0; i < suggestScoreDocs.length; i++) {\n      SuggestScoreDoc lookupDoc = suggestScoreDocs[i];\n      assertThat(lookupDoc.key.toString(), equalTo(expected[i].output));\n      assertThat(lookupDoc.score, equalTo(expected[i].value));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"902a92b60648a8925bfd9bb53a78669cd2ea98fd","date":1487797466,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#assertSuggestions(TopDocs,Entry...).mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#assertSuggestions(TopDocs,Entry...).mjava","sourceNew":"  static void assertSuggestions(TopDocs actual, Entry... expected) {\n    SuggestScoreDoc[] suggestScoreDocs = (SuggestScoreDoc[]) actual.scoreDocs;\n    for (int i = 0; i < Math.min(expected.length, suggestScoreDocs.length); i++) {\n      SuggestScoreDoc lookupDoc = suggestScoreDocs[i];\n      String msg = \"Hit \" + i + \": expected: \" + toString(expected[i]) + \" but actual: \" + toString(lookupDoc);\n      assertThat(msg, lookupDoc.key.toString(), equalTo(expected[i].output));\n      assertThat(msg, lookupDoc.score, equalTo(expected[i].value));\n      assertThat(msg, lookupDoc.context, equalTo(expected[i].context));\n    }\n    assertThat(suggestScoreDocs.length, equalTo(expected.length));\n  }\n\n","sourceOld":"  static void assertSuggestions(TopDocs actual, Entry... expected) {\n    SuggestScoreDoc[] suggestScoreDocs = (SuggestScoreDoc[]) actual.scoreDocs;\n    assertThat(suggestScoreDocs.length, equalTo(expected.length));\n    for (int i = 0; i < suggestScoreDocs.length; i++) {\n      SuggestScoreDoc lookupDoc = suggestScoreDocs[i];\n      String msg = \"Expected: \" + toString(expected[i]) + \" Actual: \" + toString(lookupDoc);\n      assertThat(msg, lookupDoc.key.toString(), equalTo(expected[i].output));\n      assertThat(msg, lookupDoc.score, equalTo(expected[i].value));\n      assertThat(msg, lookupDoc.context, equalTo(expected[i].context));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8c33f6677a2078739058f81eca1df69d12cd62b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"902a92b60648a8925bfd9bb53a78669cd2ea98fd":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["902a92b60648a8925bfd9bb53a78669cd2ea98fd"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["902a92b60648a8925bfd9bb53a78669cd2ea98fd"],"902a92b60648a8925bfd9bb53a78669cd2ea98fd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}