{"path":"lucene/src/java/org/apache/lucene/index/ByteSliceWriter#init(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ByteSliceWriter#init(int).mjava","pathOld":"src/java/org/apache/lucene/index/ByteSliceWriter#init(int).mjava","sourceNew":"  /**\n   * Set up the writer to write at address.\n   */ \n  public void init(int address) {\n    slice = pool.buffers[address >> DocumentsWriter.BYTE_BLOCK_SHIFT];\n    assert slice != null;\n    upto = address & DocumentsWriter.BYTE_BLOCK_MASK;\n    offset0 = address;\n    assert upto < slice.length;\n  }\n\n","sourceOld":"  /**\n   * Set up the writer to write at address.\n   */ \n  public void init(int address) {\n    slice = pool.buffers[address >> DocumentsWriter.BYTE_BLOCK_SHIFT];\n    assert slice != null;\n    upto = address & DocumentsWriter.BYTE_BLOCK_MASK;\n    offset0 = address;\n    assert upto < slice.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ByteSliceWriter#init(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ByteSliceWriter#init(int).mjava","sourceNew":"  /**\n   * Set up the writer to write at address.\n   */\n  public void init(int address) {\n    slice = pool.buffers[address >> DocumentsWriter.BYTE_BLOCK_SHIFT];\n    assert slice != null;\n    upto = address & DocumentsWriter.BYTE_BLOCK_MASK;\n    offset0 = address;\n    assert upto < slice.length;\n  }\n\n","sourceOld":"  /**\n   * Set up the writer to write at address.\n   */ \n  public void init(int address) {\n    slice = pool.buffers[address >> DocumentsWriter.BYTE_BLOCK_SHIFT];\n    assert slice != null;\n    upto = address & DocumentsWriter.BYTE_BLOCK_MASK;\n    offset0 = address;\n    assert upto < slice.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c18273ea5b3974d2f30117f46f1ae416c28f727","date":1279708040,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ByteSliceWriter#init(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ByteSliceWriter#init(int).mjava","sourceNew":"  /**\n   * Set up the writer to write at address.\n   */\n  public void init(int address) {\n    slice = pool.buffers[address >> DocumentsWriterRAMAllocator.BYTE_BLOCK_SHIFT];\n    assert slice != null;\n    upto = address & DocumentsWriterRAMAllocator.BYTE_BLOCK_MASK;\n    offset0 = address;\n    assert upto < slice.length;\n  }\n\n","sourceOld":"  /**\n   * Set up the writer to write at address.\n   */\n  public void init(int address) {\n    slice = pool.buffers[address >> DocumentsWriter.BYTE_BLOCK_SHIFT];\n    assert slice != null;\n    upto = address & DocumentsWriter.BYTE_BLOCK_MASK;\n    offset0 = address;\n    assert upto < slice.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","date":1286023472,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ByteSliceWriter#init(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ByteSliceWriter#init(int).mjava","sourceNew":"  /**\n   * Set up the writer to write at address.\n   */\n  public void init(int address) {\n    slice = pool.buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];\n    assert slice != null;\n    upto = address & ByteBlockPool.BYTE_BLOCK_MASK;\n    offset0 = address;\n    assert upto < slice.length;\n  }\n\n","sourceOld":"  /**\n   * Set up the writer to write at address.\n   */\n  public void init(int address) {\n    slice = pool.buffers[address >> DocumentsWriter.BYTE_BLOCK_SHIFT];\n    assert slice != null;\n    upto = address & DocumentsWriter.BYTE_BLOCK_MASK;\n    offset0 = address;\n    assert upto < slice.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/ByteSliceWriter#init(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ByteSliceWriter#init(int).mjava","sourceNew":"  /**\n   * Set up the writer to write at address.\n   */\n  public void init(int address) {\n    slice = pool.buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];\n    assert slice != null;\n    upto = address & ByteBlockPool.BYTE_BLOCK_MASK;\n    offset0 = address;\n    assert upto < slice.length;\n  }\n\n","sourceOld":"  /**\n   * Set up the writer to write at address.\n   */\n  public void init(int address) {\n    slice = pool.buffers[address >> DocumentsWriterRAMAllocator.BYTE_BLOCK_SHIFT];\n    assert slice != null;\n    upto = address & DocumentsWriterRAMAllocator.BYTE_BLOCK_MASK;\n    offset0 = address;\n    assert upto < slice.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ByteSliceWriter#init(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ByteSliceWriter#init(int).mjava","sourceNew":"  /**\n   * Set up the writer to write at address.\n   */\n  public void init(int address) {\n    slice = pool.buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];\n    assert slice != null;\n    upto = address & ByteBlockPool.BYTE_BLOCK_MASK;\n    offset0 = address;\n    assert upto < slice.length;\n  }\n\n","sourceOld":"  /**\n   * Set up the writer to write at address.\n   */\n  public void init(int address) {\n    slice = pool.buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];\n    assert slice != null;\n    upto = address & ByteBlockPool.BYTE_BLOCK_MASK;\n    offset0 = address;\n    assert upto < slice.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["6c18273ea5b3974d2f30117f46f1ae416c28f727","5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","6c18273ea5b3974d2f30117f46f1ae416c28f727"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}