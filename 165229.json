{"path":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleMigrate(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"da888af1ab894358122a22229051215f58cf4d54","date":1384408702,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleMigrate(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  private void handleMigrate(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Migrate action invoked: \" + req.getParamString());\n    req.getParams().required().check(\"collection\", \"split.key\", \"target.collection\");\n    Map<String,Object> props = new HashMap<String,Object>();\n    props.put(Overseer.QUEUE_OPERATION, OverseerCollectionProcessor.MIGRATE);\n    copyIfNotNull(req.getParams(), props, \"collection\", \"split.key\", \"target.collection\", \"forward.timeout\");\n    ZkNodeProps m = new ZkNodeProps(props);\n    handleResponse(OverseerCollectionProcessor.MIGRATE, m, rsp, DEFAULT_ZK_TIMEOUT * 20);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleMigrate(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleMigrate(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  private void handleMigrate(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Migrate action invoked: \" + req.getParamString());\n    req.getParams().required().check(\"collection\", \"split.key\", \"target.collection\");\n    Map<String,Object> props = new HashMap<>();\n    props.put(Overseer.QUEUE_OPERATION, OverseerCollectionProcessor.MIGRATE);\n    copyIfNotNull(req.getParams(), props, \"collection\", \"split.key\", \"target.collection\", \"forward.timeout\");\n    ZkNodeProps m = new ZkNodeProps(props);\n    handleResponse(OverseerCollectionProcessor.MIGRATE, m, rsp, DEFAULT_ZK_TIMEOUT * 20);\n  }\n\n","sourceOld":"  private void handleMigrate(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Migrate action invoked: \" + req.getParamString());\n    req.getParams().required().check(\"collection\", \"split.key\", \"target.collection\");\n    Map<String,Object> props = new HashMap<String,Object>();\n    props.put(Overseer.QUEUE_OPERATION, OverseerCollectionProcessor.MIGRATE);\n    copyIfNotNull(req.getParams(), props, \"collection\", \"split.key\", \"target.collection\", \"forward.timeout\");\n    ZkNodeProps m = new ZkNodeProps(props);\n    handleResponse(OverseerCollectionProcessor.MIGRATE, m, rsp, DEFAULT_ZK_TIMEOUT * 20);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211","date":1394784078,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleMigrate(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleMigrate(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  private void handleMigrate(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Migrate action invoked: \" + req.getParamString());\n    req.getParams().required().check(\"collection\", \"split.key\", \"target.collection\");\n    Map<String,Object> props = new HashMap<>();\n    props.put(Overseer.QUEUE_OPERATION, OverseerCollectionProcessor.MIGRATE);\n    copyIfNotNull(req.getParams(), props, \"collection\", \"split.key\", \"target.collection\", \"forward.timeout\", ASYNC);\n    ZkNodeProps m = new ZkNodeProps(props);\n    handleResponse(OverseerCollectionProcessor.MIGRATE, m, rsp, DEFAULT_ZK_TIMEOUT * 20);\n  }\n\n","sourceOld":"  private void handleMigrate(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Migrate action invoked: \" + req.getParamString());\n    req.getParams().required().check(\"collection\", \"split.key\", \"target.collection\");\n    Map<String,Object> props = new HashMap<>();\n    props.put(Overseer.QUEUE_OPERATION, OverseerCollectionProcessor.MIGRATE);\n    copyIfNotNull(req.getParams(), props, \"collection\", \"split.key\", \"target.collection\", \"forward.timeout\");\n    ZkNodeProps m = new ZkNodeProps(props);\n    handleResponse(OverseerCollectionProcessor.MIGRATE, m, rsp, DEFAULT_ZK_TIMEOUT * 20);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c688f7052130cef7bd419c85e3c5be214f7b9e","date":1411018984,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleMigrate(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleMigrate(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  private void handleMigrate(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Migrate action invoked: \" + req.getParamString());\n    req.getParams().required().check(\"collection\", \"split.key\", \"target.collection\");\n    Map<String,Object> props = new HashMap<>();\n    props.put(Overseer.QUEUE_OPERATION, MIGRATE.toLower());\n    copyIfNotNull(req.getParams(), props, \"collection\", \"split.key\", \"target.collection\", \"forward.timeout\", ASYNC);\n    ZkNodeProps m = new ZkNodeProps(props);\n    handleResponse(MIGRATE.toLower(), m, rsp, DEFAULT_ZK_TIMEOUT * 20);\n  }\n\n","sourceOld":"  private void handleMigrate(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Migrate action invoked: \" + req.getParamString());\n    req.getParams().required().check(\"collection\", \"split.key\", \"target.collection\");\n    Map<String,Object> props = new HashMap<>();\n    props.put(Overseer.QUEUE_OPERATION, OverseerCollectionProcessor.MIGRATE);\n    copyIfNotNull(req.getParams(), props, \"collection\", \"split.key\", \"target.collection\", \"forward.timeout\", ASYNC);\n    ZkNodeProps m = new ZkNodeProps(props);\n    handleResponse(OverseerCollectionProcessor.MIGRATE, m, rsp, DEFAULT_ZK_TIMEOUT * 20);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ebd3a557326ef3eab85b73a8cff781f7d801248","date":1431620752,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleMigrate(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":null,"sourceOld":"  private void handleMigrate(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Migrate action invoked: \" + req.getParamString());\n    req.getParams().required().check(\"collection\", \"split.key\", \"target.collection\");\n    Map<String,Object> props = new HashMap<>();\n    props.put(Overseer.QUEUE_OPERATION, MIGRATE.toLower());\n    copyIfNotNull(req.getParams(), props, \"collection\", \"split.key\", \"target.collection\", \"forward.timeout\", ASYNC);\n    ZkNodeProps m = new ZkNodeProps(props);\n    handleResponse(MIGRATE.toLower(), m, rsp, DEFAULT_ZK_TIMEOUT * 20);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"da888af1ab894358122a22229051215f58cf4d54":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["da888af1ab894358122a22229051215f58cf4d54"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"9ebd3a557326ef3eab85b73a8cff781f7d801248":["30c688f7052130cef7bd419c85e3c5be214f7b9e"],"30c688f7052130cef7bd419c85e3c5be214f7b9e":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ebd3a557326ef3eab85b73a8cff781f7d801248"]},"commit2Childs":{"da888af1ab894358122a22229051215f58cf4d54":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["da888af1ab894358122a22229051215f58cf4d54"],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["30c688f7052130cef7bd419c85e3c5be214f7b9e"],"9ebd3a557326ef3eab85b73a8cff781f7d801248":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"30c688f7052130cef7bd419c85e3c5be214f7b9e":["9ebd3a557326ef3eab85b73a8cff781f7d801248"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}