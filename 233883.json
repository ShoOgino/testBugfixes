{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer#stem(String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer#stem(String).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer#stem(String).mjava","sourceNew":"    /**\n     * Finds the stem for given Russian word.\n     * Creation date: (16/03/2002 3:36:48 PM)\n     * @return java.lang.String\n     * @param input java.lang.String\n     */\n    public String stem(String input)\n    {\n        markPositions(input);\n        if (RV == 0)\n            return input; //RV wasn't detected, nothing to stem\n        StringBuilder stemmingZone = new StringBuilder(input.substring(RV));\n        // stemming goes on in RV\n        // Step 1\n\n        if (!perfectiveGerund(stemmingZone))\n        {\n            reflexive(stemmingZone);\n            if (!adjectival(stemmingZone))\n              if (!verb(stemmingZone))\n                noun(stemmingZone);\n        }\n        // Step 2\n        removeI(stemmingZone);\n        // Step 3\n        derivational(stemmingZone);\n        // Step 4\n        superlative(stemmingZone);\n        undoubleN(stemmingZone);\n        removeSoft(stemmingZone);\n        // return result\n        return input.substring(0, RV) + stemmingZone.toString();\n    }\n\n","sourceOld":"    /**\n     * Finds the stem for given Russian word.\n     * Creation date: (16/03/2002 3:36:48 PM)\n     * @return java.lang.String\n     * @param input java.lang.String\n     */\n    public String stem(String input)\n    {\n        markPositions(input);\n        if (RV == 0)\n            return input; //RV wasn't detected, nothing to stem\n        StringBuilder stemmingZone = new StringBuilder(input.substring(RV));\n        // stemming goes on in RV\n        // Step 1\n\n        if (!perfectiveGerund(stemmingZone))\n        {\n            reflexive(stemmingZone);\n            if (!adjectival(stemmingZone))\n              if (!verb(stemmingZone))\n                noun(stemmingZone);\n        }\n        // Step 2\n        removeI(stemmingZone);\n        // Step 3\n        derivational(stemmingZone);\n        // Step 4\n        superlative(stemmingZone);\n        undoubleN(stemmingZone);\n        removeSoft(stemmingZone);\n        // return result\n        return input.substring(0, RV) + stemmingZone.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer#stem(String).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer#stem(String).mjava","sourceNew":"    /**\n     * Finds the stem for given Russian word.\n     * Creation date: (16/03/2002 3:36:48 PM)\n     * @return java.lang.String\n     * @param input java.lang.String\n     */\n    public String stem(String input)\n    {\n        markPositions(input);\n        if (RV == 0)\n            return input; //RV wasn't detected, nothing to stem\n        StringBuilder stemmingZone = new StringBuilder(input.substring(RV));\n        // stemming goes on in RV\n        // Step 1\n\n        if (!perfectiveGerund(stemmingZone))\n        {\n            reflexive(stemmingZone);\n            if (!adjectival(stemmingZone))\n              if (!verb(stemmingZone))\n                noun(stemmingZone);\n        }\n        // Step 2\n        removeI(stemmingZone);\n        // Step 3\n        derivational(stemmingZone);\n        // Step 4\n        superlative(stemmingZone);\n        undoubleN(stemmingZone);\n        removeSoft(stemmingZone);\n        // return result\n        return input.substring(0, RV) + stemmingZone.toString();\n    }\n\n","sourceOld":"    /**\n     * Finds the stem for given Russian word.\n     * Creation date: (16/03/2002 3:36:48 PM)\n     * @return java.lang.String\n     * @param input java.lang.String\n     */\n    public String stem(String input)\n    {\n        markPositions(input);\n        if (RV == 0)\n            return input; //RV wasn't detected, nothing to stem\n        StringBuilder stemmingZone = new StringBuilder(input.substring(RV));\n        // stemming goes on in RV\n        // Step 1\n\n        if (!perfectiveGerund(stemmingZone))\n        {\n            reflexive(stemmingZone);\n            if (!adjectival(stemmingZone))\n              if (!verb(stemmingZone))\n                noun(stemmingZone);\n        }\n        // Step 2\n        removeI(stemmingZone);\n        // Step 3\n        derivational(stemmingZone);\n        // Step 4\n        superlative(stemmingZone);\n        undoubleN(stemmingZone);\n        removeSoft(stemmingZone);\n        // return result\n        return input.substring(0, RV) + stemmingZone.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}