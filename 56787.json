{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseNormsFormatTestCase#testIndependantSparseIterators().mjava","commits":[{"id":"dbc046116d49cd3d0c50f7169cabaa295bc23a4a","date":1552989114,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseNormsFormatTestCase#testIndependantSparseIterators().mjava","pathOld":"/dev/null","sourceNew":"  public void testIndependantSparseIterators() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig().setMergePolicy(newLogMergePolicy());\n    CannedNormSimilarity sim = new CannedNormSimilarity(new long[] {42, 10, 20});\n    conf.setSimilarity(sim);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    Field indexedField = new TextField(\"indexed\", \"a\", Field.Store.NO);\n    doc.add(indexedField);\n    Document emptyDoc = new Document();\n    for (int i = 0; i < 3; ++i) {\n      writer.addDocument(doc);\n      writer.addDocument(emptyDoc);\n    }\n    writer.forceMerge(1);\n    LeafReader r = getOnlyLeafReader(maybeWrapWithMergingReader(writer.getReader()));\n    NumericDocValues n1 = r.getNormValues(\"indexed\");\n    NumericDocValues n2 = r.getNormValues(\"indexed\");\n    assertEquals(0, n1.nextDoc());\n    assertEquals(42, n1.longValue());\n    assertEquals(2, n1.nextDoc());\n    assertEquals(10, n1.longValue());\n    assertEquals(0, n2.nextDoc());\n    assertEquals(42, n2.longValue());\n    assertEquals(2, n2.nextDoc());\n    assertEquals(10, n2.longValue());\n    assertEquals(4, n2.nextDoc());\n    assertEquals(20, n2.longValue());\n    assertEquals(4, n1.nextDoc());\n    assertEquals(20, n1.longValue());\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, n1.nextDoc());\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, n2.nextDoc());\n    IOUtils.close(r, writer, dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbc046116d49cd3d0c50f7169cabaa295bc23a4a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dbc046116d49cd3d0c50f7169cabaa295bc23a4a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dbc046116d49cd3d0c50f7169cabaa295bc23a4a"],"dbc046116d49cd3d0c50f7169cabaa295bc23a4a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}