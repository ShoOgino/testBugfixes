{"path":"src/java/org/apache/lucene/search/payloads/BoostingNearQuery#toString(String).mjava","commits":[{"id":"822e8b4443b8d5091c3fb7ebf02db240a318df0f","date":1250972580,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/payloads/BoostingNearQuery#toString(String).mjava","pathOld":"/dev/null","sourceNew":"  public String toString(String field) {\n    StringBuffer buffer = new StringBuffer();\n    buffer.append(\"boostingNear([\");\n    Iterator i = clauses.iterator();\n    while (i.hasNext()) {\n      SpanQuery clause = (SpanQuery)i.next();\n      buffer.append(clause.toString(field));\n      if (i.hasNext()) {\n        buffer.append(\", \");\n      }\n    }\n    buffer.append(\"], \");\n    buffer.append(slop);\n    buffer.append(\", \");\n    buffer.append(inOrder);\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa4f1b5e611afe6cb170951e0a9202ff95dc9156","date":1250976267,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/payloads/PayloadNearQuery#toString(String).mjava","pathOld":"src/java/org/apache/lucene/search/payloads/BoostingNearQuery#toString(String).mjava","sourceNew":"  public String toString(String field) {\n    StringBuffer buffer = new StringBuffer();\n    buffer.append(\"payloadNear([\");\n    Iterator i = clauses.iterator();\n    while (i.hasNext()) {\n      SpanQuery clause = (SpanQuery) i.next();\n      buffer.append(clause.toString(field));\n      if (i.hasNext()) {\n        buffer.append(\", \");\n      }\n    }\n    buffer.append(\"], \");\n    buffer.append(slop);\n    buffer.append(\", \");\n    buffer.append(inOrder);\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","sourceOld":"  public String toString(String field) {\n    StringBuffer buffer = new StringBuffer();\n    buffer.append(\"boostingNear([\");\n    Iterator i = clauses.iterator();\n    while (i.hasNext()) {\n      SpanQuery clause = (SpanQuery)i.next();\n      buffer.append(clause.toString(field));\n      if (i.hasNext()) {\n        buffer.append(\", \");\n      }\n    }\n    buffer.append(\"], \");\n    buffer.append(slop);\n    buffer.append(\", \");\n    buffer.append(inOrder);\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"822e8b4443b8d5091c3fb7ebf02db240a318df0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fa4f1b5e611afe6cb170951e0a9202ff95dc9156":["822e8b4443b8d5091c3fb7ebf02db240a318df0f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa4f1b5e611afe6cb170951e0a9202ff95dc9156"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["822e8b4443b8d5091c3fb7ebf02db240a318df0f"],"822e8b4443b8d5091c3fb7ebf02db240a318df0f":["fa4f1b5e611afe6cb170951e0a9202ff95dc9156"],"fa4f1b5e611afe6cb170951e0a9202ff95dc9156":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}