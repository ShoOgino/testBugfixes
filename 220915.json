{"path":"solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedFeatureStore#doGet(BaseSolrResource,String).mjava","commits":[{"id":"58c36d634c9789cb739fbd175c1a8d50b3303f6b","date":1478022614,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedFeatureStore#doGet(BaseSolrResource,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Called to retrieve a named part (the given childId) of the resource at the\n   * given endpoint. Note: since we have a unique child feature store we ignore\n   * the childId.\n   */\n  @Override\n  public void doGet(BaseSolrResource endpoint, String childId) {\n    final SolrQueryResponse response = endpoint.getSolrResponse();\n\n    // If no feature store specified, show all the feature stores available\n    if (childId == null) {\n      response.add(FEATURE_STORE_JSON_FIELD, stores.keySet());\n    } else {\n      final FeatureStore store = getFeatureStore(childId);\n      if (store == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"missing feature store [\" + childId + \"]\");\n      }\n      response.add(FEATURES_JSON_FIELD,\n          featuresAsManagedResources(store));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9720b151fde2073f4e401450f4574e5f31c2d0ff","date":1478184029,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedFeatureStore#doGet(BaseSolrResource,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Called to retrieve a named part (the given childId) of the resource at the\n   * given endpoint. Note: since we have a unique child feature store we ignore\n   * the childId.\n   */\n  @Override\n  public void doGet(BaseSolrResource endpoint, String childId) {\n    final SolrQueryResponse response = endpoint.getSolrResponse();\n\n    // If no feature store specified, show all the feature stores available\n    if (childId == null) {\n      response.add(FEATURE_STORE_JSON_FIELD, stores.keySet());\n    } else {\n      final FeatureStore store = getFeatureStore(childId);\n      if (store == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"missing feature store [\" + childId + \"]\");\n      }\n      response.add(FEATURES_JSON_FIELD,\n          featuresAsManagedResources(store));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"]},"commit2Childs":{"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["9720b151fde2073f4e401450f4574e5f31c2d0ff","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9720b151fde2073f4e401450f4574e5f31c2d0ff","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}