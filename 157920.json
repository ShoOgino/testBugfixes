{"path":"solr/core/src/java/org/apache/solr/rest/RestManager#attachManagedResource(ManagedResource,String,Router).mjava","commits":[{"id":"afb6bf9ce227ab6aac5068547e286ecc958b8b9d","date":1394661169,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/RestManager#attachManagedResource(ManagedResource,String,Router).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Attaches a ManagedResource and optionally a path for child resources\n   * to the given Restlet Router.\n   */\n  protected void attachManagedResource(ManagedResource res, String path, Router router) {\n    router.attach(path, res.getServerResourceClass());\n    log.info(\"Attached managed resource at path: {}\",path);\n    \n    // Determine if we should also route requests for child resources\n    // ManagedResource.ChildResourceSupport is a marker interface that\n    // indicates the ManagedResource also manages child resources at\n    // a path one level down from the main resourceId\n    if (ManagedResource.ChildResourceSupport.class.isAssignableFrom(res.getClass())) {\n      router.attach(path+\"/{child}\", res.getServerResourceClass());\n    }    \n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":["0b7196d371f022e3c5c078c58aee21f1c246ce23"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0b7196d371f022e3c5c078c58aee21f1c246ce23","date":1455059321,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/RestManager#attachManagedResource(ManagedResource,String,Router).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/RestManager#attachManagedResource(ManagedResource,String,Router).mjava","sourceNew":"  /**\n   * Attaches a ManagedResource and optionally a path for child resources\n   * to the given Restlet Router.\n   */\n  protected void attachManagedResource(ManagedResource res, String path, Router router) {\n    router.attach(path, res.getServerResourceClass());\n    log.info(\"Attached managed resource at path: {}\",path);\n    \n    // Determine if we should also route requests for child resources\n    // ManagedResource.ChildResourceSupport is a marker interface that\n    // indicates the ManagedResource also manages child resources at\n    // a path one level down from the main resourceId\n    if (ManagedResource.ChildResourceSupport.class.isAssignableFrom(res.getClass())) {\n      router.attach(path+\"/{child}\", res.getServerResourceClass());\n    }    \n  }\n\n","sourceOld":"  /**\n   * Attaches a ManagedResource and optionally a path for child resources\n   * to the given Restlet Router.\n   */\n  protected void attachManagedResource(ManagedResource res, String path, Router router) {\n    router.attach(path, res.getServerResourceClass());\n    log.info(\"Attached managed resource at path: {}\",path);\n    \n    // Determine if we should also route requests for child resources\n    // ManagedResource.ChildResourceSupport is a marker interface that\n    // indicates the ManagedResource also manages child resources at\n    // a path one level down from the main resourceId\n    if (ManagedResource.ChildResourceSupport.class.isAssignableFrom(res.getClass())) {\n      router.attach(path+\"/{child}\", res.getServerResourceClass());\n    }    \n  }  \n\n","bugFix":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b","date":1601832109,"type":4,"author":"Timothy Potter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/rest/RestManager#attachManagedResource(ManagedResource,String,Router).mjava","sourceNew":null,"sourceOld":"  /**\n   * Attaches a ManagedResource and optionally a path for child resources\n   * to the given Restlet Router.\n   */\n  protected void attachManagedResource(ManagedResource res, String path, Router router) {\n    router.attach(path, res.getServerResourceClass());\n    log.info(\"Attached managed resource at path: {}\",path);\n    \n    // Determine if we should also route requests for child resources\n    // ManagedResource.ChildResourceSupport is a marker interface that\n    // indicates the ManagedResource also manages child resources at\n    // a path one level down from the main resourceId\n    if (ManagedResource.ChildResourceSupport.class.isAssignableFrom(res.getClass())) {\n      router.attach(path+\"/{child}\", res.getServerResourceClass());\n    }    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["0b7196d371f022e3c5c078c58aee21f1c246ce23"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0b7196d371f022e3c5c078c58aee21f1c246ce23":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"]},"commit2Childs":{"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["0b7196d371f022e3c5c078c58aee21f1c246ce23"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"0b7196d371f022e3c5c078c58aee21f1c246ce23":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}