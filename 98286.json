{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[LeafReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext).mjava","commits":[{"id":"2131047ecceac64b54ba70feec3d26bbd7e483d7","date":1411862069,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[LeafReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[LeafReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext,boolean).mjava","sourceNew":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<LeafReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context) throws IOException {\n    // validate incoming readers\n    for (LeafReader reader : readers) {\n      if ((reader instanceof SegmentReader) == false) {\n        // We only validate foreign readers up front: each index component\n        // calls .checkIntegrity itself for each incoming producer\n        reader.checkIntegrity();\n      }\n    }\n\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n  }\n\n","sourceOld":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<LeafReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context, boolean validate) throws IOException {\n    // validate incoming readers\n    if (validate) {\n      for (LeafReader reader : readers) {\n        reader.checkIntegrity();\n      }\n    }\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n    mergeState.segmentInfo.setDocCount(setDocMaps());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[LeafReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[LeafReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext,boolean).mjava","sourceNew":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<LeafReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context) throws IOException {\n    // validate incoming readers\n    for (LeafReader reader : readers) {\n      if ((reader instanceof SegmentReader) == false) {\n        // We only validate foreign readers up front: each index component\n        // calls .checkIntegrity itself for each incoming producer\n        reader.checkIntegrity();\n      }\n    }\n\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n  }\n\n","sourceOld":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<LeafReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context, boolean validate) throws IOException {\n    // validate incoming readers\n    if (validate) {\n      for (LeafReader reader : readers) {\n        reader.checkIntegrity();\n      }\n    }\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n    mergeState.segmentInfo.setDocCount(setDocMaps());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5faf65b6692f15cca0f87bf8666c87899afc619f","date":1420468108,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[LeafReader],SegmentInfo,InfoStream,Directory,FieldInfos.FieldNumbers,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[LeafReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext).mjava","sourceNew":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<LeafReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                FieldInfos.FieldNumbers fieldNumbers, IOContext context) throws IOException {\n    if (context.context != IOContext.Context.MERGE) {\n      throw new IllegalArgumentException(\"IOContext.context should be MERGE; got: \" + context.context);\n    }\n    // validate incoming readers\n    for (LeafReader reader : readers) {\n      if ((reader instanceof SegmentReader) == false) {\n        // We only validate foreign readers up front: each index component\n        // calls .checkIntegrity itself for each incoming producer\n        reader.checkIntegrity();\n      }\n    }\n\n    mergeState = new MergeState(readers, segmentInfo, infoStream);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n  }\n\n","sourceOld":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<LeafReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context) throws IOException {\n    // validate incoming readers\n    for (LeafReader reader : readers) {\n      if ((reader instanceof SegmentReader) == false) {\n        // We only validate foreign readers up front: each index component\n        // calls .checkIntegrity itself for each incoming producer\n        reader.checkIntegrity();\n      }\n    }\n\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9bb9a29a5e71a90295f175df8919802993142c9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2131047ecceac64b54ba70feec3d26bbd7e483d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2131047ecceac64b54ba70feec3d26bbd7e483d7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5faf65b6692f15cca0f87bf8666c87899afc619f":["9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5faf65b6692f15cca0f87bf8666c87899afc619f"]},"commit2Childs":{"9bb9a29a5e71a90295f175df8919802993142c9a":["5faf65b6692f15cca0f87bf8666c87899afc619f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9bb9a29a5e71a90295f175df8919802993142c9a","2131047ecceac64b54ba70feec3d26bbd7e483d7"],"2131047ecceac64b54ba70feec3d26bbd7e483d7":["9bb9a29a5e71a90295f175df8919802993142c9a"],"5faf65b6692f15cca0f87bf8666c87899afc619f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}