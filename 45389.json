{"path":"client/java/solrj/src/org/apache/solr/client/solrj/response/QueryResponse#extractDebugInfo(NamedList[Object]).mjava","commits":[{"id":"acdd729ace9db5d0803eea4849ddc3c2ba196127","date":1181861605,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/response/QueryResponse#extractDebugInfo(NamedList[Object]).mjava","pathOld":"/dev/null","sourceNew":"  private void extractDebugInfo( NamedList<Object> debug )\n  {\n    _debugMap = new LinkedHashMap<String, Object>(); // keep the order\n    for( Map.Entry<String, Object> info : debug ) {\n      _debugMap.put( info.getKey(), info.getValue() );\n    }\n\n    // Parse out interisting bits from the debug info\n    _explainMap = new HashMap<String, String>();\n    _docIdMap = new HashMap<String, Integer>();\n    NamedList<String> explain = (NamedList<String>)_debugMap.get( \"explain\" );\n    if( explain != null ) {\n      for( Map.Entry<String, String> info : explain ) {\n        String key = info.getKey();\n        int idx0 = key.indexOf( '=' )+1;\n        int idx1 = info.getKey().indexOf( DKEY );\n        int idx2 = idx1 + DKEY.length();\n\n        String id = key.substring( idx0, idx1 );\n        String docID = key.substring( idx2 );\n        \n        _explainMap.put( id, info.getValue() );\n        _docIdMap.put( id, Integer.valueOf( docID ) );\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["616a045c7a4c521496783e11c1ac38fea9b3cae5","616a045c7a4c521496783e11c1ac38fea9b3cae5","616a045c7a4c521496783e11c1ac38fea9b3cae5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76","date":1204055227,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/response/QueryResponse#extractDebugInfo(NamedList[Object]).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/response/QueryResponse#extractDebugInfo(NamedList[Object]).mjava","sourceNew":"  private void extractDebugInfo( NamedList<Object> debug )\n  {\n    _debugMap = new LinkedHashMap<String, Object>(); // keep the order\n    for( Map.Entry<String, Object> info : debug ) {\n      _debugMap.put( info.getKey(), info.getValue() );\n    }\n\n    // Parse out interisting bits from the debug info\n    _explainMap = new HashMap<String, String>();\n    NamedList<String> explain = (NamedList<String>)_debugMap.get( \"explain\" );\n    if( explain != null ) {\n      for( Map.Entry<String, String> info : explain ) {\n        String key = info.getKey();\n        _explainMap.put( key, info.getValue() );\n      }\n    }\n  }\n\n","sourceOld":"  private void extractDebugInfo( NamedList<Object> debug )\n  {\n    _debugMap = new LinkedHashMap<String, Object>(); // keep the order\n    for( Map.Entry<String, Object> info : debug ) {\n      _debugMap.put( info.getKey(), info.getValue() );\n    }\n\n    // Parse out interisting bits from the debug info\n    _explainMap = new HashMap<String, String>();\n    _docIdMap = new HashMap<String, Integer>();\n    NamedList<String> explain = (NamedList<String>)_debugMap.get( \"explain\" );\n    if( explain != null ) {\n      for( Map.Entry<String, String> info : explain ) {\n        String key = info.getKey();\n        int idx0 = key.indexOf( '=' )+1;\n        int idx1 = info.getKey().indexOf( DKEY );\n        int idx2 = idx1 + DKEY.length();\n\n        String id = key.substring( idx0, idx1 );\n        String docID = key.substring( idx2 );\n        \n        _explainMap.put( id, info.getValue() );\n        _docIdMap.put( id, Integer.valueOf( docID ) );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a45ed565bc5d9a871a16bfe886c3c81c2b955607","date":1216659234,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/response/QueryResponse#extractDebugInfo(NamedList[Object]).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/response/QueryResponse#extractDebugInfo(NamedList[Object]).mjava","sourceNew":"  private void extractDebugInfo( NamedList<Object> debug )\n  {\n    _debugMap = new LinkedHashMap<String, Object>(); // keep the order\n    for( Map.Entry<String, Object> info : debug ) {\n      _debugMap.put( info.getKey(), info.getValue() );\n    }\n\n    // Parse out interesting bits from the debug info\n    _explainMap = new HashMap<String, String>();\n    NamedList<String> explain = (NamedList<String>)_debugMap.get( \"explain\" );\n    if( explain != null ) {\n      for( Map.Entry<String, String> info : explain ) {\n        String key = info.getKey();\n        _explainMap.put( key, info.getValue() );\n      }\n    }\n  }\n\n","sourceOld":"  private void extractDebugInfo( NamedList<Object> debug )\n  {\n    _debugMap = new LinkedHashMap<String, Object>(); // keep the order\n    for( Map.Entry<String, Object> info : debug ) {\n      _debugMap.put( info.getKey(), info.getValue() );\n    }\n\n    // Parse out interisting bits from the debug info\n    _explainMap = new HashMap<String, String>();\n    NamedList<String> explain = (NamedList<String>)_debugMap.get( \"explain\" );\n    if( explain != null ) {\n      for( Map.Entry<String, String> info : explain ) {\n        String key = info.getKey();\n        _explainMap.put( key, info.getValue() );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/response/QueryResponse#extractDebugInfo(NamedList[Object]).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/response/QueryResponse#extractDebugInfo(NamedList[Object]).mjava","sourceNew":"  private void extractDebugInfo( NamedList<Object> debug )\n  {\n    _debugMap = new LinkedHashMap<String, Object>(); // keep the order\n    for( Map.Entry<String, Object> info : debug ) {\n      _debugMap.put( info.getKey(), info.getValue() );\n    }\n\n    // Parse out interesting bits from the debug info\n    _explainMap = new HashMap<String, String>();\n    NamedList<String> explain = (NamedList<String>)_debugMap.get( \"explain\" );\n    if( explain != null ) {\n      for( Map.Entry<String, String> info : explain ) {\n        String key = info.getKey();\n        _explainMap.put( key, info.getValue() );\n      }\n    }\n  }\n\n","sourceOld":"  private void extractDebugInfo( NamedList<Object> debug )\n  {\n    _debugMap = new LinkedHashMap<String, Object>(); // keep the order\n    for( Map.Entry<String, Object> info : debug ) {\n      _debugMap.put( info.getKey(), info.getValue() );\n    }\n\n    // Parse out interesting bits from the debug info\n    _explainMap = new HashMap<String, String>();\n    NamedList<String> explain = (NamedList<String>)_debugMap.get( \"explain\" );\n    if( explain != null ) {\n      for( Map.Entry<String, String> info : explain ) {\n        String key = info.getKey();\n        _explainMap.put( key, info.getValue() );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["a45ed565bc5d9a871a16bfe886c3c81c2b955607"],"acdd729ace9db5d0803eea4849ddc3c2ba196127":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76":["acdd729ace9db5d0803eea4849ddc3c2ba196127"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a45ed565bc5d9a871a16bfe886c3c81c2b955607":["5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":[],"acdd729ace9db5d0803eea4849ddc3c2ba196127":["5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["acdd729ace9db5d0803eea4849ddc3c2ba196127"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76":["a45ed565bc5d9a871a16bfe886c3c81c2b955607"],"a45ed565bc5d9a871a16bfe886c3c81c2b955607":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e3602d5eab954caecc726ab136ad580ac1ceb917","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}