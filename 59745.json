{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#checkIntegrity().mjava","commits":[{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#checkIntegrity().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void checkIntegrity() throws IOException {\n    ensureOpen();\n    \n    // stored fields\n    getFieldsReader().checkIntegrity();\n    \n    // term vectors\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader != null) {\n      termVectorsReader.checkIntegrity();\n    }\n    \n    // terms/postings\n    if (core.fields != null) {\n      core.fields.checkIntegrity();\n    }\n    \n    // norms\n    if (core.normsProducer != null) {\n      core.normsProducer.checkIntegrity();\n    }\n    \n    // docvalues\n    if (dvProducers != null) {\n      for (DocValuesProducer producer : dvProducers) {\n        producer.checkIntegrity();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#checkIntegrity().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void checkIntegrity() throws IOException {\n    ensureOpen();\n    \n    // stored fields\n    getFieldsReader().checkIntegrity();\n    \n    // term vectors\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader != null) {\n      termVectorsReader.checkIntegrity();\n    }\n    \n    // terms/postings\n    if (core.fields != null) {\n      core.fields.checkIntegrity();\n    }\n    \n    // norms\n    if (core.normsProducer != null) {\n      core.normsProducer.checkIntegrity();\n    }\n    \n    // docvalues\n    if (dvProducers != null) {\n      for (DocValuesProducer producer : dvProducers) {\n        producer.checkIntegrity();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22a2e66dfda83847e80095b8693c660742ab3e9c","date":1408628796,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#checkIntegrity().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#checkIntegrity().mjava","sourceNew":"  @Override\n  public void checkIntegrity() throws IOException {\n    ensureOpen();\n    \n    // stored fields\n    getFieldsReader().checkIntegrity();\n    \n    // term vectors\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader != null) {\n      termVectorsReader.checkIntegrity();\n    }\n    \n    // terms/postings\n    if (core.fields != null) {\n      core.fields.checkIntegrity();\n    }\n    \n    // norms\n    if (core.normsProducer != null) {\n      core.normsProducer.checkIntegrity();\n    }\n    \n    // docvalues\n    if (docValuesProducer != null) {\n      docValuesProducer.checkIntegrity();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void checkIntegrity() throws IOException {\n    ensureOpen();\n    \n    // stored fields\n    getFieldsReader().checkIntegrity();\n    \n    // term vectors\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader != null) {\n      termVectorsReader.checkIntegrity();\n    }\n    \n    // terms/postings\n    if (core.fields != null) {\n      core.fields.checkIntegrity();\n    }\n    \n    // norms\n    if (core.normsProducer != null) {\n      core.normsProducer.checkIntegrity();\n    }\n    \n    // docvalues\n    if (dvProducers != null) {\n      for (DocValuesProducer producer : dvProducers) {\n        producer.checkIntegrity();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2131047ecceac64b54ba70feec3d26bbd7e483d7","date":1411862069,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#checkIntegrity().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#checkIntegrity().mjava","sourceNew":"  @Override\n  public void checkIntegrity() throws IOException {\n    ensureOpen();\n\n    // stored fields\n    getFieldsReader().checkIntegrity();\n    \n    // term vectors\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader != null) {\n      termVectorsReader.checkIntegrity();\n    }\n    \n    // terms/postings\n    if (core.fields != null) {\n      core.fields.checkIntegrity();\n    }\n    \n    // norms\n    if (core.normsProducer != null) {\n      core.normsProducer.checkIntegrity();\n    }\n    \n    // docvalues\n    if (docValuesProducer != null) {\n      docValuesProducer.checkIntegrity();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void checkIntegrity() throws IOException {\n    ensureOpen();\n    \n    // stored fields\n    getFieldsReader().checkIntegrity();\n    \n    // term vectors\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader != null) {\n      termVectorsReader.checkIntegrity();\n    }\n    \n    // terms/postings\n    if (core.fields != null) {\n      core.fields.checkIntegrity();\n    }\n    \n    // norms\n    if (core.normsProducer != null) {\n      core.normsProducer.checkIntegrity();\n    }\n    \n    // docvalues\n    if (docValuesProducer != null) {\n      docValuesProducer.checkIntegrity();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#checkIntegrity().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#checkIntegrity().mjava","sourceNew":"  @Override\n  public void checkIntegrity() throws IOException {\n    ensureOpen();\n\n    // stored fields\n    getFieldsReader().checkIntegrity();\n    \n    // term vectors\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader != null) {\n      termVectorsReader.checkIntegrity();\n    }\n    \n    // terms/postings\n    if (core.fields != null) {\n      core.fields.checkIntegrity();\n    }\n    \n    // norms\n    if (core.normsProducer != null) {\n      core.normsProducer.checkIntegrity();\n    }\n    \n    // docvalues\n    if (docValuesProducer != null) {\n      docValuesProducer.checkIntegrity();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void checkIntegrity() throws IOException {\n    ensureOpen();\n    \n    // stored fields\n    getFieldsReader().checkIntegrity();\n    \n    // term vectors\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader != null) {\n      termVectorsReader.checkIntegrity();\n    }\n    \n    // terms/postings\n    if (core.fields != null) {\n      core.fields.checkIntegrity();\n    }\n    \n    // norms\n    if (core.normsProducer != null) {\n      core.normsProducer.checkIntegrity();\n    }\n    \n    // docvalues\n    if (docValuesProducer != null) {\n      docValuesProducer.checkIntegrity();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"505bff044e47a553f461b6f4484d1d08faf4ac85","date":1420728783,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CodecReader#checkIntegrity().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#checkIntegrity().mjava","sourceNew":"  @Override\n  public void checkIntegrity() throws IOException {\n    ensureOpen();\n    \n    // terms/postings\n    getPostingsReader().checkIntegrity();\n    \n    // norms\n    if (getNormsReader() != null) {\n      getNormsReader().checkIntegrity();\n    }\n    \n    // docvalues\n    if (getDocValuesReader() != null) {\n      getDocValuesReader().checkIntegrity();\n    }\n\n    // stored fields\n    if (getFieldsReader() != null) {\n      getFieldsReader().checkIntegrity();\n    }\n    \n    // term vectors\n    if (getTermVectorsReader() != null) {\n      getTermVectorsReader().checkIntegrity();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void checkIntegrity() throws IOException {\n    ensureOpen();\n\n    // stored fields\n    getFieldsReader().checkIntegrity();\n    \n    // term vectors\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader != null) {\n      termVectorsReader.checkIntegrity();\n    }\n    \n    // terms/postings\n    if (core.fields != null) {\n      core.fields.checkIntegrity();\n    }\n    \n    // norms\n    if (core.normsProducer != null) {\n      core.normsProducer.checkIntegrity();\n    }\n    \n    // docvalues\n    if (docValuesProducer != null) {\n      docValuesProducer.checkIntegrity();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91593ae7fe3dbcea4afa49c2e8133db2822dc800","date":1586956259,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#checkIntegrity().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void checkIntegrity() throws IOException {\n    super.checkIntegrity();\n    if (core.cfsReader != null) {\n      core.cfsReader.checkIntegrity();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91593ae7fe3dbcea4afa49c2e8133db2822dc800":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["22a2e66dfda83847e80095b8693c660742ab3e9c","2131047ecceac64b54ba70feec3d26bbd7e483d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2131047ecceac64b54ba70feec3d26bbd7e483d7":["22a2e66dfda83847e80095b8693c660742ab3e9c"],"22a2e66dfda83847e80095b8693c660742ab3e9c":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91593ae7fe3dbcea4afa49c2e8133db2822dc800"]},"commit2Childs":{"91593ae7fe3dbcea4afa49c2e8133db2822dc800":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","22a2e66dfda83847e80095b8693c660742ab3e9c"],"9bb9a29a5e71a90295f175df8919802993142c9a":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"2131047ecceac64b54ba70feec3d26bbd7e483d7":["9bb9a29a5e71a90295f175df8919802993142c9a"],"22a2e66dfda83847e80095b8693c660742ab3e9c":["9bb9a29a5e71a90295f175df8919802993142c9a","2131047ecceac64b54ba70feec3d26bbd7e483d7"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["91593ae7fe3dbcea4afa49c2e8133db2822dc800"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}