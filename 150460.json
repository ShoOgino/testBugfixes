{"path":"lucene/core/src/java/org/apache/lucene/search/TwoPhaseDocIdSetIterator#matches().mjava","commits":[{"id":"c2fc8e2ba3fb8b72ed1e1f99270a42036b23d9a1","date":1423845906,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TwoPhaseDocIdSetIterator#matches().mjava","pathOld":"/dev/null","sourceNew":"  /** Return whether the current doc ID that the iterator is on matches. This\n   *  method should only be called when the iterator is positionned, ie. not\n   *  when {@link DocIdSetIterator#docID()} is {@code -1} or\n   *  {@link DocIdSetIterator#NO_MORE_DOCS}. */\n  public abstract boolean matches() throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e2111c8a5e5c03950d0556bb81fef7db0a7149a","date":1424360057,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TwoPhaseDocIdSetIterator#matches().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TwoPhaseDocIdSetIterator#matches().mjava","sourceNew":"  /** Return whether the current doc ID that the iterator is on matches. This\n   *  method should only be called when the iterator is positionned -- ie. not\n   *  when {@link DocIdSetIterator#docID()} is {@code -1} or\n   *  {@link DocIdSetIterator#NO_MORE_DOCS} -- and at most once. */\n  public abstract boolean matches() throws IOException;\n\n","sourceOld":"  /** Return whether the current doc ID that the iterator is on matches. This\n   *  method should only be called when the iterator is positionned, ie. not\n   *  when {@link DocIdSetIterator#docID()} is {@code -1} or\n   *  {@link DocIdSetIterator#NO_MORE_DOCS}. */\n  public abstract boolean matches() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3d6eb0072094d94624002318ba2d4c840946833","date":1424947971,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TwoPhaseIterator#matches().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TwoPhaseDocIdSetIterator#matches().mjava","sourceNew":"  /** Return whether the current doc ID that the iterator is on matches. This\n   *  method should only be called when the iterator is positionned -- ie. not\n   *  when {@link DocIdSetIterator#docID()} is {@code -1} or\n   *  {@link DocIdSetIterator#NO_MORE_DOCS} -- and at most once. */\n  public abstract boolean matches() throws IOException;\n\n","sourceOld":"  /** Return whether the current doc ID that the iterator is on matches. This\n   *  method should only be called when the iterator is positionned -- ie. not\n   *  when {@link DocIdSetIterator#docID()} is {@code -1} or\n   *  {@link DocIdSetIterator#NO_MORE_DOCS} -- and at most once. */\n  public abstract boolean matches() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":5,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TwoPhaseIterator#matches().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TwoPhaseDocIdSetIterator#matches().mjava","sourceNew":"  /** Return whether the current doc ID that the iterator is on matches. This\n   *  method should only be called when the iterator is positionned -- ie. not\n   *  when {@link DocIdSetIterator#docID()} is {@code -1} or\n   *  {@link DocIdSetIterator#NO_MORE_DOCS} -- and at most once. */\n  public abstract boolean matches() throws IOException;\n\n","sourceOld":"  /** Return whether the current doc ID that the iterator is on matches. This\n   *  method should only be called when the iterator is positionned -- ie. not\n   *  when {@link DocIdSetIterator#docID()} is {@code -1} or\n   *  {@link DocIdSetIterator#NO_MORE_DOCS} -- and at most once. */\n  public abstract boolean matches() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["1e2111c8a5e5c03950d0556bb81fef7db0a7149a","a3d6eb0072094d94624002318ba2d4c840946833"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3d6eb0072094d94624002318ba2d4c840946833":["1e2111c8a5e5c03950d0556bb81fef7db0a7149a"],"1e2111c8a5e5c03950d0556bb81fef7db0a7149a":["c2fc8e2ba3fb8b72ed1e1f99270a42036b23d9a1"],"c2fc8e2ba3fb8b72ed1e1f99270a42036b23d9a1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a3d6eb0072094d94624002318ba2d4c840946833"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c2fc8e2ba3fb8b72ed1e1f99270a42036b23d9a1"],"1e2111c8a5e5c03950d0556bb81fef7db0a7149a":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a3d6eb0072094d94624002318ba2d4c840946833"],"a3d6eb0072094d94624002318ba2d4c840946833":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c2fc8e2ba3fb8b72ed1e1f99270a42036b23d9a1":["1e2111c8a5e5c03950d0556bb81fef7db0a7149a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}