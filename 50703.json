{"path":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#testFormTransforms().mjava","commits":[{"id":"251550f5d19b526a76f8c5126ae7bb2d22cf8935","date":1315202008,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#testFormTransforms().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestQueryTemplateManager#testFormTransforms().mjava","sourceNew":"  public void testFormTransforms() throws SAXException, IOException, ParserConfigurationException, TransformerException, ParserException {\n    // Sun 1.5 suffers from http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6240963\n    if (Constants.JAVA_VENDOR.startsWith(\"Sun\") && Constants.JAVA_VERSION.startsWith(\"1.5\")) {\n      String defLang = Locale.getDefault().getLanguage();\n      assumeFalse(\"Sun JRE 1.5 suffers from http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6240963 under Turkish locale\", defLang.equals(\"tr\") || defLang.equals(\"az\"));\n    }\n    //Cache all the query templates we will be referring to.\n    QueryTemplateManager qtm = new QueryTemplateManager();\n    qtm.addQueryTemplate(\"albumBooleanQuery\", getClass().getResourceAsStream(\"albumBooleanQuery.xsl\"));\n    qtm.addQueryTemplate(\"albumFilteredQuery\", getClass().getResourceAsStream(\"albumFilteredQuery.xsl\"));\n    qtm.addQueryTemplate(\"albumLuceneClassicQuery\", getClass().getResourceAsStream(\"albumLuceneClassicQuery.xsl\"));\n    //Run all of our test queries\n    for (String queryForm : queryForms) {\n      Properties queryFormProperties = getPropsFromString(queryForm);\n\n      //Get the required query XSL template for this test\n//\t\t\tTemplates template=getTemplate(queryFormProperties.getProperty(\"template\"));\n\n      //Transform the queryFormProperties into a Lucene XML query\n      Document doc = qtm.getQueryAsDOM(queryFormProperties, queryFormProperties.getProperty(\"template\"));\n\n      //Parse the XML query using the XML parser\n      Query q = builder.getQuery(doc.getDocumentElement());\n\n      //Run the query\n      int h = searcher.search(q, null, 1000).totalHits;\n\n      //Check we have the expected number of results\n      int expectedHits = Integer.parseInt(queryFormProperties.getProperty(\"expectedMatches\"));\n      assertEquals(\"Number of results should match for query \" + queryForm, expectedHits, h);\n\n    }\n  }\n\n","sourceOld":"  public void testFormTransforms() throws SAXException, IOException, ParserConfigurationException, TransformerException, ParserException {\n    // Sun 1.5 suffers from http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6240963\n    if (Constants.JAVA_VENDOR.startsWith(\"Sun\") && Constants.JAVA_VERSION.startsWith(\"1.5\")) {\n      String defLang = Locale.getDefault().getLanguage();\n      assumeFalse(\"Sun JRE 1.5 suffers from http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6240963 under Turkish locale\", defLang.equals(\"tr\") || defLang.equals(\"az\"));\n    }\n    //Cache all the query templates we will be referring to.\n    QueryTemplateManager qtm = new QueryTemplateManager();\n    qtm.addQueryTemplate(\"albumBooleanQuery\", getClass().getResourceAsStream(\"albumBooleanQuery.xsl\"));\n    qtm.addQueryTemplate(\"albumFilteredQuery\", getClass().getResourceAsStream(\"albumFilteredQuery.xsl\"));\n    qtm.addQueryTemplate(\"albumLuceneClassicQuery\", getClass().getResourceAsStream(\"albumLuceneClassicQuery.xsl\"));\n    //Run all of our test queries\n    for (String queryForm : queryForms) {\n      Properties queryFormProperties = getPropsFromString(queryForm);\n\n      //Get the required query XSL template for this test\n//\t\t\tTemplates template=getTemplate(queryFormProperties.getProperty(\"template\"));\n\n      //Transform the queryFormProperties into a Lucene XML query\n      Document doc = qtm.getQueryAsDOM(queryFormProperties, queryFormProperties.getProperty(\"template\"));\n\n      //Parse the XML query using the XML parser\n      Query q = builder.getQuery(doc.getDocumentElement());\n\n      //Run the query\n      int h = searcher.search(q, null, 1000).totalHits;\n\n      //Check we have the expected number of results\n      int expectedHits = Integer.parseInt(queryFormProperties.getProperty(\"expectedMatches\"));\n      assertEquals(\"Number of results should match for query \" + queryForm, expectedHits, h);\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#testFormTransforms().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#testFormTransforms().mjava","sourceNew":"  public void testFormTransforms() throws SAXException, IOException, ParserConfigurationException, TransformerException, ParserException {\n    // Sun 1.5 suffers from http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6240963\n    if (Constants.JAVA_VENDOR.startsWith(\"Sun\") && Constants.JAVA_VERSION.startsWith(\"1.5\")) {\n      String defLang = Locale.getDefault().getLanguage();\n      assumeFalse(\"Sun JRE 1.5 suffers from http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6240963 under Turkish locale\", defLang.equals(\"tr\") || defLang.equals(\"az\"));\n    }\n    //Cache all the query templates we will be referring to.\n    QueryTemplateManager qtm = new QueryTemplateManager();\n    qtm.addQueryTemplate(\"albumBooleanQuery\", getClass().getResourceAsStream(\"albumBooleanQuery.xsl\"));\n    qtm.addQueryTemplate(\"albumFilteredQuery\", getClass().getResourceAsStream(\"albumFilteredQuery.xsl\"));\n    qtm.addQueryTemplate(\"albumLuceneClassicQuery\", getClass().getResourceAsStream(\"albumLuceneClassicQuery.xsl\"));\n    //Run all of our test queries\n    for (String queryForm : queryForms) {\n      Properties queryFormProperties = getPropsFromString(queryForm);\n\n      //Get the required query XSL template for this test\n//\t\t\tTemplates template=getTemplate(queryFormProperties.getProperty(\"template\"));\n\n      //Transform the queryFormProperties into a Lucene XML query\n      Document doc = qtm.getQueryAsDOM(queryFormProperties, queryFormProperties.getProperty(\"template\"));\n\n      //Parse the XML query using the XML parser\n      Query q = builder.getQuery(doc.getDocumentElement());\n\n      //Run the query\n      int h = searcher.search(q, null, 1000).totalHits;\n\n      //Check we have the expected number of results\n      int expectedHits = Integer.parseInt(queryFormProperties.getProperty(\"expectedMatches\"));\n      assertEquals(\"Number of results should match for query \" + queryForm, expectedHits, h);\n\n    }\n  }\n\n","sourceOld":"  public void testFormTransforms() throws SAXException, IOException, ParserConfigurationException, TransformerException, ParserException {\n    // Sun 1.5 suffers from http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6240963\n    if (Constants.JAVA_VENDOR.startsWith(\"Sun\") && Constants.JAVA_VERSION.startsWith(\"1.5\")) {\n      String defLang = Locale.getDefault().getLanguage();\n      assumeFalse(\"Sun JRE 1.5 suffers from http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6240963 under Turkish locale\", defLang.equals(\"tr\") || defLang.equals(\"az\"));\n    }\n    //Cache all the query templates we will be referring to.\n    QueryTemplateManager qtm = new QueryTemplateManager();\n    qtm.addQueryTemplate(\"albumBooleanQuery\", getClass().getResourceAsStream(\"albumBooleanQuery.xsl\"));\n    qtm.addQueryTemplate(\"albumFilteredQuery\", getClass().getResourceAsStream(\"albumFilteredQuery.xsl\"));\n    qtm.addQueryTemplate(\"albumLuceneClassicQuery\", getClass().getResourceAsStream(\"albumLuceneClassicQuery.xsl\"));\n    //Run all of our test queries\n    for (String queryForm : queryForms) {\n      Properties queryFormProperties = getPropsFromString(queryForm);\n\n      //Get the required query XSL template for this test\n//\t\t\tTemplates template=getTemplate(queryFormProperties.getProperty(\"template\"));\n\n      //Transform the queryFormProperties into a Lucene XML query\n      Document doc = qtm.getQueryAsDOM(queryFormProperties, queryFormProperties.getProperty(\"template\"));\n\n      //Parse the XML query using the XML parser\n      Query q = builder.getQuery(doc.getDocumentElement());\n\n      //Run the query\n      int h = searcher.search(q, null, 1000).totalHits;\n\n      //Check we have the expected number of results\n      int expectedHits = Integer.parseInt(queryFormProperties.getProperty(\"expectedMatches\"));\n      assertEquals(\"Number of results should match for query \" + queryForm, expectedHits, h);\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}