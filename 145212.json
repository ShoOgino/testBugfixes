{"path":"lucene/core/src/java/org/apache/lucene/util/fst/FSTCompiler.Builder#directAddressingMaxOversizingFactor(float).mjava","commits":[{"id":"0f5661e6a04d3172e262ad741b717924f2f1b6a5","date":1576244274,"type":0,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FSTCompiler.Builder#directAddressingMaxOversizingFactor(float).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Overrides the default the maximum oversizing of fixed array allowed to enable direct addressing\n     * of arcs instead of binary search.\n     * <p>\n     * Setting this factor to a negative value (e.g. -1) effectively disables direct addressing,\n     * only binary search nodes will be created.\n     * <p>\n     * This factor does not determine whether to encode a node with a list of variable length arcs or with\n     * fixed length arcs. It only determines the effective encoding of a node that is already known to be\n     * encoded with fixed length arcs.\n     * <p>\n     * Default = 1.\n     */\n    public Builder<T> directAddressingMaxOversizingFactor(float factor) {\n      this.directAddressingMaxOversizingFactor = factor;\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","date":1576247714,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FSTCompiler.Builder#directAddressingMaxOversizingFactor(float).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Overrides the default the maximum oversizing of fixed array allowed to enable direct addressing\n     * of arcs instead of binary search.\n     * <p>\n     * Setting this factor to a negative value (e.g. -1) effectively disables direct addressing,\n     * only binary search nodes will be created.\n     * <p>\n     * This factor does not determine whether to encode a node with a list of variable length arcs or with\n     * fixed length arcs. It only determines the effective encoding of a node that is already known to be\n     * encoded with fixed length arcs.\n     * <p>\n     * Default = 1.\n     */\n    public Builder<T> directAddressingMaxOversizingFactor(float factor) {\n      this.directAddressingMaxOversizingFactor = factor;\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c5db9bff3aeb942c848a2ab8fa4b8b0737377deb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0f5661e6a04d3172e262ad741b717924f2f1b6a5"],"0f5661e6a04d3172e262ad741b717924f2f1b6a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f5661e6a04d3172e262ad741b717924f2f1b6a5"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","0f5661e6a04d3172e262ad741b717924f2f1b6a5"],"c5db9bff3aeb942c848a2ab8fa4b8b0737377deb":[],"0f5661e6a04d3172e262ad741b717924f2f1b6a5":["c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}