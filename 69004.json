{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion#suggestPositiveViolations(Ctx).mjava","commits":[{"id":"ee5183ac042828ef74f90f0874eaba7daeb409bd","date":1536546264,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion#suggestPositiveViolations(Ctx).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion#perNodeSuggestions(Ctx).mjava","sourceNew":"  static void suggestPositiveViolations(Ctx ctx) {\n    if (ctx.violation == null) return;\n    Double currentDelta = ctx.violation.replicaCountDelta;\n    for (ReplicaInfoAndErr e : ctx.violation.getViolatingReplicas()) {\n      if (currentDelta <= 0) break;\n      Suggester suggester = ctx.session.getSuggester(MOVEREPLICA)\n          .forceOperation(true)\n          .hint(Suggester.Hint.COLL_SHARD, new Pair<>(e.replicaInfo.getCollection(), e.replicaInfo.getShard()))\n          .hint(Suggester.Hint.SRC_NODE, e.replicaInfo.getNode());\n      if (ctx.addSuggestion(suggester) != null) {\n        currentDelta--;\n      }\n    }\n  }\n\n","sourceOld":"  static void perNodeSuggestions(Ctx ctx) {\n    if (ctx.violation == null) return;\n    for (ReplicaInfoAndErr e : ctx.violation.getViolatingReplicas()) {\n      Suggester suggester = ctx.session.getSuggester(MOVEREPLICA)\n          .forceOperation(true)\n          .hint(Suggester.Hint.COLL_SHARD, new Pair<>(e.replicaInfo.getCollection(), e.replicaInfo.getShard()))\n          .hint(Suggester.Hint.SRC_NODE, e.replicaInfo.getNode());\n      if (ctx.addSuggestion(suggester) == null) break;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58e890cd5653ae8550bc6088d739f4eaaf950aff","date":1547036285,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion#suggestPositiveViolations(Ctx).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion#suggestPositiveViolations(Ctx).mjava","sourceNew":"  static void suggestPositiveViolations(Ctx ctx) {\n    if (ctx.violation == null) return;\n    Double currentDelta = ctx.violation.replicaCountDelta;\n    for (ReplicaInfoAndErr e : ctx.violation.getViolatingReplicas()) {\n      if (!ctx.needMore()) break;\n      if (currentDelta <= 0) break;\n      Suggester suggester = ctx.session.getSuggester(MOVEREPLICA)\n          .forceOperation(true)\n          .hint(Suggester.Hint.COLL_SHARD, new Pair<>(e.replicaInfo.getCollection(), e.replicaInfo.getShard()))\n          .hint(Suggester.Hint.SRC_NODE, e.replicaInfo.getNode());\n      if (ctx.addSuggestion(suggester) != null) {\n        currentDelta--;\n      }\n    }\n  }\n\n","sourceOld":"  static void suggestPositiveViolations(Ctx ctx) {\n    if (ctx.violation == null) return;\n    Double currentDelta = ctx.violation.replicaCountDelta;\n    for (ReplicaInfoAndErr e : ctx.violation.getViolatingReplicas()) {\n      if (currentDelta <= 0) break;\n      Suggester suggester = ctx.session.getSuggester(MOVEREPLICA)\n          .forceOperation(true)\n          .hint(Suggester.Hint.COLL_SHARD, new Pair<>(e.replicaInfo.getCollection(), e.replicaInfo.getShard()))\n          .hint(Suggester.Hint.SRC_NODE, e.replicaInfo.getNode());\n      if (ctx.addSuggestion(suggester) != null) {\n        currentDelta--;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd","date":1594731683,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion#suggestPositiveViolations(Ctx).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion#suggestPositiveViolations(Ctx).mjava","sourceNew":"  static void suggestPositiveViolations(Ctx ctx) {\n    if (ctx.violation == null) return;\n    Double currentDelta = ctx.violation.replicaCountDelta;\n    for (ReplicaInfoAndErr e : ctx.violation.getViolatingReplicas()) {\n      if (!ctx.needMore()) break;\n      if (currentDelta <= 0) break;\n      Suggester suggester = ctx.session.getSuggester(MOVEREPLICA)\n          .forceOperation(true)\n          .hint(Suggester.Hint.COLL_SHARD, new Pair<>(e.replicaInfo.getCollection(), e.replicaInfo.getShard()))\n          .hint(Suggester.Hint.SRC_NODE, e.replicaInfo.getNodeName());\n      if (ctx.addSuggestion(suggester) != null) {\n        currentDelta--;\n      }\n    }\n  }\n\n","sourceOld":"  static void suggestPositiveViolations(Ctx ctx) {\n    if (ctx.violation == null) return;\n    Double currentDelta = ctx.violation.replicaCountDelta;\n    for (ReplicaInfoAndErr e : ctx.violation.getViolatingReplicas()) {\n      if (!ctx.needMore()) break;\n      if (currentDelta <= 0) break;\n      Suggester suggester = ctx.session.getSuggester(MOVEREPLICA)\n          .forceOperation(true)\n          .hint(Suggester.Hint.COLL_SHARD, new Pair<>(e.replicaInfo.getCollection(), e.replicaInfo.getShard()))\n          .hint(Suggester.Hint.SRC_NODE, e.replicaInfo.getNode());\n      if (ctx.addSuggestion(suggester) != null) {\n        currentDelta--;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion#suggestPositiveViolations(Ctx).mjava","sourceNew":null,"sourceOld":"  static void suggestPositiveViolations(Ctx ctx) {\n    if (ctx.violation == null) return;\n    Double currentDelta = ctx.violation.replicaCountDelta;\n    for (ReplicaInfoAndErr e : ctx.violation.getViolatingReplicas()) {\n      if (!ctx.needMore()) break;\n      if (currentDelta <= 0) break;\n      Suggester suggester = ctx.session.getSuggester(MOVEREPLICA)\n          .forceOperation(true)\n          .hint(Suggester.Hint.COLL_SHARD, new Pair<>(e.replicaInfo.getCollection(), e.replicaInfo.getShard()))\n          .hint(Suggester.Hint.SRC_NODE, e.replicaInfo.getNodeName());\n      if (ctx.addSuggestion(suggester) != null) {\n        currentDelta--;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58e890cd5653ae8550bc6088d739f4eaaf950aff":["ee5183ac042828ef74f90f0874eaba7daeb409bd"],"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd":["58e890cd5653ae8550bc6088d739f4eaaf950aff"],"3f504512a03d978990cbff30db0522b354e846db":["7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ee5183ac042828ef74f90f0874eaba7daeb409bd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"58e890cd5653ae8550bc6088d739f4eaaf950aff":["7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd"],"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ee5183ac042828ef74f90f0874eaba7daeb409bd"],"ee5183ac042828ef74f90f0874eaba7daeb409bd":["58e890cd5653ae8550bc6088d739f4eaaf950aff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}