{"path":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/MemoryIndexOffsetStrategy#getOffsetsEnum(IndexReader,int,String).mjava","commits":[{"id":"8764ca7bb74ee716c839b9545a93ec4a578c2005","date":1517564468,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/MemoryIndexOffsetStrategy#getOffsetsEnum(IndexReader,int,String).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/MemoryIndexOffsetStrategy#getOffsetsEnums(IndexReader,int,String).mjava","sourceNew":"  @Override\n  public OffsetsEnum getOffsetsEnum(IndexReader reader, int docId, String content) throws IOException {\n    // note: don't need LimitTokenOffsetFilter since content is already truncated to maxLength\n    TokenStream tokenStream = tokenStream(content);\n\n    // Filter the tokenStream to applicable terms\n    tokenStream = newKeepWordFilter(tokenStream, preMemIndexFilterAutomaton);\n    memoryIndex.reset();\n    memoryIndex.addField(field, tokenStream);//note: calls tokenStream.reset() & close()\n    docId = 0;\n\n    return createOffsetsEnumFromReader(leafReader, docId);\n  }\n\n","sourceOld":"  @Override\n  public List<OffsetsEnum> getOffsetsEnums(IndexReader reader, int docId, String content) throws IOException {\n    // note: don't need LimitTokenOffsetFilter since content is already truncated to maxLength\n    TokenStream tokenStream = tokenStream(content);\n\n    // Filter the tokenStream to applicable terms\n    tokenStream = newKeepWordFilter(tokenStream, preMemIndexFilterAutomaton);\n    memoryIndex.reset();\n    memoryIndex.addField(field, tokenStream);//note: calls tokenStream.reset() & close()\n    docId = 0;\n\n    return createOffsetsEnumsFromReader(leafReader, docId);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"795822cce6616d4035b5a4bdbb6c113ea2f715ba","date":1535599765,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/MemoryIndexOffsetStrategy#getOffsetsEnum(LeafReader,int,String).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/MemoryIndexOffsetStrategy#getOffsetsEnum(IndexReader,int,String).mjava","sourceNew":"  @Override\n  public OffsetsEnum getOffsetsEnum(LeafReader reader, int docId, String content) throws IOException {\n    // note: don't need LimitTokenOffsetFilter since content is already truncated to maxLength\n    TokenStream tokenStream = tokenStream(content);\n\n    // Filter the tokenStream to applicable terms\n    tokenStream = newKeepWordFilter(tokenStream, preMemIndexFilterAutomaton);\n    memoryIndex.reset();\n    memoryIndex.addField(getField(), tokenStream);//note: calls tokenStream.reset() & close()\n\n    if (reader == null) {\n      return createOffsetsEnumFromReader(memIndexLeafReader, 0);\n    } else {\n      return createOffsetsEnumFromReader(\n          new OverlaySingleDocTermsLeafReader(\n              reader,\n              memIndexLeafReader,\n              getField(),\n              docId),\n          docId);\n    }\n  }\n\n","sourceOld":"  @Override\n  public OffsetsEnum getOffsetsEnum(IndexReader reader, int docId, String content) throws IOException {\n    // note: don't need LimitTokenOffsetFilter since content is already truncated to maxLength\n    TokenStream tokenStream = tokenStream(content);\n\n    // Filter the tokenStream to applicable terms\n    tokenStream = newKeepWordFilter(tokenStream, preMemIndexFilterAutomaton);\n    memoryIndex.reset();\n    memoryIndex.addField(field, tokenStream);//note: calls tokenStream.reset() & close()\n    docId = 0;\n\n    return createOffsetsEnumFromReader(leafReader, docId);\n  }\n\n","bugFix":null,"bugIntro":["c2a55d7ebf9e9ced797f40d5154d602029a9791d"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"8764ca7bb74ee716c839b9545a93ec4a578c2005":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"795822cce6616d4035b5a4bdbb6c113ea2f715ba":["8764ca7bb74ee716c839b9545a93ec4a578c2005"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["795822cce6616d4035b5a4bdbb6c113ea2f715ba"]},"commit2Childs":{"8764ca7bb74ee716c839b9545a93ec4a578c2005":["795822cce6616d4035b5a4bdbb6c113ea2f715ba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8764ca7bb74ee716c839b9545a93ec4a578c2005"],"795822cce6616d4035b5a4bdbb6c113ea2f715ba":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}