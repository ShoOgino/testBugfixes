{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/BasicOperations#hasDeadStatesToAccept(LightAutomaton).mjava","commits":[{"id":"31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9","date":1402946522,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/BasicOperations#hasDeadStatesToAccept(LightAutomaton).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: move to test-framework?\n  /** Returns true if there are dead states that reach an accept state. */\n  public static boolean hasDeadStatesToAccept(LightAutomaton a) {\n    BitSet reachableFromInitial = getLiveStatesFromInitial(a);\n    BitSet reachableFromAccept = getLiveStatesToAccept(a);\n    reachableFromAccept.andNot(reachableFromInitial);\n    return reachableFromAccept.isEmpty() == false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Operations#hasDeadStatesToAccept(Automaton).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/BasicOperations#hasDeadStatesToAccept(LightAutomaton).mjava","sourceNew":"  // TODO: move to test-framework?\n  /** Returns true if there are dead states that reach an accept state. */\n  public static boolean hasDeadStatesToAccept(Automaton a) {\n    BitSet reachableFromInitial = getLiveStatesFromInitial(a);\n    BitSet reachableFromAccept = getLiveStatesToAccept(a);\n    reachableFromAccept.andNot(reachableFromInitial);\n    return reachableFromAccept.isEmpty() == false;\n  }\n\n","sourceOld":"  // TODO: move to test-framework?\n  /** Returns true if there are dead states that reach an accept state. */\n  public static boolean hasDeadStatesToAccept(LightAutomaton a) {\n    BitSet reachableFromInitial = getLiveStatesFromInitial(a);\n    BitSet reachableFromAccept = getLiveStatesToAccept(a);\n    reachableFromAccept.andNot(reachableFromInitial);\n    return reachableFromAccept.isEmpty() == false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}