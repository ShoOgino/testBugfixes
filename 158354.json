{"path":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene41/TestLucene41PostingsFormat2#newDocument().mjava","commits":[{"id":"99eb4a732d1a908f4636ace52928876136bf1896","date":1413829552,"type":2,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene41/TestLucene41PostingsFormat2#newDocument().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#newDocument().mjava","sourceNew":"  private Document newDocument() {\n    Document doc = new Document();\n    for (IndexOptions option : FieldInfo.IndexOptions.values()) {\n      FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n      // turn on tvs for a cross-check, since we rely upon checkindex in this test (for now)\n      ft.setStoreTermVectors(true);\n      ft.setStoreTermVectorOffsets(true);\n      ft.setStoreTermVectorPositions(true);\n      ft.setStoreTermVectorPayloads(true);\n      ft.setIndexOptions(option);\n      doc.add(new Field(option.toString(), \"\", ft));\n    }\n    return doc;\n  }\n\n","sourceOld":"  private Document newDocument() {\n    Document doc = new Document();\n    for (IndexOptions option : FieldInfo.IndexOptions.values()) {\n      FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n      // turn on tvs for a cross-check, since we rely upon checkindex in this test (for now)\n      ft.setStoreTermVectors(true);\n      ft.setStoreTermVectorOffsets(true);\n      ft.setStoreTermVectorPositions(true);\n      ft.setStoreTermVectorPayloads(true);\n      ft.setIndexOptions(option);\n      doc.add(new Field(option.toString(), \"\", ft));\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":2,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene41/TestLucene41PostingsFormat2#newDocument().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#newDocument().mjava","sourceNew":"  private Document newDocument() {\n    Document doc = new Document();\n    for (IndexOptions option : FieldInfo.IndexOptions.values()) {\n      FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n      // turn on tvs for a cross-check, since we rely upon checkindex in this test (for now)\n      ft.setStoreTermVectors(true);\n      ft.setStoreTermVectorOffsets(true);\n      ft.setStoreTermVectorPositions(true);\n      ft.setStoreTermVectorPayloads(true);\n      ft.setIndexOptions(option);\n      doc.add(new Field(option.toString(), \"\", ft));\n    }\n    return doc;\n  }\n\n","sourceOld":"  private Document newDocument() {\n    Document doc = new Document();\n    for (IndexOptions option : FieldInfo.IndexOptions.values()) {\n      FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n      // turn on tvs for a cross-check, since we rely upon checkindex in this test (for now)\n      ft.setStoreTermVectors(true);\n      ft.setStoreTermVectorOffsets(true);\n      ft.setStoreTermVectorPositions(true);\n      ft.setStoreTermVectorPayloads(true);\n      ft.setIndexOptions(option);\n      doc.add(new Field(option.toString(), \"\", ft));\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene41/TestLucene41PostingsFormat2#newDocument().mjava","sourceNew":null,"sourceOld":"  private Document newDocument() {\n    Document doc = new Document();\n    for (IndexOptions option : FieldInfo.IndexOptions.values()) {\n      FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n      // turn on tvs for a cross-check, since we rely upon checkindex in this test (for now)\n      ft.setStoreTermVectors(true);\n      ft.setStoreTermVectorOffsets(true);\n      ft.setStoreTermVectorPositions(true);\n      ft.setStoreTermVectorPayloads(true);\n      ft.setIndexOptions(option);\n      doc.add(new Field(option.toString(), \"\", ft));\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"99eb4a732d1a908f4636ace52928876136bf1896":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","99eb4a732d1a908f4636ace52928876136bf1896"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"]},"commit2Childs":{"99eb4a732d1a908f4636ace52928876136bf1896":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["99eb4a732d1a908f4636ace52928876136bf1896","db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}