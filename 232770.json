{"path":"src/java/org/apache/solr/handler/AnalysisRequestHandlerBase#writeCharStream(NamedList,CharStream).mjava","commits":[{"id":"f4dcc36aaf3ab07f15e069adf183b7e6de5dcccb","date":1250701272,"type":0,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/AnalysisRequestHandlerBase#writeCharStream(NamedList,CharStream).mjava","pathOld":"/dev/null","sourceNew":"  private String writeCharStream(NamedList out, CharStream input ){\n    final int BUFFER_SIZE = 1024;\n    char[] buf = new char[BUFFER_SIZE];\n    int len = 0;\n    StringBuilder sb = new StringBuilder();\n    do {\n      try {\n        len = input.read( buf, 0, BUFFER_SIZE );\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      sb.append(buf, 0, len);\n    } while( len == BUFFER_SIZE );\n    out.add( input.getClass().getName(), sb.toString());\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["16e64c1cca7a1d0387ce450c209c453a44072cd4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"16e64c1cca7a1d0387ce450c209c453a44072cd4","date":1255255441,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/AnalysisRequestHandlerBase#writeCharStream(NamedList,CharStream).mjava","pathOld":"src/java/org/apache/solr/handler/AnalysisRequestHandlerBase#writeCharStream(NamedList,CharStream).mjava","sourceNew":"  private String writeCharStream(NamedList out, CharStream input ){\n    final int BUFFER_SIZE = 1024;\n    char[] buf = new char[BUFFER_SIZE];\n    int len = 0;\n    StringBuilder sb = new StringBuilder();\n    do {\n      try {\n        len = input.read( buf, 0, BUFFER_SIZE );\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      if( len > 0 )\n        sb.append(buf, 0, len);\n    } while( len == BUFFER_SIZE );\n    out.add( input.getClass().getName(), sb.toString());\n    return sb.toString();\n  }\n\n","sourceOld":"  private String writeCharStream(NamedList out, CharStream input ){\n    final int BUFFER_SIZE = 1024;\n    char[] buf = new char[BUFFER_SIZE];\n    int len = 0;\n    StringBuilder sb = new StringBuilder();\n    do {\n      try {\n        len = input.read( buf, 0, BUFFER_SIZE );\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      sb.append(buf, 0, len);\n    } while( len == BUFFER_SIZE );\n    out.add( input.getClass().getName(), sb.toString());\n    return sb.toString();\n  }\n\n","bugFix":["f4dcc36aaf3ab07f15e069adf183b7e6de5dcccb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase#writeCharStream(NamedList,CharStream).mjava","pathOld":"src/java/org/apache/solr/handler/AnalysisRequestHandlerBase#writeCharStream(NamedList,CharStream).mjava","sourceNew":"  private String writeCharStream(NamedList out, CharStream input ){\n    final int BUFFER_SIZE = 1024;\n    char[] buf = new char[BUFFER_SIZE];\n    int len = 0;\n    StringBuilder sb = new StringBuilder();\n    do {\n      try {\n        len = input.read( buf, 0, BUFFER_SIZE );\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      if( len > 0 )\n        sb.append(buf, 0, len);\n    } while( len == BUFFER_SIZE );\n    out.add( input.getClass().getName(), sb.toString());\n    return sb.toString();\n  }\n\n","sourceOld":"  private String writeCharStream(NamedList out, CharStream input ){\n    final int BUFFER_SIZE = 1024;\n    char[] buf = new char[BUFFER_SIZE];\n    int len = 0;\n    StringBuilder sb = new StringBuilder();\n    do {\n      try {\n        len = input.read( buf, 0, BUFFER_SIZE );\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      if( len > 0 )\n        sb.append(buf, 0, len);\n    } while( len == BUFFER_SIZE );\n    out.add( input.getClass().getName(), sb.toString());\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["16e64c1cca7a1d0387ce450c209c453a44072cd4"],"f4dcc36aaf3ab07f15e069adf183b7e6de5dcccb":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"16e64c1cca7a1d0387ce450c209c453a44072cd4":["f4dcc36aaf3ab07f15e069adf183b7e6de5dcccb"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f4dcc36aaf3ab07f15e069adf183b7e6de5dcccb"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"f4dcc36aaf3ab07f15e069adf183b7e6de5dcccb":["16e64c1cca7a1d0387ce450c209c453a44072cd4"],"16e64c1cca7a1d0387ce450c209c453a44072cd4":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}