{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI#setBasicAuth().mjava","commits":[{"id":"8677448a186f4abd32218787f7ae73ad38f575cf","date":1477484362,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI#setBasicAuth().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Inspects system property basicauth and enables authentication for HttpClient\n   * @throws Exception if the basicauth SysProp has wrong format\n   */\n  protected static void setBasicAuth() throws Exception {\n    String basicauth = System.getProperty(\"basicauth\", null);\n    if (basicauth != null) {\n      List<String> ss = StrUtils.splitSmart(basicauth, ':');\n      if (ss.size() != 2)\n        throw new Exception(\"Please provide 'basicauth' in the 'user:password' format\");\n\n      HttpClientUtil.addRequestInterceptor((httpRequest, httpContext) -> {\n        String pair = ss.get(0) + \":\" + ss.get(1);\n        byte[] encodedBytes = Base64.encodeBase64(pair.getBytes(UTF_8));\n        httpRequest.addHeader(new BasicHeader(\"Authorization\", \"Basic \" + new String(encodedBytes, UTF_8)));\n      });\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI#setBasicAuth().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Inspects system property basicauth and enables authentication for HttpClient\n   * @throws Exception if the basicauth SysProp has wrong format\n   */\n  protected static void setBasicAuth() throws Exception {\n    String basicauth = System.getProperty(\"basicauth\", null);\n    if (basicauth != null) {\n      List<String> ss = StrUtils.splitSmart(basicauth, ':');\n      if (ss.size() != 2)\n        throw new Exception(\"Please provide 'basicauth' in the 'user:password' format\");\n\n      HttpClientUtil.addRequestInterceptor((httpRequest, httpContext) -> {\n        String pair = ss.get(0) + \":\" + ss.get(1);\n        byte[] encodedBytes = Base64.encodeBase64(pair.getBytes(UTF_8));\n        httpRequest.addHeader(new BasicHeader(\"Authorization\", \"Basic \" + new String(encodedBytes, UTF_8)));\n      });\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ddd225c382b8919214f3db79af4c842f893b871","date":1486491351,"type":4,"author":"markrmiller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI#setBasicAuth().mjava","sourceNew":null,"sourceOld":"  /**\n   * Inspects system property basicauth and enables authentication for HttpClient\n   * @throws Exception if the basicauth SysProp has wrong format\n   */\n  protected static void setBasicAuth() throws Exception {\n    String basicauth = System.getProperty(\"basicauth\", null);\n    if (basicauth != null) {\n      List<String> ss = StrUtils.splitSmart(basicauth, ':');\n      if (ss.size() != 2)\n        throw new Exception(\"Please provide 'basicauth' in the 'user:password' format\");\n\n      HttpClientUtil.addRequestInterceptor((httpRequest, httpContext) -> {\n        String pair = ss.get(0) + \":\" + ss.get(1);\n        byte[] encodedBytes = Base64.encodeBase64(pair.getBytes(UTF_8));\n        httpRequest.addHeader(new BasicHeader(\"Authorization\", \"Basic \" + new String(encodedBytes, UTF_8)));\n      });\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ddd225c382b8919214f3db79af4c842f893b871":["8677448a186f4abd32218787f7ae73ad38f575cf"],"8677448a186f4abd32218787f7ae73ad38f575cf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8677448a186f4abd32218787f7ae73ad38f575cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ddd225c382b8919214f3db79af4c842f893b871"]},"commit2Childs":{"9ddd225c382b8919214f3db79af4c842f893b871":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8677448a186f4abd32218787f7ae73ad38f575cf":["9ddd225c382b8919214f3db79af4c842f893b871","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8677448a186f4abd32218787f7ae73ad38f575cf","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}