{"path":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer#finish(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer#finish(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/DocValuesConsumer#finish(int).mjava","sourceNew":"  /**\n   * Called when the consumer of this API is done adding values.\n   * \n   * @param docCount\n   *          the total number of documents in this {@link DocValuesConsumer}.\n   *          Must be greater than or equal the last given docID to\n   *          {@link #add(int, IndexableField)}.\n   * @throws IOException\n   */\n  public abstract void finish(int docCount) throws IOException;\n\n","sourceOld":"  /**\n   * Called when the consumer of this API is done adding values.\n   * \n   * @param docCount\n   *          the total number of documents in this {@link DocValuesConsumer}.\n   *          Must be greater than or equal the last given docID to\n   *          {@link #add(int, IndexableField)}.\n   * @throws IOException\n   */\n  public abstract void finish(int docCount) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a","date":1341524239,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer#finish(int).mjava","sourceNew":"  /**\n   * Called when the consumer of this API is done adding values.\n   * \n   * @param docCount\n   *          the total number of documents in this {@link DocValuesConsumer}.\n   *          Must be greater than or equal the last given docID to\n   *          {@link #add(int, StorableField)}.\n   * @throws IOException\n   */\n  public abstract void finish(int docCount) throws IOException;\n\n","sourceOld":"  /**\n   * Called when the consumer of this API is done adding values.\n   * \n   * @param docCount\n   *          the total number of documents in this {@link DocValuesConsumer}.\n   *          Must be greater than or equal the last given docID to\n   *          {@link #add(int, IndexableField)}.\n   * @throws IOException\n   */\n  public abstract void finish(int docCount) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer#finish(int).mjava","sourceNew":"  /**\n   * Called when the consumer of this API is done adding values.\n   * \n   * @param docCount\n   *          the total number of documents in this {@link DocValuesConsumer}.\n   *          Must be greater than or equal the last given docID to\n   *          {@link #add(int, StorableField)}.\n   * @throws IOException\n   */\n  public abstract void finish(int docCount) throws IOException;\n\n","sourceOld":"  /**\n   * Called when the consumer of this API is done adding values.\n   * \n   * @param docCount\n   *          the total number of documents in this {@link DocValuesConsumer}.\n   *          Must be greater than or equal the last given docID to\n   *          {@link #add(int, IndexableField)}.\n   * @throws IOException\n   */\n  public abstract void finish(int docCount) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer#finish(int).mjava","sourceNew":"  /**\n   * Called when the consumer of this API is done adding values.\n   * \n   * @param docCount\n   *          the total number of documents in this {@link DocValuesConsumer}.\n   *          Must be greater than or equal the last given docID to\n   *          {@link #add(int, StorableField)}.\n   * @throws IOException If an I/O error occurs\n   */\n  public abstract void finish(int docCount) throws IOException;\n\n","sourceOld":"  /**\n   * Called when the consumer of this API is done adding values.\n   * \n   * @param docCount\n   *          the total number of documents in this {@link DocValuesConsumer}.\n   *          Must be greater than or equal the last given docID to\n   *          {@link #add(int, StorableField)}.\n   * @throws IOException\n   */\n  public abstract void finish(int docCount) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0837ab0472feecb3a54260729d845f839e1cbd72","date":1358283639,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer#finish(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Called when the consumer of this API is done adding values.\n   * \n   * @param docCount\n   *          the total number of documents in this {@link DocValuesConsumer}.\n   *          Must be greater than or equal the last given docID to\n   *          {@link #add(int, StorableField)}.\n   * @throws IOException If an I/O error occurs\n   */\n  public abstract void finish(int docCount) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer#finish(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Called when the consumer of this API is done adding values.\n   * \n   * @param docCount\n   *          the total number of documents in this {@link DocValuesConsumer}.\n   *          Must be greater than or equal the last given docID to\n   *          {@link #add(int, StorableField)}.\n   * @throws IOException If an I/O error occurs\n   */\n  public abstract void finish(int docCount) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["1d028314cced5858683a1bb4741423d0f934257b"],"1d028314cced5858683a1bb4741423d0f934257b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a"],"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","0837ab0472feecb3a54260729d845f839e1cbd72"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0837ab0472feecb3a54260729d845f839e1cbd72":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["d4d69c535930b5cce125cff868d40f6373dc27d4","0837ab0472feecb3a54260729d845f839e1cbd72"],"1d028314cced5858683a1bb4741423d0f934257b":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a":["1d028314cced5858683a1bb4741423d0f934257b"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1d028314cced5858683a1bb4741423d0f934257b","33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0837ab0472feecb3a54260729d845f839e1cbd72":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}