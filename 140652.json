{"path":"lucene/backwards/src/java/org/apache/lucene/analysis/TeeSinkTokenFilter.SinkTokenStream#incrementToken().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/analysis/TeeSinkTokenFilter.SinkTokenStream#incrementToken().mjava","pathOld":"backwards/src/java/org/apache/lucene/analysis/TeeSinkTokenFilter.SinkTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public final boolean incrementToken() throws IOException {\n      // lazy init the iterator\n      if (it == null) {\n        it = cachedStates.iterator();\n      }\n    \n      if (!it.hasNext()) {\n        return false;\n      }\n      \n      AttributeSource.State state = it.next();\n      restoreState(state);\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public final boolean incrementToken() throws IOException {\n      // lazy init the iterator\n      if (it == null) {\n        it = cachedStates.iterator();\n      }\n    \n      if (!it.hasNext()) {\n        return false;\n      }\n      \n      AttributeSource.State state = it.next();\n      restoreState(state);\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8b08d3f41ac6ea1872b7b0d1df3558a57d2498a","date":1272922845,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/sinks/TeeSinkTokenFilter.SinkTokenStream#incrementToken().mjava","pathOld":"lucene/backwards/src/java/org/apache/lucene/analysis/TeeSinkTokenFilter.SinkTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public final boolean incrementToken() throws IOException {\n      // lazy init the iterator\n      if (it == null) {\n        it = cachedStates.iterator();\n      }\n    \n      if (!it.hasNext()) {\n        return false;\n      }\n      \n      AttributeSource.State state = it.next();\n      restoreState(state);\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public final boolean incrementToken() throws IOException {\n      // lazy init the iterator\n      if (it == null) {\n        it = cachedStates.iterator();\n      }\n    \n      if (!it.hasNext()) {\n        return false;\n      }\n      \n      AttributeSource.State state = it.next();\n      restoreState(state);\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a8b08d3f41ac6ea1872b7b0d1df3558a57d2498a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a8b08d3f41ac6ea1872b7b0d1df3558a57d2498a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a8b08d3f41ac6ea1872b7b0d1df3558a57d2498a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a8b08d3f41ac6ea1872b7b0d1df3558a57d2498a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}