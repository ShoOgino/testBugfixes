{"path":"lucene/core/src/java/org/apache/lucene/util/LongBitSet#LongBitSet(long[],long).mjava","commits":[{"id":"3995f83351082af8ae83bb017e63c56818fc1568","date":1392047063,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LongBitSet#LongBitSet(long[],long).mjava","pathOld":"/dev/null","sourceNew":"  public LongBitSet(long[] storedBits, long numBits) {\n    this.numWords = bits2words(numBits);\n    if (numWords > storedBits.length) {\n      throw new IllegalArgumentException(\"The given long array is too small  to hold \" + numBits + \" bits\");\n    }\n    this.numBits = numBits;\n    this.bits = storedBits;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af918c7c328775f9fadd5870c21f0fafc2a059cc","date":1430253435,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LongBitSet#LongBitSet(long[],long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/LongBitSet#LongBitSet(long[],long).mjava","sourceNew":"  /**\n   * Creates a new LongBitSet using the provided long[] array as backing store.\n   * The storedBits array must be large enough to accommodate the numBits specified, but may be larger.\n   * In that case the 'extra' or 'ghost' bits must be clear (or they may provoke spurious side-effects)\n   * @param storedBits the array to use as backing store\n   * @param numBits the number of bits actually needed\n   */\n  public LongBitSet(long[] storedBits, long numBits) {\n    this.numWords = bits2words(numBits);\n    if (numWords > storedBits.length) {\n      throw new IllegalArgumentException(\"The given long array is too small  to hold \" + numBits + \" bits\");\n    }\n    this.numBits = numBits;\n    this.bits = storedBits;\n\n    assert verifyGhostBitsClear();\n  }\n\n","sourceOld":"  public LongBitSet(long[] storedBits, long numBits) {\n    this.numWords = bits2words(numBits);\n    if (numWords > storedBits.length) {\n      throw new IllegalArgumentException(\"The given long array is too small  to hold \" + numBits + \" bits\");\n    }\n    this.numBits = numBits;\n    this.bits = storedBits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"af918c7c328775f9fadd5870c21f0fafc2a059cc":["3995f83351082af8ae83bb017e63c56818fc1568"],"3995f83351082af8ae83bb017e63c56818fc1568":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af918c7c328775f9fadd5870c21f0fafc2a059cc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3995f83351082af8ae83bb017e63c56818fc1568"],"af918c7c328775f9fadd5870c21f0fafc2a059cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3995f83351082af8ae83bb017e63c56818fc1568":["af918c7c328775f9fadd5870c21f0fafc2a059cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}