{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/Lucene47WordDelimiterFilter#saveState().mjava","commits":[{"id":"c85fa43e6918808743daa7847ba0264373af687f","date":1395166336,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/Lucene47WordDelimiterFilter#saveState().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Saves the existing attribute states\n   */\n  private void saveState() {\n    // otherwise, we have delimiters, save state\n    savedStartOffset = offsetAttribute.startOffset();\n    savedEndOffset = offsetAttribute.endOffset();\n    // if length by start + end offsets doesn't match the term text then assume this is a synonym and don't adjust the offsets.\n    hasIllegalOffsets = (savedEndOffset - savedStartOffset != termAttribute.length());\n    savedType = typeAttribute.type();\n\n    if (savedBuffer.length < termAttribute.length()) {\n      savedBuffer = new char[ArrayUtil.oversize(termAttribute.length(), RamUsageEstimator.NUM_BYTES_CHAR)];\n    }\n\n    System.arraycopy(termAttribute.buffer(), 0, savedBuffer, 0, termAttribute.length());\n    iterator.text = savedBuffer;\n\n    hasSavedState = true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/Lucene47WordDelimiterFilter#saveState().mjava","sourceNew":null,"sourceOld":"  /**\n   * Saves the existing attribute states\n   */\n  private void saveState() {\n    // otherwise, we have delimiters, save state\n    savedStartOffset = offsetAttribute.startOffset();\n    savedEndOffset = offsetAttribute.endOffset();\n    // if length by start + end offsets doesn't match the term text then assume this is a synonym and don't adjust the offsets.\n    hasIllegalOffsets = (savedEndOffset - savedStartOffset != termAttribute.length());\n    savedType = typeAttribute.type();\n\n    if (savedBuffer.length < termAttribute.length()) {\n      savedBuffer = new char[ArrayUtil.oversize(termAttribute.length(), RamUsageEstimator.NUM_BYTES_CHAR)];\n    }\n\n    System.arraycopy(termAttribute.buffer(), 0, savedBuffer, 0, termAttribute.length());\n    iterator.text = savedBuffer;\n\n    hasSavedState = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"71387d8cb6923eb831b17a8b734608ba2e21c653":["c85fa43e6918808743daa7847ba0264373af687f"],"c85fa43e6918808743daa7847ba0264373af687f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c85fa43e6918808743daa7847ba0264373af687f"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c85fa43e6918808743daa7847ba0264373af687f":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}