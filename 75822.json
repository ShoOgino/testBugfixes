{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyAbstractAnalyticsFacetCloudTest#[T-extends-Number-&-Comparable[T]]_calculateFacetedNumberStat(ArrayList[ArrayList[T]],String).mjava","commits":[{"id":"3bd4c6955956e76c96eb12dfe64108ed03522983","date":1508262722,"type":0,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyAbstractAnalyticsFacetCloudTest#[T-extends-Number-&-Comparable[T]]_calculateFacetedNumberStat(ArrayList[ArrayList[T]],String).mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public <T extends Number & Comparable<T>> ArrayList calculateFacetedNumberStat(ArrayList<ArrayList<T>> lists, String stat) {\n    ArrayList result;\n    if (stat.equals(\"median\")) {\n      result = new ArrayList<Double>();\n      for (List<T> list : lists) {\n        result.add(MedianCalculator.getMedian(list));\n      }\n    } else if (stat.equals(\"mean\")) {\n      result = new ArrayList<Double>();\n      for (List<T> list : lists) {\n        double d = 0;\n        for (T element : list) {\n          d += element.doubleValue();\n        }\n        result.add(d/list.size());\n      }\n    } else if (stat.equals(\"sum\")) {\n      result = new ArrayList<Double>();\n      for (Collection<T> list : lists) {\n        double d = 0;\n        for (T element : list) {\n          d += element.doubleValue();\n        }\n        result.add(d);\n      }\n    } else if (stat.equals(\"sumOfSquares\")) {\n      result = new ArrayList<Double>();\n      for (List<T> list : lists) {\n        double d = 0;\n        for (T element : list) {\n          d += element.doubleValue()*element.doubleValue();\n        }\n        result.add(d);\n      }\n    } else if (stat.equals(\"stddev\")) {\n      result = new ArrayList<Double>();\n      for (List<T> list : lists) {\n        double sum = 0;\n        double sumSquares = 0;\n        for (T element : list) {\n          sum += element.doubleValue();\n          sumSquares += element.doubleValue()*element.doubleValue();\n        }\n        String res = Double.toString(Math.sqrt(sumSquares/list.size()-sum*sum/(list.size()*list.size())));\n        result.add(Double.parseDouble(res));\n      }\n    } else {\n      throw new IllegalArgumentException();\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"3bd4c6955956e76c96eb12dfe64108ed03522983":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"3bd4c6955956e76c96eb12dfe64108ed03522983":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}