{"path":"modules/grouping/src/java/org/apache/lucene/search/grouping/AbstractGroupFacetCollector.GroupedFacetResult#getFacetEntries(int,int).mjava","commits":[{"id":"369f44b665973d5aa5fc7d0f2a75ffad475d21ee","date":1331157468,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/AbstractGroupFacetCollector.GroupedFacetResult#getFacetEntries(int,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Returns a list of facet entries to be rendered based on the specified offset and limit.\n     * The facet entries are retrieved from the facet entries collected during merging.\n     *\n     * @param offset The offset in the collected facet entries during merging\n     * @param limit The number of facets to return starting from the offset.\n     * @return a list of facet entries to be rendered based on the specified offset and limit\n     */\n    public List<FacetEntry> getFacetEntries(int offset, int limit) {\n      List<FacetEntry> entries = new LinkedList<FacetEntry>();\n      limit += offset;\n\n      int i = 0;\n      for (FacetEntry facetEntry : facetEntries) {\n        if (i < offset) {\n          i++;\n          continue;\n        }\n        if (i++ >= limit) {\n          break;\n        }\n        entries.add(facetEntry);\n      }\n      return entries;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["3685dcafc9195b0631414aa4d422f788479e62b7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/AbstractGroupFacetCollector.GroupedFacetResult#getFacetEntries(int,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Returns a list of facet entries to be rendered based on the specified offset and limit.\n     * The facet entries are retrieved from the facet entries collected during merging.\n     *\n     * @param offset The offset in the collected facet entries during merging\n     * @param limit The number of facets to return starting from the offset.\n     * @return a list of facet entries to be rendered based on the specified offset and limit\n     */\n    public List<FacetEntry> getFacetEntries(int offset, int limit) {\n      List<FacetEntry> entries = new LinkedList<FacetEntry>();\n      limit += offset;\n\n      int i = 0;\n      for (FacetEntry facetEntry : facetEntries) {\n        if (i < offset) {\n          i++;\n          continue;\n        }\n        if (i++ >= limit) {\n          break;\n        }\n        entries.add(facetEntry);\n      }\n      return entries;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/AbstractGroupFacetCollector.GroupedFacetResult#getFacetEntries(int,int).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/AbstractGroupFacetCollector.GroupedFacetResult#getFacetEntries(int,int).mjava","sourceNew":"    /**\n     * Returns a list of facet entries to be rendered based on the specified offset and limit.\n     * The facet entries are retrieved from the facet entries collected during merging.\n     *\n     * @param offset The offset in the collected facet entries during merging\n     * @param limit The number of facets to return starting from the offset.\n     * @return a list of facet entries to be rendered based on the specified offset and limit\n     */\n    public List<FacetEntry> getFacetEntries(int offset, int limit) {\n      List<FacetEntry> entries = new LinkedList<FacetEntry>();\n      limit += offset;\n\n      int i = 0;\n      for (FacetEntry facetEntry : facetEntries) {\n        if (i < offset) {\n          i++;\n          continue;\n        }\n        if (i++ >= limit) {\n          break;\n        }\n        entries.add(facetEntry);\n      }\n      return entries;\n    }\n\n","sourceOld":"    /**\n     * Returns a list of facet entries to be rendered based on the specified offset and limit.\n     * The facet entries are retrieved from the facet entries collected during merging.\n     *\n     * @param offset The offset in the collected facet entries during merging\n     * @param limit The number of facets to return starting from the offset.\n     * @return a list of facet entries to be rendered based on the specified offset and limit\n     */\n    public List<FacetEntry> getFacetEntries(int offset, int limit) {\n      List<FacetEntry> entries = new LinkedList<FacetEntry>();\n      limit += offset;\n\n      int i = 0;\n      for (FacetEntry facetEntry : facetEntries) {\n        if (i < offset) {\n          i++;\n          continue;\n        }\n        if (i++ >= limit) {\n          break;\n        }\n        entries.add(facetEntry);\n      }\n      return entries;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","369f44b665973d5aa5fc7d0f2a75ffad475d21ee"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["369f44b665973d5aa5fc7d0f2a75ffad475d21ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"369f44b665973d5aa5fc7d0f2a75ffad475d21ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","369f44b665973d5aa5fc7d0f2a75ffad475d21ee"],"369f44b665973d5aa5fc7d0f2a75ffad475d21ee":["38e3b736c7ca086d61b7dbb841c905ee115490da","b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}