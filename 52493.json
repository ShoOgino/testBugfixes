{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicStemFilter#check(String,String).mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicStemFilter#check(String,String).mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/ar/TestArabicStemFilter#check(String,String).mjava","sourceNew":"  private void check(final String input, final String expected) throws IOException {\n    ArabicLetterTokenizer tokenStream  = new ArabicLetterTokenizer(new StringReader(input));\n    ArabicStemFilter filter = new ArabicStemFilter(tokenStream);\n    final Token reusableToken = new Token();\n    Token nextToken = filter.next(reusableToken);\n    if (nextToken == null)\n      fail();\n    assertEquals(expected, nextToken.term());\n    filter.close();\n  }\n\n","sourceOld":"  private void check(final String input, final String expected) throws IOException {\n    ArabicLetterTokenizer tokenStream  = new ArabicLetterTokenizer(new StringReader(input));\n    ArabicStemFilter filter = new ArabicStemFilter(tokenStream);\n    final Token reusableToken = new Token();\n    Token nextToken = filter.next(reusableToken);\n    if (nextToken == null)\n      fail();\n    assertEquals(expected, nextToken.term());\n    filter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b5756469957918cac40a831acec9cf01c8c2bb3","date":1249167152,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicStemFilter#check(String,String).mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicStemFilter#check(String,String).mjava","sourceNew":"  private void check(final String input, final String expected) throws IOException {\n    ArabicLetterTokenizer tokenStream  = new ArabicLetterTokenizer(new StringReader(input));\n    ArabicStemFilter filter = new ArabicStemFilter(tokenStream);\n    TermAttribute termAtt = (TermAttribute) filter.getAttribute(TermAttribute.class);\n    \n    assertTrue(filter.incrementToken());\n    assertEquals(expected, termAtt.term());\n    filter.close();\n  }\n\n","sourceOld":"  private void check(final String input, final String expected) throws IOException {\n    ArabicLetterTokenizer tokenStream  = new ArabicLetterTokenizer(new StringReader(input));\n    ArabicStemFilter filter = new ArabicStemFilter(tokenStream);\n    final Token reusableToken = new Token();\n    Token nextToken = filter.next(reusableToken);\n    if (nextToken == null)\n      fail();\n    assertEquals(expected, nextToken.term());\n    filter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc","date":1251117853,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicStemFilter#check(String,String).mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicStemFilter#check(String,String).mjava","sourceNew":"  private void check(final String input, final String expected) throws IOException {\n    ArabicLetterTokenizer tokenStream  = new ArabicLetterTokenizer(new StringReader(input));\n    ArabicStemFilter filter = new ArabicStemFilter(tokenStream);\n    assertTokenStreamContents(filter, new String[]{expected});\n  }\n\n","sourceOld":"  private void check(final String input, final String expected) throws IOException {\n    ArabicLetterTokenizer tokenStream  = new ArabicLetterTokenizer(new StringReader(input));\n    ArabicStemFilter filter = new ArabicStemFilter(tokenStream);\n    TermAttribute termAtt = (TermAttribute) filter.getAttribute(TermAttribute.class);\n    \n    assertTrue(filter.incrementToken());\n    assertEquals(expected, termAtt.term());\n    filter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85722042902595d9b0fbf38b7b57b139bdc12e4b","date":1264953677,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicStemFilter#check(String,String).mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicStemFilter#check(String,String).mjava","sourceNew":"  private void check(final String input, final String expected) throws IOException {\n    ArabicLetterTokenizer tokenStream  = new ArabicLetterTokenizer(Version.LUCENE_CURRENT, new StringReader(input));\n    ArabicStemFilter filter = new ArabicStemFilter(tokenStream);\n    assertTokenStreamContents(filter, new String[]{expected});\n  }\n\n","sourceOld":"  private void check(final String input, final String expected) throws IOException {\n    ArabicLetterTokenizer tokenStream  = new ArabicLetterTokenizer(new StringReader(input));\n    ArabicStemFilter filter = new ArabicStemFilter(tokenStream);\n    assertTokenStreamContents(filter, new String[]{expected});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicStemFilter#check(String,String).mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicStemFilter#check(String,String).mjava","sourceNew":"  private void check(final String input, final String expected) throws IOException {\n    ArabicLetterTokenizer tokenStream  = new ArabicLetterTokenizer(TEST_VERSION_CURRENT, new StringReader(input));\n    ArabicStemFilter filter = new ArabicStemFilter(tokenStream);\n    assertTokenStreamContents(filter, new String[]{expected});\n  }\n\n","sourceOld":"  private void check(final String input, final String expected) throws IOException {\n    ArabicLetterTokenizer tokenStream  = new ArabicLetterTokenizer(Version.LUCENE_CURRENT, new StringReader(input));\n    ArabicStemFilter filter = new ArabicStemFilter(tokenStream);\n    assertTokenStreamContents(filter, new String[]{expected});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicStemFilter#check(String,String).mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicStemFilter#check(String,String).mjava","sourceNew":"  private void check(final String input, final String expected) throws IOException {\n    ArabicLetterTokenizer tokenStream  = new ArabicLetterTokenizer(TEST_VERSION_CURRENT, new StringReader(input));\n    ArabicStemFilter filter = new ArabicStemFilter(tokenStream);\n    assertTokenStreamContents(filter, new String[]{expected});\n  }\n\n","sourceOld":"  private void check(final String input, final String expected) throws IOException {\n    ArabicLetterTokenizer tokenStream  = new ArabicLetterTokenizer(TEST_VERSION_CURRENT, new StringReader(input));\n    ArabicStemFilter filter = new ArabicStemFilter(tokenStream);\n    assertTokenStreamContents(filter, new String[]{expected});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9b5756469957918cac40a831acec9cf01c8c2bb3":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["85722042902595d9b0fbf38b7b57b139bdc12e4b"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"85722042902595d9b0fbf38b7b57b139bdc12e4b":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"9b5756469957918cac40a831acec9cf01c8c2bb3":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["85722042902595d9b0fbf38b7b57b139bdc12e4b"],"85722042902595d9b0fbf38b7b57b139bdc12e4b":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}