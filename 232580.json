{"path":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"1eeda7e62e149f90eee8895af874c74efa7d4852","date":1375293182,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).getStr(ROUTER)))\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = OverseerCollectionProcessor.asMap(QUEUE_OPERATION, CREATESHARD);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, REPLICATION_FACTOR);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD, m, rsp);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).getStr(ROUTER)))\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = OverseerCollectionProcessor.asMap(QUEUE_OPERATION, CREATESHARD);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, REPLICATION_FACTOR);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD, m, rsp);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"516f1df9effd0cdc9ac9b2f8625d60de02cd25bb","date":1378922240,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).getStr(ROUTER)))\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = OverseerCollectionProcessor.asMap(QUEUE_OPERATION, CREATESHARD);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, REPLICATION_FACTOR,CREATE_NODE_SET);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD, m, rsp);\n  }\n\n","sourceOld":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).getStr(ROUTER)))\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = OverseerCollectionProcessor.asMap(QUEUE_OPERATION, CREATESHARD);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, REPLICATION_FACTOR);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD, m, rsp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e187a371a1d09379bb452c2c13a7b9221525dff8","date":1379517004,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( ((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(ROUTER)).get(\"name\") )  )\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, REPLICATION_FACTOR,CREATE_NODE_SET);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD, m, rsp);\n  }\n\n","sourceOld":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).getStr(ROUTER)))\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = OverseerCollectionProcessor.asMap(QUEUE_OPERATION, CREATESHARD);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, REPLICATION_FACTOR,CREATE_NODE_SET);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD, m, rsp);\n  }\n\n","bugFix":null,"bugIntro":["be42559d954536c25355bd8887875bc3eb8b15a1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b711ca2887ae3fda68611cbb78c1b389fa9833be","date":1384985717,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( ((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(ROUTER)).get(\"name\") )  )\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, REPLICATION_FACTOR,CREATE_NODE_SET);\n    copyPropertiesIfNotNull(req.getParams(), map);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD, m, rsp);\n  }\n\n","sourceOld":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( ((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(ROUTER)).get(\"name\") )  )\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, REPLICATION_FACTOR,CREATE_NODE_SET);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD, m, rsp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( ((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(ROUTER)).get(\"name\") )  )\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, REPLICATION_FACTOR,CREATE_NODE_SET);\n    copyPropertiesIfNotNull(req.getParams(), map);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD, m, rsp);\n  }\n\n","sourceOld":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( ((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(ROUTER)).get(\"name\") )  )\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, REPLICATION_FACTOR,CREATE_NODE_SET);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD, m, rsp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211","date":1394784078,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( ((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(ROUTER)).get(\"name\") )  )\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, REPLICATION_FACTOR,CREATE_NODE_SET, ASYNC);\n    copyPropertiesIfNotNull(req.getParams(), map);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD, m, rsp);\n  }\n\n","sourceOld":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( ((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(ROUTER)).get(\"name\") )  )\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, REPLICATION_FACTOR,CREATE_NODE_SET);\n    copyPropertiesIfNotNull(req.getParams(), map);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD, m, rsp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0ad7bdba3e91cf3373cda2e52239cb761fc0b452","date":1408019547,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( ((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(ROUTER)).get(\"name\") )  )\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, ZkStateReader.REPLICATION_FACTOR, CREATE_NODE_SET, ASYNC);\n    copyPropertiesIfNotNull(req.getParams(), map);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD, m, rsp);\n  }\n\n","sourceOld":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( ((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(ROUTER)).get(\"name\") )  )\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, REPLICATION_FACTOR,CREATE_NODE_SET, ASYNC);\n    copyPropertiesIfNotNull(req.getParams(), map);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD, m, rsp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"30c688f7052130cef7bd419c85e3c5be214f7b9e","date":1411018984,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( ((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(ROUTER)).get(\"name\") )  )\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD.toLower());\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, ZkStateReader.REPLICATION_FACTOR, CREATE_NODE_SET, ASYNC);\n    copyPropertiesIfNotNull(req.getParams(), map);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD.toLower(), m, rsp);\n  }\n\n","sourceOld":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( ((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(ROUTER)).get(\"name\") )  )\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, ZkStateReader.REPLICATION_FACTOR, CREATE_NODE_SET, ASYNC);\n    copyPropertiesIfNotNull(req.getParams(), map);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD, m, rsp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"be42559d954536c25355bd8887875bc3eb8b15a1","date":1427742461,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( ((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(DOC_ROUTER)).get(\"name\") )  )\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD.toLower());\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, ZkStateReader.REPLICATION_FACTOR, CREATE_NODE_SET, ASYNC);\n    copyPropertiesIfNotNull(req.getParams(), map);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD.toLower(), m, rsp);\n  }\n\n","sourceOld":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( ((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(ROUTER)).get(\"name\") )  )\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD.toLower());\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, ZkStateReader.REPLICATION_FACTOR, CREATE_NODE_SET, ASYNC);\n    copyPropertiesIfNotNull(req.getParams(), map);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD.toLower(), m, rsp);\n  }\n\n","bugFix":["e187a371a1d09379bb452c2c13a7b9221525dff8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( ((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(DOC_ROUTER)).get(\"name\") )  )\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD.toLower());\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, ZkStateReader.REPLICATION_FACTOR, CREATE_NODE_SET, ASYNC);\n    copyPropertiesIfNotNull(req.getParams(), map);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD.toLower(), m, rsp);\n  }\n\n","sourceOld":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( ((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(ROUTER)).get(\"name\") )  )\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD.toLower());\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, ZkStateReader.REPLICATION_FACTOR, CREATE_NODE_SET, ASYNC);\n    copyPropertiesIfNotNull(req.getParams(), map);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD.toLower(), m, rsp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1390137e395d2f07f9ba5b8c43d293befe84d563","date":1427947685,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if (!ImplicitDocRouter.NAME.equals(((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(DOC_ROUTER)).get(NAME)))\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD.toLower());\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, ZkStateReader.REPLICATION_FACTOR, CREATE_NODE_SET, ASYNC);\n    copyPropertiesIfNotNull(req.getParams(), map);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD.toLower(), m, rsp);\n  }\n\n","sourceOld":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( ((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(DOC_ROUTER)).get(\"name\") )  )\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD.toLower());\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, ZkStateReader.REPLICATION_FACTOR, CREATE_NODE_SET, ASYNC);\n    copyPropertiesIfNotNull(req.getParams(), map);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD.toLower(), m, rsp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if (!ImplicitDocRouter.NAME.equals(((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(DOC_ROUTER)).get(NAME)))\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD.toLower());\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, ZkStateReader.REPLICATION_FACTOR, CREATE_NODE_SET, ASYNC);\n    copyPropertiesIfNotNull(req.getParams(), map);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD.toLower(), m, rsp);\n  }\n\n","sourceOld":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if(!ImplicitDocRouter.NAME.equals( ((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(DOC_ROUTER)).get(\"name\") )  )\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD.toLower());\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, ZkStateReader.REPLICATION_FACTOR, CREATE_NODE_SET, ASYNC);\n    copyPropertiesIfNotNull(req.getParams(), map);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD.toLower(), m, rsp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ebd3a557326ef3eab85b73a8cff781f7d801248","date":1431620752,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleCreateShard(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":null,"sourceOld":"  private void handleCreateShard(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Create shard: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP);\n    ClusterState clusterState = coreContainer.getZkController().getClusterState();\n    if (!ImplicitDocRouter.NAME.equals(((Map) clusterState.getCollection(req.getParams().get(COLLECTION_PROP)).get(DOC_ROUTER)).get(NAME)))\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"shards can be added only to 'implicit' collections\" );\n\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, CREATESHARD.toLower());\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP, SHARD_ID_PROP, ZkStateReader.REPLICATION_FACTOR, CREATE_NODE_SET, ASYNC);\n    copyPropertiesIfNotNull(req.getParams(), map);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(CREATESHARD.toLower(), m, rsp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1eeda7e62e149f90eee8895af874c74efa7d4852"],"be42559d954536c25355bd8887875bc3eb8b15a1":["30c688f7052130cef7bd419c85e3c5be214f7b9e"],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["b711ca2887ae3fda68611cbb78c1b389fa9833be"],"9ebd3a557326ef3eab85b73a8cff781f7d801248":["1390137e395d2f07f9ba5b8c43d293befe84d563"],"30c688f7052130cef7bd419c85e3c5be214f7b9e":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"b711ca2887ae3fda68611cbb78c1b389fa9833be":["e187a371a1d09379bb452c2c13a7b9221525dff8"],"1eeda7e62e149f90eee8895af874c74efa7d4852":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["30c688f7052130cef7bd419c85e3c5be214f7b9e","be42559d954536c25355bd8887875bc3eb8b15a1"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["be42559d954536c25355bd8887875bc3eb8b15a1"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","1390137e395d2f07f9ba5b8c43d293befe84d563"],"e187a371a1d09379bb452c2c13a7b9221525dff8":["516f1df9effd0cdc9ac9b2f8625d60de02cd25bb"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["e187a371a1d09379bb452c2c13a7b9221525dff8","b711ca2887ae3fda68611cbb78c1b389fa9833be"],"516f1df9effd0cdc9ac9b2f8625d60de02cd25bb":["1eeda7e62e149f90eee8895af874c74efa7d4852"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ebd3a557326ef3eab85b73a8cff781f7d801248"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"be42559d954536c25355bd8887875bc3eb8b15a1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","1390137e395d2f07f9ba5b8c43d293befe84d563"],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"9ebd3a557326ef3eab85b73a8cff781f7d801248":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"30c688f7052130cef7bd419c85e3c5be214f7b9e":["be42559d954536c25355bd8887875bc3eb8b15a1","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"b711ca2887ae3fda68611cbb78c1b389fa9833be":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"1eeda7e62e149f90eee8895af874c74efa7d4852":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","516f1df9effd0cdc9ac9b2f8625d60de02cd25bb"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["d2638f781be724518ff6c2263d14a48cf6e68017"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["9ebd3a557326ef3eab85b73a8cff781f7d801248","d2638f781be724518ff6c2263d14a48cf6e68017"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["30c688f7052130cef7bd419c85e3c5be214f7b9e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","1eeda7e62e149f90eee8895af874c74efa7d4852"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"e187a371a1d09379bb452c2c13a7b9221525dff8":["b711ca2887ae3fda68611cbb78c1b389fa9833be","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"516f1df9effd0cdc9ac9b2f8625d60de02cd25bb":["e187a371a1d09379bb452c2c13a7b9221525dff8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","d2638f781be724518ff6c2263d14a48cf6e68017","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}