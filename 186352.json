{"path":"solr/core/src/test/org/apache/solr/search/MaxScoreCollectorTest#test().mjava","commits":[{"id":"bc84078c9bac84ac0e655b654555a809321ef41b","date":1592869854,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/MaxScoreCollectorTest#test().mjava","pathOld":"/dev/null","sourceNew":"  public void test() throws IOException {\n    MaxScoreCollector collector = new MaxScoreCollector();\n    DummyScorer scorer = new DummyScorer();\n    collector.setScorer(scorer);\n    assertEquals(Float.NaN, collector.getMaxScore(), 0f);\n    assertEquals(0f, scorer.minCompetitiveScore, 0f);\n    \n    collector.collect(0);\n    assertEquals(Float.MIN_VALUE, collector.getMaxScore(), 0f);\n    assertEquals(0f, scorer.minCompetitiveScore, 0f);\n    \n    scorer.nextScore = 1f;\n    collector.collect(0);\n    assertEquals(1f, collector.getMaxScore(), 0f);\n    assertEquals(Math.nextUp(1f), scorer.minCompetitiveScore, 0f);\n\n    scorer.nextScore = 0f;\n    collector.collect(0);\n    assertEquals(1f, collector.getMaxScore(), 0f);\n    assertEquals(Math.nextUp(1f), scorer.minCompetitiveScore, 0f);\n    \n    scorer.nextScore = -1f;\n    collector.collect(0);\n    assertEquals(1f, collector.getMaxScore(), 0f);\n    assertEquals(Math.nextUp(1f), scorer.minCompetitiveScore, 0f);\n    \n    scorer.nextScore = Float.MAX_VALUE;\n    collector.collect(0);\n    assertEquals(Float.MAX_VALUE, collector.getMaxScore(), 0f);\n    assertEquals(Float.POSITIVE_INFINITY, scorer.minCompetitiveScore, 0f);\n    \n    scorer.nextScore = Float.POSITIVE_INFINITY;\n    collector.collect(0);\n    assertEquals(Float.POSITIVE_INFINITY, collector.getMaxScore(), 0f);\n    assertEquals(Float.POSITIVE_INFINITY, scorer.minCompetitiveScore, 0f);\n    \n    \n    scorer.nextScore = Float.NaN;\n    collector.collect(0);\n    assertEquals(Float.NaN, collector.getMaxScore(), 0f);\n    assertEquals(Float.NaN, scorer.minCompetitiveScore, 0f);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc84078c9bac84ac0e655b654555a809321ef41b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bc84078c9bac84ac0e655b654555a809321ef41b"]},"commit2Childs":{"bc84078c9bac84ac0e655b654555a809321ef41b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc84078c9bac84ac0e655b654555a809321ef41b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}