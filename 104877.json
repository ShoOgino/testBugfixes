{"path":"src/java/org/apache/lucene/index/DocumentsWriter.ByteSliceReader#nextSlice().mjava","commits":[{"id":"4350b17bd363cd13a95171b8df1ca62ea4c3e71c","date":1183562198,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter.ByteSliceReader#nextSlice().mjava","pathOld":"/dev/null","sourceNew":"    public void nextSlice() {\n\n      // Skip to our next slice\n      final int nextIndex = ((buffer[limit]&0xff)<<24) + ((buffer[1+limit]&0xff)<<16) + ((buffer[2+limit]&0xff)<<8) + (buffer[3+limit]&0xff);\n\n      level = nextLevelArray[level];\n      final int newSize = levelSizeArray[level];\n\n      bufferUpto = nextIndex / BYTE_BLOCK_SIZE;\n      bufferOffset = bufferUpto * BYTE_BLOCK_SIZE;\n\n      buffer = pool.buffers[bufferUpto];\n      upto = nextIndex & BYTE_BLOCK_MASK;\n\n      if (nextIndex + newSize >= endIndex) {\n        // We are advancing to the final slice\n        assert endIndex - nextIndex > 0;\n        limit = endIndex - bufferOffset;\n      } else {\n        // This is not the final slice (subtract 4 for the\n        // forwarding address at the end of this new slice)\n        limit = upto+newSize-4;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a0af3a442be522899177e5e11384a45a6784a3f","date":1205348952,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter.ByteSliceReader#nextSlice().mjava","sourceNew":null,"sourceOld":"    public void nextSlice() {\n\n      // Skip to our next slice\n      final int nextIndex = ((buffer[limit]&0xff)<<24) + ((buffer[1+limit]&0xff)<<16) + ((buffer[2+limit]&0xff)<<8) + (buffer[3+limit]&0xff);\n\n      level = nextLevelArray[level];\n      final int newSize = levelSizeArray[level];\n\n      bufferUpto = nextIndex / BYTE_BLOCK_SIZE;\n      bufferOffset = bufferUpto * BYTE_BLOCK_SIZE;\n\n      buffer = pool.buffers[bufferUpto];\n      upto = nextIndex & BYTE_BLOCK_MASK;\n\n      if (nextIndex + newSize >= endIndex) {\n        // We are advancing to the final slice\n        assert endIndex - nextIndex > 0;\n        limit = endIndex - bufferOffset;\n      } else {\n        // This is not the final slice (subtract 4 for the\n        // forwarding address at the end of this new slice)\n        limit = upto+newSize-4;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a0af3a442be522899177e5e11384a45a6784a3f":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a0af3a442be522899177e5e11384a45a6784a3f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"5a0af3a442be522899177e5e11384a45a6784a3f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["5a0af3a442be522899177e5e11384a45a6784a3f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}