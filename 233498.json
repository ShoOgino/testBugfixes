{"path":"solr/core/src/java/org/apache/solr/handler/tagger/TagLL#advance(BytesRef,int).mjava","commits":[{"id":"e091f281a6e026f8bb17aaf194efd0bbd3a7f549","date":1528221895,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/tagger/TagLL#advance(BytesRef,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Advances this tag with \"word\" at offset \"offset\".  If this tag is not in\n   * an advancing state then it does nothing. If it is advancing and prior to\n   * advancing further it sees a value, then a non-advancing tag may be inserted\n   * into the LL as side-effect. If this returns false (it didn't advance) and\n   * if there is no value, then it will also be removed.\n   *\n   *\n   * @param word      The next word or null if at an end\n   * @param offset    The last character in word's offset in the underlying\n   *                  stream. If word is null then it's meaningless.\n   *\n   * @return          Whether it advanced or not.\n   */\n  boolean advance(BytesRef word, int offset) throws IOException {\n    if (!isAdvancing())\n      return false;\n\n    Object iVal = cursor.getDocIds();\n\n    if (word != null && cursor.advance(word)) {\n\n      if (iVal != null) {\n        addBeforeLL(new TagLL(head, null, startOffset, endOffset, iVal));\n      }\n\n      assert offset >= endOffset;\n      endOffset = offset;\n      return true;\n    } else {\n      this.value = iVal;\n      this.cursor = null;\n      if (iVal == null)\n        removeLL();\n      return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/tagger/TagLL#advance(BytesRef,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Advances this tag with \"word\" at offset \"offset\".  If this tag is not in\n   * an advancing state then it does nothing. If it is advancing and prior to\n   * advancing further it sees a value, then a non-advancing tag may be inserted\n   * into the LL as side-effect. If this returns false (it didn't advance) and\n   * if there is no value, then it will also be removed.\n   *\n   *\n   * @param word      The next word or null if at an end\n   * @param offset    The last character in word's offset in the underlying\n   *                  stream. If word is null then it's meaningless.\n   *\n   * @return          Whether it advanced or not.\n   */\n  boolean advance(BytesRef word, int offset) throws IOException {\n    if (!isAdvancing())\n      return false;\n\n    Object iVal = cursor.getDocIds();\n\n    if (word != null && cursor.advance(word)) {\n\n      if (iVal != null) {\n        addBeforeLL(new TagLL(head, null, startOffset, endOffset, iVal));\n      }\n\n      assert offset >= endOffset;\n      endOffset = offset;\n      return true;\n    } else {\n      this.value = iVal;\n      this.cursor = null;\n      if (iVal == null)\n        removeLL();\n      return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/tagger/TagLL#advance(BytesRef,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Advances this tag with \"word\" at offset \"offset\".  If this tag is not in\n   * an advancing state then it does nothing. If it is advancing and prior to\n   * advancing further it sees a value, then a non-advancing tag may be inserted\n   * into the LL as side-effect. If this returns false (it didn't advance) and\n   * if there is no value, then it will also be removed.\n   *\n   *\n   * @param word      The next word or null if at an end\n   * @param offset    The last character in word's offset in the underlying\n   *                  stream. If word is null then it's meaningless.\n   *\n   * @return          Whether it advanced or not.\n   */\n  boolean advance(BytesRef word, int offset) throws IOException {\n    if (!isAdvancing())\n      return false;\n\n    Object iVal = cursor.getDocIds();\n\n    if (word != null && cursor.advance(word)) {\n\n      if (iVal != null) {\n        addBeforeLL(new TagLL(head, null, startOffset, endOffset, iVal));\n      }\n\n      assert offset >= endOffset;\n      endOffset = offset;\n      return true;\n    } else {\n      this.value = iVal;\n      this.cursor = null;\n      if (iVal == null)\n        removeLL();\n      return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e091f281a6e026f8bb17aaf194efd0bbd3a7f549"],"f592209545c71895260367152601e9200399776d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e091f281a6e026f8bb17aaf194efd0bbd3a7f549"],"e091f281a6e026f8bb17aaf194efd0bbd3a7f549":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e091f281a6e026f8bb17aaf194efd0bbd3a7f549"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","e091f281a6e026f8bb17aaf194efd0bbd3a7f549"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"f592209545c71895260367152601e9200399776d":[],"e091f281a6e026f8bb17aaf194efd0bbd3a7f549":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}