{"path":"lucene/suggest/src/java/org/apache/lucene/search/spell/JaroWinklerDistance#getDistance(String,String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/JaroWinklerDistance#getDistance(String,String).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/spell/JaroWinklerDistance#getDistance(String,String).mjava","sourceNew":"  public float getDistance(String s1, String s2) {\n    int[] mtp = matches(s1, s2);\n    float m = mtp[0];\n    if (m == 0) {\n      return 0f;\n    }\n    float j = ((m / s1.length() + m / s2.length() + (m - mtp[1]) / m)) / 3;\n    float jw = j < getThreshold() ? j : j + Math.min(0.1f, 1f / mtp[3]) * mtp[2]\n        * (1 - j);\n    return jw;\n  }\n\n","sourceOld":"  public float getDistance(String s1, String s2) {\n    int[] mtp = matches(s1, s2);\n    float m = mtp[0];\n    if (m == 0) {\n      return 0f;\n    }\n    float j = ((m / s1.length() + m / s2.length() + (m - mtp[1]) / m)) / 3;\n    float jw = j < getThreshold() ? j : j + Math.min(0.1f, 1f / mtp[3]) * mtp[2]\n        * (1 - j);\n    return jw;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/JaroWinklerDistance#getDistance(String,String).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/spell/JaroWinklerDistance#getDistance(String,String).mjava","sourceNew":"  @Override\n  public float getDistance(String s1, String s2) {\n    int[] mtp = matches(s1, s2);\n    float m = mtp[0];\n    if (m == 0) {\n      return 0f;\n    }\n    float j = ((m / s1.length() + m / s2.length() + (m - mtp[1]) / m)) / 3;\n    float jw = j < getThreshold() ? j : j + Math.min(0.1f, 1f / mtp[3]) * mtp[2]\n        * (1 - j);\n    return jw;\n  }\n\n","sourceOld":"  public float getDistance(String s1, String s2) {\n    int[] mtp = matches(s1, s2);\n    float m = mtp[0];\n    if (m == 0) {\n      return 0f;\n    }\n    float j = ((m / s1.length() + m / s2.length() + (m - mtp[1]) / m)) / 3;\n    float jw = j < getThreshold() ? j : j + Math.min(0.1f, 1f / mtp[3]) * mtp[2]\n        * (1 - j);\n    return jw;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/JaroWinklerDistance#getDistance(String,String).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/spell/JaroWinklerDistance#getDistance(String,String).mjava","sourceNew":"  @Override\n  public float getDistance(String s1, String s2) {\n    int[] mtp = matches(s1, s2);\n    float m = mtp[0];\n    if (m == 0) {\n      return 0f;\n    }\n    float j = ((m / s1.length() + m / s2.length() + (m - mtp[1]) / m)) / 3;\n    float jw = j < getThreshold() ? j : j + Math.min(0.1f, 1f / mtp[3]) * mtp[2]\n        * (1 - j);\n    return jw;\n  }\n\n","sourceOld":"  public float getDistance(String s1, String s2) {\n    int[] mtp = matches(s1, s2);\n    float m = mtp[0];\n    if (m == 0) {\n      return 0f;\n    }\n    float j = ((m / s1.length() + m / s2.length() + (m - mtp[1]) / m)) / 3;\n    float jw = j < getThreshold() ? j : j + Math.min(0.1f, 1f / mtp[3]) * mtp[2]\n        * (1 - j);\n    return jw;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7530de27b87b961b51f01bd1299b7004d46e8823"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7530de27b87b961b51f01bd1299b7004d46e8823"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}