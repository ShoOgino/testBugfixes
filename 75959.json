{"path":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String).mjava","commits":[{"id":"0265144286422ad99682a00904cc2536b79c8535","date":1482222684,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param scope scope of the metrics (eg. handler name) to separate metrics of\n   *              instances of the same component executing in different contexts\n   * @return registered (or existing) unqualified names of metrics specific to this producer.\n   */\n  Collection<String> initializeMetrics(SolrMetricManager manager, String registry, String scope);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param scope scope of the metrics (eg. handler name) to separate metrics of\n   *              instances of the same component executing in different contexts\n   * @return registered (or existing) unqualified names of metrics specific to this producer.\n   */\n  Collection<String> initializeMetrics(SolrMetricManager manager, String registry, String scope);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d646b44d1d17a867bcd0e7a07b11c4837b169366","date":1483540291,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param scope scope of the metrics (eg. handler name) to separate metrics of\n   *              instances of the same component executing in different contexts\n   */\n  void initializeMetrics(SolrMetricManager manager, String registry, String scope);\n\n","sourceOld":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param scope scope of the metrics (eg. handler name) to separate metrics of\n   *              instances of the same component executing in different contexts\n   * @return registered (or existing) unqualified names of metrics specific to this producer.\n   */\n  Collection<String> initializeMetrics(SolrMetricManager manager, String registry, String scope);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"491c9672ec42582fe43960452dbd37f1c80fe0f0","date":1483739222,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param scope scope of the metrics (eg. handler name) to separate metrics of\n   *              instances of the same component executing in different contexts\n   */\n  void initializeMetrics(SolrMetricManager manager, String registry, String scope);\n\n","sourceOld":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param scope scope of the metrics (eg. handler name) to separate metrics of\n   *              instances of the same component executing in different contexts\n   * @return registered (or existing) unqualified names of metrics specific to this producer.\n   */\n  Collection<String> initializeMetrics(SolrMetricManager manager, String registry, String scope);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfc52860e6d13d034226a760813c59d984c6817a","date":1522229027,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param tag a symbolic tag that represents this instance of the producer,\n   * or a group of related instances that have the same life-cycle. This tag is\n   * used when managing life-cycle of some metrics and is set when\n   * {@link #initializeMetrics(SolrMetricManager, String, String, String)} is called.\n   * @param scope scope of the metrics (eg. handler name) to separate metrics of\n   */\n  void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope);\n\n","sourceOld":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param scope scope of the metrics (eg. handler name) to separate metrics of\n   *              instances of the same component executing in different contexts\n   */\n  void initializeMetrics(SolrMetricManager manager, String registry, String scope);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43564cbb30b064675027cfb569564e8531096e97","date":1522334265,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param tag a symbolic tag that represents this instance of the producer,\n   * or a group of related instances that have the same life-cycle. This tag is\n   * used when managing life-cycle of some metrics and is set when\n   * {@link #initializeMetrics(SolrMetricManager, String, String, String)} is called.\n   * @param scope scope of the metrics (eg. handler name) to separate metrics of\n   */\n  void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope);\n\n","sourceOld":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param scope scope of the metrics (eg. handler name) to separate metrics of\n   *              instances of the same component executing in different contexts\n   */\n  void initializeMetrics(SolrMetricManager manager, String registry, String scope);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0265144286422ad99682a00904cc2536b79c8535":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bfc52860e6d13d034226a760813c59d984c6817a":["d646b44d1d17a867bcd0e7a07b11c4837b169366"],"43564cbb30b064675027cfb569564e8531096e97":["d646b44d1d17a867bcd0e7a07b11c4837b169366","bfc52860e6d13d034226a760813c59d984c6817a"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0265144286422ad99682a00904cc2536b79c8535"],"d646b44d1d17a867bcd0e7a07b11c4837b169366":["0265144286422ad99682a00904cc2536b79c8535"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["43564cbb30b064675027cfb569564e8531096e97"],"491c9672ec42582fe43960452dbd37f1c80fe0f0":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","d646b44d1d17a867bcd0e7a07b11c4837b169366"]},"commit2Childs":{"0265144286422ad99682a00904cc2536b79c8535":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","d646b44d1d17a867bcd0e7a07b11c4837b169366"],"bfc52860e6d13d034226a760813c59d984c6817a":["43564cbb30b064675027cfb569564e8531096e97"],"43564cbb30b064675027cfb569564e8531096e97":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["491c9672ec42582fe43960452dbd37f1c80fe0f0"],"d646b44d1d17a867bcd0e7a07b11c4837b169366":["bfc52860e6d13d034226a760813c59d984c6817a","43564cbb30b064675027cfb569564e8531096e97","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0265144286422ad99682a00904cc2536b79c8535","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"491c9672ec42582fe43960452dbd37f1c80fe0f0":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}