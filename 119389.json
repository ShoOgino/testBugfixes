{"path":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/HighlighterTest#testSimpleHighlighter().mjava","commits":[{"id":"db2e1c87dfa9ca908febe5b39f6dd3dee2fbe9e2","date":1081470871,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/HighlighterTest#testSimpleHighlighter().mjava","pathOld":"/dev/null","sourceNew":"\tpublic void testSimpleHighlighter() throws Exception\n\t{\n\t\tdoSearching(\"Kennedy\");\n\t\tHighlighter highlighter =\tnew Highlighter(new QueryScorer(query));\n\t\thighlighter.setTextFragmenter(new SimpleFragmenter(40));\t\t\t\n\t\tint maxNumFragmentsRequired = 2;\n\t\tfor (int i = 0; i < hits.length(); i++)\n\t\t{\n\t\t\tString text = hits.doc(i).get(FIELD_NAME);\n\t\t\tTokenStream tokenStream=analyzer.tokenStream(FIELD_NAME,new StringReader(text));\n\t\t\t\n\t\t\tString result =\n\t\t\t\thighlighter.getBestFragments(tokenStream,text,maxNumFragmentsRequired, \"...\");\n\t\t\tSystem.out.println(\"\\t\" + result);\n\t\t}\n\t\t//Not sure we can assert anything here - just running to check we dont throw any exceptions \n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b65377a14b2c1af24ad7adce693825c28c9ea0b6","date":1082509564,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testSimpleHighlighter().mjava","pathOld":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/HighlighterTest#testSimpleHighlighter().mjava","sourceNew":"\tpublic void testSimpleHighlighter() throws Exception\n\t{\n\t\tdoSearching(\"Kennedy\");\n\t\tHighlighter highlighter =\tnew Highlighter(new QueryScorer(query));\n\t\thighlighter.setTextFragmenter(new SimpleFragmenter(40));\t\t\t\n\t\tint maxNumFragmentsRequired = 2;\n\t\tfor (int i = 0; i < hits.length(); i++)\n\t\t{\n\t\t\tString text = hits.doc(i).get(FIELD_NAME);\n\t\t\tTokenStream tokenStream=analyzer.tokenStream(FIELD_NAME,new StringReader(text));\n\t\t\t\n\t\t\tString result =\n\t\t\t\thighlighter.getBestFragments(tokenStream,text,maxNumFragmentsRequired, \"...\");\n\t\t\tSystem.out.println(\"\\t\" + result);\n\t\t}\n\t\t//Not sure we can assert anything here - just running to check we dont throw any exceptions \n\t}\n\n","sourceOld":"\tpublic void testSimpleHighlighter() throws Exception\n\t{\n\t\tdoSearching(\"Kennedy\");\n\t\tHighlighter highlighter =\tnew Highlighter(new QueryScorer(query));\n\t\thighlighter.setTextFragmenter(new SimpleFragmenter(40));\t\t\t\n\t\tint maxNumFragmentsRequired = 2;\n\t\tfor (int i = 0; i < hits.length(); i++)\n\t\t{\n\t\t\tString text = hits.doc(i).get(FIELD_NAME);\n\t\t\tTokenStream tokenStream=analyzer.tokenStream(FIELD_NAME,new StringReader(text));\n\t\t\t\n\t\t\tString result =\n\t\t\t\thighlighter.getBestFragments(tokenStream,text,maxNumFragmentsRequired, \"...\");\n\t\t\tSystem.out.println(\"\\t\" + result);\n\t\t}\n\t\t//Not sure we can assert anything here - just running to check we dont throw any exceptions \n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b65377a14b2c1af24ad7adce693825c28c9ea0b6":["db2e1c87dfa9ca908febe5b39f6dd3dee2fbe9e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b65377a14b2c1af24ad7adce693825c28c9ea0b6"],"db2e1c87dfa9ca908febe5b39f6dd3dee2fbe9e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["db2e1c87dfa9ca908febe5b39f6dd3dee2fbe9e2"],"b65377a14b2c1af24ad7adce693825c28c9ea0b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"db2e1c87dfa9ca908febe5b39f6dd3dee2fbe9e2":["b65377a14b2c1af24ad7adce693825c28c9ea0b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}