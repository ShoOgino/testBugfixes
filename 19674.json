{"path":"src/java/org/apache/lucene/util/PriorityQueue#top().mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/PriorityQueue#top().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the least element of the PriorityQueue in constant time. */\n  public final Object top() {\n    if (size > 0)\n      return heap[1];\n    else\n      return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5241670df94f0524d3e8e9764331dea13b545564","date":1197914713,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/PriorityQueue#top().mjava","pathOld":"src/java/org/apache/lucene/util/PriorityQueue#top().mjava","sourceNew":"  /** Returns the least element of the PriorityQueue in constant time. */\n  public final Object top() {\n    // We don't need to check size here: if maxSize is 0,\n    // then heap is length 2 array with both entries null.\n    // If size is 0 then heap[1] is already null.\n    return heap[1];\n  }\n\n","sourceOld":"  /** Returns the least element of the PriorityQueue in constant time. */\n  public final Object top() {\n    if (size > 0)\n      return heap[1];\n    else\n      return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d48430886f0d62ca63d20bf2a8bc01acee0c12f","date":1254504483,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/PriorityQueue#top().mjava","pathOld":"src/java/org/apache/lucene/util/PriorityQueue#top().mjava","sourceNew":"  /** Returns the least element of the PriorityQueue in constant time. */\n  public final T top() {\n    // We don't need to check size here: if maxSize is 0,\n    // then heap is length 2 array with both entries null.\n    // If size is 0 then heap[1] is already null.\n    return heap[1];\n  }\n\n","sourceOld":"  /** Returns the least element of the PriorityQueue in constant time. */\n  public final Object top() {\n    // We don't need to check size here: if maxSize is 0,\n    // then heap is length 2 array with both entries null.\n    // If size is 0 then heap[1] is already null.\n    return heap[1];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/PriorityQueue#top().mjava","pathOld":"src/java/org/apache/lucene/util/PriorityQueue#top().mjava","sourceNew":"  /** Returns the least element of the PriorityQueue in constant time. */\n  public final T top() {\n    // We don't need to check size here: if maxSize is 0,\n    // then heap is length 2 array with both entries null.\n    // If size is 0 then heap[1] is already null.\n    return heap[1];\n  }\n\n","sourceOld":"  /** Returns the least element of the PriorityQueue in constant time. */\n  public final T top() {\n    // We don't need to check size here: if maxSize is 0,\n    // then heap is length 2 array with both entries null.\n    // If size is 0 then heap[1] is already null.\n    return heap[1];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8d48430886f0d62ca63d20bf2a8bc01acee0c12f":["5241670df94f0524d3e8e9764331dea13b545564"],"5241670df94f0524d3e8e9764331dea13b545564":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8d48430886f0d62ca63d20bf2a8bc01acee0c12f"]},"commit2Childs":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["5241670df94f0524d3e8e9764331dea13b545564"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"8d48430886f0d62ca63d20bf2a8bc01acee0c12f":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5241670df94f0524d3e8e9764331dea13b545564":["8d48430886f0d62ca63d20bf2a8bc01acee0c12f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}