{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/beans/TestDocumentObjectBinder#testDynamicFieldBinding().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/beans/TestDocumentObjectBinder#testDynamicFieldBinding().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/beans/TestDocumentObjectBinder#testDynamicFieldBinding().mjava","sourceNew":"  public void testDynamicFieldBinding(){\n    DocumentObjectBinder binder = new DocumentObjectBinder();\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> nl = parser.processResponse(new StringReader(xml));\n    QueryResponse res = new QueryResponse(nl, null);\n    List<Item> l = binder.getBeans(Item.class,res.getResults());\n    Assert.assertArrayEquals(new String[]{\"Mobile Store\",\"iPod Store\",\"CCTV Store\"}, l.get(3).getAllSuppliers());\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_1\"));\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_2\"));\n    Assert.assertEquals(2, l.get(3).supplier.size());\n    Assert.assertEquals(\"[Mobile Store, iPod Store]\", l.get(3).supplier.get(\"supplier_1\").toString());\n    Assert.assertEquals(\"[CCTV Store]\", l.get(3).supplier.get(\"supplier_2\").toString());\n  }\n\n","sourceOld":"  public void testDynamicFieldBinding(){\n    DocumentObjectBinder binder = new DocumentObjectBinder();\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> nl = parser.processResponse(new StringReader(xml));\n    QueryResponse res = new QueryResponse(nl, null);\n    List<Item> l = binder.getBeans(Item.class,res.getResults());\n    Assert.assertArrayEquals(new String[]{\"Mobile Store\",\"iPod Store\",\"CCTV Store\"}, l.get(3).getAllSuppliers());\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_1\"));\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_2\"));\n    Assert.assertEquals(2, l.get(3).supplier.size());\n    Assert.assertEquals(\"[Mobile Store, iPod Store]\", l.get(3).supplier.get(\"supplier_1\").toString());\n    Assert.assertEquals(\"[CCTV Store]\", l.get(3).supplier.get(\"supplier_2\").toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/beans/TestDocumentObjectBinder#testDynamicFieldBinding().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/beans/TestDocumentObjectBinder#testDynamicFieldBinding().mjava","sourceNew":"  public void testDynamicFieldBinding(){\n    DocumentObjectBinder binder = new DocumentObjectBinder();\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> nl = parser.processResponse(new StringReader(xml));\n    QueryResponse res = new QueryResponse(nl, null);\n    List<Item> l = binder.getBeans(Item.class,res.getResults());\n    Assert.assertArrayEquals(new String[]{\"Mobile Store\",\"iPod Store\",\"CCTV Store\"}, l.get(3).getAllSuppliers());\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_1\"));\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_2\"));\n    Assert.assertEquals(2, l.get(3).supplier.size());\n    Assert.assertEquals(\"[Mobile Store, iPod Store]\", l.get(3).supplier.get(\"supplier_1\").toString());\n    Assert.assertEquals(\"[CCTV Store]\", l.get(3).supplier.get(\"supplier_2\").toString());\n  }\n\n","sourceOld":"  public void testDynamicFieldBinding(){\n    DocumentObjectBinder binder = new DocumentObjectBinder();\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> nl = parser.processResponse(new StringReader(xml));\n    QueryResponse res = new QueryResponse(nl, null);\n    List<Item> l = binder.getBeans(Item.class,res.getResults());\n    Assert.assertArrayEquals(new String[]{\"Mobile Store\",\"iPod Store\",\"CCTV Store\"}, l.get(3).getAllSuppliers());\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_1\"));\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_2\"));\n    Assert.assertEquals(2, l.get(3).supplier.size());\n    Assert.assertEquals(\"[Mobile Store, iPod Store]\", l.get(3).supplier.get(\"supplier_1\").toString());\n    Assert.assertEquals(\"[CCTV Store]\", l.get(3).supplier.get(\"supplier_2\").toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/beans/TestDocumentObjectBinder#testDynamicFieldBinding().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/beans/TestDocumentObjectBinder#testDynamicFieldBinding().mjava","sourceNew":"  public void testDynamicFieldBinding(){\n    DocumentObjectBinder binder = new DocumentObjectBinder();\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> nl = parser.processResponse(new StringReader(xml));\n    QueryResponse res = new QueryResponse(nl, null);\n    List<Item> l = binder.getBeans(Item.class,res.getResults());\n    Assert.assertArrayEquals(new String[]{\"Mobile Store\",\"iPod Store\",\"CCTV Store\"}, l.get(3).getAllSuppliers());\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_1\"));\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_2\"));\n    Assert.assertEquals(2, l.get(3).supplier.size());\n    Assert.assertEquals(\"[Mobile Store, iPod Store]\", l.get(3).supplier.get(\"supplier_1\").toString());\n    Assert.assertEquals(\"[CCTV Store]\", l.get(3).supplier.get(\"supplier_2\").toString());\n  }\n\n","sourceOld":"  public void testDynamicFieldBinding(){\n    DocumentObjectBinder binder = new DocumentObjectBinder();\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> nl = parser.processResponse(new StringReader(xml));\n    QueryResponse res = new QueryResponse(nl, null);\n    List<Item> l = binder.getBeans(Item.class,res.getResults());\n    Assert.assertArrayEquals(new String[]{\"Mobile Store\",\"iPod Store\",\"CCTV Store\"}, l.get(3).getAllSuppliers());\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_1\"));\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_2\"));\n    Assert.assertEquals(2, l.get(3).supplier.size());\n    Assert.assertEquals(\"[Mobile Store, iPod Store]\", l.get(3).supplier.get(\"supplier_1\").toString());\n    Assert.assertEquals(\"[CCTV Store]\", l.get(3).supplier.get(\"supplier_2\").toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"35b292579499b440bb87b86a6b832d91a6f6dc2e","date":1313656166,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/beans/TestDocumentObjectBinder#testDynamicFieldBinding().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/beans/TestDocumentObjectBinder#testDynamicFieldBinding().mjava","sourceNew":"  public void testDynamicFieldBinding() {\n    DocumentObjectBinder binder = new DocumentObjectBinder();\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> nl = parser.processResponse(new StringReader(xml));\n    QueryResponse res = new QueryResponse(nl, null);\n    List<Item> l = binder.getBeans(Item.class,res.getResults());\n\n    assertArrayEquals(new String[]{\"Mobile Store\", \"iPod Store\", \"CCTV Store\"}, l.get(3).getAllSuppliers());\n    assertTrue(l.get(3).supplier.containsKey(\"supplier_1\"));\n    assertTrue(l.get(3).supplier.containsKey(\"supplier_2\"));\n    assertEquals(2, l.get(3).supplier.size());\n\n    List<String> supplierOne = l.get(3).supplier.get(\"supplier_1\");\n    assertEquals(\"Mobile Store\", supplierOne.get(0));\n    assertEquals(\"iPod Store\", supplierOne.get(1));\n\n    List<String> supplierTwo = l.get(3).supplier.get(\"supplier_2\");\n    assertEquals(\"CCTV Store\", supplierTwo.get(0));\n  }\n\n","sourceOld":"  public void testDynamicFieldBinding(){\n    DocumentObjectBinder binder = new DocumentObjectBinder();\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> nl = parser.processResponse(new StringReader(xml));\n    QueryResponse res = new QueryResponse(nl, null);\n    List<Item> l = binder.getBeans(Item.class,res.getResults());\n    Assert.assertArrayEquals(new String[]{\"Mobile Store\",\"iPod Store\",\"CCTV Store\"}, l.get(3).getAllSuppliers());\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_1\"));\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_2\"));\n    Assert.assertEquals(2, l.get(3).supplier.size());\n    Assert.assertEquals(\"[Mobile Store, iPod Store]\", l.get(3).supplier.get(\"supplier_1\").toString());\n    Assert.assertEquals(\"[CCTV Store]\", l.get(3).supplier.get(\"supplier_2\").toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cba13865da71de3b9b0937fcbc66d726089356d","date":1537507909,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/beans/TestDocumentObjectBinder#testDynamicFieldBinding().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/beans/TestDocumentObjectBinder#testDynamicFieldBinding().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testDynamicFieldBinding() {\n    DocumentObjectBinder binder = new DocumentObjectBinder();\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> nl = parser.processResponse(new StringReader(xml));\n    QueryResponse res = new QueryResponse(nl, null);\n    List<Item> l = binder.getBeans(Item.class,res.getResults());\n\n    assertArrayEquals(new String[]{\"Mobile Store\", \"iPod Store\", \"CCTV Store\"}, l.get(3).getAllSuppliers());\n    assertTrue(l.get(3).supplier.containsKey(\"supplier_1\"));\n    assertTrue(l.get(3).supplier.containsKey(\"supplier_2\"));\n    assertEquals(2, l.get(3).supplier.size());\n\n    List<String> supplierOne = l.get(3).supplier.get(\"supplier_1\");\n    assertEquals(\"Mobile Store\", supplierOne.get(0));\n    assertEquals(\"iPod Store\", supplierOne.get(1));\n\n    List<String> supplierTwo = l.get(3).supplier.get(\"supplier_2\");\n    assertEquals(\"CCTV Store\", supplierTwo.get(0));\n  }\n\n","sourceOld":"  public void testDynamicFieldBinding() {\n    DocumentObjectBinder binder = new DocumentObjectBinder();\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> nl = parser.processResponse(new StringReader(xml));\n    QueryResponse res = new QueryResponse(nl, null);\n    List<Item> l = binder.getBeans(Item.class,res.getResults());\n\n    assertArrayEquals(new String[]{\"Mobile Store\", \"iPod Store\", \"CCTV Store\"}, l.get(3).getAllSuppliers());\n    assertTrue(l.get(3).supplier.containsKey(\"supplier_1\"));\n    assertTrue(l.get(3).supplier.containsKey(\"supplier_2\"));\n    assertEquals(2, l.get(3).supplier.size());\n\n    List<String> supplierOne = l.get(3).supplier.get(\"supplier_1\");\n    assertEquals(\"Mobile Store\", supplierOne.get(0));\n    assertEquals(\"iPod Store\", supplierOne.get(1));\n\n    List<String> supplierTwo = l.get(3).supplier.get(\"supplier_2\");\n    assertEquals(\"CCTV Store\", supplierTwo.get(0));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d35c84fdef07284c122012ca4000d3b7285a66e","date":1545962630,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/beans/TestDocumentObjectBinder#testDynamicFieldBinding().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/beans/TestDocumentObjectBinder#testDynamicFieldBinding().mjava","sourceNew":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testDynamicFieldBinding() {\n    DocumentObjectBinder binder = new DocumentObjectBinder();\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> nl = parser.processResponse(new StringReader(xml));\n    QueryResponse res = new QueryResponse(nl, null);\n    List<Item> l = binder.getBeans(Item.class,res.getResults());\n\n    assertArrayEquals(new String[]{\"Mobile Store\", \"iPod Store\", \"CCTV Store\"}, l.get(3).getAllSuppliers());\n    assertTrue(l.get(3).supplier.containsKey(\"supplier_1\"));\n    assertTrue(l.get(3).supplier.containsKey(\"supplier_2\"));\n    assertEquals(2, l.get(3).supplier.size());\n\n    List<String> supplierOne = l.get(3).supplier.get(\"supplier_1\");\n    assertEquals(\"Mobile Store\", supplierOne.get(0));\n    assertEquals(\"iPod Store\", supplierOne.get(1));\n\n    List<String> supplierTwo = l.get(3).supplier.get(\"supplier_2\");\n    assertEquals(\"CCTV Store\", supplierTwo.get(0));\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testDynamicFieldBinding() {\n    DocumentObjectBinder binder = new DocumentObjectBinder();\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> nl = parser.processResponse(new StringReader(xml));\n    QueryResponse res = new QueryResponse(nl, null);\n    List<Item> l = binder.getBeans(Item.class,res.getResults());\n\n    assertArrayEquals(new String[]{\"Mobile Store\", \"iPod Store\", \"CCTV Store\"}, l.get(3).getAllSuppliers());\n    assertTrue(l.get(3).supplier.containsKey(\"supplier_1\"));\n    assertTrue(l.get(3).supplier.containsKey(\"supplier_2\"));\n    assertEquals(2, l.get(3).supplier.size());\n\n    List<String> supplierOne = l.get(3).supplier.get(\"supplier_1\");\n    assertEquals(\"Mobile Store\", supplierOne.get(0));\n    assertEquals(\"iPod Store\", supplierOne.get(1));\n\n    List<String> supplierTwo = l.get(3).supplier.get(\"supplier_2\");\n    assertEquals(\"CCTV Store\", supplierTwo.get(0));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"35b292579499b440bb87b86a6b832d91a6f6dc2e":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cba13865da71de3b9b0937fcbc66d726089356d":["35b292579499b440bb87b86a6b832d91a6f6dc2e"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8d35c84fdef07284c122012ca4000d3b7285a66e"],"8d35c84fdef07284c122012ca4000d3b7285a66e":["4cba13865da71de3b9b0937fcbc66d726089356d"]},"commit2Childs":{"35b292579499b440bb87b86a6b832d91a6f6dc2e":["4cba13865da71de3b9b0937fcbc66d726089356d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["35b292579499b440bb87b86a6b832d91a6f6dc2e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"4cba13865da71de3b9b0937fcbc66d726089356d":["8d35c84fdef07284c122012ca4000d3b7285a66e"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8d35c84fdef07284c122012ca4000d3b7285a66e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}