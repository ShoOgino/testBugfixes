{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.SegmentTermsEnum#seekExact(BytesRef,TermState).mjava","commits":[{"id":"3a509b6df968a74c38a0528f5bf6ea26f503b756","date":1373188457,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.SegmentTermsEnum#seekExact(BytesRef,TermState).mjava","pathOld":"/dev/null","sourceNew":"      // nocommit: this method doesn't act as 'seekExact' right?\n      @Override\n      public void seekExact(BytesRef target, TermState otherState) {\n        if (term == null || target.compareTo(term) != 0) {\n          state.copyFrom(otherState);\n          term = BytesRef.deepCopyOf(target);\n          seekPending = true;\n        }\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"050ba1ba249733cac50c2612418b7179591d2df9","date":1374633633,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.SegmentTermsEnum#seekExact(BytesRef,TermState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.SegmentTermsEnum#seekExact(BytesRef,TermState).mjava","sourceNew":"      @Override\n      public void seekExact(BytesRef target, TermState otherState) {\n        if (!target.equals(term)) {\n          state.copyFrom(otherState);\n          term = BytesRef.deepCopyOf(target);\n          seekPending = true;\n        }\n      }\n\n","sourceOld":"      // nocommit: this method doesn't act as 'seekExact' right?\n      @Override\n      public void seekExact(BytesRef target, TermState otherState) {\n        if (term == null || target.compareTo(term) != 0) {\n          state.copyFrom(otherState);\n          term = BytesRef.deepCopyOf(target);\n          seekPending = true;\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.SegmentTermsEnum#seekExact(BytesRef,TermState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.SegmentTermsEnum#seekExact(BytesRef,TermState).mjava","sourceNew":"      @Override\n      public void seekExact(BytesRef target, TermState otherState) {\n        if (!target.equals(term)) {\n          state.copyFrom(otherState);\n          term = BytesRef.deepCopyOf(target);\n          seekPending = true;\n        }\n      }\n\n","sourceOld":"      @Override\n      public void seekExact(BytesRef target, TermState otherState) {\n        if (!target.equals(term)) {\n          state.copyFrom(otherState);\n          term = BytesRef.deepCopyOf(target);\n          seekPending = true;\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["050ba1ba249733cac50c2612418b7179591d2df9"],"3a509b6df968a74c38a0528f5bf6ea26f503b756":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"050ba1ba249733cac50c2612418b7179591d2df9":["3a509b6df968a74c38a0528f5bf6ea26f503b756"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a509b6df968a74c38a0528f5bf6ea26f503b756","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"3a509b6df968a74c38a0528f5bf6ea26f503b756":["050ba1ba249733cac50c2612418b7179591d2df9"],"050ba1ba249733cac50c2612418b7179591d2df9":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}