{"path":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d","date":1298208351,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2506f4a214732b20f56ab2fa8b975dc5d85c4d45","date":1302809898,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    randomFixedLengthUnicodeString(r, buffer, 0, buffer.length);\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eb46686a27187e42311e77666a2c7026f461ebc","date":1302858020,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    randomFixedLengthUnicodeString(r, buffer, 0, buffer.length);\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    randomFixedLengthUnicodeString(r, buffer, 0, buffer.length);\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    randomFixedLengthUnicodeString(r, buffer, 0, buffer.length);\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    randomFixedLengthUnicodeString(r, buffer, 0, buffer.length);\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    randomFixedLengthUnicodeString(r, buffer, 0, buffer.length);\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["2506f4a214732b20f56ab2fa8b975dc5d85c4d45"],"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["29ef99d61cda9641b6250bf9567329a6e65f901d","0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"1eb46686a27187e42311e77666a2c7026f461ebc":["bde51b089eb7f86171eb3406e38a274743f9b7ac","2506f4a214732b20f56ab2fa8b975dc5d85c4d45"],"a3776dccca01c11e7046323cfad46a3b4a471233":["0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d","2506f4a214732b20f56ab2fa8b975dc5d85c4d45"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["f1bdbf92da222965b46c0a942c3857ba56e5c638","2506f4a214732b20f56ab2fa8b975dc5d85c4d45"],"2506f4a214732b20f56ab2fa8b975dc5d85c4d45":["0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d":["f1bdbf92da222965b46c0a942c3857ba56e5c638","a3776dccca01c11e7046323cfad46a3b4a471233","2506f4a214732b20f56ab2fa8b975dc5d85c4d45","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"1eb46686a27187e42311e77666a2c7026f461ebc":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"2506f4a214732b20f56ab2fa8b975dc5d85c4d45":["7b91922b55d15444d554721b352861d028eb8278","1eb46686a27187e42311e77666a2c7026f461ebc","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["1eb46686a27187e42311e77666a2c7026f461ebc"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d","29ef99d61cda9641b6250bf9567329a6e65f901d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1eb46686a27187e42311e77666a2c7026f461ebc","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}