{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#getType().mjava","commits":[{"id":"85212dad4ed576c7f7e6c165ee19e597b7b4efc8","date":1507997740,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#getType().mjava","pathOld":"/dev/null","sourceNew":"  public Replica.Type getType() {\n    Object o = variables.get(ZkStateReader.REPLICA_TYPE);\n    if (o == null) {\n      variables.put(ZkStateReader.REPLICA_TYPE, Replica.Type.NRT);\n      return Replica.Type.NRT;\n    } else if (o instanceof Replica.Type) {\n      return (Replica.Type)o;\n    } else {\n      Replica.Type type = Replica.Type.get(String.valueOf(o).toUpperCase(Locale.ROOT));\n      variables.put(ZkStateReader.REPLICA_TYPE, type);\n      return type;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1bbcda32e5cd37ef61ea1190bacd080308e22070","date":1508850553,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#getType().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#getType().mjava","sourceNew":"  public Replica.Type getType() {\n    Object o = type == null ? variables.get(ZkStateReader.REPLICA_TYPE) : type;\n    if (o == null) {\n      return Replica.Type.NRT;\n    } else if (o instanceof Replica.Type) {\n      return (Replica.Type)o;\n    } else {\n      Replica.Type type = Replica.Type.get(String.valueOf(o).toUpperCase(Locale.ROOT));\n      return type;\n    }\n  }\n\n","sourceOld":"  public Replica.Type getType() {\n    Object o = variables.get(ZkStateReader.REPLICA_TYPE);\n    if (o == null) {\n      variables.put(ZkStateReader.REPLICA_TYPE, Replica.Type.NRT);\n      return Replica.Type.NRT;\n    } else if (o instanceof Replica.Type) {\n      return (Replica.Type)o;\n    } else {\n      Replica.Type type = Replica.Type.get(String.valueOf(o).toUpperCase(Locale.ROOT));\n      variables.put(ZkStateReader.REPLICA_TYPE, type);\n      return type;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd","date":1594731683,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#getType().mjava","sourceNew":null,"sourceOld":"  public Replica.Type getType() {\n    Object o = type == null ? variables.get(ZkStateReader.REPLICA_TYPE) : type;\n    if (o == null) {\n      return Replica.Type.NRT;\n    } else if (o instanceof Replica.Type) {\n      return (Replica.Type)o;\n    } else {\n      Replica.Type type = Replica.Type.get(String.valueOf(o).toUpperCase(Locale.ROOT));\n      return type;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd":["1bbcda32e5cd37ef61ea1190bacd080308e22070"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1bbcda32e5cd37ef61ea1190bacd080308e22070":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd"]},"commit2Childs":{"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["1bbcda32e5cd37ef61ea1190bacd080308e22070"],"1bbcda32e5cd37ef61ea1190bacd080308e22070":["7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}