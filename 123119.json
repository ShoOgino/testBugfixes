{"path":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compareSolrResponses(SolrResponse,SolrResponse).mjava","commits":[{"id":"2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9","date":1371479482,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compareSolrResponses(SolrResponse,SolrResponse).mjava","pathOld":"/dev/null","sourceNew":"  protected void compareSolrResponses(SolrResponse a, SolrResponse b) {\n    String cmp = compare(a.getResponse(), b.getResponse(), flags, handle);\n    if (cmp != null) {\n      log.error(\"Mismatched responses:\\n\" + a + \"\\n\" + b);\n      Assert.fail(cmp);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compareSolrResponses(SolrResponse,SolrResponse).mjava","pathOld":"/dev/null","sourceNew":"  protected void compareSolrResponses(SolrResponse a, SolrResponse b) {\n    String cmp = compare(a.getResponse(), b.getResponse(), flags, handle);\n    if (cmp != null) {\n      log.error(\"Mismatched responses:\\n\" + a + \"\\n\" + b);\n      Assert.fail(cmp);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"072f211dfa8387028bb978d128c35bf9a450bbbf","date":1406041363,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compareSolrResponses(SolrResponse,SolrResponse).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compareSolrResponses(SolrResponse,SolrResponse).mjava","sourceNew":"  protected void compareSolrResponses(SolrResponse a, SolrResponse b) {\n    // SOLR-3345: Checking QTime value can be skipped as there is no guarantee that the numbers will match.\n    handle.put(\"QTime\", SKIPVAL);\n    String cmp = compare(a.getResponse(), b.getResponse(), flags, handle);\n    if (cmp != null) {\n      log.error(\"Mismatched responses:\\n\" + a + \"\\n\" + b);\n      Assert.fail(cmp);\n    }\n  }\n\n","sourceOld":"  protected void compareSolrResponses(SolrResponse a, SolrResponse b) {\n    String cmp = compare(a.getResponse(), b.getResponse(), flags, handle);\n    if (cmp != null) {\n      log.error(\"Mismatched responses:\\n\" + a + \"\\n\" + b);\n      Assert.fail(cmp);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43f5f8344e80b4bfb2069917069430266753d2f0","date":1538584815,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compareSolrResponses(SolrResponse,SolrResponse).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compareSolrResponses(SolrResponse,SolrResponse).mjava","sourceNew":"  protected void compareSolrResponses(SolrResponse a, SolrResponse b) {\n    // SOLR-3345: Checking QTime value can be skipped as there is no guarantee that the numbers will match.\n    handle.put(\"QTime\", SKIPVAL);\n    // rf will be different since the control collection doesn't usually have multiple replicas\n    handle.put(\"rf\", SKIPVAL);\n    String cmp = compare(a.getResponse(), b.getResponse(), flags, handle);\n    if (cmp != null) {\n      log.error(\"Mismatched responses:\\n\" + a + \"\\n\" + b);\n      Assert.fail(cmp);\n    }\n  }\n\n","sourceOld":"  protected void compareSolrResponses(SolrResponse a, SolrResponse b) {\n    // SOLR-3345: Checking QTime value can be skipped as there is no guarantee that the numbers will match.\n    handle.put(\"QTime\", SKIPVAL);\n    String cmp = compare(a.getResponse(), b.getResponse(), flags, handle);\n    if (cmp != null) {\n      log.error(\"Mismatched responses:\\n\" + a + \"\\n\" + b);\n      Assert.fail(cmp);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compareSolrResponses(SolrResponse,SolrResponse).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compareSolrResponses(SolrResponse,SolrResponse).mjava","sourceNew":"  protected void compareSolrResponses(SolrResponse a, SolrResponse b) {\n    // SOLR-3345: Checking QTime value can be skipped as there is no guarantee that the numbers will match.\n    handle.put(\"QTime\", SKIPVAL);\n    // rf will be different since the control collection doesn't usually have multiple replicas\n    handle.put(\"rf\", SKIPVAL);\n    String cmp = compare(a.getResponse(), b.getResponse(), flags, handle);\n    if (cmp != null) {\n      log.error(\"Mismatched responses:\\n{}\\n{}\", a, b);\n      Assert.fail(cmp);\n    }\n  }\n\n","sourceOld":"  protected void compareSolrResponses(SolrResponse a, SolrResponse b) {\n    // SOLR-3345: Checking QTime value can be skipped as there is no guarantee that the numbers will match.\n    handle.put(\"QTime\", SKIPVAL);\n    // rf will be different since the control collection doesn't usually have multiple replicas\n    handle.put(\"rf\", SKIPVAL);\n    String cmp = compare(a.getResponse(), b.getResponse(), flags, handle);\n    if (cmp != null) {\n      log.error(\"Mismatched responses:\\n\" + a + \"\\n\" + b);\n      Assert.fail(cmp);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"072f211dfa8387028bb978d128c35bf9a450bbbf":["2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9"],"43f5f8344e80b4bfb2069917069430266753d2f0":["072f211dfa8387028bb978d128c35bf9a450bbbf"],"2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["43f5f8344e80b4bfb2069917069430266753d2f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"]},"commit2Childs":{"072f211dfa8387028bb978d128c35bf9a450bbbf":["43f5f8344e80b4bfb2069917069430266753d2f0"],"2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9":["072f211dfa8387028bb978d128c35bf9a450bbbf","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"43f5f8344e80b4bfb2069917069430266753d2f0":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}