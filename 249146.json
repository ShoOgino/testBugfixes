{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50NormsConsumer#addPatchedTable(FieldInfo,Iterable[Number],int,int,int,NormMap).mjava","commits":[{"id":"0c3fae32338d82a0710e1756793faba13dcb598b","date":1414786590,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50NormsConsumer#addPatchedTable(FieldInfo,Iterable[Number],int,int,int,NormMap).mjava","pathOld":"/dev/null","sourceNew":"  // encodes common values in a table, and the rest of the values as exceptions using INDIRECT.\n  // the exceptions should not be accessed very often, since the values are uncommon\n  private void addPatchedTable(FieldInfo field, final Iterable<Number> values, final int numCommonValues, int commonValuesCount, int count, final NormMap uniqueValues) throws IOException {\n    meta.writeVInt(count);\n    meta.writeByte(PATCHED_TABLE);\n    meta.writeLong(data.getFilePointer());\n\n    assert numCommonValues == 3 || numCommonValues == 15;\n    FormatAndBits compression = fastestFormatAndBits(numCommonValues);\n    \n    writeTable(values, compression, count, uniqueValues, numCommonValues);\n\n    meta.writeVInt(field.number);\n    addIndirect(field, values, count - commonValuesCount, uniqueValues, numCommonValues);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9","date":1434069165,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene50/Lucene50NormsConsumer#addPatchedTable(FieldInfo,Iterable[Number],int,int,int,NormMap).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50NormsConsumer#addPatchedTable(FieldInfo,Iterable[Number],int,int,int,NormMap).mjava","sourceNew":"  // encodes common values in a table, and the rest of the values as exceptions using INDIRECT.\n  // the exceptions should not be accessed very often, since the values are uncommon\n  private void addPatchedTable(FieldInfo field, final Iterable<Number> values, final int numCommonValues, int commonValuesCount, int count, final NormMap uniqueValues) throws IOException {\n    meta.writeVInt(count);\n    meta.writeByte(Lucene50NormsFormat.PATCHED_TABLE);\n    meta.writeLong(data.getFilePointer());\n\n    assert numCommonValues == 3 || numCommonValues == 15;\n    FormatAndBits compression = fastestFormatAndBits(numCommonValues);\n    \n    writeTable(values, compression, count, uniqueValues, numCommonValues);\n\n    meta.writeVInt(field.number);\n    addIndirect(field, values, count - commonValuesCount, uniqueValues, numCommonValues);\n  }\n\n","sourceOld":"  // encodes common values in a table, and the rest of the values as exceptions using INDIRECT.\n  // the exceptions should not be accessed very often, since the values are uncommon\n  private void addPatchedTable(FieldInfo field, final Iterable<Number> values, final int numCommonValues, int commonValuesCount, int count, final NormMap uniqueValues) throws IOException {\n    meta.writeVInt(count);\n    meta.writeByte(PATCHED_TABLE);\n    meta.writeLong(data.getFilePointer());\n\n    assert numCommonValues == 3 || numCommonValues == 15;\n    FormatAndBits compression = fastestFormatAndBits(numCommonValues);\n    \n    writeTable(values, compression, count, uniqueValues, numCommonValues);\n\n    meta.writeVInt(field.number);\n    addIndirect(field, values, count - commonValuesCount, uniqueValues, numCommonValues);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9":["0c3fae32338d82a0710e1756793faba13dcb598b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0c3fae32338d82a0710e1756793faba13dcb598b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9"]},"commit2Childs":{"96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0c3fae32338d82a0710e1756793faba13dcb598b"],"0c3fae32338d82a0710e1756793faba13dcb598b":["96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}