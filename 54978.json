{"path":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#equals(Object).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#equals(Object).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o)\n      return true;\n    if (!super.equals(o))\n      return false;\n    if (getClass() != o.getClass()) {\n      return false;\n    }\n    CustomScoreQuery other = (CustomScoreQuery)o;\n    if (this.getBoost() != other.getBoost() ||\n        !this.subQuery.equals(other.subQuery) ||\n        this.strict != other.strict ||\n        this.scoringQueries.length != other.scoringQueries.length) {\n      return false;\n    }\n    return Arrays.equals(scoringQueries, other.scoringQueries);\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o)\n      return true;\n    if (!super.equals(o))\n      return false;\n    if (getClass() != o.getClass()) {\n      return false;\n    }\n    CustomScoreQuery other = (CustomScoreQuery)o;\n    if (this.getBoost() != other.getBoost() ||\n        !this.subQuery.equals(other.subQuery) ||\n        this.strict != other.strict ||\n        this.scoringQueries.length != other.scoringQueries.length) {\n      return false;\n    }\n    return Arrays.equals(scoringQueries, other.scoringQueries);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o)\n      return true;\n    if (!super.equals(o))\n      return false;\n    if (getClass() != o.getClass()) {\n      return false;\n    }\n    CustomScoreQuery other = (CustomScoreQuery)o;\n    if (this.getBoost() != other.getBoost() ||\n        !this.subQuery.equals(other.subQuery) ||\n        this.strict != other.strict ||\n        this.scoringQueries.length != other.scoringQueries.length) {\n      return false;\n    }\n    return Arrays.equals(scoringQueries, other.scoringQueries);\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o)\n      return true;\n    if (!super.equals(o))\n      return false;\n    if (getClass() != o.getClass()) {\n      return false;\n    }\n    CustomScoreQuery other = (CustomScoreQuery)o;\n    if (this.getBoost() != other.getBoost() ||\n        !this.subQuery.equals(other.subQuery) ||\n        this.strict != other.strict ||\n        this.scoringQueries.length != other.scoringQueries.length) {\n      return false;\n    }\n    return Arrays.equals(scoringQueries, other.scoringQueries);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o)\n      return true;\n    if (!super.equals(o))\n      return false;\n    if (getClass() != o.getClass()) {\n      return false;\n    }\n    CustomScoreQuery other = (CustomScoreQuery)o;\n    if (this.getBoost() != other.getBoost() ||\n        !this.subQuery.equals(other.subQuery) ||\n        this.strict != other.strict ||\n        this.scoringQueries.length != other.scoringQueries.length) {\n      return false;\n    }\n    return Arrays.equals(scoringQueries, other.scoringQueries);\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o)\n      return true;\n    if (!super.equals(o))\n      return false;\n    if (getClass() != o.getClass()) {\n      return false;\n    }\n    CustomScoreQuery other = (CustomScoreQuery)o;\n    if (this.getBoost() != other.getBoost() ||\n        !this.subQuery.equals(other.subQuery) ||\n        this.strict != other.strict ||\n        this.scoringQueries.length != other.scoringQueries.length) {\n      return false;\n    }\n    return Arrays.equals(scoringQueries, other.scoringQueries);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o)\n      return true;\n    if (!super.equals(o))\n      return false;\n    CustomScoreQuery other = (CustomScoreQuery)o;\n    if (!this.subQuery.equals(other.subQuery) ||\n        this.strict != other.strict ||\n        this.scoringQueries.length != other.scoringQueries.length) {\n      return false;\n    }\n    return Arrays.equals(scoringQueries, other.scoringQueries);\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o)\n      return true;\n    if (!super.equals(o))\n      return false;\n    if (getClass() != o.getClass()) {\n      return false;\n    }\n    CustomScoreQuery other = (CustomScoreQuery)o;\n    if (this.getBoost() != other.getBoost() ||\n        !this.subQuery.equals(other.subQuery) ||\n        this.strict != other.strict ||\n        this.scoringQueries.length != other.scoringQueries.length) {\n      return false;\n    }\n    return Arrays.equals(scoringQueries, other.scoringQueries);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o)\n      return true;\n    if (!super.equals(o))\n      return false;\n    CustomScoreQuery other = (CustomScoreQuery)o;\n    if (!this.subQuery.equals(other.subQuery) ||\n        this.strict != other.strict ||\n        this.scoringQueries.length != other.scoringQueries.length) {\n      return false;\n    }\n    return Arrays.equals(scoringQueries, other.scoringQueries);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o)\n      return true;\n    if (!super.equals(o))\n      return false;\n    CustomScoreQuery other = (CustomScoreQuery)o;\n    if (!this.subQuery.equals(other.subQuery) ||\n        this.strict != other.strict ||\n        this.scoringQueries.length != other.scoringQueries.length) {\n      return false;\n    }\n    return Arrays.equals(scoringQueries, other.scoringQueries);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a82662cae660e76ded4de1e9b451633e523d83e1","date":1513619223,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#equals(Object).mjava","sourceNew":null,"sourceOld":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a82662cae660e76ded4de1e9b451633e523d83e1":["0e7bc21595222ae4f75509300fbb7726691f387f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2dfdf766e55e943d942055d7de53c7ad6bc45283","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a82662cae660e76ded4de1e9b451633e523d83e1"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a82662cae660e76ded4de1e9b451633e523d83e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"0e7bc21595222ae4f75509300fbb7726691f387f":["a82662cae660e76ded4de1e9b451633e523d83e1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}