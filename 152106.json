{"path":"lucene/src/java/org/apache/lucene/store/MMapDirectory.MMapCompoundFileDirectory#MMapCompoundFileDirectory(String,IOContext).mjava","commits":[{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/MMapDirectory.MMapCompoundFileDirectory#MMapCompoundFileDirectory(String,IOContext).mjava","pathOld":"/dev/null","sourceNew":"    public MMapCompoundFileDirectory(String fileName, IOContext context) throws IOException {\n      super(MMapDirectory.this, fileName, context);\n      IndexInput stream = null;\n      try {\n        File f = new File(MMapDirectory.this.getDirectory(), fileName);\n        raf = new RandomAccessFile(f, \"r\");\n        stream = new MMapIndexInput(raf, 0, raf.length(), chunkSizePower);\n        initForRead(CompoundFileDirectory.readEntries(stream, MMapDirectory.this, fileName));\n        stream.close();\n      } catch (IOException e) {\n        // throw our original exception\n        IOUtils.closeSafely(e, raf, stream);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/MMapDirectory.MMapCompoundFileDirectory#MMapCompoundFileDirectory(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/MMapDirectory.MMapCompoundFileDirectory#MMapCompoundFileDirectory(String,int).mjava","sourceNew":"    public MMapCompoundFileDirectory(String fileName, IOContext context) throws IOException {\n      super(MMapDirectory.this, fileName, context);\n      IndexInput stream = null;\n      try {\n        File f = new File(MMapDirectory.this.getDirectory(), fileName);\n        raf = new RandomAccessFile(f, \"r\");\n        stream = new MMapIndexInput(raf, 0, raf.length(), chunkSizePower);\n        initForRead(CompoundFileDirectory.readEntries(stream, MMapDirectory.this, fileName));\n        stream.close();\n      } catch (IOException e) {\n        // throw our original exception\n        IOUtils.closeSafely(e, raf, stream);\n      }\n    }\n\n","sourceOld":"    public MMapCompoundFileDirectory(String fileName, int readBufferSize) throws IOException {\n      super(MMapDirectory.this, fileName, readBufferSize);\n      IndexInput stream = null;\n      try {\n        File f = new File(MMapDirectory.this.getDirectory(), fileName);\n        raf = new RandomAccessFile(f, \"r\");\n        stream = new MMapIndexInput(raf, 0, raf.length(), chunkSizePower);\n        initForRead(CompoundFileDirectory.readEntries(stream, MMapDirectory.this, fileName));\n        stream.close();\n      } catch (IOException e) {\n        // throw our original exception\n        IOUtils.closeSafely(e, raf, stream);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/MMapDirectory.MMapCompoundFileDirectory#MMapCompoundFileDirectory(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/MMapDirectory.MMapCompoundFileDirectory#MMapCompoundFileDirectory(String,int).mjava","sourceNew":"    public MMapCompoundFileDirectory(String fileName, IOContext context) throws IOException {\n      super(MMapDirectory.this, fileName, context);\n      IndexInput stream = null;\n      try {\n        File f = new File(MMapDirectory.this.getDirectory(), fileName);\n        raf = new RandomAccessFile(f, \"r\");\n        stream = new MMapIndexInput(raf, 0, raf.length(), chunkSizePower);\n        initForRead(CompoundFileDirectory.readEntries(stream, MMapDirectory.this, fileName));\n        stream.close();\n      } catch (IOException e) {\n        // throw our original exception\n        IOUtils.closeSafely(e, raf, stream);\n      }\n    }\n\n","sourceOld":"    public MMapCompoundFileDirectory(String fileName, int readBufferSize) throws IOException {\n      super(MMapDirectory.this, fileName, readBufferSize);\n      IndexInput stream = null;\n      try {\n        File f = new File(MMapDirectory.this.getDirectory(), fileName);\n        raf = new RandomAccessFile(f, \"r\");\n        stream = new MMapIndexInput(raf, 0, raf.length(), chunkSizePower);\n        initForRead(CompoundFileDirectory.readEntries(stream, MMapDirectory.this, fileName));\n        stream.close();\n      } catch (IOException e) {\n        // throw our original exception\n        IOUtils.closeSafely(e, raf, stream);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"67aadace85f701c87a4e0721eedcda25d8415a70","date":1314201925,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/store/MMapDirectory.MMapCompoundFileDirectory#MMapCompoundFileDirectory(String,IOContext).mjava","sourceNew":null,"sourceOld":"    public MMapCompoundFileDirectory(String fileName, IOContext context) throws IOException {\n      super(MMapDirectory.this, fileName, context);\n      IndexInput stream = null;\n      try {\n        File f = new File(MMapDirectory.this.getDirectory(), fileName);\n        raf = new RandomAccessFile(f, \"r\");\n        stream = new MMapIndexInput(raf, 0, raf.length(), chunkSizePower);\n        initForRead(CompoundFileDirectory.readEntries(stream, MMapDirectory.this, fileName));\n        stream.close();\n      } catch (IOException e) {\n        // throw our original exception\n        IOUtils.closeSafely(e, raf, stream);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"67aadace85f701c87a4e0721eedcda25d8415a70":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["67aadace85f701c87a4e0721eedcda25d8415a70"]},"commit2Childs":{"67aadace85f701c87a4e0721eedcda25d8415a70":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d004d0e0b3f65bb40da76d476d659d7888270e8","ddc4c914be86e34b54f70023f45a60fa7f04e929","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["67aadace85f701c87a4e0721eedcda25d8415a70","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}