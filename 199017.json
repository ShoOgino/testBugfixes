{"path":"contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldQuery.QueryPhraseMap#add(Query).mjava","commits":[{"id":"d64148a458eb3ddf4d1bb1f1753cb9af194e1707","date":1247144811,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldQuery.QueryPhraseMap#add(Query).mjava","pathOld":"/dev/null","sourceNew":"    void add( Query query ){\n      if( query instanceof TermQuery ){\n        addTerm( ((TermQuery)query).getTerm(), query.getBoost() );\n      }\n      else if( query instanceof PhraseQuery ){\n        PhraseQuery pq = (PhraseQuery)query;\n        Term[] terms = pq.getTerms();\n        Map<String, QueryPhraseMap> map = subMap;\n        QueryPhraseMap qpm = null;\n        for( Term term : terms ){\n          qpm = getOrNewMap( map, term.text() );\n          map = qpm.subMap;\n        }\n        qpm.markTerminal( pq.getSlop(), pq.getBoost() );\n      }\n      else\n        throw new RuntimeException( \"query \\\"\" + query.toString() + \"\\\" must be flatten first.\" );\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldQuery.QueryPhraseMap#add(Query).mjava","pathOld":"contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldQuery.QueryPhraseMap#add(Query).mjava","sourceNew":"    void add( Query query ){\n      if( query instanceof TermQuery ){\n        addTerm( ((TermQuery)query).getTerm(), query.getBoost() );\n      }\n      else if( query instanceof PhraseQuery ){\n        PhraseQuery pq = (PhraseQuery)query;\n        Term[] terms = pq.getTerms();\n        Map<String, QueryPhraseMap> map = subMap;\n        QueryPhraseMap qpm = null;\n        for( Term term : terms ){\n          qpm = getOrNewMap( map, term.text() );\n          map = qpm.subMap;\n        }\n        qpm.markTerminal( pq.getSlop(), pq.getBoost() );\n      }\n      else\n        throw new RuntimeException( \"query \\\"\" + query.toString() + \"\\\" must be flatten first.\" );\n    }\n\n","sourceOld":"    void add( Query query ){\n      if( query instanceof TermQuery ){\n        addTerm( ((TermQuery)query).getTerm(), query.getBoost() );\n      }\n      else if( query instanceof PhraseQuery ){\n        PhraseQuery pq = (PhraseQuery)query;\n        Term[] terms = pq.getTerms();\n        Map<String, QueryPhraseMap> map = subMap;\n        QueryPhraseMap qpm = null;\n        for( Term term : terms ){\n          qpm = getOrNewMap( map, term.text() );\n          map = qpm.subMap;\n        }\n        qpm.markTerminal( pq.getSlop(), pq.getBoost() );\n      }\n      else\n        throw new RuntimeException( \"query \\\"\" + query.toString() + \"\\\" must be flatten first.\" );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d64148a458eb3ddf4d1bb1f1753cb9af194e1707":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d64148a458eb3ddf4d1bb1f1753cb9af194e1707"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d64148a458eb3ddf4d1bb1f1753cb9af194e1707"],"d64148a458eb3ddf4d1bb1f1753cb9af194e1707":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}