{"path":"lucene/sandbox/src/java/org/apache/lucene/rangetree/RangeTreeWriter#add(long,int).mjava","commits":[{"id":"8c12c43c449a172df0f2b122918f0f5fc0e9a470","date":1438415333,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/rangetree/RangeTreeWriter#add(long,int).mjava","pathOld":"/dev/null","sourceNew":"  void add(long value, int docID) throws IOException {\n    if (valueCount >= maxValuesSortInHeap) {\n      if (writer == null) {\n        switchToOffline();\n      }\n      scratchBytesOutput.reset(scratchBytes);\n      scratchBytesOutput.writeLong(value);\n      scratchBytesOutput.writeVInt(docID);\n      scratchBytesOutput.writeVLong(valueCount);\n      writer.write(scratchBytes, 0, scratchBytes.length);\n    } else {\n      // Not too many points added yet, continue using heap:\n      heapWriter.append(value, valueCount, docID);\n    }\n\n    valueCount++;\n    globalMaxValue = Math.max(value, globalMaxValue);\n    globalMinValue = Math.min(value, globalMinValue);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/rangetree/RangeTreeWriter#add(long,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/rangetree/RangeTreeWriter#add(long,int).mjava","sourceNew":"  void add(long value, int docID) throws IOException {\n    if (valueCount >= maxValuesSortInHeap) {\n      if (offlineWriter == null) {\n        switchToOffline();\n      }\n      scratchBytesOutput.reset(scratchBytes);\n      scratchBytesOutput.writeLong(value);\n      scratchBytesOutput.writeVInt(docID);\n      scratchBytesOutput.writeVLong(valueCount);\n      offlineWriter.write(scratchBytes, 0, scratchBytes.length);\n    } else {\n      // Not too many points added yet, continue using heap:\n      heapWriter.append(value, valueCount, docID);\n    }\n\n    valueCount++;\n    globalMaxValue = Math.max(value, globalMaxValue);\n    globalMinValue = Math.min(value, globalMinValue);\n  }\n\n","sourceOld":"  void add(long value, int docID) throws IOException {\n    if (valueCount >= maxValuesSortInHeap) {\n      if (writer == null) {\n        switchToOffline();\n      }\n      scratchBytesOutput.reset(scratchBytes);\n      scratchBytesOutput.writeLong(value);\n      scratchBytesOutput.writeVInt(docID);\n      scratchBytesOutput.writeVLong(valueCount);\n      writer.write(scratchBytes, 0, scratchBytes.length);\n    } else {\n      // Not too many points added yet, continue using heap:\n      heapWriter.append(value, valueCount, docID);\n    }\n\n    valueCount++;\n    globalMaxValue = Math.max(value, globalMaxValue);\n    globalMinValue = Math.min(value, globalMinValue);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1904709ea0185dc04e3d77ea01c79e909caf2796","date":1447006699,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/java/org/apache/lucene/rangetree/RangeTreeWriter#add(long,int).mjava","sourceNew":null,"sourceOld":"  void add(long value, int docID) throws IOException {\n    if (valueCount >= maxValuesSortInHeap) {\n      if (offlineWriter == null) {\n        switchToOffline();\n      }\n      scratchBytesOutput.reset(scratchBytes);\n      scratchBytesOutput.writeLong(value);\n      scratchBytesOutput.writeVInt(docID);\n      scratchBytesOutput.writeVLong(valueCount);\n      offlineWriter.write(scratchBytes, 0, scratchBytes.length);\n    } else {\n      // Not too many points added yet, continue using heap:\n      heapWriter.append(value, valueCount, docID);\n    }\n\n    valueCount++;\n    globalMaxValue = Math.max(value, globalMaxValue);\n    globalMinValue = Math.min(value, globalMinValue);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8c12c43c449a172df0f2b122918f0f5fc0e9a470":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1904709ea0185dc04e3d77ea01c79e909caf2796":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["8c12c43c449a172df0f2b122918f0f5fc0e9a470"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1904709ea0185dc04e3d77ea01c79e909caf2796"]},"commit2Childs":{"8c12c43c449a172df0f2b122918f0f5fc0e9a470":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c12c43c449a172df0f2b122918f0f5fc0e9a470"],"1904709ea0185dc04e3d77ea01c79e909caf2796":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}