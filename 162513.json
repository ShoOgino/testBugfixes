{"path":"src/java/org/apache/lucene/index/DirectoryIndexReader#open(Directory,boolean,IndexDeletionPolicy,IndexCommit).mjava","commits":[{"id":"ac785906c92e4048ffc28f7c23a45541d3cca9bf","date":1214322066,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryIndexReader#open(Directory,boolean,IndexDeletionPolicy,IndexCommit).mjava","pathOld":"/dev/null","sourceNew":"  static DirectoryIndexReader open(final Directory directory, final boolean closeDirectory, final IndexDeletionPolicy deletionPolicy, final IndexCommit commit) throws CorruptIndexException, IOException {\n\n    SegmentInfos.FindSegmentsFile finder = new SegmentInfos.FindSegmentsFile(directory) {\n\n      protected Object doBody(String segmentFileName) throws CorruptIndexException, IOException {\n\n        SegmentInfos infos = new SegmentInfos();\n        infos.read(directory, segmentFileName);\n\n        DirectoryIndexReader reader;\n\n        if (infos.size() == 1) {          // index is optimized\n          reader = SegmentReader.get(infos, infos.info(0), closeDirectory);\n        } else {\n          reader = new MultiSegmentReader(directory, infos, closeDirectory);\n        }\n        reader.setDeletionPolicy(deletionPolicy);\n        return reader;\n      }\n    };\n\n    if (commit == null)\n      return (DirectoryIndexReader) finder.run();\n    else {\n      if (directory != commit.getDirectory())\n        throw new IOException(\"the specified commit does not match the specified Directory\");\n      // This can & will directly throw IOException if the\n      // specified commit point has been deleted:\n      return (DirectoryIndexReader) finder.doBody(commit.getSegmentsFileName());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["6ab6e144b62a8a94bec1f1f7e78795c7a1377aba"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5712975970a595c28f1988efd007e1b8a617a92f","date":1219499238,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryIndexReader#open(Directory,boolean,IndexDeletionPolicy,IndexCommit,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryIndexReader#open(Directory,boolean,IndexDeletionPolicy,IndexCommit).mjava","sourceNew":"  static DirectoryIndexReader open(final Directory directory, final boolean closeDirectory, final IndexDeletionPolicy deletionPolicy, final IndexCommit commit, final boolean readOnly) throws CorruptIndexException, IOException {\n\n    SegmentInfos.FindSegmentsFile finder = new SegmentInfos.FindSegmentsFile(directory) {\n\n      protected Object doBody(String segmentFileName) throws CorruptIndexException, IOException {\n\n        SegmentInfos infos = new SegmentInfos();\n        infos.read(directory, segmentFileName);\n\n        DirectoryIndexReader reader;\n\n        if (infos.size() == 1) {          // index is optimized\n          reader = SegmentReader.get(readOnly, infos, infos.info(0), closeDirectory);\n        } else if (readOnly) {\n          reader = new ReadOnlyMultiSegmentReader(directory, infos, closeDirectory);\n        } else {\n          reader = new MultiSegmentReader(directory, infos, closeDirectory, false);\n        }\n        reader.setDeletionPolicy(deletionPolicy);\n        return reader;\n      }\n    };\n\n    if (commit == null)\n      return (DirectoryIndexReader) finder.run();\n    else {\n      if (directory != commit.getDirectory())\n        throw new IOException(\"the specified commit does not match the specified Directory\");\n      // This can & will directly throw IOException if the\n      // specified commit point has been deleted:\n      return (DirectoryIndexReader) finder.doBody(commit.getSegmentsFileName());\n    }\n  }\n\n","sourceOld":"  static DirectoryIndexReader open(final Directory directory, final boolean closeDirectory, final IndexDeletionPolicy deletionPolicy, final IndexCommit commit) throws CorruptIndexException, IOException {\n\n    SegmentInfos.FindSegmentsFile finder = new SegmentInfos.FindSegmentsFile(directory) {\n\n      protected Object doBody(String segmentFileName) throws CorruptIndexException, IOException {\n\n        SegmentInfos infos = new SegmentInfos();\n        infos.read(directory, segmentFileName);\n\n        DirectoryIndexReader reader;\n\n        if (infos.size() == 1) {          // index is optimized\n          reader = SegmentReader.get(infos, infos.info(0), closeDirectory);\n        } else {\n          reader = new MultiSegmentReader(directory, infos, closeDirectory);\n        }\n        reader.setDeletionPolicy(deletionPolicy);\n        return reader;\n      }\n    };\n\n    if (commit == null)\n      return (DirectoryIndexReader) finder.run();\n    else {\n      if (directory != commit.getDirectory())\n        throw new IOException(\"the specified commit does not match the specified Directory\");\n      // This can & will directly throw IOException if the\n      // specified commit point has been deleted:\n      return (DirectoryIndexReader) finder.doBody(commit.getSegmentsFileName());\n    }\n  }\n\n","bugFix":null,"bugIntro":["6ab6e144b62a8a94bec1f1f7e78795c7a1377aba"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"5712975970a595c28f1988efd007e1b8a617a92f":["ac785906c92e4048ffc28f7c23a45541d3cca9bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac785906c92e4048ffc28f7c23a45541d3cca9bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5712975970a595c28f1988efd007e1b8a617a92f"]},"commit2Childs":{"5712975970a595c28f1988efd007e1b8a617a92f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac785906c92e4048ffc28f7c23a45541d3cca9bf"],"ac785906c92e4048ffc28f7c23a45541d3cca9bf":["5712975970a595c28f1988efd007e1b8a617a92f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}