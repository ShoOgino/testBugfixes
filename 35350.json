{"path":"lucene/src/java/org/apache/lucene/codecs/MappingMultiDocsAndPositionsEnum#nextDoc().mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/MappingMultiDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/MappingMultiDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"  @Override\n  public int nextDoc() throws IOException {\n    while(true) {\n      if (current == null) {\n        if (upto == numSubs-1) {\n          return this.doc = NO_MORE_DOCS;\n        } else {\n          upto++;\n          final int reader = subs[upto].slice.readerIndex;\n          current = subs[upto].docsAndPositionsEnum;\n          currentBase = mergeState.docBase[reader];\n          currentMap = mergeState.docMaps[reader];\n        }\n      }\n\n      int doc = current.nextDoc();\n      if (doc != NO_MORE_DOCS) {\n        if (currentMap != null) {\n          // compact deletions\n          doc = currentMap[doc];\n          if (doc == -1) {\n            continue;\n          }\n        }\n        return this.doc = currentBase + doc;\n      } else {\n        current = null;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public int nextDoc() throws IOException {\n    while(true) {\n      if (current == null) {\n        if (upto == numSubs-1) {\n          return this.doc = NO_MORE_DOCS;\n        } else {\n          upto++;\n          final int reader = subs[upto].slice.readerIndex;\n          current = subs[upto].docsAndPositionsEnum;\n          currentBase = mergeState.docBase[reader];\n          currentMap = mergeState.docMaps[reader];\n        }\n      }\n\n      int doc = current.nextDoc();\n      if (doc != NO_MORE_DOCS) {\n        if (currentMap != null) {\n          // compact deletions\n          doc = currentMap[doc];\n          if (doc == -1) {\n            continue;\n          }\n        }\n        return this.doc = currentBase + doc;\n      } else {\n        current = null;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/MappingMultiDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/MappingMultiDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"  @Override\n  public int nextDoc() throws IOException {\n    while(true) {\n      if (current == null) {\n        if (upto == numSubs-1) {\n          return this.doc = NO_MORE_DOCS;\n        } else {\n          upto++;\n          final int reader = subs[upto].slice.readerIndex;\n          current = subs[upto].docsAndPositionsEnum;\n          currentBase = mergeState.docBase[reader];\n          currentMap = mergeState.docMaps[reader];\n        }\n      }\n\n      int doc = current.nextDoc();\n      if (doc != NO_MORE_DOCS) {\n        if (currentMap != null) {\n          // compact deletions\n          doc = currentMap[doc];\n          if (doc == -1) {\n            continue;\n          }\n        }\n        return this.doc = currentBase + doc;\n      } else {\n        current = null;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public int nextDoc() throws IOException {\n    while(true) {\n      if (current == null) {\n        if (upto == numSubs-1) {\n          return this.doc = NO_MORE_DOCS;\n        } else {\n          upto++;\n          final int reader = subs[upto].slice.readerIndex;\n          current = subs[upto].docsAndPositionsEnum;\n          currentBase = mergeState.docBase[reader];\n          currentMap = mergeState.docMaps[reader];\n        }\n      }\n\n      int doc = current.nextDoc();\n      if (doc != NO_MORE_DOCS) {\n        if (currentMap != null) {\n          // compact deletions\n          doc = currentMap[doc];\n          if (doc == -1) {\n            continue;\n          }\n        }\n        return this.doc = currentBase + doc;\n      } else {\n        current = null;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}