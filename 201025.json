{"path":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", false);\n      assertTrue(bos.toString().indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", false);\n      assertTrue(bos.toString().indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd4bc8f43232c31bb2eaa60dbba8bcdc0b4f7724","date":1341665587,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, \"UTF-8\"));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", false);\n      assertTrue(bos.toString(\"UTF-8\").indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", false);\n      assertTrue(bos.toString().indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, \"UTF-8\"));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", false);\n      assertTrue(bos.toString(\"UTF-8\").indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", false);\n      assertTrue(bos.toString().indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, \"UTF-8\"));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", false);\n      assertTrue(bos.toString(\"UTF-8\").indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", false);\n      assertTrue(bos.toString().indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, \"UTF-8\"));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", false);\n      assertTrue(bos.toString(\"UTF-8\").indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", false);\n      assertTrue(bos.toString().indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59a0020b413d44dd79d85d7a66ed5004265fb453","date":1371758877,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, \"UTF-8\"));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", new FieldCache.FloatParser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return NumericUtils.filterPrefixCodedLongs(terms.iterator(null));\n        }\n        @Override\n        public float parseFloat(BytesRef term) {\n          return NumericUtils.sortableIntToFloat((int) NumericUtils.prefixCodedToLong(term));\n        }\n      }, false);\n      assertTrue(bos.toString(\"UTF-8\").indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, \"UTF-8\"));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", false);\n      assertTrue(bos.toString(\"UTF-8\").indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, \"UTF-8\"));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", new FieldCache.FloatParser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return NumericUtils.filterPrefixCodedLongs(terms.iterator(null));\n        }\n        @Override\n        public float parseFloat(BytesRef term) {\n          return NumericUtils.sortableIntToFloat((int) NumericUtils.prefixCodedToLong(term));\n        }\n      }, false);\n      assertTrue(bos.toString(\"UTF-8\").indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, \"UTF-8\"));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", false);\n      assertTrue(bos.toString(\"UTF-8\").indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", new FieldCache.FloatParser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return NumericUtils.filterPrefixCodedLongs(terms.iterator(null));\n        }\n        @Override\n        public float parseFloat(BytesRef term) {\n          return NumericUtils.sortableIntToFloat((int) NumericUtils.prefixCodedToLong(term));\n        }\n      }, false);\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, \"UTF-8\"));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", new FieldCache.FloatParser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return NumericUtils.filterPrefixCodedLongs(terms.iterator(null));\n        }\n        @Override\n        public float parseFloat(BytesRef term) {\n          return NumericUtils.sortableIntToFloat((int) NumericUtils.prefixCodedToLong(term));\n        }\n      }, false);\n      assertTrue(bos.toString(\"UTF-8\").indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", new FieldCache.FloatParser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return NumericUtils.filterPrefixCodedLongs(terms.iterator(null));\n        }\n        @Override\n        public float parseFloat(BytesRef term) {\n          return NumericUtils.sortableIntToFloat((int) NumericUtils.prefixCodedToLong(term));\n        }\n      }, false);\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, \"UTF-8\"));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", new FieldCache.FloatParser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return NumericUtils.filterPrefixCodedLongs(terms.iterator(null));\n        }\n        @Override\n        public float parseFloat(BytesRef term) {\n          return NumericUtils.sortableIntToFloat((int) NumericUtils.prefixCodedToLong(term));\n        }\n      }, false);\n      assertTrue(bos.toString(\"UTF-8\").indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6dd832d2652f7af7713fa33de981bb5eec78c57e","date":1399483543,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", new FieldCache.FloatParser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return NumericUtils.filterPrefixCodedLongs(terms.iterator(null));\n        }\n        @Override\n        public float parseFloat(BytesRef term) {\n          return NumericUtils.sortableIntToFloat((int) NumericUtils.prefixCodedToLong(term));\n        }\n      }, false);\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", new FieldCache.FloatParser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return NumericUtils.filterPrefixCodedLongs(terms.iterator(null));\n        }\n        @Override\n        public float parseFloat(BytesRef term) {\n          return NumericUtils.sortableIntToFloat((int) NumericUtils.prefixCodedToLong(term));\n        }\n      }, false);\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCache#testInfoStream().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getNumerics(reader, \"theDouble\", FieldCache.NUMERIC_UTILS_DOUBLE_PARSER, false);\n      cache.getNumerics(reader, \"theDouble\", new FieldCache.Parser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return NumericUtils.filterPrefixCodedLongs(terms.iterator(null));\n        }\n        @Override\n        public long parseValue(BytesRef term) {\n          int val = (int) NumericUtils.prefixCodedToLong(term);\n          if (val<0) val ^= 0x7fffffff;\n          return val;\n        }\n      }, false);\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", new FieldCache.FloatParser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return NumericUtils.filterPrefixCodedLongs(terms.iterator(null));\n        }\n        @Override\n        public float parseFloat(BytesRef term) {\n          return NumericUtils.sortableIntToFloat((int) NumericUtils.prefixCodedToLong(term));\n        }\n      }, false);\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCache#testInfoStream().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getNumerics(reader, \"theDouble\", FieldCache.NUMERIC_UTILS_DOUBLE_PARSER, false);\n      cache.getNumerics(reader, \"theDouble\", new FieldCache.Parser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return NumericUtils.filterPrefixCodedLongs(terms.iterator(null));\n        }\n        @Override\n        public long parseValue(BytesRef term) {\n          int val = (int) NumericUtils.prefixCodedToLong(term);\n          if (val<0) val ^= 0x7fffffff;\n          return val;\n        }\n      }, false);\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", new FieldCache.FloatParser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return NumericUtils.filterPrefixCodedLongs(terms.iterator(null));\n        }\n        @Override\n        public float parseFloat(BytesRef term) {\n          return NumericUtils.sortableIntToFloat((int) NumericUtils.prefixCodedToLong(term));\n        }\n      }, false);\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCache#testInfoStream().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getNumerics(reader, \"theDouble\", FieldCache.NUMERIC_UTILS_DOUBLE_PARSER, false);\n      cache.getNumerics(reader, \"theDouble\", new FieldCache.Parser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return NumericUtils.filterPrefixCodedLongs(terms.iterator(null));\n        }\n        @Override\n        public long parseValue(BytesRef term) {\n          int val = (int) NumericUtils.prefixCodedToLong(term);\n          if (val<0) val ^= 0x7fffffff;\n          return val;\n        }\n      }, false);\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", new FieldCache.FloatParser() {\n        @Override\n        public TermsEnum termsEnum(Terms terms) throws IOException {\n          return NumericUtils.filterPrefixCodedLongs(terms.iterator(null));\n        }\n        @Override\n        public float parseFloat(BytesRef term) {\n          return NumericUtils.sortableIntToFloat((int) NumericUtils.prefixCodedToLong(term));\n        }\n      }, false);\n      assertTrue(bos.toString(IOUtils.UTF_8).indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.setInfoStream(null);\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bd4bc8f43232c31bb2eaa60dbba8bcdc0b4f7724":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5eb2511ababf862ea11e10761c70ee560cd84510":["59a0020b413d44dd79d85d7a66ed5004265fb453","7d89d7e4e5101347833eea558851bf4209218619"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["2acf500f78aa12b92e371fd89c719291986b6b90","59a0020b413d44dd79d85d7a66ed5004265fb453"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["6dd832d2652f7af7713fa33de981bb5eec78c57e"],"6dd832d2652f7af7713fa33de981bb5eec78c57e":["7d89d7e4e5101347833eea558851bf4209218619"],"2acf500f78aa12b92e371fd89c719291986b6b90":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","bd4bc8f43232c31bb2eaa60dbba8bcdc0b4f7724"],"7d89d7e4e5101347833eea558851bf4209218619":["59a0020b413d44dd79d85d7a66ed5004265fb453"],"56572ec06f1407c066d6b7399413178b33176cd8":["6dd832d2652f7af7713fa33de981bb5eec78c57e","93dd449115a9247533e44bab47e8429e5dccbc6d"],"46d8ada1fff8d18cb197c38c7983225162599948":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","2acf500f78aa12b92e371fd89c719291986b6b90"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["6dd832d2652f7af7713fa33de981bb5eec78c57e","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"59a0020b413d44dd79d85d7a66ed5004265fb453":["2acf500f78aa12b92e371fd89c719291986b6b90"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93dd449115a9247533e44bab47e8429e5dccbc6d"]},"commit2Childs":{"bd4bc8f43232c31bb2eaa60dbba8bcdc0b4f7724":["2acf500f78aa12b92e371fd89c719291986b6b90"],"5eb2511ababf862ea11e10761c70ee560cd84510":[],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["bd4bc8f43232c31bb2eaa60dbba8bcdc0b4f7724","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"2acf500f78aa12b92e371fd89c719291986b6b90":["37a0f60745e53927c4c876cfe5b5a58170f0646c","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424","59a0020b413d44dd79d85d7a66ed5004265fb453"],"6dd832d2652f7af7713fa33de981bb5eec78c57e":["b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","6dd832d2652f7af7713fa33de981bb5eec78c57e"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"46d8ada1fff8d18cb197c38c7983225162599948":[],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"59a0020b413d44dd79d85d7a66ed5004265fb453":["5eb2511ababf862ea11e10761c70ee560cd84510","37a0f60745e53927c4c876cfe5b5a58170f0646c","7d89d7e4e5101347833eea558851bf4209218619"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","37a0f60745e53927c4c876cfe5b5a58170f0646c","56572ec06f1407c066d6b7399413178b33176cd8","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}