{"path":"src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","commits":[{"id":"65eb076d345a794256daba691a2b366657c807e8","date":1245771732,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Initializes the field with the supplied <code>float</code> value.\n   * @param value the numeric value\n   * @return this instance, because of this you can use it the following way:\n   * <code>document.add(new NumericField(name, precisionStep).setFloatValue(value))</code>\n   */\n  public NumericField setFloatValue(final float value) {\n    tokenStream.setFloatValue(value);\n    fieldsData = new Float(value);\n    return this;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70a9e462a51fd525218b83cdc33329f5ee00ca20","date":1254431499,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","pathOld":"src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","sourceNew":"  /**\n   * Initializes the field with the supplied <code>float</code> value.\n   * @param value the numeric value\n   * @return this instance, because of this you can use it the following way:\n   * <code>document.add(new NumericField(name, precisionStep).setFloatValue(value))</code>\n   */\n  public NumericField setFloatValue(final float value) {\n    tokenStream.setFloatValue(value);\n    fieldsData = Float.valueOf(value);\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Initializes the field with the supplied <code>float</code> value.\n   * @param value the numeric value\n   * @return this instance, because of this you can use it the following way:\n   * <code>document.add(new NumericField(name, precisionStep).setFloatValue(value))</code>\n   */\n  public NumericField setFloatValue(final float value) {\n    tokenStream.setFloatValue(value);\n    fieldsData = new Float(value);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","pathOld":"src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","sourceNew":"  /**\n   * Initializes the field with the supplied <code>float</code> value.\n   * @param value the numeric value\n   * @return this instance, because of this you can use it the following way:\n   * <code>document.add(new NumericField(name, precisionStep).setFloatValue(value))</code>\n   */\n  public NumericField setFloatValue(final float value) {\n    numericTS.setFloatValue(value);\n    fieldsData = Float.valueOf(value);\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Initializes the field with the supplied <code>float</code> value.\n   * @param value the numeric value\n   * @return this instance, because of this you can use it the following way:\n   * <code>document.add(new NumericField(name, precisionStep).setFloatValue(value))</code>\n   */\n  public NumericField setFloatValue(final float value) {\n    tokenStream.setFloatValue(value);\n    fieldsData = Float.valueOf(value);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","pathOld":"src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","sourceNew":"  /**\n   * Initializes the field with the supplied <code>float</code> value.\n   * @param value the numeric value\n   * @return this instance, because of this you can use it the following way:\n   * <code>document.add(new NumericField(name, precisionStep).setFloatValue(value))</code>\n   */\n  public NumericField setFloatValue(final float value) {\n    numericTS.setFloatValue(value);\n    fieldsData = Float.valueOf(value);\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Initializes the field with the supplied <code>float</code> value.\n   * @param value the numeric value\n   * @return this instance, because of this you can use it the following way:\n   * <code>document.add(new NumericField(name, precisionStep).setFloatValue(value))</code>\n   */\n  public NumericField setFloatValue(final float value) {\n    numericTS.setFloatValue(value);\n    fieldsData = Float.valueOf(value);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"65eb076d345a794256daba691a2b366657c807e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"70a9e462a51fd525218b83cdc33329f5ee00ca20":["65eb076d345a794256daba691a2b366657c807e8"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["70a9e462a51fd525218b83cdc33329f5ee00ca20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"65eb076d345a794256daba691a2b366657c807e8":["70a9e462a51fd525218b83cdc33329f5ee00ca20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["65eb076d345a794256daba691a2b366657c807e8"],"70a9e462a51fd525218b83cdc33329f5ee00ca20":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}