{"path":"src/java/org/apache/lucene/search/Collector#setNextReader(IndexReader,int).mjava","commits":[{"id":"64714133cf5ec732e3bbceee63351bb9af0117dc","date":1239647636,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Collector#setNextReader(IndexReader,int).mjava","pathOld":"src/java/org/apache/lucene/search/MultiReaderHitCollector#setNextReader(IndexReader,int).mjava","sourceNew":"  /**\n   * Called before collecting from each IndexReader. All doc ids in\n   * {@link #collect(int)} will correspond to reader.\n   * \n   * Add docBase to the current IndexReaders internal document id to re-base ids\n   * in {@link #collect(int)}.\n   * \n   * @param reader\n   *          next IndexReader\n   * @param docBase\n   */\n  public abstract void setNextReader(IndexReader reader, int docBase) throws IOException;\n\n","sourceOld":"  /**\n   * Called before collecting from each IndexReader. All doc \n   * ids in {@link #collect(int, float)} will correspond to reader.\n   * \n   * Add docBase to the current IndexReaders internal document id to\n   * re-base ids in {@link #collect(int, float)}.\n   * \n   * @param reader next IndexReader\n   * @param docBase\n   * @throws IOException\n   */\n  public abstract void setNextReader(IndexReader reader, int docBase) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/Collector#setNextReader(IndexReader,int).mjava","pathOld":"src/java/org/apache/lucene/search/Collector#setNextReader(IndexReader,int).mjava","sourceNew":"  /**\n   * Called before collecting from each IndexReader. All doc ids in\n   * {@link #collect(int)} will correspond to reader.\n   * \n   * Add docBase to the current IndexReaders internal document id to re-base ids\n   * in {@link #collect(int)}.\n   * \n   * @param reader\n   *          next IndexReader\n   * @param docBase\n   */\n  public abstract void setNextReader(IndexReader reader, int docBase) throws IOException;\n\n","sourceOld":"  /**\n   * Called before collecting from each IndexReader. All doc ids in\n   * {@link #collect(int)} will correspond to reader.\n   * \n   * Add docBase to the current IndexReaders internal document id to re-base ids\n   * in {@link #collect(int)}.\n   * \n   * @param reader\n   *          next IndexReader\n   * @param docBase\n   */\n  public abstract void setNextReader(IndexReader reader, int docBase) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"64714133cf5ec732e3bbceee63351bb9af0117dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["64714133cf5ec732e3bbceee63351bb9af0117dc"]},"commit2Childs":{"64714133cf5ec732e3bbceee63351bb9af0117dc":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}