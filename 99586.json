{"path":"lucene/src/java/org/apache/lucene/document/Field#translateFieldType(Store,Index,TermVector).mjava","commits":[{"id":"fa0f44f887719e97183771e977cfc4bfb485b766","date":1326668713,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/Field#translateFieldType(Store,Index,TermVector).mjava","pathOld":"/dev/null","sourceNew":"  /** Translates the pre-4.0 enums for specifying how a\n   *  field should be indexed into the 4.0 {@link FieldType}\n   *  approach.\n   *\n   * @deprecated This is here only to ease transition from\n   * the pre-4.0 APIs.\n   */\n  @Deprecated\n  public static final FieldType translateFieldType(Store store, Index index, TermVector termVector) {\n    final FieldType ft = new FieldType();\n\n    ft.setStored(store == Store.YES);\n\n    switch(index) {\n    case ANALYZED:\n      ft.setIndexed(true);\n      ft.setTokenized(true);\n      break;\n    case ANALYZED_NO_NORMS:\n      ft.setIndexed(true);\n      ft.setTokenized(true);\n      ft.setOmitNorms(true);\n      break;\n    case NOT_ANALYZED:\n      ft.setIndexed(true);\n      break;\n    case NOT_ANALYZED_NO_NORMS:\n      ft.setIndexed(true);\n      ft.setOmitNorms(true);\n      break;\n    case NO:\n      break;\n    }\n\n    switch(termVector) {\n    case NO:\n      break;\n    case YES:\n      ft.setStoreTermVectors(true);\n      break;\n    case WITH_POSITIONS:\n      ft.setStoreTermVectors(true);\n      ft.setStoreTermVectorPositions(true);\n      break;\n    case WITH_OFFSETS:\n      ft.setStoreTermVectors(true);\n      ft.setStoreTermVectorOffsets(true);\n      break;\n    case WITH_POSITIONS_OFFSETS:\n      ft.setStoreTermVectors(true);\n      ft.setStoreTermVectorPositions(true);\n      ft.setStoreTermVectorOffsets(true);\n      break;\n    }\n    ft.freeze();\n    return ft;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#translateFieldType(Store,Index,TermVector).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/Field#translateFieldType(Store,Index,TermVector).mjava","sourceNew":"  /** Translates the pre-4.0 enums for specifying how a\n   *  field should be indexed into the 4.0 {@link FieldType}\n   *  approach.\n   *\n   * @deprecated This is here only to ease transition from\n   * the pre-4.0 APIs.\n   */\n  @Deprecated\n  public static final FieldType translateFieldType(Store store, Index index, TermVector termVector) {\n    final FieldType ft = new FieldType();\n\n    ft.setStored(store == Store.YES);\n\n    switch(index) {\n    case ANALYZED:\n      ft.setIndexed(true);\n      ft.setTokenized(true);\n      break;\n    case ANALYZED_NO_NORMS:\n      ft.setIndexed(true);\n      ft.setTokenized(true);\n      ft.setOmitNorms(true);\n      break;\n    case NOT_ANALYZED:\n      ft.setIndexed(true);\n      break;\n    case NOT_ANALYZED_NO_NORMS:\n      ft.setIndexed(true);\n      ft.setOmitNorms(true);\n      break;\n    case NO:\n      break;\n    }\n\n    switch(termVector) {\n    case NO:\n      break;\n    case YES:\n      ft.setStoreTermVectors(true);\n      break;\n    case WITH_POSITIONS:\n      ft.setStoreTermVectors(true);\n      ft.setStoreTermVectorPositions(true);\n      break;\n    case WITH_OFFSETS:\n      ft.setStoreTermVectors(true);\n      ft.setStoreTermVectorOffsets(true);\n      break;\n    case WITH_POSITIONS_OFFSETS:\n      ft.setStoreTermVectors(true);\n      ft.setStoreTermVectorPositions(true);\n      ft.setStoreTermVectorOffsets(true);\n      break;\n    }\n    ft.freeze();\n    return ft;\n  }\n\n","sourceOld":"  /** Translates the pre-4.0 enums for specifying how a\n   *  field should be indexed into the 4.0 {@link FieldType}\n   *  approach.\n   *\n   * @deprecated This is here only to ease transition from\n   * the pre-4.0 APIs.\n   */\n  @Deprecated\n  public static final FieldType translateFieldType(Store store, Index index, TermVector termVector) {\n    final FieldType ft = new FieldType();\n\n    ft.setStored(store == Store.YES);\n\n    switch(index) {\n    case ANALYZED:\n      ft.setIndexed(true);\n      ft.setTokenized(true);\n      break;\n    case ANALYZED_NO_NORMS:\n      ft.setIndexed(true);\n      ft.setTokenized(true);\n      ft.setOmitNorms(true);\n      break;\n    case NOT_ANALYZED:\n      ft.setIndexed(true);\n      break;\n    case NOT_ANALYZED_NO_NORMS:\n      ft.setIndexed(true);\n      ft.setOmitNorms(true);\n      break;\n    case NO:\n      break;\n    }\n\n    switch(termVector) {\n    case NO:\n      break;\n    case YES:\n      ft.setStoreTermVectors(true);\n      break;\n    case WITH_POSITIONS:\n      ft.setStoreTermVectors(true);\n      ft.setStoreTermVectorPositions(true);\n      break;\n    case WITH_OFFSETS:\n      ft.setStoreTermVectors(true);\n      ft.setStoreTermVectorOffsets(true);\n      break;\n    case WITH_POSITIONS_OFFSETS:\n      ft.setStoreTermVectors(true);\n      ft.setStoreTermVectorPositions(true);\n      ft.setStoreTermVectorOffsets(true);\n      break;\n    }\n    ft.freeze();\n    return ft;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fa0f44f887719e97183771e977cfc4bfb485b766"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa0f44f887719e97183771e977cfc4bfb485b766":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa0f44f887719e97183771e977cfc4bfb485b766"],"fa0f44f887719e97183771e977cfc4bfb485b766":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}