{"path":"contrib/queries/src/test/org/apache/lucene/search/trie/TestTrieUtils#testSpecialValues().mjava","commits":[{"id":"29191e6ce86bfcd231cd069834a87833fa4079c1","date":1228333111,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queries/src/test/org/apache/lucene/search/trie/TestTrieUtils#testSpecialValues().mjava","pathOld":"/dev/null","sourceNew":"\tpublic void testSpecialValues() throws Exception {\n\t\t// Variant 8bit values\n\t\tassertEquals( TrieUtils.VARIANT_8BIT.TRIE_CODED_NUMERIC_MIN, \"\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\");\n\t\tassertEquals( TrieUtils.VARIANT_8BIT.TRIE_CODED_NUMERIC_MAX, \"\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\");\n\t\tassertEquals( TrieUtils.VARIANT_8BIT.longToTrieCoded(-1),    \"\\u017f\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\");\n\t\tassertEquals( TrieUtils.VARIANT_8BIT.longToTrieCoded(0),     \"\\u0180\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\");\n\t\tassertEquals( TrieUtils.VARIANT_8BIT.longToTrieCoded(1),     \"\\u0180\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0101\");\n\t\t// Variant 4bit values\n\t\tassertEquals( TrieUtils.VARIANT_4BIT.TRIE_CODED_NUMERIC_MIN, \"\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\");\n\t\tassertEquals( TrieUtils.VARIANT_4BIT.TRIE_CODED_NUMERIC_MAX, \"\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\");\n\t\tassertEquals( TrieUtils.VARIANT_4BIT.longToTrieCoded(-1),    \"\\u0107\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\");\n\t\tassertEquals( TrieUtils.VARIANT_4BIT.longToTrieCoded(0),     \"\\u0108\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\");\n\t\tassertEquals( TrieUtils.VARIANT_4BIT.longToTrieCoded(1),     \"\\u0108\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0101\");\n\t\t// TODO: 2bit tests\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ef14ec05032a847f9ce1820055c6c29f72d771a","date":1231669514,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queries/src/test/org/apache/lucene/search/trie/TestTrieUtils#testSpecialValues().mjava","pathOld":"contrib/queries/src/test/org/apache/lucene/search/trie/TestTrieUtils#testSpecialValues().mjava","sourceNew":"  public void testSpecialValues() throws Exception {\n    // Variant 8bit values\n    assertEquals( TrieUtils.VARIANT_8BIT.TRIE_CODED_NUMERIC_MIN, \"\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\");\n    assertEquals( TrieUtils.VARIANT_8BIT.TRIE_CODED_NUMERIC_MAX, \"\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\");\n    assertEquals( TrieUtils.VARIANT_8BIT.longToTrieCoded(-1),    \"\\u017f\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\");\n    assertEquals( TrieUtils.VARIANT_8BIT.longToTrieCoded(0),     \"\\u0180\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\");\n    assertEquals( TrieUtils.VARIANT_8BIT.longToTrieCoded(1),     \"\\u0180\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0101\");\n    // Variant 4bit values\n    assertEquals( TrieUtils.VARIANT_4BIT.TRIE_CODED_NUMERIC_MIN, \"\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\");\n    assertEquals( TrieUtils.VARIANT_4BIT.TRIE_CODED_NUMERIC_MAX, \"\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\");\n    assertEquals( TrieUtils.VARIANT_4BIT.longToTrieCoded(-1),    \"\\u0107\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\");\n    assertEquals( TrieUtils.VARIANT_4BIT.longToTrieCoded(0),     \"\\u0108\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\");\n    assertEquals( TrieUtils.VARIANT_4BIT.longToTrieCoded(1),     \"\\u0108\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0101\");\n    // TODO: 2bit tests\n  }\n\n","sourceOld":"\tpublic void testSpecialValues() throws Exception {\n\t\t// Variant 8bit values\n\t\tassertEquals( TrieUtils.VARIANT_8BIT.TRIE_CODED_NUMERIC_MIN, \"\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\");\n\t\tassertEquals( TrieUtils.VARIANT_8BIT.TRIE_CODED_NUMERIC_MAX, \"\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\");\n\t\tassertEquals( TrieUtils.VARIANT_8BIT.longToTrieCoded(-1),    \"\\u017f\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\");\n\t\tassertEquals( TrieUtils.VARIANT_8BIT.longToTrieCoded(0),     \"\\u0180\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\");\n\t\tassertEquals( TrieUtils.VARIANT_8BIT.longToTrieCoded(1),     \"\\u0180\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0101\");\n\t\t// Variant 4bit values\n\t\tassertEquals( TrieUtils.VARIANT_4BIT.TRIE_CODED_NUMERIC_MIN, \"\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\");\n\t\tassertEquals( TrieUtils.VARIANT_4BIT.TRIE_CODED_NUMERIC_MAX, \"\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\");\n\t\tassertEquals( TrieUtils.VARIANT_4BIT.longToTrieCoded(-1),    \"\\u0107\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\");\n\t\tassertEquals( TrieUtils.VARIANT_4BIT.longToTrieCoded(0),     \"\\u0108\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\");\n\t\tassertEquals( TrieUtils.VARIANT_4BIT.longToTrieCoded(1),     \"\\u0108\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0101\");\n\t\t// TODO: 2bit tests\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0","date":1234549621,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/queries/src/test/org/apache/lucene/search/trie/TestTrieUtils#testSpecialValues().mjava","sourceNew":null,"sourceOld":"  public void testSpecialValues() throws Exception {\n    // Variant 8bit values\n    assertEquals( TrieUtils.VARIANT_8BIT.TRIE_CODED_NUMERIC_MIN, \"\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\");\n    assertEquals( TrieUtils.VARIANT_8BIT.TRIE_CODED_NUMERIC_MAX, \"\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\");\n    assertEquals( TrieUtils.VARIANT_8BIT.longToTrieCoded(-1),    \"\\u017f\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\\u01ff\");\n    assertEquals( TrieUtils.VARIANT_8BIT.longToTrieCoded(0),     \"\\u0180\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\");\n    assertEquals( TrieUtils.VARIANT_8BIT.longToTrieCoded(1),     \"\\u0180\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0101\");\n    // Variant 4bit values\n    assertEquals( TrieUtils.VARIANT_4BIT.TRIE_CODED_NUMERIC_MIN, \"\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\");\n    assertEquals( TrieUtils.VARIANT_4BIT.TRIE_CODED_NUMERIC_MAX, \"\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\");\n    assertEquals( TrieUtils.VARIANT_4BIT.longToTrieCoded(-1),    \"\\u0107\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\\u010f\");\n    assertEquals( TrieUtils.VARIANT_4BIT.longToTrieCoded(0),     \"\\u0108\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\");\n    assertEquals( TrieUtils.VARIANT_4BIT.longToTrieCoded(1),     \"\\u0108\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0100\\u0101\");\n    // TODO: 2bit tests\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0":["8ef14ec05032a847f9ce1820055c6c29f72d771a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"29191e6ce86bfcd231cd069834a87833fa4079c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8ef14ec05032a847f9ce1820055c6c29f72d771a":["29191e6ce86bfcd231cd069834a87833fa4079c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0"]},"commit2Childs":{"d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29191e6ce86bfcd231cd069834a87833fa4079c1"],"29191e6ce86bfcd231cd069834a87833fa4079c1":["8ef14ec05032a847f9ce1820055c6c29f72d771a"],"8ef14ec05032a847f9ce1820055c6c29f72d771a":["d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}