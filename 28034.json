{"path":"contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#findMergesToExpungeDeletes(SegmentInfos).mjava","commits":[{"id":"e8c13adcc1a9fdfd6a4ac19cc83b46541d3d5584","date":1254399783,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#findMergesToExpungeDeletes(SegmentInfos).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public MergeSpecification findMergesToExpungeDeletes(SegmentInfos infos)\n    throws CorruptIndexException, IOException {\n    final int numSegs = infos.size();\n    final int numLargeSegs = (numSegs < _numLargeSegments ? numSegs : _numLargeSegments);\n    MergeSpecification spec = null;\n    \n    if(numLargeSegs < numSegs) {\n      SegmentInfos smallSegments = infos.range(numLargeSegs, numSegs);\n      spec = super.findMergesToExpungeDeletes(smallSegments);\n    }\n    \n    if(spec == null) spec = new MergeSpecification();\n    for(int i = 0; i < numLargeSegs; i++) {\n      SegmentInfo info = infos.info(i);\n      if(info.hasDeletions()) {\n        spec.add(new OneMerge(infos.range(i, i + 1), getUseCompoundFile()));        \n      }\n    }\n    return spec;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#findMergesToExpungeDeletes(SegmentInfos).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#findMergesToExpungeDeletes(SegmentInfos).mjava","sourceNew":"  @Override\n  public MergeSpecification findMergesToExpungeDeletes(SegmentInfos infos)\n    throws CorruptIndexException, IOException {\n    final int numSegs = infos.size();\n    final int numLargeSegs = (numSegs < _numLargeSegments ? numSegs : _numLargeSegments);\n    MergeSpecification spec = null;\n    \n    if(numLargeSegs < numSegs) {\n      SegmentInfos smallSegments = infos.range(numLargeSegs, numSegs);\n      spec = super.findMergesToExpungeDeletes(smallSegments);\n    }\n    \n    if(spec == null) spec = new MergeSpecification();\n    for(int i = 0; i < numLargeSegs; i++) {\n      SegmentInfo info = infos.info(i);\n      if(info.hasDeletions()) {\n        spec.add(new OneMerge(infos.range(i, i + 1), getUseCompoundFile()));        \n      }\n    }\n    return spec;\n  }\n\n","sourceOld":"  @Override\n  public MergeSpecification findMergesToExpungeDeletes(SegmentInfos infos)\n    throws CorruptIndexException, IOException {\n    final int numSegs = infos.size();\n    final int numLargeSegs = (numSegs < _numLargeSegments ? numSegs : _numLargeSegments);\n    MergeSpecification spec = null;\n    \n    if(numLargeSegs < numSegs) {\n      SegmentInfos smallSegments = infos.range(numLargeSegs, numSegs);\n      spec = super.findMergesToExpungeDeletes(smallSegments);\n    }\n    \n    if(spec == null) spec = new MergeSpecification();\n    for(int i = 0; i < numLargeSegs; i++) {\n      SegmentInfo info = infos.info(i);\n      if(info.hasDeletions()) {\n        spec.add(new OneMerge(infos.range(i, i + 1), getUseCompoundFile()));        \n      }\n    }\n    return spec;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e8c13adcc1a9fdfd6a4ac19cc83b46541d3d5584":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e8c13adcc1a9fdfd6a4ac19cc83b46541d3d5584"]},"commit2Childs":{"e8c13adcc1a9fdfd6a4ac19cc83b46541d3d5584":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e8c13adcc1a9fdfd6a4ac19cc83b46541d3d5584"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}