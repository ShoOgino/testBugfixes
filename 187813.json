{"path":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#LatLonShapeBoundingBoxQuery(String,double,double,double,double).mjava","commits":[{"id":"06fc6aedefe19d7a0b0d82dac953a4f161e16b5c","date":1531585717,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#LatLonShapeBoundingBoxQuery(String,double,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  public LatLonShapeBoundingBoxQuery(String field, double minLat, double maxLat, double minLon, double maxLon) {\n    if (minLon > maxLon) {\n      throw new IllegalArgumentException(\"dateline crossing bounding box queries are not supported for [\" + field + \"]\");\n    }\n    this.field = field;\n    this.bbox = new byte[4 * LatLonPoint.BYTES];\n    this.minX = encodeLongitudeCeil(minLon);\n    this.maxX = encodeLongitude(maxLon);\n    this.minY = encodeLatitudeCeil(minLat);\n    this.maxY = encodeLatitude(maxLat);\n    NumericUtils.intToSortableBytes(this.minY, this.bbox, 0);\n    NumericUtils.intToSortableBytes(this.minX, this.bbox, LatLonPoint.BYTES);\n    NumericUtils.intToSortableBytes(this.maxY, this.bbox, 2 * LatLonPoint.BYTES);\n    NumericUtils.intToSortableBytes(this.maxX, this.bbox, 3 * LatLonPoint.BYTES);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#LatLonShapeBoundingBoxQuery(String,double,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  public LatLonShapeBoundingBoxQuery(String field, double minLat, double maxLat, double minLon, double maxLon) {\n    if (minLon > maxLon) {\n      throw new IllegalArgumentException(\"dateline crossing bounding box queries are not supported for [\" + field + \"]\");\n    }\n    this.field = field;\n    this.bbox = new byte[4 * LatLonPoint.BYTES];\n    this.minX = encodeLongitudeCeil(minLon);\n    this.maxX = encodeLongitude(maxLon);\n    this.minY = encodeLatitudeCeil(minLat);\n    this.maxY = encodeLatitude(maxLat);\n    NumericUtils.intToSortableBytes(this.minY, this.bbox, 0);\n    NumericUtils.intToSortableBytes(this.minX, this.bbox, LatLonPoint.BYTES);\n    NumericUtils.intToSortableBytes(this.maxY, this.bbox, 2 * LatLonPoint.BYTES);\n    NumericUtils.intToSortableBytes(this.maxX, this.bbox, 3 * LatLonPoint.BYTES);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#LatLonShapeBoundingBoxQuery(String,double,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  public LatLonShapeBoundingBoxQuery(String field, double minLat, double maxLat, double minLon, double maxLon) {\n    if (minLon > maxLon) {\n      throw new IllegalArgumentException(\"dateline crossing bounding box queries are not supported for [\" + field + \"]\");\n    }\n    this.field = field;\n    this.bbox = new byte[4 * LatLonPoint.BYTES];\n    this.minX = encodeLongitudeCeil(minLon);\n    this.maxX = encodeLongitude(maxLon);\n    this.minY = encodeLatitudeCeil(minLat);\n    this.maxY = encodeLatitude(maxLat);\n    NumericUtils.intToSortableBytes(this.minY, this.bbox, 0);\n    NumericUtils.intToSortableBytes(this.minX, this.bbox, LatLonPoint.BYTES);\n    NumericUtils.intToSortableBytes(this.maxY, this.bbox, 2 * LatLonPoint.BYTES);\n    NumericUtils.intToSortableBytes(this.maxX, this.bbox, 3 * LatLonPoint.BYTES);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97f74f84954e9fefbac4cb38b9bf339e1757600d","date":1533750605,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#LatLonShapeBoundingBoxQuery(String,LatLonShape.QueryRelation,double,double,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#LatLonShapeBoundingBoxQuery(String,double,double,double,double).mjava","sourceNew":"  public LatLonShapeBoundingBoxQuery(String field, LatLonShape.QueryRelation queryRelation, double minLat, double maxLat, double minLon, double maxLon) {\n    super(field, queryRelation);\n    if (minLon > maxLon) {\n      throw new IllegalArgumentException(\"dateline crossing bounding box queries are not supported for [\" + field + \"]\");\n    }\n    this.bbox = new byte[4 * LatLonPoint.BYTES];\n    this.minX = encodeLongitudeCeil(minLon);\n    this.maxX = encodeLongitude(maxLon);\n    this.minY = encodeLatitudeCeil(minLat);\n    this.maxY = encodeLatitude(maxLat);\n    NumericUtils.intToSortableBytes(this.minY, this.bbox, 0);\n    NumericUtils.intToSortableBytes(this.minX, this.bbox, LatLonPoint.BYTES);\n    NumericUtils.intToSortableBytes(this.maxY, this.bbox, 2 * LatLonPoint.BYTES);\n    NumericUtils.intToSortableBytes(this.maxX, this.bbox, 3 * LatLonPoint.BYTES);\n  }\n\n","sourceOld":"  public LatLonShapeBoundingBoxQuery(String field, double minLat, double maxLat, double minLon, double maxLon) {\n    if (minLon > maxLon) {\n      throw new IllegalArgumentException(\"dateline crossing bounding box queries are not supported for [\" + field + \"]\");\n    }\n    this.field = field;\n    this.bbox = new byte[4 * LatLonPoint.BYTES];\n    this.minX = encodeLongitudeCeil(minLon);\n    this.maxX = encodeLongitude(maxLon);\n    this.minY = encodeLatitudeCeil(minLat);\n    this.maxY = encodeLatitude(maxLat);\n    NumericUtils.intToSortableBytes(this.minY, this.bbox, 0);\n    NumericUtils.intToSortableBytes(this.minX, this.bbox, LatLonPoint.BYTES);\n    NumericUtils.intToSortableBytes(this.maxY, this.bbox, 2 * LatLonPoint.BYTES);\n    NumericUtils.intToSortableBytes(this.maxX, this.bbox, 3 * LatLonPoint.BYTES);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"06fc6aedefe19d7a0b0d82dac953a4f161e16b5c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","06fc6aedefe19d7a0b0d82dac953a4f161e16b5c"],"97f74f84954e9fefbac4cb38b9bf339e1757600d":["06fc6aedefe19d7a0b0d82dac953a4f161e16b5c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97f74f84954e9fefbac4cb38b9bf339e1757600d"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","06fc6aedefe19d7a0b0d82dac953a4f161e16b5c"]},"commit2Childs":{"06fc6aedefe19d7a0b0d82dac953a4f161e16b5c":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","97f74f84954e9fefbac4cb38b9bf339e1757600d","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06fc6aedefe19d7a0b0d82dac953a4f161e16b5c","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"97f74f84954e9fefbac4cb38b9bf339e1757600d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}