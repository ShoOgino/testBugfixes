{"path":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testWithPendingDeletes2().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testWithPendingDeletes2().mjava","pathOld":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testWithPendingDeletes2().mjava","sourceNew":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // auxiliary directory\n    Directory aux = new RAMDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"id\", \"\" + (i % 10), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"content\", \"bbb \" + i, Field.Store.NO,\n                        Field.Index.ANALYZED));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n\n    writer.addIndexesNoOptimize(new Directory[] {aux});\n\n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.optimize();\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","sourceOld":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // auxiliary directory\n    Directory aux = new RAMDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"id\", \"\" + (i % 10), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"content\", \"bbb \" + i, Field.Store.NO,\n                        Field.Index.ANALYZED));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n\n    writer.addIndexesNoOptimize(new Directory[] {aux});\n\n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.optimize();\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testWithPendingDeletes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testWithPendingDeletes2().mjava","sourceNew":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // auxiliary directory\n    Directory aux = new RAMDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"id\", \"\" + (i % 10), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"content\", \"bbb \" + i, Field.Store.NO,\n                        Field.Index.ANALYZED));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n\n    writer.addIndexesNoOptimize(new Directory[] {aux});\n\n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.optimize();\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","sourceOld":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // auxiliary directory\n    Directory aux = new RAMDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"id\", \"\" + (i % 10), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"content\", \"bbb \" + i, Field.Store.NO,\n                        Field.Index.ANALYZED));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n\n    writer.addIndexesNoOptimize(new Directory[] {aux});\n\n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.optimize();\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testWithPendingDeletes2().mjava","sourceNew":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // auxiliary directory\n    Directory aux = new RAMDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"id\", \"\" + (i % 10), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"content\", \"bbb \" + i, Field.Store.NO, Field.Index.ANALYZED));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(new Directory[] {aux});\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.optimize();\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","sourceOld":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // auxiliary directory\n    Directory aux = new RAMDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"id\", \"\" + (i % 10), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"content\", \"bbb \" + i, Field.Store.NO,\n                        Field.Index.ANALYZED));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n\n    writer.addIndexesNoOptimize(new Directory[] {aux});\n\n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.optimize();\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["d572389229127c297dd1fa5ce4758e1cec41e799"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d572389229127c297dd1fa5ce4758e1cec41e799":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}