{"path":"lucene/backwards/src/java/org/apache/lucene/search/TermScorer#advance(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/TermScorer#advance(int).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/TermScorer#advance(int).mjava","sourceNew":"  /**\n   * Advances to the first match beyond the current whose document number is\n   * greater than or equal to a given target. <br>\n   * The implementation uses {@link TermDocs#skipTo(int)}.\n   * \n   * @param target\n   *          The target document number.\n   * @return the matching document or -1 if none exist.\n   */\n  @Override\n  public int advance(int target) throws IOException {\n    // first scan in cache\n    for (pointer++; pointer < pointerMax; pointer++) {\n      if (docs[pointer] >= target) {\n        return doc = docs[pointer];\n      }\n    }\n\n    // not found in cache, seek underlying stream\n    boolean result = termDocs.skipTo(target);\n    if (result) {\n      pointerMax = 1;\n      pointer = 0;\n      docs[pointer] = doc = termDocs.doc();\n      freqs[pointer] = termDocs.freq();\n    } else {\n      doc = NO_MORE_DOCS;\n    }\n    return doc;\n  }\n\n","sourceOld":"  /**\n   * Advances to the first match beyond the current whose document number is\n   * greater than or equal to a given target. <br>\n   * The implementation uses {@link TermDocs#skipTo(int)}.\n   * \n   * @param target\n   *          The target document number.\n   * @return the matching document or -1 if none exist.\n   */\n  @Override\n  public int advance(int target) throws IOException {\n    // first scan in cache\n    for (pointer++; pointer < pointerMax; pointer++) {\n      if (docs[pointer] >= target) {\n        return doc = docs[pointer];\n      }\n    }\n\n    // not found in cache, seek underlying stream\n    boolean result = termDocs.skipTo(target);\n    if (result) {\n      pointerMax = 1;\n      pointer = 0;\n      docs[pointer] = doc = termDocs.doc();\n      freqs[pointer] = termDocs.freq();\n    } else {\n      doc = NO_MORE_DOCS;\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/search/TermScorer#advance(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Advances to the first match beyond the current whose document number is\n   * greater than or equal to a given target. <br>\n   * The implementation uses {@link TermDocs#skipTo(int)}.\n   * \n   * @param target\n   *          The target document number.\n   * @return the matching document or -1 if none exist.\n   */\n  @Override\n  public int advance(int target) throws IOException {\n    // first scan in cache\n    for (pointer++; pointer < pointerMax; pointer++) {\n      if (docs[pointer] >= target) {\n        return doc = docs[pointer];\n      }\n    }\n\n    // not found in cache, seek underlying stream\n    boolean result = termDocs.skipTo(target);\n    if (result) {\n      pointerMax = 1;\n      pointer = 0;\n      docs[pointer] = doc = termDocs.doc();\n      freqs[pointer] = termDocs.freq();\n    } else {\n      doc = NO_MORE_DOCS;\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}