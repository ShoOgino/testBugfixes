{"path":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","commits":[{"id":"d9652a1b09ee0e7d6533fdfedf1d7c4d9036b49d","date":1330786058,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","pathOld":"/dev/null","sourceNew":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws MalformedURLException, SolrServerException, IOException {\n    long startCommits = getNumCommits((CommonsHttpSolrServer) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update/csv\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"));\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((CommonsHttpSolrServer) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","pathOld":"/dev/null","sourceNew":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws MalformedURLException, SolrServerException, IOException {\n    long startCommits = getNumCommits((CommonsHttpSolrServer) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update/csv\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"));\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((CommonsHttpSolrServer) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","sourceNew":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws MalformedURLException, SolrServerException, IOException {\n    long startCommits = getNumCommits((HttpSolrServer) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update/csv\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"));\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((HttpSolrServer) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","sourceOld":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws MalformedURLException, SolrServerException, IOException {\n    long startCommits = getNumCommits((CommonsHttpSolrServer) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update/csv\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"));\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((CommonsHttpSolrServer) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"042e4d934397657ba04c82b46cc5665076bc5c58","date":1336511170,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","sourceNew":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws MalformedURLException, SolrServerException, IOException {\n    long startCommits = getNumCommits((HttpSolrServer) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"), \"application/csv\");\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((HttpSolrServer) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","sourceOld":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws MalformedURLException, SolrServerException, IOException {\n    long startCommits = getNumCommits((HttpSolrServer) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update/csv\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"));\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((HttpSolrServer) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","sourceNew":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws SolrServerException, IOException {\n    long startCommits = getNumCommits((HttpSolrServer) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"), \"application/csv\");\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((HttpSolrServer) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","sourceOld":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws MalformedURLException, SolrServerException, IOException {\n    long startCommits = getNumCommits((HttpSolrServer) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"), \"application/csv\");\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((HttpSolrServer) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","bugFix":["d9652a1b09ee0e7d6533fdfedf1d7c4d9036b49d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","sourceNew":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws SolrServerException, IOException {\n    long startCommits = getNumCommits((HttpSolrServer) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"), \"application/csv\");\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((HttpSolrServer) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","sourceOld":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws MalformedURLException, SolrServerException, IOException {\n    long startCommits = getNumCommits((HttpSolrServer) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"), \"application/csv\");\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((HttpSolrServer) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5a558d54519c651068ddb202f03befefb1514a7","date":1354382006,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","sourceNew":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws SolrServerException, IOException {\n    log.info(\"### STARTING testNumberOfCommitsWithCommitAfterAdd\");\n    long startCommits = getNumCommits((HttpSolrServer) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"), \"application/csv\");\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((HttpSolrServer) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","sourceOld":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws SolrServerException, IOException {\n    long startCommits = getNumCommits((HttpSolrServer) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"), \"application/csv\");\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((HttpSolrServer) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","sourceNew":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws SolrServerException, IOException {\n    log.info(\"### STARTING testNumberOfCommitsWithCommitAfterAdd\");\n    long startCommits = getNumCommits((HttpSolrServer) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"), \"application/csv\");\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((HttpSolrServer) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","sourceOld":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws SolrServerException, IOException {\n    long startCommits = getNumCommits((HttpSolrServer) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"), \"application/csv\");\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((HttpSolrServer) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","sourceNew":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws SolrServerException, IOException {\n    log.info(\"### STARTING testNumberOfCommitsWithCommitAfterAdd\");\n    long startCommits = getNumCommits((HttpSolrClient) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"), \"application/csv\");\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((HttpSolrClient) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","sourceOld":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws SolrServerException, IOException {\n    log.info(\"### STARTING testNumberOfCommitsWithCommitAfterAdd\");\n    long startCommits = getNumCommits((HttpSolrServer) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"), \"application/csv\");\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((HttpSolrServer) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ebe8b79da5c80c6f5588d8dbd750a5f3865019a6","date":1528686294,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","sourceNew":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws SolrServerException, IOException {\n    log.info(\"### STARTING testNumberOfCommitsWithCommitAfterAdd\");\n    long startCommits = getNumCommits((HttpSolrClient) clients.get(0));\n\n\n    NamedList<Object> result = clients.get(0).request(\n        new StreamingUpdateRequest(\"/update\",\n            getFile(\"books_numeric_ids.csv\"), \"application/csv\")\n            .setCommitWithin(900000)\n            .setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true));\n    \n    long endCommits = getNumCommits((HttpSolrClient) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","sourceOld":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws SolrServerException, IOException {\n    log.info(\"### STARTING testNumberOfCommitsWithCommitAfterAdd\");\n    long startCommits = getNumCommits((HttpSolrClient) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"), \"application/csv\");\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((HttpSolrClient) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","sourceNew":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws SolrServerException, IOException {\n    log.info(\"### STARTING testNumberOfCommitsWithCommitAfterAdd\");\n    long startCommits = getNumCommits((HttpSolrClient) clients.get(0));\n\n\n    NamedList<Object> result = clients.get(0).request(\n        new StreamingUpdateRequest(\"/update\",\n            getFile(\"books_numeric_ids.csv\"), \"application/csv\")\n            .setCommitWithin(900000)\n            .setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true));\n    \n    long endCommits = getNumCommits((HttpSolrClient) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","sourceOld":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws SolrServerException, IOException {\n    log.info(\"### STARTING testNumberOfCommitsWithCommitAfterAdd\");\n    long startCommits = getNumCommits((HttpSolrClient) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"), \"application/csv\");\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((HttpSolrClient) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testNumberOfCommitsWithCommitAfterAdd().mjava","sourceNew":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws SolrServerException, IOException {\n    log.info(\"### STARTING testNumberOfCommitsWithCommitAfterAdd\");\n    long startCommits = getNumCommits((HttpSolrClient) clients.get(0));\n\n\n    NamedList<Object> result = clients.get(0).request(\n        new StreamingUpdateRequest(\"/update\",\n            getFile(\"books_numeric_ids.csv\"), \"application/csv\")\n            .setCommitWithin(900000)\n            .setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true));\n    \n    long endCommits = getNumCommits((HttpSolrClient) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","sourceOld":"  private void testNumberOfCommitsWithCommitAfterAdd()\n      throws SolrServerException, IOException {\n    log.info(\"### STARTING testNumberOfCommitsWithCommitAfterAdd\");\n    long startCommits = getNumCommits((HttpSolrClient) clients.get(0));\n    \n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.addFile(getFile(\"books_numeric_ids.csv\"), \"application/csv\");\n    up.setCommitWithin(900000);\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    NamedList<Object> result = clients.get(0).request(up);\n    \n    long endCommits = getNumCommits((HttpSolrClient) clients.get(0));\n\n    assertEquals(startCommits + 1L, endCommits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d9652a1b09ee0e7d6533fdfedf1d7c4d9036b49d"],"d9652a1b09ee0e7d6533fdfedf1d7c4d9036b49d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"407687e67faf6e1f02a211ca078d8e3eed631027":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","c5a558d54519c651068ddb202f03befefb1514a7"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["d9652a1b09ee0e7d6533fdfedf1d7c4d9036b49d"],"bafca15d8e408346a67f4282ad1143b88023893b":["c5a558d54519c651068ddb202f03befefb1514a7"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["bafca15d8e408346a67f4282ad1143b88023893b","ebe8b79da5c80c6f5588d8dbd750a5f3865019a6"],"042e4d934397657ba04c82b46cc5665076bc5c58":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["042e4d934397657ba04c82b46cc5665076bc5c58","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"c5a558d54519c651068ddb202f03befefb1514a7":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ebe8b79da5c80c6f5588d8dbd750a5f3865019a6":["bafca15d8e408346a67f4282ad1143b88023893b"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["042e4d934397657ba04c82b46cc5665076bc5c58"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ebe8b79da5c80c6f5588d8dbd750a5f3865019a6"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["bafca15d8e408346a67f4282ad1143b88023893b","ebe8b79da5c80c6f5588d8dbd750a5f3865019a6"]},"commit2Childs":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"d9652a1b09ee0e7d6533fdfedf1d7c4d9036b49d":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["042e4d934397657ba04c82b46cc5665076bc5c58"],"bafca15d8e408346a67f4282ad1143b88023893b":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","ebe8b79da5c80c6f5588d8dbd750a5f3865019a6","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"042e4d934397657ba04c82b46cc5665076bc5c58":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","d9652a1b09ee0e7d6533fdfedf1d7c4d9036b49d"],"c5a558d54519c651068ddb202f03befefb1514a7":["407687e67faf6e1f02a211ca078d8e3eed631027","bafca15d8e408346a67f4282ad1143b88023893b"],"ebe8b79da5c80c6f5588d8dbd750a5f3865019a6":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["407687e67faf6e1f02a211ca078d8e3eed631027","fe33227f6805edab2036cbb80645cc4e2d1fa424","c5a558d54519c651068ddb202f03befefb1514a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","407687e67faf6e1f02a211ca078d8e3eed631027","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}