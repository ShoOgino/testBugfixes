{"path":"lucene/backwards/src/test/org/apache/lucene/index/TestStressIndexing2#indexSerial(Map,Directory).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestStressIndexing2#indexSerial(Map,Directory).mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestStressIndexing2#indexSerial(Map,Directory).mjava","sourceNew":"  public static void indexSerial(Map docs, Directory dir) throws IOException {\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n\n    // index all docs in a single thread\n    Iterator iter = docs.values().iterator();\n    while (iter.hasNext()) {\n      Document d = (Document)iter.next();\n      ArrayList fields = new ArrayList();\n      fields.addAll(d.getFields());\n      // put fields in same order each time\n      Collections.sort(fields, fieldNameComparator);\n      \n      Document d1 = new Document();\n      d1.setBoost(d.getBoost());\n      for (int i=0; i<fields.size(); i++) {\n        d1.add((Fieldable) fields.get(i));\n      }\n      w.addDocument(d1);\n      // System.out.println(\"indexing \"+d1);\n    }\n    \n    w.close();\n  }\n\n","sourceOld":"  public static void indexSerial(Map docs, Directory dir) throws IOException {\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n\n    // index all docs in a single thread\n    Iterator iter = docs.values().iterator();\n    while (iter.hasNext()) {\n      Document d = (Document)iter.next();\n      ArrayList fields = new ArrayList();\n      fields.addAll(d.getFields());\n      // put fields in same order each time\n      Collections.sort(fields, fieldNameComparator);\n      \n      Document d1 = new Document();\n      d1.setBoost(d.getBoost());\n      for (int i=0; i<fields.size(); i++) {\n        d1.add((Fieldable) fields.get(i));\n      }\n      w.addDocument(d1);\n      // System.out.println(\"indexing \"+d1);\n    }\n    \n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestStressIndexing2#indexSerial(Map,Directory).mjava","sourceNew":null,"sourceOld":"  public static void indexSerial(Map docs, Directory dir) throws IOException {\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n\n    // index all docs in a single thread\n    Iterator iter = docs.values().iterator();\n    while (iter.hasNext()) {\n      Document d = (Document)iter.next();\n      ArrayList fields = new ArrayList();\n      fields.addAll(d.getFields());\n      // put fields in same order each time\n      Collections.sort(fields, fieldNameComparator);\n      \n      Document d1 = new Document();\n      d1.setBoost(d.getBoost());\n      for (int i=0; i<fields.size(); i++) {\n        d1.add((Fieldable) fields.get(i));\n      }\n      w.addDocument(d1);\n      // System.out.println(\"indexing \"+d1);\n    }\n    \n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}