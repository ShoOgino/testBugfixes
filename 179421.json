{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI#uptime(long).mjava","commits":[{"id":"709714c6ee47950678dd2d2ef4e0473886909226","date":1407339661,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI#uptime(long).mjava","pathOld":"/dev/null","sourceNew":"  private static final String uptime(long uptimeMs) {\n    if (uptimeMs <= 0L) return \"?\";\n    \n    long numDays = (uptimeMs >= MS_IN_DAY) \n        ? (long) Math.floor(uptimeMs / MS_IN_DAY) : 0L;\n    long rem = uptimeMs - (numDays * MS_IN_DAY);\n    long numHours = (rem >= MS_IN_HOUR) \n        ? (long) Math.floor(rem / MS_IN_HOUR) : 0L;\n    rem = rem - (numHours * MS_IN_HOUR);\n    long numMinutes = (rem >= MS_IN_MIN) \n        ? (long) Math.floor(rem / MS_IN_MIN) : 0L;\n    rem = rem - (numMinutes * MS_IN_MIN);\n    long numSeconds = Math.round(rem / 1000);\n    return String.format(Locale.ROOT, \"%d days, %d hours, %d minutes, %d seconds\", numDays,\n        numHours, numMinutes, numSeconds);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b79a5db147a1c6f95d1625ddbc3561ef56955225","date":1528848080,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI#uptime(long).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI#uptime(long).mjava","sourceNew":"  private static final String uptime(long uptimeMs) {\n    if (uptimeMs <= 0L) return \"?\";\n    \n    long numDays = (uptimeMs >= MS_IN_DAY) \n        ? (long) Math.floor(uptimeMs / MS_IN_DAY) : 0L;\n    long rem = uptimeMs - (numDays * MS_IN_DAY);\n    long numHours = (rem >= MS_IN_HOUR) \n        ? (long) Math.floor(rem / MS_IN_HOUR) : 0L;\n    rem = rem - (numHours * MS_IN_HOUR);\n    long numMinutes = (rem >= MS_IN_MIN) \n        ? (long) Math.floor(rem / MS_IN_MIN) : 0L;\n    rem = rem - (numMinutes * MS_IN_MIN);\n    long numSeconds = Math.round(rem / 1000);\n    return String.format(Locale.ROOT, \"%d days, %d hours, %d minutes, %d seconds\", numDays,\n        numHours, numMinutes, numSeconds);\n  }\n\n","sourceOld":"  private static final String uptime(long uptimeMs) {\n    if (uptimeMs <= 0L) return \"?\";\n    \n    long numDays = (uptimeMs >= MS_IN_DAY) \n        ? (long) Math.floor(uptimeMs / MS_IN_DAY) : 0L;\n    long rem = uptimeMs - (numDays * MS_IN_DAY);\n    long numHours = (rem >= MS_IN_HOUR) \n        ? (long) Math.floor(rem / MS_IN_HOUR) : 0L;\n    rem = rem - (numHours * MS_IN_HOUR);\n    long numMinutes = (rem >= MS_IN_MIN) \n        ? (long) Math.floor(rem / MS_IN_MIN) : 0L;\n    rem = rem - (numMinutes * MS_IN_MIN);\n    long numSeconds = Math.round(rem / 1000);\n    return String.format(Locale.ROOT, \"%d days, %d hours, %d minutes, %d seconds\", numDays,\n        numHours, numMinutes, numSeconds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI#uptime(long).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI#uptime(long).mjava","sourceNew":"  private static final String uptime(long uptimeMs) {\n    if (uptimeMs <= 0L) return \"?\";\n    \n    long numDays = (uptimeMs >= MS_IN_DAY) \n        ? (long) Math.floor(uptimeMs / MS_IN_DAY) : 0L;\n    long rem = uptimeMs - (numDays * MS_IN_DAY);\n    long numHours = (rem >= MS_IN_HOUR) \n        ? (long) Math.floor(rem / MS_IN_HOUR) : 0L;\n    rem = rem - (numHours * MS_IN_HOUR);\n    long numMinutes = (rem >= MS_IN_MIN) \n        ? (long) Math.floor(rem / MS_IN_MIN) : 0L;\n    rem = rem - (numMinutes * MS_IN_MIN);\n    long numSeconds = Math.round(rem / 1000);\n    return String.format(Locale.ROOT, \"%d days, %d hours, %d minutes, %d seconds\", numDays,\n        numHours, numMinutes, numSeconds);\n  }\n\n","sourceOld":"  private static final String uptime(long uptimeMs) {\n    if (uptimeMs <= 0L) return \"?\";\n    \n    long numDays = (uptimeMs >= MS_IN_DAY) \n        ? (long) Math.floor(uptimeMs / MS_IN_DAY) : 0L;\n    long rem = uptimeMs - (numDays * MS_IN_DAY);\n    long numHours = (rem >= MS_IN_HOUR) \n        ? (long) Math.floor(rem / MS_IN_HOUR) : 0L;\n    rem = rem - (numHours * MS_IN_HOUR);\n    long numMinutes = (rem >= MS_IN_MIN) \n        ? (long) Math.floor(rem / MS_IN_MIN) : 0L;\n    rem = rem - (numMinutes * MS_IN_MIN);\n    long numSeconds = Math.round(rem / 1000);\n    return String.format(Locale.ROOT, \"%d days, %d hours, %d minutes, %d seconds\", numDays,\n        numHours, numMinutes, numSeconds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI#uptime(long).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI#uptime(long).mjava","sourceNew":"  private static final String uptime(long uptimeMs) {\n    if (uptimeMs <= 0L) return \"?\";\n    \n    long numDays = (uptimeMs >= MS_IN_DAY) \n        ? (long) Math.floor(uptimeMs / MS_IN_DAY) : 0L;\n    long rem = uptimeMs - (numDays * MS_IN_DAY);\n    long numHours = (rem >= MS_IN_HOUR) \n        ? (long) Math.floor(rem / MS_IN_HOUR) : 0L;\n    rem = rem - (numHours * MS_IN_HOUR);\n    long numMinutes = (rem >= MS_IN_MIN) \n        ? (long) Math.floor(rem / MS_IN_MIN) : 0L;\n    rem = rem - (numMinutes * MS_IN_MIN);\n    long numSeconds = Math.round(rem / 1000);\n    return String.format(Locale.ROOT, \"%d days, %d hours, %d minutes, %d seconds\", numDays,\n        numHours, numMinutes, numSeconds);\n  }\n\n","sourceOld":"  private static final String uptime(long uptimeMs) {\n    if (uptimeMs <= 0L) return \"?\";\n    \n    long numDays = (uptimeMs >= MS_IN_DAY) \n        ? (long) Math.floor(uptimeMs / MS_IN_DAY) : 0L;\n    long rem = uptimeMs - (numDays * MS_IN_DAY);\n    long numHours = (rem >= MS_IN_HOUR) \n        ? (long) Math.floor(rem / MS_IN_HOUR) : 0L;\n    rem = rem - (numHours * MS_IN_HOUR);\n    long numMinutes = (rem >= MS_IN_MIN) \n        ? (long) Math.floor(rem / MS_IN_MIN) : 0L;\n    rem = rem - (numMinutes * MS_IN_MIN);\n    long numSeconds = Math.round(rem / 1000);\n    return String.format(Locale.ROOT, \"%d days, %d hours, %d minutes, %d seconds\", numDays,\n        numHours, numMinutes, numSeconds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI#uptime(long).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI#uptime(long).mjava","sourceNew":"  private static final String uptime(long uptimeMs) {\n    if (uptimeMs <= 0L) return \"?\";\n\n    long numDays = (uptimeMs >= MS_IN_DAY)\n        ? (long) Math.floor(uptimeMs / MS_IN_DAY) : 0L;\n    long rem = uptimeMs - (numDays * MS_IN_DAY);\n    long numHours = (rem >= MS_IN_HOUR)\n        ? (long) Math.floor(rem / MS_IN_HOUR) : 0L;\n    rem = rem - (numHours * MS_IN_HOUR);\n    long numMinutes = (rem >= MS_IN_MIN)\n        ? (long) Math.floor(rem / MS_IN_MIN) : 0L;\n    rem = rem - (numMinutes * MS_IN_MIN);\n    long numSeconds = Math.round(rem / 1000);\n    return String.format(Locale.ROOT, \"%d days, %d hours, %d minutes, %d seconds\", numDays,\n        numHours, numMinutes, numSeconds);\n  }\n\n","sourceOld":"  private static final String uptime(long uptimeMs) {\n    if (uptimeMs <= 0L) return \"?\";\n    \n    long numDays = (uptimeMs >= MS_IN_DAY) \n        ? (long) Math.floor(uptimeMs / MS_IN_DAY) : 0L;\n    long rem = uptimeMs - (numDays * MS_IN_DAY);\n    long numHours = (rem >= MS_IN_HOUR) \n        ? (long) Math.floor(rem / MS_IN_HOUR) : 0L;\n    rem = rem - (numHours * MS_IN_HOUR);\n    long numMinutes = (rem >= MS_IN_MIN) \n        ? (long) Math.floor(rem / MS_IN_MIN) : 0L;\n    rem = rem - (numMinutes * MS_IN_MIN);\n    long numSeconds = Math.round(rem / 1000);\n    return String.format(Locale.ROOT, \"%d days, %d hours, %d minutes, %d seconds\", numDays,\n        numHours, numMinutes, numSeconds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42210058b8ae092085fa2658880b69931512e8bf","date":1579289439,"type":3,"author":"Mike","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI#uptime(long).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI#uptime(long).mjava","sourceNew":"  @VisibleForTesting\n  static final String uptime(long uptimeMs) {\n    if (uptimeMs <= 0L) return \"?\";\n\n    long numDays = (uptimeMs >= MS_IN_DAY) ? (uptimeMs / MS_IN_DAY) : 0L;\n    long rem = uptimeMs - (numDays * MS_IN_DAY);\n    long numHours = (rem >= MS_IN_HOUR) ?  (rem / MS_IN_HOUR) : 0L;\n    rem = rem - (numHours * MS_IN_HOUR);\n    long numMinutes = (rem >= MS_IN_MIN) ? (rem / MS_IN_MIN) : 0L;\n    rem = rem - (numMinutes * MS_IN_MIN);\n    long numSeconds = Math.round(rem / 1000.0);\n    return String.format(Locale.ROOT, \"%d days, %d hours, %d minutes, %d seconds\", numDays,\n        numHours, numMinutes, numSeconds);\n  }\n\n","sourceOld":"  private static final String uptime(long uptimeMs) {\n    if (uptimeMs <= 0L) return \"?\";\n\n    long numDays = (uptimeMs >= MS_IN_DAY)\n        ? (long) Math.floor(uptimeMs / MS_IN_DAY) : 0L;\n    long rem = uptimeMs - (numDays * MS_IN_DAY);\n    long numHours = (rem >= MS_IN_HOUR)\n        ? (long) Math.floor(rem / MS_IN_HOUR) : 0L;\n    rem = rem - (numHours * MS_IN_HOUR);\n    long numMinutes = (rem >= MS_IN_MIN)\n        ? (long) Math.floor(rem / MS_IN_MIN) : 0L;\n    rem = rem - (numMinutes * MS_IN_MIN);\n    long numSeconds = Math.round(rem / 1000);\n    return String.format(Locale.ROOT, \"%d days, %d hours, %d minutes, %d seconds\", numDays,\n        numHours, numMinutes, numSeconds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"42210058b8ae092085fa2658880b69931512e8bf":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["709714c6ee47950678dd2d2ef4e0473886909226","b79a5db147a1c6f95d1625ddbc3561ef56955225"],"709714c6ee47950678dd2d2ef4e0473886909226":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["b79a5db147a1c6f95d1625ddbc3561ef56955225"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["42210058b8ae092085fa2658880b69931512e8bf"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["709714c6ee47950678dd2d2ef4e0473886909226"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["709714c6ee47950678dd2d2ef4e0473886909226","b79a5db147a1c6f95d1625ddbc3561ef56955225"]},"commit2Childs":{"42210058b8ae092085fa2658880b69931512e8bf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"709714c6ee47950678dd2d2ef4e0473886909226":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","b79a5db147a1c6f95d1625ddbc3561ef56955225","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["709714c6ee47950678dd2d2ef4e0473886909226"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["42210058b8ae092085fa2658880b69931512e8bf"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}