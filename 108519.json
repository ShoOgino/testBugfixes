{"path":"lucene/facet/src/test/org/apache/lucene/facet/TestRangeFacetCounts#testOverlappedEndStart().mjava","commits":[{"id":"6119ef33e3fbd8582640c23b3f5b3fbb22ba8d30","date":1387399235,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestRangeFacetCounts#testOverlappedEndStart().mjava","pathOld":"/dev/null","sourceNew":"  public void testOverlappedEndStart() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    NumericDocValuesField field = new NumericDocValuesField(\"field\", 0L);\n    doc.add(field);\n    for(long l=0;l<100;l++) {\n      field.setLongValue(l);\n      w.addDocument(doc);\n    }\n    field.setLongValue(Long.MAX_VALUE);\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    w.close();\n\n    FacetsCollector fc = new FacetsCollector();\n    IndexSearcher s = newSearcher(r);\n    s.search(new MatchAllDocsQuery(), fc);\n\n    Facets facets = new LongRangeFacetCounts(\"field\", fc,\n        new LongRange(\"0-10\", 0L, true, 10L, true),\n        new LongRange(\"10-20\", 10L, true, 20L, true),\n        new LongRange(\"20-30\", 20L, true, 30L, true),\n        new LongRange(\"30-40\", 30L, true, 40L, true));\n    \n    FacetResult result = facets.getTopChildren(10, \"field\");\n    assertEquals(\"dim=field path=[] value=41 childCount=4\\n  0-10 (11)\\n  10-20 (11)\\n  20-30 (11)\\n  30-40 (11)\\n\",\n                 result.toString());\n    \n    r.close();\n    d.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/range/TestRangeFacetCounts#testOverlappedEndStart().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestRangeFacetCounts#testOverlappedEndStart().mjava","sourceNew":"  public void testOverlappedEndStart() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    NumericDocValuesField field = new NumericDocValuesField(\"field\", 0L);\n    doc.add(field);\n    for(long l=0;l<100;l++) {\n      field.setLongValue(l);\n      w.addDocument(doc);\n    }\n    field.setLongValue(Long.MAX_VALUE);\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    w.close();\n\n    FacetsCollector fc = new FacetsCollector();\n    IndexSearcher s = newSearcher(r);\n    s.search(new MatchAllDocsQuery(), fc);\n\n    Facets facets = new LongRangeFacetCounts(\"field\", fc,\n        new LongRange(\"0-10\", 0L, true, 10L, true),\n        new LongRange(\"10-20\", 10L, true, 20L, true),\n        new LongRange(\"20-30\", 20L, true, 30L, true),\n        new LongRange(\"30-40\", 30L, true, 40L, true));\n    \n    FacetResult result = facets.getTopChildren(10, \"field\");\n    assertEquals(\"dim=field path=[] value=41 childCount=4\\n  0-10 (11)\\n  10-20 (11)\\n  20-30 (11)\\n  30-40 (11)\\n\",\n                 result.toString());\n    \n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testOverlappedEndStart() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    NumericDocValuesField field = new NumericDocValuesField(\"field\", 0L);\n    doc.add(field);\n    for(long l=0;l<100;l++) {\n      field.setLongValue(l);\n      w.addDocument(doc);\n    }\n    field.setLongValue(Long.MAX_VALUE);\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    w.close();\n\n    FacetsCollector fc = new FacetsCollector();\n    IndexSearcher s = newSearcher(r);\n    s.search(new MatchAllDocsQuery(), fc);\n\n    Facets facets = new LongRangeFacetCounts(\"field\", fc,\n        new LongRange(\"0-10\", 0L, true, 10L, true),\n        new LongRange(\"10-20\", 10L, true, 20L, true),\n        new LongRange(\"20-30\", 20L, true, 30L, true),\n        new LongRange(\"30-40\", 30L, true, 40L, true));\n    \n    FacetResult result = facets.getTopChildren(10, \"field\");\n    assertEquals(\"dim=field path=[] value=41 childCount=4\\n  0-10 (11)\\n  10-20 (11)\\n  20-30 (11)\\n  30-40 (11)\\n\",\n                 result.toString());\n    \n    r.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["6119ef33e3fbd8582640c23b3f5b3fbb22ba8d30"],"6119ef33e3fbd8582640c23b3f5b3fbb22ba8d30":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6119ef33e3fbd8582640c23b3f5b3fbb22ba8d30","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4edc984f0f4ac77c37e48ace2932f780f888453c":[],"6119ef33e3fbd8582640c23b3f5b3fbb22ba8d30":["4edc984f0f4ac77c37e48ace2932f780f888453c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4edc984f0f4ac77c37e48ace2932f780f888453c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}