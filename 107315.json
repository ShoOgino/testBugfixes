{"path":"solr/core/src/java/org/apache/solr/metrics/reporters/ReporterClientCache#close().mjava","commits":[{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/reporters/ReporterClientCache#close().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Empty this cache, and close all clients that are {@link Closeable}.\n   */\n  public void close() {\n    for (T client : cache.values()) {\n      if (client instanceof Closeable) {\n        try {\n          ((Closeable)client).close();\n        } catch (Exception e) {\n          LOG.warn(\"Error closing client \" + client + \", ignoring...\", e);\n        }\n      }\n    }\n    cache.clear();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/reporters/ReporterClientCache#close().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Empty this cache, and close all clients that are {@link Closeable}.\n   */\n  public void close() {\n    for (T client : cache.values()) {\n      if (client instanceof Closeable) {\n        try {\n          ((Closeable)client).close();\n        } catch (Exception e) {\n          LOG.warn(\"Error closing client \" + client + \", ignoring...\", e);\n        }\n      }\n    }\n    cache.clear();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/reporters/ReporterClientCache#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/reporters/ReporterClientCache#close().mjava","sourceNew":"  /**\n   * Empty this cache, and close all clients that are {@link Closeable}.\n   */\n  public void close() {\n    for (T client : cache.values()) {\n      if (client instanceof Closeable) {\n        try {\n          ((Closeable)client).close();\n        } catch (Exception e) {\n          log.warn(\"Error closing client \" + client + \", ignoring...\", e);\n        }\n      }\n    }\n    cache.clear();\n  }\n\n","sourceOld":"  /**\n   * Empty this cache, and close all clients that are {@link Closeable}.\n   */\n  public void close() {\n    for (T client : cache.values()) {\n      if (client instanceof Closeable) {\n        try {\n          ((Closeable)client).close();\n        } catch (Exception e) {\n          LOG.warn(\"Error closing client \" + client + \", ignoring...\", e);\n        }\n      }\n    }\n    cache.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9df8125ba9193a2e2e285ed92157810b1952a244","date":1587326330,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/reporters/ReporterClientCache#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/reporters/ReporterClientCache#close().mjava","sourceNew":"  /**\n   * Empty this cache, and close all clients that are {@link Closeable}.\n   */\n  public void close() {\n    for (T client : cache.values()) {\n      if (client instanceof Closeable) {\n        try {\n          ((Closeable)client).close();\n        } catch (Exception e) {\n          log.warn(\"Error closing client {}, ignoring...\", client, e);\n        }\n      }\n    }\n    cache.clear();\n  }\n\n","sourceOld":"  /**\n   * Empty this cache, and close all clients that are {@link Closeable}.\n   */\n  public void close() {\n    for (T client : cache.values()) {\n      if (client instanceof Closeable) {\n        try {\n          ((Closeable)client).close();\n        } catch (Exception e) {\n          log.warn(\"Error closing client \" + client + \", ignoring...\", e);\n        }\n      }\n    }\n    cache.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9df8125ba9193a2e2e285ed92157810b1952a244"],"9df8125ba9193a2e2e285ed92157810b1952a244":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["816521ebaad5add9cb96bb88c577394e2938c40b"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"816521ebaad5add9cb96bb88c577394e2938c40b":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9df8125ba9193a2e2e285ed92157810b1952a244":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["9df8125ba9193a2e2e285ed92157810b1952a244"]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}