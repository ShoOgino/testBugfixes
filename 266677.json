{"path":"solr/core/src/test/org/apache/solr/core/TestConfigSetImmutable#before().mjava","commits":[{"id":"6466e433d7f5218e77c8115ed28176855fc3c143","date":1436824910,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSetImmutable#before().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void before() throws Exception {\n    File tmpSolrHome = createTempDir().toFile();\n    File tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n    // make the ConfigSet immutable\n    FileUtils.write(new File(tmpConfDir, \"configsetprops.json\"), new StringBuilder(\"{\\\"immutable\\\":\\\"true\\\"}\"));\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n        \"/solr\", true, null);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f2fdcdc967538d037b1437d31f172b07265a4b9b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f2fdcdc967538d037b1437d31f172b07265a4b9b","date":1444263273,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSetImmutable#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSetImmutable#before().mjava","sourceNew":"  @Before\n  public void before() throws Exception {\n    File tmpSolrHome = createTempDir().toFile();\n    File tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n    // make the ConfigSet immutable\n    FileUtils.write(new File(tmpConfDir, \"configsetprops.json\"), new StringBuilder(\"{\\\"immutable\\\":\\\"true\\\"}\"));\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-schemaless.xml\", \"schema-rest.xml\",\n        \"/solr\", true, null);\n  }\n\n","sourceOld":"  @Before\n  public void before() throws Exception {\n    File tmpSolrHome = createTempDir().toFile();\n    File tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n    // make the ConfigSet immutable\n    FileUtils.write(new File(tmpConfDir, \"configsetprops.json\"), new StringBuilder(\"{\\\"immutable\\\":\\\"true\\\"}\"));\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n        \"/solr\", true, null);\n  }\n\n","bugFix":["6466e433d7f5218e77c8115ed28176855fc3c143"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3cc56892371c2fde6f65948862e91c81a2f2503","date":1466364454,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSetImmutable#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSetImmutable#before().mjava","sourceNew":"  @Before\n  public void before() throws Exception {\n    File tmpSolrHome = createTempDir().toFile();\n    File tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n    // make the ConfigSet immutable\n    FileUtils.write(new File(tmpConfDir, \"configsetprops.json\"), new StringBuilder(\"{\\\"immutable\\\":\\\"true\\\"}\"), StandardCharsets.UTF_8);\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-schemaless.xml\", \"schema-rest.xml\",\n        \"/solr\", true, null);\n  }\n\n","sourceOld":"  @Before\n  public void before() throws Exception {\n    File tmpSolrHome = createTempDir().toFile();\n    File tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n    // make the ConfigSet immutable\n    FileUtils.write(new File(tmpConfDir, \"configsetprops.json\"), new StringBuilder(\"{\\\"immutable\\\":\\\"true\\\"}\"));\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-schemaless.xml\", \"schema-rest.xml\",\n        \"/solr\", true, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSetImmutable#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSetImmutable#before().mjava","sourceNew":"  @Before\n  public void before() throws Exception {\n    File tmpSolrHome = createTempDir().toFile();\n    File tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n    // make the ConfigSet immutable\n    FileUtils.write(new File(tmpConfDir, \"configsetprops.json\"), new StringBuilder(\"{\\\"immutable\\\":\\\"true\\\"}\"), StandardCharsets.UTF_8);\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-schemaless.xml\", \"schema-rest.xml\",\n        \"/solr\", true, null);\n  }\n\n","sourceOld":"  @Before\n  public void before() throws Exception {\n    File tmpSolrHome = createTempDir().toFile();\n    File tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n    // make the ConfigSet immutable\n    FileUtils.write(new File(tmpConfDir, \"configsetprops.json\"), new StringBuilder(\"{\\\"immutable\\\":\\\"true\\\"}\"));\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-schemaless.xml\", \"schema-rest.xml\",\n        \"/solr\", true, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6466e433d7f5218e77c8115ed28176855fc3c143":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f2fdcdc967538d037b1437d31f172b07265a4b9b":["6466e433d7f5218e77c8115ed28176855fc3c143"],"f3cc56892371c2fde6f65948862e91c81a2f2503":["f2fdcdc967538d037b1437d31f172b07265a4b9b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["f2fdcdc967538d037b1437d31f172b07265a4b9b","f3cc56892371c2fde6f65948862e91c81a2f2503"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f3cc56892371c2fde6f65948862e91c81a2f2503"]},"commit2Childs":{"6466e433d7f5218e77c8115ed28176855fc3c143":["f2fdcdc967538d037b1437d31f172b07265a4b9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6466e433d7f5218e77c8115ed28176855fc3c143"],"f2fdcdc967538d037b1437d31f172b07265a4b9b":["f3cc56892371c2fde6f65948862e91c81a2f2503","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"f3cc56892371c2fde6f65948862e91c81a2f2503":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}