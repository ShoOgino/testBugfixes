{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/FixedShingleFilterTest#testBiGramFilter().mjava","commits":[{"id":"739747d2d107745148aac3687c9c797f1b97c50b","date":1521639903,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/FixedShingleFilterTest#testBiGramFilter().mjava","pathOld":"/dev/null","sourceNew":"  public void testBiGramFilter() throws IOException {\n\n    TokenStream ts = new CannedTokenStream(\n        new Token(\"please\", 0, 6),\n        new Token(\"divide\", 7, 13),\n        new Token(\"this\", 14, 18),\n        new Token(\"sentence\", 19, 27),\n        new Token(\"into\", 28, 32),\n        new Token(\"shingles\", 33, 41)\n    );\n\n    assertTokenStreamContents(new FixedShingleFilter(ts, 2),\n        new String[]{\"please divide\", \"divide this\", \"this sentence\", \"sentence into\", \"into shingles\"},\n        new int[]{0, 7, 14, 19, 28,},\n        new int[]{13, 18, 27, 32, 41,},\n        new String[]{\"shingle\", \"shingle\", \"shingle\", \"shingle\", \"shingle\",},\n        new int[]{1, 1, 1, 1, 1,},\n        new int[]{2, 2, 2, 2, 2});\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","date":1521731438,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/FixedShingleFilterTest#testBiGramFilter().mjava","pathOld":"/dev/null","sourceNew":"  public void testBiGramFilter() throws IOException {\n\n    TokenStream ts = new CannedTokenStream(\n        new Token(\"please\", 0, 6),\n        new Token(\"divide\", 7, 13),\n        new Token(\"this\", 14, 18),\n        new Token(\"sentence\", 19, 27),\n        new Token(\"into\", 28, 32),\n        new Token(\"shingles\", 33, 41)\n    );\n\n    assertTokenStreamContents(new FixedShingleFilter(ts, 2),\n        new String[]{\"please divide\", \"divide this\", \"this sentence\", \"sentence into\", \"into shingles\"},\n        new int[]{0, 7, 14, 19, 28,},\n        new int[]{13, 18, 27, 32, 41,},\n        new String[]{\"shingle\", \"shingle\", \"shingle\", \"shingle\", \"shingle\",},\n        new int[]{1, 1, 1, 1, 1,},\n        new int[]{2, 2, 2, 2, 2});\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89b8d38d08ee2b91459a65e16393722e4548f37c","date":1521980569,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/FixedShingleFilterTest#testBiGramFilter().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/FixedShingleFilterTest#testBiGramFilter().mjava","sourceNew":"  public void testBiGramFilter() throws IOException {\n\n    TokenStream ts = new CannedTokenStream(\n        new Token(\"please\", 0, 6),\n        new Token(\"divide\", 7, 13),\n        new Token(\"this\", 14, 18),\n        new Token(\"sentence\", 19, 27),\n        new Token(\"into\", 28, 32),\n        new Token(\"shingles\", 33, 41)\n    );\n\n    assertTokenStreamContents(new FixedShingleFilter(ts, 2),\n        new String[]{\"please divide\", \"divide this\", \"this sentence\", \"sentence into\", \"into shingles\"},\n        new int[]{0, 7, 14, 19, 28,},\n        new int[]{13, 18, 27, 32, 41,},\n        new String[]{\"shingle\", \"shingle\", \"shingle\", \"shingle\", \"shingle\",},\n        new int[]{1, 1, 1, 1, 1,},\n        new int[]{1, 1, 1, 1, 1});\n\n  }\n\n","sourceOld":"  public void testBiGramFilter() throws IOException {\n\n    TokenStream ts = new CannedTokenStream(\n        new Token(\"please\", 0, 6),\n        new Token(\"divide\", 7, 13),\n        new Token(\"this\", 14, 18),\n        new Token(\"sentence\", 19, 27),\n        new Token(\"into\", 28, 32),\n        new Token(\"shingles\", 33, 41)\n    );\n\n    assertTokenStreamContents(new FixedShingleFilter(ts, 2),\n        new String[]{\"please divide\", \"divide this\", \"this sentence\", \"sentence into\", \"into shingles\"},\n        new int[]{0, 7, 14, 19, 28,},\n        new int[]{13, 18, 27, 32, 41,},\n        new String[]{\"shingle\", \"shingle\", \"shingle\", \"shingle\", \"shingle\",},\n        new int[]{1, 1, 1, 1, 1,},\n        new int[]{2, 2, 2, 2, 2});\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91286985ff2a4aea4ce949a9bd6dc750db6c207a","date":1521994854,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/FixedShingleFilterTest#testBiGramFilter().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/FixedShingleFilterTest#testBiGramFilter().mjava","sourceNew":"  public void testBiGramFilter() throws IOException {\n\n    TokenStream ts = new CannedTokenStream(\n        new Token(\"please\", 0, 6),\n        new Token(\"divide\", 7, 13),\n        new Token(\"this\", 14, 18),\n        new Token(\"sentence\", 19, 27),\n        new Token(\"into\", 28, 32),\n        new Token(\"shingles\", 33, 41)\n    );\n\n    assertTokenStreamContents(new FixedShingleFilter(ts, 2),\n        new String[]{\"please divide\", \"divide this\", \"this sentence\", \"sentence into\", \"into shingles\"},\n        new int[]{0, 7, 14, 19, 28,},\n        new int[]{13, 18, 27, 32, 41,},\n        new String[]{\"shingle\", \"shingle\", \"shingle\", \"shingle\", \"shingle\",},\n        new int[]{1, 1, 1, 1, 1,},\n        new int[]{1, 1, 1, 1, 1});\n\n  }\n\n","sourceOld":"  public void testBiGramFilter() throws IOException {\n\n    TokenStream ts = new CannedTokenStream(\n        new Token(\"please\", 0, 6),\n        new Token(\"divide\", 7, 13),\n        new Token(\"this\", 14, 18),\n        new Token(\"sentence\", 19, 27),\n        new Token(\"into\", 28, 32),\n        new Token(\"shingles\", 33, 41)\n    );\n\n    assertTokenStreamContents(new FixedShingleFilter(ts, 2),\n        new String[]{\"please divide\", \"divide this\", \"this sentence\", \"sentence into\", \"into shingles\"},\n        new int[]{0, 7, 14, 19, 28,},\n        new int[]{13, 18, 27, 32, 41,},\n        new String[]{\"shingle\", \"shingle\", \"shingle\", \"shingle\", \"shingle\",},\n        new int[]{1, 1, 1, 1, 1,},\n        new int[]{2, 2, 2, 2, 2});\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","739747d2d107745148aac3687c9c797f1b97c50b"],"91286985ff2a4aea4ce949a9bd6dc750db6c207a":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","89b8d38d08ee2b91459a65e16393722e4548f37c"],"739747d2d107745148aac3687c9c797f1b97c50b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"89b8d38d08ee2b91459a65e16393722e4548f37c":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91286985ff2a4aea4ce949a9bd6dc750db6c207a"]},"commit2Childs":{"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["91286985ff2a4aea4ce949a9bd6dc750db6c207a","89b8d38d08ee2b91459a65e16393722e4548f37c"],"91286985ff2a4aea4ce949a9bd6dc750db6c207a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"739747d2d107745148aac3687c9c797f1b97c50b":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","739747d2d107745148aac3687c9c797f1b97c50b"],"89b8d38d08ee2b91459a65e16393722e4548f37c":["91286985ff2a4aea4ce949a9bd6dc750db6c207a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}