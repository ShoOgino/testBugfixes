{"path":"solr/core/src/test/org/apache/hadoop/http/HttpServer2.Builder#createHttpsChannelConnector(Server,HttpConfiguration).mjava","commits":[{"id":"99b97f030e743d8dd4d7685202f71718d7e5af22","date":1548957620,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/http/HttpServer2.Builder#createHttpsChannelConnector(Server,HttpConfiguration).mjava","pathOld":"/dev/null","sourceNew":"    private ServerConnector createHttpsChannelConnector(\n        Server server, HttpConfiguration httpConfig) {\n      httpConfig.setSecureScheme(HTTPS_SCHEME);\n      httpConfig.addCustomizer(new SecureRequestCustomizer());\n      ServerConnector conn = createHttpChannelConnector(server, httpConfig);\n\n      SslContextFactory sslContextFactory = new SslContextFactory();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      sslContextFactory.setKeyManagerPassword(keyPassword);\n      if (keyStore != null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        sslContextFactory.setKeyStorePassword(keyStorePassword);\n      }\n      if (trustStore != null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        sslContextFactory.setTrustStorePassword(trustStorePassword);\n      }\n      if(null != excludeCiphers && !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(\n            StringUtils.getTrimmedStrings(excludeCiphers));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34b74c124d68d8e306d6ef09624f3cd053b8a2fd","date":1548981962,"type":4,"author":"Kevin Risden","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/hadoop/http/HttpServer2.Builder#createHttpsChannelConnector(Server,HttpConfiguration).mjava","sourceNew":null,"sourceOld":"    private ServerConnector createHttpsChannelConnector(\n        Server server, HttpConfiguration httpConfig) {\n      httpConfig.setSecureScheme(HTTPS_SCHEME);\n      httpConfig.addCustomizer(new SecureRequestCustomizer());\n      ServerConnector conn = createHttpChannelConnector(server, httpConfig);\n\n      SslContextFactory sslContextFactory = new SslContextFactory();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      sslContextFactory.setKeyManagerPassword(keyPassword);\n      if (keyStore != null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        sslContextFactory.setKeyStorePassword(keyStorePassword);\n      }\n      if (trustStore != null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        sslContextFactory.setTrustStorePassword(trustStorePassword);\n      }\n      if(null != excludeCiphers && !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(\n            StringUtils.getTrimmedStrings(excludeCiphers));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44ca189138a5b6e1989d12ab992fab60e235ddc7","date":1549051496,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/http/HttpServer2.Builder#createHttpsChannelConnector(Server,HttpConfiguration).mjava","pathOld":"/dev/null","sourceNew":"    private ServerConnector createHttpsChannelConnector(\n        Server server, HttpConfiguration httpConfig) {\n      httpConfig.setSecureScheme(HTTPS_SCHEME);\n      httpConfig.addCustomizer(new SecureRequestCustomizer());\n      ServerConnector conn = createHttpChannelConnector(server, httpConfig);\n\n      SslContextFactory sslContextFactory = new SslContextFactory();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      sslContextFactory.setKeyManagerPassword(keyPassword);\n      if (keyStore != null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        sslContextFactory.setKeyStorePassword(keyStorePassword);\n      }\n      if (trustStore != null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        sslContextFactory.setTrustStorePassword(trustStorePassword);\n      }\n      if(null != excludeCiphers && !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(\n            StringUtils.getTrimmedStrings(excludeCiphers));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ea0f43f20834b3c8930e074b144aba27a935fee8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ea0f43f20834b3c8930e074b144aba27a935fee8","date":1576814747,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/http/HttpServer2.Builder#createHttpsChannelConnector(Server,HttpConfiguration).mjava","pathOld":"solr/core/src/test/org/apache/hadoop/http/HttpServer2.Builder#createHttpsChannelConnector(Server,HttpConfiguration).mjava","sourceNew":"    private ServerConnector createHttpsChannelConnector(\n        Server server, HttpConfiguration httpConfig) {\n      httpConfig.setSecureScheme(HTTPS_SCHEME);\n      httpConfig.addCustomizer(new SecureRequestCustomizer());\n      ServerConnector conn = createHttpChannelConnector(server, httpConfig);\n\n      SslContextFactory.Server sslContextFactory = new SslContextFactory.Server();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      sslContextFactory.setKeyManagerPassword(keyPassword);\n      if (keyStore != null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        sslContextFactory.setKeyStorePassword(keyStorePassword);\n      }\n      if (trustStore != null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        sslContextFactory.setTrustStorePassword(trustStorePassword);\n      }\n      if(null != excludeCiphers && !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(\n            StringUtils.getTrimmedStrings(excludeCiphers));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }\n\n","sourceOld":"    private ServerConnector createHttpsChannelConnector(\n        Server server, HttpConfiguration httpConfig) {\n      httpConfig.setSecureScheme(HTTPS_SCHEME);\n      httpConfig.addCustomizer(new SecureRequestCustomizer());\n      ServerConnector conn = createHttpChannelConnector(server, httpConfig);\n\n      SslContextFactory sslContextFactory = new SslContextFactory();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      sslContextFactory.setKeyManagerPassword(keyPassword);\n      if (keyStore != null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        sslContextFactory.setKeyStorePassword(keyStorePassword);\n      }\n      if (trustStore != null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        sslContextFactory.setTrustStorePassword(trustStorePassword);\n      }\n      if(null != excludeCiphers && !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(\n            StringUtils.getTrimmedStrings(excludeCiphers));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }\n\n","bugFix":["44ca189138a5b6e1989d12ab992fab60e235ddc7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c66470e527299cc148ad0b3441d08dfb7cb9e03","date":1576859740,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/hadoop/http/HttpServer2.Builder#createHttpsChannelConnector(Server,HttpConfiguration).mjava","pathOld":"solr/core/src/test/org/apache/hadoop/http/HttpServer2.Builder#createHttpsChannelConnector(Server,HttpConfiguration).mjava","sourceNew":"    private ServerConnector createHttpsChannelConnector(\n        Server server, HttpConfiguration httpConfig) {\n      httpConfig.setSecureScheme(HTTPS_SCHEME);\n      httpConfig.addCustomizer(new SecureRequestCustomizer());\n      ServerConnector conn = createHttpChannelConnector(server, httpConfig);\n\n      SslContextFactory.Server sslContextFactory = new SslContextFactory.Server();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      sslContextFactory.setKeyManagerPassword(keyPassword);\n      if (keyStore != null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        sslContextFactory.setKeyStorePassword(keyStorePassword);\n      }\n      if (trustStore != null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        sslContextFactory.setTrustStorePassword(trustStorePassword);\n      }\n      if(null != excludeCiphers && !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(\n            StringUtils.getTrimmedStrings(excludeCiphers));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }\n\n","sourceOld":"    private ServerConnector createHttpsChannelConnector(\n        Server server, HttpConfiguration httpConfig) {\n      httpConfig.setSecureScheme(HTTPS_SCHEME);\n      httpConfig.addCustomizer(new SecureRequestCustomizer());\n      ServerConnector conn = createHttpChannelConnector(server, httpConfig);\n\n      SslContextFactory sslContextFactory = new SslContextFactory();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      sslContextFactory.setKeyManagerPassword(keyPassword);\n      if (keyStore != null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        sslContextFactory.setKeyStorePassword(keyStorePassword);\n      }\n      if (trustStore != null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        sslContextFactory.setTrustStorePassword(trustStorePassword);\n      }\n      if(null != excludeCiphers && !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(\n            StringUtils.getTrimmedStrings(excludeCiphers));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/http/HttpServer2.Builder#createHttpsChannelConnector(Server,HttpConfiguration).mjava","pathOld":"solr/core/src/test/org/apache/hadoop/http/HttpServer2.Builder#createHttpsChannelConnector(Server,HttpConfiguration).mjava","sourceNew":"    private ServerConnector createHttpsChannelConnector(\n        Server server, HttpConfiguration httpConfig) {\n      httpConfig.setSecureScheme(HTTPS_SCHEME);\n      httpConfig.addCustomizer(new SecureRequestCustomizer());\n      ServerConnector conn = createHttpChannelConnector(server, httpConfig);\n\n      SslContextFactory.Server sslContextFactory = new SslContextFactory.Server();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      sslContextFactory.setKeyManagerPassword(keyPassword);\n      if (keyStore != null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        sslContextFactory.setKeyStorePassword(keyStorePassword);\n      }\n      if (trustStore != null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        sslContextFactory.setTrustStorePassword(trustStorePassword);\n      }\n      if(null != excludeCiphers && !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(\n            StringUtils.getTrimmedStrings(excludeCiphers));\n        LOG.info(\"Excluded Cipher List:{}\", excludeCiphers);\n      }\n\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }\n\n","sourceOld":"    private ServerConnector createHttpsChannelConnector(\n        Server server, HttpConfiguration httpConfig) {\n      httpConfig.setSecureScheme(HTTPS_SCHEME);\n      httpConfig.addCustomizer(new SecureRequestCustomizer());\n      ServerConnector conn = createHttpChannelConnector(server, httpConfig);\n\n      SslContextFactory.Server sslContextFactory = new SslContextFactory.Server();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      sslContextFactory.setKeyManagerPassword(keyPassword);\n      if (keyStore != null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        sslContextFactory.setKeyStorePassword(keyStorePassword);\n      }\n      if (trustStore != null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        sslContextFactory.setTrustStorePassword(trustStorePassword);\n      }\n      if(null != excludeCiphers && !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(\n            StringUtils.getTrimmedStrings(excludeCiphers));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"34b74c124d68d8e306d6ef09624f3cd053b8a2fd":["99b97f030e743d8dd4d7685202f71718d7e5af22"],"99b97f030e743d8dd4d7685202f71718d7e5af22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ea0f43f20834b3c8930e074b144aba27a935fee8":["44ca189138a5b6e1989d12ab992fab60e235ddc7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["34b74c124d68d8e306d6ef09624f3cd053b8a2fd"],"4c66470e527299cc148ad0b3441d08dfb7cb9e03":["44ca189138a5b6e1989d12ab992fab60e235ddc7","ea0f43f20834b3c8930e074b144aba27a935fee8"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["ea0f43f20834b3c8930e074b144aba27a935fee8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"]},"commit2Childs":{"34b74c124d68d8e306d6ef09624f3cd053b8a2fd":["44ca189138a5b6e1989d12ab992fab60e235ddc7"],"99b97f030e743d8dd4d7685202f71718d7e5af22":["34b74c124d68d8e306d6ef09624f3cd053b8a2fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["99b97f030e743d8dd4d7685202f71718d7e5af22"],"ea0f43f20834b3c8930e074b144aba27a935fee8":["4c66470e527299cc148ad0b3441d08dfb7cb9e03","a966532d92cf9ba2856f15a8140151bb6b518e4b"],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["ea0f43f20834b3c8930e074b144aba27a935fee8","4c66470e527299cc148ad0b3441d08dfb7cb9e03"],"4c66470e527299cc148ad0b3441d08dfb7cb9e03":[],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4c66470e527299cc148ad0b3441d08dfb7cb9e03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}