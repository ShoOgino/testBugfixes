{"path":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#seekExact(BytesRef,TermState).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":1,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#seekExact(BytesRef,TermState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingTermsEnum#seekExact(BytesRef,TermState).mjava","sourceNew":"    @Override\n    public void seekExact(BytesRef term, TermState state) throws IOException {\n      assert term.isValid();\n      super.seekExact(term, state);\n      this.state = State.POSITIONED;\n    }\n\n","sourceOld":"    @Override\n    public void seekExact(BytesRef term, TermState state) throws IOException {\n      assert term.isValid();\n      super.seekExact(term, state);\n      this.state = State.POSITIONED;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86762b84c3fc613e3c2250dc9452529a68181a3f","date":1419412618,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#seekExact(BytesRef,TermState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#seekExact(BytesRef,TermState).mjava","sourceNew":"    @Override\n    public void seekExact(BytesRef term, TermState state) throws IOException {\n      assertThread(\"Terms enums\", creationThread);\n      assert term.isValid();\n      super.seekExact(term, state);\n      this.state = State.POSITIONED;\n    }\n\n","sourceOld":"    @Override\n    public void seekExact(BytesRef term, TermState state) throws IOException {\n      assert term.isValid();\n      super.seekExact(term, state);\n      this.state = State.POSITIONED;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e8715d826e588419327562287d5d6a8040d63d6","date":1427987148,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#seekExact(BytesRef,TermState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#seekExact(BytesRef,TermState).mjava","sourceNew":"    @Override\n    public void seekExact(BytesRef term, TermState state) throws IOException {\n      assertThread(\"Terms enums\", creationThread);\n      assert term.isValid();\n      in.seekExact(term, state);\n      this.state = State.POSITIONED;\n    }\n\n","sourceOld":"    @Override\n    public void seekExact(BytesRef term, TermState state) throws IOException {\n      assertThread(\"Terms enums\", creationThread);\n      assert term.isValid();\n      super.seekExact(term, state);\n      this.state = State.POSITIONED;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#seekExact(BytesRef,TermState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#seekExact(BytesRef,TermState).mjava","sourceNew":"    @Override\n    public void seekExact(BytesRef term, TermState state) throws IOException {\n      assertThread(\"Terms enums\", creationThread);\n      assert term.isValid();\n      in.seekExact(term, state);\n      this.state = State.POSITIONED;\n    }\n\n","sourceOld":"    @Override\n    public void seekExact(BytesRef term, TermState state) throws IOException {\n      assertThread(\"Terms enums\", creationThread);\n      assert term.isValid();\n      super.seekExact(term, state);\n      this.state = State.POSITIONED;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["86762b84c3fc613e3c2250dc9452529a68181a3f","3e8715d826e588419327562287d5d6a8040d63d6"],"3e8715d826e588419327562287d5d6a8040d63d6":["86762b84c3fc613e3c2250dc9452529a68181a3f"],"86762b84c3fc613e3c2250dc9452529a68181a3f":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e8715d826e588419327562287d5d6a8040d63d6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"86762b84c3fc613e3c2250dc9452529a68181a3f":["d2638f781be724518ff6c2263d14a48cf6e68017","3e8715d826e588419327562287d5d6a8040d63d6"],"3e8715d826e588419327562287d5d6a8040d63d6":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["86762b84c3fc613e3c2250dc9452529a68181a3f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}