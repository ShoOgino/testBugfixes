{"path":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","commits":[{"id":"ea469eab8fd0f3032f4fcde1c644a721e8309d3b","date":1320301582,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","pathOld":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,LuceneTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","sourceNew":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, DirectoryTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      CategoryDocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, docTitles[docNum], TextField.TYPE_STORED));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum]));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","sourceOld":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, LuceneTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      CategoryDocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, docTitles[docNum], TextField.TYPE_STORED));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum]));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","pathOld":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","sourceNew":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, DirectoryTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      CategoryDocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, docTitles[docNum], TextField.TYPE_STORED));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum]));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","sourceOld":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, DirectoryTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      CategoryDocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, docTitles[docNum], TextField.TYPE_STORED));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum]));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}