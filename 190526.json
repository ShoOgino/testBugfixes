{"path":"solr/core/src/test/org/apache/solr/analysis/TestTypeTokenFilterFactory#testMissingTypesParameter().mjava","commits":[{"id":"c9a61250c5cc14f652925f9198023e4bb80bb38c","date":1327258210,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestTypeTokenFilterFactory#testMissingTypesParameter().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMissingTypesParameter() throws Exception {\n    try {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>(DEFAULT_VERSION_PARAM);\n      args.put(\"enablePositionIncrements\", \"false\");\n      typeTokenFilterFactory.init(args);\n      typeTokenFilterFactory.inform(new SolrResourceLoader(null, null));\n      fail(\"not supplying 'types' parameter should cause a SolrException\");\n    } catch (SolrException e) {\n      // everything ok\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0","05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5a89676536a5d3e2e875a9eed6b3f22a63cca643","date":1327356915,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestTypeTokenFilterFactory#testMissingTypesParameter().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMissingTypesParameter() throws Exception {\n    try {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>(DEFAULT_VERSION_PARAM);\n      args.put(\"enablePositionIncrements\", \"false\");\n      typeTokenFilterFactory.init(args);\n      typeTokenFilterFactory.inform(new SolrResourceLoader(null, null));\n      fail(\"not supplying 'types' parameter should cause a SolrException\");\n    } catch (SolrException e) {\n      // everything ok\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestTypeTokenFilterFactory#testMissingTypesParameter().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMissingTypesParameter() throws Exception {\n    try {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>(DEFAULT_VERSION_PARAM);\n      args.put(\"enablePositionIncrements\", \"false\");\n      typeTokenFilterFactory.init(args);\n      typeTokenFilterFactory.inform(new SolrResourceLoader(null, null));\n      fail(\"not supplying 'types' parameter should cause a SolrException\");\n    } catch (SolrException e) {\n      // everything ok\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39d25aba1848c644c6d22b943d3d66f661445ac7","date":1335238294,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestTypeTokenFilterFactory#testMissingTypesParameter().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestTypeTokenFilterFactory#testMissingTypesParameter().mjava","sourceNew":"  @Test\n  public void testMissingTypesParameter() throws Exception {\n    try {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>(DEFAULT_VERSION_PARAM);\n      args.put(\"enablePositionIncrements\", \"false\");\n      typeTokenFilterFactory.init(args);\n      typeTokenFilterFactory.inform(new SolrResourceLoader(null, null));\n      fail(\"not supplying 'types' parameter should cause an InitializationException\");\n    } catch (InitializationException e) {\n      // everything ok\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMissingTypesParameter() throws Exception {\n    try {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>(DEFAULT_VERSION_PARAM);\n      args.put(\"enablePositionIncrements\", \"false\");\n      typeTokenFilterFactory.init(args);\n      typeTokenFilterFactory.inform(new SolrResourceLoader(null, null));\n      fail(\"not supplying 'types' parameter should cause a SolrException\");\n    } catch (SolrException e) {\n      // everything ok\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d6d3ad4230a9094e97925f9395cf6db4729284d9","date":1335503918,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestTypeTokenFilterFactory#testMissingTypesParameter().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestTypeTokenFilterFactory#testMissingTypesParameter().mjava","sourceNew":"  @Test\n  public void testMissingTypesParameter() throws Exception {\n    try {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>();\n      args.put(\"enablePositionIncrements\", \"false\");\n      typeTokenFilterFactory.setLuceneMatchVersion(DEFAULT_VERSION);\n      typeTokenFilterFactory.init(args);\n      typeTokenFilterFactory.inform(new SolrResourceLoader(null, null));\n      fail(\"not supplying 'types' parameter should cause an InitializationException\");\n    } catch (InitializationException e) {\n      // everything ok\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMissingTypesParameter() throws Exception {\n    try {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>(DEFAULT_VERSION_PARAM);\n      args.put(\"enablePositionIncrements\", \"false\");\n      typeTokenFilterFactory.init(args);\n      typeTokenFilterFactory.inform(new SolrResourceLoader(null, null));\n      fail(\"not supplying 'types' parameter should cause an InitializationException\");\n    } catch (InitializationException e) {\n      // everything ok\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"92ed69fd02d759d98f62e869eaa64e64e22302bf","date":1336612003,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestTypeTokenFilterFactory#testMissingTypesParameter().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestTypeTokenFilterFactory#testMissingTypesParameter().mjava","sourceNew":"  @Test\n  public void testMissingTypesParameter() throws Exception {\n    try {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>();\n      args.put(\"enablePositionIncrements\", \"false\");\n      typeTokenFilterFactory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n      typeTokenFilterFactory.init(args);\n      typeTokenFilterFactory.inform(new SolrResourceLoader(null, null));\n      fail(\"not supplying 'types' parameter should cause an InitializationException\");\n    } catch (InitializationException e) {\n      // everything ok\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMissingTypesParameter() throws Exception {\n    try {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>();\n      args.put(\"enablePositionIncrements\", \"false\");\n      typeTokenFilterFactory.setLuceneMatchVersion(DEFAULT_VERSION);\n      typeTokenFilterFactory.init(args);\n      typeTokenFilterFactory.inform(new SolrResourceLoader(null, null));\n      fail(\"not supplying 'types' parameter should cause an InitializationException\");\n    } catch (InitializationException e) {\n      // everything ok\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3241e06e642196396b80bb293acd9c0814d079e0","date":1343094999,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilterFactory#testMissingTypesParameter().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestTypeTokenFilterFactory#testMissingTypesParameter().mjava","sourceNew":"  @Test\n  public void testMissingTypesParameter() throws Exception {\n    try {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>();\n      args.put(\"enablePositionIncrements\", \"false\");\n      typeTokenFilterFactory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n      typeTokenFilterFactory.init(args);\n      typeTokenFilterFactory.inform(new SolrResourceLoader(null, null));\n      fail(\"not supplying 'types' parameter should cause an InitializationException\");\n    } catch (InitializationException e) {\n      // everything ok\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMissingTypesParameter() throws Exception {\n    try {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>();\n      args.put(\"enablePositionIncrements\", \"false\");\n      typeTokenFilterFactory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n      typeTokenFilterFactory.init(args);\n      typeTokenFilterFactory.inform(new SolrResourceLoader(null, null));\n      fail(\"not supplying 'types' parameter should cause an InitializationException\");\n    } catch (InitializationException e) {\n      // everything ok\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilterFactory#testMissingTypesParameter().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestTypeTokenFilterFactory#testMissingTypesParameter().mjava","sourceNew":"  @Test\n  public void testMissingTypesParameter() throws Exception {\n    try {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>();\n      args.put(\"enablePositionIncrements\", \"false\");\n      typeTokenFilterFactory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n      typeTokenFilterFactory.init(args);\n      typeTokenFilterFactory.inform(new ResourceAsStreamResourceLoader(getClass()));\n      fail(\"not supplying 'types' parameter should cause an InitializationException\");\n    } catch (InitializationException e) {\n      // everything ok\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMissingTypesParameter() throws Exception {\n    try {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>();\n      args.put(\"enablePositionIncrements\", \"false\");\n      typeTokenFilterFactory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n      typeTokenFilterFactory.init(args);\n      typeTokenFilterFactory.inform(new SolrResourceLoader(null, null));\n      fail(\"not supplying 'types' parameter should cause an InitializationException\");\n    } catch (InitializationException e) {\n      // everything ok\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestTypeTokenFilterFactory#testMissingTypesParameter().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testMissingTypesParameter() throws Exception {\n    try {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>();\n      args.put(\"enablePositionIncrements\", \"false\");\n      typeTokenFilterFactory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n      typeTokenFilterFactory.init(args);\n      typeTokenFilterFactory.inform(new SolrResourceLoader(null, null));\n      fail(\"not supplying 'types' parameter should cause an InitializationException\");\n    } catch (InitializationException e) {\n      // everything ok\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestTypeTokenFilterFactory#testMissingTypesParameter().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testMissingTypesParameter() throws Exception {\n    try {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>();\n      args.put(\"enablePositionIncrements\", \"false\");\n      typeTokenFilterFactory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n      typeTokenFilterFactory.init(args);\n      typeTokenFilterFactory.inform(new SolrResourceLoader(null, null));\n      fail(\"not supplying 'types' parameter should cause an InitializationException\");\n    } catch (InitializationException e) {\n      // everything ok\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a89676536a5d3e2e875a9eed6b3f22a63cca643":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c9a61250c5cc14f652925f9198023e4bb80bb38c"],"aba371508186796cc6151d8223a5b4e16d02e26e":["92ed69fd02d759d98f62e869eaa64e64e22302bf","5a1a22b1ad88b436661458df567f3fdb446392a4"],"d6d3ad4230a9094e97925f9395cf6db4729284d9":["39d25aba1848c644c6d22b943d3d66f661445ac7"],"92ed69fd02d759d98f62e869eaa64e64e22302bf":["d6d3ad4230a9094e97925f9395cf6db4729284d9"],"c9a61250c5cc14f652925f9198023e4bb80bb38c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["92ed69fd02d759d98f62e869eaa64e64e22302bf","5a1a22b1ad88b436661458df567f3fdb446392a4"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c9a61250c5cc14f652925f9198023e4bb80bb38c"],"39d25aba1848c644c6d22b943d3d66f661445ac7":["c9a61250c5cc14f652925f9198023e4bb80bb38c"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["92ed69fd02d759d98f62e869eaa64e64e22302bf","3241e06e642196396b80bb293acd9c0814d079e0"],"3241e06e642196396b80bb293acd9c0814d079e0":["92ed69fd02d759d98f62e869eaa64e64e22302bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a1a22b1ad88b436661458df567f3fdb446392a4"]},"commit2Childs":{"5a89676536a5d3e2e875a9eed6b3f22a63cca643":[],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"d6d3ad4230a9094e97925f9395cf6db4729284d9":["92ed69fd02d759d98f62e869eaa64e64e22302bf"],"92ed69fd02d759d98f62e869eaa64e64e22302bf":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","5a1a22b1ad88b436661458df567f3fdb446392a4","3241e06e642196396b80bb293acd9c0814d079e0"],"c9a61250c5cc14f652925f9198023e4bb80bb38c":["5a89676536a5d3e2e875a9eed6b3f22a63cca643","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","39d25aba1848c644c6d22b943d3d66f661445ac7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a89676536a5d3e2e875a9eed6b3f22a63cca643","c9a61250c5cc14f652925f9198023e4bb80bb38c","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"39d25aba1848c644c6d22b943d3d66f661445ac7":["d6d3ad4230a9094e97925f9395cf6db4729284d9"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3241e06e642196396b80bb293acd9c0814d079e0":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5a89676536a5d3e2e875a9eed6b3f22a63cca643","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}