{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#stripHTML(String,String).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#stripHTML(String,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#stripHTML(String,String).mjava","sourceNew":"  private Object stripHTML(String value, String column) {\n    StringBuilder out = new StringBuilder();\n    StringReader strReader = new StringReader(value);\n    try {\n      HTMLStripCharFilter html = new HTMLStripCharFilter(CharReader.get(strReader.markSupported() ? strReader : new BufferedReader(strReader)));\n      char[] cbuf = new char[1024 * 10];\n      while (true) {\n        int count = html.read(cbuf);\n        if (count == -1)\n          break; // end of stream mark is -1\n        if (count > 0)\n          out.append(cbuf, 0, count);\n      }\n      html.close();\n    } catch (IOException e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed stripping HTML for column: \" + column, e);\n    }\n    return out.toString();\n  }\n\n","sourceOld":"  private Object stripHTML(String value, String column) {\n    StringBuilder out = new StringBuilder();\n    StringReader strReader = new StringReader(value);\n    try {\n      HTMLStripCharFilter html = new HTMLStripCharFilter(CharReader.get(strReader.markSupported() ? strReader : new BufferedReader(strReader)));\n      char[] cbuf = new char[1024 * 10];\n      while (true) {\n        int count = html.read(cbuf);\n        if (count == -1)\n          break; // end of stream mark is -1\n        if (count > 0)\n          out.append(cbuf, 0, count);\n      }\n      html.close();\n    } catch (IOException e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed stripping HTML for column: \" + column, e);\n    }\n    return out.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#stripHTML(String,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#stripHTML(String,String).mjava","sourceNew":"  private Object stripHTML(String value, String column) {\n    StringBuilder out = new StringBuilder();\n    StringReader strReader = new StringReader(value);\n    try {\n      HTMLStripCharFilter html = new HTMLStripCharFilter(CharReader.get(strReader.markSupported() ? strReader : new BufferedReader(strReader)));\n      char[] cbuf = new char[1024 * 10];\n      while (true) {\n        int count = html.read(cbuf);\n        if (count == -1)\n          break; // end of stream mark is -1\n        if (count > 0)\n          out.append(cbuf, 0, count);\n      }\n      html.close();\n    } catch (IOException e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed stripping HTML for column: \" + column, e);\n    }\n    return out.toString();\n  }\n\n","sourceOld":"  private Object stripHTML(String value, String column) {\n    StringBuilder out = new StringBuilder();\n    StringReader strReader = new StringReader(value);\n    try {\n      HTMLStripCharFilter html = new HTMLStripCharFilter(CharReader.get(strReader.markSupported() ? strReader : new BufferedReader(strReader)));\n      char[] cbuf = new char[1024 * 10];\n      while (true) {\n        int count = html.read(cbuf);\n        if (count == -1)\n          break; // end of stream mark is -1\n        if (count > 0)\n          out.append(cbuf, 0, count);\n      }\n      html.close();\n    } catch (IOException e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed stripping HTML for column: \" + column, e);\n    }\n    return out.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc706b1e03a539d44d99998108feb684bb44cbb2","date":1342522408,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#stripHTML(String,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#stripHTML(String,String).mjava","sourceNew":"  private Object stripHTML(String value, String column) {\n    StringBuilder out = new StringBuilder();\n    StringReader strReader = new StringReader(value);\n    try {\n      HTMLStripCharFilter html = new HTMLStripCharFilter(strReader.markSupported() ? strReader : new BufferedReader(strReader));\n      char[] cbuf = new char[1024 * 10];\n      while (true) {\n        int count = html.read(cbuf);\n        if (count == -1)\n          break; // end of stream mark is -1\n        if (count > 0)\n          out.append(cbuf, 0, count);\n      }\n      html.close();\n    } catch (IOException e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed stripping HTML for column: \" + column, e);\n    }\n    return out.toString();\n  }\n\n","sourceOld":"  private Object stripHTML(String value, String column) {\n    StringBuilder out = new StringBuilder();\n    StringReader strReader = new StringReader(value);\n    try {\n      HTMLStripCharFilter html = new HTMLStripCharFilter(CharReader.get(strReader.markSupported() ? strReader : new BufferedReader(strReader)));\n      char[] cbuf = new char[1024 * 10];\n      while (true) {\n        int count = html.read(cbuf);\n        if (count == -1)\n          break; // end of stream mark is -1\n        if (count > 0)\n          out.append(cbuf, 0, count);\n      }\n      html.close();\n    } catch (IOException e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed stripping HTML for column: \" + column, e);\n    }\n    return out.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#stripHTML(String,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#stripHTML(String,String).mjava","sourceNew":"  private Object stripHTML(String value, String column) {\n    StringBuilder out = new StringBuilder();\n    StringReader strReader = new StringReader(value);\n    try {\n      HTMLStripCharFilter html = new HTMLStripCharFilter(strReader.markSupported() ? strReader : new BufferedReader(strReader));\n      char[] cbuf = new char[1024 * 10];\n      while (true) {\n        int count = html.read(cbuf);\n        if (count == -1)\n          break; // end of stream mark is -1\n        if (count > 0)\n          out.append(cbuf, 0, count);\n      }\n      html.close();\n    } catch (IOException e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed stripping HTML for column: \" + column, e);\n    }\n    return out.toString();\n  }\n\n","sourceOld":"  private Object stripHTML(String value, String column) {\n    StringBuilder out = new StringBuilder();\n    StringReader strReader = new StringReader(value);\n    try {\n      HTMLStripCharFilter html = new HTMLStripCharFilter(CharReader.get(strReader.markSupported() ? strReader : new BufferedReader(strReader)));\n      char[] cbuf = new char[1024 * 10];\n      while (true) {\n        int count = html.read(cbuf);\n        if (count == -1)\n          break; // end of stream mark is -1\n        if (count > 0)\n          out.append(cbuf, 0, count);\n      }\n      html.close();\n    } catch (IOException e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed stripping HTML for column: \" + column, e);\n    }\n    return out.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#stripHTML(String,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#stripHTML(String,String).mjava","sourceNew":"  private Object stripHTML(String value, String column) {\n    StringBuilder out = new StringBuilder();\n    StringReader strReader = new StringReader(value);\n    try {\n      HTMLStripCharFilter html = new HTMLStripCharFilter(strReader.markSupported() ? strReader : new BufferedReader(strReader));\n      char[] cbuf = new char[1024 * 10];\n      while (true) {\n        int count = html.read(cbuf);\n        if (count == -1)\n          break; // end of stream mark is -1\n        if (count > 0)\n          out.append(cbuf, 0, count);\n      }\n      html.close();\n    } catch (IOException e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed stripping HTML for column: \" + column, e);\n    }\n    return out.toString();\n  }\n\n","sourceOld":"  private Object stripHTML(String value, String column) {\n    StringBuilder out = new StringBuilder();\n    StringReader strReader = new StringReader(value);\n    try {\n      HTMLStripCharFilter html = new HTMLStripCharFilter(CharReader.get(strReader.markSupported() ? strReader : new BufferedReader(strReader)));\n      char[] cbuf = new char[1024 * 10];\n      while (true) {\n        int count = html.read(cbuf);\n        if (count == -1)\n          break; // end of stream mark is -1\n        if (count > 0)\n          out.append(cbuf, 0, count);\n      }\n      html.close();\n    } catch (IOException e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed stripping HTML for column: \" + column, e);\n    }\n    return out.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#stripHTML(String,String).mjava","sourceNew":null,"sourceOld":"  private Object stripHTML(String value, String column) {\n    StringBuilder out = new StringBuilder();\n    StringReader strReader = new StringReader(value);\n    try {\n      HTMLStripCharFilter html = new HTMLStripCharFilter(strReader.markSupported() ? strReader : new BufferedReader(strReader));\n      char[] cbuf = new char[1024 * 10];\n      while (true) {\n        int count = html.read(cbuf);\n        if (count == -1)\n          break; // end of stream mark is -1\n        if (count > 0)\n          out.append(cbuf, 0, count);\n      }\n      html.close();\n    } catch (IOException e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed stripping HTML for column: \" + column, e);\n    }\n    return out.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["fc706b1e03a539d44d99998108feb684bb44cbb2"],"aba371508186796cc6151d8223a5b4e16d02e26e":["c26f00b574427b55127e869b935845554afde1fa","fc706b1e03a539d44d99998108feb684bb44cbb2"],"fc706b1e03a539d44d99998108feb684bb44cbb2":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c26f00b574427b55127e869b935845554afde1fa","fc706b1e03a539d44d99998108feb684bb44cbb2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fc706b1e03a539d44d99998108feb684bb44cbb2":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["aba371508186796cc6151d8223a5b4e16d02e26e","fc706b1e03a539d44d99998108feb684bb44cbb2","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}