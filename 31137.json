{"path":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/AddIndexesTaskTest#assertIndex(PerfRunData).mjava","commits":[{"id":"03c7c9b8ab6bd71a8387fb009d3cd4c23cf9cce2","date":1336461747,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/AddIndexesTaskTest#assertIndex(PerfRunData).mjava","pathOld":"/dev/null","sourceNew":"  private void assertIndex(PerfRunData runData) throws Exception {\n    Directory taskDir = runData.getDirectory();\n    assertSame(RAMDirectory.class, taskDir.getClass());\n    IndexReader r = DirectoryReader.open(taskDir);\n    try {\n      assertEquals(10, r.numDocs());\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/AddIndexesTaskTest#assertIndex(PerfRunData).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/AddIndexesTaskTest#assertIndex(PerfRunData).mjava","sourceNew":"  private void assertIndex(PerfRunData runData) throws Exception {\n    Directory taskDir = runData.getDirectory();\n    assertSame(RAMDirectory.class, taskDir.getClass());\n    IndexReader r = DirectoryReader.open(taskDir);\n    try {\n      assertEquals(10, r.numDocs());\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  private void assertIndex(PerfRunData runData) throws Exception {\n    Directory taskDir = runData.getDirectory();\n    assertSame(RAMDirectory.class, taskDir.getClass());\n    IndexReader r = DirectoryReader.open(taskDir);\n    try {\n      assertEquals(10, r.numDocs());\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/AddIndexesTaskTest#assertIndex(PerfRunData).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/AddIndexesTaskTest#assertIndex(PerfRunData).mjava","sourceNew":"  private void assertIndex(PerfRunData runData) throws Exception {\n    Directory taskDir = runData.getDirectory();\n    assertSame(RAMDirectory.class, taskDir.getClass());\n    IndexReader r = DirectoryReader.open(taskDir);\n    try {\n      assertEquals(10, r.numDocs());\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  private void assertIndex(PerfRunData runData) throws Exception {\n    Directory taskDir = runData.getDirectory();\n    assertSame(RAMDirectory.class, taskDir.getClass());\n    IndexReader r = DirectoryReader.open(taskDir);\n    try {\n      assertEquals(10, r.numDocs());\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/AddIndexesTaskTest#assertIndex(PerfRunData).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/AddIndexesTaskTest#assertIndex(PerfRunData).mjava","sourceNew":"  private void assertIndex(PerfRunData runData) throws Exception {\n    Directory taskDir = runData.getDirectory();\n    assertSame(ByteBuffersDirectory.class, taskDir.getClass());\n    IndexReader r = DirectoryReader.open(taskDir);\n    try {\n      assertEquals(10, r.numDocs());\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  private void assertIndex(PerfRunData runData) throws Exception {\n    Directory taskDir = runData.getDirectory();\n    assertSame(RAMDirectory.class, taskDir.getClass());\n    IndexReader r = DirectoryReader.open(taskDir);\n    try {\n      assertEquals(10, r.numDocs());\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["03c7c9b8ab6bd71a8387fb009d3cd4c23cf9cce2"],"d77dafd89756a5161d244985903e3487ca109182":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["03c7c9b8ab6bd71a8387fb009d3cd4c23cf9cce2"],"03c7c9b8ab6bd71a8387fb009d3cd4c23cf9cce2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["03c7c9b8ab6bd71a8387fb009d3cd4c23cf9cce2"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"03c7c9b8ab6bd71a8387fb009d3cd4c23cf9cce2":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["d77dafd89756a5161d244985903e3487ca109182"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}