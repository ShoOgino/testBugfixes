{"path":"solr/core/src/test/org/apache/solr/search/stats/TestDistribIDF#testSimpleQuery().mjava","commits":[{"id":"cc9c42f0c1f89f2b3964f2d39efe57860e578838","date":1438774812,"type":0,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/stats/TestDistribIDF#testSimpleQuery().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSimpleQuery() throws Exception {\n    //3 shards. 3rd shard won't have any data.\n    createCollection(\"onecollection\", \"conf1\", ImplicitDocRouter.NAME);\n    createCollection(\"onecollection_local\", \"conf2\", ImplicitDocRouter.NAME);\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", 1);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"a\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", 2);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"b\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    int nDocs = TestUtil.nextInt(random(), 10, 100);\n    for (int i=0; i<nDocs; i++) {\n      doc = new SolrInputDocument();\n      doc.setField(\"id\", 3 + i);\n      String cat = TestUtil.randomSimpleString(random());\n      if (!cat.equals(\"football\")) { //Making sure no other document has the query term in it.\n        doc.setField(\"cat\", cat);\n        if (rarely()) { //Put most documents in shard b so that 'football' becomes 'rare' in shard b\n          doc.addField(ShardParams._ROUTE_, \"a\");\n        } else {\n          doc.addField(ShardParams._ROUTE_, \"b\");\n        }\n        solrCluster.getSolrClient().add(\"onecollection\", doc);\n        solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n      }\n    }\n\n    solrCluster.getSolrClient().commit(\"onecollection\");\n    solrCluster.getSolrClient().commit(\"onecollection_local\");\n\n    //Test against all nodes\n    for (JettySolrRunner jettySolrRunner : solrCluster.getJettySolrRunners()) {\n      SolrClient solrClient = new HttpSolrClient(jettySolrRunner.getBaseUrl().toString());\n      SolrClient solrClient_local = new HttpSolrClient(jettySolrRunner.getBaseUrl().toString());\n\n      SolrQuery query = new SolrQuery(\"cat:football\");\n      query.setFields(\"*,score\");\n      QueryResponse queryResponse = solrClient.query(\"onecollection\", query);\n      assertEquals(2, queryResponse.getResults().getNumFound());\n      float score1 = (float) queryResponse.getResults().get(0).get(\"score\");\n      float score2 = (float) queryResponse.getResults().get(1).get(\"score\");\n      assertEquals(\"Doc1 score=\" + score1 + \" Doc2 score=\" + score2, 0, Float.compare(score1, score2));\n\n      query = new SolrQuery(\"cat:football\");\n      query.setShowDebugInfo(true);\n      query.setFields(\"*,score\");\n      queryResponse = solrClient_local.query(\"onecollection_local\", query);\n      assertEquals(2, queryResponse.getResults().getNumFound());\n      assertEquals(2, queryResponse.getResults().get(0).get(\"id\"));\n      assertEquals(1, queryResponse.getResults().get(1).get(\"id\"));\n      float score1_local = (float) queryResponse.getResults().get(0).get(\"score\");\n      float score2_local = (float) queryResponse.getResults().get(1).get(\"score\");\n      assertEquals(\"Doc1 score=\" + score1_local + \" Doc2 score=\" + score2_local, 1, Float.compare(score1_local, score2_local));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/stats/TestDistribIDF#testSimpleQuery().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/stats/TestDistribIDF#testSimpleQuery().mjava","sourceNew":"  @Test\n  public void testSimpleQuery() throws Exception {\n    //3 shards. 3rd shard won't have any data.\n    createCollection(\"onecollection\", \"conf1\", ImplicitDocRouter.NAME);\n    createCollection(\"onecollection_local\", \"conf2\", ImplicitDocRouter.NAME);\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", 1);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"a\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", 2);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"b\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    int nDocs = TestUtil.nextInt(random(), 10, 100);\n    for (int i=0; i<nDocs; i++) {\n      doc = new SolrInputDocument();\n      doc.setField(\"id\", 3 + i);\n      String cat = TestUtil.randomSimpleString(random());\n      if (!cat.equals(\"football\")) { //Making sure no other document has the query term in it.\n        doc.setField(\"cat\", cat);\n        if (rarely()) { //Put most documents in shard b so that 'football' becomes 'rare' in shard b\n          doc.addField(ShardParams._ROUTE_, \"a\");\n        } else {\n          doc.addField(ShardParams._ROUTE_, \"b\");\n        }\n        solrCluster.getSolrClient().add(\"onecollection\", doc);\n        solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n      }\n    }\n\n    solrCluster.getSolrClient().commit(\"onecollection\");\n    solrCluster.getSolrClient().commit(\"onecollection_local\");\n\n    //Test against all nodes\n    for (JettySolrRunner jettySolrRunner : solrCluster.getJettySolrRunners()) {\n      try (SolrClient solrClient = new HttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n        try (SolrClient solrClient_local = new HttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n\n          SolrQuery query = new SolrQuery(\"cat:football\");\n          query.setFields(\"*,score\");\n          QueryResponse queryResponse = solrClient.query(\"onecollection\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          float score1 = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2 = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1 + \" Doc2 score=\" + score2, 0, Float.compare(score1, score2));\n\n          query = new SolrQuery(\"cat:football\");\n          query.setShowDebugInfo(true);\n          query.setFields(\"*,score\");\n          queryResponse = solrClient_local.query(\"onecollection_local\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          assertEquals(2, queryResponse.getResults().get(0).get(\"id\"));\n          assertEquals(1, queryResponse.getResults().get(1).get(\"id\"));\n          float score1_local = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2_local = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1_local + \" Doc2 score=\" + score2_local, 1,\n              Float.compare(score1_local, score2_local));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleQuery() throws Exception {\n    //3 shards. 3rd shard won't have any data.\n    createCollection(\"onecollection\", \"conf1\", ImplicitDocRouter.NAME);\n    createCollection(\"onecollection_local\", \"conf2\", ImplicitDocRouter.NAME);\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", 1);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"a\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", 2);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"b\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    int nDocs = TestUtil.nextInt(random(), 10, 100);\n    for (int i=0; i<nDocs; i++) {\n      doc = new SolrInputDocument();\n      doc.setField(\"id\", 3 + i);\n      String cat = TestUtil.randomSimpleString(random());\n      if (!cat.equals(\"football\")) { //Making sure no other document has the query term in it.\n        doc.setField(\"cat\", cat);\n        if (rarely()) { //Put most documents in shard b so that 'football' becomes 'rare' in shard b\n          doc.addField(ShardParams._ROUTE_, \"a\");\n        } else {\n          doc.addField(ShardParams._ROUTE_, \"b\");\n        }\n        solrCluster.getSolrClient().add(\"onecollection\", doc);\n        solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n      }\n    }\n\n    solrCluster.getSolrClient().commit(\"onecollection\");\n    solrCluster.getSolrClient().commit(\"onecollection_local\");\n\n    //Test against all nodes\n    for (JettySolrRunner jettySolrRunner : solrCluster.getJettySolrRunners()) {\n      SolrClient solrClient = new HttpSolrClient(jettySolrRunner.getBaseUrl().toString());\n      SolrClient solrClient_local = new HttpSolrClient(jettySolrRunner.getBaseUrl().toString());\n\n      SolrQuery query = new SolrQuery(\"cat:football\");\n      query.setFields(\"*,score\");\n      QueryResponse queryResponse = solrClient.query(\"onecollection\", query);\n      assertEquals(2, queryResponse.getResults().getNumFound());\n      float score1 = (float) queryResponse.getResults().get(0).get(\"score\");\n      float score2 = (float) queryResponse.getResults().get(1).get(\"score\");\n      assertEquals(\"Doc1 score=\" + score1 + \" Doc2 score=\" + score2, 0, Float.compare(score1, score2));\n\n      query = new SolrQuery(\"cat:football\");\n      query.setShowDebugInfo(true);\n      query.setFields(\"*,score\");\n      queryResponse = solrClient_local.query(\"onecollection_local\", query);\n      assertEquals(2, queryResponse.getResults().getNumFound());\n      assertEquals(2, queryResponse.getResults().get(0).get(\"id\"));\n      assertEquals(1, queryResponse.getResults().get(1).get(\"id\"));\n      float score1_local = (float) queryResponse.getResults().get(0).get(\"score\");\n      float score2_local = (float) queryResponse.getResults().get(1).get(\"score\");\n      assertEquals(\"Doc1 score=\" + score1_local + \" Doc2 score=\" + score2_local, 1, Float.compare(score1_local, score2_local));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/stats/TestDistribIDF#testSimpleQuery().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/stats/TestDistribIDF#testSimpleQuery().mjava","sourceNew":"  @Test\n  public void testSimpleQuery() throws Exception {\n    //3 shards. 3rd shard won't have any data.\n    createCollection(\"onecollection\", \"conf1\", ImplicitDocRouter.NAME);\n    createCollection(\"onecollection_local\", \"conf2\", ImplicitDocRouter.NAME);\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", 1);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"a\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", 2);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"b\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    int nDocs = TestUtil.nextInt(random(), 10, 100);\n    for (int i=0; i<nDocs; i++) {\n      doc = new SolrInputDocument();\n      doc.setField(\"id\", 3 + i);\n      String cat = TestUtil.randomSimpleString(random());\n      if (!cat.equals(\"football\")) { //Making sure no other document has the query term in it.\n        doc.setField(\"cat\", cat);\n        if (rarely()) { //Put most documents in shard b so that 'football' becomes 'rare' in shard b\n          doc.addField(ShardParams._ROUTE_, \"a\");\n        } else {\n          doc.addField(ShardParams._ROUTE_, \"b\");\n        }\n        solrCluster.getSolrClient().add(\"onecollection\", doc);\n        solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n      }\n    }\n\n    solrCluster.getSolrClient().commit(\"onecollection\");\n    solrCluster.getSolrClient().commit(\"onecollection_local\");\n\n    //Test against all nodes\n    for (JettySolrRunner jettySolrRunner : solrCluster.getJettySolrRunners()) {\n      try (SolrClient solrClient = getHttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n        try (SolrClient solrClient_local = getHttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n\n          SolrQuery query = new SolrQuery(\"cat:football\");\n          query.setFields(\"*,score\");\n          QueryResponse queryResponse = solrClient.query(\"onecollection\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          float score1 = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2 = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1 + \" Doc2 score=\" + score2, 0, Float.compare(score1, score2));\n\n          query = new SolrQuery(\"cat:football\");\n          query.setShowDebugInfo(true);\n          query.setFields(\"*,score\");\n          queryResponse = solrClient_local.query(\"onecollection_local\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          assertEquals(2, queryResponse.getResults().get(0).get(\"id\"));\n          assertEquals(1, queryResponse.getResults().get(1).get(\"id\"));\n          float score1_local = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2_local = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1_local + \" Doc2 score=\" + score2_local, 1,\n              Float.compare(score1_local, score2_local));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleQuery() throws Exception {\n    //3 shards. 3rd shard won't have any data.\n    createCollection(\"onecollection\", \"conf1\", ImplicitDocRouter.NAME);\n    createCollection(\"onecollection_local\", \"conf2\", ImplicitDocRouter.NAME);\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", 1);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"a\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", 2);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"b\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    int nDocs = TestUtil.nextInt(random(), 10, 100);\n    for (int i=0; i<nDocs; i++) {\n      doc = new SolrInputDocument();\n      doc.setField(\"id\", 3 + i);\n      String cat = TestUtil.randomSimpleString(random());\n      if (!cat.equals(\"football\")) { //Making sure no other document has the query term in it.\n        doc.setField(\"cat\", cat);\n        if (rarely()) { //Put most documents in shard b so that 'football' becomes 'rare' in shard b\n          doc.addField(ShardParams._ROUTE_, \"a\");\n        } else {\n          doc.addField(ShardParams._ROUTE_, \"b\");\n        }\n        solrCluster.getSolrClient().add(\"onecollection\", doc);\n        solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n      }\n    }\n\n    solrCluster.getSolrClient().commit(\"onecollection\");\n    solrCluster.getSolrClient().commit(\"onecollection_local\");\n\n    //Test against all nodes\n    for (JettySolrRunner jettySolrRunner : solrCluster.getJettySolrRunners()) {\n      try (SolrClient solrClient = new HttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n        try (SolrClient solrClient_local = new HttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n\n          SolrQuery query = new SolrQuery(\"cat:football\");\n          query.setFields(\"*,score\");\n          QueryResponse queryResponse = solrClient.query(\"onecollection\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          float score1 = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2 = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1 + \" Doc2 score=\" + score2, 0, Float.compare(score1, score2));\n\n          query = new SolrQuery(\"cat:football\");\n          query.setShowDebugInfo(true);\n          query.setFields(\"*,score\");\n          queryResponse = solrClient_local.query(\"onecollection_local\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          assertEquals(2, queryResponse.getResults().get(0).get(\"id\"));\n          assertEquals(1, queryResponse.getResults().get(1).get(\"id\"));\n          float score1_local = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2_local = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1_local + \" Doc2 score=\" + score2_local, 1,\n              Float.compare(score1_local, score2_local));\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/stats/TestDistribIDF#testSimpleQuery().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/stats/TestDistribIDF#testSimpleQuery().mjava","sourceNew":"  @Test\n  public void testSimpleQuery() throws Exception {\n    //3 shards. 3rd shard won't have any data.\n    createCollection(\"onecollection\", \"conf1\", ImplicitDocRouter.NAME);\n    createCollection(\"onecollection_local\", \"conf2\", ImplicitDocRouter.NAME);\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", 1);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"a\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", 2);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"b\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    int nDocs = TestUtil.nextInt(random(), 10, 100);\n    for (int i=0; i<nDocs; i++) {\n      doc = new SolrInputDocument();\n      doc.setField(\"id\", 3 + i);\n      String cat = TestUtil.randomSimpleString(random());\n      if (!cat.equals(\"football\")) { //Making sure no other document has the query term in it.\n        doc.setField(\"cat\", cat);\n        if (rarely()) { //Put most documents in shard b so that 'football' becomes 'rare' in shard b\n          doc.addField(ShardParams._ROUTE_, \"a\");\n        } else {\n          doc.addField(ShardParams._ROUTE_, \"b\");\n        }\n        solrCluster.getSolrClient().add(\"onecollection\", doc);\n        solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n      }\n    }\n\n    solrCluster.getSolrClient().commit(\"onecollection\");\n    solrCluster.getSolrClient().commit(\"onecollection_local\");\n\n    //Test against all nodes\n    for (JettySolrRunner jettySolrRunner : solrCluster.getJettySolrRunners()) {\n      try (SolrClient solrClient = getHttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n        try (SolrClient solrClient_local = getHttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n\n          SolrQuery query = new SolrQuery(\"cat:football\");\n          query.setFields(\"*,score\");\n          QueryResponse queryResponse = solrClient.query(\"onecollection\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          float score1 = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2 = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1 + \" Doc2 score=\" + score2, 0, Float.compare(score1, score2));\n\n          query = new SolrQuery(\"cat:football\");\n          query.setShowDebugInfo(true);\n          query.setFields(\"*,score\");\n          queryResponse = solrClient_local.query(\"onecollection_local\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          assertEquals(2, queryResponse.getResults().get(0).get(\"id\"));\n          assertEquals(1, queryResponse.getResults().get(1).get(\"id\"));\n          float score1_local = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2_local = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1_local + \" Doc2 score=\" + score2_local, 1,\n              Float.compare(score1_local, score2_local));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleQuery() throws Exception {\n    //3 shards. 3rd shard won't have any data.\n    createCollection(\"onecollection\", \"conf1\", ImplicitDocRouter.NAME);\n    createCollection(\"onecollection_local\", \"conf2\", ImplicitDocRouter.NAME);\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", 1);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"a\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", 2);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"b\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    int nDocs = TestUtil.nextInt(random(), 10, 100);\n    for (int i=0; i<nDocs; i++) {\n      doc = new SolrInputDocument();\n      doc.setField(\"id\", 3 + i);\n      String cat = TestUtil.randomSimpleString(random());\n      if (!cat.equals(\"football\")) { //Making sure no other document has the query term in it.\n        doc.setField(\"cat\", cat);\n        if (rarely()) { //Put most documents in shard b so that 'football' becomes 'rare' in shard b\n          doc.addField(ShardParams._ROUTE_, \"a\");\n        } else {\n          doc.addField(ShardParams._ROUTE_, \"b\");\n        }\n        solrCluster.getSolrClient().add(\"onecollection\", doc);\n        solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n      }\n    }\n\n    solrCluster.getSolrClient().commit(\"onecollection\");\n    solrCluster.getSolrClient().commit(\"onecollection_local\");\n\n    //Test against all nodes\n    for (JettySolrRunner jettySolrRunner : solrCluster.getJettySolrRunners()) {\n      try (SolrClient solrClient = new HttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n        try (SolrClient solrClient_local = new HttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n\n          SolrQuery query = new SolrQuery(\"cat:football\");\n          query.setFields(\"*,score\");\n          QueryResponse queryResponse = solrClient.query(\"onecollection\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          float score1 = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2 = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1 + \" Doc2 score=\" + score2, 0, Float.compare(score1, score2));\n\n          query = new SolrQuery(\"cat:football\");\n          query.setShowDebugInfo(true);\n          query.setFields(\"*,score\");\n          queryResponse = solrClient_local.query(\"onecollection_local\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          assertEquals(2, queryResponse.getResults().get(0).get(\"id\"));\n          assertEquals(1, queryResponse.getResults().get(1).get(\"id\"));\n          float score1_local = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2_local = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1_local + \" Doc2 score=\" + score2_local, 1,\n              Float.compare(score1_local, score2_local));\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/stats/TestDistribIDF#testSimpleQuery().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/stats/TestDistribIDF#testSimpleQuery().mjava","sourceNew":"  @Test\n  public void testSimpleQuery() throws Exception {\n    //3 shards. 3rd shard won't have any data.\n    createCollection(\"onecollection\", \"conf1\", ImplicitDocRouter.NAME);\n    createCollection(\"onecollection_local\", \"conf2\", ImplicitDocRouter.NAME);\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"a\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"2\");\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"b\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    int nDocs = TestUtil.nextInt(random(), 10, 100);\n    for (int i=0; i<nDocs; i++) {\n      doc = new SolrInputDocument();\n      doc.setField(\"id\", \"\" + (3 + i));\n      String cat = TestUtil.randomSimpleString(random());\n      if (!cat.equals(\"football\")) { //Making sure no other document has the query term in it.\n        doc.setField(\"cat\", cat);\n        if (rarely()) { //Put most documents in shard b so that 'football' becomes 'rare' in shard b\n          doc.addField(ShardParams._ROUTE_, \"a\");\n        } else {\n          doc.addField(ShardParams._ROUTE_, \"b\");\n        }\n        solrCluster.getSolrClient().add(\"onecollection\", doc);\n        solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n      }\n    }\n\n    solrCluster.getSolrClient().commit(\"onecollection\");\n    solrCluster.getSolrClient().commit(\"onecollection_local\");\n\n    //Test against all nodes\n    for (JettySolrRunner jettySolrRunner : solrCluster.getJettySolrRunners()) {\n      try (SolrClient solrClient = getHttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n        try (SolrClient solrClient_local = getHttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n\n          SolrQuery query = new SolrQuery(\"cat:football\");\n          query.setFields(\"*,score\");\n          QueryResponse queryResponse = solrClient.query(\"onecollection\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          float score1 = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2 = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1 + \" Doc2 score=\" + score2, 0, Float.compare(score1, score2));\n\n          query = new SolrQuery(\"cat:football\");\n          query.setShowDebugInfo(true);\n          query.setFields(\"*,score\");\n          queryResponse = solrClient_local.query(\"onecollection_local\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          assertEquals(\"2\", queryResponse.getResults().get(0).get(\"id\"));\n          assertEquals(\"1\", queryResponse.getResults().get(1).get(\"id\"));\n          float score1_local = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2_local = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1_local + \" Doc2 score=\" + score2_local, 1,\n              Float.compare(score1_local, score2_local));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleQuery() throws Exception {\n    //3 shards. 3rd shard won't have any data.\n    createCollection(\"onecollection\", \"conf1\", ImplicitDocRouter.NAME);\n    createCollection(\"onecollection_local\", \"conf2\", ImplicitDocRouter.NAME);\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", 1);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"a\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", 2);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"b\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    int nDocs = TestUtil.nextInt(random(), 10, 100);\n    for (int i=0; i<nDocs; i++) {\n      doc = new SolrInputDocument();\n      doc.setField(\"id\", 3 + i);\n      String cat = TestUtil.randomSimpleString(random());\n      if (!cat.equals(\"football\")) { //Making sure no other document has the query term in it.\n        doc.setField(\"cat\", cat);\n        if (rarely()) { //Put most documents in shard b so that 'football' becomes 'rare' in shard b\n          doc.addField(ShardParams._ROUTE_, \"a\");\n        } else {\n          doc.addField(ShardParams._ROUTE_, \"b\");\n        }\n        solrCluster.getSolrClient().add(\"onecollection\", doc);\n        solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n      }\n    }\n\n    solrCluster.getSolrClient().commit(\"onecollection\");\n    solrCluster.getSolrClient().commit(\"onecollection_local\");\n\n    //Test against all nodes\n    for (JettySolrRunner jettySolrRunner : solrCluster.getJettySolrRunners()) {\n      try (SolrClient solrClient = getHttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n        try (SolrClient solrClient_local = getHttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n\n          SolrQuery query = new SolrQuery(\"cat:football\");\n          query.setFields(\"*,score\");\n          QueryResponse queryResponse = solrClient.query(\"onecollection\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          float score1 = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2 = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1 + \" Doc2 score=\" + score2, 0, Float.compare(score1, score2));\n\n          query = new SolrQuery(\"cat:football\");\n          query.setShowDebugInfo(true);\n          query.setFields(\"*,score\");\n          queryResponse = solrClient_local.query(\"onecollection_local\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          assertEquals(2, queryResponse.getResults().get(0).get(\"id\"));\n          assertEquals(1, queryResponse.getResults().get(1).get(\"id\"));\n          float score1_local = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2_local = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1_local + \" Doc2 score=\" + score2_local, 1,\n              Float.compare(score1_local, score2_local));\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/stats/TestDistribIDF#testSimpleQuery().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/stats/TestDistribIDF#testSimpleQuery().mjava","sourceNew":"  @Test\n  public void testSimpleQuery() throws Exception {\n    //3 shards. 3rd shard won't have any data.\n    createCollection(\"onecollection\", \"conf1\", ImplicitDocRouter.NAME);\n    createCollection(\"onecollection_local\", \"conf2\", ImplicitDocRouter.NAME);\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"a\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"2\");\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"b\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    int nDocs = TestUtil.nextInt(random(), 10, 100);\n    for (int i=0; i<nDocs; i++) {\n      doc = new SolrInputDocument();\n      doc.setField(\"id\", \"\" + (3 + i));\n      String cat = TestUtil.randomSimpleString(random());\n      if (!cat.equals(\"football\")) { //Making sure no other document has the query term in it.\n        doc.setField(\"cat\", cat);\n        if (rarely()) { //Put most documents in shard b so that 'football' becomes 'rare' in shard b\n          doc.addField(ShardParams._ROUTE_, \"a\");\n        } else {\n          doc.addField(ShardParams._ROUTE_, \"b\");\n        }\n        solrCluster.getSolrClient().add(\"onecollection\", doc);\n        solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n      }\n    }\n\n    solrCluster.getSolrClient().commit(\"onecollection\");\n    solrCluster.getSolrClient().commit(\"onecollection_local\");\n\n    //Test against all nodes\n    for (JettySolrRunner jettySolrRunner : solrCluster.getJettySolrRunners()) {\n      try (SolrClient solrClient = getHttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n        try (SolrClient solrClient_local = getHttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n\n          SolrQuery query = new SolrQuery(\"cat:football\");\n          query.setFields(\"*,score\");\n          QueryResponse queryResponse = solrClient.query(\"onecollection\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          float score1 = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2 = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1 + \" Doc2 score=\" + score2, 0, Float.compare(score1, score2));\n\n          query = new SolrQuery(\"cat:football\");\n          query.setShowDebugInfo(true);\n          query.setFields(\"*,score\");\n          queryResponse = solrClient_local.query(\"onecollection_local\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          assertEquals(\"2\", queryResponse.getResults().get(0).get(\"id\"));\n          assertEquals(\"1\", queryResponse.getResults().get(1).get(\"id\"));\n          float score1_local = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2_local = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1_local + \" Doc2 score=\" + score2_local, 1,\n              Float.compare(score1_local, score2_local));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleQuery() throws Exception {\n    //3 shards. 3rd shard won't have any data.\n    createCollection(\"onecollection\", \"conf1\", ImplicitDocRouter.NAME);\n    createCollection(\"onecollection_local\", \"conf2\", ImplicitDocRouter.NAME);\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", 1);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"a\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", 2);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"b\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    int nDocs = TestUtil.nextInt(random(), 10, 100);\n    for (int i=0; i<nDocs; i++) {\n      doc = new SolrInputDocument();\n      doc.setField(\"id\", 3 + i);\n      String cat = TestUtil.randomSimpleString(random());\n      if (!cat.equals(\"football\")) { //Making sure no other document has the query term in it.\n        doc.setField(\"cat\", cat);\n        if (rarely()) { //Put most documents in shard b so that 'football' becomes 'rare' in shard b\n          doc.addField(ShardParams._ROUTE_, \"a\");\n        } else {\n          doc.addField(ShardParams._ROUTE_, \"b\");\n        }\n        solrCluster.getSolrClient().add(\"onecollection\", doc);\n        solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n      }\n    }\n\n    solrCluster.getSolrClient().commit(\"onecollection\");\n    solrCluster.getSolrClient().commit(\"onecollection_local\");\n\n    //Test against all nodes\n    for (JettySolrRunner jettySolrRunner : solrCluster.getJettySolrRunners()) {\n      try (SolrClient solrClient = getHttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n        try (SolrClient solrClient_local = getHttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n\n          SolrQuery query = new SolrQuery(\"cat:football\");\n          query.setFields(\"*,score\");\n          QueryResponse queryResponse = solrClient.query(\"onecollection\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          float score1 = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2 = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1 + \" Doc2 score=\" + score2, 0, Float.compare(score1, score2));\n\n          query = new SolrQuery(\"cat:football\");\n          query.setShowDebugInfo(true);\n          query.setFields(\"*,score\");\n          queryResponse = solrClient_local.query(\"onecollection_local\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          assertEquals(2, queryResponse.getResults().get(0).get(\"id\"));\n          assertEquals(1, queryResponse.getResults().get(1).get(\"id\"));\n          float score1_local = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2_local = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1_local + \" Doc2 score=\" + score2_local, 1,\n              Float.compare(score1_local, score2_local));\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/stats/TestDistribIDF#testSimpleQuery().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/stats/TestDistribIDF#testSimpleQuery().mjava","sourceNew":"  @Test\n  public void testSimpleQuery() throws Exception {\n    //3 shards. 3rd shard won't have any data.\n    createCollection(\"onecollection\", \"conf1\", ImplicitDocRouter.NAME);\n    createCollection(\"onecollection_local\", \"conf2\", ImplicitDocRouter.NAME);\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"a\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"2\");\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"b\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    int nDocs = TestUtil.nextInt(random(), 10, 100);\n    for (int i=0; i<nDocs; i++) {\n      doc = new SolrInputDocument();\n      doc.setField(\"id\", \"\" + (3 + i));\n      String cat = TestUtil.randomSimpleString(random());\n      if (!cat.equals(\"football\")) { //Making sure no other document has the query term in it.\n        doc.setField(\"cat\", cat);\n        if (rarely()) { //Put most documents in shard b so that 'football' becomes 'rare' in shard b\n          doc.addField(ShardParams._ROUTE_, \"a\");\n        } else {\n          doc.addField(ShardParams._ROUTE_, \"b\");\n        }\n        solrCluster.getSolrClient().add(\"onecollection\", doc);\n        solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n      }\n    }\n\n    solrCluster.getSolrClient().commit(\"onecollection\");\n    solrCluster.getSolrClient().commit(\"onecollection_local\");\n\n    //Test against all nodes\n    for (JettySolrRunner jettySolrRunner : solrCluster.getJettySolrRunners()) {\n      try (SolrClient solrClient = getHttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n        try (SolrClient solrClient_local = getHttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n\n          SolrQuery query = new SolrQuery(\"cat:football\");\n          query.setFields(\"*,score\");\n          QueryResponse queryResponse = solrClient.query(\"onecollection\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          float score1 = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2 = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1 + \" Doc2 score=\" + score2, 0, Float.compare(score1, score2));\n\n          query = new SolrQuery(\"cat:football\");\n          query.setShowDebugInfo(true);\n          query.setFields(\"*,score\");\n          queryResponse = solrClient_local.query(\"onecollection_local\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          assertEquals(\"2\", queryResponse.getResults().get(0).get(\"id\"));\n          assertEquals(\"1\", queryResponse.getResults().get(1).get(\"id\"));\n          float score1_local = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2_local = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1_local + \" Doc2 score=\" + score2_local, 1,\n              Float.compare(score1_local, score2_local));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleQuery() throws Exception {\n    //3 shards. 3rd shard won't have any data.\n    createCollection(\"onecollection\", \"conf1\", ImplicitDocRouter.NAME);\n    createCollection(\"onecollection_local\", \"conf2\", ImplicitDocRouter.NAME);\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", 1);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"a\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", 2);\n    doc.setField(\"cat\", \"football\");\n    doc.addField(ShardParams._ROUTE_, \"b\");\n    solrCluster.getSolrClient().add(\"onecollection\", doc);\n    solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n\n    int nDocs = TestUtil.nextInt(random(), 10, 100);\n    for (int i=0; i<nDocs; i++) {\n      doc = new SolrInputDocument();\n      doc.setField(\"id\", 3 + i);\n      String cat = TestUtil.randomSimpleString(random());\n      if (!cat.equals(\"football\")) { //Making sure no other document has the query term in it.\n        doc.setField(\"cat\", cat);\n        if (rarely()) { //Put most documents in shard b so that 'football' becomes 'rare' in shard b\n          doc.addField(ShardParams._ROUTE_, \"a\");\n        } else {\n          doc.addField(ShardParams._ROUTE_, \"b\");\n        }\n        solrCluster.getSolrClient().add(\"onecollection\", doc);\n        solrCluster.getSolrClient().add(\"onecollection_local\", doc);\n      }\n    }\n\n    solrCluster.getSolrClient().commit(\"onecollection\");\n    solrCluster.getSolrClient().commit(\"onecollection_local\");\n\n    //Test against all nodes\n    for (JettySolrRunner jettySolrRunner : solrCluster.getJettySolrRunners()) {\n      try (SolrClient solrClient = getHttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n        try (SolrClient solrClient_local = getHttpSolrClient(jettySolrRunner.getBaseUrl().toString())) {\n\n          SolrQuery query = new SolrQuery(\"cat:football\");\n          query.setFields(\"*,score\");\n          QueryResponse queryResponse = solrClient.query(\"onecollection\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          float score1 = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2 = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1 + \" Doc2 score=\" + score2, 0, Float.compare(score1, score2));\n\n          query = new SolrQuery(\"cat:football\");\n          query.setShowDebugInfo(true);\n          query.setFields(\"*,score\");\n          queryResponse = solrClient_local.query(\"onecollection_local\", query);\n          assertEquals(2, queryResponse.getResults().getNumFound());\n          assertEquals(2, queryResponse.getResults().get(0).get(\"id\"));\n          assertEquals(1, queryResponse.getResults().get(1).get(\"id\"));\n          float score1_local = (float) queryResponse.getResults().get(0).get(\"score\");\n          float score2_local = (float) queryResponse.getResults().get(1).get(\"score\");\n          assertEquals(\"Doc1 score=\" + score1_local + \" Doc2 score=\" + score2_local, 1,\n              Float.compare(score1_local, score2_local));\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"859081acf00749f5dd462772c571d611d4a4d2db":["cc9c42f0c1f89f2b3964f2d39efe57860e578838"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["859081acf00749f5dd462772c571d611d4a4d2db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a71f63026529f3c1f03cfdd664910873ab2369ae":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["859081acf00749f5dd462772c571d611d4a4d2db","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"cc9c42f0c1f89f2b3964f2d39efe57860e578838":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","a71f63026529f3c1f03cfdd664910873ab2369ae"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"859081acf00749f5dd462772c571d611d4a4d2db":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cc9c42f0c1f89f2b3964f2d39efe57860e578838"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"cc9c42f0c1f89f2b3964f2d39efe57860e578838":["859081acf00749f5dd462772c571d611d4a4d2db"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}