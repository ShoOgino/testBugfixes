{"path":"modules/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoNonEmptyByteArrays().mjava","commits":[{"id":"89f15687f60bd49cd3d9de427e85c17fd9397d61","date":1309381327,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoNonEmptyByteArrays().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTwoNonEmptyByteArrays() throws Exception {\n    // add document with a category containing data for both enhancements\n    Directory indexDir = new RAMDirectory();\n    Directory taxoDir = new RAMDirectory();\n\n    EnhancementsIndexingParams indexingParams = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy2(),\n          new CategoryEnhancementDummy3());\n\n    List<CategoryPath> categoryPaths = new ArrayList<CategoryPath>();\n    categoryPaths.add(new CategoryPath(\"a\", \"b\"));\n\n    IndexWriter indexWriter = new IndexWriter(indexDir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    TaxonomyWriter taxo = new LuceneTaxonomyWriter(taxoDir);\n\n    // a category document builder will add the categories to a document\n    // once build() is called\n    Document doc = new Document();\n    indexWriter.addDocument(new EnhancementsDocumentBuilder(taxo,\n        indexingParams).setCategoryPaths(categoryPaths).build(doc));\n\n    indexWriter.close();\n\n    IndexReader indexReader = IndexReader.open(indexDir);\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"a\",\"b\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n\n    assertTrue(\"EnhancementsPayloadIterator failure\", iterator.init());\n    assertTrue(\"Missing document 0\", iterator.setdoc(0));\n    byte[] dummy2 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy2());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy2\", Arrays\n        .equals(dummy2, CategoryEnhancementDummy2.CATEGORY_TOKEN_BYTES));\n    byte[] dummy3 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy3());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy3\", Arrays\n        .equals(dummy3, CategoryEnhancementDummy3.CATEGORY_TOKEN_BYTES));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a4df66e06e0c3b520d7d5941e1c043076f06f17","date":1309454196,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoNonEmptyByteArrays().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoNonEmptyByteArrays().mjava","sourceNew":"  @Test\n  public void testTwoNonEmptyByteArrays() throws Exception {\n    // add document with a category containing data for both enhancements\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    EnhancementsIndexingParams indexingParams = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy2(),\n          new CategoryEnhancementDummy3());\n\n    List<CategoryPath> categoryPaths = new ArrayList<CategoryPath>();\n    categoryPaths.add(new CategoryPath(\"a\", \"b\"));\n\n    RandomIndexWriter indexWriter = new RandomIndexWriter(random, indexDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n    TaxonomyWriter taxo = new LuceneTaxonomyWriter(taxoDir);\n\n    // a category document builder will add the categories to a document\n    // once build() is called\n    Document doc = new Document();\n    indexWriter.addDocument(new EnhancementsDocumentBuilder(taxo,\n        indexingParams).setCategoryPaths(categoryPaths).build(doc));\n\n    IndexReader indexReader = indexWriter.getReader();\n    indexWriter.close();\n\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"a\",\"b\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n\n    assertTrue(\"EnhancementsPayloadIterator failure\", iterator.init());\n    assertTrue(\"Missing document 0\", iterator.setdoc(0));\n    byte[] dummy2 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy2());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy2\", Arrays\n        .equals(dummy2, CategoryEnhancementDummy2.CATEGORY_TOKEN_BYTES));\n    byte[] dummy3 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy3());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy3\", Arrays\n        .equals(dummy3, CategoryEnhancementDummy3.CATEGORY_TOKEN_BYTES));\n    indexReader.close();\n    taxo.close();\n    indexDir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testTwoNonEmptyByteArrays() throws Exception {\n    // add document with a category containing data for both enhancements\n    Directory indexDir = new RAMDirectory();\n    Directory taxoDir = new RAMDirectory();\n\n    EnhancementsIndexingParams indexingParams = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy2(),\n          new CategoryEnhancementDummy3());\n\n    List<CategoryPath> categoryPaths = new ArrayList<CategoryPath>();\n    categoryPaths.add(new CategoryPath(\"a\", \"b\"));\n\n    IndexWriter indexWriter = new IndexWriter(indexDir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    TaxonomyWriter taxo = new LuceneTaxonomyWriter(taxoDir);\n\n    // a category document builder will add the categories to a document\n    // once build() is called\n    Document doc = new Document();\n    indexWriter.addDocument(new EnhancementsDocumentBuilder(taxo,\n        indexingParams).setCategoryPaths(categoryPaths).build(doc));\n\n    indexWriter.close();\n\n    IndexReader indexReader = IndexReader.open(indexDir);\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"a\",\"b\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n\n    assertTrue(\"EnhancementsPayloadIterator failure\", iterator.init());\n    assertTrue(\"Missing document 0\", iterator.setdoc(0));\n    byte[] dummy2 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy2());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy2\", Arrays\n        .equals(dummy2, CategoryEnhancementDummy2.CATEGORY_TOKEN_BYTES));\n    byte[] dummy3 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy3());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy3\", Arrays\n        .equals(dummy3, CategoryEnhancementDummy3.CATEGORY_TOKEN_BYTES));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoNonEmptyByteArrays().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTwoNonEmptyByteArrays() throws Exception {\n    // add document with a category containing data for both enhancements\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    EnhancementsIndexingParams indexingParams = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy2(),\n          new CategoryEnhancementDummy3());\n\n    List<CategoryPath> categoryPaths = new ArrayList<CategoryPath>();\n    categoryPaths.add(new CategoryPath(\"a\", \"b\"));\n\n    RandomIndexWriter indexWriter = new RandomIndexWriter(random, indexDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n    TaxonomyWriter taxo = new LuceneTaxonomyWriter(taxoDir);\n\n    // a category document builder will add the categories to a document\n    // once build() is called\n    Document doc = new Document();\n    indexWriter.addDocument(new EnhancementsDocumentBuilder(taxo,\n        indexingParams).setCategoryPaths(categoryPaths).build(doc));\n\n    IndexReader indexReader = indexWriter.getReader();\n    indexWriter.close();\n\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"a\",\"b\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n\n    assertTrue(\"EnhancementsPayloadIterator failure\", iterator.init());\n    assertTrue(\"Missing document 0\", iterator.setdoc(0));\n    byte[] dummy2 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy2());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy2\", Arrays\n        .equals(dummy2, CategoryEnhancementDummy2.CATEGORY_TOKEN_BYTES));\n    byte[] dummy3 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy3());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy3\", Arrays\n        .equals(dummy3, CategoryEnhancementDummy3.CATEGORY_TOKEN_BYTES));\n    indexReader.close();\n    taxo.close();\n    indexDir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoNonEmptyByteArrays().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTwoNonEmptyByteArrays() throws Exception {\n    // add document with a category containing data for both enhancements\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    EnhancementsIndexingParams indexingParams = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy2(),\n          new CategoryEnhancementDummy3());\n\n    List<CategoryPath> categoryPaths = new ArrayList<CategoryPath>();\n    categoryPaths.add(new CategoryPath(\"a\", \"b\"));\n\n    RandomIndexWriter indexWriter = new RandomIndexWriter(random, indexDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n    TaxonomyWriter taxo = new LuceneTaxonomyWriter(taxoDir);\n\n    // a category document builder will add the categories to a document\n    // once build() is called\n    Document doc = new Document();\n    indexWriter.addDocument(new EnhancementsDocumentBuilder(taxo,\n        indexingParams).setCategoryPaths(categoryPaths).build(doc));\n\n    IndexReader indexReader = indexWriter.getReader();\n    indexWriter.close();\n\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"a\",\"b\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n\n    assertTrue(\"EnhancementsPayloadIterator failure\", iterator.init());\n    assertTrue(\"Missing document 0\", iterator.setdoc(0));\n    byte[] dummy2 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy2());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy2\", Arrays\n        .equals(dummy2, CategoryEnhancementDummy2.CATEGORY_TOKEN_BYTES));\n    byte[] dummy3 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy3());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy3\", Arrays\n        .equals(dummy3, CategoryEnhancementDummy3.CATEGORY_TOKEN_BYTES));\n    indexReader.close();\n    taxo.close();\n    indexDir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea469eab8fd0f3032f4fcde1c644a721e8309d3b","date":1320301582,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoNonEmptyByteArrays().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoNonEmptyByteArrays().mjava","sourceNew":"  @Test\n  public void testTwoNonEmptyByteArrays() throws Exception {\n    // add document with a category containing data for both enhancements\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    EnhancementsIndexingParams indexingParams = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy2(),\n          new CategoryEnhancementDummy3());\n\n    List<CategoryPath> categoryPaths = new ArrayList<CategoryPath>();\n    categoryPaths.add(new CategoryPath(\"a\", \"b\"));\n\n    RandomIndexWriter indexWriter = new RandomIndexWriter(random, indexDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n    TaxonomyWriter taxo = new DirectoryTaxonomyWriter(taxoDir);\n\n    // a category document builder will add the categories to a document\n    // once build() is called\n    Document doc = new Document();\n    indexWriter.addDocument(new EnhancementsDocumentBuilder(taxo,\n        indexingParams).setCategoryPaths(categoryPaths).build(doc));\n\n    IndexReader indexReader = indexWriter.getReader();\n    indexWriter.close();\n\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"a\",\"b\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n\n    assertTrue(\"EnhancementsPayloadIterator failure\", iterator.init());\n    assertTrue(\"Missing document 0\", iterator.setdoc(0));\n    byte[] dummy2 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy2());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy2\", Arrays\n        .equals(dummy2, CategoryEnhancementDummy2.CATEGORY_TOKEN_BYTES));\n    byte[] dummy3 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy3());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy3\", Arrays\n        .equals(dummy3, CategoryEnhancementDummy3.CATEGORY_TOKEN_BYTES));\n    indexReader.close();\n    taxo.close();\n    indexDir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testTwoNonEmptyByteArrays() throws Exception {\n    // add document with a category containing data for both enhancements\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    EnhancementsIndexingParams indexingParams = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy2(),\n          new CategoryEnhancementDummy3());\n\n    List<CategoryPath> categoryPaths = new ArrayList<CategoryPath>();\n    categoryPaths.add(new CategoryPath(\"a\", \"b\"));\n\n    RandomIndexWriter indexWriter = new RandomIndexWriter(random, indexDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n    TaxonomyWriter taxo = new LuceneTaxonomyWriter(taxoDir);\n\n    // a category document builder will add the categories to a document\n    // once build() is called\n    Document doc = new Document();\n    indexWriter.addDocument(new EnhancementsDocumentBuilder(taxo,\n        indexingParams).setCategoryPaths(categoryPaths).build(doc));\n\n    IndexReader indexReader = indexWriter.getReader();\n    indexWriter.close();\n\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"a\",\"b\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n\n    assertTrue(\"EnhancementsPayloadIterator failure\", iterator.init());\n    assertTrue(\"Missing document 0\", iterator.setdoc(0));\n    byte[] dummy2 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy2());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy2\", Arrays\n        .equals(dummy2, CategoryEnhancementDummy2.CATEGORY_TOKEN_BYTES));\n    byte[] dummy3 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy3());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy3\", Arrays\n        .equals(dummy3, CategoryEnhancementDummy3.CATEGORY_TOKEN_BYTES));\n    indexReader.close();\n    taxo.close();\n    indexDir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoNonEmptyByteArrays().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoNonEmptyByteArrays().mjava","sourceNew":"  @Test\n  public void testTwoNonEmptyByteArrays() throws Exception {\n    // add document with a category containing data for both enhancements\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    EnhancementsIndexingParams indexingParams = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy2(),\n          new CategoryEnhancementDummy3());\n\n    List<CategoryPath> categoryPaths = new ArrayList<CategoryPath>();\n    categoryPaths.add(new CategoryPath(\"a\", \"b\"));\n\n    RandomIndexWriter indexWriter = new RandomIndexWriter(random(), indexDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)));\n    TaxonomyWriter taxo = new DirectoryTaxonomyWriter(taxoDir);\n\n    // a category document builder will add the categories to a document\n    // once build() is called\n    Document doc = new Document();\n    indexWriter.addDocument(new EnhancementsDocumentBuilder(taxo,\n        indexingParams).setCategoryPaths(categoryPaths).build(doc));\n\n    IndexReader indexReader = indexWriter.getReader();\n    indexWriter.close();\n\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"a\",\"b\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n\n    assertTrue(\"EnhancementsPayloadIterator failure\", iterator.init());\n    assertTrue(\"Missing document 0\", iterator.setdoc(0));\n    byte[] dummy2 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy2());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy2\", Arrays\n        .equals(dummy2, CategoryEnhancementDummy2.CATEGORY_TOKEN_BYTES));\n    byte[] dummy3 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy3());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy3\", Arrays\n        .equals(dummy3, CategoryEnhancementDummy3.CATEGORY_TOKEN_BYTES));\n    indexReader.close();\n    taxo.close();\n    indexDir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testTwoNonEmptyByteArrays() throws Exception {\n    // add document with a category containing data for both enhancements\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    EnhancementsIndexingParams indexingParams = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy2(),\n          new CategoryEnhancementDummy3());\n\n    List<CategoryPath> categoryPaths = new ArrayList<CategoryPath>();\n    categoryPaths.add(new CategoryPath(\"a\", \"b\"));\n\n    RandomIndexWriter indexWriter = new RandomIndexWriter(random, indexDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n    TaxonomyWriter taxo = new DirectoryTaxonomyWriter(taxoDir);\n\n    // a category document builder will add the categories to a document\n    // once build() is called\n    Document doc = new Document();\n    indexWriter.addDocument(new EnhancementsDocumentBuilder(taxo,\n        indexingParams).setCategoryPaths(categoryPaths).build(doc));\n\n    IndexReader indexReader = indexWriter.getReader();\n    indexWriter.close();\n\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"a\",\"b\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n\n    assertTrue(\"EnhancementsPayloadIterator failure\", iterator.init());\n    assertTrue(\"Missing document 0\", iterator.setdoc(0));\n    byte[] dummy2 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy2());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy2\", Arrays\n        .equals(dummy2, CategoryEnhancementDummy2.CATEGORY_TOKEN_BYTES));\n    byte[] dummy3 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy3());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy3\", Arrays\n        .equals(dummy3, CategoryEnhancementDummy3.CATEGORY_TOKEN_BYTES));\n    indexReader.close();\n    taxo.close();\n    indexDir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoNonEmptyByteArrays().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/enhancements/TwoEnhancementsTest#testTwoNonEmptyByteArrays().mjava","sourceNew":"  @Test\n  public void testTwoNonEmptyByteArrays() throws Exception {\n    // add document with a category containing data for both enhancements\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    EnhancementsIndexingParams indexingParams = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy2(),\n          new CategoryEnhancementDummy3());\n\n    List<CategoryPath> categoryPaths = new ArrayList<CategoryPath>();\n    categoryPaths.add(new CategoryPath(\"a\", \"b\"));\n\n    RandomIndexWriter indexWriter = new RandomIndexWriter(random(), indexDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)));\n    TaxonomyWriter taxo = new DirectoryTaxonomyWriter(taxoDir);\n\n    // a category document builder will add the categories to a document\n    // once build() is called\n    Document doc = new Document();\n    indexWriter.addDocument(new EnhancementsDocumentBuilder(taxo,\n        indexingParams).setCategoryPaths(categoryPaths).build(doc));\n\n    IndexReader indexReader = indexWriter.getReader();\n    indexWriter.close();\n\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"a\",\"b\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n\n    assertTrue(\"EnhancementsPayloadIterator failure\", iterator.init());\n    assertTrue(\"Missing document 0\", iterator.setdoc(0));\n    byte[] dummy2 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy2());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy2\", Arrays\n        .equals(dummy2, CategoryEnhancementDummy2.CATEGORY_TOKEN_BYTES));\n    byte[] dummy3 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy3());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy3\", Arrays\n        .equals(dummy3, CategoryEnhancementDummy3.CATEGORY_TOKEN_BYTES));\n    indexReader.close();\n    taxo.close();\n    indexDir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testTwoNonEmptyByteArrays() throws Exception {\n    // add document with a category containing data for both enhancements\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    EnhancementsIndexingParams indexingParams = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy2(),\n          new CategoryEnhancementDummy3());\n\n    List<CategoryPath> categoryPaths = new ArrayList<CategoryPath>();\n    categoryPaths.add(new CategoryPath(\"a\", \"b\"));\n\n    RandomIndexWriter indexWriter = new RandomIndexWriter(random(), indexDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)));\n    TaxonomyWriter taxo = new DirectoryTaxonomyWriter(taxoDir);\n\n    // a category document builder will add the categories to a document\n    // once build() is called\n    Document doc = new Document();\n    indexWriter.addDocument(new EnhancementsDocumentBuilder(taxo,\n        indexingParams).setCategoryPaths(categoryPaths).build(doc));\n\n    IndexReader indexReader = indexWriter.getReader();\n    indexWriter.close();\n\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"a\",\"b\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n\n    assertTrue(\"EnhancementsPayloadIterator failure\", iterator.init());\n    assertTrue(\"Missing document 0\", iterator.setdoc(0));\n    byte[] dummy2 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy2());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy2\", Arrays\n        .equals(dummy2, CategoryEnhancementDummy2.CATEGORY_TOKEN_BYTES));\n    byte[] dummy3 = (byte[]) iterator\n        .getCategoryData(new CategoryEnhancementDummy3());\n    assertTrue(\"Bad array returned for CategoryEnhancementDummy3\", Arrays\n        .equals(dummy3, CategoryEnhancementDummy3.CATEGORY_TOKEN_BYTES));\n    indexReader.close();\n    taxo.close();\n    indexDir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["7a4df66e06e0c3b520d7d5941e1c043076f06f17"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"7a4df66e06e0c3b520d7d5941e1c043076f06f17":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7a4df66e06e0c3b520d7d5941e1c043076f06f17"],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7a4df66e06e0c3b520d7d5941e1c043076f06f17"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d083e83f225b11e5fdd900e83d26ddb385b6955c","89f15687f60bd49cd3d9de427e85c17fd9397d61","817d8435e9135b756f08ce6710ab0baac51bdf88"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7a4df66e06e0c3b520d7d5941e1c043076f06f17":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["7a4df66e06e0c3b520d7d5941e1c043076f06f17"],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}