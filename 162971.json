{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetParser#parseFacetOrStat(String,String,Object).mjava","commits":[{"id":"a56a9893014b284af4d1af451e6c02e7ffdf5b6e","date":1590065972,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser#parseFacetOrStat(String,String,Object).mjava","pathOld":"/dev/null","sourceNew":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    switch (type) {\n      case \"field\":\n      case \"terms\":\n        return new FacetRequest.FacetFieldParser(this, key).parse(args);\n      case \"query\":\n        return new FacetRequest.FacetQueryParser(this, key).parse(args);\n      case \"range\":\n        return new FacetRangeParser(this, key).parse(args);\n      case \"heatmap\":\n        return new FacetHeatmap.Parser(this, key).parse(args);\n      case \"func\":\n        return parseStat(key, args);\n    }\n\n    throw err(\"Unknown facet or stat. key=\" + key + \" type=\" + type + \" args=\" + args);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba33781da68babcaa5828121b443d3eb5c9d8480","date":1590595589,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser#parseFacetOrStat(String,String,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetParser#parseFacetOrStat(String,String,Object).mjava","sourceNew":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    switch (type) {\n      case \"field\":\n      case \"terms\":\n        return new FacetFieldParser(this, key).parse(args);\n      case \"query\":\n        return new FacetQueryParser(this, key).parse(args);\n      case \"range\":\n        return new FacetRangeParser(this, key).parse(args);\n      case \"heatmap\":\n        return new FacetHeatmap.Parser(this, key).parse(args);\n      case \"func\":\n        return parseStat(key, args);\n    }\n\n    throw err(\"Unknown facet or stat. key=\" + key + \" type=\" + type + \" args=\" + args);\n  }\n\n","sourceOld":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    switch (type) {\n      case \"field\":\n      case \"terms\":\n        return new FacetRequest.FacetFieldParser(this, key).parse(args);\n      case \"query\":\n        return new FacetRequest.FacetQueryParser(this, key).parse(args);\n      case \"range\":\n        return new FacetRangeParser(this, key).parse(args);\n      case \"heatmap\":\n        return new FacetHeatmap.Parser(this, key).parse(args);\n      case \"func\":\n        return parseStat(key, args);\n    }\n\n    throw err(\"Unknown facet or stat. key=\" + key + \" type=\" + type + \" args=\" + args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ba33781da68babcaa5828121b443d3eb5c9d8480":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba33781da68babcaa5828121b443d3eb5c9d8480"]},"commit2Childs":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["ba33781da68babcaa5828121b443d3eb5c9d8480"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"],"ba33781da68babcaa5828121b443d3eb5c9d8480":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}