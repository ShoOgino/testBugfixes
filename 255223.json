{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/Facet2DStream#fillTuples(int,List[Tuple],Tuple,NamedList,Bucket,Bucket,Metric).mjava","commits":[{"id":"8192418e56fee1a061317028a35f7f288824c856","date":1557514938,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/Facet2DStream#fillTuples(int,List[Tuple],Tuple,NamedList,Bucket,Bucket,Metric).mjava","pathOld":"/dev/null","sourceNew":"  private void fillTuples(int level, List<Tuple> tuples, Tuple currentTuple, NamedList facets, Bucket x, Bucket y, Metric metric) {\n    String bucketXName = x.toString();\n    String bucketYName = y.toString();\n\n    NamedList allXBuckets = (NamedList) facets.get(\"x\");\n    for (int b = 0; b < allXBuckets.size(); b++) {\n      List buckets = (List) allXBuckets.get(\"buckets\");\n      for(int s=0; s<buckets.size(); s++) {\n\n        NamedList bucket = (NamedList)buckets.get(s);\n        Object val = bucket.get(\"val\");\n        if (val instanceof Integer) {\n          val = ((Integer) val).longValue();\n        }\n        Tuple tx = currentTuple.clone();\n        tx.put(bucketXName, val);\n\n        NamedList allYBuckets = (NamedList) bucket.get(\"y\");\n        List ybuckets = (List)allYBuckets.get(\"buckets\");\n\n        for (int d = 0; d < ybuckets.size(); d++) {\n          NamedList bucketY = (NamedList) ybuckets.get(d);\n          Object valY = bucketY.get(\"val\");\n          if (valY instanceof Integer) {\n            valY = ((Integer) valY).longValue();\n          }\n          Tuple yt = tx.clone();\n          yt.put(bucketYName, valY);\n\n          int m = 0;\n          String identifier = metric.getIdentifier();\n          if (!identifier.startsWith(\"count(\")) {\n            Number d1 = (Number) bucketY.get(\"agg\");\n            if (metric.outputLong) {\n              if (d1 instanceof Long || d1 instanceof Integer) {\n                yt.put(identifier, d1.longValue());\n              } else {\n                yt.put(identifier, Math.round(d1.doubleValue()));\n              }\n            } else {\n              yt.put(identifier, d1.doubleValue());\n            }\n            ++m;\n          } else {\n            long l = ((Number)bucketY.get(\"count\")).longValue();\n            yt.put(\"count(*)\", l);\n          }\n          tuples.add(yt);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75","date":1591744896,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/Facet2DStream#fillTuples(int,List[Tuple],Tuple,NamedList,Bucket,Bucket,Metric).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/Facet2DStream#fillTuples(int,List[Tuple],Tuple,NamedList,Bucket,Bucket,Metric).mjava","sourceNew":"  private void fillTuples(int level, List<Tuple> tuples, Tuple currentTuple,\n                          @SuppressWarnings({\"rawtypes\"})NamedList facets, Bucket x, Bucket y, Metric metric) {\n    String bucketXName = x.toString();\n    String bucketYName = y.toString();\n\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList allXBuckets = (NamedList) facets.get(\"x\");\n    for (int b = 0; b < allXBuckets.size(); b++) {\n      @SuppressWarnings({\"rawtypes\"})\n      List buckets = (List) allXBuckets.get(\"buckets\");\n      for(int s=0; s<buckets.size(); s++) {\n\n        @SuppressWarnings({\"rawtypes\"})\n        NamedList bucket = (NamedList)buckets.get(s);\n        Object val = bucket.get(\"val\");\n        if (val instanceof Integer) {\n          val = ((Integer) val).longValue();\n        }\n        Tuple tx = currentTuple.clone();\n        tx.put(bucketXName, val);\n\n        @SuppressWarnings({\"rawtypes\"})\n        NamedList allYBuckets = (NamedList) bucket.get(\"y\");\n        @SuppressWarnings({\"rawtypes\"})\n        List ybuckets = (List)allYBuckets.get(\"buckets\");\n\n        for (int d = 0; d < ybuckets.size(); d++) {\n          @SuppressWarnings({\"rawtypes\"})\n          NamedList bucketY = (NamedList) ybuckets.get(d);\n          Object valY = bucketY.get(\"val\");\n          if (valY instanceof Integer) {\n            valY = ((Integer) valY).longValue();\n          }\n          Tuple yt = tx.clone();\n          yt.put(bucketYName, valY);\n\n          int m = 0;\n          String identifier = metric.getIdentifier();\n          if (!identifier.startsWith(\"count(\")) {\n            Number d1 = (Number) bucketY.get(\"agg\");\n            if (metric.outputLong) {\n              if (d1 instanceof Long || d1 instanceof Integer) {\n                yt.put(identifier, d1.longValue());\n              } else {\n                yt.put(identifier, Math.round(d1.doubleValue()));\n              }\n            } else {\n              yt.put(identifier, d1.doubleValue());\n            }\n            ++m;\n          } else {\n            long l = ((Number)bucketY.get(\"count\")).longValue();\n            yt.put(\"count(*)\", l);\n          }\n          tuples.add(yt);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void fillTuples(int level, List<Tuple> tuples, Tuple currentTuple, NamedList facets, Bucket x, Bucket y, Metric metric) {\n    String bucketXName = x.toString();\n    String bucketYName = y.toString();\n\n    NamedList allXBuckets = (NamedList) facets.get(\"x\");\n    for (int b = 0; b < allXBuckets.size(); b++) {\n      List buckets = (List) allXBuckets.get(\"buckets\");\n      for(int s=0; s<buckets.size(); s++) {\n\n        NamedList bucket = (NamedList)buckets.get(s);\n        Object val = bucket.get(\"val\");\n        if (val instanceof Integer) {\n          val = ((Integer) val).longValue();\n        }\n        Tuple tx = currentTuple.clone();\n        tx.put(bucketXName, val);\n\n        NamedList allYBuckets = (NamedList) bucket.get(\"y\");\n        List ybuckets = (List)allYBuckets.get(\"buckets\");\n\n        for (int d = 0; d < ybuckets.size(); d++) {\n          NamedList bucketY = (NamedList) ybuckets.get(d);\n          Object valY = bucketY.get(\"val\");\n          if (valY instanceof Integer) {\n            valY = ((Integer) valY).longValue();\n          }\n          Tuple yt = tx.clone();\n          yt.put(bucketYName, valY);\n\n          int m = 0;\n          String identifier = metric.getIdentifier();\n          if (!identifier.startsWith(\"count(\")) {\n            Number d1 = (Number) bucketY.get(\"agg\");\n            if (metric.outputLong) {\n              if (d1 instanceof Long || d1 instanceof Integer) {\n                yt.put(identifier, d1.longValue());\n              } else {\n                yt.put(identifier, Math.round(d1.doubleValue()));\n              }\n            } else {\n              yt.put(identifier, d1.doubleValue());\n            }\n            ++m;\n          } else {\n            long l = ((Number)bucketY.get(\"count\")).longValue();\n            yt.put(\"count(*)\", l);\n          }\n          tuples.add(yt);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75":["8192418e56fee1a061317028a35f7f288824c856"],"8192418e56fee1a061317028a35f7f288824c856":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8192418e56fee1a061317028a35f7f288824c856"],"2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8192418e56fee1a061317028a35f7f288824c856":["2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}