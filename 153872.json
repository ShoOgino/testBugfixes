{"path":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipReader#seekChild(int).mjava","commits":[{"id":"e885d2b1e112b1d9db6a2dae82b3b493dfba1df1","date":1342716838,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipReader#seekChild(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void seekChild(int level) throws IOException {\n    super.seekChild(level);\n    if (DEBUG) {\n      System.out.println(\"seekChild level=\" + level);\n    }\n    docPointer[level] = lastDocPointer;\n    if (posPointer != null) {\n      posPointer[level] = lastPosPointer;\n      posBufferUpto[level] = lastPosBufferUpto;\n      if (endOffset != null) {\n        endOffset[level] = lastEndOffset;\n      }\n      if (payloadByteUpto != null) {\n        payloadByteUpto[level] = lastPayloadByteUpto;\n      }\n      if (payPointer != null) {\n        payPointer[level] = lastPayPointer;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f81e20fb7784c464473faba4f1fdd4f775e8ee87","c2808fd811f853d032fff6b48bb83a4b7b6f48e7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f81e20fb7784c464473faba4f1fdd4f775e8ee87","date":1343937502,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipReader#seekChild(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipReader#seekChild(int).mjava","sourceNew":"  @Override\n  protected void seekChild(int level) throws IOException {\n    super.seekChild(level);\n    if (DEBUG) {\n      System.out.println(\"seekChild level=\" + level);\n    }\n    docPointer[level] = lastDocPointer;\n    if (posPointer != null) {\n      posPointer[level] = lastPosPointer;\n      posBufferUpto[level] = lastPosBufferUpto;\n      if (startOffset != null) {\n        startOffset[level] = lastStartOffset;\n      }\n      if (payloadByteUpto != null) {\n        payloadByteUpto[level] = lastPayloadByteUpto;\n      }\n      if (payPointer != null) {\n        payPointer[level] = lastPayPointer;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void seekChild(int level) throws IOException {\n    super.seekChild(level);\n    if (DEBUG) {\n      System.out.println(\"seekChild level=\" + level);\n    }\n    docPointer[level] = lastDocPointer;\n    if (posPointer != null) {\n      posPointer[level] = lastPosPointer;\n      posBufferUpto[level] = lastPosBufferUpto;\n      if (endOffset != null) {\n        endOffset[level] = lastEndOffset;\n      }\n      if (payloadByteUpto != null) {\n        payloadByteUpto[level] = lastPayloadByteUpto;\n      }\n      if (payPointer != null) {\n        payPointer[level] = lastPayPointer;\n      }\n    }\n  }\n\n","bugFix":["e885d2b1e112b1d9db6a2dae82b3b493dfba1df1"],"bugIntro":["c2808fd811f853d032fff6b48bb83a4b7b6f48e7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fcc6cbc7e8693270112e8d40ca98226199c0288e","date":1345039720,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipReader#seekChild(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipReader#seekChild(int).mjava","sourceNew":"  @Override\n  protected void seekChild(int level) throws IOException {\n    super.seekChild(level);\n    // if (DEBUG) {\n    //   System.out.println(\"seekChild level=\" + level);\n    // }\n    docPointer[level] = lastDocPointer;\n    if (posPointer != null) {\n      posPointer[level] = lastPosPointer;\n      posBufferUpto[level] = lastPosBufferUpto;\n      if (startOffset != null) {\n        startOffset[level] = lastStartOffset;\n      }\n      if (payloadByteUpto != null) {\n        payloadByteUpto[level] = lastPayloadByteUpto;\n      }\n      if (payPointer != null) {\n        payPointer[level] = lastPayPointer;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void seekChild(int level) throws IOException {\n    super.seekChild(level);\n    if (DEBUG) {\n      System.out.println(\"seekChild level=\" + level);\n    }\n    docPointer[level] = lastDocPointer;\n    if (posPointer != null) {\n      posPointer[level] = lastPosPointer;\n      posBufferUpto[level] = lastPosBufferUpto;\n      if (startOffset != null) {\n        startOffset[level] = lastStartOffset;\n      }\n      if (payloadByteUpto != null) {\n        payloadByteUpto[level] = lastPayloadByteUpto;\n      }\n      if (payPointer != null) {\n        payPointer[level] = lastPayPointer;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f8615860cb50aefb8eebca1d1b3893dbe21cf126","date":1345550448,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipReader#seekChild(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void seekChild(int level) throws IOException {\n    super.seekChild(level);\n    // if (DEBUG) {\n    //   System.out.println(\"seekChild level=\" + level);\n    // }\n    docPointer[level] = lastDocPointer;\n    if (posPointer != null) {\n      posPointer[level] = lastPosPointer;\n      posBufferUpto[level] = lastPosBufferUpto;\n      if (startOffset != null) {\n        startOffset[level] = lastStartOffset;\n      }\n      if (payloadByteUpto != null) {\n        payloadByteUpto[level] = lastPayloadByteUpto;\n      }\n      if (payPointer != null) {\n        payPointer[level] = lastPayPointer;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipReader#seekChild(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void seekChild(int level) throws IOException {\n    super.seekChild(level);\n    // if (DEBUG) {\n    //   System.out.println(\"seekChild level=\" + level);\n    // }\n    docPointer[level] = lastDocPointer;\n    if (posPointer != null) {\n      posPointer[level] = lastPosPointer;\n      posBufferUpto[level] = lastPosBufferUpto;\n      if (startOffset != null) {\n        startOffset[level] = lastStartOffset;\n      }\n      if (payloadByteUpto != null) {\n        payloadByteUpto[level] = lastPayloadByteUpto;\n      }\n      if (payPointer != null) {\n        payPointer[level] = lastPayPointer;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockSkipReader#seekChild(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipReader#seekChild(int).mjava","sourceNew":"  @Override\n  protected void seekChild(int level) throws IOException {\n    super.seekChild(level);\n    // if (DEBUG) {\n    //   System.out.println(\"seekChild level=\" + level);\n    // }\n    docPointer[level] = lastDocPointer;\n    if (posPointer != null) {\n      posPointer[level] = lastPosPointer;\n      posBufferUpto[level] = lastPosBufferUpto;\n      if (startOffset != null) {\n        startOffset[level] = lastStartOffset;\n      }\n      if (payloadByteUpto != null) {\n        payloadByteUpto[level] = lastPayloadByteUpto;\n      }\n      if (payPointer != null) {\n        payPointer[level] = lastPayPointer;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void seekChild(int level) throws IOException {\n    super.seekChild(level);\n    // if (DEBUG) {\n    //   System.out.println(\"seekChild level=\" + level);\n    // }\n    docPointer[level] = lastDocPointer;\n    if (posPointer != null) {\n      posPointer[level] = lastPosPointer;\n      posBufferUpto[level] = lastPosBufferUpto;\n      if (startOffset != null) {\n        startOffset[level] = lastStartOffset;\n      }\n      if (payloadByteUpto != null) {\n        payloadByteUpto[level] = lastPayloadByteUpto;\n      }\n      if (payPointer != null) {\n        payPointer[level] = lastPayPointer;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fcc6cbc7e8693270112e8d40ca98226199c0288e"],"e885d2b1e112b1d9db6a2dae82b3b493dfba1df1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fcc6cbc7e8693270112e8d40ca98226199c0288e":["f81e20fb7784c464473faba4f1fdd4f775e8ee87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"f81e20fb7784c464473faba4f1fdd4f775e8ee87":["e885d2b1e112b1d9db6a2dae82b3b493dfba1df1"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["001b25b42373b22a52f399dbf072f1224632e8e6","f8615860cb50aefb8eebca1d1b3893dbe21cf126","e885d2b1e112b1d9db6a2dae82b3b493dfba1df1"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["001b25b42373b22a52f399dbf072f1224632e8e6","3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"e885d2b1e112b1d9db6a2dae82b3b493dfba1df1":["f81e20fb7784c464473faba4f1fdd4f775e8ee87"],"fcc6cbc7e8693270112e8d40ca98226199c0288e":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"f81e20fb7784c464473faba4f1fdd4f775e8ee87":["fcc6cbc7e8693270112e8d40ca98226199c0288e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}