{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#valueInOrder(BKDConfig,long,int,byte[],byte[],int,int,int).mjava","commits":[{"id":"bb94bf667d51f9c390c99d97afb36b7caab6b6e9","date":1599548621,"type":1,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#valueInOrder(BKDConfig,long,int,byte[],byte[],int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#valueInOrder(long,int,byte[],byte[],int,int,int).mjava","sourceNew":"  // only called from assert\n  private static boolean valueInOrder(BKDConfig config, long ord, int sortedDim, byte[] lastPackedValue, byte[] packedValue, int packedValueOffset,\n      int doc, int lastDoc) {\n    int dimOffset = sortedDim * config.bytesPerDim;\n    if (ord > 0) {\n      int cmp = Arrays.compareUnsigned(lastPackedValue, dimOffset, dimOffset + config.bytesPerDim, packedValue, packedValueOffset + dimOffset, packedValueOffset + dimOffset + config.bytesPerDim);\n      if (cmp > 0) {\n        throw new AssertionError(\"values out of order: last value=\" + new BytesRef(lastPackedValue) + \" current value=\" + new BytesRef(packedValue, packedValueOffset, config.packedBytesLength) + \" ord=\" + ord);\n      }\n      if (cmp == 0  && config.numDims > config.numIndexDims) {\n        cmp = Arrays.compareUnsigned(lastPackedValue, config.packedIndexBytesLength, config.packedBytesLength, packedValue, packedValueOffset + config.packedIndexBytesLength, packedValueOffset + config.packedBytesLength);\n        if (cmp > 0) {\n          throw new AssertionError(\"data values out of order: last value=\" + new BytesRef(lastPackedValue) + \" current value=\" + new BytesRef(packedValue, packedValueOffset, config.packedBytesLength) + \" ord=\" + ord);\n        }\n      }\n      if (cmp == 0 && doc < lastDoc) {\n        throw new AssertionError(\"docs out of order: last doc=\" + lastDoc + \" current doc=\" + doc + \" ord=\" + ord);\n      }\n    }\n    System.arraycopy(packedValue, packedValueOffset, lastPackedValue, 0, config.packedBytesLength);\n    return true;\n  }\n\n","sourceOld":"  // only called from assert\n  private boolean valueInOrder(long ord, int sortedDim, byte[] lastPackedValue, byte[] packedValue, int packedValueOffset,\n      int doc, int lastDoc) {\n    int dimOffset = sortedDim * bytesPerDim;\n    if (ord > 0) {\n      int cmp = Arrays.compareUnsigned(lastPackedValue, dimOffset, dimOffset + bytesPerDim, packedValue, packedValueOffset + dimOffset, packedValueOffset + dimOffset + bytesPerDim);\n      if (cmp > 0) {\n        throw new AssertionError(\"values out of order: last value=\" + new BytesRef(lastPackedValue) + \" current value=\" + new BytesRef(packedValue, packedValueOffset, packedBytesLength) + \" ord=\" + ord);\n      }\n      if (cmp == 0  && numDataDims > numIndexDims) {\n        int dataOffset = numIndexDims * bytesPerDim;\n        cmp = Arrays.compareUnsigned(lastPackedValue, dataOffset, packedBytesLength, packedValue, packedValueOffset + dataOffset, packedValueOffset + packedBytesLength);\n        if (cmp > 0) {\n          throw new AssertionError(\"data values out of order: last value=\" + new BytesRef(lastPackedValue) + \" current value=\" + new BytesRef(packedValue, packedValueOffset, packedBytesLength) + \" ord=\" + ord);\n        }\n      }\n      if (cmp == 0 && doc < lastDoc) {\n        throw new AssertionError(\"docs out of order: last doc=\" + lastDoc + \" current doc=\" + doc + \" ord=\" + ord);\n      }\n    }\n    System.arraycopy(packedValue, packedValueOffset, lastPackedValue, 0, packedBytesLength);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"]},"commit2Childs":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}