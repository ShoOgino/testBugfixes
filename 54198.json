{"path":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#doPrevSetBit(java.util.BitSet,FixedBitSet).mjava","commits":[{"id":"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e","date":1414135939,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#doPrevSetBit(java.util.BitSet,FixedBitSet).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#doPrevSetBit(BitSet,FixedBitSet).mjava","sourceNew":"  void doPrevSetBit(java.util.BitSet a, FixedBitSet b) {\n    int aa = a.size() + random().nextInt(100);\n    int bb = aa;\n    do {\n      // aa = a.prevSetBit(aa-1);\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n        aa--;\n      }\n      if (b.length() == 0) {\n        bb = -1;\n      } else if (bb > b.length()-1) {\n        bb = b.prevSetBit(b.length()-1);\n      } else if (bb < 1) {\n        bb = -1;\n      } else {\n        bb = bb >= 1 ? b.prevSetBit(bb-1) : -1;\n      }\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n\n","sourceOld":"  void doPrevSetBit(BitSet a, FixedBitSet b) {\n    int aa = a.size() + random().nextInt(100);\n    int bb = aa;\n    do {\n      // aa = a.prevSetBit(aa-1);\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n        aa--;\n      }\n      if (b.length() == 0) {\n        bb = -1;\n      } else if (bb > b.length()-1) {\n        bb = b.prevSetBit(b.length()-1);\n      } else if (bb < 1) {\n        bb = -1;\n      } else {\n        bb = bb >= 1 ? b.prevSetBit(bb-1) : -1;\n      }\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af918c7c328775f9fadd5870c21f0fafc2a059cc","date":1430253435,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#doPrevSetBit(java.util.BitSet,FixedBitSet).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#doPrevSetBit(java.util.BitSet,FixedBitSet).mjava","sourceNew":"  void doPrevSetBit(java.util.BitSet a, FixedBitSet b) {\n    assertEquals(a.cardinality(), b.cardinality());\n    int aa = a.size() + random().nextInt(100);\n    int bb = aa;\n    do {\n      // aa = a.prevSetBit(aa-1);\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n        aa--;\n      }\n      if (b.length() == 0) {\n        bb = -1;\n      } else if (bb > b.length()-1) {\n        bb = b.prevSetBit(b.length()-1);\n      } else if (bb < 1) {\n        bb = -1;\n      } else {\n        bb = bb >= 1 ? b.prevSetBit(bb-1) : -1;\n      }\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n\n","sourceOld":"  void doPrevSetBit(java.util.BitSet a, FixedBitSet b) {\n    int aa = a.size() + random().nextInt(100);\n    int bb = aa;\n    do {\n      // aa = a.prevSetBit(aa-1);\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n        aa--;\n      }\n      if (b.length() == 0) {\n        bb = -1;\n      } else if (bb > b.length()-1) {\n        bb = b.prevSetBit(b.length()-1);\n      } else if (bb < 1) {\n        bb = -1;\n      } else {\n        bb = bb >= 1 ? b.prevSetBit(bb-1) : -1;\n      }\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"af918c7c328775f9fadd5870c21f0fafc2a059cc":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af918c7c328775f9fadd5870c21f0fafc2a059cc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"],"af918c7c328775f9fadd5870c21f0fafc2a059cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["af918c7c328775f9fadd5870c21f0fafc2a059cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}