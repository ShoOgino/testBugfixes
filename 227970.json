{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.SpanPositionCheckWeight#SpanPositionCheckWeight(SpanWeight,IndexSearcher,Map[Term,TermContext],SpanCollectorFactory).mjava","commits":[{"id":"d4b6308fa66dc96de36abfae5d3e7c92c805e227","date":1432916588,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.SpanPositionCheckWeight#SpanPositionCheckWeight(SpanWeight,IndexSearcher,Map[Term,TermContext],SpanCollectorFactory).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.SpanPositionCheckWeight#SpanPositionCheckWeight(SpanWeight,SpanSimilarity,SpanCollectorFactory).mjava","sourceNew":"    public SpanPositionCheckWeight(SpanWeight matchWeight, IndexSearcher searcher, Map<Term, TermContext> terms,\n                                   SpanCollectorFactory collectorFactory) throws IOException {\n      super(SpanPositionCheckQuery.this, searcher, terms, collectorFactory);\n      this.matchWeight = matchWeight;\n    }\n\n","sourceOld":"    public SpanPositionCheckWeight(SpanWeight matchWeight, SpanSimilarity similarity,\n                                   SpanCollectorFactory collectorFactory) throws IOException {\n      super(SpanPositionCheckQuery.this, similarity, collectorFactory);\n      this.matchWeight = matchWeight;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29aea3139c4326c0501d75d51059855463220279","date":1433952060,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.SpanPositionCheckWeight#SpanPositionCheckWeight(SpanWeight,IndexSearcher,Map[Term,TermContext]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.SpanPositionCheckWeight#SpanPositionCheckWeight(SpanWeight,IndexSearcher,Map[Term,TermContext],SpanCollectorFactory).mjava","sourceNew":"    public SpanPositionCheckWeight(SpanWeight matchWeight, IndexSearcher searcher, Map<Term, TermContext> terms) throws IOException {\n      super(SpanPositionCheckQuery.this, searcher, terms);\n      this.matchWeight = matchWeight;\n    }\n\n","sourceOld":"    public SpanPositionCheckWeight(SpanWeight matchWeight, IndexSearcher searcher, Map<Term, TermContext> terms,\n                                   SpanCollectorFactory collectorFactory) throws IOException {\n      super(SpanPositionCheckQuery.this, searcher, terms, collectorFactory);\n      this.matchWeight = matchWeight;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29aea3139c4326c0501d75d51059855463220279":["d4b6308fa66dc96de36abfae5d3e7c92c805e227"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["29aea3139c4326c0501d75d51059855463220279"],"d4b6308fa66dc96de36abfae5d3e7c92c805e227":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"29aea3139c4326c0501d75d51059855463220279":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4b6308fa66dc96de36abfae5d3e7c92c805e227"],"d4b6308fa66dc96de36abfae5d3e7c92c805e227":["29aea3139c4326c0501d75d51059855463220279"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}