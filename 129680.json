{"path":"solr/core/src/test/org/apache/solr/handler/tagger/Tagger2Test#testStopWords().mjava","commits":[{"id":"e091f281a6e026f8bb17aaf194efd0bbd3a7f549","date":1528221895,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/tagger/Tagger2Test#testStopWords().mjava","pathOld":"/dev/null","sourceNew":"  /** Support for stopwords (posInc &gt; 1);\n   * discussion: https://github.com/OpenSextant/SolrTextTagger/issues/13 */\n  @Test\n  public void testStopWords() throws Exception {\n    baseParams.set(\"field\", \"name_tagStop\");//stop filter (pos inc enabled) index & query\n\n    String SOUTHOFWALES = \"South of Wales\";//'of' is stop word index time & query\n    String ACITYA = \"A City A\";\n\n    buildNames(SOUTHOFWALES, ACITYA);\n\n    //round-trip works\n    assertTags(reqDoc(SOUTHOFWALES), new TestTag(0, SOUTHOFWALES.length(), SOUTHOFWALES,\n            lookupByName(SOUTHOFWALES)));\n    //  but offsets doesn't include stopword when leading or trailing...\n    assertTags(reqDoc(ACITYA), new TestTag(2, 6, \"City\",\n            lookupByName(ACITYA)));\n    //break on stop words\n    assertTags(reqDoc(SOUTHOFWALES, \"ignoreStopwords\", \"false\"));//match nothing\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/tagger/Tagger2Test#testStopWords().mjava","pathOld":"/dev/null","sourceNew":"  /** Support for stopwords (posInc &gt; 1);\n   * discussion: https://github.com/OpenSextant/SolrTextTagger/issues/13 */\n  @Test\n  public void testStopWords() throws Exception {\n    baseParams.set(\"field\", \"name_tagStop\");//stop filter (pos inc enabled) index & query\n\n    String SOUTHOFWALES = \"South of Wales\";//'of' is stop word index time & query\n    String ACITYA = \"A City A\";\n\n    buildNames(SOUTHOFWALES, ACITYA);\n\n    //round-trip works\n    assertTags(reqDoc(SOUTHOFWALES), new TestTag(0, SOUTHOFWALES.length(), SOUTHOFWALES,\n            lookupByName(SOUTHOFWALES)));\n    //  but offsets doesn't include stopword when leading or trailing...\n    assertTags(reqDoc(ACITYA), new TestTag(2, 6, \"City\",\n            lookupByName(ACITYA)));\n    //break on stop words\n    assertTags(reqDoc(SOUTHOFWALES, \"ignoreStopwords\", \"false\"));//match nothing\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28354a2e9bdf61c954f554154473f7b4d618c017","date":1528310717,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/tagger/Tagger2Test#testStopWords().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/tagger/Tagger2Test#testStopWords().mjava","sourceNew":"  /** Support for stopwords (posInc &gt; 1);\n   * discussion: https://github.com/OpenSextant/SolrTextTagger/issues/13 */\n  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-8344\")\n  @Test\n  public void testStopWords() throws Exception {\n    baseParams.set(\"field\", \"name_tagStop\");//stop filter (pos inc enabled) index & query\n\n    String SOUTHOFWALES = \"South of Wales\";//'of' is stop word index time & query\n    String ACITYA = \"A City A\";\n\n    buildNames(SOUTHOFWALES, ACITYA);\n\n    //round-trip works\n    assertTags(reqDoc(SOUTHOFWALES), new TestTag(0, SOUTHOFWALES.length(), SOUTHOFWALES,\n            lookupByName(SOUTHOFWALES)));\n    //  but offsets doesn't include stopword when leading or trailing...\n    assertTags(reqDoc(ACITYA), new TestTag(2, 6, \"City\",\n            lookupByName(ACITYA)));\n    //break on stop words\n    assertTags(reqDoc(SOUTHOFWALES, \"ignoreStopwords\", \"false\"));//match nothing\n  }\n\n","sourceOld":"  /** Support for stopwords (posInc &gt; 1);\n   * discussion: https://github.com/OpenSextant/SolrTextTagger/issues/13 */\n  @Test\n  public void testStopWords() throws Exception {\n    baseParams.set(\"field\", \"name_tagStop\");//stop filter (pos inc enabled) index & query\n\n    String SOUTHOFWALES = \"South of Wales\";//'of' is stop word index time & query\n    String ACITYA = \"A City A\";\n\n    buildNames(SOUTHOFWALES, ACITYA);\n\n    //round-trip works\n    assertTags(reqDoc(SOUTHOFWALES), new TestTag(0, SOUTHOFWALES.length(), SOUTHOFWALES,\n            lookupByName(SOUTHOFWALES)));\n    //  but offsets doesn't include stopword when leading or trailing...\n    assertTags(reqDoc(ACITYA), new TestTag(2, 6, \"City\",\n            lookupByName(ACITYA)));\n    //break on stop words\n    assertTags(reqDoc(SOUTHOFWALES, \"ignoreStopwords\", \"false\"));//match nothing\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/tagger/Tagger2Test#testStopWords().mjava","pathOld":"/dev/null","sourceNew":"  /** Support for stopwords (posInc &gt; 1);\n   * discussion: https://github.com/OpenSextant/SolrTextTagger/issues/13 */\n  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-8344\")\n  @Test\n  public void testStopWords() throws Exception {\n    baseParams.set(\"field\", \"name_tagStop\");//stop filter (pos inc enabled) index & query\n\n    String SOUTHOFWALES = \"South of Wales\";//'of' is stop word index time & query\n    String ACITYA = \"A City A\";\n\n    buildNames(SOUTHOFWALES, ACITYA);\n\n    //round-trip works\n    assertTags(reqDoc(SOUTHOFWALES), new TestTag(0, SOUTHOFWALES.length(), SOUTHOFWALES,\n            lookupByName(SOUTHOFWALES)));\n    //  but offsets doesn't include stopword when leading or trailing...\n    assertTags(reqDoc(ACITYA), new TestTag(2, 6, \"City\",\n            lookupByName(ACITYA)));\n    //break on stop words\n    assertTags(reqDoc(SOUTHOFWALES, \"ignoreStopwords\", \"false\"));//match nothing\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/tagger/Tagger2Test#testStopWords().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/tagger/Tagger2Test#testStopWords().mjava","sourceNew":"  /** Support for stopwords (posInc &gt; 1);\n   * discussion: https://github.com/OpenSextant/SolrTextTagger/issues/13 */\n  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-8344\")\n  @Test\n  public void testStopWords() throws Exception {\n    baseParams.set(\"field\", \"name_tagStop\");//stop filter (pos inc enabled) index & query\n\n    String SOUTHOFWALES = \"South of Wales\";//'of' is stop word index time & query\n    String ACITYA = \"A City A\";\n\n    buildNames(SOUTHOFWALES, ACITYA);\n\n    //round-trip works\n    assertTags(reqDoc(SOUTHOFWALES), new TestTag(0, SOUTHOFWALES.length(), SOUTHOFWALES,\n            lookupByName(SOUTHOFWALES)));\n    //  but offsets doesn't include stopword when leading or trailing...\n    assertTags(reqDoc(ACITYA), new TestTag(2, 6, \"City\",\n            lookupByName(ACITYA)));\n    //break on stop words\n    assertTags(reqDoc(SOUTHOFWALES, \"ignoreStopwords\", \"false\"));//match nothing\n  }\n\n","sourceOld":"  /** Support for stopwords (posInc &gt; 1);\n   * discussion: https://github.com/OpenSextant/SolrTextTagger/issues/13 */\n  @Test\n  public void testStopWords() throws Exception {\n    baseParams.set(\"field\", \"name_tagStop\");//stop filter (pos inc enabled) index & query\n\n    String SOUTHOFWALES = \"South of Wales\";//'of' is stop word index time & query\n    String ACITYA = \"A City A\";\n\n    buildNames(SOUTHOFWALES, ACITYA);\n\n    //round-trip works\n    assertTags(reqDoc(SOUTHOFWALES), new TestTag(0, SOUTHOFWALES.length(), SOUTHOFWALES,\n            lookupByName(SOUTHOFWALES)));\n    //  but offsets doesn't include stopword when leading or trailing...\n    assertTags(reqDoc(ACITYA), new TestTag(2, 6, \"City\",\n            lookupByName(ACITYA)));\n    //break on stop words\n    assertTags(reqDoc(SOUTHOFWALES, \"ignoreStopwords\", \"false\"));//match nothing\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","28354a2e9bdf61c954f554154473f7b4d618c017"],"28354a2e9bdf61c954f554154473f7b4d618c017":["e091f281a6e026f8bb17aaf194efd0bbd3a7f549"],"f592209545c71895260367152601e9200399776d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e091f281a6e026f8bb17aaf194efd0bbd3a7f549"],"e091f281a6e026f8bb17aaf194efd0bbd3a7f549":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28354a2e9bdf61c954f554154473f7b4d618c017"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["f592209545c71895260367152601e9200399776d","28354a2e9bdf61c954f554154473f7b4d618c017"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","e091f281a6e026f8bb17aaf194efd0bbd3a7f549"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"28354a2e9bdf61c954f554154473f7b4d618c017":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"f592209545c71895260367152601e9200399776d":["7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"e091f281a6e026f8bb17aaf194efd0bbd3a7f549":["28354a2e9bdf61c954f554154473f7b4d618c017","f592209545c71895260367152601e9200399776d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}