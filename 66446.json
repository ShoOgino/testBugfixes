{"path":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random(), new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random(), new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = DirectoryReader.open(dir);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random(), new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random(), new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = DirectoryReader.open(dir);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random(), new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = DirectoryReader.open(dir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random(), new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = DirectoryReader.open(dir);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random(), new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = DirectoryReader.open(dir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random(), new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.shutdown();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = DirectoryReader.open(dir);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random(), new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = DirectoryReader.open(dir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random(), new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(new MockAnalyzer(random())));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = DirectoryReader.open(dir);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random(), new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.shutdown();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = DirectoryReader.open(dir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa","date":1420599177,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random(), new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(new MockAnalyzer(random())));\n      writer2.commit();\n      \n\n      readers = new DirectoryReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = DirectoryReader.open(dir);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random(), new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(new MockAnalyzer(random())));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = DirectoryReader.open(dir);\n    }\n\n","bugFix":["2586f96f60332eb97ecd2934b0763791462568b2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random(), new ByteBuffersDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(new MockAnalyzer(random())));\n      writer2.commit();\n      \n\n      readers = new DirectoryReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = DirectoryReader.open(dir);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random(), new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(new MockAnalyzer(random())));\n      writer2.commit();\n      \n\n      readers = new DirectoryReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = DirectoryReader.open(dir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4208ed8e426ae5f75a41d8b4ae53f4587e413061","date":1580475454,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random(), new ByteBuffersDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(new MockAnalyzer(random())));\n      writer2.commit();\n      \n\n      readers = new DirectoryReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = DirectoryReader.open(dir);\n      int numThreads = TEST_NIGHTLY ? 5 : 2;\n      threads = new Thread[numThreads];\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random(), new ByteBuffersDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(new MockAnalyzer(random())));\n      writer2.commit();\n      \n\n      readers = new DirectoryReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = DirectoryReader.open(dir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"4208ed8e426ae5f75a41d8b4ae53f4587e413061":["d77dafd89756a5161d244985903e3487ca109182"],"d77dafd89756a5161d244985903e3487ca109182":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4208ed8e426ae5f75a41d8b4ae53f4587e413061"]},"commit2Childs":{"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa":["d77dafd89756a5161d244985903e3487ca109182"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"4208ed8e426ae5f75a41d8b4ae53f4587e413061":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d77dafd89756a5161d244985903e3487ca109182":["4208ed8e426ae5f75a41d8b4ae53f4587e413061"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}