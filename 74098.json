{"path":"src/test/org/apache/solr/analysis/TestPatternReplaceCharFilter#testReplaceByEmpty().mjava","commits":[{"id":"b03b7626bae3b34032e501e74788f89a2f50058b","date":1260886439,"type":0,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/TestPatternReplaceCharFilter#testReplaceByEmpty().mjava","pathOld":"/dev/null","sourceNew":"  // 012345678\n  // aa bb cc\n  public void testReplaceByEmpty() throws IOException {\n    final String BLOCK = \"aa bb cc\";\n    CharStream cs = new PatternReplaceCharFilter( \"(aa)\\\\s+(bb)\\\\s+(cc)\", \"\",\n          CharReader.get( new StringReader( BLOCK ) ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    assertEquals( 0, getTokens( ts ).size() );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fd023a662cc25ae7e0ad0f33d71c476a16d0579","date":1261403630,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/TestPatternReplaceCharFilter#testReplaceByEmpty().mjava","pathOld":"src/test/org/apache/solr/analysis/TestPatternReplaceCharFilter#testReplaceByEmpty().mjava","sourceNew":"  // 012345678\n  // aa bb cc\n  public void testReplaceByEmpty() throws IOException {\n    final String BLOCK = \"aa bb cc\";\n    PatternReplaceCharFilterFactory factory = new PatternReplaceCharFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"pattern\", \"(aa)\\\\s+(bb)\\\\s+(cc)\");\n    factory.init(args);\n    CharStream cs = factory.create(\n          CharReader.get( new StringReader( BLOCK ) ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    assertFalse(ts.incrementToken());\n  }\n\n","sourceOld":"  // 012345678\n  // aa bb cc\n  public void testReplaceByEmpty() throws IOException {\n    final String BLOCK = \"aa bb cc\";\n    CharStream cs = new PatternReplaceCharFilter( \"(aa)\\\\s+(bb)\\\\s+(cc)\", \"\",\n          CharReader.get( new StringReader( BLOCK ) ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    assertEquals( 0, getTokens( ts ).size() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/analysis/TestPatternReplaceCharFilter#testReplaceByEmpty().mjava","pathOld":"src/test/org/apache/solr/analysis/TestPatternReplaceCharFilter#testReplaceByEmpty().mjava","sourceNew":"  // 012345678\n  // aa bb cc\n  public void testReplaceByEmpty() throws IOException {\n    final String BLOCK = \"aa bb cc\";\n    PatternReplaceCharFilterFactory factory = new PatternReplaceCharFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"pattern\", \"(aa)\\\\s+(bb)\\\\s+(cc)\");\n    factory.init(args);\n    CharStream cs = factory.create(\n          CharReader.get( new StringReader( BLOCK ) ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    assertFalse(ts.incrementToken());\n  }\n\n","sourceOld":"  // 012345678\n  // aa bb cc\n  public void testReplaceByEmpty() throws IOException {\n    final String BLOCK = \"aa bb cc\";\n    PatternReplaceCharFilterFactory factory = new PatternReplaceCharFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"pattern\", \"(aa)\\\\s+(bb)\\\\s+(cc)\");\n    factory.init(args);\n    CharStream cs = factory.create(\n          CharReader.get( new StringReader( BLOCK ) ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    assertFalse(ts.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["2fd023a662cc25ae7e0ad0f33d71c476a16d0579"],"b03b7626bae3b34032e501e74788f89a2f50058b":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"2fd023a662cc25ae7e0ad0f33d71c476a16d0579":["b03b7626bae3b34032e501e74788f89a2f50058b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["b03b7626bae3b34032e501e74788f89a2f50058b"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"b03b7626bae3b34032e501e74788f89a2f50058b":["2fd023a662cc25ae7e0ad0f33d71c476a16d0579"],"2fd023a662cc25ae7e0ad0f33d71c476a16d0579":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}