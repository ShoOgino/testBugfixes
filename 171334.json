{"path":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getQuery(Element).mjava","commits":[{"id":"d3c3c2404d1200c39220fa15054fae854db4e1ee","date":1140827958,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getQuery(Element).mjava","pathOld":"/dev/null","sourceNew":"\t/* (non-Javadoc)\r\n\t * @see org.apache.lucene.xmlparser.QueryObjectBuilder#process(org.w3c.dom.Element)\r\n\t */\r\n\tpublic Query getQuery(Element e) throws ParserException {\r\n\t\tBooleanQuery bq=new BooleanQuery();\r\n\t\tbq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\r\n\t\tNodeList nl = e.getElementsByTagName(\"Clause\");\r\n\t\tfor(int i=0;i<nl.getLength();i++)\r\n\t\t{\r\n\t\t\tElement clauseElem=(Element) nl.item(i);\r\n\t\t\tBooleanClause.Occur occurs=getOccursValue(clauseElem);\r\n\t\t\t\r\n\t\t\t//find the first element child which should contain a Query \r\n\t\t\tElement clauseQuery=DOMUtils.getFirstChildElement(clauseElem); \r\n\t\t\tif(clauseQuery!=null)\r\n\t\t\t{\r\n\t\t\t\tQuery q=factory.getQuery(clauseQuery);\r\n\t\t\t\tbq.add(new BooleanClause(q,occurs));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthrow new ParserException(\"BooleanClause missing child query element \");\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn bq;\r\n\t}\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f36e18a5e46a204b9cdbed5aab560b9c37b93d3","date":1141249757,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getQuery(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getQuery(Element).mjava","sourceNew":"\t/* (non-Javadoc)\r\n\t * @see org.apache.lucene.xmlparser.QueryObjectBuilder#process(org.w3c.dom.Element)\r\n\t */\r\n\tpublic Query getQuery(Element e) throws ParserException {\r\n\t\tBooleanQuery bq=new BooleanQuery();\r\n\t\tbq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\r\n\t\tNodeList nl = e.getElementsByTagName(\"Clause\");\r\n\t\tfor(int i=0;i<nl.getLength();i++)\r\n\t\t{\r\n\t\t\tElement clauseElem=(Element) nl.item(i);\r\n\t\t\tBooleanClause.Occur occurs=getOccursValue(clauseElem);\r\n\t\t\t\r\n \t\t\tElement clauseQuery=DOMUtils.getFirstChildOrFail(clauseElem);\r\n \t\t\tQuery q=factory.getQuery(clauseQuery);\r\n \t\t\tbq.add(new BooleanClause(q,occurs));\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn bq;\r\n\t}\r\n\n","sourceOld":"\t/* (non-Javadoc)\r\n\t * @see org.apache.lucene.xmlparser.QueryObjectBuilder#process(org.w3c.dom.Element)\r\n\t */\r\n\tpublic Query getQuery(Element e) throws ParserException {\r\n\t\tBooleanQuery bq=new BooleanQuery();\r\n\t\tbq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\r\n\t\tNodeList nl = e.getElementsByTagName(\"Clause\");\r\n\t\tfor(int i=0;i<nl.getLength();i++)\r\n\t\t{\r\n\t\t\tElement clauseElem=(Element) nl.item(i);\r\n\t\t\tBooleanClause.Occur occurs=getOccursValue(clauseElem);\r\n\t\t\t\r\n\t\t\t//find the first element child which should contain a Query \r\n\t\t\tElement clauseQuery=DOMUtils.getFirstChildElement(clauseElem); \r\n\t\t\tif(clauseQuery!=null)\r\n\t\t\t{\r\n\t\t\t\tQuery q=factory.getQuery(clauseQuery);\r\n\t\t\t\tbq.add(new BooleanClause(q,occurs));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthrow new ParserException(\"BooleanClause missing child query element \");\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn bq;\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9e98fb28c9831a6b05012c06179c54500f79d66","date":1151445407,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getQuery(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getQuery(Element).mjava","sourceNew":"\t/* (non-Javadoc)\r\n\t * @see org.apache.lucene.xmlparser.QueryObjectBuilder#process(org.w3c.dom.Element)\r\n\t */\r\n\tpublic Query getQuery(Element e) throws ParserException {\r\n\t\tBooleanQuery bq=new BooleanQuery(DOMUtils.getAttribute(e,\"disableCoord\",false));\r\n\t\tbq.setMinimumNumberShouldMatch(DOMUtils.getAttribute(e,\"minimumNumberShouldMatch\",0));\r\n\t\tbq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\r\n\t\tNodeList nl = e.getElementsByTagName(\"Clause\");\r\n\t\tfor(int i=0;i<nl.getLength();i++)\r\n\t\t{\r\n\t\t\tElement clauseElem=(Element) nl.item(i);\r\n\t\t\tBooleanClause.Occur occurs=getOccursValue(clauseElem);\r\n\t\t\t\r\n \t\t\tElement clauseQuery=DOMUtils.getFirstChildOrFail(clauseElem);\r\n \t\t\tQuery q=factory.getQuery(clauseQuery);\r\n \t\t\tbq.add(new BooleanClause(q,occurs));\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn bq;\r\n\t}\r\n\n","sourceOld":"\t/* (non-Javadoc)\r\n\t * @see org.apache.lucene.xmlparser.QueryObjectBuilder#process(org.w3c.dom.Element)\r\n\t */\r\n\tpublic Query getQuery(Element e) throws ParserException {\r\n\t\tBooleanQuery bq=new BooleanQuery();\r\n\t\tbq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\r\n\t\tNodeList nl = e.getElementsByTagName(\"Clause\");\r\n\t\tfor(int i=0;i<nl.getLength();i++)\r\n\t\t{\r\n\t\t\tElement clauseElem=(Element) nl.item(i);\r\n\t\t\tBooleanClause.Occur occurs=getOccursValue(clauseElem);\r\n\t\t\t\r\n \t\t\tElement clauseQuery=DOMUtils.getFirstChildOrFail(clauseElem);\r\n \t\t\tQuery q=factory.getQuery(clauseQuery);\r\n \t\t\tbq.add(new BooleanClause(q,occurs));\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn bq;\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d287046fcd5f9f990e1611857ceb6c06fcfd7de","date":1157751914,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getQuery(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getQuery(Element).mjava","sourceNew":"\t/* (non-Javadoc)\r\n\t * @see org.apache.lucene.xmlparser.QueryObjectBuilder#process(org.w3c.dom.Element)\r\n\t */\r\n\tpublic Query getQuery(Element e) throws ParserException {\r\n\t\tBooleanQuery bq=new BooleanQuery(DOMUtils.getAttribute(e,\"disableCoord\",false));\r\n\t\tbq.setMinimumNumberShouldMatch(DOMUtils.getAttribute(e,\"minimumNumberShouldMatch\",0));\r\n\t\tbq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\r\n\t\t\r\n\t\tNodeList nl = e.getChildNodes();\r\n\t\tfor(int i=0;i<nl.getLength();i++)\r\n\t\t{\r\n\t\t\tNode node = nl.item(i);\r\n\t\t\tif(node.getNodeName().equals(\"Clause\"))\r\n\t\t\t{\r\n\t\t\t\tElement clauseElem=(Element) node;\r\n\t\t\t\tBooleanClause.Occur occurs=getOccursValue(clauseElem);\r\n\t\t\t\t\r\n\t \t\t\tElement clauseQuery=DOMUtils.getFirstChildOrFail(clauseElem);\r\n\t \t\t\tQuery q=factory.getQuery(clauseQuery);\r\n\t \t\t\tbq.add(new BooleanClause(q,occurs));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn bq;\r\n\t}\r\n\n","sourceOld":"\t/* (non-Javadoc)\r\n\t * @see org.apache.lucene.xmlparser.QueryObjectBuilder#process(org.w3c.dom.Element)\r\n\t */\r\n\tpublic Query getQuery(Element e) throws ParserException {\r\n\t\tBooleanQuery bq=new BooleanQuery(DOMUtils.getAttribute(e,\"disableCoord\",false));\r\n\t\tbq.setMinimumNumberShouldMatch(DOMUtils.getAttribute(e,\"minimumNumberShouldMatch\",0));\r\n\t\tbq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\r\n\t\tNodeList nl = e.getElementsByTagName(\"Clause\");\r\n\t\tfor(int i=0;i<nl.getLength();i++)\r\n\t\t{\r\n\t\t\tElement clauseElem=(Element) nl.item(i);\r\n\t\t\tBooleanClause.Occur occurs=getOccursValue(clauseElem);\r\n\t\t\t\r\n \t\t\tElement clauseQuery=DOMUtils.getFirstChildOrFail(clauseElem);\r\n \t\t\tQuery q=factory.getQuery(clauseQuery);\r\n \t\t\tbq.add(new BooleanClause(q,occurs));\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn bq;\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a361a621b184d9b73c9c9a37323a9845b8f8260","date":1226370946,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getQuery(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getQuery(Element).mjava","sourceNew":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.xmlparser.QueryObjectBuilder#process(org.w3c.dom.Element)\n\t */\n\tpublic Query getQuery(Element e) throws ParserException {\n\t\tBooleanQuery bq=new BooleanQuery(DOMUtils.getAttribute(e,\"disableCoord\",false));\n\t\tbq.setMinimumNumberShouldMatch(DOMUtils.getAttribute(e,\"minimumNumberShouldMatch\",0));\n\t\tbq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\n\t\t\n\t\tNodeList nl = e.getChildNodes();\n\t\tfor(int i=0;i<nl.getLength();i++)\n\t\t{\n\t\t\tNode node = nl.item(i);\n\t\t\tif(node.getNodeName().equals(\"Clause\"))\n\t\t\t{\n\t\t\t\tElement clauseElem=(Element) node;\n\t\t\t\tBooleanClause.Occur occurs=getOccursValue(clauseElem);\n\t\t\t\t\n\t \t\t\tElement clauseQuery=DOMUtils.getFirstChildOrFail(clauseElem);\n\t \t\t\tQuery q=factory.getQuery(clauseQuery);\n\t \t\t\tbq.add(new BooleanClause(q,occurs));\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn bq;\n\t}\n\n","sourceOld":"\t/* (non-Javadoc)\r\n\t * @see org.apache.lucene.xmlparser.QueryObjectBuilder#process(org.w3c.dom.Element)\r\n\t */\r\n\tpublic Query getQuery(Element e) throws ParserException {\r\n\t\tBooleanQuery bq=new BooleanQuery(DOMUtils.getAttribute(e,\"disableCoord\",false));\r\n\t\tbq.setMinimumNumberShouldMatch(DOMUtils.getAttribute(e,\"minimumNumberShouldMatch\",0));\r\n\t\tbq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\r\n\t\t\r\n\t\tNodeList nl = e.getChildNodes();\r\n\t\tfor(int i=0;i<nl.getLength();i++)\r\n\t\t{\r\n\t\t\tNode node = nl.item(i);\r\n\t\t\tif(node.getNodeName().equals(\"Clause\"))\r\n\t\t\t{\r\n\t\t\t\tElement clauseElem=(Element) node;\r\n\t\t\t\tBooleanClause.Occur occurs=getOccursValue(clauseElem);\r\n\t\t\t\t\r\n\t \t\t\tElement clauseQuery=DOMUtils.getFirstChildOrFail(clauseElem);\r\n\t \t\t\tQuery q=factory.getQuery(clauseQuery);\r\n\t \t\t\tbq.add(new BooleanClause(q,occurs));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn bq;\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getQuery(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getQuery(Element).mjava","sourceNew":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.xmlparser.QueryObjectBuilder#process(org.w3c.dom.Element)\n\t */\n\tpublic Query getQuery(Element e) throws ParserException {\n\t\tBooleanQuery bq=new BooleanQuery(DOMUtils.getAttribute(e,\"disableCoord\",false));\n\t\tbq.setMinimumNumberShouldMatch(DOMUtils.getAttribute(e,\"minimumNumberShouldMatch\",0));\n\t\tbq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\n\t\t\n\t\tNodeList nl = e.getChildNodes();\n\t\tfor(int i=0;i<nl.getLength();i++)\n\t\t{\n\t\t\tNode node = nl.item(i);\n\t\t\tif(node.getNodeName().equals(\"Clause\"))\n\t\t\t{\n\t\t\t\tElement clauseElem=(Element) node;\n\t\t\t\tBooleanClause.Occur occurs=getOccursValue(clauseElem);\n\t\t\t\t\n\t \t\t\tElement clauseQuery=DOMUtils.getFirstChildOrFail(clauseElem);\n\t \t\t\tQuery q=factory.getQuery(clauseQuery);\n\t \t\t\tbq.add(new BooleanClause(q,occurs));\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn bq;\n\t}\n\n","sourceOld":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.xmlparser.QueryObjectBuilder#process(org.w3c.dom.Element)\n\t */\n\tpublic Query getQuery(Element e) throws ParserException {\n\t\tBooleanQuery bq=new BooleanQuery(DOMUtils.getAttribute(e,\"disableCoord\",false));\n\t\tbq.setMinimumNumberShouldMatch(DOMUtils.getAttribute(e,\"minimumNumberShouldMatch\",0));\n\t\tbq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\n\t\t\n\t\tNodeList nl = e.getChildNodes();\n\t\tfor(int i=0;i<nl.getLength();i++)\n\t\t{\n\t\t\tNode node = nl.item(i);\n\t\t\tif(node.getNodeName().equals(\"Clause\"))\n\t\t\t{\n\t\t\t\tElement clauseElem=(Element) node;\n\t\t\t\tBooleanClause.Occur occurs=getOccursValue(clauseElem);\n\t\t\t\t\n\t \t\t\tElement clauseQuery=DOMUtils.getFirstChildOrFail(clauseElem);\n\t \t\t\tQuery q=factory.getQuery(clauseQuery);\n\t \t\t\tbq.add(new BooleanClause(q,occurs));\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn bq;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["3d287046fcd5f9f990e1611857ceb6c06fcfd7de"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3d287046fcd5f9f990e1611857ceb6c06fcfd7de":["b9e98fb28c9831a6b05012c06179c54500f79d66"],"4f36e18a5e46a204b9cdbed5aab560b9c37b93d3":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"b9e98fb28c9831a6b05012c06179c54500f79d66":["4f36e18a5e46a204b9cdbed5aab560b9c37b93d3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["4f36e18a5e46a204b9cdbed5aab560b9c37b93d3"],"3d287046fcd5f9f990e1611857ceb6c06fcfd7de":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"4f36e18a5e46a204b9cdbed5aab560b9c37b93d3":["b9e98fb28c9831a6b05012c06179c54500f79d66"],"b9e98fb28c9831a6b05012c06179c54500f79d66":["3d287046fcd5f9f990e1611857ceb6c06fcfd7de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}