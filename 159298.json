{"path":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynLookup#main(String[]).mjava","commits":[{"id":"02a71af6b0525092e8cdc9e3649fa77150cc7814","date":1115339520,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynLookup#main(String[]).mjava","pathOld":"contrib/wordnetlc/src/java/org/apache/lucene/wordnet/SynLookup#main(String[]).mjava","sourceNew":"\tpublic static void main(String[] args) throws IOException {\n\t\tif (args.length != 2) {\n\t\t\tSystem.out.println(\n\t\t\t\t\t\t\t   \"java org.apache.lucene.wordnet.SynLookup <index path> <word>\");\n\t\t}\n\n\t\tFSDirectory directory = FSDirectory.getDirectory(args[0], false);\n\t\tIndexSearcher searcher = new IndexSearcher(directory);\n\n\t\tString word = args[1];\n\t\tHits hits = searcher.search(\n\t\t\t\t\t\t\t\t\tnew TermQuery(new Term(Syns2Index.F_WORD, word)));\n\n\t\tif (hits.length() == 0) {\n\t\t\tSystem.out.println(\"No synonyms found for \" + word);\n\t\t} else {\n\t\t\tSystem.out.println(\"Synonyms found for \\\"\" + word + \"\\\":\");\n\t\t}\n\n\t\tfor (int i = 0; i < hits.length(); i++) {\n\t\t\tDocument doc = hits.doc(i);\n\n\t\t\tString[] values = doc.getValues(Syns2Index.F_SYN);\n\n\t\t\tfor (int j = 0; j < values.length; j++) {\n\t\t\t\tSystem.out.println(values[j]);\n\t\t\t}\n\t\t}\n\n\t\tsearcher.close();\n\t\tdirectory.close();\n\t}\n\n","sourceOld":"\tpublic static void main(String[] args) throws IOException {\n\t\tif (args.length != 2) {\n\t\t\tSystem.out.println(\n\t\t\t\t\t\t\t   \"java org.apache.lucene.wordnet.SynLookup <index path> <word>\");\n\t\t}\n\n\t\tFSDirectory directory = FSDirectory.getDirectory(args[0], false);\n\t\tIndexSearcher searcher = new IndexSearcher(directory);\n\n\t\tString word = args[1];\n\t\tHits hits = searcher.search(\n\t\t\t\t\t\t\t\t\tnew TermQuery(new Term(Syns2Index.F_WORD, word)));\n\n\t\tif (hits.length() == 0) {\n\t\t\tSystem.out.println(\"No synonyms found for \" + word);\n\t\t} else {\n\t\t\tSystem.out.println(\"Synonyms found for \\\"\" + word + \"\\\":\");\n\t\t}\n\n\t\tfor (int i = 0; i < hits.length(); i++) {\n\t\t\tDocument doc = hits.doc(i);\n\n\t\t\tString[] values = doc.getValues(Syns2Index.F_SYN);\n\n\t\t\tfor (int j = 0; j < values.length; j++) {\n\t\t\t\tSystem.out.println(values[j]);\n\t\t\t}\n\t\t}\n\n\t\tsearcher.close();\n\t\tdirectory.close();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba712167ee848727018d8b77aa0c273839fbe15c","date":1244411561,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynLookup#main(String[]).mjava","pathOld":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynLookup#main(String[]).mjava","sourceNew":"\tpublic static void main(String[] args) throws IOException {\n\t\tif (args.length != 2) {\n\t\t\tSystem.out.println(\n\t\t\t\t\t\t\t   \"java org.apache.lucene.wordnet.SynLookup <index path> <word>\");\n\t\t}\n\n\t\tFSDirectory directory = FSDirectory.open(new File(args[0]));\n\t\tIndexSearcher searcher = new IndexSearcher(directory);\n\n\t\tString word = args[1];\n\t\tHits hits = searcher.search(\n\t\t\t\t\t\t\t\t\tnew TermQuery(new Term(Syns2Index.F_WORD, word)));\n\n\t\tif (hits.length() == 0) {\n\t\t\tSystem.out.println(\"No synonyms found for \" + word);\n\t\t} else {\n\t\t\tSystem.out.println(\"Synonyms found for \\\"\" + word + \"\\\":\");\n\t\t}\n\n\t\tfor (int i = 0; i < hits.length(); i++) {\n\t\t\tDocument doc = hits.doc(i);\n\n\t\t\tString[] values = doc.getValues(Syns2Index.F_SYN);\n\n\t\t\tfor (int j = 0; j < values.length; j++) {\n\t\t\t\tSystem.out.println(values[j]);\n\t\t\t}\n\t\t}\n\n\t\tsearcher.close();\n\t\tdirectory.close();\n\t}\n\n","sourceOld":"\tpublic static void main(String[] args) throws IOException {\n\t\tif (args.length != 2) {\n\t\t\tSystem.out.println(\n\t\t\t\t\t\t\t   \"java org.apache.lucene.wordnet.SynLookup <index path> <word>\");\n\t\t}\n\n\t\tFSDirectory directory = FSDirectory.getDirectory(args[0], false);\n\t\tIndexSearcher searcher = new IndexSearcher(directory);\n\n\t\tString word = args[1];\n\t\tHits hits = searcher.search(\n\t\t\t\t\t\t\t\t\tnew TermQuery(new Term(Syns2Index.F_WORD, word)));\n\n\t\tif (hits.length() == 0) {\n\t\t\tSystem.out.println(\"No synonyms found for \" + word);\n\t\t} else {\n\t\t\tSystem.out.println(\"Synonyms found for \\\"\" + word + \"\\\":\");\n\t\t}\n\n\t\tfor (int i = 0; i < hits.length(); i++) {\n\t\t\tDocument doc = hits.doc(i);\n\n\t\t\tString[] values = doc.getValues(Syns2Index.F_SYN);\n\n\t\t\tfor (int j = 0; j < values.length; j++) {\n\t\t\t\tSystem.out.println(values[j]);\n\t\t\t}\n\t\t}\n\n\t\tsearcher.close();\n\t\tdirectory.close();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynLookup#main(String[]).mjava","pathOld":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynLookup#main(String[]).mjava","sourceNew":"\tpublic static void main(String[] args) throws IOException {\n\t\tif (args.length != 2) {\n\t\t\tSystem.out.println(\n\t\t\t\t\t\t\t   \"java org.apache.lucene.wordnet.SynLookup <index path> <word>\");\n\t\t}\n\n\t\tFSDirectory directory = FSDirectory.open(new File(args[0]));\n\t\tIndexSearcher searcher = new IndexSearcher(directory, true);\n\n\t\tString word = args[1];\n\t\tHits hits = searcher.search(\n\t\t\t\t\t\t\t\t\tnew TermQuery(new Term(Syns2Index.F_WORD, word)));\n\n\t\tif (hits.length() == 0) {\n\t\t\tSystem.out.println(\"No synonyms found for \" + word);\n\t\t} else {\n\t\t\tSystem.out.println(\"Synonyms found for \\\"\" + word + \"\\\":\");\n\t\t}\n\n\t\tfor (int i = 0; i < hits.length(); i++) {\n\t\t\tDocument doc = hits.doc(i);\n\n\t\t\tString[] values = doc.getValues(Syns2Index.F_SYN);\n\n\t\t\tfor (int j = 0; j < values.length; j++) {\n\t\t\t\tSystem.out.println(values[j]);\n\t\t\t}\n\t\t}\n\n\t\tsearcher.close();\n\t\tdirectory.close();\n\t}\n\n","sourceOld":"\tpublic static void main(String[] args) throws IOException {\n\t\tif (args.length != 2) {\n\t\t\tSystem.out.println(\n\t\t\t\t\t\t\t   \"java org.apache.lucene.wordnet.SynLookup <index path> <word>\");\n\t\t}\n\n\t\tFSDirectory directory = FSDirectory.open(new File(args[0]));\n\t\tIndexSearcher searcher = new IndexSearcher(directory);\n\n\t\tString word = args[1];\n\t\tHits hits = searcher.search(\n\t\t\t\t\t\t\t\t\tnew TermQuery(new Term(Syns2Index.F_WORD, word)));\n\n\t\tif (hits.length() == 0) {\n\t\t\tSystem.out.println(\"No synonyms found for \" + word);\n\t\t} else {\n\t\t\tSystem.out.println(\"Synonyms found for \\\"\" + word + \"\\\":\");\n\t\t}\n\n\t\tfor (int i = 0; i < hits.length(); i++) {\n\t\t\tDocument doc = hits.doc(i);\n\n\t\t\tString[] values = doc.getValues(Syns2Index.F_SYN);\n\n\t\t\tfor (int j = 0; j < values.length; j++) {\n\t\t\t\tSystem.out.println(values[j]);\n\t\t\t}\n\t\t}\n\n\t\tsearcher.close();\n\t\tdirectory.close();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f148c02ddd6ba981c65ca685d0e56c3a98368e1","date":1254892102,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynLookup#main(String[]).mjava","pathOld":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynLookup#main(String[]).mjava","sourceNew":"\tpublic static void main(String[] args) throws IOException {\n\t\tif (args.length != 2) {\n\t\t\tSystem.out.println(\n\t\t\t\t\t\t\t   \"java org.apache.lucene.wordnet.SynLookup <index path> <word>\");\n\t\t}\n\n\t\tFSDirectory directory = FSDirectory.open(new File(args[0]));\n\t\tIndexSearcher searcher = new IndexSearcher(directory, true);\n\n\t\tString word = args[1];\n\t\tQuery query = new TermQuery(new Term(Syns2Index.F_WORD, word));\n\t\tCountingCollector countingCollector = new CountingCollector();\n\t\tsearcher.search(query, countingCollector);\n\n\t\tif (countingCollector.numHits == 0) {\n\t\t\tSystem.out.println(\"No synonyms found for \" + word);\n\t\t} else {\n\t\t\tSystem.out.println(\"Synonyms found for \\\"\" + word + \"\\\":\");\n\t\t}\n\n\t\tScoreDoc[] hits = searcher.search(query, countingCollector.numHits).scoreDocs;\n\t\t\n\t\tfor (int i = 0; i < hits.length; i++) {\n\t\t\tDocument doc = searcher.doc(hits[i].doc);\n\n\t\t\tString[] values = doc.getValues(Syns2Index.F_SYN);\n\n\t\t\tfor (int j = 0; j < values.length; j++) {\n\t\t\t\tSystem.out.println(values[j]);\n\t\t\t}\n\t\t}\n\n\t\tsearcher.close();\n\t\tdirectory.close();\n\t}\n\n","sourceOld":"\tpublic static void main(String[] args) throws IOException {\n\t\tif (args.length != 2) {\n\t\t\tSystem.out.println(\n\t\t\t\t\t\t\t   \"java org.apache.lucene.wordnet.SynLookup <index path> <word>\");\n\t\t}\n\n\t\tFSDirectory directory = FSDirectory.open(new File(args[0]));\n\t\tIndexSearcher searcher = new IndexSearcher(directory, true);\n\n\t\tString word = args[1];\n\t\tHits hits = searcher.search(\n\t\t\t\t\t\t\t\t\tnew TermQuery(new Term(Syns2Index.F_WORD, word)));\n\n\t\tif (hits.length() == 0) {\n\t\t\tSystem.out.println(\"No synonyms found for \" + word);\n\t\t} else {\n\t\t\tSystem.out.println(\"Synonyms found for \\\"\" + word + \"\\\":\");\n\t\t}\n\n\t\tfor (int i = 0; i < hits.length(); i++) {\n\t\t\tDocument doc = hits.doc(i);\n\n\t\t\tString[] values = doc.getValues(Syns2Index.F_SYN);\n\n\t\t\tfor (int j = 0; j < values.length; j++) {\n\t\t\t\tSystem.out.println(values[j]);\n\t\t\t}\n\t\t}\n\n\t\tsearcher.close();\n\t\tdirectory.close();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/SynLookup#main(String[]).mjava","pathOld":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynLookup#main(String[]).mjava","sourceNew":"\tpublic static void main(String[] args) throws IOException {\n\t\tif (args.length != 2) {\n\t\t\tSystem.out.println(\n\t\t\t\t\t\t\t   \"java org.apache.lucene.wordnet.SynLookup <index path> <word>\");\n\t\t}\n\n\t\tFSDirectory directory = FSDirectory.open(new File(args[0]));\n\t\tIndexSearcher searcher = new IndexSearcher(directory, true);\n\n\t\tString word = args[1];\n\t\tQuery query = new TermQuery(new Term(Syns2Index.F_WORD, word));\n\t\tCountingCollector countingCollector = new CountingCollector();\n\t\tsearcher.search(query, countingCollector);\n\n\t\tif (countingCollector.numHits == 0) {\n\t\t\tSystem.out.println(\"No synonyms found for \" + word);\n\t\t} else {\n\t\t\tSystem.out.println(\"Synonyms found for \\\"\" + word + \"\\\":\");\n\t\t}\n\n\t\tScoreDoc[] hits = searcher.search(query, countingCollector.numHits).scoreDocs;\n\t\t\n\t\tfor (int i = 0; i < hits.length; i++) {\n\t\t\tDocument doc = searcher.doc(hits[i].doc);\n\n\t\t\tString[] values = doc.getValues(Syns2Index.F_SYN);\n\n\t\t\tfor (int j = 0; j < values.length; j++) {\n\t\t\t\tSystem.out.println(values[j]);\n\t\t\t}\n\t\t}\n\n\t\tsearcher.close();\n\t\tdirectory.close();\n\t}\n\n","sourceOld":"\tpublic static void main(String[] args) throws IOException {\n\t\tif (args.length != 2) {\n\t\t\tSystem.out.println(\n\t\t\t\t\t\t\t   \"java org.apache.lucene.wordnet.SynLookup <index path> <word>\");\n\t\t}\n\n\t\tFSDirectory directory = FSDirectory.open(new File(args[0]));\n\t\tIndexSearcher searcher = new IndexSearcher(directory, true);\n\n\t\tString word = args[1];\n\t\tQuery query = new TermQuery(new Term(Syns2Index.F_WORD, word));\n\t\tCountingCollector countingCollector = new CountingCollector();\n\t\tsearcher.search(query, countingCollector);\n\n\t\tif (countingCollector.numHits == 0) {\n\t\t\tSystem.out.println(\"No synonyms found for \" + word);\n\t\t} else {\n\t\t\tSystem.out.println(\"Synonyms found for \\\"\" + word + \"\\\":\");\n\t\t}\n\n\t\tScoreDoc[] hits = searcher.search(query, countingCollector.numHits).scoreDocs;\n\t\t\n\t\tfor (int i = 0; i < hits.length; i++) {\n\t\t\tDocument doc = searcher.doc(hits[i].doc);\n\n\t\t\tString[] values = doc.getValues(Syns2Index.F_SYN);\n\n\t\t\tfor (int j = 0; j < values.length; j++) {\n\t\t\t\tSystem.out.println(values[j]);\n\t\t\t}\n\t\t}\n\n\t\tsearcher.close();\n\t\tdirectory.close();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"02a71af6b0525092e8cdc9e3649fa77150cc7814":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f148c02ddd6ba981c65ca685d0e56c3a98368e1":["4256bc1b3c94786287ccdfc751230374521843cf"],"4256bc1b3c94786287ccdfc751230374521843cf":["ba712167ee848727018d8b77aa0c273839fbe15c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f148c02ddd6ba981c65ca685d0e56c3a98368e1"],"ba712167ee848727018d8b77aa0c273839fbe15c":["02a71af6b0525092e8cdc9e3649fa77150cc7814"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["02a71af6b0525092e8cdc9e3649fa77150cc7814"],"02a71af6b0525092e8cdc9e3649fa77150cc7814":["ba712167ee848727018d8b77aa0c273839fbe15c"],"0f148c02ddd6ba981c65ca685d0e56c3a98368e1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4256bc1b3c94786287ccdfc751230374521843cf":["0f148c02ddd6ba981c65ca685d0e56c3a98368e1"],"ba712167ee848727018d8b77aa0c273839fbe15c":["4256bc1b3c94786287ccdfc751230374521843cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}