{"path":"src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","commits":[{"id":"b8b3b526542a07c380e03ce642edd7ca82ac961f","date":1226443334,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"/dev/null","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection commits = IndexReader.listCommits(dir);\n    for (Iterator iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit = (IndexCommit) iterator.next();\n      String ud=commit.getUserData();\n      if (ud != null)\n        if (ud.endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(),\n                                    new RollbackDeletionPolicy(id), MaxFieldLength.UNLIMITED, last);\n    w.commit(\"Rolled back to 1-\"+id);\n    w.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3ab91f3bb602daf6393fa7f78b11afd3400d669","date":1243282044,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection commits = IndexReader.listCommits(dir);\n    for (Iterator iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit = (IndexCommit) iterator.next();\n      Map ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (((String) ud.get(\"index\")).endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(),\n                                    new RollbackDeletionPolicy(id), MaxFieldLength.UNLIMITED, last);\n    Map data = new HashMap();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection commits = IndexReader.listCommits(dir);\n    for (Iterator iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit = (IndexCommit) iterator.next();\n      String ud=commit.getUserData();\n      if (ud != null)\n        if (ud.endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(),\n                                    new RollbackDeletionPolicy(id), MaxFieldLength.UNLIMITED, last);\n    w.commit(\"Rolled back to 1-\"+id);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e450c7d50c2fc84c963d0d7ade9d3217d868064d","date":1259932067,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(),\n                                    new RollbackDeletionPolicy(id), MaxFieldLength.UNLIMITED, last);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection commits = IndexReader.listCommits(dir);\n    for (Iterator iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit = (IndexCommit) iterator.next();\n      Map ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (((String) ud.get(\"index\")).endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(),\n                                    new RollbackDeletionPolicy(id), MaxFieldLength.UNLIMITED, last);\n    Map data = new HashMap();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT),\n                                    new RollbackDeletionPolicy(id), MaxFieldLength.UNLIMITED, last);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(),\n                                    new RollbackDeletionPolicy(id), MaxFieldLength.UNLIMITED, last);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT),\n                                    new RollbackDeletionPolicy(id), MaxFieldLength.UNLIMITED, last);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT),\n                                    new RollbackDeletionPolicy(id), MaxFieldLength.UNLIMITED, last);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT),\n                                    new RollbackDeletionPolicy(id), MaxFieldLength.UNLIMITED, last);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT),\n                                    new RollbackDeletionPolicy(id), MaxFieldLength.UNLIMITED, last);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT),\n                                    new RollbackDeletionPolicy(id), MaxFieldLength.UNLIMITED, last);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["e450c7d50c2fc84c963d0d7ade9d3217d868064d"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"d3ab91f3bb602daf6393fa7f78b11afd3400d669":["b8b3b526542a07c380e03ce642edd7ca82ac961f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"e450c7d50c2fc84c963d0d7ade9d3217d868064d":["d3ab91f3bb602daf6393fa7f78b11afd3400d669"],"b8b3b526542a07c380e03ce642edd7ca82ac961f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"d3ab91f3bb602daf6393fa7f78b11afd3400d669":["e450c7d50c2fc84c963d0d7ade9d3217d868064d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b8b3b526542a07c380e03ce642edd7ca82ac961f"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"e450c7d50c2fc84c963d0d7ade9d3217d868064d":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"b8b3b526542a07c380e03ce642edd7ca82ac961f":["d3ab91f3bb602daf6393fa7f78b11afd3400d669"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}