{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree#GeohashPrefixTree(SpatialContext,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree#GeohashPrefixTree(SpatialContext,int).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree#GeohashPrefixTree(SpatialContext,int).mjava","sourceNew":"  public GeohashPrefixTree(SpatialContext ctx, int maxLevels) {\n    super(ctx, maxLevels);\n    Rectangle bounds = ctx.getWorldBounds();\n    if (bounds.getMinX() != -180)\n      throw new IllegalArgumentException(\"Geohash only supports lat-lon world bounds. Got \"+bounds);\n    int MAXP = getMaxLevelsPossible();\n    if (maxLevels <= 0 || maxLevels > MAXP)\n      throw new IllegalArgumentException(\"maxLen must be [1-\"+MAXP+\"] but got \"+ maxLevels);\n  }\n\n","sourceOld":"  public GeohashPrefixTree(SpatialContext ctx, int maxLevels) {\n    super(ctx, maxLevels);\n    Rectangle bounds = ctx.getWorldBounds();\n    if (bounds.getMinX() != -180)\n      throw new IllegalArgumentException(\"Geohash only supports lat-lon world bounds. Got \"+bounds);\n    int MAXP = getMaxLevelsPossible();\n    if (maxLevels <= 0 || maxLevels > MAXP)\n      throw new IllegalArgumentException(\"maxLen must be [1-\"+MAXP+\"] but got \"+ maxLevels);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c33065b93a9e307d81df3e2ee28f57b73869735","date":1430210460,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree#GeohashPrefixTree(SpatialContext,int).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree#GeohashPrefixTree(SpatialContext,int).mjava","sourceNew":"  public GeohashPrefixTree(SpatialContext ctx, int maxLevels) {\n    super(ctx, maxLevels);\n    Rectangle bounds = ctx.getWorldBounds();\n    if (bounds.getMinX() != -180)\n      throw new IllegalArgumentException(\"Geohash only supports lat-lon world bounds. Got \"+bounds);\n    int MAXP = getMaxLevelsPossible();\n    if (maxLevels <= 0 || maxLevels > MAXP)\n      throw new IllegalArgumentException(\"maxLevels must be [1-\"+MAXP+\"] but got \"+ maxLevels);\n  }\n\n","sourceOld":"  public GeohashPrefixTree(SpatialContext ctx, int maxLevels) {\n    super(ctx, maxLevels);\n    Rectangle bounds = ctx.getWorldBounds();\n    if (bounds.getMinX() != -180)\n      throw new IllegalArgumentException(\"Geohash only supports lat-lon world bounds. Got \"+bounds);\n    int MAXP = getMaxLevelsPossible();\n    if (maxLevels <= 0 || maxLevels > MAXP)\n      throw new IllegalArgumentException(\"maxLen must be [1-\"+MAXP+\"] but got \"+ maxLevels);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree#GeohashPrefixTree(SpatialContext,int).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree#GeohashPrefixTree(SpatialContext,int).mjava","sourceNew":"  public GeohashPrefixTree(SpatialContext ctx, int maxLevels) {\n    super(ctx, maxLevels);\n    Rectangle bounds = ctx.getWorldBounds();\n    if (bounds.getMinX() != -180)\n      throw new IllegalArgumentException(\"Geohash only supports lat-lon world bounds. Got \"+bounds);\n    int MAXP = getMaxLevelsPossible();\n    if (maxLevels <= 0 || maxLevels > MAXP)\n      throw new IllegalArgumentException(\"maxLevels must be [1-\"+MAXP+\"] but got \"+ maxLevels);\n  }\n\n","sourceOld":"  public GeohashPrefixTree(SpatialContext ctx, int maxLevels) {\n    super(ctx, maxLevels);\n    Rectangle bounds = ctx.getWorldBounds();\n    if (bounds.getMinX() != -180)\n      throw new IllegalArgumentException(\"Geohash only supports lat-lon world bounds. Got \"+bounds);\n    int MAXP = getMaxLevelsPossible();\n    if (maxLevels <= 0 || maxLevels > MAXP)\n      throw new IllegalArgumentException(\"maxLevels must be [1-\"+MAXP+\"] but got \"+ maxLevels);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree#GeohashPrefixTree(SpatialContext,int).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree#GeohashPrefixTree(SpatialContext,int).mjava","sourceNew":"  public GeohashPrefixTree(SpatialContext ctx, int maxLevels) {\n    super(ctx, maxLevels);\n    Rectangle bounds = ctx.getWorldBounds();\n    if (bounds.getMinX() != -180)\n      throw new IllegalArgumentException(\"Geohash only supports lat-lon world bounds. Got \"+bounds);\n    int MAXP = getMaxLevelsPossible();\n    if (maxLevels <= 0 || maxLevels > MAXP)\n      throw new IllegalArgumentException(\"maxLevels must be [1-\"+MAXP+\"] but got \"+ maxLevels);\n  }\n\n","sourceOld":"  public GeohashPrefixTree(SpatialContext ctx, int maxLevels) {\n    super(ctx, maxLevels);\n    Rectangle bounds = ctx.getWorldBounds();\n    if (bounds.getMinX() != -180)\n      throw new IllegalArgumentException(\"Geohash only supports lat-lon world bounds. Got \"+bounds);\n    int MAXP = getMaxLevelsPossible();\n    if (maxLevels <= 0 || maxLevels > MAXP)\n      throw new IllegalArgumentException(\"maxLevels must be [1-\"+MAXP+\"] but got \"+ maxLevels);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["9c33065b93a9e307d81df3e2ee28f57b73869735","112d77ac8d3e10a362516ad834c9a11d35c94234"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9c33065b93a9e307d81df3e2ee28f57b73869735":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["9c33065b93a9e307d81df3e2ee28f57b73869735"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["9c33065b93a9e307d81df3e2ee28f57b73869735"],"9c33065b93a9e307d81df3e2ee28f57b73869735":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}