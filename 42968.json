{"path":"lucene/src/java/org/apache/lucene/util/BytesRef#copyBytes(BytesRef).mjava","commits":[{"id":"e6e919043fa85ee891123768dd655a98edbbf63c","date":1322225413,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/BytesRef#copyBytes(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BytesRef#copy(BytesRef).mjava","sourceNew":"  /**\n   * Copies the bytes from the given {@link BytesRef}\n   * <p>\n   * NOTE: this method resets the offset to 0 and resizes the reference array\n   * if needed.\n   */\n  public void copyBytes(BytesRef other) {\n    if (bytes.length < other.length) {\n      bytes = new byte[other.length];\n    }\n    System.arraycopy(other.bytes, other.offset, bytes, 0, other.length);\n    length = other.length;\n    offset = 0;\n  }\n\n","sourceOld":"  /**\n   * Copies the given {@link BytesRef}\n   * <p>\n   * NOTE: this method resets the offset to 0 and resizes the reference array\n   * if needed.\n   */\n  public void copy(BytesRef other) {\n    if (bytes.length < other.length) {\n      bytes = new byte[other.length];\n    }\n    System.arraycopy(other.bytes, other.offset, bytes, 0, other.length);\n    length = other.length;\n    offset = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867c935d21f9b0e5740841f988a4919546dcb374","date":1322417002,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/BytesRef#copyBytes(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BytesRef#copyBytes(BytesRef).mjava","sourceNew":"  /**\n   * Copies the bytes from the given {@link BytesRef}\n   * <p>\n   * NOTE: if this would exceed the array size, this method creates a \n   * new reference array.\n   */\n  public void copyBytes(BytesRef other) {\n    if (bytes.length < other.length) {\n      bytes = new byte[other.length];\n      offset = 0;\n    }\n    System.arraycopy(other.bytes, other.offset, bytes, offset, other.length);\n    length = other.length;\n  }\n\n","sourceOld":"  /**\n   * Copies the bytes from the given {@link BytesRef}\n   * <p>\n   * NOTE: this method resets the offset to 0 and resizes the reference array\n   * if needed.\n   */\n  public void copyBytes(BytesRef other) {\n    if (bytes.length < other.length) {\n      bytes = new byte[other.length];\n    }\n    System.arraycopy(other.bytes, other.offset, bytes, 0, other.length);\n    length = other.length;\n    offset = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRef#copyBytes(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BytesRef#copyBytes(BytesRef).mjava","sourceNew":"  /**\n   * Copies the bytes from the given {@link BytesRef}\n   * <p>\n   * NOTE: if this would exceed the array size, this method creates a \n   * new reference array.\n   */\n  public void copyBytes(BytesRef other) {\n    if (bytes.length < other.length) {\n      bytes = new byte[other.length];\n      offset = 0;\n    }\n    System.arraycopy(other.bytes, other.offset, bytes, offset, other.length);\n    length = other.length;\n  }\n\n","sourceOld":"  /**\n   * Copies the bytes from the given {@link BytesRef}\n   * <p>\n   * NOTE: if this would exceed the array size, this method creates a \n   * new reference array.\n   */\n  public void copyBytes(BytesRef other) {\n    if (bytes.length < other.length) {\n      bytes = new byte[other.length];\n      offset = 0;\n    }\n    System.arraycopy(other.bytes, other.offset, bytes, offset, other.length);\n    length = other.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["867c935d21f9b0e5740841f988a4919546dcb374"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"867c935d21f9b0e5740841f988a4919546dcb374":["e6e919043fa85ee891123768dd655a98edbbf63c"],"e6e919043fa85ee891123768dd655a98edbbf63c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e6e919043fa85ee891123768dd655a98edbbf63c"],"867c935d21f9b0e5740841f988a4919546dcb374":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e6e919043fa85ee891123768dd655a98edbbf63c":["867c935d21f9b0e5740841f988a4919546dcb374"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}