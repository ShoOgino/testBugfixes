{"path":"src/java/org/apache/lucene/index/SegmentReader#startCommit().mjava","commits":[{"id":"eeefd99c477417e5c7c574228461ebafe92469d4","date":1166460329,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#startCommit().mjava","pathOld":"/dev/null","sourceNew":"  void startCommit() {\n    super.startCommit();\n    rollbackDeletedDocsDirty = deletedDocsDirty;\n    rollbackNormsDirty = normsDirty;\n    rollbackUndeleteAll = undeleteAll;\n    Enumeration values = norms.elements();\n    while (values.hasMoreElements()) {\n      Norm norm = (Norm) values.nextElement();\n      norm.rollbackDirty = norm.dirty;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["15633975e2cb95a0c6eee9a600583708438ebd76"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3b9d7142a399ac70a71ce5b40ee66695eda5b7e8","date":1195335263,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#startCommit().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#startCommit().mjava","sourceNew":"  void startCommit() {\n    super.startCommit();\n    rollbackDeletedDocsDirty = deletedDocsDirty;\n    rollbackNormsDirty = normsDirty;\n    rollbackUndeleteAll = undeleteAll;\n    Iterator it = norms.values().iterator();\n    while (it.hasNext()) {\n      Norm norm = (Norm) it.next();\n      norm.rollbackDirty = norm.dirty;\n    }\n  }\n\n","sourceOld":"  void startCommit() {\n    super.startCommit();\n    rollbackDeletedDocsDirty = deletedDocsDirty;\n    rollbackNormsDirty = normsDirty;\n    rollbackUndeleteAll = undeleteAll;\n    Enumeration values = norms.elements();\n    while (values.hasMoreElements()) {\n      Norm norm = (Norm) values.nextElement();\n      norm.rollbackDirty = norm.dirty;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"34e2c71b6406443562df54db233fde0728502f64","date":1209294850,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#startCommit().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#startCommit().mjava","sourceNew":"  void startCommit() {\n    super.startCommit();\n    rollbackDeletedDocsDirty = deletedDocsDirty;\n    rollbackNormsDirty = normsDirty;\n    rollbackUndeleteAll = undeleteAll;\n    rollbackPendingDeleteCount = pendingDeleteCount;\n    Iterator it = norms.values().iterator();\n    while (it.hasNext()) {\n      Norm norm = (Norm) it.next();\n      norm.rollbackDirty = norm.dirty;\n    }\n  }\n\n","sourceOld":"  void startCommit() {\n    super.startCommit();\n    rollbackDeletedDocsDirty = deletedDocsDirty;\n    rollbackNormsDirty = normsDirty;\n    rollbackUndeleteAll = undeleteAll;\n    Iterator it = norms.values().iterator();\n    while (it.hasNext()) {\n      Norm norm = (Norm) it.next();\n      norm.rollbackDirty = norm.dirty;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15633975e2cb95a0c6eee9a600583708438ebd76","date":1243022273,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#startCommit().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#startCommit().mjava","sourceNew":"  void startCommit() {\n    super.startCommit();\n    rollbackDeletedDocsDirty = deletedDocsDirty;\n    rollbackNormsDirty = normsDirty;\n    rollbackPendingDeleteCount = pendingDeleteCount;\n    Iterator it = norms.values().iterator();\n    while (it.hasNext()) {\n      Norm norm = (Norm) it.next();\n      norm.rollbackDirty = norm.dirty;\n    }\n  }\n\n","sourceOld":"  void startCommit() {\n    super.startCommit();\n    rollbackDeletedDocsDirty = deletedDocsDirty;\n    rollbackNormsDirty = normsDirty;\n    rollbackUndeleteAll = undeleteAll;\n    rollbackPendingDeleteCount = pendingDeleteCount;\n    Iterator it = norms.values().iterator();\n    while (it.hasNext()) {\n      Norm norm = (Norm) it.next();\n      norm.rollbackDirty = norm.dirty;\n    }\n  }\n\n","bugFix":["eeefd99c477417e5c7c574228461ebafe92469d4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1","date":1244392278,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#startCommit().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#startCommit().mjava","sourceNew":"  void startCommit() {\n    rollbackHasChanges = hasChanges;\n    rollbackDeletedDocsDirty = deletedDocsDirty;\n    rollbackNormsDirty = normsDirty;\n    rollbackPendingDeleteCount = pendingDeleteCount;\n    Iterator it = norms.values().iterator();\n    while (it.hasNext()) {\n      Norm norm = (Norm) it.next();\n      norm.rollbackDirty = norm.dirty;\n    }\n  }\n\n","sourceOld":"  void startCommit() {\n    super.startCommit();\n    rollbackDeletedDocsDirty = deletedDocsDirty;\n    rollbackNormsDirty = normsDirty;\n    rollbackPendingDeleteCount = pendingDeleteCount;\n    Iterator it = norms.values().iterator();\n    while (it.hasNext()) {\n      Norm norm = (Norm) it.next();\n      norm.rollbackDirty = norm.dirty;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d","date":1255859449,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#startCommit().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#startCommit().mjava","sourceNew":"  void startCommit() {\n    rollbackHasChanges = hasChanges;\n    rollbackDeletedDocsDirty = deletedDocsDirty;\n    rollbackNormsDirty = normsDirty;\n    rollbackPendingDeleteCount = pendingDeleteCount;\n    for (Norm norm : norms.values()) {\n      norm.rollbackDirty = norm.dirty;\n    }\n  }\n\n","sourceOld":"  void startCommit() {\n    rollbackHasChanges = hasChanges;\n    rollbackDeletedDocsDirty = deletedDocsDirty;\n    rollbackNormsDirty = normsDirty;\n    rollbackPendingDeleteCount = pendingDeleteCount;\n    Iterator it = norms.values().iterator();\n    while (it.hasNext()) {\n      Norm norm = (Norm) it.next();\n      norm.rollbackDirty = norm.dirty;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#startCommit().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#startCommit().mjava","sourceNew":"  void startCommit() {\n    rollbackHasChanges = hasChanges;\n    rollbackDeletedDocsDirty = deletedDocsDirty;\n    rollbackNormsDirty = normsDirty;\n    rollbackPendingDeleteCount = pendingDeleteCount;\n    for (Norm norm : norms.values()) {\n      norm.rollbackDirty = norm.dirty;\n    }\n  }\n\n","sourceOld":"  void startCommit() {\n    rollbackHasChanges = hasChanges;\n    rollbackDeletedDocsDirty = deletedDocsDirty;\n    rollbackNormsDirty = normsDirty;\n    rollbackPendingDeleteCount = pendingDeleteCount;\n    for (Norm norm : norms.values()) {\n      norm.rollbackDirty = norm.dirty;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["15633975e2cb95a0c6eee9a600583708438ebd76"],"15633975e2cb95a0c6eee9a600583708438ebd76":["34e2c71b6406443562df54db233fde0728502f64"],"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"34e2c71b6406443562df54db233fde0728502f64":["3b9d7142a399ac70a71ce5b40ee66695eda5b7e8"],"eeefd99c477417e5c7c574228461ebafe92469d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3b9d7142a399ac70a71ce5b40ee66695eda5b7e8":["eeefd99c477417e5c7c574228461ebafe92469d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fa27b750ee9a51ec4bed93ef328aef9ca1e2153d"]},"commit2Childs":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["fa27b750ee9a51ec4bed93ef328aef9ca1e2153d"],"15633975e2cb95a0c6eee9a600583708438ebd76":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"34e2c71b6406443562df54db233fde0728502f64":["15633975e2cb95a0c6eee9a600583708438ebd76"],"eeefd99c477417e5c7c574228461ebafe92469d4":["3b9d7142a399ac70a71ce5b40ee66695eda5b7e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeefd99c477417e5c7c574228461ebafe92469d4"],"3b9d7142a399ac70a71ce5b40ee66695eda5b7e8":["34e2c71b6406443562df54db233fde0728502f64"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}