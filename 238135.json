{"path":"lucene/src/test-framework/org/apache/lucene/analysis/BaseTokenStreamTestCase#toIntArray(List[Integer]).mjava","commits":[{"id":"46a47f84cd37ce2aeaade285844ee750552c2d37","date":1309895846,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/BaseTokenStreamTestCase#toIntArray(List[Integer]).mjava","pathOld":"/dev/null","sourceNew":"  static int[] toIntArray(List<Integer> list) {\n    int ret[] = new int[list.size()];\n    int offset = 0;\n    for (Integer i : list) {\n      ret[offset++] = i;\n    }\n    return ret;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/BaseTokenStreamTestCase#toIntArray(List[Integer]).mjava","pathOld":"/dev/null","sourceNew":"  static int[] toIntArray(List<Integer> list) {\n    int ret[] = new int[list.size()];\n    int offset = 0;\n    for (Integer i : list) {\n      ret[offset++] = i;\n    }\n    return ret;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/BaseTokenStreamTestCase#toIntArray(List[Integer]).mjava","pathOld":"/dev/null","sourceNew":"  static int[] toIntArray(List<Integer> list) {\n    int ret[] = new int[list.size()];\n    int offset = 0;\n    for (Integer i : list) {\n      ret[offset++] = i;\n    }\n    return ret;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/analysis/BaseTokenStreamTestCase#toIntArray(List[Integer]).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/analysis/BaseTokenStreamTestCase#toIntArray(List[Integer]).mjava","sourceNew":"  static int[] toIntArray(List<Integer> list) {\n    int ret[] = new int[list.size()];\n    int offset = 0;\n    for (Integer i : list) {\n      ret[offset++] = i;\n    }\n    return ret;\n  }\n\n","sourceOld":"  static int[] toIntArray(List<Integer> list) {\n    int ret[] = new int[list.size()];\n    int offset = 0;\n    for (Integer i : list) {\n      ret[offset++] = i;\n    }\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["46a47f84cd37ce2aeaade285844ee750552c2d37"],"46a47f84cd37ce2aeaade285844ee750552c2d37":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","46a47f84cd37ce2aeaade285844ee750552c2d37"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","46a47f84cd37ce2aeaade285844ee750552c2d37"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"46a47f84cd37ce2aeaade285844ee750552c2d37":["7b91922b55d15444d554721b352861d028eb8278","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["46a47f84cd37ce2aeaade285844ee750552c2d37","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}