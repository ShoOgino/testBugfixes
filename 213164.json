{"path":"src/test/org/apache/solr/search/TestSearchPerf#doSetGen(int,Query).mjava","commits":[{"id":"af88ddf3d03b8f9d83ad08cafaa7438a1206e405","date":1242338740,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/search/TestSearchPerf#doSetGen(int,Query).mjava","pathOld":"/dev/null","sourceNew":"  int doSetGen(int iter, Query q) throws Exception {\n    close();\n    req = lrf.makeRequest(\"q\",\"*:*\");\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    long start = System.currentTimeMillis();\n\n    int ret = 0;\n    for (int i=0; i<iter; i++) {\n      DocSet set = searcher.getDocSetNC(q, null);\n      ret += set.size();\n    }\n\n    long end = System.currentTimeMillis();\n    System.out.println(\"ret=\"+ret+ \" time=\"+(end-start)+\" throughput=\"+iter*1000/(end-start));\n\n    return ret;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1de28dd3a9dd43a5d574a7f5469b28f789e68c56","date":1242823326,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/search/TestSearchPerf#doSetGen(int,Query).mjava","pathOld":"src/test/org/apache/solr/search/TestSearchPerf#doSetGen(int,Query).mjava","sourceNew":"  int doSetGen(int iter, Query q) throws Exception {\n    SolrQueryRequest req = lrf.makeRequest();\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    long start = System.currentTimeMillis();\n\n    int ret = 0;\n    for (int i=0; i<iter; i++) {\n      DocSet set = searcher.getDocSetNC(q, null);\n      ret += set.size();\n    }\n\n    long end = System.currentTimeMillis();\n    System.out.println(\"ret=\"+ret+ \" time=\"+(end-start)+\" throughput=\"+iter*1000/(end-start+1));\n\n    req.close();\n    return ret;\n  }\n\n","sourceOld":"  int doSetGen(int iter, Query q) throws Exception {\n    close();\n    req = lrf.makeRequest(\"q\",\"*:*\");\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    long start = System.currentTimeMillis();\n\n    int ret = 0;\n    for (int i=0; i<iter; i++) {\n      DocSet set = searcher.getDocSetNC(q, null);\n      ret += set.size();\n    }\n\n    long end = System.currentTimeMillis();\n    System.out.println(\"ret=\"+ret+ \" time=\"+(end-start)+\" throughput=\"+iter*1000/(end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52df4540d5cd0c887f5e56ef0f387d7489f5d44f","date":1243099614,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/search/TestSearchPerf#doSetGen(int,Query).mjava","pathOld":"src/test/org/apache/solr/search/TestSearchPerf#doSetGen(int,Query).mjava","sourceNew":"  int doSetGen(int iter, Query q) throws Exception {\n    SolrQueryRequest req = lrf.makeRequest();\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    long start = System.currentTimeMillis();\n\n    int ret = 0;\n    for (int i=0; i<iter; i++) {\n      DocSet set = searcher.getDocSetNC(q, null);\n      ret += set.size();\n    }\n\n    long end = System.currentTimeMillis();\n    System.out.println(\"ret=\"+ret+ \" time=\"+(end-start)+\" throughput=\"+iter*1000/(end-start+1));\n\n    req.close();\n    assertTrue(ret>0);  // make sure we did some work\n    return ret;\n  }\n\n","sourceOld":"  int doSetGen(int iter, Query q) throws Exception {\n    SolrQueryRequest req = lrf.makeRequest();\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    long start = System.currentTimeMillis();\n\n    int ret = 0;\n    for (int i=0; i<iter; i++) {\n      DocSet set = searcher.getDocSetNC(q, null);\n      ret += set.size();\n    }\n\n    long end = System.currentTimeMillis();\n    System.out.println(\"ret=\"+ret+ \" time=\"+(end-start)+\" throughput=\"+iter*1000/(end-start+1));\n\n    req.close();\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/TestSearchPerf#doSetGen(int,Query).mjava","pathOld":"src/test/org/apache/solr/search/TestSearchPerf#doSetGen(int,Query).mjava","sourceNew":"  int doSetGen(int iter, Query q) throws Exception {\n    SolrQueryRequest req = lrf.makeRequest();\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    long start = System.currentTimeMillis();\n\n    int ret = 0;\n    for (int i=0; i<iter; i++) {\n      DocSet set = searcher.getDocSetNC(q, null);\n      ret += set.size();\n    }\n\n    long end = System.currentTimeMillis();\n    System.out.println(\"ret=\"+ret+ \" time=\"+(end-start)+\" throughput=\"+iter*1000/(end-start+1));\n\n    req.close();\n    assertTrue(ret>0);  // make sure we did some work\n    return ret;\n  }\n\n","sourceOld":"  int doSetGen(int iter, Query q) throws Exception {\n    SolrQueryRequest req = lrf.makeRequest();\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    long start = System.currentTimeMillis();\n\n    int ret = 0;\n    for (int i=0; i<iter; i++) {\n      DocSet set = searcher.getDocSetNC(q, null);\n      ret += set.size();\n    }\n\n    long end = System.currentTimeMillis();\n    System.out.println(\"ret=\"+ret+ \" time=\"+(end-start)+\" throughput=\"+iter*1000/(end-start+1));\n\n    req.close();\n    assertTrue(ret>0);  // make sure we did some work\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"52df4540d5cd0c887f5e56ef0f387d7489f5d44f":["1de28dd3a9dd43a5d574a7f5469b28f789e68c56"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["52df4540d5cd0c887f5e56ef0f387d7489f5d44f"],"1de28dd3a9dd43a5d574a7f5469b28f789e68c56":["af88ddf3d03b8f9d83ad08cafaa7438a1206e405"],"af88ddf3d03b8f9d83ad08cafaa7438a1206e405":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"52df4540d5cd0c887f5e56ef0f387d7489f5d44f":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["af88ddf3d03b8f9d83ad08cafaa7438a1206e405"],"1de28dd3a9dd43a5d574a7f5469b28f789e68c56":["52df4540d5cd0c887f5e56ef0f387d7489f5d44f"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"af88ddf3d03b8f9d83ad08cafaa7438a1206e405":["1de28dd3a9dd43a5d574a7f5469b28f789e68c56"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}