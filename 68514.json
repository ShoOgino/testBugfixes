{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer#createComponents(String,Reader).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer#createComponents(String,Reader).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /**\n   * Creates a token stream that tokenizes all the text in the given Reader;\n   * This implementation forwards to <code>tokenStream(String, Reader, String)</code> and is\n   * less efficient than <code>tokenStream(String, Reader, String)</code>.\n   * \n   * @param fieldName\n   *            the name of the field to tokenize (currently ignored).\n   * @param reader\n   *            the reader delivering the text\n   * @return a new token stream\n   */\n  @Override\n  public TokenStreamComponents createComponents(String fieldName, Reader reader) {\n    try {\n      String text = toString(reader);\n      return createComponents(fieldName, reader, text);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a token stream that tokenizes all the text in the given Reader;\n   * This implementation forwards to <code>tokenStream(String, Reader, String)</code> and is\n   * less efficient than <code>tokenStream(String, Reader, String)</code>.\n   * \n   * @param fieldName\n   *            the name of the field to tokenize (currently ignored).\n   * @param reader\n   *            the reader delivering the text\n   * @return a new token stream\n   */\n  @Override\n  public TokenStreamComponents createComponents(String fieldName, Reader reader) {\n    try {\n      String text = toString(reader);\n      return createComponents(fieldName, reader, text);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer#createComponents(String,Reader).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a token stream that tokenizes all the text in the given Reader;\n   * This implementation forwards to <code>tokenStream(String, Reader, String)</code> and is\n   * less efficient than <code>tokenStream(String, Reader, String)</code>.\n   * \n   * @param fieldName\n   *            the name of the field to tokenize (currently ignored).\n   * @param reader\n   *            the reader delivering the text\n   * @return a new token stream\n   */\n  @Override\n  public TokenStreamComponents createComponents(String fieldName, Reader reader) {\n    try {\n      String text = toString(reader);\n      return createComponents(fieldName, reader, text);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}