{"path":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","commits":[{"id":"163fe85a71d778fd2b7747f65ca27b54829e2e57","date":1279898785,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n    state.flushedFiles.add(IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.TERMS_EXTENSION));\n    state.flushedFiles.add(IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.TERMS_INDEX_EXTENSION));\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    state.flushedFiles.add(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n      state.flushedFiles.add(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b103252dee6afa1b6d7a622c773d178788eb85a","date":1280180143,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n    state.flushedFiles.add(IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.TERMS_EXTENSION));\n    state.flushedFiles.add(IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.TERMS_INDEX_EXTENSION));\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    state.flushedFiles.add(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n      state.flushedFiles.add(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n    state.flushedFiles.add(IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.TERMS_EXTENSION));\n    state.flushedFiles.add(IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.TERMS_INDEX_EXTENSION));\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    state.flushedFiles.add(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n      state.flushedFiles.add(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe","date":1294227869,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","sourceNew":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n    state.flushedFiles.add(IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.TERMS_EXTENSION));\n    state.flushedFiles.add(IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.TERMS_INDEX_EXTENSION));\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    state.flushedFiles.add(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n      state.flushedFiles.add(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","sourceNew":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n    state.flushedFiles.add(IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.TERMS_EXTENSION));\n    state.flushedFiles.add(IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.TERMS_INDEX_EXTENSION));\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    state.flushedFiles.add(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n      state.flushedFiles.add(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","sourceNew":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n    state.flushedFiles.add(IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.TERMS_EXTENSION));\n    state.flushedFiles.add(IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.TERMS_INDEX_EXTENSION));\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    state.flushedFiles.add(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n      state.flushedFiles.add(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","sourceNew":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","sourceNew":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","sourceNew":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["4b103252dee6afa1b6d7a622c773d178788eb85a","fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4b103252dee6afa1b6d7a622c773d178788eb85a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","163fe85a71d778fd2b7747f65ca27b54829e2e57"],"163fe85a71d778fd2b7747f65ca27b54829e2e57":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["70ad682703b8585f5d0a637efec044d57ec05efb","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["3242a09f703274d3b9283f2064a1a33064b53a1b","fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe"],"fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["868da859b43505d9d2a023bfeae6dd0c795f5295","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["70ad682703b8585f5d0a637efec044d57ec05efb","3242a09f703274d3b9283f2064a1a33064b53a1b","fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe"],"163fe85a71d778fd2b7747f65ca27b54829e2e57":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3242a09f703274d3b9283f2064a1a33064b53a1b","4b103252dee6afa1b6d7a622c773d178788eb85a","163fe85a71d778fd2b7747f65ca27b54829e2e57"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}