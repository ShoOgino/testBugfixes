{"path":"src/test/org/apache/lucene/search/payloads/TestBoostingNearQuery#newPhraseQuery(String,String,boolean).mjava","commits":[{"id":"94a3c9097762cec00567aff9ceae83842107c895","date":1249571658,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/payloads/TestBoostingNearQuery#newPhraseQuery(String,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"\tprivate BoostingNearQuery newPhraseQuery (String fieldName, String phrase, boolean inOrder) {\n\t\tint n;\n\t\tString[] words = phrase.split(\"[\\\\s]+\");\n\t\tSpanQuery clauses[] = new SpanQuery[words.length];\n\t\tfor (int i=0;i<clauses.length;i++) {\n\t\t\tclauses[i] = new BoostingTermQuery(new Term(fieldName, words[i]));  \n\t\t} \n\t\treturn new BoostingNearQuery(clauses, 0, inOrder);\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa4f1b5e611afe6cb170951e0a9202ff95dc9156","date":1250976267,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#newPhraseQuery(String,String,boolean).mjava","pathOld":"src/test/org/apache/lucene/search/payloads/TestBoostingNearQuery#newPhraseQuery(String,String,boolean).mjava","sourceNew":"\tprivate PayloadNearQuery newPhraseQuery (String fieldName, String phrase, boolean inOrder) {\n\t\tint n;\n\t\tString[] words = phrase.split(\"[\\\\s]+\");\n\t\tSpanQuery clauses[] = new SpanQuery[words.length];\n\t\tfor (int i=0;i<clauses.length;i++) {\n\t\t\tclauses[i] = new PayloadTermQuery(new Term(fieldName, words[i]), new AveragePayloadFunction());  \n\t\t} \n\t\treturn new PayloadNearQuery(clauses, 0, inOrder);\n\t}\n\n","sourceOld":"\tprivate BoostingNearQuery newPhraseQuery (String fieldName, String phrase, boolean inOrder) {\n\t\tint n;\n\t\tString[] words = phrase.split(\"[\\\\s]+\");\n\t\tSpanQuery clauses[] = new SpanQuery[words.length];\n\t\tfor (int i=0;i<clauses.length;i++) {\n\t\t\tclauses[i] = new BoostingTermQuery(new Term(fieldName, words[i]));  \n\t\t} \n\t\treturn new BoostingNearQuery(clauses, 0, inOrder);\n\t}\n\n","bugFix":null,"bugIntro":["e9a421afb32184cc61e8326108325225d58dfde0"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"94a3c9097762cec00567aff9ceae83842107c895":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa4f1b5e611afe6cb170951e0a9202ff95dc9156":["94a3c9097762cec00567aff9ceae83842107c895"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa4f1b5e611afe6cb170951e0a9202ff95dc9156"]},"commit2Childs":{"94a3c9097762cec00567aff9ceae83842107c895":["fa4f1b5e611afe6cb170951e0a9202ff95dc9156"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["94a3c9097762cec00567aff9ceae83842107c895"],"fa4f1b5e611afe6cb170951e0a9202ff95dc9156":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}