{"path":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"229fd5dc94765f137932ddf46f64e9814f568803","date":1276820681,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/contrib/velocity/src/main/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/contrib/velocity/src/main/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a54b973ebe3c89d5ec77033db6865e1481a0d19a","date":1288140697,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca0ffea399542e8aac8ed7608f34f8ec4cb8904d","date":1288424244,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb42fb71efeadbe7ba4e650d932353964bb1a21d","date":1302704652,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).docs;\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n\t  throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eb46686a27187e42311e77666a2c7026f461ebc","date":1302858020,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).docs;\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n\t  throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).docs;\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n\t  throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).docs;\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n\t  throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).docs;\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n\t  throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).docs;\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n\t  throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).docs;\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n\t  throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).docs;\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n\t  throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).docs;\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n\t  throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).docs;\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n\t  throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a54b973ebe3c89d5ec77033db6865e1481a0d19a":["229fd5dc94765f137932ddf46f64e9814f568803"],"c26f00b574427b55127e869b935845554afde1fa":["cb42fb71efeadbe7ba4e650d932353964bb1a21d","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["ca0ffea399542e8aac8ed7608f34f8ec4cb8904d","cb42fb71efeadbe7ba4e650d932353964bb1a21d"],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","229fd5dc94765f137932ddf46f64e9814f568803"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","a54b973ebe3c89d5ec77033db6865e1481a0d19a"],"229fd5dc94765f137932ddf46f64e9814f568803":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1eb46686a27187e42311e77666a2c7026f461ebc":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cb42fb71efeadbe7ba4e650d932353964bb1a21d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a3776dccca01c11e7046323cfad46a3b4a471233"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a54b973ebe3c89d5ec77033db6865e1481a0d19a","cb42fb71efeadbe7ba4e650d932353964bb1a21d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["cb42fb71efeadbe7ba4e650d932353964bb1a21d"],"cb42fb71efeadbe7ba4e650d932353964bb1a21d":["a54b973ebe3c89d5ec77033db6865e1481a0d19a"],"ca0ffea399542e8aac8ed7608f34f8ec4cb8904d":["229fd5dc94765f137932ddf46f64e9814f568803","a54b973ebe3c89d5ec77033db6865e1481a0d19a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"a54b973ebe3c89d5ec77033db6865e1481a0d19a":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a3776dccca01c11e7046323cfad46a3b4a471233","cb42fb71efeadbe7ba4e650d932353964bb1a21d","ca0ffea399542e8aac8ed7608f34f8ec4cb8904d"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1eb46686a27187e42311e77666a2c7026f461ebc"],"229fd5dc94765f137932ddf46f64e9814f568803":["a54b973ebe3c89d5ec77033db6865e1481a0d19a","5f4e87790277826a2aea119328600dfb07761f32","ca0ffea399542e8aac8ed7608f34f8ec4cb8904d"],"1eb46686a27187e42311e77666a2c7026f461ebc":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f4e87790277826a2aea119328600dfb07761f32","229fd5dc94765f137932ddf46f64e9814f568803"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cb42fb71efeadbe7ba4e650d932353964bb1a21d":["c26f00b574427b55127e869b935845554afde1fa","135621f3a0670a9394eb563224a3b76cc4dddc0f","1eb46686a27187e42311e77666a2c7026f461ebc","a3776dccca01c11e7046323cfad46a3b4a471233","a258fbb26824fd104ed795e5d9033d2d040049ee"],"ca0ffea399542e8aac8ed7608f34f8ec4cb8904d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","1eb46686a27187e42311e77666a2c7026f461ebc","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}