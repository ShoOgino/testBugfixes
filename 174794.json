{"path":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#attrInRoot().mjava","commits":[{"id":"d61382a5dee8fd6ac9faf4262a75479e37ac506e","date":1243056654,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#attrInRoot().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void attrInRoot(){\n    String xml = \"<r>\\n\" +\n            \"<merchantProduct id=\\\"814636051\\\" mid=\\\"189973\\\">\\n\" +\n            \"                   <in_stock type=\\\"stock-4\\\" />\\n\" +\n            \"                   <condition type=\\\"cond-0\\\" />\\n\" +\n            \"                   <price>301.46</price>\\n\" +\n            \"</merchantProduct>\\n\" +\n            \"<merchantProduct id=\\\"814636052\\\" mid=\\\"189974\\\">\\n\" +\n            \"                   <in_stock type=\\\"stock-5\\\" />\\n\" +\n            \"                   <condition type=\\\"cond-1\\\" />\\n\" +\n            \"                   <price>302.46</price>\\n\" +\n            \"</merchantProduct>\\n\" +\n            \"\\n\" +\n            \"</r>\";\n     XPathRecordReader rr = new XPathRecordReader(\"/r/merchantProduct\");\n    rr.addField(\"id\", \"/r/merchantProduct/@id\", false);\n    rr.addField(\"mid\", \"/r/merchantProduct/@mid\", false);\n    rr.addField(\"price\", \"/r/merchantProduct/price\", false);\n    rr.addField(\"conditionType\", \"/r/merchantProduct/condition/@type\", false);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Map<String, Object> m = l.get(0);\n    Assert.assertEquals(\"814636051\", m.get(\"id\"));\n    Assert.assertEquals(\"189973\", m.get(\"mid\"));\n    Assert.assertEquals(\"301.46\", m.get(\"price\"));\n    Assert.assertEquals(\"cond-0\", m.get(\"conditionType\"));\n\n    m = l.get(1);\n    Assert.assertEquals(\"814636052\", m.get(\"id\"));\n    Assert.assertEquals(\"189974\", m.get(\"mid\"));\n    Assert.assertEquals(\"302.46\", m.get(\"price\"));\n    Assert.assertEquals(\"cond-1\", m.get(\"conditionType\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f2a93a28913071a0b713be1d4b8a1181388d550","date":1254814948,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#attrInRoot().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#attrInRoot().mjava","sourceNew":"  @Test\n  public void attrInRoot(){\n    String xml=\"<r>\\n\" +\n            \"<merchantProduct id=\\\"814636051\\\" mid=\\\"189973\\\">\\n\" +\n            \"                   <in_stock type=\\\"stock-4\\\" />\\n\" +\n            \"                   <condition type=\\\"cond-0\\\" />\\n\" +\n            \"                   <price>301.46</price>\\n\" +\n               \"   </merchantProduct>\\n\" +\n            \"<merchantProduct id=\\\"814636052\\\" mid=\\\"189974\\\">\\n\" +\n            \"                   <in_stock type=\\\"stock-5\\\" />\\n\" +\n            \"                   <condition type=\\\"cond-1\\\" />\\n\" +\n            \"                   <price>302.46</price>\\n\" +\n               \"   </merchantProduct>\\n\" +\n            \"\\n\" +\n            \"</r>\";\n     XPathRecordReader rr = new XPathRecordReader(\"/r/merchantProduct\");\n    rr.addField(\"id\", \"/r/merchantProduct/@id\", false);\n    rr.addField(\"mid\", \"/r/merchantProduct/@mid\", false);\n    rr.addField(\"price\", \"/r/merchantProduct/price\", false);\n    rr.addField(\"conditionType\", \"/r/merchantProduct/condition/@type\", false);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Map<String, Object> m = l.get(0);\n    Assert.assertEquals(\"814636051\", m.get(\"id\"));\n    Assert.assertEquals(\"189973\", m.get(\"mid\"));\n    Assert.assertEquals(\"301.46\", m.get(\"price\"));\n    Assert.assertEquals(\"cond-0\", m.get(\"conditionType\"));\n\n    m = l.get(1);\n    Assert.assertEquals(\"814636052\", m.get(\"id\"));\n    Assert.assertEquals(\"189974\", m.get(\"mid\"));\n    Assert.assertEquals(\"302.46\", m.get(\"price\"));\n    Assert.assertEquals(\"cond-1\", m.get(\"conditionType\"));\n  }\n\n","sourceOld":"  @Test\n  public void attrInRoot(){\n    String xml = \"<r>\\n\" +\n            \"<merchantProduct id=\\\"814636051\\\" mid=\\\"189973\\\">\\n\" +\n            \"                   <in_stock type=\\\"stock-4\\\" />\\n\" +\n            \"                   <condition type=\\\"cond-0\\\" />\\n\" +\n            \"                   <price>301.46</price>\\n\" +\n            \"</merchantProduct>\\n\" +\n            \"<merchantProduct id=\\\"814636052\\\" mid=\\\"189974\\\">\\n\" +\n            \"                   <in_stock type=\\\"stock-5\\\" />\\n\" +\n            \"                   <condition type=\\\"cond-1\\\" />\\n\" +\n            \"                   <price>302.46</price>\\n\" +\n            \"</merchantProduct>\\n\" +\n            \"\\n\" +\n            \"</r>\";\n     XPathRecordReader rr = new XPathRecordReader(\"/r/merchantProduct\");\n    rr.addField(\"id\", \"/r/merchantProduct/@id\", false);\n    rr.addField(\"mid\", \"/r/merchantProduct/@mid\", false);\n    rr.addField(\"price\", \"/r/merchantProduct/price\", false);\n    rr.addField(\"conditionType\", \"/r/merchantProduct/condition/@type\", false);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Map<String, Object> m = l.get(0);\n    Assert.assertEquals(\"814636051\", m.get(\"id\"));\n    Assert.assertEquals(\"189973\", m.get(\"mid\"));\n    Assert.assertEquals(\"301.46\", m.get(\"price\"));\n    Assert.assertEquals(\"cond-0\", m.get(\"conditionType\"));\n\n    m = l.get(1);\n    Assert.assertEquals(\"814636052\", m.get(\"id\"));\n    Assert.assertEquals(\"189974\", m.get(\"mid\"));\n    Assert.assertEquals(\"302.46\", m.get(\"price\"));\n    Assert.assertEquals(\"cond-1\", m.get(\"conditionType\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#attrInRoot().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#attrInRoot().mjava","sourceNew":"  @Test\n  public void attrInRoot(){\n    String xml=\"<r>\\n\" +\n            \"<merchantProduct id=\\\"814636051\\\" mid=\\\"189973\\\">\\n\" +\n            \"                   <in_stock type=\\\"stock-4\\\" />\\n\" +\n            \"                   <condition type=\\\"cond-0\\\" />\\n\" +\n            \"                   <price>301.46</price>\\n\" +\n               \"   </merchantProduct>\\n\" +\n            \"<merchantProduct id=\\\"814636052\\\" mid=\\\"189974\\\">\\n\" +\n            \"                   <in_stock type=\\\"stock-5\\\" />\\n\" +\n            \"                   <condition type=\\\"cond-1\\\" />\\n\" +\n            \"                   <price>302.46</price>\\n\" +\n               \"   </merchantProduct>\\n\" +\n            \"\\n\" +\n            \"</r>\";\n     XPathRecordReader rr = new XPathRecordReader(\"/r/merchantProduct\");\n    rr.addField(\"id\", \"/r/merchantProduct/@id\", false);\n    rr.addField(\"mid\", \"/r/merchantProduct/@mid\", false);\n    rr.addField(\"price\", \"/r/merchantProduct/price\", false);\n    rr.addField(\"conditionType\", \"/r/merchantProduct/condition/@type\", false);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Map<String, Object> m = l.get(0);\n    Assert.assertEquals(\"814636051\", m.get(\"id\"));\n    Assert.assertEquals(\"189973\", m.get(\"mid\"));\n    Assert.assertEquals(\"301.46\", m.get(\"price\"));\n    Assert.assertEquals(\"cond-0\", m.get(\"conditionType\"));\n\n    m = l.get(1);\n    Assert.assertEquals(\"814636052\", m.get(\"id\"));\n    Assert.assertEquals(\"189974\", m.get(\"mid\"));\n    Assert.assertEquals(\"302.46\", m.get(\"price\"));\n    Assert.assertEquals(\"cond-1\", m.get(\"conditionType\"));\n  }\n\n","sourceOld":"  @Test\n  public void attrInRoot(){\n    String xml=\"<r>\\n\" +\n            \"<merchantProduct id=\\\"814636051\\\" mid=\\\"189973\\\">\\n\" +\n            \"                   <in_stock type=\\\"stock-4\\\" />\\n\" +\n            \"                   <condition type=\\\"cond-0\\\" />\\n\" +\n            \"                   <price>301.46</price>\\n\" +\n               \"   </merchantProduct>\\n\" +\n            \"<merchantProduct id=\\\"814636052\\\" mid=\\\"189974\\\">\\n\" +\n            \"                   <in_stock type=\\\"stock-5\\\" />\\n\" +\n            \"                   <condition type=\\\"cond-1\\\" />\\n\" +\n            \"                   <price>302.46</price>\\n\" +\n               \"   </merchantProduct>\\n\" +\n            \"\\n\" +\n            \"</r>\";\n     XPathRecordReader rr = new XPathRecordReader(\"/r/merchantProduct\");\n    rr.addField(\"id\", \"/r/merchantProduct/@id\", false);\n    rr.addField(\"mid\", \"/r/merchantProduct/@mid\", false);\n    rr.addField(\"price\", \"/r/merchantProduct/price\", false);\n    rr.addField(\"conditionType\", \"/r/merchantProduct/condition/@type\", false);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Map<String, Object> m = l.get(0);\n    Assert.assertEquals(\"814636051\", m.get(\"id\"));\n    Assert.assertEquals(\"189973\", m.get(\"mid\"));\n    Assert.assertEquals(\"301.46\", m.get(\"price\"));\n    Assert.assertEquals(\"cond-0\", m.get(\"conditionType\"));\n\n    m = l.get(1);\n    Assert.assertEquals(\"814636052\", m.get(\"id\"));\n    Assert.assertEquals(\"189974\", m.get(\"mid\"));\n    Assert.assertEquals(\"302.46\", m.get(\"price\"));\n    Assert.assertEquals(\"cond-1\", m.get(\"conditionType\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d61382a5dee8fd6ac9faf4262a75479e37ac506e":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["7f2a93a28913071a0b713be1d4b8a1181388d550"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7f2a93a28913071a0b713be1d4b8a1181388d550":["d61382a5dee8fd6ac9faf4262a75479e37ac506e"]},"commit2Childs":{"d61382a5dee8fd6ac9faf4262a75479e37ac506e":["7f2a93a28913071a0b713be1d4b8a1181388d550"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["d61382a5dee8fd6ac9faf4262a75479e37ac506e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"7f2a93a28913071a0b713be1d4b8a1181388d550":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}