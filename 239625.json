{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setMaxCommitMergeWaitSeconds(long).mjava","commits":[{"id":"fe39f1a106531207c028defebbc9eb5bb489ac50","date":1592513789,"type":0,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setMaxCommitMergeWaitSeconds(long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Expert: sets the amount of time to wait for merges returned by MergePolicy.findFullFlushMerges(...).\n   * If this time is reached, we proceed with the commit based on segments merged up to that point.\n   * The merges are not cancelled, and will still run to completion independent of the commit\n   * like normal segment merges. The default is <code>{@value IndexWriterConfig#DEFAULT_MAX_COMMIT_MERGE_WAIT_SECONDS}</code>.\n   *\n   * Note: This settings has no effect unless {@link MergePolicy#findFullFlushMerges(MergeTrigger, SegmentInfos, MergePolicy.MergeContext)}\n   * has an implementation that actually returns merges which by default doesn't return any merges.\n   */\n  public IndexWriterConfig setMaxCommitMergeWaitSeconds(long maxCommitMergeWaitSeconds) {\n    this.maxCommitMergeWaitSeconds = maxCommitMergeWaitSeconds;\n    return this;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1182fe36fb5df768dc2da53f6d5338cbc07268ae","date":1592861749,"type":4,"author":"Michael Sokolov","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setMaxCommitMergeWaitSeconds(long).mjava","sourceNew":null,"sourceOld":"  /**\n   * Expert: sets the amount of time to wait for merges returned by MergePolicy.findFullFlushMerges(...).\n   * If this time is reached, we proceed with the commit based on segments merged up to that point.\n   * The merges are not cancelled, and will still run to completion independent of the commit\n   * like normal segment merges. The default is <code>{@value IndexWriterConfig#DEFAULT_MAX_COMMIT_MERGE_WAIT_SECONDS}</code>.\n   *\n   * Note: This settings has no effect unless {@link MergePolicy#findFullFlushMerges(MergeTrigger, SegmentInfos, MergePolicy.MergeContext)}\n   * has an implementation that actually returns merges which by default doesn't return any merges.\n   */\n  public IndexWriterConfig setMaxCommitMergeWaitSeconds(long maxCommitMergeWaitSeconds) {\n    this.maxCommitMergeWaitSeconds = maxCommitMergeWaitSeconds;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1182fe36fb5df768dc2da53f6d5338cbc07268ae":["fe39f1a106531207c028defebbc9eb5bb489ac50"],"fe39f1a106531207c028defebbc9eb5bb489ac50":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1182fe36fb5df768dc2da53f6d5338cbc07268ae"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fe39f1a106531207c028defebbc9eb5bb489ac50"],"1182fe36fb5df768dc2da53f6d5338cbc07268ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe39f1a106531207c028defebbc9eb5bb489ac50":["1182fe36fb5df768dc2da53f6d5338cbc07268ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}