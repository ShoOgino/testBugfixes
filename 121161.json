{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/CategoryListIterator#getOrdinals(int,IntsRef).mjava","commits":[{"id":"bceb02c33032dd9bbf107cd06d0b74e5db4f110a","date":1357909746,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/CategoryListIterator#getOrdinals(int,IntsRef).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Stores the category ordinals of the given document ID in the given\n   * {@link IntsRef}, starting at position 0 upto {@link IntsRef#length}. Grows\n   * the {@link IntsRef} if it is not large enough.\n   * \n   * <p>\n   * <b>NOTE:</b> if the requested document does not category ordinals\n   * associated with it, {@link IntsRef#length} is set to zero.\n   */\n  public void getOrdinals(int docID, IntsRef ints) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/CategoryListIterator#getOrdinals(int,IntsRef).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Stores the category ordinals of the given document ID in the given\n   * {@link IntsRef}, starting at position 0 upto {@link IntsRef#length}. Grows\n   * the {@link IntsRef} if it is not large enough.\n   * \n   * <p>\n   * <b>NOTE:</b> if the requested document does not category ordinals\n   * associated with it, {@link IntsRef#length} is set to zero.\n   */\n  public void getOrdinals(int docID, IntsRef ints) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42f51b3ab4258ff4623227b0db011b8bb83db5c7","date":1358164991,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/CategoryListIterator#getOrdinals(int,IntsRef).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/CategoryListIterator#getOrdinals(int,IntsRef).mjava","sourceNew":"  /**\n   * Stores the category ordinals of the given document ID in the given\n   * {@link IntsRef}, starting at position 0 upto {@link IntsRef#length}. Grows\n   * the {@link IntsRef} if it is not large enough.\n   * \n   * <p>\n   * <b>NOTE:</b> if the requested document does not have category ordinals\n   * associated with it, {@link IntsRef#length} is set to zero.\n   */\n  public void getOrdinals(int docID, IntsRef ints) throws IOException;\n\n","sourceOld":"  /**\n   * Stores the category ordinals of the given document ID in the given\n   * {@link IntsRef}, starting at position 0 upto {@link IntsRef#length}. Grows\n   * the {@link IntsRef} if it is not large enough.\n   * \n   * <p>\n   * <b>NOTE:</b> if the requested document does not category ordinals\n   * associated with it, {@link IntsRef#length} is set to zero.\n   */\n  public void getOrdinals(int docID, IntsRef ints) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/CategoryListIterator#getOrdinals(int,IntsRef).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/CategoryListIterator#getOrdinals(int,IntsRef).mjava","sourceNew":"  /**\n   * Stores the category ordinals of the given document ID in the given\n   * {@link IntsRef}, starting at position 0 upto {@link IntsRef#length}. Grows\n   * the {@link IntsRef} if it is not large enough.\n   * \n   * <p>\n   * <b>NOTE:</b> if the requested document does not have category ordinals\n   * associated with it, {@link IntsRef#length} is set to zero.\n   */\n  public void getOrdinals(int docID, IntsRef ints) throws IOException;\n\n","sourceOld":"  /**\n   * Stores the category ordinals of the given document ID in the given\n   * {@link IntsRef}, starting at position 0 upto {@link IntsRef#length}. Grows\n   * the {@link IntsRef} if it is not large enough.\n   * \n   * <p>\n   * <b>NOTE:</b> if the requested document does not category ordinals\n   * associated with it, {@link IntsRef#length} is set to zero.\n   */\n  public void getOrdinals(int docID, IntsRef ints) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/CategoryListIterator#getOrdinals(int,IntsRef).mjava","sourceNew":null,"sourceOld":"  /**\n   * Stores the category ordinals of the given document ID in the given\n   * {@link IntsRef}, starting at position 0 upto {@link IntsRef#length}. Grows\n   * the {@link IntsRef} if it is not large enough.\n   * \n   * <p>\n   * <b>NOTE:</b> if the requested document does not have category ordinals\n   * associated with it, {@link IntsRef#length} is set to zero.\n   */\n  public void getOrdinals(int docID, IntsRef ints) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/CategoryListIterator#getOrdinals(int,IntsRef).mjava","sourceNew":null,"sourceOld":"  /**\n   * Stores the category ordinals of the given document ID in the given\n   * {@link IntsRef}, starting at position 0 upto {@link IntsRef#length}. Grows\n   * the {@link IntsRef} if it is not large enough.\n   * \n   * <p>\n   * <b>NOTE:</b> if the requested document does not have category ordinals\n   * associated with it, {@link IntsRef#length} is set to zero.\n   */\n  public void getOrdinals(int docID, IntsRef ints) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d33e19a97046248623a7591aeaa6547233fd15e2":["42f51b3ab4258ff4623227b0db011b8bb83db5c7"],"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["bceb02c33032dd9bbf107cd06d0b74e5db4f110a"],"bceb02c33032dd9bbf107cd06d0b74e5db4f110a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["4e6354dd7c71fe122926fc53d7d29f715b1283db","42f51b3ab4258ff4623227b0db011b8bb83db5c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["42f51b3ab4258ff4623227b0db011b8bb83db5c7","d33e19a97046248623a7591aeaa6547233fd15e2"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bceb02c33032dd9bbf107cd06d0b74e5db4f110a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["d33e19a97046248623a7591aeaa6547233fd15e2","8917bfede3b4ca30f4305c1e391e9218959cd723","3cc728b07df73b197e6d940d27f9b08b63918f13"],"bceb02c33032dd9bbf107cd06d0b74e5db4f110a":["42f51b3ab4258ff4623227b0db011b8bb83db5c7","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bceb02c33032dd9bbf107cd06d0b74e5db4f110a","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["8917bfede3b4ca30f4305c1e391e9218959cd723"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}