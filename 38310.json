{"path":"contrib/gdata-server/src/gom/src/java/org/apache/lucene/gdata/gom/core/utils/GOMUtils#buildRfc3339DateFormat(long).mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/gom/src/java/org/apache/lucene/gdata/gom/core/utils/GOMUtils#buildRfc3339DateFormat(long).mjava","pathOld":"contrib/gdata-server/src/gom/java/org/apache/lucene/gdata/gom/core/utils/GOMUtils#buildRfc3339DateFormat(long).mjava","sourceNew":"\t/**\n\t * @param aMillisecondLong\n\t * @return\n\t */\n\tpublic static String buildRfc3339DateFormat(long aMillisecondLong) {\n\t\tCalendar instance = Calendar.getInstance(TimeZone.getTimeZone(\"GMT\"));\n\t\tinstance.setTimeInMillis(aMillisecondLong);\n\n\t\tStringBuilder builder = new StringBuilder();\n\t\t// 2003-12-13T18:30:02.25+01:00\n\t\tint time = 0;\n\t\ttime = instance.get(Calendar.YEAR);\n\t\tif (time < 1000)\n\t\t\tbuilder.append(\"0\");\n\t\tif (time < 100)\n\t\t\tbuilder.append(\"0\");\n\t\tif (time < 10)\n\t\t\tbuilder.append(\"0\");\n\t\tbuilder.append(time);\n\t\tbuilder.append('-');\n\t\ttime = instance.get(Calendar.MONTH);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append('-');\n\t\ttime = instance.get(Calendar.DAY_OF_MONTH);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append('T');\n\t\ttime = instance.get(Calendar.HOUR_OF_DAY);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append(':');\n\t\ttime = instance.get(Calendar.MINUTE);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append(':');\n\t\ttime = instance.get(Calendar.SECOND);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append('.');\n\t\tbuilder.append(instance.get(Calendar.MILLISECOND));\n\t\t// this is always GMT offset -> 0\n\t\tbuilder.append('Z');\n\n\t\treturn builder.toString();\n\t}\n\n","sourceOld":"\t/**\n\t * @param aMillisecondLong\n\t * @return\n\t */\n\tpublic static String buildRfc3339DateFormat(long aMillisecondLong) {\n\t\tCalendar instance = Calendar.getInstance(TimeZone.getTimeZone(\"GMT\"));\n\t\tinstance.setTimeInMillis(aMillisecondLong);\n\n\t\tStringBuilder builder = new StringBuilder();\n\t\t// 2003-12-13T18:30:02.25+01:00\n\t\tint time = 0;\n\t\ttime = instance.get(Calendar.YEAR);\n\t\tif (time < 1000)\n\t\t\tbuilder.append(\"0\");\n\t\tif (time < 100)\n\t\t\tbuilder.append(\"0\");\n\t\tif (time < 10)\n\t\t\tbuilder.append(\"0\");\n\t\tbuilder.append(time);\n\t\tbuilder.append('-');\n\t\ttime = instance.get(Calendar.MONTH);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append('-');\n\t\ttime = instance.get(Calendar.DAY_OF_MONTH);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append('T');\n\t\ttime = instance.get(Calendar.HOUR_OF_DAY);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append(':');\n\t\ttime = instance.get(Calendar.MINUTE);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append(':');\n\t\ttime = instance.get(Calendar.SECOND);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append('.');\n\t\tbuilder.append(instance.get(Calendar.MILLISECOND));\n\t\t// this is always GMT offset -> 0\n\t\tbuilder.append('Z');\n\n\t\treturn builder.toString();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ed9d3ee5398993e024dd3286bf7216de59afe2c4","date":1191616259,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"contrib/gdata-server/src/gom/src/java/org/apache/lucene/gdata/gom/core/utils/GOMUtils#buildRfc3339DateFormat(long).mjava","pathOld":"contrib/gdata-server/src/gom/src/java/org/apache/lucene/gdata/gom/core/utils/GOMUtils#buildRfc3339DateFormat(long).mjava","sourceNew":"\tpublic static String buildRfc3339DateFormat(long aMillisecondLong) {\n\t\tCalendar instance = Calendar.getInstance(TimeZone.getTimeZone(\"GMT\"));\n\t\tinstance.setTimeInMillis(aMillisecondLong);\n\n\t\tStringBuilder builder = new StringBuilder();\n\t\t// 2003-12-13T18:30:02.25+01:00\n\t\tint time = 0;\n\t\ttime = instance.get(Calendar.YEAR);\n\t\tif (time < 1000)\n\t\t\tbuilder.append(\"0\");\n\t\tif (time < 100)\n\t\t\tbuilder.append(\"0\");\n\t\tif (time < 10)\n\t\t\tbuilder.append(\"0\");\n\t\tbuilder.append(time);\n\t\tbuilder.append('-');\n\t\ttime = instance.get(Calendar.MONTH);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append('-');\n\t\ttime = instance.get(Calendar.DAY_OF_MONTH);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append('T');\n\t\ttime = instance.get(Calendar.HOUR_OF_DAY);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append(':');\n\t\ttime = instance.get(Calendar.MINUTE);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append(':');\n\t\ttime = instance.get(Calendar.SECOND);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append('.');\n\t\tbuilder.append(instance.get(Calendar.MILLISECOND));\n\t\t// this is always GMT offset -> 0\n\t\tbuilder.append('Z');\n\n\t\treturn builder.toString();\n\t}\n\n","sourceOld":"\t/**\n\t * @param aMillisecondLong\n\t * @return\n\t */\n\tpublic static String buildRfc3339DateFormat(long aMillisecondLong) {\n\t\tCalendar instance = Calendar.getInstance(TimeZone.getTimeZone(\"GMT\"));\n\t\tinstance.setTimeInMillis(aMillisecondLong);\n\n\t\tStringBuilder builder = new StringBuilder();\n\t\t// 2003-12-13T18:30:02.25+01:00\n\t\tint time = 0;\n\t\ttime = instance.get(Calendar.YEAR);\n\t\tif (time < 1000)\n\t\t\tbuilder.append(\"0\");\n\t\tif (time < 100)\n\t\t\tbuilder.append(\"0\");\n\t\tif (time < 10)\n\t\t\tbuilder.append(\"0\");\n\t\tbuilder.append(time);\n\t\tbuilder.append('-');\n\t\ttime = instance.get(Calendar.MONTH);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append('-');\n\t\ttime = instance.get(Calendar.DAY_OF_MONTH);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append('T');\n\t\ttime = instance.get(Calendar.HOUR_OF_DAY);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append(':');\n\t\ttime = instance.get(Calendar.MINUTE);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append(':');\n\t\ttime = instance.get(Calendar.SECOND);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append('.');\n\t\tbuilder.append(instance.get(Calendar.MILLISECOND));\n\t\t// this is always GMT offset -> 0\n\t\tbuilder.append('Z');\n\n\t\treturn builder.toString();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/gom/src/java/org/apache/lucene/gdata/gom/core/utils/GOMUtils#buildRfc3339DateFormat(long).mjava","sourceNew":null,"sourceOld":"\tpublic static String buildRfc3339DateFormat(long aMillisecondLong) {\n\t\tCalendar instance = Calendar.getInstance(TimeZone.getTimeZone(\"GMT\"));\n\t\tinstance.setTimeInMillis(aMillisecondLong);\n\n\t\tStringBuilder builder = new StringBuilder();\n\t\t// 2003-12-13T18:30:02.25+01:00\n\t\tint time = 0;\n\t\ttime = instance.get(Calendar.YEAR);\n\t\tif (time < 1000)\n\t\t\tbuilder.append(\"0\");\n\t\tif (time < 100)\n\t\t\tbuilder.append(\"0\");\n\t\tif (time < 10)\n\t\t\tbuilder.append(\"0\");\n\t\tbuilder.append(time);\n\t\tbuilder.append('-');\n\t\ttime = instance.get(Calendar.MONTH);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append('-');\n\t\ttime = instance.get(Calendar.DAY_OF_MONTH);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append('T');\n\t\ttime = instance.get(Calendar.HOUR_OF_DAY);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append(':');\n\t\ttime = instance.get(Calendar.MINUTE);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append(':');\n\t\ttime = instance.get(Calendar.SECOND);\n\t\tif (time < 10)\n\t\t\tbuilder.append(0);\n\t\tbuilder.append(time);\n\t\tbuilder.append('.');\n\t\tbuilder.append(instance.get(Calendar.MILLISECOND));\n\t\t// this is always GMT offset -> 0\n\t\tbuilder.append('Z');\n\n\t\treturn builder.toString();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ed9d3ee5398993e024dd3286bf7216de59afe2c4":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["ed9d3ee5398993e024dd3286bf7216de59afe2c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"ed9d3ee5398993e024dd3286bf7216de59afe2c4":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["ed9d3ee5398993e024dd3286bf7216de59afe2c4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}