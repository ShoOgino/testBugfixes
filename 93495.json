{"path":"solr/core/src/java/org/apache/solr/pkg/PackagePluginHolder#handleAwareCallbacks(SolrResourceLoader,Object,SolrCore).mjava","commits":[{"id":"403c3219db9547cd15baeb98f0804fbb65f36c0f","date":1600394849,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/pkg/PackagePluginHolder#handleAwareCallbacks(SolrResourceLoader,Object,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/pkg/PackagePluginHolder#handleAwareCallbacks(SolrResourceLoader,Object).mjava","sourceNew":"  private void handleAwareCallbacks(SolrResourceLoader loader, Object instance, SolrCore core) {\n    if (instance instanceof SolrCoreAware) {\n      SolrCoreAware coreAware = (SolrCoreAware) instance;\n      if (!core.getResourceLoader().addToCoreAware(coreAware)) {\n        coreAware.inform(core);\n      }\n    }\n    if (instance instanceof ResourceLoaderAware) {\n      SolrResourceLoader.assertAwareCompatibility(ResourceLoaderAware.class, instance);\n      try {\n        ((ResourceLoaderAware) instance).inform(loader);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n    if (instance instanceof SolrInfoBean) {\n      core.getResourceLoader().addToInfoBeans(instance);\n    }\n  }\n\n","sourceOld":"  private void handleAwareCallbacks(SolrResourceLoader loader, Object instance) {\n    if (instance instanceof SolrCoreAware) {\n      SolrCoreAware coreAware = (SolrCoreAware) instance;\n      if (!core.getResourceLoader().addToCoreAware(coreAware)) {\n        coreAware.inform(core);\n      }\n    }\n    if (instance instanceof ResourceLoaderAware) {\n      SolrResourceLoader.assertAwareCompatibility(ResourceLoaderAware.class, instance);\n      try {\n        ((ResourceLoaderAware) instance).inform(loader);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n    if (instance instanceof SolrInfoBean) {\n      core.getResourceLoader().addToInfoBeans(instance);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"403c3219db9547cd15baeb98f0804fbb65f36c0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["403c3219db9547cd15baeb98f0804fbb65f36c0f"]},"commit2Childs":{"403c3219db9547cd15baeb98f0804fbb65f36c0f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["403c3219db9547cd15baeb98f0804fbb65f36c0f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}