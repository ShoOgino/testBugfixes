{"path":"lucene/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#setLengthNormFactors(int,int,float,boolean).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#setLengthNormFactors(int,int,float,boolean).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#setLengthNormFactors(int,int,float,boolean).mjava","sourceNew":"  /**\n   * Sets the default function variables used by lengthNorm when no field\n   * specific variables have been set.\n   *\n   * @see #computeLengthNorm\n   */\n  public void setLengthNormFactors(int min, int max, float steepness, boolean discountOverlaps) {\n    this.ln_min = min;\n    this.ln_max = max;\n    this.ln_steep = steepness;\n    this.discountOverlaps = discountOverlaps;\n  }\n\n","sourceOld":"  /**\n   * Sets the default function variables used by lengthNorm when no field\n   * specific variables have been set.\n   *\n   * @see #computeLengthNorm\n   */\n  public void setLengthNormFactors(int min, int max, float steepness, boolean discountOverlaps) {\n    this.ln_min = min;\n    this.ln_max = max;\n    this.ln_steep = steepness;\n    this.discountOverlaps = discountOverlaps;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615370d2b876c3435773b5174df2e2242ad7981a","date":1495117651,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#setLengthNormFactors(int,int,float,boolean).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#setLengthNormFactors(int,int,float,boolean).mjava","sourceNew":"  /**\n   * Sets the default function variables used by lengthNorm when no field\n   * specific variables have been set.\n   *\n   * @see #lengthNorm\n   */\n  public void setLengthNormFactors(int min, int max, float steepness, boolean discountOverlaps) {\n    this.ln_min = min;\n    this.ln_max = max;\n    this.ln_steep = steepness;\n    this.discountOverlaps = discountOverlaps;\n  }\n\n","sourceOld":"  /**\n   * Sets the default function variables used by lengthNorm when no field\n   * specific variables have been set.\n   *\n   * @see #computeLengthNorm\n   */\n  public void setLengthNormFactors(int min, int max, float steepness, boolean discountOverlaps) {\n    this.ln_min = min;\n    this.ln_max = max;\n    this.ln_steep = steepness;\n    this.discountOverlaps = discountOverlaps;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#setLengthNormFactors(int,int,float,boolean).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#setLengthNormFactors(int,int,float,boolean).mjava","sourceNew":"  /**\n   * Sets the default function variables used by lengthNorm when no field\n   * specific variables have been set.\n   *\n   * @see #lengthNorm\n   */\n  public void setLengthNormFactors(int min, int max, float steepness, boolean discountOverlaps) {\n    this.ln_min = min;\n    this.ln_max = max;\n    this.ln_steep = steepness;\n    this.discountOverlaps = discountOverlaps;\n  }\n\n","sourceOld":"  /**\n   * Sets the default function variables used by lengthNorm when no field\n   * specific variables have been set.\n   *\n   * @see #computeLengthNorm\n   */\n  public void setLengthNormFactors(int min, int max, float steepness, boolean discountOverlaps) {\n    this.ln_min = min;\n    this.ln_max = max;\n    this.ln_steep = steepness;\n    this.discountOverlaps = discountOverlaps;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["b89678825b68eccaf09e6ab71675fc0b0af1e099","615370d2b876c3435773b5174df2e2242ad7981a"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"615370d2b876c3435773b5174df2e2242ad7981a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615370d2b876c3435773b5174df2e2242ad7981a"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e9017cf144952056066919f1ebc7897ff9bd71b1","615370d2b876c3435773b5174df2e2242ad7981a"],"615370d2b876c3435773b5174df2e2242ad7981a":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}