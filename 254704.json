{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(TEMP_DIR, \"deletetest\");\n      Directory dir = FSDirectory.open(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(TEMP_DIR, \"deletetest\");\n      Directory dir = FSDirectory.open(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a13a126d15299d5c1e117ea99ddae6fb0fa3f209","date":1291909583,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(TEMP_DIR, \"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(TEMP_DIR, \"deletetest\");\n      Directory dir = FSDirectory.open(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(TEMP_DIR, \"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(TEMP_DIR, \"deletetest\");\n      Directory dir = FSDirectory.open(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(TEMP_DIR, \"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(TEMP_DIR, \"deletetest\");\n      Directory dir = FSDirectory.open(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3741149a89925c02f14dbeef8365b896798d91fc","date":1303483574,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = _TestUtil.getTempDir(\"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(TEMP_DIR, \"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","bugFix":["1d16275d75dfe0b780ed62df4c811d083187c71a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d493718201f0d0c54c773fb323d87bbd2fbffe41","date":1303546048,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = _TestUtil.getTempDir(\"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(TEMP_DIR, \"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = _TestUtil.getTempDir(\"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(TEMP_DIR, \"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = _TestUtil.getTempDir(\"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(TEMP_DIR, \"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = _TestUtil.getTempDir(\"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = _TestUtil.getTempDir(\"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = _TestUtil.getTempDir(\"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = _TestUtil.getTempDir(\"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = _TestUtil.getTempDir(\"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = _TestUtil.getTempDir(\"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d40b62adb64d8f7b2f85ee849349cfb0bef03f45","date":1327855938,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = _TestUtil.getTempDir(\"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        DirectoryReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        DirectoryReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = _TestUtil.getTempDir(\"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = _TestUtil.getTempDir(\"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        DirectoryReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        DirectoryReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = _TestUtil.getTempDir(\"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = _TestUtil.getTempDir(\"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        DirectoryReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        DirectoryReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = _TestUtil.getTempDir(\"deletetest\");\n      Directory dir = newFSDirectory(dirFile);\n      try {\n        DirectoryReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        DirectoryReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["3741149a89925c02f14dbeef8365b896798d91fc","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","3741149a89925c02f14dbeef8365b896798d91fc"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3741149a89925c02f14dbeef8365b896798d91fc"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["9454a6510e2db155fb01faa5c049b06ece95fab9","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"d493718201f0d0c54c773fb323d87bbd2fbffe41":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3741149a89925c02f14dbeef8365b896798d91fc"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3615ce4a1f785ae1b779244de52c6a7d99227e60","d40b62adb64d8f7b2f85ee849349cfb0bef03f45"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","3741149a89925c02f14dbeef8365b896798d91fc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3741149a89925c02f14dbeef8365b896798d91fc":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["3741149a89925c02f14dbeef8365b896798d91fc","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"d40b62adb64d8f7b2f85ee849349cfb0bef03f45":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a3776dccca01c11e7046323cfad46a3b4a471233","3741149a89925c02f14dbeef8365b896798d91fc"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d493718201f0d0c54c773fb323d87bbd2fbffe41"],"d493718201f0d0c54c773fb323d87bbd2fbffe41":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3741149a89925c02f14dbeef8365b896798d91fc":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","135621f3a0670a9394eb563224a3b76cc4dddc0f","1c5b026d03cbbb03ca4c0b97d14e9839682281dc","d493718201f0d0c54c773fb323d87bbd2fbffe41","a3776dccca01c11e7046323cfad46a3b4a471233","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","5cab9a86bd67202d20b6adc463008c8e982b070a","d40b62adb64d8f7b2f85ee849349cfb0bef03f45"],"d40b62adb64d8f7b2f85ee849349cfb0bef03f45":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","135621f3a0670a9394eb563224a3b76cc4dddc0f","d493718201f0d0c54c773fb323d87bbd2fbffe41","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}