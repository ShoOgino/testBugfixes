{"path":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaTest#setupCluster().mjava","commits":[{"id":"b54504c5305a6cc48f59c627c9c8dd727e2a8f0b","date":1491468518,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaTest#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(4)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaTest#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(4)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"587637d2d2a2c50503511d5b626fdc366b4fd3d4","date":1507632212,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(4)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n    NamedList<Object> overSeerStatus = cluster.getSolrClient().request(CollectionAdminRequest.getOverseerStatus());\n    JettySolrRunner overseerJetty = null;\n    String overseerLeader = (String) overSeerStatus.get(\"leader\");\n    for (int i = 0; i < cluster.getJettySolrRunners().size(); i++) {\n      JettySolrRunner jetty = cluster.getJettySolrRunner(i);\n      if (jetty.getNodeName().equals(overseerLeader)) {\n        overseerJetty = jetty;\n        overseerLeaderIndex = i;\n        break;\n      }\n    }\n    if (overseerJetty == null) {\n      fail(\"no overseer leader!\");\n    }\n    accessor = new ZkStateReaderAccessor(overseerJetty.getCoreContainer().getZkController().getZkStateReader());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(4)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"28ba172425e443e0f08a49de6d73586c418d7251","date":1523970991,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(4)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n    NamedList<Object> overSeerStatus = cluster.getSolrClient().request(CollectionAdminRequest.getOverseerStatus());\n    JettySolrRunner overseerJetty = null;\n    String overseerLeader = (String) overSeerStatus.get(\"leader\");\n    for (int i = 0; i < cluster.getJettySolrRunners().size(); i++) {\n      JettySolrRunner jetty = cluster.getJettySolrRunner(i);\n      if (jetty.getNodeName().equals(overseerLeader)) {\n        overseerJetty = jetty;\n        break;\n      }\n    }\n    if (overseerJetty == null) {\n      fail(\"no overseer leader!\");\n    }\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(4)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n    NamedList<Object> overSeerStatus = cluster.getSolrClient().request(CollectionAdminRequest.getOverseerStatus());\n    JettySolrRunner overseerJetty = null;\n    String overseerLeader = (String) overSeerStatus.get(\"leader\");\n    for (int i = 0; i < cluster.getJettySolrRunners().size(); i++) {\n      JettySolrRunner jetty = cluster.getJettySolrRunner(i);\n      if (jetty.getNodeName().equals(overseerLeader)) {\n        overseerJetty = jetty;\n        overseerLeaderIndex = i;\n        break;\n      }\n    }\n    if (overseerJetty == null) {\n      fail(\"no overseer leader!\");\n    }\n    accessor = new ZkStateReaderAccessor(overseerJetty.getCoreContainer().getZkController().getZkStateReader());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(4)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n    NamedList<Object> overSeerStatus = cluster.getSolrClient().request(CollectionAdminRequest.getOverseerStatus());\n    JettySolrRunner overseerJetty = null;\n    String overseerLeader = (String) overSeerStatus.get(\"leader\");\n    for (int i = 0; i < cluster.getJettySolrRunners().size(); i++) {\n      JettySolrRunner jetty = cluster.getJettySolrRunner(i);\n      if (jetty.getNodeName().equals(overseerLeader)) {\n        overseerJetty = jetty;\n        break;\n      }\n    }\n    if (overseerJetty == null) {\n      fail(\"no overseer leader!\");\n    }\n  }\n\n","bugFix":["587637d2d2a2c50503511d5b626fdc366b4fd3d4","b54504c5305a6cc48f59c627c9c8dd727e2a8f0b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"76f2f6f3c2e485c3114e415c8253c2e208c7f909","date":1551210527,"type":4,"author":"Kevin Risden","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaTest#setupCluster().mjava","sourceNew":null,"sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"accbc347dd28993a84ae51e9e6f01e31a26a7184","date":1551252530,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaTest#setupCluster().mjava","sourceNew":null,"sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b54504c5305a6cc48f59c627c9c8dd727e2a8f0b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["28ba172425e443e0f08a49de6d73586c418d7251"],"76f2f6f3c2e485c3114e415c8253c2e208c7f909":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"587637d2d2a2c50503511d5b626fdc366b4fd3d4":["b54504c5305a6cc48f59c627c9c8dd727e2a8f0b"],"28ba172425e443e0f08a49de6d73586c418d7251":["587637d2d2a2c50503511d5b626fdc366b4fd3d4"],"accbc347dd28993a84ae51e9e6f01e31a26a7184":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","76f2f6f3c2e485c3114e415c8253c2e208c7f909"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["accbc347dd28993a84ae51e9e6f01e31a26a7184"]},"commit2Childs":{"b54504c5305a6cc48f59c627c9c8dd727e2a8f0b":["587637d2d2a2c50503511d5b626fdc366b4fd3d4"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["76f2f6f3c2e485c3114e415c8253c2e208c7f909","accbc347dd28993a84ae51e9e6f01e31a26a7184"],"76f2f6f3c2e485c3114e415c8253c2e208c7f909":["accbc347dd28993a84ae51e9e6f01e31a26a7184"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b54504c5305a6cc48f59c627c9c8dd727e2a8f0b","54ca69905c5d9d1529286f06ab1d12c68f6c13cb"],"587637d2d2a2c50503511d5b626fdc366b4fd3d4":["28ba172425e443e0f08a49de6d73586c418d7251"],"28ba172425e443e0f08a49de6d73586c418d7251":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"accbc347dd28993a84ae51e9e6f01e31a26a7184":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}