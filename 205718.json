{"path":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#init(IndexInput).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#init(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  public abstract void init(IndexInput termsIn) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99cf56f3a650b908f7017a72f9d23940418f8a52","date":1284891529,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#init(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, StandardPostingsWriter.CODEC,\n      StandardPostingsWriter.VERSION_START, StandardPostingsWriter.VERSION_START);\n\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n  }\n\n","sourceOld":"  public abstract void init(IndexInput termsIn) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#init(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, StandardPostingsWriter.CODEC,\n      StandardPostingsWriter.VERSION_START, StandardPostingsWriter.VERSION_START);\n\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n  }\n\n","sourceOld":"  public abstract void init(IndexInput termsIn) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aff28d83336d21b964812b94574b7e8cea46a3cc","date":1297437050,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#init(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, StandardPostingsWriter.CODEC,\n      StandardPostingsWriter.VERSION_START, StandardPostingsWriter.VERSION_START);\n\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n    skipMinimum = termsIn.readInt();\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, StandardPostingsWriter.CODEC,\n      StandardPostingsWriter.VERSION_START, StandardPostingsWriter.VERSION_START);\n\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#init(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, StandardPostingsWriter.CODEC,\n      StandardPostingsWriter.VERSION_START, StandardPostingsWriter.VERSION_START);\n\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n    skipMinimum = termsIn.readInt();\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, StandardPostingsWriter.CODEC,\n      StandardPostingsWriter.VERSION_START, StandardPostingsWriter.VERSION_START);\n\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#init(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, StandardPostingsWriter.CODEC,\n      StandardPostingsWriter.VERSION_START, StandardPostingsWriter.VERSION_START);\n\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n    skipMinimum = termsIn.readInt();\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, StandardPostingsWriter.CODEC,\n      StandardPostingsWriter.VERSION_START, StandardPostingsWriter.VERSION_START);\n\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40PostingsReader#init(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, Lucene40PostingsWriter.CODEC,\n      Lucene40PostingsWriter.VERSION_START, Lucene40PostingsWriter.VERSION_START);\n\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n    skipMinimum = termsIn.readInt();\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn, StandardPostingsWriter.CODEC,\n      StandardPostingsWriter.VERSION_START, StandardPostingsWriter.VERSION_START);\n\n    skipInterval = termsIn.readInt();\n    maxSkipLevels = termsIn.readInt();\n    skipMinimum = termsIn.readInt();\n  }\n\n","bugFix":null,"bugIntro":["a5e3ea6d5c2b839bafea03558af4d9e641ec73cc","dd5dd283c3d9f22e186699bf823c9d1e67f49152"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["aff28d83336d21b964812b94574b7e8cea46a3cc"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["99cf56f3a650b908f7017a72f9d23940418f8a52","aff28d83336d21b964812b94574b7e8cea46a3cc"],"aff28d83336d21b964812b94574b7e8cea46a3cc":["99cf56f3a650b908f7017a72f9d23940418f8a52"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","99cf56f3a650b908f7017a72f9d23940418f8a52"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","aff28d83336d21b964812b94574b7e8cea46a3cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"aff28d83336d21b964812b94574b7e8cea46a3cc":["7b91922b55d15444d554721b352861d028eb8278","f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","99cf56f3a650b908f7017a72f9d23940418f8a52"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["f1bdbf92da222965b46c0a942c3857ba56e5c638","aff28d83336d21b964812b94574b7e8cea46a3cc","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}