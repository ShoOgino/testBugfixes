{"path":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,DICTIONARY,Version).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,DICTIONARY,Version).mjava","pathOld":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,DICTIONARY,Version).mjava","sourceNew":"  /**\n   * Builds a filter for given PolishStemmer.DICTIONARY enum.\n   * \n   * @param in   input token stream\n   * @param dict PolishStemmer.DICTIONARY enum\n   * @param version Lucene version compatibility for lowercasing.\n   */\n  public MorfologikFilter(final TokenStream in, final DICTIONARY dict, final Version version) {\n    super(in);\n    this.input = in;\n    this.stemmer = new PolishStemmer(dict);\n    this.charUtils = CharacterUtils.getInstance(version);\n    this.lemmaList = Collections.emptyList();\n  }\n\n","sourceOld":"  /**\n   * Builds a filter for given PolishStemmer.DICTIONARY enum.\n   * \n   * @param in   input token stream\n   * @param dict PolishStemmer.DICTIONARY enum\n   * @param version Lucene version compatibility for lowercasing.\n   */\n  public MorfologikFilter(final TokenStream in, final DICTIONARY dict, final Version version) {\n    super(in);\n    this.input = in;\n    this.stemmer = new PolishStemmer(dict);\n    this.charUtils = CharacterUtils.getInstance(version);\n    this.lemmaList = Collections.emptyList();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9dc42d38fa49aaad8dfcffa0779e5666005af94","date":1351674244,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,DICTIONARY,Version).mjava","pathOld":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,DICTIONARY,Version).mjava","sourceNew":"  /**\n   * Builds a filter for given PolishStemmer.DICTIONARY enum.\n   * \n   * @param in   input token stream\n   * @param dict PolishStemmer.DICTIONARY enum\n   * @param version Lucene version compatibility for lowercasing.\n   */\n  public MorfologikFilter(final TokenStream in, final DICTIONARY dict, final Version version) {\n    super(in);\n    this.input = in;\n    \n    // SOLR-4007: temporarily substitute context class loader to allow finding dictionary resources.\n    Thread me = Thread.currentThread();\n    ClassLoader cl = me.getContextClassLoader();\n    try {\n      me.setContextClassLoader(PolishStemmer.class.getClassLoader());\n      this.stemmer = new PolishStemmer(dict);\n      this.charUtils = CharacterUtils.getInstance(version);\n      this.lemmaList = Collections.emptyList();\n    } finally {\n      me.setContextClassLoader(cl);\n    }  \n  }\n\n","sourceOld":"  /**\n   * Builds a filter for given PolishStemmer.DICTIONARY enum.\n   * \n   * @param in   input token stream\n   * @param dict PolishStemmer.DICTIONARY enum\n   * @param version Lucene version compatibility for lowercasing.\n   */\n  public MorfologikFilter(final TokenStream in, final DICTIONARY dict, final Version version) {\n    super(in);\n    this.input = in;\n    this.stemmer = new PolishStemmer(dict);\n    this.charUtils = CharacterUtils.getInstance(version);\n    this.lemmaList = Collections.emptyList();\n  }\n\n","bugFix":["c9372469b09ed273740e18f76520c99aa075358b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43cfa455b570ba7bf8eefe91de210d46c68a0a2a","date":1372853690,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,Version).mjava","pathOld":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,DICTIONARY,Version).mjava","sourceNew":"  /**\n   * @param in   input token stream\n   * @param version Lucene version compatibility for lowercasing.\n   */\n  public MorfologikFilter(final TokenStream in, final Version version) {\n    super(in);\n    this.input = in;\n    \n    // SOLR-4007: temporarily substitute context class loader to allow finding dictionary resources.\n    Thread me = Thread.currentThread();\n    ClassLoader cl = me.getContextClassLoader();\n    try {\n      me.setContextClassLoader(PolishStemmer.class.getClassLoader());\n      this.stemmer = new PolishStemmer();\n      this.charUtils = CharacterUtils.getInstance(version);\n      this.lemmaList = Collections.emptyList();\n    } finally {\n      me.setContextClassLoader(cl);\n    }  \n  }\n\n","sourceOld":"  /**\n   * Builds a filter for given PolishStemmer.DICTIONARY enum.\n   * \n   * @param in   input token stream\n   * @param dict PolishStemmer.DICTIONARY enum\n   * @param version Lucene version compatibility for lowercasing.\n   */\n  public MorfologikFilter(final TokenStream in, final DICTIONARY dict, final Version version) {\n    super(in);\n    this.input = in;\n    \n    // SOLR-4007: temporarily substitute context class loader to allow finding dictionary resources.\n    Thread me = Thread.currentThread();\n    ClassLoader cl = me.getContextClassLoader();\n    try {\n      me.setContextClassLoader(PolishStemmer.class.getClassLoader());\n      this.stemmer = new PolishStemmer(dict);\n      this.charUtils = CharacterUtils.getInstance(version);\n      this.lemmaList = Collections.emptyList();\n    } finally {\n      me.setContextClassLoader(cl);\n    }  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#MorfologikFilter(TokenStream,DICTIONARY,Version).mjava","sourceNew":null,"sourceOld":"  /**\n   * Builds a filter for given PolishStemmer.DICTIONARY enum.\n   * \n   * @param in   input token stream\n   * @param dict PolishStemmer.DICTIONARY enum\n   * @param version Lucene version compatibility for lowercasing.\n   */\n  public MorfologikFilter(final TokenStream in, final DICTIONARY dict, final Version version) {\n    super(in);\n    this.input = in;\n    \n    // SOLR-4007: temporarily substitute context class loader to allow finding dictionary resources.\n    Thread me = Thread.currentThread();\n    ClassLoader cl = me.getContextClassLoader();\n    try {\n      me.setContextClassLoader(PolishStemmer.class.getClassLoader());\n      this.stemmer = new PolishStemmer(dict);\n      this.charUtils = CharacterUtils.getInstance(version);\n      this.lemmaList = Collections.emptyList();\n    } finally {\n      me.setContextClassLoader(cl);\n    }  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f9dc42d38fa49aaad8dfcffa0779e5666005af94":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["f9dc42d38fa49aaad8dfcffa0779e5666005af94","43cfa455b570ba7bf8eefe91de210d46c68a0a2a"],"43cfa455b570ba7bf8eefe91de210d46c68a0a2a":["f9dc42d38fa49aaad8dfcffa0779e5666005af94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["43cfa455b570ba7bf8eefe91de210d46c68a0a2a"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["f9dc42d38fa49aaad8dfcffa0779e5666005af94"],"f9dc42d38fa49aaad8dfcffa0779e5666005af94":["37a0f60745e53927c4c876cfe5b5a58170f0646c","43cfa455b570ba7bf8eefe91de210d46c68a0a2a"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"43cfa455b570ba7bf8eefe91de210d46c68a0a2a":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}