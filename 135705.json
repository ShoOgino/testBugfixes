{"path":"solr/core/src/test/org/apache/solr/security/AuditLoggerIntegrationTest#testAsyncWithQueue().mjava","commits":[{"id":"12ddd922ea96c1d0ea68a68506b6984a246cfb22","date":1554385731,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/AuditLoggerIntegrationTest#testAsyncWithQueue().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAsyncWithQueue() throws Exception {\n    setupCluster(true, 100, false, null);\n    runAdminCommands();\n    assertAuditMetricsMinimums(testHarness.get().cluster, CallbackAuditLoggerPlugin.class.getSimpleName(), 3, 0);\n    ArrayList<MetricRegistry> registries = getMetricsReigstries(testHarness.get().cluster);\n    Timer timer = ((Timer) registries.get(0).getMetrics().get(\"SECURITY./auditlogging.CallbackAuditLoggerPlugin.queuedTime\"));\n    double meanTimeOnQueue = timer.getSnapshot().getMean() / 1000000; // Convert to ms\n    assertTrue(meanTimeOnQueue > 50);\n    testHarness.get().shutdownCluster();\n    assertThreeAdminEvents();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b793398be7cbf26fb9faa722569a03f8cb44c6ac","date":1554453334,"type":5,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/AuditLoggerIntegrationTest#testQueuedTimeMetric().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/AuditLoggerIntegrationTest#testAsyncWithQueue().mjava","sourceNew":"  @Test\n  public void testQueuedTimeMetric() throws Exception {\n    setupCluster(true, 100, false, null);\n    runAdminCommands();\n    waitForAuditEventCallbacks(3);\n    assertAuditMetricsMinimums(testHarness.get().cluster, CallbackAuditLoggerPlugin.class.getSimpleName(), 3, 0);\n    ArrayList<MetricRegistry> registries = getMetricsReigstries(testHarness.get().cluster);\n    Timer timer = ((Timer) registries.get(0).getMetrics().get(\"SECURITY./auditlogging.CallbackAuditLoggerPlugin.queuedTime\"));\n    double meanTimeOnQueue = timer.getSnapshot().getMean() / 1000000; // Convert to ms\n    assertTrue(\"Expecting mean time on queue >10ms, got \" + meanTimeOnQueue, meanTimeOnQueue > 10);\n  }\n\n","sourceOld":"  @Test\n  public void testAsyncWithQueue() throws Exception {\n    setupCluster(true, 100, false, null);\n    runAdminCommands();\n    assertAuditMetricsMinimums(testHarness.get().cluster, CallbackAuditLoggerPlugin.class.getSimpleName(), 3, 0);\n    ArrayList<MetricRegistry> registries = getMetricsReigstries(testHarness.get().cluster);\n    Timer timer = ((Timer) registries.get(0).getMetrics().get(\"SECURITY./auditlogging.CallbackAuditLoggerPlugin.queuedTime\"));\n    double meanTimeOnQueue = timer.getSnapshot().getMean() / 1000000; // Convert to ms\n    assertTrue(meanTimeOnQueue > 50);\n    testHarness.get().shutdownCluster();\n    assertThreeAdminEvents();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12ddd922ea96c1d0ea68a68506b6984a246cfb22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b793398be7cbf26fb9faa722569a03f8cb44c6ac":["12ddd922ea96c1d0ea68a68506b6984a246cfb22"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b793398be7cbf26fb9faa722569a03f8cb44c6ac"]},"commit2Childs":{"12ddd922ea96c1d0ea68a68506b6984a246cfb22":["b793398be7cbf26fb9faa722569a03f8cb44c6ac"],"b793398be7cbf26fb9faa722569a03f8cb44c6ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["12ddd922ea96c1d0ea68a68506b6984a246cfb22"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}