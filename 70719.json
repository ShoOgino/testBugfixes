{"path":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    IndexWriter iw = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    iw.close();\n\n    RAMDirectory rd2 = new MockRAMDirectory(rd1);\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    IndexWriter iw = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    iw.close();\n\n    RAMDirectory rd2 = new MockRAMDirectory(rd1);\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    IndexWriter iw = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    RAMDirectory rd2 = new MockRAMDirectory(rd1);\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    IndexWriter iw = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    iw.close();\n\n    RAMDirectory rd2 = new MockRAMDirectory(rd1);\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Random random = newRandom();\n    RAMDirectory rd1 = new MockRAMDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    RAMDirectory rd2 = new MockRAMDirectory(rd1);\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    IndexWriter iw = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    RAMDirectory rd2 = new MockRAMDirectory(rd1);\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Random random = newRandom();\n    MockRAMDirectory rd1 = new MockRAMDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    MockRAMDirectory rd2 = new MockRAMDirectory(rd1);\n\n    MockRAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Random random = newRandom();\n    RAMDirectory rd1 = new MockRAMDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    RAMDirectory rd2 = new MockRAMDirectory(rd1);\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Random random = newRandom();\n    MockRAMDirectory rd1 = newDirectory(random);\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    MockRAMDirectory rd2 = newDirectory(random, rd1);\n\n    MockRAMDirectory rdOut = newDirectory(random);\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Random random = newRandom();\n    MockRAMDirectory rd1 = new MockRAMDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    MockRAMDirectory rd2 = new MockRAMDirectory(rd1);\n\n    MockRAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Random random = newRandom();\n    Directory rd1 = newDirectory(random);\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    Directory rd2 = newDirectory(random, rd1);\n\n    Directory rdOut = newDirectory(random);\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Random random = newRandom();\n    MockRAMDirectory rd1 = newDirectory(random);\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    MockRAMDirectory rd2 = newDirectory(random, rd1);\n\n    MockRAMDirectory rdOut = newDirectory(random);\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Random random = newRandom();\n    Directory rd1 = newDirectory(random);\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    Directory rd2 = newDirectory(random, rd1);\n\n    Directory rdOut = newDirectory(random);\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    IndexWriter iw = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    RAMDirectory rd2 = new MockRAMDirectory(rd1);\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff6fd241dc6610f7f81b62e3ba4cedf105939623","date":1307331653,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"79c2cb24929f2649a8875fb629086171f914d5ce","date":1307332717,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.forceMerge(1);\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1));\n    pr.add(IndexReader.open(rd2));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.forceMerge(1);\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.forceMerge(1);\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1));\n    pr.add(IndexReader.open(rd2));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.forceMerge(1);\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.forceMerge(1);\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1));\n    pr.add(IndexReader.open(rd2));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.forceMerge(1);\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.forceMerge(1);\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92","date":1327858596,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd1)));\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd2)));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.forceMerge(1);\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1));\n    pr.add(IndexReader.open(rd2));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.forceMerge(1);\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd1)));\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd2)));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.forceMerge(1);\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1));\n    pr.add(IndexReader.open(rd2));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.forceMerge(1);\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b","date":1328624680,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelAtomicReader pr = new ParallelAtomicReader.Builder()\n      .add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd1)))\n      .add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd2)))\n      .build();\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.forceMerge(1);\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd1)));\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd2)));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.forceMerge(1);\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"08b385e33541f6749e71618c9ab36fad908a7ed0","date":1328629771,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd1)));\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd2)));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.forceMerge(1);\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelAtomicReader pr = new ParallelAtomicReader.Builder()\n      .add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd1)))\n      .add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd2)))\n      .build();\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.forceMerge(1);\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndex().mjava","sourceNew":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd1)));\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd2)));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.forceMerge(1);\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","sourceOld":"  /**\n   * Creates two empty indexes and wraps a ParallelReader around. Adding this\n   * reader to a new index should not throw any exception.\n   * \n   * @throws IOException\n   */\n  public void testEmptyIndex() throws IOException {\n    Directory rd1 = newDirectory();\n    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    iw.close();\n\n    Directory rd2 = newDirectory(rd1);\n\n    Directory rdOut = newDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd1)));\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd2)));\n\t\t\n    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)\n    iwOut.addIndexes(pr);\n\t\t\n    iwOut.forceMerge(1);\n    iwOut.close();\n    rdOut.close();\n    rd1.close();\n    rd2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["08b385e33541f6749e71618c9ab36fad908a7ed0"],"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"79c2cb24929f2649a8875fb629086171f914d5ce":["a3776dccca01c11e7046323cfad46a3b4a471233","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["a05409176bd65129d67a785ee70e881e238a9aef"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a05409176bd65129d67a785ee70e881e238a9aef":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"08b385e33541f6749e71618c9ab36fad908a7ed0":["9ecf541c11d0df215aa1ea806f826d88fb9b5b9b"],"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["3bb13258feba31ab676502787ab2e1779f129b7a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3615ce4a1f785ae1b779244de52c6a7d99227e60","2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92"],"a3776dccca01c11e7046323cfad46a3b4a471233":["4e8cc373c801e54cec75daf9f52792cb4b17f536","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["135621f3a0670a9394eb563224a3b76cc4dddc0f","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"3bb13258feba31ab676502787ab2e1779f129b7a":["1f653cfcf159baeaafe5d01682a911e95bba4012","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["1f653cfcf159baeaafe5d01682a911e95bba4012"]},"commit2Childs":{"2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b":["08b385e33541f6749e71618c9ab36fad908a7ed0"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","1c5b026d03cbbb03ca4c0b97d14e9839682281dc","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["ff6fd241dc6610f7f81b62e3ba4cedf105939623","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"79c2cb24929f2649a8875fb629086171f914d5ce":[],"1f653cfcf159baeaafe5d01682a911e95bba4012":["3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a05409176bd65129d67a785ee70e881e238a9aef":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"08b385e33541f6749e71618c9ab36fad908a7ed0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a05409176bd65129d67a785ee70e881e238a9aef"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"962d04139994fce5193143ef35615499a9a96d78":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["9ecf541c11d0df215aa1ea806f826d88fb9b5b9b"],"a3776dccca01c11e7046323cfad46a3b4a471233":["79c2cb24929f2649a8875fb629086171f914d5ce"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","5cab9a86bd67202d20b6adc463008c8e982b070a"],"3bb13258feba31ab676502787ab2e1779f129b7a":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","79c2cb24929f2649a8875fb629086171f914d5ce","962d04139994fce5193143ef35615499a9a96d78","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}