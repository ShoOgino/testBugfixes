{"path":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testIsCurrent().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testIsCurrent().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDirectoryReader#testIsCurrent().mjava","sourceNew":"  public void testIsCurrent() throws IOException {\n    Directory ramDir=newDirectory();\n    addDoc(random, ramDir, \"test foo\", true);\n    DirectoryReader reader = DirectoryReader.open(ramDir);\n    assertTrue(reader.isCurrent());   // just opened, must be current\n    addDoc(random, ramDir, \"more text\", false);\n    assertFalse(reader.isCurrent());   // has been modified, not current anymore\n    reader.close();\n    ramDir.close();\n  }\n\n","sourceOld":"  public void testIsCurrent() throws IOException {\n    Directory ramDir=newDirectory();\n    addDoc(random, ramDir, \"test foo\", true);\n    DirectoryReader reader = DirectoryReader.open(ramDir);\n    assertTrue(reader.isCurrent());   // just opened, must be current\n    addDoc(random, ramDir, \"more text\", false);\n    assertFalse(reader.isCurrent());   // has been modified, not current anymore\n    reader.close();\n    ramDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87","date":1328967626,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testIsCurrent().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testIsCurrent().mjava","sourceNew":"  public void testIsCurrent() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter writer = new IndexWriter(d, newIndexWriterConfig( \n      TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    addDocumentWithFields(writer);\n    writer.close();\n    // set up reader:\n    DirectoryReader reader = DirectoryReader.open(d);\n    assertTrue(reader.isCurrent());\n    // modify index by adding another document:\n    writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    addDocumentWithFields(writer);\n    writer.close();\n    assertFalse(reader.isCurrent());\n    // re-create index:\n    writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    addDocumentWithFields(writer);\n    writer.close();\n    assertFalse(reader.isCurrent());\n    reader.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testIsCurrent() throws IOException {\n    Directory ramDir=newDirectory();\n    addDoc(random, ramDir, \"test foo\", true);\n    DirectoryReader reader = DirectoryReader.open(ramDir);\n    assertTrue(reader.isCurrent());   // just opened, must be current\n    addDoc(random, ramDir, \"more text\", false);\n    assertFalse(reader.isCurrent());   // has been modified, not current anymore\n    reader.close();\n    ramDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testIsCurrent().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testIsCurrent().mjava","sourceNew":"  public void testIsCurrent() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter writer = new IndexWriter(d, newIndexWriterConfig( \n      TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    addDocumentWithFields(writer);\n    writer.close();\n    // set up reader:\n    DirectoryReader reader = DirectoryReader.open(d);\n    assertTrue(reader.isCurrent());\n    // modify index by adding another document:\n    writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n    addDocumentWithFields(writer);\n    writer.close();\n    assertFalse(reader.isCurrent());\n    // re-create index:\n    writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    addDocumentWithFields(writer);\n    writer.close();\n    assertFalse(reader.isCurrent());\n    reader.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testIsCurrent() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter writer = new IndexWriter(d, newIndexWriterConfig( \n      TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    addDocumentWithFields(writer);\n    writer.close();\n    // set up reader:\n    DirectoryReader reader = DirectoryReader.open(d);\n    assertTrue(reader.isCurrent());\n    // modify index by adding another document:\n    writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    addDocumentWithFields(writer);\n    writer.close();\n    assertFalse(reader.isCurrent());\n    // re-create index:\n    writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    addDocumentWithFields(writer);\n    writer.close();\n    assertFalse(reader.isCurrent());\n    reader.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testIsCurrent().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testIsCurrent().mjava","sourceNew":"  public void testIsCurrent() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter writer = new IndexWriter(d, newIndexWriterConfig( \n      TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    addDocumentWithFields(writer);\n    writer.shutdown();\n    // set up reader:\n    DirectoryReader reader = DirectoryReader.open(d);\n    assertTrue(reader.isCurrent());\n    // modify index by adding another document:\n    writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n    addDocumentWithFields(writer);\n    writer.shutdown();\n    assertFalse(reader.isCurrent());\n    // re-create index:\n    writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    addDocumentWithFields(writer);\n    writer.shutdown();\n    assertFalse(reader.isCurrent());\n    reader.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testIsCurrent() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter writer = new IndexWriter(d, newIndexWriterConfig( \n      TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    addDocumentWithFields(writer);\n    writer.close();\n    // set up reader:\n    DirectoryReader reader = DirectoryReader.open(d);\n    assertTrue(reader.isCurrent());\n    // modify index by adding another document:\n    writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n    addDocumentWithFields(writer);\n    writer.close();\n    assertFalse(reader.isCurrent());\n    // re-create index:\n    writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    addDocumentWithFields(writer);\n    writer.close();\n    assertFalse(reader.isCurrent());\n    reader.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testIsCurrent().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testIsCurrent().mjava","sourceNew":"  public void testIsCurrent() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter writer = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random())));\n    addDocumentWithFields(writer);\n    writer.shutdown();\n    // set up reader:\n    DirectoryReader reader = DirectoryReader.open(d);\n    assertTrue(reader.isCurrent());\n    // modify index by adding another document:\n    writer = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random()))\n                                  .setOpenMode(OpenMode.APPEND));\n    addDocumentWithFields(writer);\n    writer.shutdown();\n    assertFalse(reader.isCurrent());\n    // re-create index:\n    writer = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random()))\n                                  .setOpenMode(OpenMode.CREATE));\n    addDocumentWithFields(writer);\n    writer.shutdown();\n    assertFalse(reader.isCurrent());\n    reader.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testIsCurrent() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter writer = new IndexWriter(d, newIndexWriterConfig( \n      TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    addDocumentWithFields(writer);\n    writer.shutdown();\n    // set up reader:\n    DirectoryReader reader = DirectoryReader.open(d);\n    assertTrue(reader.isCurrent());\n    // modify index by adding another document:\n    writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n    addDocumentWithFields(writer);\n    writer.shutdown();\n    assertFalse(reader.isCurrent());\n    // re-create index:\n    writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    addDocumentWithFields(writer);\n    writer.shutdown();\n    assertFalse(reader.isCurrent());\n    reader.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testIsCurrent().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testIsCurrent().mjava","sourceNew":"  public void testIsCurrent() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter writer = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random())));\n    addDocumentWithFields(writer);\n    writer.close();\n    // set up reader:\n    DirectoryReader reader = DirectoryReader.open(d);\n    assertTrue(reader.isCurrent());\n    // modify index by adding another document:\n    writer = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random()))\n                                  .setOpenMode(OpenMode.APPEND));\n    addDocumentWithFields(writer);\n    writer.close();\n    assertFalse(reader.isCurrent());\n    // re-create index:\n    writer = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random()))\n                                  .setOpenMode(OpenMode.CREATE));\n    addDocumentWithFields(writer);\n    writer.close();\n    assertFalse(reader.isCurrent());\n    reader.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testIsCurrent() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter writer = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random())));\n    addDocumentWithFields(writer);\n    writer.shutdown();\n    // set up reader:\n    DirectoryReader reader = DirectoryReader.open(d);\n    assertTrue(reader.isCurrent());\n    // modify index by adding another document:\n    writer = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random()))\n                                  .setOpenMode(OpenMode.APPEND));\n    addDocumentWithFields(writer);\n    writer.shutdown();\n    assertFalse(reader.isCurrent());\n    // re-create index:\n    writer = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random()))\n                                  .setOpenMode(OpenMode.CREATE));\n    addDocumentWithFields(writer);\n    writer.shutdown();\n    assertFalse(reader.isCurrent());\n    reader.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}