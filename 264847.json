{"path":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplayVsRecovery#addDocs(boolean,int,int).mjava","commits":[{"id":"df06aa21e6f41b678afd8f30568ebadd781be717","date":1578089543,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplayVsRecovery#addDocs(boolean,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Adds the specified number of docs directly to the leader, \n   * using increasing docIds begining with startId.  Commits if and only if the boolean is true.\n   */\n  private void addDocs(final boolean commit, final int numDocs, final int startId) throws SolrServerException, IOException {\n\n    List<SolrInputDocument> docs = new ArrayList<>(numDocs);\n    for (int i = 0; i < numDocs; i++) {\n      int id = startId + i;\n      docs.add(new SolrInputDocument(\"id\", String.valueOf(id), \"fieldName_s\", String.valueOf(id)));\n    }\n    // For simplicity, we always add out docs directly to NODE0\n    // (where the leader should be) and bypass the proxy...\n    try (HttpSolrClient client = getHttpSolrClient(NODE0.getBaseUrl().toString())) {\n      assertEquals(0, client.add(COLLECTION, docs).getStatus());\n      if (commit) {\n        assertEquals(0, client.commit(COLLECTION).getStatus());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca62564055241632cd20d65b5ecb8c8e93bd60c4","date":1578383112,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplayVsRecovery#addDocs(boolean,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Adds the specified number of docs directly to the leader, \n   * using increasing docIds begining with startId.  Commits if and only if the boolean is true.\n   */\n  private void addDocs(final boolean commit, final int numDocs, final int startId) throws SolrServerException, IOException {\n\n    List<SolrInputDocument> docs = new ArrayList<>(numDocs);\n    for (int i = 0; i < numDocs; i++) {\n      int id = startId + i;\n      docs.add(new SolrInputDocument(\"id\", String.valueOf(id), \"fieldName_s\", String.valueOf(id)));\n    }\n    // For simplicity, we always add out docs directly to NODE0\n    // (where the leader should be) and bypass the proxy...\n    try (HttpSolrClient client = getHttpSolrClient(NODE0.getBaseUrl().toString())) {\n      assertEquals(0, client.add(COLLECTION, docs).getStatus());\n      if (commit) {\n        assertEquals(0, client.commit(COLLECTION).getStatus());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"df06aa21e6f41b678afd8f30568ebadd781be717":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ca62564055241632cd20d65b5ecb8c8e93bd60c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","df06aa21e6f41b678afd8f30568ebadd781be717"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df06aa21e6f41b678afd8f30568ebadd781be717"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["df06aa21e6f41b678afd8f30568ebadd781be717","ca62564055241632cd20d65b5ecb8c8e93bd60c4"],"df06aa21e6f41b678afd8f30568ebadd781be717":["ca62564055241632cd20d65b5ecb8c8e93bd60c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ca62564055241632cd20d65b5ecb8c8e93bd60c4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ca62564055241632cd20d65b5ecb8c8e93bd60c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}