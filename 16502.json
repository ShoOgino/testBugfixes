{"path":"solr/test-framework/src/java/org/apache/solr/util/BaseTestHarness#getXmlDocumentBuilder().mjava","commits":[{"id":"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37","date":1362545433,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/BaseTestHarness#getXmlDocumentBuilder().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#getXmlDocumentBuilder().mjava","sourceNew":"  public DocumentBuilder getXmlDocumentBuilder() {\n    try {\n      DocumentBuilder builder = builderTL.get();\n      if (builder == null) {\n        builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n        builderTL.set(builder);\n      }\n      return builder;\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  private DocumentBuilder getXmlDocumentBuilder() {\n    try {\n      DocumentBuilder builder = builderTL.get();\n      if (builder == null) {\n        builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n        builderTL.set(builder);\n      }\n      return builder;\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d264f386d864b5751209060e8886ca9845f70469","date":1372172126,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/BaseTestHarness#getXmlDocumentBuilder().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/BaseTestHarness#getXmlDocumentBuilder().mjava","sourceNew":"  public static DocumentBuilder getXmlDocumentBuilder() {\n    try {\n      DocumentBuilder builder = builderTL.get();\n      if (builder == null) {\n        builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n        builderTL.set(builder);\n      }\n      return builder;\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  public DocumentBuilder getXmlDocumentBuilder() {\n    try {\n      DocumentBuilder builder = builderTL.get();\n      if (builder == null) {\n        builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n        builderTL.set(builder);\n      }\n      return builder;\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"354983dcdf70c800bf2573d10b54a7391b1dc167","date":1372183171,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/BaseTestHarness#getXmlDocumentBuilder().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/BaseTestHarness#getXmlDocumentBuilder().mjava","sourceNew":"  public DocumentBuilder getXmlDocumentBuilder() {\n    try {\n      DocumentBuilder builder = builderTL.get();\n      if (builder == null) {\n        builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n        builderTL.set(builder);\n      }\n      return builder;\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  public static DocumentBuilder getXmlDocumentBuilder() {\n    try {\n      DocumentBuilder builder = builderTL.get();\n      if (builder == null) {\n        builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n        builderTL.set(builder);\n      }\n      return builder;\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/BaseTestHarness#getXmlDocumentBuilder().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/BaseTestHarness#getXmlDocumentBuilder().mjava","sourceNew":"  public static DocumentBuilder getXmlDocumentBuilder() {\n    try {\n      DocumentBuilder builder = builderTL.get();\n      if (builder == null) {\n        builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n        builderTL.set(builder);\n      }\n      return builder;\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  public DocumentBuilder getXmlDocumentBuilder() {\n    try {\n      DocumentBuilder builder = builderTL.get();\n      if (builder == null) {\n        builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n        builderTL.set(builder);\n      }\n      return builder;\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/BaseTestHarness#getXmlDocumentBuilder().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/BaseTestHarness#getXmlDocumentBuilder().mjava","sourceNew":"  public static DocumentBuilder getXmlDocumentBuilder() {\n    try {\n      DocumentBuilder builder = builderTL.get();\n      if (builder == null) {\n        builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n        builderTL.set(builder);\n      }\n      return builder;\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  public DocumentBuilder getXmlDocumentBuilder() {\n    try {\n      DocumentBuilder builder = builderTL.get();\n      if (builder == null) {\n        builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n        builderTL.set(builder);\n      }\n      return builder;\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7116474e2e390259937401cf928323e0cbc75e60":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37","7116474e2e390259937401cf928323e0cbc75e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"354983dcdf70c800bf2573d10b54a7391b1dc167":["d264f386d864b5751209060e8886ca9845f70469"],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d264f386d864b5751209060e8886ca9845f70469":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7116474e2e390259937401cf928323e0cbc75e60"]},"commit2Childs":{"7116474e2e390259937401cf928323e0cbc75e60":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["7116474e2e390259937401cf928323e0cbc75e60"],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d264f386d864b5751209060e8886ca9845f70469"],"d264f386d864b5751209060e8886ca9845f70469":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}