{"path":"backwards/src/java/org/apache/lucene/index/TermInfosReader#getIndexOffset(Term).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/index/TermInfosReader#getIndexOffset(Term).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the offset of the greatest index entry which is less than or equal to term.*/\n  private final int getIndexOffset(Term term) {\n    int lo = 0;\t\t\t\t\t  // binary search indexTerms[]\n    int hi = indexTerms.length - 1;\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >>> 1;\n      int delta = term.compareTo(indexTerms[mid]);\n      if (delta < 0)\n\thi = mid - 1;\n      else if (delta > 0)\n\tlo = mid + 1;\n      else\n\treturn mid;\n    }\n    return hi;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/TermInfosReader#getIndexOffset(Term).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/TermInfosReader#getIndexOffset(Term).mjava","sourceNew":"  /** Returns the offset of the greatest index entry which is less than or equal to term.*/\n  private final int getIndexOffset(Term term) {\n    int lo = 0;\t\t\t\t\t  // binary search indexTerms[]\n    int hi = indexTerms.length - 1;\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >>> 1;\n      int delta = term.compareTo(indexTerms[mid]);\n      if (delta < 0)\n\thi = mid - 1;\n      else if (delta > 0)\n\tlo = mid + 1;\n      else\n\treturn mid;\n    }\n    return hi;\n  }\n\n","sourceOld":"  /** Returns the offset of the greatest index entry which is less than or equal to term.*/\n  private final int getIndexOffset(Term term) {\n    int lo = 0;\t\t\t\t\t  // binary search indexTerms[]\n    int hi = indexTerms.length - 1;\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >>> 1;\n      int delta = term.compareTo(indexTerms[mid]);\n      if (delta < 0)\n\thi = mid - 1;\n      else if (delta > 0)\n\tlo = mid + 1;\n      else\n\treturn mid;\n    }\n    return hi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}