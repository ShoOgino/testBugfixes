{"path":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","commits":[{"id":"3b9d7142a399ac70a71ce5b40ee66695eda5b7e8","date":1195335263,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"/dev/null","sourceNew":"  private static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer());\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer());\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer());\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n\n    }\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0018e7a0579df5d3de71d0bd878322a7abef04d9","date":1202242049,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  private static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n\n    }\n  }  \n\n","sourceOld":"  private static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer());\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer());\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer());\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6db660b56f04fdb2853d25cdee8ee0d36559a521","date":1233313968,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  private static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"0a046c0c310bc77931fc8441bd920053b607dd14":["6db660b56f04fdb2853d25cdee8ee0d36559a521","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["3b9d7142a399ac70a71ce5b40ee66695eda5b7e8"],"3b9d7142a399ac70a71ce5b40ee66695eda5b7e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6db660b56f04fdb2853d25cdee8ee0d36559a521":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["6db660b56f04fdb2853d25cdee8ee0d36559a521"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0a046c0c310bc77931fc8441bd920053b607dd14":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["6db660b56f04fdb2853d25cdee8ee0d36559a521"],"3b9d7142a399ac70a71ce5b40ee66695eda5b7e8":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"6db660b56f04fdb2853d25cdee8ee0d36559a521":["0a046c0c310bc77931fc8441bd920053b607dd14","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b9d7142a399ac70a71ce5b40ee66695eda5b7e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}