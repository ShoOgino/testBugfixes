{"path":"contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEDirectory#listAll().mjava","commits":[{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEDirectory#listAll().mjava","pathOld":"contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEDirectory#list().mjava","sourceNew":"    public String[] listAll() throws IOException {\n        Cursor cursor = null;\n        List list = new ArrayList();\n\n        try {\n            try {\n                DatabaseEntry key = new DatabaseEntry(new byte[0]);\n                DatabaseEntry data = new DatabaseEntry(null);\n\n                data.setPartial(true);\n                // TODO see if cursor needs configuration\n                cursor = files.openCursor(txn, null);\n                // TODO see if LockMode should be set\n                if (cursor.getNext(key, data, null) != OperationStatus.NOTFOUND) {\n                    ByteArrayInputStream buffer = new ByteArrayInputStream(key\n                            .getData());\n                    DataInputStream in = new DataInputStream(buffer);\n                    String name = in.readUTF();\n\n                    in.close();\n                    list.add(name);\n\n                    while (cursor.getNext(key, data, null) != OperationStatus.NOTFOUND) {\n                        buffer = new ByteArrayInputStream(key.getData());\n                        in = new DataInputStream(buffer);\n                        name = in.readUTF();\n                        in.close();\n\n                        list.add(name);\n                    }\n                }\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n\n        return (String[]) list.toArray(new String[list.size()]);\n    }\n\n","sourceOld":"    public String[] list() throws IOException {\n        Cursor cursor = null;\n        List list = new ArrayList();\n\n        try {\n            try {\n                DatabaseEntry key = new DatabaseEntry(new byte[0]);\n                DatabaseEntry data = new DatabaseEntry(null);\n\n                data.setPartial(true);\n                // TODO see if cursor needs configuration\n                cursor = files.openCursor(txn, null);\n                // TODO see if LockMode should be set\n                if (cursor.getNext(key, data, null) != OperationStatus.NOTFOUND) {\n                    ByteArrayInputStream buffer = new ByteArrayInputStream(key\n                            .getData());\n                    DataInputStream in = new DataInputStream(buffer);\n                    String name = in.readUTF();\n\n                    in.close();\n                    list.add(name);\n\n                    while (cursor.getNext(key, data, null) != OperationStatus.NOTFOUND) {\n                        buffer = new ByteArrayInputStream(key.getData());\n                        in = new DataInputStream(buffer);\n                        name = in.readUTF();\n                        in.close();\n\n                        list.add(name);\n                    }\n                }\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n\n        return (String[]) list.toArray(new String[list.size()]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEDirectory#listAll().mjava","pathOld":"contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEDirectory#listAll().mjava","sourceNew":"    @Override\n    public String[] listAll() throws IOException {\n        Cursor cursor = null;\n        List list = new ArrayList();\n\n        try {\n            try {\n                DatabaseEntry key = new DatabaseEntry(new byte[0]);\n                DatabaseEntry data = new DatabaseEntry(null);\n\n                data.setPartial(true);\n                // TODO see if cursor needs configuration\n                cursor = files.openCursor(txn, null);\n                // TODO see if LockMode should be set\n                if (cursor.getNext(key, data, null) != OperationStatus.NOTFOUND) {\n                    ByteArrayInputStream buffer = new ByteArrayInputStream(key\n                            .getData());\n                    DataInputStream in = new DataInputStream(buffer);\n                    String name = in.readUTF();\n\n                    in.close();\n                    list.add(name);\n\n                    while (cursor.getNext(key, data, null) != OperationStatus.NOTFOUND) {\n                        buffer = new ByteArrayInputStream(key.getData());\n                        in = new DataInputStream(buffer);\n                        name = in.readUTF();\n                        in.close();\n\n                        list.add(name);\n                    }\n                }\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n\n        return (String[]) list.toArray(new String[list.size()]);\n    }\n\n","sourceOld":"    public String[] listAll() throws IOException {\n        Cursor cursor = null;\n        List list = new ArrayList();\n\n        try {\n            try {\n                DatabaseEntry key = new DatabaseEntry(new byte[0]);\n                DatabaseEntry data = new DatabaseEntry(null);\n\n                data.setPartial(true);\n                // TODO see if cursor needs configuration\n                cursor = files.openCursor(txn, null);\n                // TODO see if LockMode should be set\n                if (cursor.getNext(key, data, null) != OperationStatus.NOTFOUND) {\n                    ByteArrayInputStream buffer = new ByteArrayInputStream(key\n                            .getData());\n                    DataInputStream in = new DataInputStream(buffer);\n                    String name = in.readUTF();\n\n                    in.close();\n                    list.add(name);\n\n                    while (cursor.getNext(key, data, null) != OperationStatus.NOTFOUND) {\n                        buffer = new ByteArrayInputStream(key.getData());\n                        in = new DataInputStream(buffer);\n                        name = in.readUTF();\n                        in.close();\n\n                        list.add(name);\n                    }\n                }\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n\n        return (String[]) list.toArray(new String[list.size()]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60cdc0e643184821eb066795a8791cd82559f46e","date":1257941914,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEDirectory#listAll().mjava","pathOld":"contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEDirectory#listAll().mjava","sourceNew":"    @Override\n    public String[] listAll() throws IOException {\n        Cursor cursor = null;\n        List<String> list = new ArrayList<String>();\n\n        try {\n            try {\n                DatabaseEntry key = new DatabaseEntry(new byte[0]);\n                DatabaseEntry data = new DatabaseEntry(null);\n\n                data.setPartial(true);\n                // TODO see if cursor needs configuration\n                cursor = files.openCursor(txn, null);\n                // TODO see if LockMode should be set\n                if (cursor.getNext(key, data, null) != OperationStatus.NOTFOUND) {\n                    ByteArrayInputStream buffer = new ByteArrayInputStream(key\n                            .getData());\n                    DataInputStream in = new DataInputStream(buffer);\n                    String name = in.readUTF();\n\n                    in.close();\n                    list.add(name);\n\n                    while (cursor.getNext(key, data, null) != OperationStatus.NOTFOUND) {\n                        buffer = new ByteArrayInputStream(key.getData());\n                        in = new DataInputStream(buffer);\n                        name = in.readUTF();\n                        in.close();\n\n                        list.add(name);\n                    }\n                }\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n\n        return list.toArray(new String[list.size()]);\n    }\n\n","sourceOld":"    @Override\n    public String[] listAll() throws IOException {\n        Cursor cursor = null;\n        List list = new ArrayList();\n\n        try {\n            try {\n                DatabaseEntry key = new DatabaseEntry(new byte[0]);\n                DatabaseEntry data = new DatabaseEntry(null);\n\n                data.setPartial(true);\n                // TODO see if cursor needs configuration\n                cursor = files.openCursor(txn, null);\n                // TODO see if LockMode should be set\n                if (cursor.getNext(key, data, null) != OperationStatus.NOTFOUND) {\n                    ByteArrayInputStream buffer = new ByteArrayInputStream(key\n                            .getData());\n                    DataInputStream in = new DataInputStream(buffer);\n                    String name = in.readUTF();\n\n                    in.close();\n                    list.add(name);\n\n                    while (cursor.getNext(key, data, null) != OperationStatus.NOTFOUND) {\n                        buffer = new ByteArrayInputStream(key.getData());\n                        in = new DataInputStream(buffer);\n                        name = in.readUTF();\n                        in.close();\n\n                        list.add(name);\n                    }\n                }\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n\n        return (String[]) list.toArray(new String[list.size()]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEDirectory#listAll().mjava","pathOld":"contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEDirectory#listAll().mjava","sourceNew":"    @Override\n    public String[] listAll() throws IOException {\n        Cursor cursor = null;\n        List<String> list = new ArrayList<String>();\n\n        try {\n            try {\n                DatabaseEntry key = new DatabaseEntry(new byte[0]);\n                DatabaseEntry data = new DatabaseEntry(null);\n\n                data.setPartial(true);\n                // TODO see if cursor needs configuration\n                cursor = files.openCursor(txn, null);\n                // TODO see if LockMode should be set\n                if (cursor.getNext(key, data, null) != OperationStatus.NOTFOUND) {\n                    ByteArrayInputStream buffer = new ByteArrayInputStream(key\n                            .getData());\n                    DataInputStream in = new DataInputStream(buffer);\n                    String name = in.readUTF();\n\n                    in.close();\n                    list.add(name);\n\n                    while (cursor.getNext(key, data, null) != OperationStatus.NOTFOUND) {\n                        buffer = new ByteArrayInputStream(key.getData());\n                        in = new DataInputStream(buffer);\n                        name = in.readUTF();\n                        in.close();\n\n                        list.add(name);\n                    }\n                }\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n\n        return list.toArray(new String[list.size()]);\n    }\n\n","sourceOld":"    @Override\n    public String[] listAll() throws IOException {\n        Cursor cursor = null;\n        List<String> list = new ArrayList<String>();\n\n        try {\n            try {\n                DatabaseEntry key = new DatabaseEntry(new byte[0]);\n                DatabaseEntry data = new DatabaseEntry(null);\n\n                data.setPartial(true);\n                // TODO see if cursor needs configuration\n                cursor = files.openCursor(txn, null);\n                // TODO see if LockMode should be set\n                if (cursor.getNext(key, data, null) != OperationStatus.NOTFOUND) {\n                    ByteArrayInputStream buffer = new ByteArrayInputStream(key\n                            .getData());\n                    DataInputStream in = new DataInputStream(buffer);\n                    String name = in.readUTF();\n\n                    in.close();\n                    list.add(name);\n\n                    while (cursor.getNext(key, data, null) != OperationStatus.NOTFOUND) {\n                        buffer = new ByteArrayInputStream(key.getData());\n                        in = new DataInputStream(buffer);\n                        name = in.readUTF();\n                        in.close();\n\n                        list.add(name);\n                    }\n                }\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n\n        return list.toArray(new String[list.size()]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60cdc0e643184821eb066795a8791cd82559f46e":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["4256bc1b3c94786287ccdfc751230374521843cf"],"4256bc1b3c94786287ccdfc751230374521843cf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["60cdc0e643184821eb066795a8791cd82559f46e"]},"commit2Childs":{"60cdc0e643184821eb066795a8791cd82559f46e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4256bc1b3c94786287ccdfc751230374521843cf"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["60cdc0e643184821eb066795a8791cd82559f46e"],"4256bc1b3c94786287ccdfc751230374521843cf":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}