{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/values/Lucene41BinaryDocValues.Factory#Factory(Directory,SegmentInfo,FieldInfo,IOContext).mjava","commits":[{"id":"ede45a461a2dcb573505ed9b6a5182dfebd3688f","date":1353338494,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/values/Lucene41BinaryDocValues.Factory#Factory(Directory,SegmentInfo,FieldInfo,IOContext).mjava","pathOld":"/dev/null","sourceNew":"    public Factory(Directory dir,\n        SegmentInfo segmentInfo, FieldInfo field, IOContext context\n        ) throws IOException {\n      boolean success = false;\n      this.valueCount = segmentInfo.getDocCount();\n      IndexInput datIn = null;\n      IndexInput indexIn = null;\n      try {\n        datIn = dir.openInput(Lucene41DocValuesConsumer.getDocValuesFileName(\n            segmentInfo, field, Lucene41DocValuesConsumer.DATA_EXTENSION),\n            context);\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        \n        this.size = datIn.readInt();\n        this.maxLength = datIn.readInt();\n        this.baseOffset = datIn.getFilePointer();\n        \n        if (size == VALUE_SIZE_VAR) {\n          indexIn = dir.openInput(Lucene41DocValuesConsumer\n              .getDocValuesFileName(segmentInfo, field,\n                  Lucene41DocValuesConsumer.INDEX_EXTENSION), context);\n          CodecUtil.checkHeader(indexIn, CODEC_NAME, VERSION_START,\n              VERSION_START);\n          indexHeader = PackedInts.readHeader(indexIn);\n        } else {\n          indexIn = null;\n          indexHeader = null;\n        }\n        this.indexIn = indexIn;\n        this.datIn = datIn;\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(datIn, indexIn);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"746e3645169db50c8f53252b30d6bc9ac21dea7c","date":1357597773,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/values/Lucene41BinaryDocValues.Factory#Factory(Directory,SegmentInfo,FieldInfo,IOContext).mjava","sourceNew":null,"sourceOld":"    public Factory(Directory dir,\n        SegmentInfo segmentInfo, FieldInfo field, IOContext context\n        ) throws IOException {\n      boolean success = false;\n      this.valueCount = segmentInfo.getDocCount();\n      IndexInput datIn = null;\n      IndexInput indexIn = null;\n      try {\n        datIn = dir.openInput(Lucene41DocValuesConsumer.getDocValuesFileName(\n            segmentInfo, field, Lucene41DocValuesConsumer.DATA_EXTENSION),\n            context);\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        \n        this.size = datIn.readInt();\n        this.maxLength = datIn.readInt();\n        this.baseOffset = datIn.getFilePointer();\n        \n        if (size == VALUE_SIZE_VAR) {\n          indexIn = dir.openInput(Lucene41DocValuesConsumer\n              .getDocValuesFileName(segmentInfo, field,\n                  Lucene41DocValuesConsumer.INDEX_EXTENSION), context);\n          CodecUtil.checkHeader(indexIn, CODEC_NAME, VERSION_START,\n              VERSION_START);\n          indexHeader = PackedInts.readHeader(indexIn);\n        } else {\n          indexIn = null;\n          indexHeader = null;\n        }\n        this.indexIn = indexIn;\n        this.datIn = datIn;\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(datIn, indexIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ede45a461a2dcb573505ed9b6a5182dfebd3688f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"746e3645169db50c8f53252b30d6bc9ac21dea7c":["ede45a461a2dcb573505ed9b6a5182dfebd3688f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ede45a461a2dcb573505ed9b6a5182dfebd3688f":["746e3645169db50c8f53252b30d6bc9ac21dea7c"],"746e3645169db50c8f53252b30d6bc9ac21dea7c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ede45a461a2dcb573505ed9b6a5182dfebd3688f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["746e3645169db50c8f53252b30d6bc9ac21dea7c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}