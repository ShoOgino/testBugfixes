{"path":"lucene/core/src/test/org/apache/lucene/search/FuzzyTermOnShortTermsTest#test().mjava","commits":[{"id":"33e6cd929924316f9ab2bf03fe69821632f01108","date":1379021189,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/FuzzyTermOnShortTermsTest#test().mjava","pathOld":"/dev/null","sourceNew":"   @Test\n   public void test() throws Exception {\n      // proves rule that edit distance between the two terms\n      // must be > smaller term for there to be a match\n      Analyzer a = getAnalyzer();\n      //these work\n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 1), 1);\n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 1), 1);\n\n      countHits(a, new String[]{\"abcde\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 2), 1);\n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"abcde\"), 2), 1);\n      \n      //these don't      \n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"a\"), 1), 0);\n      countHits(a, new String[]{\"a\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 1), 0);\n      \n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"a\"), 2), 0);\n      countHits(a, new String[]{\"a\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 2), 0);\n\n      countHits(a, new String[]{\"abcd\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 2), 0);\n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"abcd\"), 2), 0);\n   }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d3dec8619cc5a67c810bd49ad697d0170a32637","date":1473965066,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/FuzzyTermOnShortTermsTest#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/FuzzyTermOnShortTermsTest#test().mjava","sourceNew":"   @Test\n   public void test() throws Exception {\n      // proves rule that edit distance between the two terms\n      // must be > smaller term for there to be a match\n      Analyzer a = getAnalyzer();\n      //these work\n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 1), 1);\n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 1), 1);\n\n      countHits(a, new String[]{\"abcde\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 2), 1);\n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"abcde\"), 2), 1);\n\n      // LUCENE-7439: these now work as well:\n      \n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"a\"), 1), 1);\n      countHits(a, new String[]{\"a\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 1), 1);\n      \n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"a\"), 2), 1);\n      countHits(a, new String[]{\"a\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 2), 1);\n\n      countHits(a, new String[]{\"abcd\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 2), 1);\n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"abcd\"), 2), 1);\n   }\n\n","sourceOld":"   @Test\n   public void test() throws Exception {\n      // proves rule that edit distance between the two terms\n      // must be > smaller term for there to be a match\n      Analyzer a = getAnalyzer();\n      //these work\n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 1), 1);\n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 1), 1);\n\n      countHits(a, new String[]{\"abcde\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 2), 1);\n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"abcde\"), 2), 1);\n      \n      //these don't      \n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"a\"), 1), 0);\n      countHits(a, new String[]{\"a\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 1), 0);\n      \n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"a\"), 2), 0);\n      countHits(a, new String[]{\"a\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 2), 0);\n\n      countHits(a, new String[]{\"abcd\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 2), 0);\n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"abcd\"), 2), 0);\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/FuzzyTermOnShortTermsTest#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/FuzzyTermOnShortTermsTest#test().mjava","sourceNew":"   @Test\n   public void test() throws Exception {\n      // proves rule that edit distance between the two terms\n      // must be > smaller term for there to be a match\n      Analyzer a = getAnalyzer();\n      //these work\n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 1), 1);\n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 1), 1);\n\n      countHits(a, new String[]{\"abcde\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 2), 1);\n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"abcde\"), 2), 1);\n\n      // LUCENE-7439: these now work as well:\n      \n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"a\"), 1), 1);\n      countHits(a, new String[]{\"a\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 1), 1);\n      \n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"a\"), 2), 1);\n      countHits(a, new String[]{\"a\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 2), 1);\n\n      countHits(a, new String[]{\"abcd\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 2), 1);\n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"abcd\"), 2), 1);\n   }\n\n","sourceOld":"   @Test\n   public void test() throws Exception {\n      // proves rule that edit distance between the two terms\n      // must be > smaller term for there to be a match\n      Analyzer a = getAnalyzer();\n      //these work\n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 1), 1);\n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 1), 1);\n\n      countHits(a, new String[]{\"abcde\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 2), 1);\n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"abcde\"), 2), 1);\n      \n      //these don't      \n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"a\"), 1), 0);\n      countHits(a, new String[]{\"a\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 1), 0);\n      \n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"a\"), 2), 0);\n      countHits(a, new String[]{\"a\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 2), 0);\n\n      countHits(a, new String[]{\"abcd\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 2), 0);\n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"abcd\"), 2), 0);\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/FuzzyTermOnShortTermsTest#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/FuzzyTermOnShortTermsTest#test().mjava","sourceNew":"   @Test\n   public void test() throws Exception {\n      // proves rule that edit distance between the two terms\n      // must be > smaller term for there to be a match\n      Analyzer a = getAnalyzer();\n      //these work\n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 1), 1);\n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 1), 1);\n\n      countHits(a, new String[]{\"abcde\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 2), 1);\n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"abcde\"), 2), 1);\n\n      // LUCENE-7439: these now work as well:\n      \n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"a\"), 1), 1);\n      countHits(a, new String[]{\"a\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 1), 1);\n      \n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"a\"), 2), 1);\n      countHits(a, new String[]{\"a\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 2), 1);\n\n      countHits(a, new String[]{\"abcd\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 2), 1);\n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"abcd\"), 2), 1);\n   }\n\n","sourceOld":"   @Test\n   public void test() throws Exception {\n      // proves rule that edit distance between the two terms\n      // must be > smaller term for there to be a match\n      Analyzer a = getAnalyzer();\n      //these work\n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 1), 1);\n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 1), 1);\n\n      countHits(a, new String[]{\"abcde\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 2), 1);\n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"abcde\"), 2), 1);\n      \n      //these don't      \n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"a\"), 1), 0);\n      countHits(a, new String[]{\"a\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 1), 0);\n      \n      countHits(a, new String[]{\"abc\"}, new FuzzyQuery(new Term(FIELD, \"a\"), 2), 0);\n      countHits(a, new String[]{\"a\"}, new FuzzyQuery(new Term(FIELD, \"abc\"), 2), 0);\n\n      countHits(a, new String[]{\"abcd\"}, new FuzzyQuery(new Term(FIELD, \"ab\"), 2), 0);\n      countHits(a, new String[]{\"ab\"}, new FuzzyQuery(new Term(FIELD, \"abcd\"), 2), 0);\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7d3dec8619cc5a67c810bd49ad697d0170a32637":["33e6cd929924316f9ab2bf03fe69821632f01108"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["33e6cd929924316f9ab2bf03fe69821632f01108","7d3dec8619cc5a67c810bd49ad697d0170a32637"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["33e6cd929924316f9ab2bf03fe69821632f01108","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"33e6cd929924316f9ab2bf03fe69821632f01108":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7d3dec8619cc5a67c810bd49ad697d0170a32637":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["33e6cd929924316f9ab2bf03fe69821632f01108"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"33e6cd929924316f9ab2bf03fe69821632f01108":["7d3dec8619cc5a67c810bd49ad697d0170a32637","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}