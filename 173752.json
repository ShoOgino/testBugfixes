{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.SortFieldsCompare#testAndSetGroupValues(int,int).mjava","commits":[{"id":"0325de99180d346d61d36938843a5c8451fe26ae","date":1447368726,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.SortFieldsCompare#testAndSetGroupValues(int,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Compares the SortField values of the specified contextDoc with the existing group head \n     * values for the group identified by the specified collapseKey, and overwrites them\n     * (and returns true) if this document should become the new group head in accordance \n     * with the SortFields\n     * (otherwise returns false)\n     */\n    public boolean testAndSetGroupValues(int collapseKey, int contextDoc) throws IOException {\n      assert 0 <= collapseKey : \"negative collapseKey\";\n      assert collapseKey < groupHeadValues.length : \"collapseKey too big -- need to grow array?\";\n      return testAndSetGroupValues(getOrInitGroupHeadValues(collapseKey), contextDoc);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"601402c887ecf6ccb8d98c202cc6c0414b648a7e","date":1586525824,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.SortFieldsCompare#testAndSetGroupValues(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.SortFieldsCompare#testAndSetGroupValues(int,int).mjava","sourceNew":"    /**\n     * Compares the SortField values of the specified contextDoc with the existing group head \n     * values for the group identified by the specified collapseKey, and overwrites them\n     * (and returns true) if this document should become the new group head in accordance \n     * with the SortFields\n     * (otherwise returns false)\n     */\n    public boolean testAndSetGroupValues(int collapseKey, int contextDoc) throws IOException {\n      assert 0 <= collapseKey : \"negative collapseKey\";\n      if (collapseKey >= groupHeadValues.length) {\n        grow(collapseKey + 1);\n      }\n      return testAndSetGroupValues(getOrInitGroupHeadValues(collapseKey), contextDoc);\n    }\n\n","sourceOld":"    /**\n     * Compares the SortField values of the specified contextDoc with the existing group head \n     * values for the group identified by the specified collapseKey, and overwrites them\n     * (and returns true) if this document should become the new group head in accordance \n     * with the SortFields\n     * (otherwise returns false)\n     */\n    public boolean testAndSetGroupValues(int collapseKey, int contextDoc) throws IOException {\n      assert 0 <= collapseKey : \"negative collapseKey\";\n      assert collapseKey < groupHeadValues.length : \"collapseKey too big -- need to grow array?\";\n      return testAndSetGroupValues(getOrInitGroupHeadValues(collapseKey), contextDoc);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"601402c887ecf6ccb8d98c202cc6c0414b648a7e":["0325de99180d346d61d36938843a5c8451fe26ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0325de99180d346d61d36938843a5c8451fe26ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["601402c887ecf6ccb8d98c202cc6c0414b648a7e"]},"commit2Childs":{"601402c887ecf6ccb8d98c202cc6c0414b648a7e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0325de99180d346d61d36938843a5c8451fe26ae"],"0325de99180d346d61d36938843a5c8451fe26ae":["601402c887ecf6ccb8d98c202cc6c0414b648a7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}