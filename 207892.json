{"path":"src/test/org/apache/solr/util/SolrPluginUtilsTest#testParseFieldBoosts().mjava","commits":[{"id":"e4b5867a57b32674ce740e66e6a7da8db3d4dd33","date":1148163441,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/solr/util/SolrPluginUtilsTest#testParseFieldBoosts().mjava","pathOld":"/dev/null","sourceNew":"  public void testParseFieldBoosts() throws Exception {\n\n    Map<String,Float> e1 = new HashMap<String,Float>();\n    e1.put(\"fieldOne\",2.3f);\n    e1.put(\"fieldTwo\",null);\n    e1.put(\"fieldThree\",-0.4f);\n\n    assertEquals(\"basic e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"fieldOne^2.3 fieldTwo fieldThree^-0.4\"));\n    assertEquals(\"spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"  fieldOne^2.3   fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\" \\t fieldOne^2.3 \\n  fieldTwo fieldThree^-0.4   \"));\n\n    Map<String,Float> e2 = new HashMap<String,Float>();\n    assertEquals(\"empty e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"\"));\n    assertEquals(\"spacey e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"   \\t   \"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"269c8e9f1563aaf046389326e061a3a2c6a62a73","date":1173126130,"type":3,"author":"Mike Klaas","isMerge":false,"pathNew":"src/test/org/apache/solr/util/SolrPluginUtilsTest#testParseFieldBoosts().mjava","pathOld":"src/test/org/apache/solr/util/SolrPluginUtilsTest#testParseFieldBoosts().mjava","sourceNew":"  public void testParseFieldBoosts() throws Exception {\n\n    Map<String,Float> e1 = new HashMap<String,Float>();\n    e1.put(\"fieldOne\",2.3f);\n    e1.put(\"fieldTwo\",null);\n    e1.put(\"fieldThree\",-0.4f);\n\n    assertEquals(\"basic e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"fieldOne^2.3 fieldTwo fieldThree^-0.4\"));\n    assertEquals(\"spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"  fieldOne^2.3   fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\" \\t fieldOne^2.3 \\n  fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (new String[]{\" \\t fieldOne^2.3 \\n\",\n                               \"  fieldTwo fieldThree^-0.4   \",\n                               \" \"}));\n\n    Map<String,Float> e2 = new HashMap<String,Float>();\n    assertEquals(\"empty e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"\"));\n    assertEquals(\"spacey e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"   \\t   \"));\n  }\n\n","sourceOld":"  public void testParseFieldBoosts() throws Exception {\n\n    Map<String,Float> e1 = new HashMap<String,Float>();\n    e1.put(\"fieldOne\",2.3f);\n    e1.put(\"fieldTwo\",null);\n    e1.put(\"fieldThree\",-0.4f);\n\n    assertEquals(\"basic e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"fieldOne^2.3 fieldTwo fieldThree^-0.4\"));\n    assertEquals(\"spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"  fieldOne^2.3   fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\" \\t fieldOne^2.3 \\n  fieldTwo fieldThree^-0.4   \"));\n\n    Map<String,Float> e2 = new HashMap<String,Float>();\n    assertEquals(\"empty e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"\"));\n    assertEquals(\"spacey e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"   \\t   \"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/util/SolrPluginUtilsTest#testParseFieldBoosts().mjava","pathOld":"src/test/org/apache/solr/util/SolrPluginUtilsTest#testParseFieldBoosts().mjava","sourceNew":"  public void testParseFieldBoosts() throws Exception {\n\n    Map<String,Float> e1 = new HashMap<String,Float>();\n    e1.put(\"fieldOne\",2.3f);\n    e1.put(\"fieldTwo\",null);\n    e1.put(\"fieldThree\",-0.4f);\n\n    assertEquals(\"basic e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"fieldOne^2.3 fieldTwo fieldThree^-0.4\"));\n    assertEquals(\"spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"  fieldOne^2.3   fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\" \\t fieldOne^2.3 \\n  fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (new String[]{\" \\t fieldOne^2.3 \\n\",\n                               \"  fieldTwo fieldThree^-0.4   \",\n                               \" \"}));\n\n    Map<String,Float> e2 = new HashMap<String,Float>();\n    assertEquals(\"empty e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"\"));\n    assertEquals(\"spacey e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"   \\t   \"));\n  }\n\n","sourceOld":"  public void testParseFieldBoosts() throws Exception {\n\n    Map<String,Float> e1 = new HashMap<String,Float>();\n    e1.put(\"fieldOne\",2.3f);\n    e1.put(\"fieldTwo\",null);\n    e1.put(\"fieldThree\",-0.4f);\n\n    assertEquals(\"basic e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"fieldOne^2.3 fieldTwo fieldThree^-0.4\"));\n    assertEquals(\"spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"  fieldOne^2.3   fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\" \\t fieldOne^2.3 \\n  fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (new String[]{\" \\t fieldOne^2.3 \\n\",\n                               \"  fieldTwo fieldThree^-0.4   \",\n                               \" \"}));\n\n    Map<String,Float> e2 = new HashMap<String,Float>();\n    assertEquals(\"empty e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"\"));\n    assertEquals(\"spacey e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"   \\t   \"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e4b5867a57b32674ce740e66e6a7da8db3d4dd33":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"269c8e9f1563aaf046389326e061a3a2c6a62a73":["e4b5867a57b32674ce740e66e6a7da8db3d4dd33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["269c8e9f1563aaf046389326e061a3a2c6a62a73"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e4b5867a57b32674ce740e66e6a7da8db3d4dd33":["269c8e9f1563aaf046389326e061a3a2c6a62a73"],"269c8e9f1563aaf046389326e061a3a2c6a62a73":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e4b5867a57b32674ce740e66e6a7da8db3d4dd33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}