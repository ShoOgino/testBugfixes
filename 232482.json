{"path":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testIntOverflow().mjava","commits":[{"id":"039a98d0ba2c3095541adb3e3ecbdee7812fc4b8","date":1372293867,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testIntOverflow().mjava","pathOld":"/dev/null","sourceNew":"  public void testIntOverflow() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema1\"));\n    assertNull(schema.getFieldOrNull(\"not_in_schema2\"));\n    long longValue1 = (long)Integer.MAX_VALUE + 100L;\n    long longValue2 = (long)Integer.MIN_VALUE - 100L;\n    String longString1 = Long.toString(longValue1);\n    String longString2 = Long.toString(longValue2);\n    SolrInputDocument d = processAdd(\"parse-int-no-run-processor\",\n        doc(f(\"id\", \"282\"), f(\"not_in_schema1\", longString1), f(\"not_in_schema2\", longString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"not_in_schema1\") instanceof String);\n    assertTrue(d.getFieldValue(\"not_in_schema2\") instanceof String);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testIntOverflow().mjava","pathOld":"/dev/null","sourceNew":"  public void testIntOverflow() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema1\"));\n    assertNull(schema.getFieldOrNull(\"not_in_schema2\"));\n    long longValue1 = (long)Integer.MAX_VALUE + 100L;\n    long longValue2 = (long)Integer.MIN_VALUE - 100L;\n    String longString1 = Long.toString(longValue1);\n    String longString2 = Long.toString(longValue2);\n    SolrInputDocument d = processAdd(\"parse-int-no-run-processor\",\n        doc(f(\"id\", \"282\"), f(\"not_in_schema1\", longString1), f(\"not_in_schema2\", longString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"not_in_schema1\") instanceof String);\n    assertTrue(d.getFieldValue(\"not_in_schema2\") instanceof String);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"695a2ea9bbdf1f04153f1f6f0fa8595f3694b58f","date":1561505163,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testIntOverflow().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testIntOverflow().mjava","sourceNew":"  public void testIntOverflow() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema1\"));\n    assertNull(schema.getFieldOrNull(\"not_in_schema2\"));\n    long longValue1 = (long)Integer.MAX_VALUE + 100L;\n    long longValue2 = (long)Integer.MIN_VALUE - 100L;\n    String longString1 = Long.toString(longValue1);\n    String longString2 = Long.toString(longValue2);\n    SolrInputDocument d = processAdd(\"parse-int-no-run-processor\",\n        doc(f(\"id\", \"282\"), f(\"not_in_schema1\", longString1), f(\"not_in_schema2\", longString2)));\n    assertNotNull(d);\n    assertThat(d.getFieldValue(\"not_in_schema1\"), IS_STRING);\n    assertThat(d.getFieldValue(\"not_in_schema2\"), IS_STRING);\n  }\n\n","sourceOld":"  public void testIntOverflow() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema1\"));\n    assertNull(schema.getFieldOrNull(\"not_in_schema2\"));\n    long longValue1 = (long)Integer.MAX_VALUE + 100L;\n    long longValue2 = (long)Integer.MIN_VALUE - 100L;\n    String longString1 = Long.toString(longValue1);\n    String longString2 = Long.toString(longValue2);\n    SolrInputDocument d = processAdd(\"parse-int-no-run-processor\",\n        doc(f(\"id\", \"282\"), f(\"not_in_schema1\", longString1), f(\"not_in_schema2\", longString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"not_in_schema1\") instanceof String);\n    assertTrue(d.getFieldValue(\"not_in_schema2\") instanceof String);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","039a98d0ba2c3095541adb3e3ecbdee7812fc4b8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"039a98d0ba2c3095541adb3e3ecbdee7812fc4b8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"695a2ea9bbdf1f04153f1f6f0fa8595f3694b58f":["039a98d0ba2c3095541adb3e3ecbdee7812fc4b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["695a2ea9bbdf1f04153f1f6f0fa8595f3694b58f"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","039a98d0ba2c3095541adb3e3ecbdee7812fc4b8"],"039a98d0ba2c3095541adb3e3ecbdee7812fc4b8":["37a0f60745e53927c4c876cfe5b5a58170f0646c","695a2ea9bbdf1f04153f1f6f0fa8595f3694b58f"],"695a2ea9bbdf1f04153f1f6f0fa8595f3694b58f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}