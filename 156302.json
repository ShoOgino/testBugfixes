{"path":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeDocValuesProducer#BKDTreeDocValuesProducer(DocValuesProducer,SegmentReadState).mjava","commits":[{"id":"4e50a8c6cf9370a926c7efe6aa39429e6a18cf96","date":1433340999,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeDocValuesProducer#BKDTreeDocValuesProducer(DocValuesProducer,SegmentReadState).mjava","pathOld":"/dev/null","sourceNew":"  public BKDTreeDocValuesProducer(DocValuesProducer delegate, SegmentReadState state) throws IOException {\n    String metaFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, BKDTreeDocValuesFormat.META_EXTENSION);\n    ChecksumIndexInput metaIn = state.directory.openChecksumInput(metaFileName, state.context);\n    CodecUtil.checkIndexHeader(metaIn, BKDTreeDocValuesFormat.META_CODEC_NAME, BKDTreeDocValuesFormat.META_VERSION_START, BKDTreeDocValuesFormat.META_VERSION_CURRENT,\n                               state.segmentInfo.getId(), state.segmentSuffix);\n    int fieldCount = metaIn.readVInt();\n    for(int i=0;i<fieldCount;i++) {\n      int fieldNumber = metaIn.readVInt();\n      long indexFP = metaIn.readVLong();\n      fieldToIndexFPs.put(fieldNumber, indexFP);\n    }\n    CodecUtil.checkFooter(metaIn);\n    metaIn.close();\n\n    String datFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, BKDTreeDocValuesFormat.DATA_EXTENSION);\n    datIn = state.directory.openInput(datFileName, state.context);\n    CodecUtil.checkIndexHeader(datIn, BKDTreeDocValuesFormat.DATA_CODEC_NAME, BKDTreeDocValuesFormat.DATA_VERSION_START, BKDTreeDocValuesFormat.DATA_VERSION_CURRENT,\n                               state.segmentInfo.getId(), state.segmentSuffix);\n    ramBytesUsed = new AtomicLong(RamUsageEstimator.shallowSizeOfInstance(getClass()));\n    maxDoc = state.segmentInfo.maxDoc();\n    this.delegate = delegate;\n    merging = false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1904709ea0185dc04e3d77ea01c79e909caf2796","date":1447006699,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeDocValuesProducer#BKDTreeDocValuesProducer(DocValuesProducer,SegmentReadState).mjava","sourceNew":null,"sourceOld":"  public BKDTreeDocValuesProducer(DocValuesProducer delegate, SegmentReadState state) throws IOException {\n    String metaFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, BKDTreeDocValuesFormat.META_EXTENSION);\n    ChecksumIndexInput metaIn = state.directory.openChecksumInput(metaFileName, state.context);\n    CodecUtil.checkIndexHeader(metaIn, BKDTreeDocValuesFormat.META_CODEC_NAME, BKDTreeDocValuesFormat.META_VERSION_START, BKDTreeDocValuesFormat.META_VERSION_CURRENT,\n                               state.segmentInfo.getId(), state.segmentSuffix);\n    int fieldCount = metaIn.readVInt();\n    for(int i=0;i<fieldCount;i++) {\n      int fieldNumber = metaIn.readVInt();\n      long indexFP = metaIn.readVLong();\n      fieldToIndexFPs.put(fieldNumber, indexFP);\n    }\n    CodecUtil.checkFooter(metaIn);\n    metaIn.close();\n\n    String datFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, BKDTreeDocValuesFormat.DATA_EXTENSION);\n    datIn = state.directory.openInput(datFileName, state.context);\n    CodecUtil.checkIndexHeader(datIn, BKDTreeDocValuesFormat.DATA_CODEC_NAME, BKDTreeDocValuesFormat.DATA_VERSION_START, BKDTreeDocValuesFormat.DATA_VERSION_CURRENT,\n                               state.segmentInfo.getId(), state.segmentSuffix);\n    ramBytesUsed = new AtomicLong(RamUsageEstimator.shallowSizeOfInstance(getClass()));\n    maxDoc = state.segmentInfo.maxDoc();\n    this.delegate = delegate;\n    merging = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1904709ea0185dc04e3d77ea01c79e909caf2796":["4e50a8c6cf9370a926c7efe6aa39429e6a18cf96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"4e50a8c6cf9370a926c7efe6aa39429e6a18cf96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e50a8c6cf9370a926c7efe6aa39429e6a18cf96"],"1904709ea0185dc04e3d77ea01c79e909caf2796":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e50a8c6cf9370a926c7efe6aa39429e6a18cf96":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}