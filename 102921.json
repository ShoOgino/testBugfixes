{"path":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#getFieldNames(IndexReader.FieldOption).mjava","commits":[{"id":"6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4","date":1323543613,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#getFieldNames(IndexReader.FieldOption,IndexReader[]).mjava","sourceNew":"  @Override\n  public Collection<String> getFieldNames (IndexReader.FieldOption fieldNames) {\n    ensureOpen();\n    // maintain a unique set of field names\n    Set<String> fieldSet = new HashSet<String>();\n    for (IndexReader reader : subReaders) {\n      Collection<String> names = reader.getFieldNames(fieldNames);\n      fieldSet.addAll(names);\n    }\n    return fieldSet;\n  }  \n\n","sourceOld":"  static Collection<String> getFieldNames (IndexReader.FieldOption fieldNames, IndexReader[] subReaders) {\n    // maintain a unique set of field names\n    Set<String> fieldSet = new HashSet<String>();\n    for (IndexReader reader : subReaders) {\n      Collection<String> names = reader.getFieldNames(fieldNames);\n      fieldSet.addAll(names);\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16ff2a12177d39097e8fd5793e7f7b49c435a953","date":1323614672,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  @Override\n  public Collection<String> getFieldNames (IndexReader.FieldOption fieldNames) {\n    ensureOpen();\n    // maintain a unique set of field names\n    final Set<String> fieldSet = new HashSet<String>();\n    for (IndexReader reader : subReaders) {\n      fieldSet.addAll(reader.getFieldNames(fieldNames));\n    }\n    return fieldSet;\n  }  \n\n","sourceOld":"  @Override\n  public Collection<String> getFieldNames (IndexReader.FieldOption fieldNames) {\n    ensureOpen();\n    // maintain a unique set of field names\n    Set<String> fieldSet = new HashSet<String>();\n    for (IndexReader reader : subReaders) {\n      Collection<String> names = reader.getFieldNames(fieldNames);\n      fieldSet.addAll(names);\n    }\n    return fieldSet;\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  @Override\n  public Collection<String> getFieldNames (IndexReader.FieldOption fieldNames) {\n    ensureOpen();\n    // maintain a unique set of field names\n    final Set<String> fieldSet = new HashSet<String>();\n    for (IndexReader reader : subReaders) {\n      fieldSet.addAll(reader.getFieldNames(fieldNames));\n    }\n    return fieldSet;\n  }  \n\n","sourceOld":"  @Override\n  public Collection<String> getFieldNames (IndexReader.FieldOption fieldNames) {\n    ensureOpen();\n    return DirectoryReader.getFieldNames(fieldNames, this.subReaders);\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06","date":1326148180,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Collection<String> getFieldNames (IndexReader.FieldOption fieldNames) {\n    ensureOpen();\n    // maintain a unique set of field names\n    final Set<String> fieldSet = new HashSet<String>();\n    for (IndexReader reader : subReaders) {\n      fieldSet.addAll(reader.getFieldNames(fieldNames));\n    }\n    return fieldSet;\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","16ff2a12177d39097e8fd5793e7f7b49c435a953"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06":["16ff2a12177d39097e8fd5793e7f7b49c435a953"],"16ff2a12177d39097e8fd5793e7f7b49c435a953":["6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3321cfbf7f8aba27e37e7a4d6901531a97ac2b06"]},"commit2Childs":{"6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4":["16ff2a12177d39097e8fd5793e7f7b49c435a953"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"16ff2a12177d39097e8fd5793e7f7b49c435a953":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","3321cfbf7f8aba27e37e7a4d6901531a97ac2b06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}