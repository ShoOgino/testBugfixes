{"path":"src/java/org/apache/lucene/index/IndexWriter#setUseCompoundFile(boolean).mjava","commits":[{"id":"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1","date":1064527311,"type":0,"author":"Dmitry Serebrennikov","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setUseCompoundFile(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Setting to turn on usage of a compound file. When on, multiple files\n   *  for each segment are merged into a single file once the segment creation\n   *  is finished. This is done regardless of what directory is in use.\n   */\n  public void setUseCompoundFile(boolean value) {\n    useCompoundFile = value;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"328c1568e471f0c6eaa49ec00334ca59e573710f","date":1173897963,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setUseCompoundFile(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setUseCompoundFile(boolean).mjava","sourceNew":"  /** Setting to turn on usage of a compound file. When on, multiple files\n   *  for each segment are merged into a single file once the segment creation\n   *  is finished. This is done regardless of what directory is in use.\n   */\n  public void setUseCompoundFile(boolean value) {\n    ensureOpen();\n    useCompoundFile = value;\n  }\n\n","sourceOld":"  /** Setting to turn on usage of a compound file. When on, multiple files\n   *  for each segment are merged into a single file once the segment creation\n   *  is finished. This is done regardless of what directory is in use.\n   */\n  public void setUseCompoundFile(boolean value) {\n    useCompoundFile = value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1405362241b561f5590ff4a87d5d6e173bcd9cf","date":1190107634,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setUseCompoundFile(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setUseCompoundFile(boolean).mjava","sourceNew":"  /** <p>Setting to turn on usage of a compound file. When on,\n   *  multiple files for each segment are merged into a\n   *  single file when a new segment is flushed.</p>\n   *\n   *  <p>Note that this method is a convenience method: it\n   *  just calls mergePolicy.setUseCompoundFile as long as\n   *  mergePolicy is an instance of {@link LogMergePolicy}.\n   *  Otherwise an IllegalArgumentException is thrown.</p>\n   */\n  public void setUseCompoundFile(boolean value) {\n    getLogMergePolicy().setUseCompoundFile(value);\n  }\n\n","sourceOld":"  /** Setting to turn on usage of a compound file. When on, multiple files\n   *  for each segment are merged into a single file once the segment creation\n   *  is finished. This is done regardless of what directory is in use.\n   */\n  public void setUseCompoundFile(boolean value) {\n    ensureOpen();\n    useCompoundFile = value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"49a9886490b31fc01fbb0c28d498c1c378c239fa","date":1191579486,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setUseCompoundFile(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setUseCompoundFile(boolean).mjava","sourceNew":"  /** <p>Setting to turn on usage of a compound file. When on,\n   *  multiple files for each segment are merged into a\n   *  single file when a new segment is flushed.</p>\n   *\n   *  <p>Note that this method is a convenience method: it\n   *  just calls mergePolicy.setUseCompoundFile as long as\n   *  mergePolicy is an instance of {@link LogMergePolicy}.\n   *  Otherwise an IllegalArgumentException is thrown.</p>\n   */\n  public void setUseCompoundFile(boolean value) {\n    getLogMergePolicy().setUseCompoundFile(value);\n    getLogMergePolicy().setUseCompoundDocStore(value);\n  }\n\n","sourceOld":"  /** <p>Setting to turn on usage of a compound file. When on,\n   *  multiple files for each segment are merged into a\n   *  single file when a new segment is flushed.</p>\n   *\n   *  <p>Note that this method is a convenience method: it\n   *  just calls mergePolicy.setUseCompoundFile as long as\n   *  mergePolicy is an instance of {@link LogMergePolicy}.\n   *  Otherwise an IllegalArgumentException is thrown.</p>\n   */\n  public void setUseCompoundFile(boolean value) {\n    getLogMergePolicy().setUseCompoundFile(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setUseCompoundFile(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setUseCompoundFile(boolean).mjava","sourceNew":"  /**\n   * <p>\n   * Setting to turn on usage of a compound file. When on, multiple files for\n   * each segment are merged into a single file when a new segment is flushed.\n   * </p>\n   * \n   * <p>\n   * Note that this method is a convenience method: it just calls\n   * mergePolicy.setUseCompoundFile as long as mergePolicy is an instance of\n   * {@link LogMergePolicy}. Otherwise an IllegalArgumentException is thrown.\n   * </p>\n   * \n   * @deprecated use {@link LogMergePolicy#setUseCompoundDocStore(boolean)} and\n   *             {@link LogMergePolicy#setUseCompoundFile(boolean)} directly.\n   *             Note that this method set the given value on both, therefore\n   *             you should consider doing the same.\n   */\n  public void setUseCompoundFile(boolean value) {\n    getLogMergePolicy().setUseCompoundFile(value);\n    getLogMergePolicy().setUseCompoundDocStore(value);\n  }\n\n","sourceOld":"  /** <p>Setting to turn on usage of a compound file. When on,\n   *  multiple files for each segment are merged into a\n   *  single file when a new segment is flushed.</p>\n   *\n   *  <p>Note that this method is a convenience method: it\n   *  just calls mergePolicy.setUseCompoundFile as long as\n   *  mergePolicy is an instance of {@link LogMergePolicy}.\n   *  Otherwise an IllegalArgumentException is thrown.</p>\n   */\n  public void setUseCompoundFile(boolean value) {\n    getLogMergePolicy().setUseCompoundFile(value);\n    getLogMergePolicy().setUseCompoundDocStore(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setUseCompoundFile(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setUseCompoundFile(boolean).mjava","sourceNew":"  /** <p>Setting to turn on usage of a compound file. When on,\n   *  multiple files for each segment are merged into a\n   *  single file when a new segment is flushed.</p>\n   *\n   *  <p>Note that this method is a convenience method: it\n   *  just calls mergePolicy.setUseCompoundFile as long as\n   *  mergePolicy is an instance of {@link LogMergePolicy}.\n   *  Otherwise an IllegalArgumentException is thrown.</p>\n   */\n  public void setUseCompoundFile(boolean value) {\n    getLogMergePolicy().setUseCompoundFile(value);\n    getLogMergePolicy().setUseCompoundDocStore(value);\n  }\n\n","sourceOld":"  /**\n   * <p>\n   * Setting to turn on usage of a compound file. When on, multiple files for\n   * each segment are merged into a single file when a new segment is flushed.\n   * </p>\n   * \n   * <p>\n   * Note that this method is a convenience method: it just calls\n   * mergePolicy.setUseCompoundFile as long as mergePolicy is an instance of\n   * {@link LogMergePolicy}. Otherwise an IllegalArgumentException is thrown.\n   * </p>\n   * \n   * @deprecated use {@link LogMergePolicy#setUseCompoundDocStore(boolean)} and\n   *             {@link LogMergePolicy#setUseCompoundFile(boolean)} directly.\n   *             Note that this method set the given value on both, therefore\n   *             you should consider doing the same.\n   */\n  public void setUseCompoundFile(boolean value) {\n    getLogMergePolicy().setUseCompoundFile(value);\n    getLogMergePolicy().setUseCompoundDocStore(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setUseCompoundFile(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setUseCompoundFile(boolean).mjava","sourceNew":"  /**\n   * <p>\n   * Setting to turn on usage of a compound file. When on, multiple files for\n   * each segment are merged into a single file when a new segment is flushed.\n   * </p>\n   * \n   * <p>\n   * Note that this method is a convenience method: it just calls\n   * mergePolicy.setUseCompoundFile as long as mergePolicy is an instance of\n   * {@link LogMergePolicy}. Otherwise an IllegalArgumentException is thrown.\n   * </p>\n   * \n   * @deprecated use {@link LogMergePolicy#setUseCompoundDocStore(boolean)} and\n   *             {@link LogMergePolicy#setUseCompoundFile(boolean)} directly.\n   *             Note that this method set the given value on both, therefore\n   *             you should consider doing the same.\n   */\n  public void setUseCompoundFile(boolean value) {\n    getLogMergePolicy().setUseCompoundFile(value);\n    getLogMergePolicy().setUseCompoundDocStore(value);\n  }\n\n","sourceOld":"  /** <p>Setting to turn on usage of a compound file. When on,\n   *  multiple files for each segment are merged into a\n   *  single file when a new segment is flushed.</p>\n   *\n   *  <p>Note that this method is a convenience method: it\n   *  just calls mergePolicy.setUseCompoundFile as long as\n   *  mergePolicy is an instance of {@link LogMergePolicy}.\n   *  Otherwise an IllegalArgumentException is thrown.</p>\n   */\n  public void setUseCompoundFile(boolean value) {\n    getLogMergePolicy().setUseCompoundFile(value);\n    getLogMergePolicy().setUseCompoundDocStore(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#setUseCompoundFile(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setUseCompoundFile(boolean).mjava","sourceNew":"  /**\n   * <p>\n   * Setting to turn on usage of a compound file. When on, multiple files for\n   * each segment are merged into a single file when a new segment is flushed.\n   * </p>\n   * \n   * <p>\n   * Note that this method is a convenience method: it just calls\n   * mergePolicy.setUseCompoundFile as long as mergePolicy is an instance of\n   * {@link LogMergePolicy}. Otherwise an IllegalArgumentException is thrown.\n   * </p>\n   * \n   * @deprecated use {@link LogMergePolicy#setUseCompoundDocStore(boolean)} and\n   *             {@link LogMergePolicy#setUseCompoundFile(boolean)} directly.\n   *             Note that this method set the given value on both, therefore\n   *             you should consider doing the same.\n   */\n  public void setUseCompoundFile(boolean value) {\n    getLogMergePolicy().setUseCompoundFile(value);\n    getLogMergePolicy().setUseCompoundDocStore(value);\n  }\n\n","sourceOld":"  /**\n   * <p>\n   * Setting to turn on usage of a compound file. When on, multiple files for\n   * each segment are merged into a single file when a new segment is flushed.\n   * </p>\n   * \n   * <p>\n   * Note that this method is a convenience method: it just calls\n   * mergePolicy.setUseCompoundFile as long as mergePolicy is an instance of\n   * {@link LogMergePolicy}. Otherwise an IllegalArgumentException is thrown.\n   * </p>\n   * \n   * @deprecated use {@link LogMergePolicy#setUseCompoundDocStore(boolean)} and\n   *             {@link LogMergePolicy#setUseCompoundFile(boolean)} directly.\n   *             Note that this method set the given value on both, therefore\n   *             you should consider doing the same.\n   */\n  public void setUseCompoundFile(boolean value) {\n    getLogMergePolicy().setUseCompoundFile(value);\n    getLogMergePolicy().setUseCompoundDocStore(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"328c1568e471f0c6eaa49ec00334ca59e573710f":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["49a9886490b31fc01fbb0c28d498c1c378c239fa"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"49a9886490b31fc01fbb0c28d498c1c378c239fa":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["49a9886490b31fc01fbb0c28d498c1c378c239fa"],"328c1568e471f0c6eaa49ec00334ca59e573710f":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"49a9886490b31fc01fbb0c28d498c1c378c239fa":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}