{"path":"contrib/regex/src/java/org/apache/lucene/search/regex/JakartaRegexpCapabilities#equals(Object).mjava","commits":[{"id":"395ec3f33d569731e783c3268e7ae1de5aae93a2","date":1135779934,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/regex/src/java/org/apache/lucene/search/regex/JakartaRegexpCapabilities#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final JakartaRegexpCapabilities that = (JakartaRegexpCapabilities) o;\n\n    if (regexp != null ? !regexp.equals(that.regexp) : that.regexp != null) return false;\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/regex/src/java/org/apache/lucene/search/regex/JakartaRegexpCapabilities#equals(Object).mjava","pathOld":"contrib/regex/src/java/org/apache/lucene/search/regex/JakartaRegexpCapabilities#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final JakartaRegexpCapabilities that = (JakartaRegexpCapabilities) o;\n\n    if (regexp != null ? !regexp.equals(that.regexp) : that.regexp != null) return false;\n\n    return true;\n  }\n\n","sourceOld":"  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final JakartaRegexpCapabilities that = (JakartaRegexpCapabilities) o;\n\n    if (regexp != null ? !regexp.equals(that.regexp) : that.regexp != null) return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/regex/src/java/org/apache/lucene/search/regex/JakartaRegexpCapabilities#equals(Object).mjava","pathOld":"contrib/regex/src/java/org/apache/lucene/search/regex/JakartaRegexpCapabilities#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final JakartaRegexpCapabilities that = (JakartaRegexpCapabilities) o;\n\n    if (regexp != null ? !regexp.equals(that.regexp) : that.regexp != null) return false;\n\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final JakartaRegexpCapabilities that = (JakartaRegexpCapabilities) o;\n\n    if (regexp != null ? !regexp.equals(that.regexp) : that.regexp != null) return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["395ec3f33d569731e783c3268e7ae1de5aae93a2"],"395ec3f33d569731e783c3268e7ae1de5aae93a2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["395ec3f33d569731e783c3268e7ae1de5aae93a2"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"395ec3f33d569731e783c3268e7ae1de5aae93a2":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}