{"path":"solr/contrib/ltr/src/java/org/apache/solr/ltr/FeatureLogger.CSVFeatureLogger#makeFeatureVector(LTRScoringQuery.FeatureInfo[]).mjava","commits":[{"id":"58c36d634c9789cb739fbd175c1a8d50b3303f6b","date":1478022614,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/FeatureLogger.CSVFeatureLogger#makeFeatureVector(LTRScoringQuery.FeatureInfo[]).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public String makeFeatureVector(LTRScoringQuery.FeatureInfo[] featuresInfo) {\n      boolean isDense = featureFormat.equals(FeatureFormat.DENSE);\n      for (LTRScoringQuery.FeatureInfo featInfo:featuresInfo) {\n        if (featInfo.isUsed() || isDense){\n          sb.append(featInfo.getName())\n          .append(keyValueSep)\n          .append(featInfo.getValue())\n          .append(featureSep);\n        }\n      }\n\n      final String features = (sb.length() > 0 ? sb.substring(0,\n          sb.length() - 1) : \"\");\n      sb.setLength(0);\n\n      return features;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9720b151fde2073f4e401450f4574e5f31c2d0ff","date":1478184029,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/FeatureLogger.CSVFeatureLogger#makeFeatureVector(LTRScoringQuery.FeatureInfo[]).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public String makeFeatureVector(LTRScoringQuery.FeatureInfo[] featuresInfo) {\n      boolean isDense = featureFormat.equals(FeatureFormat.DENSE);\n      for (LTRScoringQuery.FeatureInfo featInfo:featuresInfo) {\n        if (featInfo.isUsed() || isDense){\n          sb.append(featInfo.getName())\n          .append(keyValueSep)\n          .append(featInfo.getValue())\n          .append(featureSep);\n        }\n      }\n\n      final String features = (sb.length() > 0 ? sb.substring(0,\n          sb.length() - 1) : \"\");\n      sb.setLength(0);\n\n      return features;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07ef8d46ad3265812d247126beb45b283763afee","date":1481143602,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/FeatureLogger.CSVFeatureLogger#makeFeatureVector(LTRScoringQuery.FeatureInfo[]).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/FeatureLogger.CSVFeatureLogger#makeFeatureVector(LTRScoringQuery.FeatureInfo[]).mjava","sourceNew":"    @Override\n    public String makeFeatureVector(LTRScoringQuery.FeatureInfo[] featuresInfo) {\n      // Allocate the buffer to a size based on the number of features instead of the\n      // default 16.  You need space for the name, value, and two separators per feature,\n      // but not all the features are expected to fire, so this is just a naive estimate.\n      StringBuilder sb = new StringBuilder(featuresInfo.length * 3);\n      boolean isDense = featureFormat.equals(FeatureFormat.DENSE);\n      for (LTRScoringQuery.FeatureInfo featInfo:featuresInfo) {\n        if (featInfo.isUsed() || isDense){\n          sb.append(featInfo.getName())\n          .append(keyValueSep)\n          .append(featInfo.getValue())\n          .append(featureSep);\n        }\n      }\n\n      final String features = (sb.length() > 0 ?\n          sb.substring(0, sb.length() - 1) : \"\");\n\n      return features;\n    }\n\n","sourceOld":"    @Override\n    public String makeFeatureVector(LTRScoringQuery.FeatureInfo[] featuresInfo) {\n      boolean isDense = featureFormat.equals(FeatureFormat.DENSE);\n      for (LTRScoringQuery.FeatureInfo featInfo:featuresInfo) {\n        if (featInfo.isUsed() || isDense){\n          sb.append(featInfo.getName())\n          .append(keyValueSep)\n          .append(featInfo.getValue())\n          .append(featureSep);\n        }\n      }\n\n      final String features = (sb.length() > 0 ? sb.substring(0,\n          sb.length() - 1) : \"\");\n      sb.setLength(0);\n\n      return features;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/FeatureLogger.CSVFeatureLogger#makeFeatureVector(LTRScoringQuery.FeatureInfo[]).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/FeatureLogger.CSVFeatureLogger#makeFeatureVector(LTRScoringQuery.FeatureInfo[]).mjava","sourceNew":"    @Override\n    public String makeFeatureVector(LTRScoringQuery.FeatureInfo[] featuresInfo) {\n      // Allocate the buffer to a size based on the number of features instead of the\n      // default 16.  You need space for the name, value, and two separators per feature,\n      // but not all the features are expected to fire, so this is just a naive estimate.\n      StringBuilder sb = new StringBuilder(featuresInfo.length * 3);\n      boolean isDense = featureFormat.equals(FeatureFormat.DENSE);\n      for (LTRScoringQuery.FeatureInfo featInfo:featuresInfo) {\n        if (featInfo.isUsed() || isDense){\n          sb.append(featInfo.getName())\n          .append(keyValueSep)\n          .append(featInfo.getValue())\n          .append(featureSep);\n        }\n      }\n\n      final String features = (sb.length() > 0 ?\n          sb.substring(0, sb.length() - 1) : \"\");\n\n      return features;\n    }\n\n","sourceOld":"    @Override\n    public String makeFeatureVector(LTRScoringQuery.FeatureInfo[] featuresInfo) {\n      boolean isDense = featureFormat.equals(FeatureFormat.DENSE);\n      for (LTRScoringQuery.FeatureInfo featInfo:featuresInfo) {\n        if (featInfo.isUsed() || isDense){\n          sb.append(featInfo.getName())\n          .append(keyValueSep)\n          .append(featInfo.getValue())\n          .append(featureSep);\n        }\n      }\n\n      final String features = (sb.length() > 0 ? sb.substring(0,\n          sb.length() - 1) : \"\");\n      sb.setLength(0);\n\n      return features;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fa1f8f009c5147b03311c7e6e6469fa7b677186","date":1482164570,"type":4,"author":"Christine Poerschke","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/FeatureLogger.CSVFeatureLogger#makeFeatureVector(LTRScoringQuery.FeatureInfo[]).mjava","sourceNew":null,"sourceOld":"    @Override\n    public String makeFeatureVector(LTRScoringQuery.FeatureInfo[] featuresInfo) {\n      // Allocate the buffer to a size based on the number of features instead of the\n      // default 16.  You need space for the name, value, and two separators per feature,\n      // but not all the features are expected to fire, so this is just a naive estimate.\n      StringBuilder sb = new StringBuilder(featuresInfo.length * 3);\n      boolean isDense = featureFormat.equals(FeatureFormat.DENSE);\n      for (LTRScoringQuery.FeatureInfo featInfo:featuresInfo) {\n        if (featInfo.isUsed() || isDense){\n          sb.append(featInfo.getName())\n          .append(keyValueSep)\n          .append(featInfo.getValue())\n          .append(featureSep);\n        }\n      }\n\n      final String features = (sb.length() > 0 ?\n          sb.substring(0, sb.length() - 1) : \"\");\n\n      return features;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/FeatureLogger.CSVFeatureLogger#makeFeatureVector(LTRScoringQuery.FeatureInfo[]).mjava","sourceNew":null,"sourceOld":"    @Override\n    public String makeFeatureVector(LTRScoringQuery.FeatureInfo[] featuresInfo) {\n      // Allocate the buffer to a size based on the number of features instead of the\n      // default 16.  You need space for the name, value, and two separators per feature,\n      // but not all the features are expected to fire, so this is just a naive estimate.\n      StringBuilder sb = new StringBuilder(featuresInfo.length * 3);\n      boolean isDense = featureFormat.equals(FeatureFormat.DENSE);\n      for (LTRScoringQuery.FeatureInfo featInfo:featuresInfo) {\n        if (featInfo.isUsed() || isDense){\n          sb.append(featInfo.getName())\n          .append(keyValueSep)\n          .append(featInfo.getValue())\n          .append(featureSep);\n        }\n      }\n\n      final String features = (sb.length() > 0 ?\n          sb.substring(0, sb.length() - 1) : \"\");\n\n      return features;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8fa1f8f009c5147b03311c7e6e6469fa7b677186":["07ef8d46ad3265812d247126beb45b283763afee"],"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["9856095f7afb5a607bf5e65077615ed91273508c","8fa1f8f009c5147b03311c7e6e6469fa7b677186"],"07ef8d46ad3265812d247126beb45b283763afee":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9856095f7afb5a607bf5e65077615ed91273508c":["9720b151fde2073f4e401450f4574e5f31c2d0ff","07ef8d46ad3265812d247126beb45b283763afee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8fa1f8f009c5147b03311c7e6e6469fa7b677186"]},"commit2Childs":{"8fa1f8f009c5147b03311c7e6e6469fa7b677186":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["07ef8d46ad3265812d247126beb45b283763afee","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"07ef8d46ad3265812d247126beb45b283763afee":["8fa1f8f009c5147b03311c7e6e6469fa7b677186","9856095f7afb5a607bf5e65077615ed91273508c"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["9856095f7afb5a607bf5e65077615ed91273508c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"9856095f7afb5a607bf5e65077615ed91273508c":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}