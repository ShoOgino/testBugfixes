{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader.TVFields#iterator().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader.TVFields#iterator().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader.TVFields#iterator().mjava","sourceNew":"    @Override\n    public FieldsEnum iterator() throws IOException {\n\n      return new FieldsEnum() {\n        private int fieldUpto;\n\n        @Override\n        public String next() throws IOException {\n          if (fieldNumbers != null && fieldUpto < fieldNumbers.length) {\n            return fieldInfos.fieldName(fieldNumbers[fieldUpto++]);\n          } else {\n            return null;\n          }\n        }\n\n        @Override\n        public Terms terms() throws IOException {\n          return TVFields.this.terms(fieldInfos.fieldName(fieldNumbers[fieldUpto-1]));\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public FieldsEnum iterator() throws IOException {\n\n      return new FieldsEnum() {\n        private int fieldUpto;\n\n        @Override\n        public String next() throws IOException {\n          if (fieldNumbers != null && fieldUpto < fieldNumbers.length) {\n            return fieldInfos.fieldName(fieldNumbers[fieldUpto++]);\n          } else {\n            return null;\n          }\n        }\n\n        @Override\n        public Terms terms() throws IOException {\n          return TVFields.this.terms(fieldInfos.fieldName(fieldNumbers[fieldUpto-1]));\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c22d44fa0ab988ba3253471cce23610e45a91052","date":1337131019,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader.TVFields#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader.TVFields#iterator().mjava","sourceNew":"    @Override\n    public FieldsEnum iterator() throws IOException {\n\n      return new FieldsEnum() {\n        private int fieldUpto;\n\n        @Override\n        public String next() throws IOException {\n          if (fieldNumbers != null && fieldUpto < fieldNumbers.length) {\n            return fieldInfos.fieldInfo(fieldNumbers[fieldUpto++]).name;\n          } else {\n            return null;\n          }\n        }\n\n        @Override\n        public Terms terms() throws IOException {\n          return TVFields.this.terms(fieldInfos.fieldInfo(fieldNumbers[fieldUpto-1]).name);\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public FieldsEnum iterator() throws IOException {\n\n      return new FieldsEnum() {\n        private int fieldUpto;\n\n        @Override\n        public String next() throws IOException {\n          if (fieldNumbers != null && fieldUpto < fieldNumbers.length) {\n            return fieldInfos.fieldName(fieldNumbers[fieldUpto++]);\n          } else {\n            return null;\n          }\n        }\n\n        @Override\n        public Terms terms() throws IOException {\n          return TVFields.this.terms(fieldInfos.fieldName(fieldNumbers[fieldUpto-1]));\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader.TVFields#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader.TVFields#iterator().mjava","sourceNew":"    @Override\n    public FieldsEnum iterator() throws IOException {\n\n      return new FieldsEnum() {\n        private int fieldUpto;\n\n        @Override\n        public String next() throws IOException {\n          if (fieldNumbers != null && fieldUpto < fieldNumbers.length) {\n            return fieldInfos.fieldInfo(fieldNumbers[fieldUpto++]).name;\n          } else {\n            return null;\n          }\n        }\n\n        @Override\n        public Terms terms() throws IOException {\n          return TVFields.this.terms(fieldInfos.fieldInfo(fieldNumbers[fieldUpto-1]).name);\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public FieldsEnum iterator() throws IOException {\n\n      return new FieldsEnum() {\n        private int fieldUpto;\n\n        @Override\n        public String next() throws IOException {\n          if (fieldNumbers != null && fieldUpto < fieldNumbers.length) {\n            return fieldInfos.fieldName(fieldNumbers[fieldUpto++]);\n          } else {\n            return null;\n          }\n        }\n\n        @Override\n        public Terms terms() throws IOException {\n          return TVFields.this.terms(fieldInfos.fieldName(fieldNumbers[fieldUpto-1]));\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57ae3024996ccdb3c36c42cb890e1efb37df4ce8","date":1338343651,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader.TVFields#iterator().mjava","sourceNew":null,"sourceOld":"    @Override\n    public FieldsEnum iterator() throws IOException {\n\n      return new FieldsEnum() {\n        private int fieldUpto;\n\n        @Override\n        public String next() throws IOException {\n          if (fieldNumbers != null && fieldUpto < fieldNumbers.length) {\n            return fieldInfos.fieldInfo(fieldNumbers[fieldUpto++]).name;\n          } else {\n            return null;\n          }\n        }\n\n        @Override\n        public Terms terms() throws IOException {\n          return TVFields.this.terms(fieldInfos.fieldInfo(fieldNumbers[fieldUpto-1]).name);\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","c22d44fa0ab988ba3253471cce23610e45a91052"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"c22d44fa0ab988ba3253471cce23610e45a91052":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","c22d44fa0ab988ba3253471cce23610e45a91052"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c22d44fa0ab988ba3253471cce23610e45a91052":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}