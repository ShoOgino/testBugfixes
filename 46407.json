{"path":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","commits":[{"id":"50e7972fe4865715af8951d4ba15555e3426fc5d","date":1115024647,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Creates and returns a searcher that can be used to execute arbitrary\n\t * Lucene queries and to collect the resulting query results as hits.\n\t */\n\tpublic IndexSearcher createSearcher() {\n\t\tMemoryIndexReader reader = new MemoryIndexReader();\n\t\tIndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n\t\treader.setSearcher(searcher); // to later get hold of searcher.getSimilarity()\n\t\treturn searcher;\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8f14489323057ef6de92ba5ea2d0cfe6e34755f","date":1120167605,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","sourceNew":"\t/**\r\n\t * Creates and returns a searcher that can be used to execute arbitrary\r\n\t * Lucene queries and to collect the resulting query results as hits.\r\n\t */\r\n\tpublic IndexSearcher createSearcher() {\r\n\t\tMemoryIndexReader reader = new MemoryIndexReader();\r\n\t\tIndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\r\n\t\treader.setSearcher(searcher); // to later get hold of searcher.getSimilarity()\r\n\t\treturn searcher;\r\n\t}\r\n\n","sourceOld":"\t/**\n\t * Creates and returns a searcher that can be used to execute arbitrary\n\t * Lucene queries and to collect the resulting query results as hits.\n\t */\n\tpublic IndexSearcher createSearcher() {\n\t\tMemoryIndexReader reader = new MemoryIndexReader();\n\t\tIndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n\t\treader.setSearcher(searcher); // to later get hold of searcher.getSimilarity()\n\t\treturn searcher;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"35dd40ede4dd66fa47506858c4a073d295c5a76e","date":1133587328,"type":4,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","sourceNew":null,"sourceOld":"\t/**\r\n\t * Creates and returns a searcher that can be used to execute arbitrary\r\n\t * Lucene queries and to collect the resulting query results as hits.\r\n\t */\r\n\tpublic IndexSearcher createSearcher() {\r\n\t\tMemoryIndexReader reader = new MemoryIndexReader();\r\n\t\tIndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\r\n\t\treader.setSearcher(searcher); // to later get hold of searcher.getSimilarity()\r\n\t\treturn searcher;\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a93e1e4a21be8ebb98e53e6933412a363931faa1","date":1133587471,"type":0,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Creates and returns a searcher that can be used to execute arbitrary\n\t * Lucene queries and to collect the resulting query results as hits.\n\t */\n\tpublic IndexSearcher createSearcher() {\n\t\tMemoryIndexReader reader = new MemoryIndexReader();\n\t\tIndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n\t\treader.setSearcher(searcher); // to later get hold of searcher.getSimilarity()\n\t\treturn searcher;\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b08308242cb802f3a154e260d3881c2ed523c52b","date":1133766662,"type":3,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","sourceNew":"\t/**\n\t * Creates and returns a searcher that can be used to execute arbitrary\n\t * Lucene queries and to collect the resulting query results as hits.\n\t * \n\t * @return a searcher\n\t */\n\tpublic IndexSearcher createSearcher() {\n\t\tMemoryIndexReader reader = new MemoryIndexReader();\n\t\tIndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n\t\treader.setSearcher(searcher); // to later get hold of searcher.getSimilarity()\n\t\treturn searcher;\n\t}\n\n","sourceOld":"\t/**\n\t * Creates and returns a searcher that can be used to execute arbitrary\n\t * Lucene queries and to collect the resulting query results as hits.\n\t */\n\tpublic IndexSearcher createSearcher() {\n\t\tMemoryIndexReader reader = new MemoryIndexReader();\n\t\tIndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n\t\treader.setSearcher(searcher); // to later get hold of searcher.getSimilarity()\n\t\treturn searcher;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f68e24227d5556d33ee6d586fd9010cd9ff8bec","date":1150091176,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","sourceNew":"  /**\n   * Creates and returns a searcher that can be used to execute arbitrary\n   * Lucene queries and to collect the resulting query results as hits.\n   * \n   * @return a searcher\n   */\n  public IndexSearcher createSearcher() {\n    MemoryIndexReader reader = new MemoryIndexReader();\n    IndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n    reader.setSearcher(searcher); // to later get hold of searcher.getSimilarity()\n    return searcher;\n  }\n\n","sourceOld":"\t/**\n\t * Creates and returns a searcher that can be used to execute arbitrary\n\t * Lucene queries and to collect the resulting query results as hits.\n\t * \n\t * @return a searcher\n\t */\n\tpublic IndexSearcher createSearcher() {\n\t\tMemoryIndexReader reader = new MemoryIndexReader();\n\t\tIndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n\t\treader.setSearcher(searcher); // to later get hold of searcher.getSimilarity()\n\t\treturn searcher;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","sourceNew":"  /**\n   * Creates and returns a searcher that can be used to execute arbitrary\n   * Lucene queries and to collect the resulting query results as hits.\n   * \n   * @return a searcher\n   */\n  public IndexSearcher createSearcher() {\n    MemoryIndexReader reader = new MemoryIndexReader();\n    IndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n    reader.setSearcher(searcher); // to later get hold of searcher.getSimilarity()\n    return searcher;\n  }\n\n","sourceOld":"  /**\n   * Creates and returns a searcher that can be used to execute arbitrary\n   * Lucene queries and to collect the resulting query results as hits.\n   * \n   * @return a searcher\n   */\n  public IndexSearcher createSearcher() {\n    MemoryIndexReader reader = new MemoryIndexReader();\n    IndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n    reader.setSearcher(searcher); // to later get hold of searcher.getSimilarity()\n    return searcher;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"35dd40ede4dd66fa47506858c4a073d295c5a76e":["c8f14489323057ef6de92ba5ea2d0cfe6e34755f"],"b08308242cb802f3a154e260d3881c2ed523c52b":["a93e1e4a21be8ebb98e53e6933412a363931faa1"],"c8f14489323057ef6de92ba5ea2d0cfe6e34755f":["50e7972fe4865715af8951d4ba15555e3426fc5d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7f68e24227d5556d33ee6d586fd9010cd9ff8bec":["b08308242cb802f3a154e260d3881c2ed523c52b"],"50e7972fe4865715af8951d4ba15555e3426fc5d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a93e1e4a21be8ebb98e53e6933412a363931faa1":["35dd40ede4dd66fa47506858c4a073d295c5a76e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7f68e24227d5556d33ee6d586fd9010cd9ff8bec"]},"commit2Childs":{"35dd40ede4dd66fa47506858c4a073d295c5a76e":["a93e1e4a21be8ebb98e53e6933412a363931faa1"],"b08308242cb802f3a154e260d3881c2ed523c52b":["7f68e24227d5556d33ee6d586fd9010cd9ff8bec"],"c8f14489323057ef6de92ba5ea2d0cfe6e34755f":["35dd40ede4dd66fa47506858c4a073d295c5a76e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["50e7972fe4865715af8951d4ba15555e3426fc5d"],"7f68e24227d5556d33ee6d586fd9010cd9ff8bec":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"50e7972fe4865715af8951d4ba15555e3426fc5d":["c8f14489323057ef6de92ba5ea2d0cfe6e34755f"],"a93e1e4a21be8ebb98e53e6933412a363931faa1":["b08308242cb802f3a154e260d3881c2ed523c52b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}