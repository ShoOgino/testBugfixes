{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(StoredDocument,int).mjava","commits":[{"id":"11c5f879e49375db0f48ca533856f226c2db57a5","date":1390688316,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(StoredDocument,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentExpressionDictionary.DocumentExpressionInputIterator#getWeight(StoredDocument,int).mjava","sourceNew":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(StoredDocument doc, int docId) {    \n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException();\n        }\n      }\n      return currentWeightValues.longVal(docId - starts[subIndex]);\n    }\n\n","sourceOld":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(StoredDocument doc, int docId) {    \n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException();\n        }\n      }\n      return currentWeightValues.longVal(docId - starts[subIndex]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"437e65c578cab603d9201916b0e285f3d68aff45","date":1427831677,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(StoredDocument,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(StoredDocument,int).mjava","sourceNew":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(StoredDocument doc, int docId) {    \n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      return currentWeightValues.longVal(docId - starts[subIndex]);\n    }\n\n","sourceOld":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(StoredDocument doc, int docId) {    \n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException();\n        }\n      }\n      return currentWeightValues.longVal(docId - starts[subIndex]);\n    }\n\n","bugFix":["557640e996995f56504248e3347a3c61c1923097"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fab172655716b96f7e42376116235017a922de3a","date":1427850611,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(StoredDocument,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(StoredDocument,int).mjava","sourceNew":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(StoredDocument doc, int docId) {    \n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      return currentWeightValues.longVal(docId - starts[subIndex]);\n    }\n\n","sourceOld":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(StoredDocument doc, int docId) {    \n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException();\n        }\n      }\n      return currentWeightValues.longVal(docId - starts[subIndex]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(Document,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.DocumentValueSourceInputIterator#getWeight(StoredDocument,int).mjava","sourceNew":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(Document doc, int docId) {    \n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      return currentWeightValues.longVal(docId - starts[subIndex]);\n    }\n\n","sourceOld":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(StoredDocument doc, int docId) {    \n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      return currentWeightValues.longVal(docId - starts[subIndex]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"437e65c578cab603d9201916b0e285f3d68aff45":["11c5f879e49375db0f48ca533856f226c2db57a5"],"11c5f879e49375db0f48ca533856f226c2db57a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fab172655716b96f7e42376116235017a922de3a":["11c5f879e49375db0f48ca533856f226c2db57a5","437e65c578cab603d9201916b0e285f3d68aff45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["437e65c578cab603d9201916b0e285f3d68aff45"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["11c5f879e49375db0f48ca533856f226c2db57a5"],"437e65c578cab603d9201916b0e285f3d68aff45":["fab172655716b96f7e42376116235017a922de3a","6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"11c5f879e49375db0f48ca533856f226c2db57a5":["437e65c578cab603d9201916b0e285f3d68aff45","fab172655716b96f7e42376116235017a922de3a"],"fab172655716b96f7e42376116235017a922de3a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["fab172655716b96f7e42376116235017a922de3a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}