{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesProducer.CompressedBinaryDocValues#lookupTerm(BytesRef).mjava","commits":[{"id":"0ad01348544f9eb6ee985c300245013a75addfc6","date":1376095061,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesProducer.CompressedBinaryDocValues#lookupTerm(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"    long lookupTerm(BytesRef key) {\n      try {\n        SeekStatus status = termsEnum.seekCeil(key);\n        if (status == SeekStatus.END) {\n          return -numValues-1;\n        } else if (status == SeekStatus.FOUND) {\n          return termsEnum.ord();\n        } else {\n          return -termsEnum.ord()-1;\n        }\n      } catch (IOException bogus) {\n        throw new RuntimeException(bogus);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesProducer.CompressedBinaryDocValues#lookupTerm(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"    long lookupTerm(BytesRef key) {\n      try {\n        SeekStatus status = termsEnum.seekCeil(key);\n        if (status == SeekStatus.END) {\n          return -numValues-1;\n        } else if (status == SeekStatus.FOUND) {\n          return termsEnum.ord();\n        } else {\n          return -termsEnum.ord()-1;\n        }\n      } catch (IOException bogus) {\n        throw new RuntimeException(bogus);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11a746437bc5c0a0b3df0337ed249c387c812871","date":1376687959,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene45/Lucene45DocValuesProducer.CompressedBinaryDocValues#lookupTerm(BytesRef).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesProducer.CompressedBinaryDocValues#lookupTerm(BytesRef).mjava","sourceNew":"    long lookupTerm(BytesRef key) {\n      try {\n        SeekStatus status = termsEnum.seekCeil(key);\n        if (status == SeekStatus.END) {\n          return -numValues-1;\n        } else if (status == SeekStatus.FOUND) {\n          return termsEnum.ord();\n        } else {\n          return -termsEnum.ord()-1;\n        }\n      } catch (IOException bogus) {\n        throw new RuntimeException(bogus);\n      }\n    }\n\n","sourceOld":"    long lookupTerm(BytesRef key) {\n      try {\n        SeekStatus status = termsEnum.seekCeil(key);\n        if (status == SeekStatus.END) {\n          return -numValues-1;\n        } else if (status == SeekStatus.FOUND) {\n          return termsEnum.ord();\n        } else {\n          return -termsEnum.ord()-1;\n        }\n      } catch (IOException bogus) {\n        throw new RuntimeException(bogus);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene45/Lucene45DocValuesProducer.CompressedBinaryDocValues#lookupTerm(BytesRef).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesProducer.CompressedBinaryDocValues#lookupTerm(BytesRef).mjava","sourceNew":"    long lookupTerm(BytesRef key) {\n      try {\n        SeekStatus status = termsEnum.seekCeil(key);\n        if (status == SeekStatus.END) {\n          return -numValues-1;\n        } else if (status == SeekStatus.FOUND) {\n          return termsEnum.ord();\n        } else {\n          return -termsEnum.ord()-1;\n        }\n      } catch (IOException bogus) {\n        throw new RuntimeException(bogus);\n      }\n    }\n\n","sourceOld":"    long lookupTerm(BytesRef key) {\n      try {\n        SeekStatus status = termsEnum.seekCeil(key);\n        if (status == SeekStatus.END) {\n          return -numValues-1;\n        } else if (status == SeekStatus.FOUND) {\n          return termsEnum.ord();\n        } else {\n          return -termsEnum.ord()-1;\n        }\n      } catch (IOException bogus) {\n        throw new RuntimeException(bogus);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":5,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene45/Lucene45DocValuesProducer.CompressedBinaryDocValues#lookupTerm(BytesRef).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesProducer.CompressedBinaryDocValues#lookupTerm(BytesRef).mjava","sourceNew":"    long lookupTerm(BytesRef key) {\n      try {\n        SeekStatus status = termsEnum.seekCeil(key);\n        if (status == SeekStatus.END) {\n          return -numValues-1;\n        } else if (status == SeekStatus.FOUND) {\n          return termsEnum.ord();\n        } else {\n          return -termsEnum.ord()-1;\n        }\n      } catch (IOException bogus) {\n        throw new RuntimeException(bogus);\n      }\n    }\n\n","sourceOld":"    long lookupTerm(BytesRef key) {\n      try {\n        SeekStatus status = termsEnum.seekCeil(key);\n        if (status == SeekStatus.END) {\n          return -numValues-1;\n        } else if (status == SeekStatus.FOUND) {\n          return termsEnum.ord();\n        } else {\n          return -termsEnum.ord()-1;\n        }\n      } catch (IOException bogus) {\n        throw new RuntimeException(bogus);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"11a746437bc5c0a0b3df0337ed249c387c812871":["0ad01348544f9eb6ee985c300245013a75addfc6"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0ad01348544f9eb6ee985c300245013a75addfc6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["0ad01348544f9eb6ee985c300245013a75addfc6","11a746437bc5c0a0b3df0337ed249c387c812871"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"]},"commit2Childs":{"11a746437bc5c0a0b3df0337ed249c387c812871":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","0ad01348544f9eb6ee985c300245013a75addfc6"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"0ad01348544f9eb6ee985c300245013a75addfc6":["11a746437bc5c0a0b3df0337ed249c387c812871","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}