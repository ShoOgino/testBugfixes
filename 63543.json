{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesProducer#DirectDocValuesProducer(DirectDocValuesProducer).mjava","commits":[{"id":"bc8f80fee115148a0e4a0574560be06b494de821","date":1412069872,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesProducer#DirectDocValuesProducer(DirectDocValuesProducer).mjava","pathOld":"/dev/null","sourceNew":"  // clone for merge: when merging we don't do any instances.put()s\n  DirectDocValuesProducer(DirectDocValuesProducer original) throws IOException {\n    assert Thread.holdsLock(original);\n    numerics.putAll(original.numerics);\n    binaries.putAll(original.binaries);\n    sorteds.putAll(original.sorteds);\n    sortedSets.putAll(original.sortedSets);\n    sortedNumerics.putAll(original.sortedNumerics);\n    data = original.data.clone();\n    \n    numericInstances.putAll(original.numericInstances);\n    binaryInstances.putAll(original.binaryInstances);\n    sortedInstances.putAll(original.sortedInstances);\n    sortedSetInstances.putAll(original.sortedSetInstances);\n    sortedNumericInstances.putAll(original.sortedNumericInstances);\n    docsWithFieldInstances.putAll(original.docsWithFieldInstances);\n    \n    numEntries = original.numEntries;\n    maxDoc = original.maxDoc;\n    ramBytesUsed = new AtomicLong(original.ramBytesUsed.get());\n    version = original.version;\n    merging = true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesProducer#DirectDocValuesProducer(DirectDocValuesProducer).mjava","pathOld":"/dev/null","sourceNew":"  // clone for merge: when merging we don't do any instances.put()s\n  DirectDocValuesProducer(DirectDocValuesProducer original) throws IOException {\n    assert Thread.holdsLock(original);\n    numerics.putAll(original.numerics);\n    binaries.putAll(original.binaries);\n    sorteds.putAll(original.sorteds);\n    sortedSets.putAll(original.sortedSets);\n    sortedNumerics.putAll(original.sortedNumerics);\n    data = original.data.clone();\n    \n    numericInstances.putAll(original.numericInstances);\n    binaryInstances.putAll(original.binaryInstances);\n    sortedInstances.putAll(original.sortedInstances);\n    sortedSetInstances.putAll(original.sortedSetInstances);\n    sortedNumericInstances.putAll(original.sortedNumericInstances);\n    docsWithFieldInstances.putAll(original.docsWithFieldInstances);\n    \n    numEntries = original.numEntries;\n    maxDoc = original.maxDoc;\n    ramBytesUsed = new AtomicLong(original.ramBytesUsed.get());\n    version = original.version;\n    merging = true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbc046116d49cd3d0c50f7169cabaa295bc23a4a","date":1552989114,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesProducer#DirectDocValuesProducer(DirectDocValuesProducer).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesProducer#DirectDocValuesProducer(DirectDocValuesProducer).mjava","sourceNew":"  // clone for merge: when merging we don't do any instances.put()s\n  DirectDocValuesProducer(DirectDocValuesProducer original) {\n    assert Thread.holdsLock(original);\n    numerics.putAll(original.numerics);\n    binaries.putAll(original.binaries);\n    sorteds.putAll(original.sorteds);\n    sortedSets.putAll(original.sortedSets);\n    sortedNumerics.putAll(original.sortedNumerics);\n    data = original.data.clone();\n    \n    numericInstances.putAll(original.numericInstances);\n    binaryInstances.putAll(original.binaryInstances);\n    sortedInstances.putAll(original.sortedInstances);\n    sortedSetInstances.putAll(original.sortedSetInstances);\n    sortedNumericInstances.putAll(original.sortedNumericInstances);\n    docsWithFieldInstances.putAll(original.docsWithFieldInstances);\n    \n    numEntries = original.numEntries;\n    maxDoc = original.maxDoc;\n    ramBytesUsed = new AtomicLong(original.ramBytesUsed.get());\n    version = original.version;\n    merging = true;\n  }\n\n","sourceOld":"  // clone for merge: when merging we don't do any instances.put()s\n  DirectDocValuesProducer(DirectDocValuesProducer original) throws IOException {\n    assert Thread.holdsLock(original);\n    numerics.putAll(original.numerics);\n    binaries.putAll(original.binaries);\n    sorteds.putAll(original.sorteds);\n    sortedSets.putAll(original.sortedSets);\n    sortedNumerics.putAll(original.sortedNumerics);\n    data = original.data.clone();\n    \n    numericInstances.putAll(original.numericInstances);\n    binaryInstances.putAll(original.binaryInstances);\n    sortedInstances.putAll(original.sortedInstances);\n    sortedSetInstances.putAll(original.sortedSetInstances);\n    sortedNumericInstances.putAll(original.sortedNumericInstances);\n    docsWithFieldInstances.putAll(original.docsWithFieldInstances);\n    \n    numEntries = original.numEntries;\n    maxDoc = original.maxDoc;\n    ramBytesUsed = new AtomicLong(original.ramBytesUsed.get());\n    version = original.version;\n    merging = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f18fb78980c55a781fd9fdc505634171059b1d","date":1567674462,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesProducer#DirectDocValuesProducer(DirectDocValuesProducer).mjava","sourceNew":null,"sourceOld":"  // clone for merge: when merging we don't do any instances.put()s\n  DirectDocValuesProducer(DirectDocValuesProducer original) {\n    assert Thread.holdsLock(original);\n    numerics.putAll(original.numerics);\n    binaries.putAll(original.binaries);\n    sorteds.putAll(original.sorteds);\n    sortedSets.putAll(original.sortedSets);\n    sortedNumerics.putAll(original.sortedNumerics);\n    data = original.data.clone();\n    \n    numericInstances.putAll(original.numericInstances);\n    binaryInstances.putAll(original.binaryInstances);\n    sortedInstances.putAll(original.sortedInstances);\n    sortedSetInstances.putAll(original.sortedSetInstances);\n    sortedNumericInstances.putAll(original.sortedNumericInstances);\n    docsWithFieldInstances.putAll(original.docsWithFieldInstances);\n    \n    numEntries = original.numEntries;\n    maxDoc = original.maxDoc;\n    ramBytesUsed = new AtomicLong(original.ramBytesUsed.get());\n    version = original.version;\n    merging = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc8f80fee115148a0e4a0574560be06b494de821":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bc8f80fee115148a0e4a0574560be06b494de821"],"74f18fb78980c55a781fd9fdc505634171059b1d":["dbc046116d49cd3d0c50f7169cabaa295bc23a4a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbc046116d49cd3d0c50f7169cabaa295bc23a4a":["9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["74f18fb78980c55a781fd9fdc505634171059b1d"]},"commit2Childs":{"bc8f80fee115148a0e4a0574560be06b494de821":["9bb9a29a5e71a90295f175df8919802993142c9a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["dbc046116d49cd3d0c50f7169cabaa295bc23a4a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc8f80fee115148a0e4a0574560be06b494de821","9bb9a29a5e71a90295f175df8919802993142c9a"],"74f18fb78980c55a781fd9fdc505634171059b1d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dbc046116d49cd3d0c50f7169cabaa295bc23a4a":["74f18fb78980c55a781fd9fdc505634171059b1d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}