{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygonTest#testPolygonBounds().mjava","commits":[{"id":"851e4197476b684154a7b65f996f535522e67400","date":1428926498,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygonTest#testPolygonBounds().mjava","pathOld":"/dev/null","sourceNew":"    @Test\n    public void testPolygonBounds() {\n        GeoConvexPolygon c;\n        Bounds b;\n        \n        c = new GeoConvexPolygon(-0.1,-0.5);\n        c.addPoint(0.0,-0.6);\n        c.addPoint(0.1,-0.5);\n        c.addPoint(0.0,-0.4);\n        c.donePoints();\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(-0.6,b.getLeftLongitude(),0.000001);\n        assertEquals(-0.4,b.getRightLongitude(),0.000001);\n        assertEquals(-0.1,b.getMinLatitude(),0.000001);\n        assertEquals(0.1,b.getMaxLatitude(),0.000001);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0fb9dbed1415914caa27460f8abb7afadaa61451","date":1429504289,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygonTest#testPolygonBounds().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygonTest#testPolygonBounds().mjava","sourceNew":"    @Test\n    public void testPolygonBounds() {\n        GeoConvexPolygon c;\n        Bounds b;\n        \n        c = new GeoConvexPolygon(-0.1,-0.5);\n        c.addPoint(0.0,-0.6,false);\n        c.addPoint(0.1,-0.5,false);\n        c.addPoint(0.0,-0.4,false);\n        c.donePoints(false);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(-0.6,b.getLeftLongitude(),0.000001);\n        assertEquals(-0.4,b.getRightLongitude(),0.000001);\n        assertEquals(-0.1,b.getMinLatitude(),0.000001);\n        assertEquals(0.1,b.getMaxLatitude(),0.000001);\n    }\n\n","sourceOld":"    @Test\n    public void testPolygonBounds() {\n        GeoConvexPolygon c;\n        Bounds b;\n        \n        c = new GeoConvexPolygon(-0.1,-0.5);\n        c.addPoint(0.0,-0.6);\n        c.addPoint(0.1,-0.5);\n        c.addPoint(0.0,-0.4);\n        c.donePoints();\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(-0.6,b.getLeftLongitude(),0.000001);\n        assertEquals(-0.4,b.getRightLongitude(),0.000001);\n        assertEquals(-0.1,b.getMinLatitude(),0.000001);\n        assertEquals(0.1,b.getMaxLatitude(),0.000001);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2997acf74723385bd84aff1ea0b12af4aefde77","date":1430745542,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygonTest#testPolygonBounds().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygonTest#testPolygonBounds().mjava","sourceNew":"  @Test\n  public void testPolygonBounds() {\n    GeoConvexPolygon c;\n    Bounds b;\n\n    c = new GeoConvexPolygon(-0.1, -0.5);\n    c.addPoint(0.0, -0.6, false);\n    c.addPoint(0.1, -0.5, false);\n    c.addPoint(0.0, -0.4, false);\n    c.donePoints(false);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-0.6, b.getLeftLongitude(), 0.000001);\n    assertEquals(-0.4, b.getRightLongitude(), 0.000001);\n    assertEquals(-0.1, b.getMinLatitude(), 0.000001);\n    assertEquals(0.1, b.getMaxLatitude(), 0.000001);\n  }\n\n","sourceOld":"    @Test\n    public void testPolygonBounds() {\n        GeoConvexPolygon c;\n        Bounds b;\n        \n        c = new GeoConvexPolygon(-0.1,-0.5);\n        c.addPoint(0.0,-0.6,false);\n        c.addPoint(0.1,-0.5,false);\n        c.addPoint(0.0,-0.4,false);\n        c.donePoints(false);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(-0.6,b.getLeftLongitude(),0.000001);\n        assertEquals(-0.4,b.getRightLongitude(),0.000001);\n        assertEquals(-0.1,b.getMinLatitude(),0.000001);\n        assertEquals(0.1,b.getMaxLatitude(),0.000001);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c921d81476f94b6686d3f216daa1f6b076b4a6c0","date":1430922284,"type":0,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygonTest#testPolygonBounds().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPolygonBounds() {\n    GeoConvexPolygon c;\n    Bounds b;\n\n    c = new GeoConvexPolygon(-0.1, -0.5);\n    c.addPoint(0.0, -0.6, false);\n    c.addPoint(0.1, -0.5, false);\n    c.addPoint(0.0, -0.4, false);\n    c.donePoints(false);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-0.6, b.getLeftLongitude(), 0.000001);\n    assertEquals(-0.4, b.getRightLongitude(), 0.000001);\n    assertEquals(-0.1, b.getMinLatitude(), 0.000001);\n    assertEquals(0.1, b.getMaxLatitude(), 0.000001);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9f97ca977ad649f14b4f60a888adef2edd7a64e","date":1432702490,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygonTest#testPolygonBounds().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygonTest#testPolygonBounds().mjava","sourceNew":"  @Test\n  public void testPolygonBounds() {\n    GeoConvexPolygon c;\n    Bounds b;\n\n    c = new GeoConvexPolygon(PlanetModel.SPHERE, -0.1, -0.5);\n    c.addPoint(0.0, -0.6, false);\n    c.addPoint(0.1, -0.5, false);\n    c.addPoint(0.0, -0.4, false);\n    c.donePoints(false);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-0.6, b.getLeftLongitude(), 0.000001);\n    assertEquals(-0.4, b.getRightLongitude(), 0.000001);\n    assertEquals(-0.1, b.getMinLatitude(), 0.000001);\n    assertEquals(0.1, b.getMaxLatitude(), 0.000001);\n  }\n\n","sourceOld":"  @Test\n  public void testPolygonBounds() {\n    GeoConvexPolygon c;\n    Bounds b;\n\n    c = new GeoConvexPolygon(-0.1, -0.5);\n    c.addPoint(0.0, -0.6, false);\n    c.addPoint(0.1, -0.5, false);\n    c.addPoint(0.0, -0.4, false);\n    c.donePoints(false);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-0.6, b.getLeftLongitude(), 0.000001);\n    assertEquals(-0.4, b.getRightLongitude(), 0.000001);\n    assertEquals(-0.1, b.getMinLatitude(), 0.000001);\n    assertEquals(0.1, b.getMaxLatitude(), 0.000001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fec06d6753751ae302c7d35866763e6cb414112d","date":1433250698,"type":3,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygonTest#testPolygonBounds().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygonTest#testPolygonBounds().mjava","sourceNew":"  @Test\n  public void testPolygonBounds() {\n    GeoConvexPolygon c;\n    Bounds b;\n\n    c = new GeoConvexPolygon(PlanetModel.SPHERE, -0.1, -0.5);\n    c.addPoint(0.0, -0.6, false);\n    c.addPoint(0.1, -0.5, false);\n    c.addPoint(0.0, -0.4, false);\n    c.donePoints(false);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-0.6, b.getLeftLongitude(), 0.000001);\n    assertEquals(-0.4, b.getRightLongitude(), 0.000001);\n    assertEquals(-0.1, b.getMinLatitude(), 0.000001);\n    assertEquals(0.1, b.getMaxLatitude(), 0.000001);\n  }\n\n","sourceOld":"  @Test\n  public void testPolygonBounds() {\n    GeoConvexPolygon c;\n    Bounds b;\n\n    c = new GeoConvexPolygon(-0.1, -0.5);\n    c.addPoint(0.0, -0.6, false);\n    c.addPoint(0.1, -0.5, false);\n    c.addPoint(0.0, -0.4, false);\n    c.donePoints(false);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-0.6, b.getLeftLongitude(), 0.000001);\n    assertEquals(-0.4, b.getRightLongitude(), 0.000001);\n    assertEquals(-0.1, b.getMinLatitude(), 0.000001);\n    assertEquals(0.1, b.getMaxLatitude(), 0.000001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"535df84251be5af3be84d750beba0021aff9132d","date":1434649368,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygonTest#testPolygonBounds().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygonTest#testPolygonBounds().mjava","sourceNew":"  @Test\n  public void testPolygonBounds() {\n    GeoConvexPolygon c;\n    Bounds b;\n\n    c = new GeoConvexPolygon(PlanetModel.SPHERE, -0.1, -0.5);\n    c.addPoint(0.0, -0.6, false);\n    c.addPoint(0.1, -0.5, false);\n    c.addPoint(0.0, -0.4, false);\n    c.done(false);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-0.6, b.getLeftLongitude(), 0.000001);\n    assertEquals(-0.4, b.getRightLongitude(), 0.000001);\n    assertEquals(-0.1, b.getMinLatitude(), 0.000001);\n    assertEquals(0.1, b.getMaxLatitude(), 0.000001);\n  }\n\n","sourceOld":"  @Test\n  public void testPolygonBounds() {\n    GeoConvexPolygon c;\n    Bounds b;\n\n    c = new GeoConvexPolygon(PlanetModel.SPHERE, -0.1, -0.5);\n    c.addPoint(0.0, -0.6, false);\n    c.addPoint(0.1, -0.5, false);\n    c.addPoint(0.0, -0.4, false);\n    c.donePoints(false);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-0.6, b.getLeftLongitude(), 0.000001);\n    assertEquals(-0.4, b.getRightLongitude(), 0.000001);\n    assertEquals(-0.1, b.getMinLatitude(), 0.000001);\n    assertEquals(0.1, b.getMaxLatitude(), 0.000001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/GeoConvexPolygonTest#testPolygonBounds().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygonTest#testPolygonBounds().mjava","sourceNew":"  @Test\n  public void testPolygonBounds() {\n    GeoConvexPolygon c;\n    Bounds b;\n\n    c = new GeoConvexPolygon(PlanetModel.SPHERE, -0.1, -0.5);\n    c.addPoint(0.0, -0.6, false);\n    c.addPoint(0.1, -0.5, false);\n    c.addPoint(0.0, -0.4, false);\n    c.done(false);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-0.6, b.getLeftLongitude(), 0.000001);\n    assertEquals(-0.4, b.getRightLongitude(), 0.000001);\n    assertEquals(-0.1, b.getMinLatitude(), 0.000001);\n    assertEquals(0.1, b.getMaxLatitude(), 0.000001);\n  }\n\n","sourceOld":"  @Test\n  public void testPolygonBounds() {\n    GeoConvexPolygon c;\n    Bounds b;\n\n    c = new GeoConvexPolygon(PlanetModel.SPHERE, -0.1, -0.5);\n    c.addPoint(0.0, -0.6, false);\n    c.addPoint(0.1, -0.5, false);\n    c.addPoint(0.0, -0.4, false);\n    c.done(false);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-0.6, b.getLeftLongitude(), 0.000001);\n    assertEquals(-0.4, b.getRightLongitude(), 0.000001);\n    assertEquals(-0.1, b.getMinLatitude(), 0.000001);\n    assertEquals(0.1, b.getMaxLatitude(), 0.000001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0fb9dbed1415914caa27460f8abb7afadaa61451":["851e4197476b684154a7b65f996f535522e67400"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fec06d6753751ae302c7d35866763e6cb414112d":["c921d81476f94b6686d3f216daa1f6b076b4a6c0","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["535df84251be5af3be84d750beba0021aff9132d"],"535df84251be5af3be84d750beba0021aff9132d":["fec06d6753751ae302c7d35866763e6cb414112d"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["0fb9dbed1415914caa27460f8abb7afadaa61451"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e2997acf74723385bd84aff1ea0b12af4aefde77"],"851e4197476b684154a7b65f996f535522e67400":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3022be5842502b7c2a57a5124199bbc30236f0a0"]},"commit2Childs":{"0fb9dbed1415914caa27460f8abb7afadaa61451":["e2997acf74723385bd84aff1ea0b12af4aefde77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c921d81476f94b6686d3f216daa1f6b076b4a6c0","851e4197476b684154a7b65f996f535522e67400"],"fec06d6753751ae302c7d35866763e6cb414112d":["535df84251be5af3be84d750beba0021aff9132d"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"535df84251be5af3be84d750beba0021aff9132d":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"851e4197476b684154a7b65f996f535522e67400":["0fb9dbed1415914caa27460f8abb7afadaa61451"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["fec06d6753751ae302c7d35866763e6cb414112d","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["fec06d6753751ae302c7d35866763e6cb414112d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}