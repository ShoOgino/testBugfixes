{"path":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/custom/HighlightCustomQueryTest#highlightField(Query,String,String).mjava","commits":[{"id":"a00afb46b1a8a7ee8772ebbd41076442006ce5e4","date":1325512163,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/custom/HighlightCustomQueryTest#highlightField(Query,String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * This method intended for use with\n   * <tt>testHighlightingWithDefaultField()</tt>\n   * \n   * @throws InvalidTokenOffsetsException\n   */\n  private static String highlightField(Query query, String fieldName,\n      String text) throws IOException, InvalidTokenOffsetsException {\n    TokenStream tokenStream = new MockAnalyzer(random, MockTokenizer.SIMPLE,\n        true, MockTokenFilter.ENGLISH_STOPSET, true).tokenStream(fieldName,\n        new StringReader(text));\n    // Assuming \"<B>\", \"</B>\" used to highlight\n    SimpleHTMLFormatter formatter = new SimpleHTMLFormatter();\n    MyQueryScorer scorer = new MyQueryScorer(query, fieldName, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(formatter, scorer);\n    highlighter.setTextFragmenter(new SimpleFragmenter(Integer.MAX_VALUE));\n\n    String rv = highlighter.getBestFragments(tokenStream, text, 1,\n        \"(FIELD TEXT TRUNCATED)\");\n    return rv.length() == 0 ? text : rv;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c83d6c4335f31cae14f625a222bc842f20073dcd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/custom/HighlightCustomQueryTest#highlightField(Query,String,String).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/custom/HighlightCustomQueryTest#highlightField(Query,String,String).mjava","sourceNew":"  /**\n   * This method intended for use with\n   * <tt>testHighlightingWithDefaultField()</tt>\n   * \n   * @throws InvalidTokenOffsetsException\n   */\n  private String highlightField(Query query, String fieldName,\n      String text) throws IOException, InvalidTokenOffsetsException {\n    TokenStream tokenStream = new MockAnalyzer(random(), MockTokenizer.SIMPLE,\n        true, MockTokenFilter.ENGLISH_STOPSET, true).tokenStream(fieldName,\n        new StringReader(text));\n    // Assuming \"<B>\", \"</B>\" used to highlight\n    SimpleHTMLFormatter formatter = new SimpleHTMLFormatter();\n    MyQueryScorer scorer = new MyQueryScorer(query, fieldName, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(formatter, scorer);\n    highlighter.setTextFragmenter(new SimpleFragmenter(Integer.MAX_VALUE));\n\n    String rv = highlighter.getBestFragments(tokenStream, text, 1,\n        \"(FIELD TEXT TRUNCATED)\");\n    return rv.length() == 0 ? text : rv;\n  }\n\n","sourceOld":"  /**\n   * This method intended for use with\n   * <tt>testHighlightingWithDefaultField()</tt>\n   * \n   * @throws InvalidTokenOffsetsException\n   */\n  private static String highlightField(Query query, String fieldName,\n      String text) throws IOException, InvalidTokenOffsetsException {\n    TokenStream tokenStream = new MockAnalyzer(random, MockTokenizer.SIMPLE,\n        true, MockTokenFilter.ENGLISH_STOPSET, true).tokenStream(fieldName,\n        new StringReader(text));\n    // Assuming \"<B>\", \"</B>\" used to highlight\n    SimpleHTMLFormatter formatter = new SimpleHTMLFormatter();\n    MyQueryScorer scorer = new MyQueryScorer(query, fieldName, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(formatter, scorer);\n    highlighter.setTextFragmenter(new SimpleFragmenter(Integer.MAX_VALUE));\n\n    String rv = highlighter.getBestFragments(tokenStream, text, 1,\n        \"(FIELD TEXT TRUNCATED)\");\n    return rv.length() == 0 ? text : rv;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/custom/HighlightCustomQueryTest#highlightField(Query,String,String).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/custom/HighlightCustomQueryTest#highlightField(Query,String,String).mjava","sourceNew":"  /**\n   * This method intended for use with\n   * <tt>testHighlightingWithDefaultField()</tt>\n   * \n   * @throws InvalidTokenOffsetsException\n   */\n  private String highlightField(Query query, String fieldName,\n      String text) throws IOException, InvalidTokenOffsetsException {\n    TokenStream tokenStream = new MockAnalyzer(random(), MockTokenizer.SIMPLE,\n        true, MockTokenFilter.ENGLISH_STOPSET, true).tokenStream(fieldName,\n        new StringReader(text));\n    // Assuming \"<B>\", \"</B>\" used to highlight\n    SimpleHTMLFormatter formatter = new SimpleHTMLFormatter();\n    MyQueryScorer scorer = new MyQueryScorer(query, fieldName, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(formatter, scorer);\n    highlighter.setTextFragmenter(new SimpleFragmenter(Integer.MAX_VALUE));\n\n    String rv = highlighter.getBestFragments(tokenStream, text, 1,\n        \"(FIELD TEXT TRUNCATED)\");\n    return rv.length() == 0 ? text : rv;\n  }\n\n","sourceOld":"  /**\n   * This method intended for use with\n   * <tt>testHighlightingWithDefaultField()</tt>\n   * \n   * @throws InvalidTokenOffsetsException\n   */\n  private String highlightField(Query query, String fieldName,\n      String text) throws IOException, InvalidTokenOffsetsException {\n    TokenStream tokenStream = new MockAnalyzer(random(), MockTokenizer.SIMPLE,\n        true, MockTokenFilter.ENGLISH_STOPSET, true).tokenStream(fieldName,\n        new StringReader(text));\n    // Assuming \"<B>\", \"</B>\" used to highlight\n    SimpleHTMLFormatter formatter = new SimpleHTMLFormatter();\n    MyQueryScorer scorer = new MyQueryScorer(query, fieldName, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(formatter, scorer);\n    highlighter.setTextFragmenter(new SimpleFragmenter(Integer.MAX_VALUE));\n\n    String rv = highlighter.getBestFragments(tokenStream, text, 1,\n        \"(FIELD TEXT TRUNCATED)\");\n    return rv.length() == 0 ? text : rv;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["a00afb46b1a8a7ee8772ebbd41076442006ce5e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a00afb46b1a8a7ee8772ebbd41076442006ce5e4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a00afb46b1a8a7ee8772ebbd41076442006ce5e4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a00afb46b1a8a7ee8772ebbd41076442006ce5e4":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}