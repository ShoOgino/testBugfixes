{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter.WordDelimiterConcatenation#write().mjava","commits":[{"id":"8598a11db0eb9efa116ba7656c437f5bed7de0f7","date":1272964265,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter.WordDelimiterConcatenation#write().mjava","pathOld":"solr/src/java/org/apache/solr/analysis/WordDelimiterFilter.WordDelimiterConcatenation#write().mjava","sourceNew":"    /**\n     * Writes the concatenation to the attributes\n     */\n    void write() {\n      clearAttributes();\n      if (termAttribute.length() < buffer.length()) {\n        termAttribute.resizeBuffer(buffer.length());\n      }\n      char termbuffer[] = termAttribute.buffer();\n      \n      buffer.getChars(0, buffer.length(), termbuffer, 0);\n      termAttribute.setLength(buffer.length());\n        \n      if (hasIllegalOffsets) {\n        offsetAttribute.setOffset(savedStartOffset, savedEndOffset);\n      }\n      else {\n        offsetAttribute.setOffset(startOffset, endOffset);\n      }\n      posIncAttribute.setPositionIncrement(position(true));\n      typeAttribute.setType(savedType);\n      accumPosInc = 0;\n    }\n\n","sourceOld":"    /**\n     * Writes the concatenation to the attributes\n     */\n    void write() {\n      clearAttributes();\n      if (termAttribute.length() < buffer.length()) {\n        termAttribute.resizeBuffer(buffer.length());\n      }\n      char termbuffer[] = termAttribute.buffer();\n      \n      buffer.getChars(0, buffer.length(), termbuffer, 0);\n      termAttribute.setLength(buffer.length());\n        \n      if (hasIllegalOffsets) {\n        offsetAttribute.setOffset(savedStartOffset, savedEndOffset);\n      }\n      else {\n        offsetAttribute.setOffset(startOffset, endOffset);\n      }\n      posIncAttribute.setPositionIncrement(position(true));\n      typeAttribute.setType(savedType);\n      accumPosInc = 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter.WordDelimiterConcatenation#write().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter.WordDelimiterConcatenation#write().mjava","sourceNew":"    /**\n     * Writes the concatenation to the attributes\n     */\n    void write() {\n      clearAttributes();\n      if (termAttribute.length() < buffer.length()) {\n        termAttribute.resizeBuffer(buffer.length());\n      }\n      char termbuffer[] = termAttribute.buffer();\n      \n      buffer.getChars(0, buffer.length(), termbuffer, 0);\n      termAttribute.setLength(buffer.length());\n        \n      if (hasIllegalOffsets) {\n        offsetAttribute.setOffset(savedStartOffset, savedEndOffset);\n      }\n      else {\n        offsetAttribute.setOffset(startOffset, endOffset);\n      }\n      posIncAttribute.setPositionIncrement(position(true));\n      typeAttribute.setType(savedType);\n      accumPosInc = 0;\n    }\n\n","sourceOld":"    /**\n     * Writes the concatenation to the attributes\n     */\n    void write() {\n      clearAttributes();\n      if (termAttribute.length() < buffer.length()) {\n        termAttribute.resizeBuffer(buffer.length());\n      }\n      char termbuffer[] = termAttribute.buffer();\n      \n      buffer.getChars(0, buffer.length(), termbuffer, 0);\n      termAttribute.setLength(buffer.length());\n        \n      if (hasIllegalOffsets) {\n        offsetAttribute.setOffset(savedStartOffset, savedEndOffset);\n      }\n      else {\n        offsetAttribute.setOffset(startOffset, endOffset);\n      }\n      posIncAttribute.setPositionIncrement(position(true));\n      typeAttribute.setType(savedType);\n      accumPosInc = 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8598a11db0eb9efa116ba7656c437f5bed7de0f7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["8598a11db0eb9efa116ba7656c437f5bed7de0f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"8598a11db0eb9efa116ba7656c437f5bed7de0f7":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8598a11db0eb9efa116ba7656c437f5bed7de0f7"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}