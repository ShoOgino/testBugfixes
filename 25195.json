{"path":"modules/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#isNoiseWord(String).mjava","commits":[{"id":"b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1","date":1310609231,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#isNoiseWord(String).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#isNoiseWord(String).mjava","sourceNew":"  /**\n   * determines if the passed term is likely to be of interest in \"more like\" comparisons\n   *\n   * @param term The word being considered\n   * @return true if should be ignored, false if should be used in further analysis\n   */\n  private boolean isNoiseWord(String term) {\n    int len = term.length();\n    if (minWordLen > 0 && len < minWordLen) {\n      return true;\n    }\n    if (maxWordLen > 0 && len > maxWordLen) {\n      return true;\n    }\n    return stopWords != null && stopWords.contains(term);\n  }\n\n","sourceOld":"  /**\n   * determines if the passed term is likely to be of interest in \"more like\" comparisons\n   *\n   * @param term The word being considered\n   * @return true if should be ignored, false if should be used in further analysis\n   */\n  private boolean isNoiseWord(String term) {\n    int len = term.length();\n    if (minWordLen > 0 && len < minWordLen) {\n      return true;\n    }\n    if (maxWordLen > 0 && len > maxWordLen) {\n      return true;\n    }\n    return stopWords != null && stopWords.contains(term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#isNoiseWord(String).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#isNoiseWord(String).mjava","sourceNew":"  /**\n   * determines if the passed term is likely to be of interest in \"more like\" comparisons\n   *\n   * @param term The word being considered\n   * @return true if should be ignored, false if should be used in further analysis\n   */\n  private boolean isNoiseWord(String term) {\n    int len = term.length();\n    if (minWordLen > 0 && len < minWordLen) {\n      return true;\n    }\n    if (maxWordLen > 0 && len > maxWordLen) {\n      return true;\n    }\n    return stopWords != null && stopWords.contains(term);\n  }\n\n","sourceOld":"  /**\n   * determines if the passed term is likely to be of interest in \"more like\" comparisons\n   *\n   * @param term The word being considered\n   * @return true if should be ignored, false if should be used in further analysis\n   */\n  private boolean isNoiseWord(String term) {\n    int len = term.length();\n    if (minWordLen > 0 && len < minWordLen) {\n      return true;\n    }\n    if (maxWordLen > 0 && len > maxWordLen) {\n      return true;\n    }\n    return stopWords != null && stopWords.contains(term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1"],"b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}