{"path":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/IntersectEnum#getArc(int).mjava","commits":[{"id":"c8e28215c157245fd00f3954f8f0d4f45c2b0fd3","date":1400179494,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/IntersectEnum#getArc(int).mjava","pathOld":"/dev/null","sourceNew":"  private FST.Arc<BytesRef> getArc(int ord) {\n    if (ord >= arcs.length) {\n      @SuppressWarnings({\"rawtypes\",\"unchecked\"}) final FST.Arc<BytesRef>[] next =\n      new FST.Arc[ArrayUtil.oversize(1+ord, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];\n      System.arraycopy(arcs, 0, next, 0, arcs.length);\n      for(int arcOrd=arcs.length;arcOrd<next.length;arcOrd++) {\n        next[arcOrd] = new FST.Arc<>();\n      }\n      arcs = next;\n    }\n    return arcs[ord];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7266c313bb3b4fbcde3dcc82556182e1fae90080","date":1400183760,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/IntersectTermsEnum#getArc(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/IntersectEnum#getArc(int).mjava","sourceNew":"  private FST.Arc<BytesRef> getArc(int ord) {\n    if (ord >= arcs.length) {\n      @SuppressWarnings({\"rawtypes\",\"unchecked\"}) final FST.Arc<BytesRef>[] next =\n      new FST.Arc[ArrayUtil.oversize(1+ord, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];\n      System.arraycopy(arcs, 0, next, 0, arcs.length);\n      for(int arcOrd=arcs.length;arcOrd<next.length;arcOrd++) {\n        next[arcOrd] = new FST.Arc<>();\n      }\n      arcs = next;\n    }\n    return arcs[ord];\n  }\n\n","sourceOld":"  private FST.Arc<BytesRef> getArc(int ord) {\n    if (ord >= arcs.length) {\n      @SuppressWarnings({\"rawtypes\",\"unchecked\"}) final FST.Arc<BytesRef>[] next =\n      new FST.Arc[ArrayUtil.oversize(1+ord, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];\n      System.arraycopy(arcs, 0, next, 0, arcs.length);\n      for(int arcOrd=arcs.length;arcOrd<next.length;arcOrd++) {\n        next[arcOrd] = new FST.Arc<>();\n      }\n      arcs = next;\n    }\n    return arcs[ord];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7266c313bb3b4fbcde3dcc82556182e1fae90080":["c8e28215c157245fd00f3954f8f0d4f45c2b0fd3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c8e28215c157245fd00f3954f8f0d4f45c2b0fd3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7266c313bb3b4fbcde3dcc82556182e1fae90080":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c8e28215c157245fd00f3954f8f0d4f45c2b0fd3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c8e28215c157245fd00f3954f8f0d4f45c2b0fd3":["7266c313bb3b4fbcde3dcc82556182e1fae90080"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7266c313bb3b4fbcde3dcc82556182e1fae90080","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}