{"path":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#indexAndUpdateCount(DocRouter,List[DocRouter.Range],int[],String).mjava","commits":[{"id":"2dbed1dd58810b079506c1e4cd13ce80e646faed","date":1368050251,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#indexAndUpdateCount(DocRouter,List[DocRouter.Range],int[],String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#indexAndUpdateCount(List[DocRouter.Range],int[],int).mjava","sourceNew":"  protected void indexAndUpdateCount(DocRouter router, List<DocRouter.Range> ranges, int[] docCounts, String id) throws Exception {\n    index(\"id\", id);\n\n    int hash = 0;\n    if (router instanceof HashBasedRouter) {\n      HashBasedRouter hashBasedRouter = (HashBasedRouter) router;\n      hash = hashBasedRouter.sliceHash(id, null, null);\n    }\n    for (int i = 0; i < ranges.size(); i++) {\n      DocRouter.Range range = ranges.get(i);\n      if (range.includes(hash))\n        docCounts[i]++;\n    }\n  }\n\n","sourceOld":"  protected void indexAndUpdateCount(List<DocRouter.Range> ranges, int[] docCounts, int id) throws Exception {\n    indexr(\"id\", id);\n\n    // todo - hook in custom hashing\n    byte[] bytes = String.valueOf(id).getBytes(\"UTF-8\");\n    int hash = Hash.murmurhash3_x86_32(bytes, 0, bytes.length, 0);\n    for (int i = 0; i < ranges.size(); i++) {\n      DocRouter.Range range = ranges.get(i);\n      if (range.includes(hash))\n        docCounts[i]++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f1ea787bab5bdb5e72685e55424898da05509b6","date":1370289750,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#getHashRangeIdx(DocRouter,List[DocRouter.Range],int[],String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#indexAndUpdateCount(DocRouter,List[DocRouter.Range],int[],String).mjava","sourceNew":"  private int getHashRangeIdx(DocRouter router, List<DocRouter.Range> ranges, int[] docCounts, String id) {\n    int hash = 0;\n    if (router instanceof HashBasedRouter) {\n      HashBasedRouter hashBasedRouter = (HashBasedRouter) router;\n      hash = hashBasedRouter.sliceHash(id, null, null);\n    }\n    for (int i = 0; i < ranges.size(); i++) {\n      DocRouter.Range range = ranges.get(i);\n      if (range.includes(hash))\n        return i;\n    }\n    return -1;\n  }\n\n","sourceOld":"  protected void indexAndUpdateCount(DocRouter router, List<DocRouter.Range> ranges, int[] docCounts, String id) throws Exception {\n    index(\"id\", id);\n\n    int hash = 0;\n    if (router instanceof HashBasedRouter) {\n      HashBasedRouter hashBasedRouter = (HashBasedRouter) router;\n      hash = hashBasedRouter.sliceHash(id, null, null);\n    }\n    for (int i = 0; i < ranges.size(); i++) {\n      DocRouter.Range range = ranges.get(i);\n      if (range.includes(hash))\n        docCounts[i]++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2dbed1dd58810b079506c1e4cd13ce80e646faed":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8f1ea787bab5bdb5e72685e55424898da05509b6":["2dbed1dd58810b079506c1e4cd13ce80e646faed"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8f1ea787bab5bdb5e72685e55424898da05509b6"]},"commit2Childs":{"2dbed1dd58810b079506c1e4cd13ce80e646faed":["8f1ea787bab5bdb5e72685e55424898da05509b6"],"8f1ea787bab5bdb5e72685e55424898da05509b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2dbed1dd58810b079506c1e4cd13ce80e646faed"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}