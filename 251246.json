{"path":"contrib/javascript/example/reuters/importer/java/org/apache/solr/solrjs/ReutersService#readDirectory(File).mjava","commits":[{"id":"a46ad421f8746a7d440cee12d9c537e090bc2b70","date":1229389380,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"contrib/javascript/example/reuters/importer/java/org/apache/solr/solrjs/ReutersService#readDirectory(File).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Reads a whole directory containing reuters .sgml files-\n\t * @param directory\n\t * @throws XPathExpressionException\n\t * @throws IOException\n\t * @throws ParserConfigurationException\n\t * @throws SAXException\n\t * @throws SolrServerException\n\t * @throws ParseException \n\t */\n    public void readDirectory(File directory) throws XPathExpressionException, IOException, ParserConfigurationException, SAXException, SolrServerException, ParseException {\n    \tFile[] files = directory.listFiles(new FileFilter() {\n\t\t\tpublic boolean accept(File pathname) {\n\t\t\t\tif (pathname.getName().contains(\".sgm\")) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n    \t});\n    \tif (files.length == 0) {\n    \t\tthrow new RuntimeException(\"Directory doesn't contain sgml files!\");\n    \t}\n    \tfor (int i = 0; i < files.length; i++) {\n\t\t\tFile file = files[i];\n\t\t\treadFile(file);\n\t\t}\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0af909a3f6f8da71d1ed9daef071834bcdba6aa7","date":1248032177,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"client/javascript/example/reuters/importer/java/org/apache/solr/solrjs/ReutersService#readDirectory(File).mjava","pathOld":"contrib/javascript/example/reuters/importer/java/org/apache/solr/solrjs/ReutersService#readDirectory(File).mjava","sourceNew":"\t/**\n\t * Reads a whole directory containing reuters .sgml files-\n\t * @param directory\n\t * @throws XPathExpressionException\n\t * @throws IOException\n\t * @throws ParserConfigurationException\n\t * @throws SAXException\n\t * @throws SolrServerException\n\t * @throws ParseException \n\t */\n    public void readDirectory(File directory) throws XPathExpressionException, IOException, ParserConfigurationException, SAXException, SolrServerException, ParseException {\n    \tFile[] files = directory.listFiles(new FileFilter() {\n\t\t\tpublic boolean accept(File pathname) {\n\t\t\t\tif (pathname.getName().contains(\".sgm\")) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n    \t});\n    \tif (files.length == 0) {\n    \t\tthrow new RuntimeException(\"Directory doesn't contain sgml files!\");\n    \t}\n    \tfor (int i = 0; i < files.length; i++) {\n\t\t\tFile file = files[i];\n\t\t\treadFile(file);\n\t\t}\n\t}\n\n","sourceOld":"\t/**\n\t * Reads a whole directory containing reuters .sgml files-\n\t * @param directory\n\t * @throws XPathExpressionException\n\t * @throws IOException\n\t * @throws ParserConfigurationException\n\t * @throws SAXException\n\t * @throws SolrServerException\n\t * @throws ParseException \n\t */\n    public void readDirectory(File directory) throws XPathExpressionException, IOException, ParserConfigurationException, SAXException, SolrServerException, ParseException {\n    \tFile[] files = directory.listFiles(new FileFilter() {\n\t\t\tpublic boolean accept(File pathname) {\n\t\t\t\tif (pathname.getName().contains(\".sgm\")) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n    \t});\n    \tif (files.length == 0) {\n    \t\tthrow new RuntimeException(\"Directory doesn't contain sgml files!\");\n    \t}\n    \tfor (int i = 0; i < files.length; i++) {\n\t\t\tFile file = files[i];\n\t\t\treadFile(file);\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0af909a3f6f8da71d1ed9daef071834bcdba6aa7":["a46ad421f8746a7d440cee12d9c537e090bc2b70"],"a46ad421f8746a7d440cee12d9c537e090bc2b70":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0af909a3f6f8da71d1ed9daef071834bcdba6aa7":[],"a46ad421f8746a7d440cee12d9c537e090bc2b70":["0af909a3f6f8da71d1ed9daef071834bcdba6aa7"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["a46ad421f8746a7d440cee12d9c537e090bc2b70"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0af909a3f6f8da71d1ed9daef071834bcdba6aa7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}