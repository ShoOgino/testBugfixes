{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinConf(File).mjava","commits":[{"id":"a0cf46558b3f7708ed3a21e174b9e11cd30e26be","date":1365551184,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinConf(File).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#copyConfFiles(File,String).mjava","sourceNew":"  // Creates a mininmal conf dir.\n  public void copyMinConf(File dstRoot) throws IOException {\n\n    File subHome = new File(dstRoot, \"conf\");\n    assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"schema-tiny.xml\"), new File(subHome, \"schema-tiny.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig-minimal.xml\"), new File(subHome, \"solrconfig-minimal.xml\"));\n  }\n\n","sourceOld":"  private void copyConfFiles(File home, String subdir) throws IOException {\n\n    File subHome = new File(new File(home, subdir), \"conf\");\n    assertTrue(\"Failed to make subdirectory \", subHome.mkdirs());\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"schema-tiny.xml\"), new File(subHome, \"schema-tiny.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig-minimal.xml\"), new File(subHome, \"solrconfig-minimal.xml\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96a802acd838449b6936d34e464baeeb82f9ef54","date":1371519049,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinConf(File).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinConf(File).mjava","sourceNew":"  // Creates a mininmal conf dir.\n  public void copyMinConf(File dstRoot) throws IOException {\n\n    File subHome = new File(dstRoot, \"conf\");\n    assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"schema-tiny.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig-minimal.xml\"), new File(subHome, \"solrconfig.xml\"));\n  }\n\n","sourceOld":"  // Creates a mininmal conf dir.\n  public void copyMinConf(File dstRoot) throws IOException {\n\n    File subHome = new File(dstRoot, \"conf\");\n    assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"schema-tiny.xml\"), new File(subHome, \"schema-tiny.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig-minimal.xml\"), new File(subHome, \"solrconfig-minimal.xml\"));\n  }\n\n","bugFix":["a0cf46558b3f7708ed3a21e174b9e11cd30e26be"],"bugIntro":["83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f33ef255480d446ae7aa03506be85d0356a9850f","date":1371880818,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinConf(File).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinConf(File).mjava","sourceNew":"  // Creates a mininmal conf dir.\n  public void copyMinConf(File dstRoot) throws IOException {\n\n    File subHome = new File(dstRoot, \"conf\");\n    assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"schema-tiny.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig-minimal.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n  }\n\n","sourceOld":"  // Creates a mininmal conf dir.\n  public void copyMinConf(File dstRoot) throws IOException {\n\n    File subHome = new File(dstRoot, \"conf\");\n    assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"schema-tiny.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig-minimal.xml\"), new File(subHome, \"solrconfig.xml\"));\n  }\n\n","bugFix":null,"bugIntro":["83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinConf(File).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinConf(File).mjava","sourceNew":"  // Creates a mininmal conf dir.\n  public void copyMinConf(File dstRoot) throws IOException {\n\n    File subHome = new File(dstRoot, \"conf\");\n    assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"schema-tiny.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig-minimal.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n  }\n\n","sourceOld":"  // Creates a mininmal conf dir.\n  public void copyMinConf(File dstRoot) throws IOException {\n\n    File subHome = new File(dstRoot, \"conf\");\n    assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"schema-tiny.xml\"), new File(subHome, \"schema-tiny.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig-minimal.xml\"), new File(subHome, \"solrconfig-minimal.xml\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinConf(File).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinConf(File).mjava","sourceNew":"  // Creates a mininmal conf dir.\n  public void copyMinConf(File dstRoot) throws IOException {\n\n    File subHome = new File(dstRoot, \"conf\");\n    assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"schema-tiny.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig-minimal.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n  }\n\n","sourceOld":"  // Creates a mininmal conf dir.\n  public void copyMinConf(File dstRoot) throws IOException {\n\n    File subHome = new File(dstRoot, \"conf\");\n    assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"schema-tiny.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig-minimal.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinConf(File).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinConf(File).mjava","sourceNew":"  // Creates a mininmal conf dir.\n  public void copyMinConf(File dstRoot) throws IOException {\n\n    File subHome = new File(dstRoot, \"conf\");\n    assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"schema-tiny.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig-minimal.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n  }\n\n","sourceOld":"  // Creates a mininmal conf dir.\n  public void copyMinConf(File dstRoot) throws IOException {\n\n    File subHome = new File(dstRoot, \"conf\");\n    assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"schema-tiny.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig-minimal.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d","date":1377475564,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinConf(File).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinConf(File).mjava","sourceNew":"  // Creates a mininmal conf dir.\n  public static void copyMinConf(File dstRoot) throws IOException {\n\n    File subHome = new File(dstRoot, \"conf\");\n    if (! dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"schema-tiny.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig-minimal.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n  }\n\n","sourceOld":"  // Creates a mininmal conf dir.\n  public void copyMinConf(File dstRoot) throws IOException {\n\n    File subHome = new File(dstRoot, \"conf\");\n    assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"schema-tiny.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig-minimal.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n  }\n\n","bugFix":["a0cf46558b3f7708ed3a21e174b9e11cd30e26be"],"bugIntro":["83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinConf(File).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinConf(File).mjava","sourceNew":"  // Creates a mininmal conf dir.\n  public static void copyMinConf(File dstRoot) throws IOException {\n\n    File subHome = new File(dstRoot, \"conf\");\n    if (! dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"schema-tiny.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig-minimal.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n  }\n\n","sourceOld":"  // Creates a mininmal conf dir.\n  public void copyMinConf(File dstRoot) throws IOException {\n\n    File subHome = new File(dstRoot, \"conf\");\n    assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"schema-tiny.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig-minimal.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0","date":1377955248,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinConf(File).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinConf(File).mjava","sourceNew":"  public static void copyMinConf(File dstRoot) throws IOException {\n    copyMinConf(dstRoot, null);\n  }\n\n","sourceOld":"  // Creates a mininmal conf dir.\n  public static void copyMinConf(File dstRoot) throws IOException {\n\n    File subHome = new File(dstRoot, \"conf\");\n    if (! dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"schema-tiny.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig-minimal.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n  }\n\n","bugFix":["96a802acd838449b6936d34e464baeeb82f9ef54","a0cf46558b3f7708ed3a21e174b9e11cd30e26be","f33ef255480d446ae7aa03506be85d0356a9850f","e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0cf46558b3f7708ed3a21e174b9e11cd30e26be":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["37a0f60745e53927c4c876cfe5b5a58170f0646c","19275ba31e621f6da1b83bf13af75233876fd3d4"],"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"f33ef255480d446ae7aa03506be85d0356a9850f":["96a802acd838449b6936d34e464baeeb82f9ef54"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0cf46558b3f7708ed3a21e174b9e11cd30e26be","f33ef255480d446ae7aa03506be85d0356a9850f"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["f33ef255480d446ae7aa03506be85d0356a9850f"],"96a802acd838449b6936d34e464baeeb82f9ef54":["a0cf46558b3f7708ed3a21e174b9e11cd30e26be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0"]},"commit2Childs":{"a0cf46558b3f7708ed3a21e174b9e11cd30e26be":["37a0f60745e53927c4c876cfe5b5a58170f0646c","96a802acd838449b6936d34e464baeeb82f9ef54"],"83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d":["83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"f33ef255480d446ae7aa03506be85d0356a9850f":["37a0f60745e53927c4c876cfe5b5a58170f0646c","19275ba31e621f6da1b83bf13af75233876fd3d4"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0cf46558b3f7708ed3a21e174b9e11cd30e26be"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"96a802acd838449b6936d34e464baeeb82f9ef54":["f33ef255480d446ae7aa03506be85d0356a9850f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}