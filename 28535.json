{"path":"lucene/facet/src/test/org/apache/lucene/facet/util/TestFacetsPayloadMigrationReader#verifyMigratedIndex(Directory,Directory,HashMap[String,Integer],FacetIndexingParams).mjava","commits":[{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/util/TestFacetsPayloadMigrationReader#verifyMigratedIndex(Directory,Directory,HashMap[String,Integer],FacetIndexingParams).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/index/TestFacetsPayloadMigrationReader#verifyMigratedIndex(Directory,Directory,HashMap[String,Integer],FacetIndexingParams).mjava","sourceNew":"  private void verifyMigratedIndex(Directory indexDir, Directory taxoDir, HashMap<String,Integer> expectedCounts, \n      FacetIndexingParams fip) throws Exception {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n\n    assertFalse(\"index should not have deletions\", indexReader.hasDeletions());\n    \n    verifyNotFacetsData(indexReader, searcher);\n    verifyFacetedSearch(expectedCounts, fip, indexReader, taxoReader, searcher);\n    verifyDrillDown(expectedCounts, fip, indexReader, taxoReader, searcher);\n    verifyIndexOrdinals(indexReader, taxoReader, fip);\n    \n    IOUtils.close(indexReader, taxoReader);\n  }\n\n","sourceOld":"  private void verifyMigratedIndex(Directory indexDir, Directory taxoDir, HashMap<String,Integer> expectedCounts, \n      FacetIndexingParams fip) throws Exception {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n\n    assertFalse(\"index should not have deletions\", indexReader.hasDeletions());\n    \n    verifyNotFacetsData(indexReader, searcher);\n    verifyFacetedSearch(expectedCounts, fip, indexReader, taxoReader, searcher);\n    verifyDrillDown(expectedCounts, fip, indexReader, taxoReader, searcher);\n    verifyIndexOrdinals(indexReader, taxoReader, fip);\n    \n    IOUtils.close(indexReader, taxoReader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc","date":1366056945,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/util/TestFacetsPayloadMigrationReader#verifyMigratedIndex(Directory,Directory,HashMap[String,Integer],FacetIndexingParams).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/util/TestFacetsPayloadMigrationReader#verifyMigratedIndex(Directory,Directory,HashMap[String,Integer],FacetIndexingParams).mjava","sourceNew":"  private void verifyMigratedIndex(Directory indexDir, Directory taxoDir, HashMap<String,Integer> expectedCounts, \n      FacetIndexingParams fip) throws Exception {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher searcher = newSearcher(indexReader);\n\n    assertFalse(\"index should not have deletions\", indexReader.hasDeletions());\n    \n    verifyNotFacetsData(indexReader, searcher);\n    verifyFacetedSearch(expectedCounts, fip, indexReader, taxoReader, searcher);\n    verifyDrillDown(expectedCounts, fip, indexReader, taxoReader, searcher);\n    verifyIndexOrdinals(indexReader, taxoReader, fip);\n    \n    IOUtils.close(indexReader, taxoReader);\n  }\n\n","sourceOld":"  private void verifyMigratedIndex(Directory indexDir, Directory taxoDir, HashMap<String,Integer> expectedCounts, \n      FacetIndexingParams fip) throws Exception {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n\n    assertFalse(\"index should not have deletions\", indexReader.hasDeletions());\n    \n    verifyNotFacetsData(indexReader, searcher);\n    verifyFacetedSearch(expectedCounts, fip, indexReader, taxoReader, searcher);\n    verifyDrillDown(expectedCounts, fip, indexReader, taxoReader, searcher);\n    verifyIndexOrdinals(indexReader, taxoReader, fip);\n    \n    IOUtils.close(indexReader, taxoReader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/util/TestFacetsPayloadMigrationReader#verifyMigratedIndex(Directory,Directory,HashMap[String,Integer],FacetIndexingParams).mjava","sourceNew":null,"sourceOld":"  private void verifyMigratedIndex(Directory indexDir, Directory taxoDir, HashMap<String,Integer> expectedCounts, \n      FacetIndexingParams fip) throws Exception {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher searcher = newSearcher(indexReader);\n\n    assertFalse(\"index should not have deletions\", indexReader.hasDeletions());\n    \n    verifyNotFacetsData(indexReader, searcher);\n    verifyFacetedSearch(expectedCounts, fip, indexReader, taxoReader, searcher);\n    verifyDrillDown(expectedCounts, fip, indexReader, taxoReader, searcher);\n    verifyIndexOrdinals(indexReader, taxoReader, fip);\n    \n    IOUtils.close(indexReader, taxoReader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/util/TestFacetsPayloadMigrationReader#verifyMigratedIndex(Directory,Directory,HashMap[String,Integer],FacetIndexingParams).mjava","sourceNew":null,"sourceOld":"  private void verifyMigratedIndex(Directory indexDir, Directory taxoDir, HashMap<String,Integer> expectedCounts, \n      FacetIndexingParams fip) throws Exception {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher searcher = newSearcher(indexReader);\n\n    assertFalse(\"index should not have deletions\", indexReader.hasDeletions());\n    \n    verifyNotFacetsData(indexReader, searcher);\n    verifyFacetedSearch(expectedCounts, fip, indexReader, taxoReader, searcher);\n    verifyDrillDown(expectedCounts, fip, indexReader, taxoReader, searcher);\n    verifyIndexOrdinals(indexReader, taxoReader, fip);\n    \n    IOUtils.close(indexReader, taxoReader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607428da722dcb3e86bbd11c63de8986e6275c36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d33e19a97046248623a7591aeaa6547233fd15e2":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc","d33e19a97046248623a7591aeaa6547233fd15e2"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["607428da722dcb3e86bbd11c63de8986e6275c36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"607428da722dcb3e86bbd11c63de8986e6275c36":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["607428da722dcb3e86bbd11c63de8986e6275c36"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}