{"path":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, true);\n\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, true);\n\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f08557cdb6c60ac7b88a9342c983a20cd236e74f","date":1330954480,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, true);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, true);\n\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, true);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, true);\n\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, true);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, true);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, true);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, true);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, true);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, true);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"322360ac5185a8446d3e0b530b2068bef67cd3d5","date":1343669494,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, true);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, true);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, true);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum, true);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.shutdown();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.shutdown();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.shutdown();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.shutdown();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    PostingsEnum dpEnum = termsEnum.postings(null, null, PostingsEnum.FLAG_ALL);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.postings(null, dpEnum, PostingsEnum.FLAG_ALL);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.postings(null, dpEnum, PostingsEnum.FLAG_ALL);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.docsAndPositions(null, dpEnum);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e73063b92d958076ef4ae8beb5f493e8ccdcecb4","date":1424177215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    PostingsEnum dpEnum = termsEnum.postings(null, null, PostingsEnum.ALL);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.postings(null, dpEnum, PostingsEnum.ALL);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.postings(null, dpEnum, PostingsEnum.ALL);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    PostingsEnum dpEnum = termsEnum.postings(null, null, PostingsEnum.FLAG_ALL);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.postings(null, dpEnum, PostingsEnum.FLAG_ALL);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.postings(null, dpEnum, PostingsEnum.FLAG_ALL);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82","date":1428522487,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator();\n    assertNotNull(termsEnum.next());\n    PostingsEnum dpEnum = termsEnum.postings(null, null, PostingsEnum.ALL);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.postings(null, dpEnum, PostingsEnum.ALL);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.postings(null, dpEnum, PostingsEnum.ALL);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    PostingsEnum dpEnum = termsEnum.postings(null, null, PostingsEnum.ALL);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.postings(null, dpEnum, PostingsEnum.ALL);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.postings(null, dpEnum, PostingsEnum.ALL);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStandard().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator();\n    assertNotNull(termsEnum.next());\n    PostingsEnum dpEnum = termsEnum.postings(null, PostingsEnum.ALL);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.postings(dpEnum, PostingsEnum.ALL);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.postings(dpEnum, PostingsEnum.ALL);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStandard() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the  \", customType);\n    Field f2 = newField(\"field\", \"crunch man\", customType);\n    doc.add(f);\n    doc.add(f2);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = DirectoryReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator();\n    assertNotNull(termsEnum.next());\n    PostingsEnum dpEnum = termsEnum.postings(null, null, PostingsEnum.ALL);\n\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.postings(null, dpEnum, PostingsEnum.ALL);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(11, dpEnum.startOffset());\n    assertEquals(17, dpEnum.endOffset());\n\n    assertNotNull(termsEnum.next());\n    dpEnum = termsEnum.postings(null, dpEnum, PostingsEnum.ALL);\n    assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(18, dpEnum.startOffset());\n    assertEquals(21, dpEnum.endOffset());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"51f5280f31484820499077f41fcdfe92d527d9dc":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["51f5280f31484820499077f41fcdfe92d527d9dc"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["04f07771a2a7dd3a395700665ed839c3dae2def2","322360ac5185a8446d3e0b530b2068bef67cd3d5"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["04f07771a2a7dd3a395700665ed839c3dae2def2","322360ac5185a8446d3e0b530b2068bef67cd3d5"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["322360ac5185a8446d3e0b530b2068bef67cd3d5"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"322360ac5185a8446d3e0b530b2068bef67cd3d5":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"]},"commit2Childs":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"51f5280f31484820499077f41fcdfe92d527d9dc":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","322360ac5185a8446d3e0b530b2068bef67cd3d5"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["51f5280f31484820499077f41fcdfe92d527d9dc"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"322360ac5185a8446d3e0b530b2068bef67cd3d5":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}