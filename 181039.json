{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Temp40PostingsReader.SegmentDocsEnumBase#skipTo(int).mjava","commits":[{"id":"38f154048324ef4d19e56e818d0621cafb4fd453","date":1377246558,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Temp40PostingsReader.SegmentDocsEnumBase#skipTo(int).mjava","pathOld":"/dev/null","sourceNew":"    private final int skipTo(int target) throws IOException {\n      if ((target - skipInterval) >= accum && limit >= skipMinimum) {\n\n        // There are enough docs in the posting to have\n        // skip data, and it isn't too close.\n\n        if (skipper == null) {\n          // This is the first time this enum has ever been used for skipping -- do lazy init\n          skipper = new Lucene40SkipListReader(freqIn.clone(), maxSkipLevels, skipInterval);\n        }\n\n        if (!skipped) {\n\n          // This is the first time this posting has\n          // skipped since reset() was called, so now we\n          // load the skip data for this posting\n\n          skipper.init(freqOffset + skipOffset,\n                       freqOffset, 0,\n                       limit, storePayloads, storeOffsets);\n\n          skipped = true;\n        }\n\n        final int newOrd = skipper.skipTo(target); \n\n        if (newOrd > ord) {\n          // Skipper moved\n\n          ord = newOrd;\n          accum = skipper.getDoc();\n          freqIn.seek(skipper.getFreqPointer());\n        }\n      }\n      return scanTo(target);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Temp40PostingsReader.SegmentDocsEnumBase#skipTo(int).mjava","sourceNew":null,"sourceOld":"    private final int skipTo(int target) throws IOException {\n      if ((target - skipInterval) >= accum && limit >= skipMinimum) {\n\n        // There are enough docs in the posting to have\n        // skip data, and it isn't too close.\n\n        if (skipper == null) {\n          // This is the first time this enum has ever been used for skipping -- do lazy init\n          skipper = new Lucene40SkipListReader(freqIn.clone(), maxSkipLevels, skipInterval);\n        }\n\n        if (!skipped) {\n\n          // This is the first time this posting has\n          // skipped since reset() was called, so now we\n          // load the skip data for this posting\n\n          skipper.init(freqOffset + skipOffset,\n                       freqOffset, 0,\n                       limit, storePayloads, storeOffsets);\n\n          skipped = true;\n        }\n\n        final int newOrd = skipper.skipTo(target); \n\n        if (newOrd > ord) {\n          // Skipper moved\n\n          ord = newOrd;\n          accum = skipper.getDoc();\n          freqIn.seek(skipper.getFreqPointer());\n        }\n      }\n      return scanTo(target);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38f154048324ef4d19e56e818d0621cafb4fd453":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["38f154048324ef4d19e56e818d0621cafb4fd453"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"38f154048324ef4d19e56e818d0621cafb4fd453":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38f154048324ef4d19e56e818d0621cafb4fd453","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}