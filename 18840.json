{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread#removeNodeMarker(String,String).mjava","commits":[{"id":"c32a8448145a74a8902798f2e63e322827757ff2","date":1496834422,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread#removeNodeMarker(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void removeNodeMarker(String path, String nodeName) {\n    path = path + \"/\" + nodeName;\n    try {\n      zkClient.delete(path, -1, true);\n      log.debug(\"  -- deleted \" + path);\n    } catch (KeeperException.NoNodeException e) {\n      // ignore\n    } catch (KeeperException | InterruptedException e) {\n      log.warn(\"Error removing old marker \" + path, e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"664ff2b928393480d9655010aa700656b0fcade0","date":1496842764,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread#removeNodeMarker(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void removeNodeMarker(String path, String nodeName) {\n    path = path + \"/\" + nodeName;\n    try {\n      zkClient.delete(path, -1, true);\n      log.debug(\"  -- deleted \" + path);\n    } catch (KeeperException.NoNodeException e) {\n      // ignore\n    } catch (KeeperException | InterruptedException e) {\n      log.warn(\"Error removing old marker \" + path, e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac","date":1503580177,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread#removeNodeMarker(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread#removeNodeMarker(String,String).mjava","sourceNew":"  private void removeNodeMarker(String path, String nodeName) {\n    path = path + \"/\" + nodeName;\n    try {\n      clusterDataProvider.removeData(path, -1);\n      log.debug(\"  -- deleted \" + path);\n    } catch (NoSuchElementException e) {\n      // ignore\n    } catch (Exception e) {\n      log.warn(\"Error removing old marker \" + path, e);\n    }\n  }\n\n","sourceOld":"  private void removeNodeMarker(String path, String nodeName) {\n    path = path + \"/\" + nodeName;\n    try {\n      zkClient.delete(path, -1, true);\n      log.debug(\"  -- deleted \" + path);\n    } catch (KeeperException.NoNodeException e) {\n      // ignore\n    } catch (KeeperException | InterruptedException e) {\n      log.warn(\"Error removing old marker \" + path, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b869898f50ca80263bac2e3ae0949f7700e5c977","date":1503580229,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread#removeNodeMarker(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread#removeNodeMarker(String,String).mjava","sourceNew":"  private void removeNodeMarker(String path, String nodeName) {\n    path = path + \"/\" + nodeName;\n    try {\n      zkClient.delete(path, -1, true);\n      log.debug(\"  -- deleted \" + path);\n    } catch (KeeperException.NoNodeException e) {\n      // ignore\n    } catch (KeeperException | InterruptedException e) {\n      log.warn(\"Error removing old marker \" + path, e);\n    }\n  }\n\n","sourceOld":"  private void removeNodeMarker(String path, String nodeName) {\n    path = path + \"/\" + nodeName;\n    try {\n      clusterDataProvider.removeData(path, -1);\n      log.debug(\"  -- deleted \" + path);\n    } catch (NoSuchElementException e) {\n      // ignore\n    } catch (Exception e) {\n      log.warn(\"Error removing old marker \" + path, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread#removeNodeMarker(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void removeNodeMarker(String path, String nodeName) {\n    path = path + \"/\" + nodeName;\n    try {\n      zkClient.delete(path, -1, true);\n      log.debug(\"  -- deleted \" + path);\n    } catch (KeeperException.NoNodeException e) {\n      // ignore\n    } catch (KeeperException | InterruptedException e) {\n      log.warn(\"Error removing old marker \" + path, e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread#removeNodeMarker(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void removeNodeMarker(String path, String nodeName) {\n    path = path + \"/\" + nodeName;\n    try {\n      zkClient.delete(path, -1, true);\n      log.debug(\"  -- deleted \" + path);\n    } catch (KeeperException.NoNodeException e) {\n      // ignore\n    } catch (KeeperException | InterruptedException e) {\n      log.warn(\"Error removing old marker \" + path, e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85212dad4ed576c7f7e6c165ee19e597b7b4efc8","date":1507997740,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread#removeNodeMarker(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread#removeNodeMarker(String,String).mjava","sourceNew":"  private void removeNodeMarker(String path, String nodeName) {\n    path = path + \"/\" + nodeName;\n    try {\n      dataProvider.getDistribStateManager().removeData(path, -1);\n      log.debug(\"  -- deleted \" + path);\n    } catch (NoSuchElementException e) {\n      // ignore\n    } catch (Exception e) {\n      log.warn(\"Error removing old marker \" + path, e);\n    }\n  }\n\n","sourceOld":"  private void removeNodeMarker(String path, String nodeName) {\n    path = path + \"/\" + nodeName;\n    try {\n      zkClient.delete(path, -1, true);\n      log.debug(\"  -- deleted \" + path);\n    } catch (KeeperException.NoNodeException e) {\n      // ignore\n    } catch (KeeperException | InterruptedException e) {\n      log.warn(\"Error removing old marker \" + path, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread#removeNodeMarker(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread#removeNodeMarker(String,String).mjava","sourceNew":"  private void removeNodeMarker(String path, String nodeName) {\n    path = path + \"/\" + nodeName;\n    try {\n      cloudManager.getDistribStateManager().removeData(path, -1);\n      log.debug(\"  -- deleted \" + path);\n    } catch (NoSuchElementException e) {\n      // ignore\n    } catch (Exception e) {\n      log.warn(\"Error removing old marker \" + path, e);\n    }\n  }\n\n","sourceOld":"  private void removeNodeMarker(String path, String nodeName) {\n    path = path + \"/\" + nodeName;\n    try {\n      dataProvider.getDistribStateManager().removeData(path, -1);\n      log.debug(\"  -- deleted \" + path);\n    } catch (NoSuchElementException e) {\n      // ignore\n    } catch (Exception e) {\n      log.warn(\"Error removing old marker \" + path, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7fb1186f5b61e0b74289e6786df8cbecfa471bc","date":1545308188,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread#removeNodeMarker(String,String).mjava","sourceNew":null,"sourceOld":"  private void removeNodeMarker(String path, String nodeName) {\n    path = path + \"/\" + nodeName;\n    try {\n      cloudManager.getDistribStateManager().removeData(path, -1);\n      log.debug(\"  -- deleted \" + path);\n    } catch (NoSuchElementException e) {\n      // ignore\n    } catch (Exception e) {\n      log.warn(\"Error removing old marker \" + path, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f7fb1186f5b61e0b74289e6786df8cbecfa471bc":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b869898f50ca80263bac2e3ae0949f7700e5c977"],"c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac":["664ff2b928393480d9655010aa700656b0fcade0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["560c18d71dad43d675158783c3840f8c80d6d39c"],"b869898f50ca80263bac2e3ae0949f7700e5c977":["c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac"],"c32a8448145a74a8902798f2e63e322827757ff2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"560c18d71dad43d675158783c3840f8c80d6d39c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f7fb1186f5b61e0b74289e6786df8cbecfa471bc"],"664ff2b928393480d9655010aa700656b0fcade0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c32a8448145a74a8902798f2e63e322827757ff2"]},"commit2Childs":{"f7fb1186f5b61e0b74289e6786df8cbecfa471bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac":["b869898f50ca80263bac2e3ae0949f7700e5c977"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c304e97e7c1d472bc70e801b35ee78583916c6cd","c32a8448145a74a8902798f2e63e322827757ff2","560c18d71dad43d675158783c3840f8c80d6d39c","664ff2b928393480d9655010aa700656b0fcade0"],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"b869898f50ca80263bac2e3ae0949f7700e5c977":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"c32a8448145a74a8902798f2e63e322827757ff2":["664ff2b928393480d9655010aa700656b0fcade0"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["f7fb1186f5b61e0b74289e6786df8cbecfa471bc"],"560c18d71dad43d675158783c3840f8c80d6d39c":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"664ff2b928393480d9655010aa700656b0fcade0":["c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}