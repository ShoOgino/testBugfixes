{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setMergePolicy(MergePolicy).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setMergePolicy(MergePolicy).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#setMergePolicy(MergePolicy).mjava","sourceNew":"  /**\n   * Expert: {@link MergePolicy} is invoked whenever there are changes to the\n   * segments in the index. Its role is to select which merges to do, if any,\n   * and return a {@link MergePolicy.MergeSpecification} describing the merges.\n   * It also selects merges to do for forceMerge. (The default is\n   * {@link LogByteSizeMergePolicy}.\n   *\n   * <p>Only takes effect when IndexWriter is first created. */\n  public IndexWriterConfig setMergePolicy(MergePolicy mergePolicy) {\n    this.mergePolicy = mergePolicy == null ? new LogByteSizeMergePolicy() : mergePolicy;\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Expert: {@link MergePolicy} is invoked whenever there are changes to the\n   * segments in the index. Its role is to select which merges to do, if any,\n   * and return a {@link MergePolicy.MergeSpecification} describing the merges.\n   * It also selects merges to do for forceMerge. (The default is\n   * {@link LogByteSizeMergePolicy}.\n   *\n   * <p>Only takes effect when IndexWriter is first created. */\n  public IndexWriterConfig setMergePolicy(MergePolicy mergePolicy) {\n    this.mergePolicy = mergePolicy == null ? new LogByteSizeMergePolicy() : mergePolicy;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3971a049eab9d119ba1497d7ee89abc1a9a96278","date":1363282186,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setMergePolicy(MergePolicy).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setMergePolicy(MergePolicy).mjava","sourceNew":"  /**\n   * Expert: {@link MergePolicy} is invoked whenever there are changes to the\n   * segments in the index. Its role is to select which merges to do, if any,\n   * and return a {@link MergePolicy.MergeSpecification} describing the merges.\n   * It also selects merges to do for forceMerge.\n   *\n   * <p>Only takes effect when IndexWriter is first created. */\n  public IndexWriterConfig setMergePolicy(MergePolicy mergePolicy) {\n    if (mergePolicy == null) {\n      throw new IllegalArgumentException(\"mergePolicy must not be null\");\n    }\n    this.mergePolicy = mergePolicy;\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Expert: {@link MergePolicy} is invoked whenever there are changes to the\n   * segments in the index. Its role is to select which merges to do, if any,\n   * and return a {@link MergePolicy.MergeSpecification} describing the merges.\n   * It also selects merges to do for forceMerge. (The default is\n   * {@link LogByteSizeMergePolicy}.\n   *\n   * <p>Only takes effect when IndexWriter is first created. */\n  public IndexWriterConfig setMergePolicy(MergePolicy mergePolicy) {\n    this.mergePolicy = mergePolicy == null ? new LogByteSizeMergePolicy() : mergePolicy;\n    return this;\n  }\n\n","bugFix":["7ab99e8c71442b92c320e218141dee04a9b91ce8","d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee59f646cf24586a449cad77391a60a3ac8d8959","date":1408015131,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setMergePolicy(MergePolicy).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setMergePolicy(MergePolicy).mjava","sourceNew":"  @Override\n  public IndexWriterConfig setMergePolicy(MergePolicy mergePolicy) {\n    return (IndexWriterConfig) super.setMergePolicy(mergePolicy);\n  }\n\n","sourceOld":"  /**\n   * Expert: {@link MergePolicy} is invoked whenever there are changes to the\n   * segments in the index. Its role is to select which merges to do, if any,\n   * and return a {@link MergePolicy.MergeSpecification} describing the merges.\n   * It also selects merges to do for forceMerge.\n   *\n   * <p>Only takes effect when IndexWriter is first created. */\n  public IndexWriterConfig setMergePolicy(MergePolicy mergePolicy) {\n    if (mergePolicy == null) {\n      throw new IllegalArgumentException(\"mergePolicy must not be null\");\n    }\n    this.mergePolicy = mergePolicy;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee59f646cf24586a449cad77391a60a3ac8d8959":["3971a049eab9d119ba1497d7ee89abc1a9a96278"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3971a049eab9d119ba1497d7ee89abc1a9a96278":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee59f646cf24586a449cad77391a60a3ac8d8959"]},"commit2Childs":{"ee59f646cf24586a449cad77391a60a3ac8d8959":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3971a049eab9d119ba1497d7ee89abc1a9a96278"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3971a049eab9d119ba1497d7ee89abc1a9a96278":["ee59f646cf24586a449cad77391a60a3ac8d8959"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}