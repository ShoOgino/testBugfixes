{"path":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaDynamicFieldResource#testAddDynamicFieldWithMulipleOptions().mjava","commits":[{"id":"37e5b631c49de2fb88f245c36ecf87650cfa4a24","date":1409693105,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaDynamicFieldResource#testAddDynamicFieldWithMulipleOptions().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAddDynamicFieldWithMulipleOptions() throws Exception {\n    assertQ(\"/schema/dynamicfields/newdynamicfield_*?indent=on&wt=xml\",\n            \"count(/response/lst[@name='dynamicField']) = 0\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '404'\",\n            \"/response/lst[@name='error']/int[@name='code'] = '404'\");\n\n    assertJPut(\"/schema/dynamicfields/newdynamicfield_*\",\n               json(\"{'type':'text_en','stored':true,'indexed':false}\"),\n               \"/responseHeader/status==0\");\n\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.exists());\n    String managedSchemaContents = FileUtils.readFileToString(managedSchemaFile, \"UTF-8\");\n    Pattern newdynamicfieldStoredTrueIndexedFalsePattern\n        = Pattern.compile( \"<dynamicField name=\\\"newdynamicfield_\\\\*\\\" type=\\\"text_en\\\"\"\n                         + \"(?=.*stored=\\\"true\\\")(?=.*indexed=\\\"false\\\").*/>\");\n    assertTrue(newdynamicfieldStoredTrueIndexedFalsePattern.matcher(managedSchemaContents).find());\n\n    assertQ(\"/schema/dynamicfields/newdynamicfield_*?indent=on&wt=xml\",\n            \"count(/response/lst[@name='dynamicField']) = 1\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '0'\",\n            \"/response/lst[@name='dynamicField']/str[@name='name'] = 'newdynamicfield_*'\",\n            \"/response/lst[@name='dynamicField']/str[@name='type'] = 'text_en'\",\n            \"/response/lst[@name='dynamicField']/bool[@name='indexed'] = 'false'\",\n            \"/response/lst[@name='dynamicField']/bool[@name='stored'] = 'true'\");\n\n    assertU(adoc(\"newdynamicfield_A\", \"value1 value2\", \"id\", \"1234\"));\n    assertU(commit());\n\n    assertQ(\"/schema/dynamicfields/newdynamicfield2_*?indent=on&wt=xml\",\n            \"count(/response/lst[@name='dynamicField']) = 0\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '404'\",\n            \"/response/lst[@name='error']/int[@name='code'] = '404'\");\n\n    assertJPut(\"/schema/dynamicfields/newdynamicfield2_*\",\n               json(\"{'type':'text_en','stored':true,'indexed':true,'multiValued':true}\"),\n               \"/responseHeader/status==0\");\n\n    managedSchemaContents = FileUtils.readFileToString(managedSchemaFile, \"UTF-8\");\n    Pattern newdynamicfield2StoredTrueIndexedTrueMultiValuedTruePattern\n        = Pattern.compile( \"<dynamicField name=\\\"newdynamicfield2_\\\\*\\\" type=\\\"text_en\\\" \"\n                         + \"(?=.*stored=\\\"true\\\")(?=.*indexed=\\\"true\\\")(?=.*multiValued=\\\"true\\\").*/>\");\n    assertTrue(newdynamicfield2StoredTrueIndexedTrueMultiValuedTruePattern.matcher(managedSchemaContents).find());\n\n    assertQ(\"/schema/dynamicfields/newdynamicfield2_*?indent=on&wt=xml\",\n            \"count(/response/lst[@name='dynamicField']) = 1\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '0'\",\n            \"/response/lst[@name='dynamicField']/str[@name='name'] = 'newdynamicfield2_*'\",\n            \"/response/lst[@name='dynamicField']/str[@name='type'] = 'text_en'\",\n            \"/response/lst[@name='dynamicField']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='dynamicField']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='dynamicField']/bool[@name='multiValued'] = 'true'\");\n\n    assertU(adoc(\"newdynamicfield2_A\", \"value1 value2\", \"newdynamicfield2_A\", \"value3 value4\", \"id\", \"5678\"));\n    assertU(commit());\n\n    assertQ(\"/select?q=newdynamicfield2_A:value3\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '0'\",\n            \"/response/result[@name='response'][@numFound='1']\",\n            \"count(/response/result[@name='response']/doc) = 1\",\n            \"/response/result[@name='response']/doc/str[@name='id'][.='5678']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f494bc636a1302995e4930fdccd371eeda452f87","date":1457370876,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaDynamicFieldResource#testAddDynamicFieldWithMulipleOptions().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testAddDynamicFieldWithMulipleOptions() throws Exception {\n    assertQ(\"/schema/dynamicfields/newdynamicfield_*?indent=on&wt=xml\",\n            \"count(/response/lst[@name='dynamicField']) = 0\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '404'\",\n            \"/response/lst[@name='error']/int[@name='code'] = '404'\");\n\n    assertJPut(\"/schema/dynamicfields/newdynamicfield_*\",\n               json(\"{'type':'text_en','stored':true,'indexed':false}\"),\n               \"/responseHeader/status==0\");\n\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.exists());\n    String managedSchemaContents = FileUtils.readFileToString(managedSchemaFile, \"UTF-8\");\n    Pattern newdynamicfieldStoredTrueIndexedFalsePattern\n        = Pattern.compile( \"<dynamicField name=\\\"newdynamicfield_\\\\*\\\" type=\\\"text_en\\\"\"\n                         + \"(?=.*stored=\\\"true\\\")(?=.*indexed=\\\"false\\\").*/>\");\n    assertTrue(newdynamicfieldStoredTrueIndexedFalsePattern.matcher(managedSchemaContents).find());\n\n    assertQ(\"/schema/dynamicfields/newdynamicfield_*?indent=on&wt=xml\",\n            \"count(/response/lst[@name='dynamicField']) = 1\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '0'\",\n            \"/response/lst[@name='dynamicField']/str[@name='name'] = 'newdynamicfield_*'\",\n            \"/response/lst[@name='dynamicField']/str[@name='type'] = 'text_en'\",\n            \"/response/lst[@name='dynamicField']/bool[@name='indexed'] = 'false'\",\n            \"/response/lst[@name='dynamicField']/bool[@name='stored'] = 'true'\");\n\n    assertU(adoc(\"newdynamicfield_A\", \"value1 value2\", \"id\", \"1234\"));\n    assertU(commit());\n\n    assertQ(\"/schema/dynamicfields/newdynamicfield2_*?indent=on&wt=xml\",\n            \"count(/response/lst[@name='dynamicField']) = 0\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '404'\",\n            \"/response/lst[@name='error']/int[@name='code'] = '404'\");\n\n    assertJPut(\"/schema/dynamicfields/newdynamicfield2_*\",\n               json(\"{'type':'text_en','stored':true,'indexed':true,'multiValued':true}\"),\n               \"/responseHeader/status==0\");\n\n    managedSchemaContents = FileUtils.readFileToString(managedSchemaFile, \"UTF-8\");\n    Pattern newdynamicfield2StoredTrueIndexedTrueMultiValuedTruePattern\n        = Pattern.compile( \"<dynamicField name=\\\"newdynamicfield2_\\\\*\\\" type=\\\"text_en\\\" \"\n                         + \"(?=.*stored=\\\"true\\\")(?=.*indexed=\\\"true\\\")(?=.*multiValued=\\\"true\\\").*/>\");\n    assertTrue(newdynamicfield2StoredTrueIndexedTrueMultiValuedTruePattern.matcher(managedSchemaContents).find());\n\n    assertQ(\"/schema/dynamicfields/newdynamicfield2_*?indent=on&wt=xml\",\n            \"count(/response/lst[@name='dynamicField']) = 1\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '0'\",\n            \"/response/lst[@name='dynamicField']/str[@name='name'] = 'newdynamicfield2_*'\",\n            \"/response/lst[@name='dynamicField']/str[@name='type'] = 'text_en'\",\n            \"/response/lst[@name='dynamicField']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='dynamicField']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='dynamicField']/bool[@name='multiValued'] = 'true'\");\n\n    assertU(adoc(\"newdynamicfield2_A\", \"value1 value2\", \"newdynamicfield2_A\", \"value3 value4\", \"id\", \"5678\"));\n    assertU(commit());\n\n    assertQ(\"/select?q=newdynamicfield2_A:value3\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '0'\",\n            \"/response/result[@name='response'][@numFound='1']\",\n            \"count(/response/result[@name='response']/doc) = 1\",\n            \"/response/result[@name='response']/doc/str[@name='id'][.='5678']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f494bc636a1302995e4930fdccd371eeda452f87":["37e5b631c49de2fb88f245c36ecf87650cfa4a24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"37e5b631c49de2fb88f245c36ecf87650cfa4a24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f494bc636a1302995e4930fdccd371eeda452f87"]},"commit2Childs":{"f494bc636a1302995e4930fdccd371eeda452f87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37e5b631c49de2fb88f245c36ecf87650cfa4a24"],"37e5b631c49de2fb88f245c36ecf87650cfa4a24":["f494bc636a1302995e4930fdccd371eeda452f87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}