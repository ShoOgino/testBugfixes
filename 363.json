{"path":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#filterPrefixCodedLongs(TermsEnum).mjava","commits":[{"id":"edc944077593063d718a895a9d7afdf6895d6685","date":1360052675,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#filterPrefixCodedLongs(TermsEnum).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Filters the given {@link TermsEnum} by accepting only prefix coded 64 bit\n   * terms with a shift value of <tt>0</tt>.\n   * \n   * @param termsEnum\n   *          the terms enum to filter\n   * @return a filtered {@link TermsEnum} that only returns prefix coded 64 bit\n   *         terms with a shift value of <tt>0</tt>.\n   */\n  public static TermsEnum filterPrefixCodedLongs(TermsEnum termsEnum) {\n    return new FilteredTermsEnum(termsEnum, false) {\n      @Override\n      protected AcceptStatus accept(BytesRef term) {\n        return NumericUtils.getPrefixCodedLongShift(term) == 0 ? AcceptStatus.YES : AcceptStatus.END;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e4d4ec39bf5396230748ca859ff05ab024b6fc5","date":1360112310,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#filterPrefixCodedLongs(TermsEnum).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Filters the given {@link TermsEnum} by accepting only prefix coded 64 bit\n   * terms with a shift value of <tt>0</tt>.\n   * \n   * @param termsEnum\n   *          the terms enum to filter\n   * @return a filtered {@link TermsEnum} that only returns prefix coded 64 bit\n   *         terms with a shift value of <tt>0</tt>.\n   */\n  public static TermsEnum filterPrefixCodedLongs(TermsEnum termsEnum) {\n    return new FilteredTermsEnum(termsEnum, false) {\n      @Override\n      protected AcceptStatus accept(BytesRef term) {\n        return NumericUtils.getPrefixCodedLongShift(term) == 0 ? AcceptStatus.YES : AcceptStatus.END;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0974f33be0e2189e71f36b67f1017f4072b1a126","date":1398347867,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#filterPrefixCodedLongs(TermsEnum).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#filterPrefixCodedLongs(TermsEnum).mjava","sourceNew":"  /**\n   * Filters the given {@link TermsEnum} by accepting only prefix coded 64 bit\n   * terms with a shift value of <tt>0</tt>.\n   * \n   * @param termsEnum\n   *          the terms enum to filter\n   * @return a filtered {@link TermsEnum} that only returns prefix coded 64 bit\n   *         terms with a shift value of <tt>0</tt>.\n   */\n  public static TermsEnum filterPrefixCodedLongs(TermsEnum termsEnum) {\n    return new SeekingNumericFilteredTermsEnum(termsEnum) {\n\n      @Override\n      protected AcceptStatus accept(BytesRef term) {\n        return NumericUtils.getPrefixCodedLongShift(term) == 0 ? AcceptStatus.YES : AcceptStatus.END;\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * Filters the given {@link TermsEnum} by accepting only prefix coded 64 bit\n   * terms with a shift value of <tt>0</tt>.\n   * \n   * @param termsEnum\n   *          the terms enum to filter\n   * @return a filtered {@link TermsEnum} that only returns prefix coded 64 bit\n   *         terms with a shift value of <tt>0</tt>.\n   */\n  public static TermsEnum filterPrefixCodedLongs(TermsEnum termsEnum) {\n    return new FilteredTermsEnum(termsEnum, false) {\n      @Override\n      protected AcceptStatus accept(BytesRef term) {\n        return NumericUtils.getPrefixCodedLongShift(term) == 0 ? AcceptStatus.YES : AcceptStatus.END;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#filterPrefixCodedLongs(TermsEnum).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#filterPrefixCodedLongs(TermsEnum).mjava","sourceNew":"  /**\n   * Filters the given {@link TermsEnum} by accepting only prefix coded 64 bit\n   * terms with a shift value of <tt>0</tt>.\n   * \n   * @param termsEnum\n   *          the terms enum to filter\n   * @return a filtered {@link TermsEnum} that only returns prefix coded 64 bit\n   *         terms with a shift value of <tt>0</tt>.\n   */\n  public static TermsEnum filterPrefixCodedLongs(TermsEnum termsEnum) {\n    return new SeekingNumericFilteredTermsEnum(termsEnum) {\n\n      @Override\n      protected AcceptStatus accept(BytesRef term) {\n        return NumericUtils.getPrefixCodedLongShift(term) == 0 ? AcceptStatus.YES : AcceptStatus.END;\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * Filters the given {@link TermsEnum} by accepting only prefix coded 64 bit\n   * terms with a shift value of <tt>0</tt>.\n   * \n   * @param termsEnum\n   *          the terms enum to filter\n   * @return a filtered {@link TermsEnum} that only returns prefix coded 64 bit\n   *         terms with a shift value of <tt>0</tt>.\n   */\n  public static TermsEnum filterPrefixCodedLongs(TermsEnum termsEnum) {\n    return new FilteredTermsEnum(termsEnum, false) {\n      @Override\n      protected AcceptStatus accept(BytesRef term) {\n        return NumericUtils.getPrefixCodedLongShift(term) == 0 ? AcceptStatus.YES : AcceptStatus.END;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LegacyNumericUtils#filterPrefixCodedLongs(TermsEnum).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#filterPrefixCodedLongs(TermsEnum).mjava","sourceNew":"  /**\n   * Filters the given {@link TermsEnum} by accepting only prefix coded 64 bit\n   * terms with a shift value of <tt>0</tt>.\n   * \n   * @param termsEnum\n   *          the terms enum to filter\n   * @return a filtered {@link TermsEnum} that only returns prefix coded 64 bit\n   *         terms with a shift value of <tt>0</tt>.\n   */\n  public static TermsEnum filterPrefixCodedLongs(TermsEnum termsEnum) {\n    return new SeekingNumericFilteredTermsEnum(termsEnum) {\n\n      @Override\n      protected AcceptStatus accept(BytesRef term) {\n        return LegacyNumericUtils.getPrefixCodedLongShift(term) == 0 ? AcceptStatus.YES : AcceptStatus.END;\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * Filters the given {@link TermsEnum} by accepting only prefix coded 64 bit\n   * terms with a shift value of <tt>0</tt>.\n   * \n   * @param termsEnum\n   *          the terms enum to filter\n   * @return a filtered {@link TermsEnum} that only returns prefix coded 64 bit\n   *         terms with a shift value of <tt>0</tt>.\n   */\n  public static TermsEnum filterPrefixCodedLongs(TermsEnum termsEnum) {\n    return new SeekingNumericFilteredTermsEnum(termsEnum) {\n\n      @Override\n      protected AcceptStatus accept(BytesRef term) {\n        return NumericUtils.getPrefixCodedLongShift(term) == 0 ? AcceptStatus.YES : AcceptStatus.END;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0974f33be0e2189e71f36b67f1017f4072b1a126":["edc944077593063d718a895a9d7afdf6895d6685"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["edc944077593063d718a895a9d7afdf6895d6685","0974f33be0e2189e71f36b67f1017f4072b1a126"],"3e4d4ec39bf5396230748ca859ff05ab024b6fc5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","edc944077593063d718a895a9d7afdf6895d6685"],"edc944077593063d718a895a9d7afdf6895d6685":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"770342641f7b505eaa8dccdc666158bff2419109":["0974f33be0e2189e71f36b67f1017f4072b1a126"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["770342641f7b505eaa8dccdc666158bff2419109"]},"commit2Childs":{"0974f33be0e2189e71f36b67f1017f4072b1a126":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","770342641f7b505eaa8dccdc666158bff2419109"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"3e4d4ec39bf5396230748ca859ff05ab024b6fc5":[],"edc944077593063d718a895a9d7afdf6895d6685":["0974f33be0e2189e71f36b67f1017f4072b1a126","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","3e4d4ec39bf5396230748ca859ff05ab024b6fc5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e4d4ec39bf5396230748ca859ff05ab024b6fc5","edc944077593063d718a895a9d7afdf6895d6685"],"770342641f7b505eaa8dccdc666158bff2419109":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","3e4d4ec39bf5396230748ca859ff05ab024b6fc5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}