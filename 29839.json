{"path":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed(Arc[T][]).mjava","commits":[{"id":"d943163030bbd7a9caf93cb5fea92257390a2a99","date":1403094254,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed(Arc[T][]).mjava","pathOld":"/dev/null","sourceNew":"  private long ramBytesUsed(Arc<T>[] arcs) {\n    long size = 0;\n    if (arcs != null) {\n      size += RamUsageEstimator.shallowSizeOf(arcs);\n      for (Arc<T> arc : arcs) {\n        if (arc != null) {\n          size += ARC_SHALLOW_RAM_BYTES_USED;\n          if (arc.output != null) {\n            size += outputs.ramBytesUsed(arc.output);\n          }\n          if (arc.nextFinalOutput != null) {\n            size += outputs.ramBytesUsed(arc.nextFinalOutput);\n          }\n        }\n      }\n    }\n    return size;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"951532c2a52c30e47b579ee030c723f3c4f8d0a7","date":1403100035,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed(Arc[T][]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed(Arc[T][]).mjava","sourceNew":"  private long ramBytesUsed(Arc<T>[] arcs) {\n    long size = 0;\n    if (arcs != null) {\n      size += RamUsageEstimator.shallowSizeOf(arcs);\n      for (Arc<T> arc : arcs) {\n        if (arc != null) {\n          size += ARC_SHALLOW_RAM_BYTES_USED;\n          if (arc.output != null && arc.output != outputs.getNoOutput()) {\n            size += outputs.ramBytesUsed(arc.output);\n          }\n          if (arc.nextFinalOutput != null && arc.nextFinalOutput != outputs.getNoOutput()) {\n            size += outputs.ramBytesUsed(arc.nextFinalOutput);\n          }\n        }\n      }\n    }\n    return size;\n  }\n\n","sourceOld":"  private long ramBytesUsed(Arc<T>[] arcs) {\n    long size = 0;\n    if (arcs != null) {\n      size += RamUsageEstimator.shallowSizeOf(arcs);\n      for (Arc<T> arc : arcs) {\n        if (arc != null) {\n          size += ARC_SHALLOW_RAM_BYTES_USED;\n          if (arc.output != null) {\n            size += outputs.ramBytesUsed(arc.output);\n          }\n          if (arc.nextFinalOutput != null) {\n            size += outputs.ramBytesUsed(arc.nextFinalOutput);\n          }\n        }\n      }\n    }\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e57c73924f3b8c19defa62e96bfa34a4922d49c2","date":1403106358,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed(Arc[T][]).mjava","pathOld":"/dev/null","sourceNew":"  private long ramBytesUsed(Arc<T>[] arcs) {\n    long size = 0;\n    if (arcs != null) {\n      size += RamUsageEstimator.shallowSizeOf(arcs);\n      for (Arc<T> arc : arcs) {\n        if (arc != null) {\n          size += ARC_SHALLOW_RAM_BYTES_USED;\n          if (arc.output != null && arc.output != outputs.getNoOutput()) {\n            size += outputs.ramBytesUsed(arc.output);\n          }\n          if (arc.nextFinalOutput != null && arc.nextFinalOutput != outputs.getNoOutput()) {\n            size += outputs.ramBytesUsed(arc.nextFinalOutput);\n          }\n        }\n      }\n    }\n    return size;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54204c8a3ca26aeafd273139fc29baf70d0f6786","date":1564170395,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed(Arc[T][]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed(Arc[T][]).mjava","sourceNew":"  private long ramBytesUsed(Arc<T>[] arcs) {\n    long size = 0;\n    if (arcs != null) {\n      size += RamUsageEstimator.shallowSizeOf(arcs);\n      for (Arc<T> arc : arcs) {\n        if (arc != null) {\n          size += ARC_SHALLOW_RAM_BYTES_USED;\n          if (arc.output() != null && arc.output() != outputs.getNoOutput()) {\n            size += outputs.ramBytesUsed(arc.output());\n          }\n          if (arc.nextFinalOutput() != null && arc.nextFinalOutput() != outputs.getNoOutput()) {\n            size += outputs.ramBytesUsed(arc.nextFinalOutput());\n          }\n        }\n      }\n    }\n    return size;\n  }\n\n","sourceOld":"  private long ramBytesUsed(Arc<T>[] arcs) {\n    long size = 0;\n    if (arcs != null) {\n      size += RamUsageEstimator.shallowSizeOf(arcs);\n      for (Arc<T> arc : arcs) {\n        if (arc != null) {\n          size += ARC_SHALLOW_RAM_BYTES_USED;\n          if (arc.output != null && arc.output != outputs.getNoOutput()) {\n            size += outputs.ramBytesUsed(arc.output);\n          }\n          if (arc.nextFinalOutput != null && arc.nextFinalOutput != outputs.getNoOutput()) {\n            size += outputs.ramBytesUsed(arc.nextFinalOutput);\n          }\n        }\n      }\n    }\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed(Arc[T][]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed(Arc[T][]).mjava","sourceNew":"  private long ramBytesUsed(Arc<T>[] arcs) {\n    long size = 0;\n    if (arcs != null) {\n      size += RamUsageEstimator.shallowSizeOf(arcs);\n      for (Arc<T> arc : arcs) {\n        if (arc != null) {\n          size += ARC_SHALLOW_RAM_BYTES_USED;\n          if (arc.output() != null && arc.output() != outputs.getNoOutput()) {\n            size += outputs.ramBytesUsed(arc.output());\n          }\n          if (arc.nextFinalOutput() != null && arc.nextFinalOutput() != outputs.getNoOutput()) {\n            size += outputs.ramBytesUsed(arc.nextFinalOutput());\n          }\n        }\n      }\n    }\n    return size;\n  }\n\n","sourceOld":"  private long ramBytesUsed(Arc<T>[] arcs) {\n    long size = 0;\n    if (arcs != null) {\n      size += RamUsageEstimator.shallowSizeOf(arcs);\n      for (Arc<T> arc : arcs) {\n        if (arc != null) {\n          size += ARC_SHALLOW_RAM_BYTES_USED;\n          if (arc.output != null && arc.output != outputs.getNoOutput()) {\n            size += outputs.ramBytesUsed(arc.output);\n          }\n          if (arc.nextFinalOutput != null && arc.nextFinalOutput != outputs.getNoOutput()) {\n            size += outputs.ramBytesUsed(arc.nextFinalOutput);\n          }\n        }\n      }\n    }\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfe04a006c42318f41df58bdd061cc1065b5f688","date":1574780842,"type":4,"author":"Bruno Roustant","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed(Arc[T][]).mjava","sourceNew":null,"sourceOld":"  private long ramBytesUsed(Arc<T>[] arcs) {\n    long size = 0;\n    if (arcs != null) {\n      size += RamUsageEstimator.shallowSizeOf(arcs);\n      for (Arc<T> arc : arcs) {\n        if (arc != null) {\n          size += ARC_SHALLOW_RAM_BYTES_USED;\n          if (arc.output() != null && arc.output() != outputs.getNoOutput()) {\n            size += outputs.ramBytesUsed(arc.output());\n          }\n          if (arc.nextFinalOutput() != null && arc.nextFinalOutput() != outputs.getNoOutput()) {\n            size += outputs.ramBytesUsed(arc.nextFinalOutput());\n          }\n        }\n      }\n    }\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54204c8a3ca26aeafd273139fc29baf70d0f6786":["951532c2a52c30e47b579ee030c723f3c4f8d0a7"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","951532c2a52c30e47b579ee030c723f3c4f8d0a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d943163030bbd7a9caf93cb5fea92257390a2a99":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"951532c2a52c30e47b579ee030c723f3c4f8d0a7":["d943163030bbd7a9caf93cb5fea92257390a2a99"],"f8061ddd97f3352007d927dae445884a6f3d857b":["951532c2a52c30e47b579ee030c723f3c4f8d0a7","54204c8a3ca26aeafd273139fc29baf70d0f6786"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cfe04a006c42318f41df58bdd061cc1065b5f688"],"cfe04a006c42318f41df58bdd061cc1065b5f688":["54204c8a3ca26aeafd273139fc29baf70d0f6786"]},"commit2Childs":{"54204c8a3ca26aeafd273139fc29baf70d0f6786":["f8061ddd97f3352007d927dae445884a6f3d857b","cfe04a006c42318f41df58bdd061cc1065b5f688"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","d943163030bbd7a9caf93cb5fea92257390a2a99"],"d943163030bbd7a9caf93cb5fea92257390a2a99":["951532c2a52c30e47b579ee030c723f3c4f8d0a7"],"951532c2a52c30e47b579ee030c723f3c4f8d0a7":["54204c8a3ca26aeafd273139fc29baf70d0f6786","e57c73924f3b8c19defa62e96bfa34a4922d49c2","f8061ddd97f3352007d927dae445884a6f3d857b"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"cfe04a006c42318f41df58bdd061cc1065b5f688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}