{"path":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Closeable...).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Closeable...).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/IOUtils#close(Closeable...).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s.  Some of the\n   * <tt>Closeable</tt>s may be null; they are\n   * ignored.  After everything is closed, the method either\n   * throws the first exception it hit while closing, or\n   * completes normally if there were no exceptions.\n   * \n   * @param objects\n   *          objects to call <tt>close()</tt> on\n   */\n  public static void close(Closeable... objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (th != null) {\n      if (th instanceof IOException) throw (IOException) th;\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes all given <tt>Closeable</tt>s.  Some of the\n   * <tt>Closeable</tt>s may be null; they are\n   * ignored.  After everything is closed, the method either\n   * throws the first exception it hit while closing, or\n   * completes normally if there were no exceptions.\n   * \n   * @param objects\n   *          objects to call <tt>close()</tt> on\n   */\n  public static void close(Closeable... objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (th != null) {\n      if (th instanceof IOException) throw (IOException) th;\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666","date":1381263930,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Closeable...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Closeable...).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s.  Some of the\n   * <tt>Closeable</tt>s may be null; they are\n   * ignored.  After everything is closed, the method either\n   * throws the first exception it hit while closing, or\n   * completes normally if there were no exceptions.\n   * \n   * @param objects\n   *          objects to call <tt>close()</tt> on\n   */\n  public static void close(Closeable... objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    reThrow(th);\n  }\n\n","sourceOld":"  /**\n   * Closes all given <tt>Closeable</tt>s.  Some of the\n   * <tt>Closeable</tt>s may be null; they are\n   * ignored.  After everything is closed, the method either\n   * throws the first exception it hit while closing, or\n   * completes normally if there were no exceptions.\n   * \n   * @param objects\n   *          objects to call <tt>close()</tt> on\n   */\n  public static void close(Closeable... objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (th != null) {\n      if (th instanceof IOException) throw (IOException) th;\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cbc3688252d4a8045d69a164236b2cf87b721f17","date":1409846185,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Closeable...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Closeable...).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s.  Some of the\n   * <tt>Closeable</tt>s may be null; they are\n   * ignored.  After everything is closed, the method either\n   * throws the first exception it hit while closing, or\n   * completes normally if there were no exceptions.\n   * \n   * @param objects\n   *          objects to call <tt>close()</tt> on\n   */\n  public static void close(Closeable... objects) throws IOException {\n    close(Arrays.asList(objects));\n  }\n\n","sourceOld":"  /**\n   * Closes all given <tt>Closeable</tt>s.  Some of the\n   * <tt>Closeable</tt>s may be null; they are\n   * ignored.  After everything is closed, the method either\n   * throws the first exception it hit while closing, or\n   * completes normally if there were no exceptions.\n   * \n   * @param objects\n   *          objects to call <tt>close()</tt> on\n   */\n  public static void close(Closeable... objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    reThrow(th);\n  }\n\n","bugFix":["8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666","24230fe54121f9be9d85f2c2067536296785e421"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e3751ad4cc85eb979419cf5469dfba266eae56a","date":1581046252,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Closeable...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Closeable...).mjava","sourceNew":"  /**\n   * Closes all given <code>Closeable</code>s.  Some of the\n   * <code>Closeable</code>s may be null; they are\n   * ignored.  After everything is closed, the method either\n   * throws the first exception it hit while closing, or\n   * completes normally if there were no exceptions.\n   * \n   * @param objects\n   *          objects to call <code>close()</code> on\n   */\n  public static void close(Closeable... objects) throws IOException {\n    close(Arrays.asList(objects));\n  }\n\n","sourceOld":"  /**\n   * Closes all given <tt>Closeable</tt>s.  Some of the\n   * <tt>Closeable</tt>s may be null; they are\n   * ignored.  After everything is closed, the method either\n   * throws the first exception it hit while closing, or\n   * completes normally if there were no exceptions.\n   * \n   * @param objects\n   *          objects to call <tt>close()</tt> on\n   */\n  public static void close(Closeable... objects) throws IOException {\n    close(Arrays.asList(objects));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9e3751ad4cc85eb979419cf5469dfba266eae56a":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e3751ad4cc85eb979419cf5469dfba266eae56a"]},"commit2Childs":{"8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"9e3751ad4cc85eb979419cf5469dfba266eae56a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["9e3751ad4cc85eb979419cf5469dfba266eae56a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}