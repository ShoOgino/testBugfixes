{"path":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureExtractionFromMultipleSegments#before().mjava","commits":[{"id":"58c36d634c9789cb739fbd175c1a8d50b3303f6b","date":1478022614,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureExtractionFromMultipleSegments#before().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void before() throws Exception {\n    // solrconfig-multiseg.xml contains the merge policy to restrict merging\n    setuptest(\"solrconfig-multiseg.xml\", \"schema.xml\");\n    // index 400 documents\n    for(int i = 0; i<400;i=i+20) {\n      assertU(adoc(\"id\", new Integer(i).toString(),   \"popularity\", \"201\", \"description\", \"apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+1).toString(), \"popularity\", \"201\", \"description\", \"d \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n\n      assertU(adoc(\"id\", new Integer(i+2).toString(), \"popularity\", \"201\", \"description\", \"apple is a company too \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+3).toString(), \"popularity\", \"201\", \"description\", \"new york city is big apple \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n\n      assertU(adoc(\"id\", new Integer(i+6).toString(), \"popularity\", \"301\", \"description\", \"function name \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+7).toString(), \"popularity\", \"301\", \"description\", \"function \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", new Integer(i+8).toString(), \"popularity\", \"301\", \"description\", \"This is a sample function for testing \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+9).toString(), \"popularity\", \"301\", \"description\", \"Function to check out stock prices \"+randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+10).toString(),\"popularity\", \"301\", \"description\", \"Some descriptions \"+randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", new Integer(i+11).toString(), \"popularity\", \"201\", \"description\", \"apple apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+12).toString(), \"popularity\", \"201\", \"description\", \"Big Apple is New York.\", \"normHits\", \"0.01\"));\n      assertU(adoc(\"id\", new Integer(i+13).toString(), \"popularity\", \"201\", \"description\", \"New some York is Big. \"+ randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", new Integer(i+14).toString(), \"popularity\", \"201\", \"description\", \"apple apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+15).toString(), \"popularity\", \"201\", \"description\", \"Big Apple is New York.\", \"normHits\", \"0.01\"));\n      assertU(adoc(\"id\", new Integer(i+16).toString(), \"popularity\", \"401\", \"description\", \"barack h\", \"normHits\", \"0.0\"));\n      assertU(adoc(\"id\", new Integer(i+17).toString(), \"popularity\", \"201\", \"description\", \"red delicious apple \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+18).toString(), \"popularity\", \"201\", \"description\", \"nyc \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n    }\n\n    assertU(commit());\n\n    loadFeatures(\"comp_features.json\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9720b151fde2073f4e401450f4574e5f31c2d0ff","date":1478184029,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureExtractionFromMultipleSegments#before().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void before() throws Exception {\n    // solrconfig-multiseg.xml contains the merge policy to restrict merging\n    setuptest(\"solrconfig-multiseg.xml\", \"schema.xml\");\n    // index 400 documents\n    for(int i = 0; i<400;i=i+20) {\n      assertU(adoc(\"id\", new Integer(i).toString(),   \"popularity\", \"201\", \"description\", \"apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+1).toString(), \"popularity\", \"201\", \"description\", \"d \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n\n      assertU(adoc(\"id\", new Integer(i+2).toString(), \"popularity\", \"201\", \"description\", \"apple is a company too \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+3).toString(), \"popularity\", \"201\", \"description\", \"new york city is big apple \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n\n      assertU(adoc(\"id\", new Integer(i+6).toString(), \"popularity\", \"301\", \"description\", \"function name \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+7).toString(), \"popularity\", \"301\", \"description\", \"function \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", new Integer(i+8).toString(), \"popularity\", \"301\", \"description\", \"This is a sample function for testing \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+9).toString(), \"popularity\", \"301\", \"description\", \"Function to check out stock prices \"+randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+10).toString(),\"popularity\", \"301\", \"description\", \"Some descriptions \"+randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", new Integer(i+11).toString(), \"popularity\", \"201\", \"description\", \"apple apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+12).toString(), \"popularity\", \"201\", \"description\", \"Big Apple is New York.\", \"normHits\", \"0.01\"));\n      assertU(adoc(\"id\", new Integer(i+13).toString(), \"popularity\", \"201\", \"description\", \"New some York is Big. \"+ randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", new Integer(i+14).toString(), \"popularity\", \"201\", \"description\", \"apple apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+15).toString(), \"popularity\", \"201\", \"description\", \"Big Apple is New York.\", \"normHits\", \"0.01\"));\n      assertU(adoc(\"id\", new Integer(i+16).toString(), \"popularity\", \"401\", \"description\", \"barack h\", \"normHits\", \"0.0\"));\n      assertU(adoc(\"id\", new Integer(i+17).toString(), \"popularity\", \"201\", \"description\", \"red delicious apple \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+18).toString(), \"popularity\", \"201\", \"description\", \"nyc \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n    }\n\n    assertU(commit());\n\n    loadFeatures(\"comp_features.json\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","date":1528054850,"type":3,"author":"Michael Braun","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureExtractionFromMultipleSegments#before().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureExtractionFromMultipleSegments#before().mjava","sourceNew":"  @BeforeClass\n  public static void before() throws Exception {\n    // solrconfig-multiseg.xml contains the merge policy to restrict merging\n    setuptest(\"solrconfig-multiseg.xml\", \"schema.xml\");\n    // index 400 documents\n    for(int i = 0; i<400;i=i+20) {\n      assertU(adoc(\"id\", Integer.toString(i),   \"popularity\", \"201\", \"description\", \"apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+1), \"popularity\", \"201\", \"description\", \"d \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n\n      assertU(adoc(\"id\", Integer.toString(i+2), \"popularity\", \"201\", \"description\", \"apple is a company too \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+3), \"popularity\", \"201\", \"description\", \"new york city is big apple \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n\n      assertU(adoc(\"id\", Integer.toString(i+6), \"popularity\", \"301\", \"description\", \"function name \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+7), \"popularity\", \"301\", \"description\", \"function \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", Integer.toString(i+8), \"popularity\", \"301\", \"description\", \"This is a sample function for testing \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+9), \"popularity\", \"301\", \"description\", \"Function to check out stock prices \"+randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+10),\"popularity\", \"301\", \"description\", \"Some descriptions \"+randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", Integer.toString(i+11), \"popularity\", \"201\", \"description\", \"apple apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+12), \"popularity\", \"201\", \"description\", \"Big Apple is New York.\", \"normHits\", \"0.01\"));\n      assertU(adoc(\"id\", Integer.toString(i+13), \"popularity\", \"201\", \"description\", \"New some York is Big. \"+ randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", Integer.toString(i+14), \"popularity\", \"201\", \"description\", \"apple apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+15), \"popularity\", \"201\", \"description\", \"Big Apple is New York.\", \"normHits\", \"0.01\"));\n      assertU(adoc(\"id\", Integer.toString(i+16), \"popularity\", \"401\", \"description\", \"barack h\", \"normHits\", \"0.0\"));\n      assertU(adoc(\"id\", Integer.toString(i+17), \"popularity\", \"201\", \"description\", \"red delicious apple \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+18), \"popularity\", \"201\", \"description\", \"nyc \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n    }\n\n    assertU(commit());\n\n    loadFeatures(\"comp_features.json\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void before() throws Exception {\n    // solrconfig-multiseg.xml contains the merge policy to restrict merging\n    setuptest(\"solrconfig-multiseg.xml\", \"schema.xml\");\n    // index 400 documents\n    for(int i = 0; i<400;i=i+20) {\n      assertU(adoc(\"id\", new Integer(i).toString(),   \"popularity\", \"201\", \"description\", \"apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+1).toString(), \"popularity\", \"201\", \"description\", \"d \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n\n      assertU(adoc(\"id\", new Integer(i+2).toString(), \"popularity\", \"201\", \"description\", \"apple is a company too \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+3).toString(), \"popularity\", \"201\", \"description\", \"new york city is big apple \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n\n      assertU(adoc(\"id\", new Integer(i+6).toString(), \"popularity\", \"301\", \"description\", \"function name \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+7).toString(), \"popularity\", \"301\", \"description\", \"function \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", new Integer(i+8).toString(), \"popularity\", \"301\", \"description\", \"This is a sample function for testing \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+9).toString(), \"popularity\", \"301\", \"description\", \"Function to check out stock prices \"+randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+10).toString(),\"popularity\", \"301\", \"description\", \"Some descriptions \"+randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", new Integer(i+11).toString(), \"popularity\", \"201\", \"description\", \"apple apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+12).toString(), \"popularity\", \"201\", \"description\", \"Big Apple is New York.\", \"normHits\", \"0.01\"));\n      assertU(adoc(\"id\", new Integer(i+13).toString(), \"popularity\", \"201\", \"description\", \"New some York is Big. \"+ randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", new Integer(i+14).toString(), \"popularity\", \"201\", \"description\", \"apple apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+15).toString(), \"popularity\", \"201\", \"description\", \"Big Apple is New York.\", \"normHits\", \"0.01\"));\n      assertU(adoc(\"id\", new Integer(i+16).toString(), \"popularity\", \"401\", \"description\", \"barack h\", \"normHits\", \"0.0\"));\n      assertU(adoc(\"id\", new Integer(i+17).toString(), \"popularity\", \"201\", \"description\", \"red delicious apple \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+18).toString(), \"popularity\", \"201\", \"description\", \"nyc \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n    }\n\n    assertU(commit());\n\n    loadFeatures(\"comp_features.json\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"628903f37b6c442da0d390db1c6af9a0e74d41a7","date":1531736685,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureExtractionFromMultipleSegments#before().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureExtractionFromMultipleSegments#before().mjava","sourceNew":"  @BeforeClass\n  public static void before() throws Exception {\n    // solrconfig-multiseg.xml contains the merge policy to restrict merging\n    setuptest(\"solrconfig-multiseg.xml\", \"schema.xml\");\n    // index 400 documents\n    for(int i = 0; i<400;i=i+20) {\n      assertU(adoc(\"id\", Integer.toString(i),   \"popularity\", \"201\", \"description\", \"apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+1), \"popularity\", \"201\", \"description\", \"d \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n\n      assertU(adoc(\"id\", Integer.toString(i+2), \"popularity\", \"201\", \"description\", \"apple is a company too \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+3), \"popularity\", \"201\", \"description\", \"new york city is big apple \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n\n      assertU(adoc(\"id\", Integer.toString(i+6), \"popularity\", \"301\", \"description\", \"function name \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+7), \"popularity\", \"301\", \"description\", \"function \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", Integer.toString(i+8), \"popularity\", \"301\", \"description\", \"This is a sample function for testing \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+9), \"popularity\", \"301\", \"description\", \"Function to check out stock prices \"+randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+10),\"popularity\", \"301\", \"description\", \"Some descriptions \"+randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", Integer.toString(i+11), \"popularity\", \"201\", \"description\", \"apple apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+12), \"popularity\", \"201\", \"description\", \"Big Apple is New York.\", \"normHits\", \"0.01\"));\n      assertU(adoc(\"id\", Integer.toString(i+13), \"popularity\", \"201\", \"description\", \"New some York is Big. \"+ randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", Integer.toString(i+14), \"popularity\", \"201\", \"description\", \"apple apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+15), \"popularity\", \"201\", \"description\", \"Big Apple is New York.\", \"normHits\", \"0.01\"));\n      assertU(adoc(\"id\", Integer.toString(i+16), \"popularity\", \"401\", \"description\", \"barack h\", \"normHits\", \"0.0\"));\n      assertU(adoc(\"id\", Integer.toString(i+17), \"popularity\", \"201\", \"description\", \"red delicious apple \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+18), \"popularity\", \"201\", \"description\", \"nyc \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n    }\n\n    assertU(commit());\n\n    loadFeatures(\"comp_features.json\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void before() throws Exception {\n    // solrconfig-multiseg.xml contains the merge policy to restrict merging\n    setuptest(\"solrconfig-multiseg.xml\", \"schema.xml\");\n    // index 400 documents\n    for(int i = 0; i<400;i=i+20) {\n      assertU(adoc(\"id\", new Integer(i).toString(),   \"popularity\", \"201\", \"description\", \"apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+1).toString(), \"popularity\", \"201\", \"description\", \"d \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n\n      assertU(adoc(\"id\", new Integer(i+2).toString(), \"popularity\", \"201\", \"description\", \"apple is a company too \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+3).toString(), \"popularity\", \"201\", \"description\", \"new york city is big apple \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n\n      assertU(adoc(\"id\", new Integer(i+6).toString(), \"popularity\", \"301\", \"description\", \"function name \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+7).toString(), \"popularity\", \"301\", \"description\", \"function \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", new Integer(i+8).toString(), \"popularity\", \"301\", \"description\", \"This is a sample function for testing \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+9).toString(), \"popularity\", \"301\", \"description\", \"Function to check out stock prices \"+randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+10).toString(),\"popularity\", \"301\", \"description\", \"Some descriptions \"+randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", new Integer(i+11).toString(), \"popularity\", \"201\", \"description\", \"apple apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+12).toString(), \"popularity\", \"201\", \"description\", \"Big Apple is New York.\", \"normHits\", \"0.01\"));\n      assertU(adoc(\"id\", new Integer(i+13).toString(), \"popularity\", \"201\", \"description\", \"New some York is Big. \"+ randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", new Integer(i+14).toString(), \"popularity\", \"201\", \"description\", \"apple apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+15).toString(), \"popularity\", \"201\", \"description\", \"Big Apple is New York.\", \"normHits\", \"0.01\"));\n      assertU(adoc(\"id\", new Integer(i+16).toString(), \"popularity\", \"401\", \"description\", \"barack h\", \"normHits\", \"0.0\"));\n      assertU(adoc(\"id\", new Integer(i+17).toString(), \"popularity\", \"201\", \"description\", \"red delicious apple \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+18).toString(), \"popularity\", \"201\", \"description\", \"nyc \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n    }\n\n    assertU(commit());\n\n    loadFeatures(\"comp_features.json\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureExtractionFromMultipleSegments#before().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestFeatureExtractionFromMultipleSegments#before().mjava","sourceNew":"  @BeforeClass\n  public static void before() throws Exception {\n    // solrconfig-multiseg.xml contains the merge policy to restrict merging\n    setuptest(\"solrconfig-multiseg.xml\", \"schema.xml\");\n    // index 400 documents\n    for(int i = 0; i<400;i=i+20) {\n      assertU(adoc(\"id\", Integer.toString(i),   \"popularity\", \"201\", \"description\", \"apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+1), \"popularity\", \"201\", \"description\", \"d \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n\n      assertU(adoc(\"id\", Integer.toString(i+2), \"popularity\", \"201\", \"description\", \"apple is a company too \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+3), \"popularity\", \"201\", \"description\", \"new york city is big apple \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n\n      assertU(adoc(\"id\", Integer.toString(i+6), \"popularity\", \"301\", \"description\", \"function name \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+7), \"popularity\", \"301\", \"description\", \"function \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", Integer.toString(i+8), \"popularity\", \"301\", \"description\", \"This is a sample function for testing \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+9), \"popularity\", \"301\", \"description\", \"Function to check out stock prices \"+randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+10),\"popularity\", \"301\", \"description\", \"Some descriptions \"+randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", Integer.toString(i+11), \"popularity\", \"201\", \"description\", \"apple apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+12), \"popularity\", \"201\", \"description\", \"Big Apple is New York.\", \"normHits\", \"0.01\"));\n      assertU(adoc(\"id\", Integer.toString(i+13), \"popularity\", \"201\", \"description\", \"New some York is Big. \"+ randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", Integer.toString(i+14), \"popularity\", \"201\", \"description\", \"apple apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+15), \"popularity\", \"201\", \"description\", \"Big Apple is New York.\", \"normHits\", \"0.01\"));\n      assertU(adoc(\"id\", Integer.toString(i+16), \"popularity\", \"401\", \"description\", \"barack h\", \"normHits\", \"0.0\"));\n      assertU(adoc(\"id\", Integer.toString(i+17), \"popularity\", \"201\", \"description\", \"red delicious apple \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", Integer.toString(i+18), \"popularity\", \"201\", \"description\", \"nyc \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n    }\n\n    assertU(commit());\n\n    loadFeatures(\"comp_features.json\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void before() throws Exception {\n    // solrconfig-multiseg.xml contains the merge policy to restrict merging\n    setuptest(\"solrconfig-multiseg.xml\", \"schema.xml\");\n    // index 400 documents\n    for(int i = 0; i<400;i=i+20) {\n      assertU(adoc(\"id\", new Integer(i).toString(),   \"popularity\", \"201\", \"description\", \"apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+1).toString(), \"popularity\", \"201\", \"description\", \"d \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n\n      assertU(adoc(\"id\", new Integer(i+2).toString(), \"popularity\", \"201\", \"description\", \"apple is a company too \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+3).toString(), \"popularity\", \"201\", \"description\", \"new york city is big apple \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n\n      assertU(adoc(\"id\", new Integer(i+6).toString(), \"popularity\", \"301\", \"description\", \"function name \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+7).toString(), \"popularity\", \"301\", \"description\", \"function \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", new Integer(i+8).toString(), \"popularity\", \"301\", \"description\", \"This is a sample function for testing \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+9).toString(), \"popularity\", \"301\", \"description\", \"Function to check out stock prices \"+randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+10).toString(),\"popularity\", \"301\", \"description\", \"Some descriptions \"+randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", new Integer(i+11).toString(), \"popularity\", \"201\", \"description\", \"apple apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+12).toString(), \"popularity\", \"201\", \"description\", \"Big Apple is New York.\", \"normHits\", \"0.01\"));\n      assertU(adoc(\"id\", new Integer(i+13).toString(), \"popularity\", \"201\", \"description\", \"New some York is Big. \"+ randomString(i%6+3), \"normHits\", \"0.1\"));\n\n      assertU(adoc(\"id\", new Integer(i+14).toString(), \"popularity\", \"201\", \"description\", \"apple apple is a company \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+15).toString(), \"popularity\", \"201\", \"description\", \"Big Apple is New York.\", \"normHits\", \"0.01\"));\n      assertU(adoc(\"id\", new Integer(i+16).toString(), \"popularity\", \"401\", \"description\", \"barack h\", \"normHits\", \"0.0\"));\n      assertU(adoc(\"id\", new Integer(i+17).toString(), \"popularity\", \"201\", \"description\", \"red delicious apple \" + randomString(i%6+3), \"normHits\", \"0.1\"));\n      assertU(adoc(\"id\", new Integer(i+18).toString(), \"popularity\", \"201\", \"description\", \"nyc \" + randomString(i%6+3), \"normHits\", \"0.11\"));\n    }\n\n    assertU(commit());\n\n    loadFeatures(\"comp_features.json\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","b6a269c1ddba3f8c9fa9a40572ecc538eddda41a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["628903f37b6c442da0d390db1c6af9a0e74d41a7"]},"commit2Childs":{"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","9720b151fde2073f4e401450f4574e5f31c2d0ff","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","9720b151fde2073f4e401450f4574e5f31c2d0ff","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}