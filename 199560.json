{"path":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#setReclaimDeletesWeight(double).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#setReclaimDeletesWeight(double).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TieredMergePolicy#setReclaimDeletesWeight(double).mjava","sourceNew":"  /** Controls how aggressively merges that reclaim more\n   *  deletions are favored.  Higher values favor selecting\n   *  merges that reclaim deletions.  A value of 0.0 means\n   *  deletions don't impact merge selection. */\n  public TieredMergePolicy setReclaimDeletesWeight(double v) {\n    if (v < 0.0) {\n      throw new IllegalArgumentException(\"reclaimDeletesWeight must be >= 0.0 (got \" + v + \")\");\n    }\n    reclaimDeletesWeight = v;\n    return this;\n  }\n\n","sourceOld":"  /** Controls how aggressively merges that reclaim more\n   *  deletions are favored.  Higher values favor selecting\n   *  merges that reclaim deletions.  A value of 0.0 means\n   *  deletions don't impact merge selection. */\n  public TieredMergePolicy setReclaimDeletesWeight(double v) {\n    if (v < 0.0) {\n      throw new IllegalArgumentException(\"reclaimDeletesWeight must be >= 0.0 (got \" + v + \")\");\n    }\n    reclaimDeletesWeight = v;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d2ac33e0354d08a94fb66b943ae61bd3bef12b1","date":1389960368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#setReclaimDeletesWeight(double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#setReclaimDeletesWeight(double).mjava","sourceNew":"  /** Controls how aggressively merges that reclaim more\n   *  deletions are favored.  Higher values will more\n   *  aggressively target merges that reclaim deletions, but\n   *  be careful not to go so high that way too much merging\n   *  takes place; a value of 3.0 is probably nearly too\n   *  high.  A value of 0.0 means deletions don't impact\n   *  merge selection. */ \n  public TieredMergePolicy setReclaimDeletesWeight(double v) {\n    if (v < 0.0) {\n      throw new IllegalArgumentException(\"reclaimDeletesWeight must be >= 0.0 (got \" + v + \")\");\n    }\n    reclaimDeletesWeight = v;\n    return this;\n  }\n\n","sourceOld":"  /** Controls how aggressively merges that reclaim more\n   *  deletions are favored.  Higher values favor selecting\n   *  merges that reclaim deletions.  A value of 0.0 means\n   *  deletions don't impact merge selection. */\n  public TieredMergePolicy setReclaimDeletesWeight(double v) {\n    if (v < 0.0) {\n      throw new IllegalArgumentException(\"reclaimDeletesWeight must be >= 0.0 (got \" + v + \")\");\n    }\n    reclaimDeletesWeight = v;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a90cc8c90aa53ddf51fbd15019989ac269514a3","date":1531845066,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#setReclaimDeletesWeight(double).mjava","sourceNew":null,"sourceOld":"  /** Controls how aggressively merges that reclaim more\n   *  deletions are favored.  Higher values will more\n   *  aggressively target merges that reclaim deletions, but\n   *  be careful not to go so high that way too much merging\n   *  takes place; a value of 3.0 is probably nearly too\n   *  high.  A value of 0.0 means deletions don't impact\n   *  merge selection. */ \n  public TieredMergePolicy setReclaimDeletesWeight(double v) {\n    if (v < 0.0) {\n      throw new IllegalArgumentException(\"reclaimDeletesWeight must be >= 0.0 (got \" + v + \")\");\n    }\n    reclaimDeletesWeight = v;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#setReclaimDeletesWeight(double).mjava","sourceNew":null,"sourceOld":"  /** Controls how aggressively merges that reclaim more\n   *  deletions are favored.  Higher values will more\n   *  aggressively target merges that reclaim deletions, but\n   *  be careful not to go so high that way too much merging\n   *  takes place; a value of 3.0 is probably nearly too\n   *  high.  A value of 0.0 means deletions don't impact\n   *  merge selection. */ \n  public TieredMergePolicy setReclaimDeletesWeight(double v) {\n    if (v < 0.0) {\n      throw new IllegalArgumentException(\"reclaimDeletesWeight must be >= 0.0 (got \" + v + \")\");\n    }\n    reclaimDeletesWeight = v;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["7d2ac33e0354d08a94fb66b943ae61bd3bef12b1","4a90cc8c90aa53ddf51fbd15019989ac269514a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7d2ac33e0354d08a94fb66b943ae61bd3bef12b1":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4a90cc8c90aa53ddf51fbd15019989ac269514a3":["7d2ac33e0354d08a94fb66b943ae61bd3bef12b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a90cc8c90aa53ddf51fbd15019989ac269514a3"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7d2ac33e0354d08a94fb66b943ae61bd3bef12b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7d2ac33e0354d08a94fb66b943ae61bd3bef12b1":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","4a90cc8c90aa53ddf51fbd15019989ac269514a3"],"4a90cc8c90aa53ddf51fbd15019989ac269514a3":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}