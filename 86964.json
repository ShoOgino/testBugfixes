{"path":"lucene/src/java/org/apache/lucene/index/codecs/DefaultTermVectorsReader#get(int).mjava","commits":[{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultTermVectorsReader#get(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Fields get(int docID) throws IOException {\n    if (docID < 0 || docID >= numTotalDocs) {\n      throw new IllegalArgumentException(\"doID=\" + docID + \" is out of bounds [0..\" + (numTotalDocs-1) + \"]\");\n    }\n    if (tvx != null) {\n      Fields fields = new TVFields(docID);\n      if (fields.getUniqueFieldCount() == 0) {\n        // TODO: we can improve writer here, eg write 0 into\n        // tvx file, so we know on first read from tvx that\n        // this doc has no TVs\n        return null;\n      } else {\n        return fields;\n      }\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d0ee734a67ae20fd4c683458847aebde606bb02"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cfd7f00f3dbc4c50d336540f063493fc0f7d830f","date":1322850565,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40TermVectorsReader#get(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultTermVectorsReader#get(int).mjava","sourceNew":"  @Override\n  public Fields get(int docID) throws IOException {\n    if (docID < 0 || docID >= numTotalDocs) {\n      throw new IllegalArgumentException(\"doID=\" + docID + \" is out of bounds [0..\" + (numTotalDocs-1) + \"]\");\n    }\n    if (tvx != null) {\n      Fields fields = new TVFields(docID);\n      if (fields.getUniqueFieldCount() == 0) {\n        // TODO: we can improve writer here, eg write 0 into\n        // tvx file, so we know on first read from tvx that\n        // this doc has no TVs\n        return null;\n      } else {\n        return fields;\n      }\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Fields get(int docID) throws IOException {\n    if (docID < 0 || docID >= numTotalDocs) {\n      throw new IllegalArgumentException(\"doID=\" + docID + \" is out of bounds [0..\" + (numTotalDocs-1) + \"]\");\n    }\n    if (tvx != null) {\n      Fields fields = new TVFields(docID);\n      if (fields.getUniqueFieldCount() == 0) {\n        // TODO: we can improve writer here, eg write 0 into\n        // tvx file, so we know on first read from tvx that\n        // this doc has no TVs\n        return null;\n      } else {\n        return fields;\n      }\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["3cc749c053615f5871f3b95715fe292f34e70a53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"]},"commit2Childs":{"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cc749c053615f5871f3b95715fe292f34e70a53"],"3cc749c053615f5871f3b95715fe292f34e70a53":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}