{"path":"lucene/src/java/org/apache/lucene/document/Field#Field(String,TokenStream,FieldType).mjava","commits":[{"id":"fa0f44f887719e97183771e977cfc4bfb485b766","date":1326668713,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/Field#Field(String,TokenStream,FieldType).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/Field#Field(String,TokenStream,IndexableFieldType).mjava","sourceNew":"  /**\n   * Create field with TokenStream value.\n   */\n  public Field(String name, TokenStream tokenStream, FieldType type) {\n    if (name == null) {\n      throw new IllegalArgumentException(\"name cannot be null\");\n    }\n    if (tokenStream == null) {\n      throw new NullPointerException(\"tokenStream cannot be null\");\n    }\n    if (!type.indexed() || !type.tokenized()) {\n      throw new IllegalArgumentException(\"TokenStream fields must be indexed and tokenized\");\n    }\n    if (type.stored()) {\n      throw new IllegalArgumentException(\"TokenStream fields cannot be stored\");\n    }\n    \n    this.name = name;\n    this.fieldsData = null;\n    this.tokenStream = tokenStream;\n    this.type = type;\n  }\n\n","sourceOld":"  public Field(String name, TokenStream tokenStream, IndexableFieldType type) {\n    if (name == null) {\n      throw new NullPointerException(\"name cannot be null\");\n    }\n    if (tokenStream == null) {\n      throw new NullPointerException(\"tokenStream cannot be null\");\n    }\n    if (type.indexed() && !type.tokenized()) {\n      throw new IllegalArgumentException(\"Non-tokenized fields must use String values\");\n    }\n    \n    this.name = name;\n    this.fieldsData = null;\n    this.tokenStream = tokenStream;\n    this.type = type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#Field(String,TokenStream,FieldType).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/Field#Field(String,TokenStream,FieldType).mjava","sourceNew":"  /**\n   * Create field with TokenStream value.\n   */\n  public Field(String name, TokenStream tokenStream, FieldType type) {\n    if (name == null) {\n      throw new IllegalArgumentException(\"name cannot be null\");\n    }\n    if (tokenStream == null) {\n      throw new NullPointerException(\"tokenStream cannot be null\");\n    }\n    if (!type.indexed() || !type.tokenized()) {\n      throw new IllegalArgumentException(\"TokenStream fields must be indexed and tokenized\");\n    }\n    if (type.stored()) {\n      throw new IllegalArgumentException(\"TokenStream fields cannot be stored\");\n    }\n    \n    this.name = name;\n    this.fieldsData = null;\n    this.tokenStream = tokenStream;\n    this.type = type;\n  }\n\n","sourceOld":"  /**\n   * Create field with TokenStream value.\n   */\n  public Field(String name, TokenStream tokenStream, FieldType type) {\n    if (name == null) {\n      throw new IllegalArgumentException(\"name cannot be null\");\n    }\n    if (tokenStream == null) {\n      throw new NullPointerException(\"tokenStream cannot be null\");\n    }\n    if (!type.indexed() || !type.tokenized()) {\n      throw new IllegalArgumentException(\"TokenStream fields must be indexed and tokenized\");\n    }\n    if (type.stored()) {\n      throw new IllegalArgumentException(\"TokenStream fields cannot be stored\");\n    }\n    \n    this.name = name;\n    this.fieldsData = null;\n    this.tokenStream = tokenStream;\n    this.type = type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fa0f44f887719e97183771e977cfc4bfb485b766"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa0f44f887719e97183771e977cfc4bfb485b766":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa0f44f887719e97183771e977cfc4bfb485b766"],"fa0f44f887719e97183771e977cfc4bfb485b766":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}