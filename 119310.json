{"path":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandler#HttpShardHandler(HttpShardHandlerFactory).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandler#HttpShardHandler(HttpShardHandlerFactory).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/HttpShardHandler#HttpShardHandler(HttpShardHandlerFactory).mjava","sourceNew":"  public HttpShardHandler(HttpShardHandlerFactory httpShardHandlerFactory) {\r\n    this.httpShardHandlerFactory = httpShardHandlerFactory;\r\n    completionService = new ExecutorCompletionService<ShardResponse>(httpShardHandlerFactory.commExecutor);\r\n    pending = new HashSet<Future<ShardResponse>>();\r\n\r\n    // maps \"localhost:8983|localhost:7574\" to a shuffled List(\"http://localhost:8983\",\"http://localhost:7574\")\r\n      // This is primarily to keep track of what order we should use to query the replicas of a shard\r\n      // so that we use the same replica for all phases of a distributed request.\r\n    shardToURLs = new HashMap<String,List<String>>();\r\n\r\n  }\r\n\n","sourceOld":"  public HttpShardHandler(HttpShardHandlerFactory httpShardHandlerFactory) {\r\n    this.httpShardHandlerFactory = httpShardHandlerFactory;\r\n    completionService = new ExecutorCompletionService<ShardResponse>(httpShardHandlerFactory.commExecutor);\r\n    pending = new HashSet<Future<ShardResponse>>();\r\n\r\n    // maps \"localhost:8983|localhost:7574\" to a shuffled List(\"http://localhost:8983\",\"http://localhost:7574\")\r\n      // This is primarily to keep track of what order we should use to query the replicas of a shard\r\n      // so that we use the same replica for all phases of a distributed request.\r\n    shardToURLs = new HashMap<String,List<String>>();\r\n\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandler#HttpShardHandler(HttpShardHandlerFactory).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/HttpShardHandler#HttpShardHandler(HttpShardHandlerFactory).mjava","sourceNew":"  public HttpShardHandler(HttpShardHandlerFactory httpShardHandlerFactory) {\r\n    this.httpShardHandlerFactory = httpShardHandlerFactory;\r\n    completionService = new ExecutorCompletionService<ShardResponse>(httpShardHandlerFactory.commExecutor);\r\n    pending = new HashSet<Future<ShardResponse>>();\r\n\r\n    // maps \"localhost:8983|localhost:7574\" to a shuffled List(\"http://localhost:8983\",\"http://localhost:7574\")\r\n      // This is primarily to keep track of what order we should use to query the replicas of a shard\r\n      // so that we use the same replica for all phases of a distributed request.\r\n    shardToURLs = new HashMap<String,List<String>>();\r\n\r\n  }\r\n\n","sourceOld":"  public HttpShardHandler(HttpShardHandlerFactory httpShardHandlerFactory) {\r\n    this.httpShardHandlerFactory = httpShardHandlerFactory;\r\n    completionService = new ExecutorCompletionService<ShardResponse>(httpShardHandlerFactory.commExecutor);\r\n    pending = new HashSet<Future<ShardResponse>>();\r\n\r\n    // maps \"localhost:8983|localhost:7574\" to a shuffled List(\"http://localhost:8983\",\"http://localhost:7574\")\r\n      // This is primarily to keep track of what order we should use to query the replicas of a shard\r\n      // so that we use the same replica for all phases of a distributed request.\r\n    shardToURLs = new HashMap<String,List<String>>();\r\n\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandler#HttpShardHandler(HttpShardHandlerFactory).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/HttpShardHandler#HttpShardHandler(HttpShardHandlerFactory).mjava","sourceNew":"  public HttpShardHandler(HttpShardHandlerFactory httpShardHandlerFactory) {\r\n    this.httpShardHandlerFactory = httpShardHandlerFactory;\r\n    completionService = new ExecutorCompletionService<ShardResponse>(httpShardHandlerFactory.commExecutor);\r\n    pending = new HashSet<Future<ShardResponse>>();\r\n\r\n    // maps \"localhost:8983|localhost:7574\" to a shuffled List(\"http://localhost:8983\",\"http://localhost:7574\")\r\n      // This is primarily to keep track of what order we should use to query the replicas of a shard\r\n      // so that we use the same replica for all phases of a distributed request.\r\n    shardToURLs = new HashMap<String,List<String>>();\r\n\r\n  }\r\n\n","sourceOld":"  public HttpShardHandler(HttpShardHandlerFactory httpShardHandlerFactory) {\r\n    this.httpShardHandlerFactory = httpShardHandlerFactory;\r\n    completionService = new ExecutorCompletionService<ShardResponse>(httpShardHandlerFactory.commExecutor);\r\n    pending = new HashSet<Future<ShardResponse>>();\r\n\r\n    // maps \"localhost:8983|localhost:7574\" to a shuffled List(\"http://localhost:8983\",\"http://localhost:7574\")\r\n      // This is primarily to keep track of what order we should use to query the replicas of a shard\r\n      // so that we use the same replica for all phases of a distributed request.\r\n    shardToURLs = new HashMap<String,List<String>>();\r\n\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b834dd353486678973f4157b3ba402ac3a7ca88","date":1329782329,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandler#HttpShardHandler(HttpShardHandlerFactory,HttpClient).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandler#HttpShardHandler(HttpShardHandlerFactory).mjava","sourceNew":"  public HttpShardHandler(HttpShardHandlerFactory httpShardHandlerFactory, HttpClient httpClient) {\r\n    this.httpClient = httpClient;\r\n    this.httpShardHandlerFactory = httpShardHandlerFactory;\r\n    completionService = new ExecutorCompletionService<ShardResponse>(httpShardHandlerFactory.commExecutor);\r\n    pending = new HashSet<Future<ShardResponse>>();\r\n\r\n    // maps \"localhost:8983|localhost:7574\" to a shuffled List(\"http://localhost:8983\",\"http://localhost:7574\")\r\n      // This is primarily to keep track of what order we should use to query the replicas of a shard\r\n      // so that we use the same replica for all phases of a distributed request.\r\n    shardToURLs = new HashMap<String,List<String>>();\r\n\r\n  }\r\n\n","sourceOld":"  public HttpShardHandler(HttpShardHandlerFactory httpShardHandlerFactory) {\r\n    this.httpShardHandlerFactory = httpShardHandlerFactory;\r\n    completionService = new ExecutorCompletionService<ShardResponse>(httpShardHandlerFactory.commExecutor);\r\n    pending = new HashSet<Future<ShardResponse>>();\r\n\r\n    // maps \"localhost:8983|localhost:7574\" to a shuffled List(\"http://localhost:8983\",\"http://localhost:7574\")\r\n      // This is primarily to keep track of what order we should use to query the replicas of a shard\r\n      // so that we use the same replica for all phases of a distributed request.\r\n    shardToURLs = new HashMap<String,List<String>>();\r\n\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandler#HttpShardHandler(HttpShardHandlerFactory).mjava","sourceNew":null,"sourceOld":"  public HttpShardHandler(HttpShardHandlerFactory httpShardHandlerFactory) {\r\n    this.httpShardHandlerFactory = httpShardHandlerFactory;\r\n    completionService = new ExecutorCompletionService<ShardResponse>(httpShardHandlerFactory.commExecutor);\r\n    pending = new HashSet<Future<ShardResponse>>();\r\n\r\n    // maps \"localhost:8983|localhost:7574\" to a shuffled List(\"http://localhost:8983\",\"http://localhost:7574\")\r\n      // This is primarily to keep track of what order we should use to query the replicas of a shard\r\n      // so that we use the same replica for all phases of a distributed request.\r\n    shardToURLs = new HashMap<String,List<String>>();\r\n\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1964c059f45ae1de1877f9f0fe3ca327ea4218e8","date":1594088246,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandler#HttpShardHandler(HttpShardHandlerFactory).mjava","pathOld":"/dev/null","sourceNew":"  public HttpShardHandler(HttpShardHandlerFactory httpShardHandlerFactory) {\n    this.httpShardHandlerFactory = httpShardHandlerFactory;\n    this.lbClient = httpShardHandlerFactory.loadbalancer;\n    this.pending = new AtomicInteger(0);\n    this.responses = new LinkedBlockingQueue<>();\n    this.responseCancellableMap = new HashMap<>();\n\n    // maps \"localhost:8983|localhost:7574\" to a shuffled List(\"http://localhost:8983\",\"http://localhost:7574\")\n    // This is primarily to keep track of what order we should use to query the replicas of a shard\n    // so that we use the same replica for all phases of a distributed request.\n    shardToURLs = new HashMap<>();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1964c059f45ae1de1877f9f0fe3ca327ea4218e8":["6b834dd353486678973f4157b3ba402ac3a7ca88"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["c26f00b574427b55127e869b935845554afde1fa","6b834dd353486678973f4157b3ba402ac3a7ca88"],"6b834dd353486678973f4157b3ba402ac3a7ca88":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1964c059f45ae1de1877f9f0fe3ca327ea4218e8"]},"commit2Childs":{"1964c059f45ae1de1877f9f0fe3ca327ea4218e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"6b834dd353486678973f4157b3ba402ac3a7ca88":["1964c059f45ae1de1877f9f0fe3ca327ea4218e8","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","6b834dd353486678973f4157b3ba402ac3a7ca88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}