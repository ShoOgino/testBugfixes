{"path":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/server/registry/ProvidedServiceConfig#setXsltStylesheet(String).mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/server/registry/ProvidedServiceConfig#setXsltStylesheet(String).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/registry/ProvidedServiceConfig#setXsltStylesheet(String).mjava","sourceNew":"    /**\n     * Sets and creates the preview transformer xslt template to provide a html formate for feeds and entries.\n     * The given file name must be available in the classpath. \n     * @param filename - the name of the file in the classpath\n     */\n    public void setXsltStylesheet(String filename){\n        if(filename == null || filename.length() == 0){\n            LOG.info(\"No preview stylesheet configured for service \"+this.serviceName);\n            return;\n        }\n        \n        TransformerFactory factory = TransformerFactory.newInstance();\n        \n        try {\n            this.transformerTemplate = factory.newTemplates(new StreamSource(ProvidedServiceConfig.class.getResourceAsStream(filename.startsWith(\"/\")?filename:\"/\"+filename)));\n        } catch (TransformerConfigurationException e) {\n            throw new RuntimeException(\"Can not compile xslt stylesheet path: \"+filename,e);\n        }\n        \n    }\n\n","sourceOld":"    /**\n     * Sets and creates the preview transformer xslt template to provide a html formate for feeds and entries.\n     * The given file name must be available in the classpath. \n     * @param filename - the name of the file in the classpath\n     */\n    public void setXsltStylesheet(String filename){\n        if(filename == null || filename.length() == 0){\n            LOG.info(\"No preview stylesheet configured for service \"+this.serviceName);\n            return;\n        }\n        \n        TransformerFactory factory = TransformerFactory.newInstance();\n        \n        try {\n            this.transformerTemplate = factory.newTemplates(new StreamSource(ProvidedServiceConfig.class.getResourceAsStream(filename.startsWith(\"/\")?filename:\"/\"+filename)));\n        } catch (TransformerConfigurationException e) {\n            throw new RuntimeException(\"Can not compile xslt stylesheet path: \"+filename,e);\n        }\n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/server/registry/ProvidedServiceConfig#setXsltStylesheet(String).mjava","sourceNew":null,"sourceOld":"    /**\n     * Sets and creates the preview transformer xslt template to provide a html formate for feeds and entries.\n     * The given file name must be available in the classpath. \n     * @param filename - the name of the file in the classpath\n     */\n    public void setXsltStylesheet(String filename){\n        if(filename == null || filename.length() == 0){\n            LOG.info(\"No preview stylesheet configured for service \"+this.serviceName);\n            return;\n        }\n        \n        TransformerFactory factory = TransformerFactory.newInstance();\n        \n        try {\n            this.transformerTemplate = factory.newTemplates(new StreamSource(ProvidedServiceConfig.class.getResourceAsStream(filename.startsWith(\"/\")?filename:\"/\"+filename)));\n        } catch (TransformerConfigurationException e) {\n            throw new RuntimeException(\"Can not compile xslt stylesheet path: \"+filename,e);\n        }\n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}