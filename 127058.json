{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/StemmerUtil#startsWith(char[],int,String).mjava","commits":[{"id":"d8864af8de677008c534d14fc77568b83a6c1361","date":1279109434,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/StemmerUtil#startsWith(char[],int,String).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/id/IndonesianStemmer#startsWith(char[],int,String).mjava","sourceNew":"  /**\n   * Returns true if the character array starts with the suffix.\n   * \n   * @param s Input Buffer\n   * @param len length of input buffer\n   * @param suffix Suffix string to test\n   * @return true if <code>s</code> starts with <code>suffix</code>\n   */\n  public static boolean startsWith(char s[], int len, String prefix) {\n    final int prefixLen = prefix.length();\n    if (prefixLen > len)\n      return false;\n    for (int i = 0; i < prefixLen; i++)\n      if (s[i] != prefix.charAt(i)) \n        return false;\n    return true;\n  }\n\n","sourceOld":"  private boolean startsWith(char s[], int len, String prefix) {\n    final int prefixLen = prefix.length();\n    if (prefixLen > len)\n      return false;\n    for (int i = 0; i < prefixLen; i++)\n      if (s[i] != prefix.charAt(i)) \n        return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/StemmerUtil#startsWith(char[],int,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns true if the character array starts with the suffix.\n   * \n   * @param s Input Buffer\n   * @param len length of input buffer\n   * @param suffix Suffix string to test\n   * @return true if <code>s</code> starts with <code>suffix</code>\n   */\n  public static boolean startsWith(char s[], int len, String prefix) {\n    final int prefixLen = prefix.length();\n    if (prefixLen > len)\n      return false;\n    for (int i = 0; i < prefixLen; i++)\n      if (s[i] != prefix.charAt(i)) \n        return false;\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b50bea3a34f005728e10c71d596cbf10b31d0e59","date":1286112171,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/StemmerUtil#startsWith(char[],int,String).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/StemmerUtil#startsWith(char[],int,String).mjava","sourceNew":"  /**\n   * Returns true if the character array starts with the suffix.\n   * \n   * @param s Input Buffer\n   * @param len length of input buffer\n   * @param prefix Prefix string to test\n   * @return true if <code>s</code> starts with <code>prefix</code>\n   */\n  public static boolean startsWith(char s[], int len, String prefix) {\n    final int prefixLen = prefix.length();\n    if (prefixLen > len)\n      return false;\n    for (int i = 0; i < prefixLen; i++)\n      if (s[i] != prefix.charAt(i)) \n        return false;\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Returns true if the character array starts with the suffix.\n   * \n   * @param s Input Buffer\n   * @param len length of input buffer\n   * @param suffix Suffix string to test\n   * @return true if <code>s</code> starts with <code>suffix</code>\n   */\n  public static boolean startsWith(char s[], int len, String prefix) {\n    final int prefixLen = prefix.length();\n    if (prefixLen > len)\n      return false;\n    for (int i = 0; i < prefixLen; i++)\n      if (s[i] != prefix.charAt(i)) \n        return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/StemmerUtil#startsWith(char[],int,String).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/StemmerUtil#startsWith(char[],int,String).mjava","sourceNew":"  /**\n   * Returns true if the character array starts with the suffix.\n   * \n   * @param s Input Buffer\n   * @param len length of input buffer\n   * @param prefix Prefix string to test\n   * @return true if <code>s</code> starts with <code>prefix</code>\n   */\n  public static boolean startsWith(char s[], int len, String prefix) {\n    final int prefixLen = prefix.length();\n    if (prefixLen > len)\n      return false;\n    for (int i = 0; i < prefixLen; i++)\n      if (s[i] != prefix.charAt(i)) \n        return false;\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Returns true if the character array starts with the suffix.\n   * \n   * @param s Input Buffer\n   * @param len length of input buffer\n   * @param suffix Suffix string to test\n   * @return true if <code>s</code> starts with <code>suffix</code>\n   */\n  public static boolean startsWith(char s[], int len, String prefix) {\n    final int prefixLen = prefix.length();\n    if (prefixLen > len)\n      return false;\n    for (int i = 0; i < prefixLen; i++)\n      if (s[i] != prefix.charAt(i)) \n        return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/StemmerUtil#startsWith(char[],int,String).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/StemmerUtil#startsWith(char[],int,String).mjava","sourceNew":"  /**\n   * Returns true if the character array starts with the suffix.\n   * \n   * @param s Input Buffer\n   * @param len length of input buffer\n   * @param prefix Prefix string to test\n   * @return true if <code>s</code> starts with <code>prefix</code>\n   */\n  public static boolean startsWith(char s[], int len, String prefix) {\n    final int prefixLen = prefix.length();\n    if (prefixLen > len)\n      return false;\n    for (int i = 0; i < prefixLen; i++)\n      if (s[i] != prefix.charAt(i)) \n        return false;\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Returns true if the character array starts with the suffix.\n   * \n   * @param s Input Buffer\n   * @param len length of input buffer\n   * @param prefix Prefix string to test\n   * @return true if <code>s</code> starts with <code>prefix</code>\n   */\n  public static boolean startsWith(char s[], int len, String prefix) {\n    final int prefixLen = prefix.length();\n    if (prefixLen > len)\n      return false;\n    for (int i = 0; i < prefixLen; i++)\n      if (s[i] != prefix.charAt(i)) \n        return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b50bea3a34f005728e10c71d596cbf10b31d0e59"],"d8864af8de677008c534d14fc77568b83a6c1361":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b50bea3a34f005728e10c71d596cbf10b31d0e59":["d8864af8de677008c534d14fc77568b83a6c1361"],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d8864af8de677008c534d14fc77568b83a6c1361"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","b50bea3a34f005728e10c71d596cbf10b31d0e59"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8864af8de677008c534d14fc77568b83a6c1361":["b50bea3a34f005728e10c71d596cbf10b31d0e59","5f4e87790277826a2aea119328600dfb07761f32"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d8864af8de677008c534d14fc77568b83a6c1361","5f4e87790277826a2aea119328600dfb07761f32"],"b50bea3a34f005728e10c71d596cbf10b31d0e59":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}