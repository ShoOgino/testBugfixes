{"path":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","pathOld":"/dev/null","sourceNew":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        try {\n          suss.shutdownNow();\n          suss = new StreamingUpdateSolrServer(\n              ((CommonsHttpSolrServer) clients.get(clientIndex)).getBaseURL(),\n              httpClient, 30, 3) {\n            public void handleError(Throwable ex) {\n              log.warn(\"suss error\", ex);\n            }\n          };\n        } catch (MalformedURLException e1) {\n          e1.printStackTrace();\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","pathOld":"/dev/null","sourceNew":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        try {\n          suss.shutdownNow();\n          suss = new StreamingUpdateSolrServer(\n              ((CommonsHttpSolrServer) clients.get(clientIndex)).getBaseURL(),\n              httpClient, 30, 3) {\n            public void handleError(Throwable ex) {\n              log.warn(\"suss error\", ex);\n            }\n          };\n        } catch (MalformedURLException e1) {\n          e1.printStackTrace();\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","pathOld":"/dev/null","sourceNew":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        try {\n          suss.shutdownNow();\n          suss = new StreamingUpdateSolrServer(\n              ((CommonsHttpSolrServer) clients.get(clientIndex)).getBaseURL(),\n              httpClient, 30, 3) {\n            public void handleError(Throwable ex) {\n              log.warn(\"suss error\", ex);\n            }\n          };\n        } catch (MalformedURLException e1) {\n          e1.printStackTrace();\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","sourceNew":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        try {\n          suss.shutdownNow();\n          suss = new ConcurrentUpdateSolrServer(\n              ((HttpSolrServer) clients.get(clientIndex)).getBaseURL(),\n              httpClient, 30, 3) {\n            public void handleError(Throwable ex) {\n              log.warn(\"suss error\", ex);\n            }\n          };\n        } catch (MalformedURLException e1) {\n          e1.printStackTrace();\n        }\n      }\n    }\n\n","sourceOld":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        try {\n          suss.shutdownNow();\n          suss = new StreamingUpdateSolrServer(\n              ((CommonsHttpSolrServer) clients.get(clientIndex)).getBaseURL(),\n              httpClient, 30, 3) {\n            public void handleError(Throwable ex) {\n              log.warn(\"suss error\", ex);\n            }\n          };\n        } catch (MalformedURLException e1) {\n          e1.printStackTrace();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","sourceNew":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        suss.shutdownNow();\n        suss = new ConcurrentUpdateSolrServer(\n            ((HttpSolrServer) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3) {\n          public void handleError(Throwable ex) {\n            log.warn(\"suss error\", ex);\n          }\n        };\n      }\n    }\n\n","sourceOld":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        try {\n          suss.shutdownNow();\n          suss = new ConcurrentUpdateSolrServer(\n              ((HttpSolrServer) clients.get(clientIndex)).getBaseURL(),\n              httpClient, 30, 3) {\n            public void handleError(Throwable ex) {\n              log.warn(\"suss error\", ex);\n            }\n          };\n        } catch (MalformedURLException e1) {\n          e1.printStackTrace();\n        }\n      }\n    }\n\n","bugFix":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","sourceNew":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        suss.shutdownNow();\n        suss = new ConcurrentUpdateSolrServer(\n            ((HttpSolrServer) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3) {\n          public void handleError(Throwable ex) {\n            log.warn(\"suss error\", ex);\n          }\n        };\n      }\n    }\n\n","sourceOld":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        try {\n          suss.shutdownNow();\n          suss = new ConcurrentUpdateSolrServer(\n              ((HttpSolrServer) clients.get(clientIndex)).getBaseURL(),\n              httpClient, 30, 3) {\n            public void handleError(Throwable ex) {\n              log.warn(\"suss error\", ex);\n            }\n          };\n        } catch (MalformedURLException e1) {\n          e1.printStackTrace();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","sourceNew":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        suss.shutdownNow();\n        suss = new ConcurrentUpdateSolrServer(\n            ((HttpSolrServer) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3) {\n          @Override\n          public void handleError(Throwable ex) {\n            log.warn(\"suss error\", ex);\n          }\n        };\n      }\n    }\n\n","sourceOld":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        suss.shutdownNow();\n        suss = new ConcurrentUpdateSolrServer(\n            ((HttpSolrServer) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3) {\n          public void handleError(Throwable ex) {\n            log.warn(\"suss error\", ex);\n          }\n        };\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","sourceNew":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        suss.shutdownNow();\n        suss = new ConcurrentUpdateSolrServer(\n            ((HttpSolrServer) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3) {\n          @Override\n          public void handleError(Throwable ex) {\n            log.warn(\"suss error\", ex);\n          }\n        };\n      }\n    }\n\n","sourceOld":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        suss.shutdownNow();\n        suss = new ConcurrentUpdateSolrServer(\n            ((HttpSolrServer) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3) {\n          public void handleError(Throwable ex) {\n            log.warn(\"suss error\", ex);\n          }\n        };\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","sourceNew":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        cusc.shutdownNow();\n        cusc = new ConcurrentUpdateSolrClient(\n            ((HttpSolrClient) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3) {\n          @Override\n          public void handleError(Throwable ex) {\n            log.warn(\"cusc error\", ex);\n          }\n        };\n      }\n    }\n\n","sourceOld":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        suss.shutdownNow();\n        suss = new ConcurrentUpdateSolrServer(\n            ((HttpSolrServer) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3) {\n          @Override\n          public void handleError(Throwable ex) {\n            log.warn(\"suss error\", ex);\n          }\n        };\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98287baa2c8d136e801f366a73e27a23285b7b98","date":1427241813,"type":5,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#changeUrlOnError(Exception).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","sourceNew":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        cusc.shutdownNow();\n        cusc = new ConcurrentUpdateSolrClient(\n            ((HttpSolrClient) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3) {\n          @Override\n          public void handleError(Throwable ex) {\n            log.warn(\"cusc error\", ex);\n          }\n        };\n      }\n    }\n\n","sourceOld":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        cusc.shutdownNow();\n        cusc = new ConcurrentUpdateSolrClient(\n            ((HttpSolrClient) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3) {\n          @Override\n          public void handleError(Throwable ex) {\n            log.warn(\"cusc error\", ex);\n          }\n        };\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":5,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#changeUrlOnError(Exception).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#changeUrlOnError(Exception).mjava","sourceNew":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        cusc.shutdownNow();\n        cusc = new ConcurrentUpdateSolrClient(\n            ((HttpSolrClient) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3) {\n          @Override\n          public void handleError(Throwable ex) {\n            log.warn(\"cusc error\", ex);\n          }\n        };\n      }\n    }\n\n","sourceOld":"    private void changeUrlOnError(Exception e) {\n      if (e instanceof ConnectException) {\n        clientIndex++;\n        if (clientIndex > clients.size() - 1) {\n          clientIndex = 0;\n        }\n        cusc.shutdownNow();\n        cusc = new ConcurrentUpdateSolrClient(\n            ((HttpSolrClient) clients.get(clientIndex)).getBaseURL(),\n            httpClient, 30, 3) {\n          @Override\n          public void handleError(Throwable ex) {\n            log.warn(\"cusc error\", ex);\n          }\n        };\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","7530de27b87b961b51f01bd1299b7004d46e8823"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"98287baa2c8d136e801f366a73e27a23285b7b98":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["7530de27b87b961b51f01bd1299b7004d46e8823"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["bafca15d8e408346a67f4282ad1143b88023893b","98287baa2c8d136e801f366a73e27a23285b7b98"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"7530de27b87b961b51f01bd1299b7004d46e8823":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["98287baa2c8d136e801f366a73e27a23285b7b98"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"98287baa2c8d136e801f366a73e27a23285b7b98":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bafca15d8e408346a67f4282ad1143b88023893b":["98287baa2c8d136e801f366a73e27a23285b7b98","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fe33227f6805edab2036cbb80645cc4e2d1fa424","7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0d22ac6a4146774c1bc8400160fc0b6150294e92","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}