{"path":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField],Analyzer).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField],Analyzer).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField],Analyzer).mjava","sourceNew":"    public void updateDocument(Term term,\n        Iterable<? extends IndexableField> doc, Analyzer analyzer)\n        throws CorruptIndexException, IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","sourceOld":"    public void updateDocument(Term term,\n        Iterable<? extends IndexableField> doc, Analyzer analyzer)\n        throws CorruptIndexException, IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField],Analyzer).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField],Analyzer).mjava","sourceNew":"    public void updateDocument(Term term,\n        Iterable<? extends IndexableField> doc, Analyzer analyzer)\n        throws IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","sourceOld":"    public void updateDocument(Term term,\n        Iterable<? extends IndexableField> doc, Analyzer analyzer)\n        throws CorruptIndexException, IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","bugFix":["76364fe9e16e51702b00a59a9ae3ed0646080deb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4","date":1341839195,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,IndexDocument,Analyzer).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField],Analyzer).mjava","sourceNew":"    public void updateDocument(Term term,\n        IndexDocument doc, Analyzer analyzer)\n        throws IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","sourceOld":"    public void updateDocument(Term term,\n        Iterable<? extends IndexableField> doc, Analyzer analyzer)\n        throws IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField],Analyzer).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField],Analyzer).mjava","sourceNew":"    public void updateDocument(Term term,\n        Iterable<? extends IndexableField> doc, Analyzer analyzer)\n        throws IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","sourceOld":"    public void updateDocument(Term term,\n        Iterable<? extends IndexableField> doc, Analyzer analyzer)\n        throws CorruptIndexException, IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,IndexDocument,Analyzer).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField],Analyzer).mjava","sourceNew":"    public void updateDocument(Term term,\n        IndexDocument doc, Analyzer analyzer)\n        throws IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","sourceOld":"    public void updateDocument(Term term,\n        Iterable<? extends IndexableField> doc, Analyzer analyzer)\n        throws IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"1d028314cced5858683a1bb4741423d0f934257b":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d028314cced5858683a1bb4741423d0f934257b"]},"commit2Childs":{"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["1d028314cced5858683a1bb4741423d0f934257b"],"1d028314cced5858683a1bb4741423d0f934257b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4","1d028314cced5858683a1bb4741423d0f934257b","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}