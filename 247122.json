{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterSimpler().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterSimpler().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterSimpler().mjava","sourceNew":"  /**  Another set of tests for the writer, which don't use an array and\n   *  try to distill the different cases, and therefore may be more helpful\n   *  for debugging a problem than testWriter() which is hard to know why\n   *  or where it failed. \n   */\n  @Test\n  public void testWriterSimpler() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    assertEquals(1, tw.getSize()); // the root only\n    // Test that adding a new top-level category works\n    assertEquals(1, tw.addCategory(new CategoryPath(\"a\")));\n    assertEquals(2, tw.getSize());\n    // Test that adding the same category again is noticed, and the\n    // same ordinal (and not a new one) is returned.\n    assertEquals(1, tw.addCategory(new CategoryPath(\"a\")));\n    assertEquals(2, tw.getSize());\n    // Test that adding another top-level category returns a new ordinal,\n    // not the same one\n    assertEquals(2, tw.addCategory(new CategoryPath(\"b\")));\n    assertEquals(3, tw.getSize());\n    // Test that adding a category inside one of the above adds just one\n    // new ordinal:\n    assertEquals(3, tw.addCategory(new CategoryPath(\"a\",\"c\")));\n    assertEquals(4, tw.getSize());\n    // Test that adding the same second-level category doesn't do anything:\n    assertEquals(3, tw.addCategory(new CategoryPath(\"a\",\"c\")));\n    assertEquals(4, tw.getSize());\n    // Test that adding a second-level category with two new components\n    // indeed adds two categories\n    assertEquals(5, tw.addCategory(new CategoryPath(\"d\",\"e\")));\n    assertEquals(6, tw.getSize());\n    // Verify that the parents were added above in the order we expected\n    assertEquals(4, tw.addCategory(new CategoryPath(\"d\")));\n    // Similar, but inside a category that already exists:\n    assertEquals(7, tw.addCategory(new CategoryPath(\"b\", \"d\",\"e\")));\n    assertEquals(8, tw.getSize());\n    // And now inside two levels of categories that already exist:\n    assertEquals(8, tw.addCategory(new CategoryPath(\"b\", \"d\",\"f\")));\n    assertEquals(9, tw.getSize());\n    \n    tw.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**  Another set of tests for the writer, which don't use an array and\n   *  try to distill the different cases, and therefore may be more helpful\n   *  for debugging a problem than testWriter() which is hard to know why\n   *  or where it failed. \n   */\n  @Test\n  public void testWriterSimpler() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    assertEquals(1, tw.getSize()); // the root only\n    // Test that adding a new top-level category works\n    assertEquals(1, tw.addCategory(new CategoryPath(\"a\")));\n    assertEquals(2, tw.getSize());\n    // Test that adding the same category again is noticed, and the\n    // same ordinal (and not a new one) is returned.\n    assertEquals(1, tw.addCategory(new CategoryPath(\"a\")));\n    assertEquals(2, tw.getSize());\n    // Test that adding another top-level category returns a new ordinal,\n    // not the same one\n    assertEquals(2, tw.addCategory(new CategoryPath(\"b\")));\n    assertEquals(3, tw.getSize());\n    // Test that adding a category inside one of the above adds just one\n    // new ordinal:\n    assertEquals(3, tw.addCategory(new CategoryPath(\"a\",\"c\")));\n    assertEquals(4, tw.getSize());\n    // Test that adding the same second-level category doesn't do anything:\n    assertEquals(3, tw.addCategory(new CategoryPath(\"a\",\"c\")));\n    assertEquals(4, tw.getSize());\n    // Test that adding a second-level category with two new components\n    // indeed adds two categories\n    assertEquals(5, tw.addCategory(new CategoryPath(\"d\",\"e\")));\n    assertEquals(6, tw.getSize());\n    // Verify that the parents were added above in the order we expected\n    assertEquals(4, tw.addCategory(new CategoryPath(\"d\")));\n    // Similar, but inside a category that already exists:\n    assertEquals(7, tw.addCategory(new CategoryPath(\"b\", \"d\",\"e\")));\n    assertEquals(8, tw.getSize());\n    // And now inside two levels of categories that already exist:\n    assertEquals(8, tw.addCategory(new CategoryPath(\"b\", \"d\",\"f\")));\n    assertEquals(9, tw.getSize());\n    \n    tw.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterSimpler().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterSimpler().mjava","sourceNew":"  /**  Another set of tests for the writer, which don't use an array and\n   *  try to distill the different cases, and therefore may be more helpful\n   *  for debugging a problem than testWriter() which is hard to know why\n   *  or where it failed. \n   */\n  @Test\n  public void testWriterSimpler() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    assertEquals(1, tw.getSize()); // the root only\n    // Test that adding a new top-level category works\n    assertEquals(1, tw.addCategory(new FacetLabel(\"a\")));\n    assertEquals(2, tw.getSize());\n    // Test that adding the same category again is noticed, and the\n    // same ordinal (and not a new one) is returned.\n    assertEquals(1, tw.addCategory(new FacetLabel(\"a\")));\n    assertEquals(2, tw.getSize());\n    // Test that adding another top-level category returns a new ordinal,\n    // not the same one\n    assertEquals(2, tw.addCategory(new FacetLabel(\"b\")));\n    assertEquals(3, tw.getSize());\n    // Test that adding a category inside one of the above adds just one\n    // new ordinal:\n    assertEquals(3, tw.addCategory(new FacetLabel(\"a\",\"c\")));\n    assertEquals(4, tw.getSize());\n    // Test that adding the same second-level category doesn't do anything:\n    assertEquals(3, tw.addCategory(new FacetLabel(\"a\",\"c\")));\n    assertEquals(4, tw.getSize());\n    // Test that adding a second-level category with two new components\n    // indeed adds two categories\n    assertEquals(5, tw.addCategory(new FacetLabel(\"d\",\"e\")));\n    assertEquals(6, tw.getSize());\n    // Verify that the parents were added above in the order we expected\n    assertEquals(4, tw.addCategory(new FacetLabel(\"d\")));\n    // Similar, but inside a category that already exists:\n    assertEquals(7, tw.addCategory(new FacetLabel(\"b\", \"d\",\"e\")));\n    assertEquals(8, tw.getSize());\n    // And now inside two levels of categories that already exist:\n    assertEquals(8, tw.addCategory(new FacetLabel(\"b\", \"d\",\"f\")));\n    assertEquals(9, tw.getSize());\n    \n    tw.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**  Another set of tests for the writer, which don't use an array and\n   *  try to distill the different cases, and therefore may be more helpful\n   *  for debugging a problem than testWriter() which is hard to know why\n   *  or where it failed. \n   */\n  @Test\n  public void testWriterSimpler() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    assertEquals(1, tw.getSize()); // the root only\n    // Test that adding a new top-level category works\n    assertEquals(1, tw.addCategory(new CategoryPath(\"a\")));\n    assertEquals(2, tw.getSize());\n    // Test that adding the same category again is noticed, and the\n    // same ordinal (and not a new one) is returned.\n    assertEquals(1, tw.addCategory(new CategoryPath(\"a\")));\n    assertEquals(2, tw.getSize());\n    // Test that adding another top-level category returns a new ordinal,\n    // not the same one\n    assertEquals(2, tw.addCategory(new CategoryPath(\"b\")));\n    assertEquals(3, tw.getSize());\n    // Test that adding a category inside one of the above adds just one\n    // new ordinal:\n    assertEquals(3, tw.addCategory(new CategoryPath(\"a\",\"c\")));\n    assertEquals(4, tw.getSize());\n    // Test that adding the same second-level category doesn't do anything:\n    assertEquals(3, tw.addCategory(new CategoryPath(\"a\",\"c\")));\n    assertEquals(4, tw.getSize());\n    // Test that adding a second-level category with two new components\n    // indeed adds two categories\n    assertEquals(5, tw.addCategory(new CategoryPath(\"d\",\"e\")));\n    assertEquals(6, tw.getSize());\n    // Verify that the parents were added above in the order we expected\n    assertEquals(4, tw.addCategory(new CategoryPath(\"d\")));\n    // Similar, but inside a category that already exists:\n    assertEquals(7, tw.addCategory(new CategoryPath(\"b\", \"d\",\"e\")));\n    assertEquals(8, tw.getSize());\n    // And now inside two levels of categories that already exist:\n    assertEquals(8, tw.addCategory(new CategoryPath(\"b\", \"d\",\"f\")));\n    assertEquals(9, tw.getSize());\n    \n    tw.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterSimpler().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterSimpler().mjava","sourceNew":"  /**  Another set of tests for the writer, which don't use an array and\n   *  try to distill the different cases, and therefore may be more helpful\n   *  for debugging a problem than testWriter() which is hard to know why\n   *  or where it failed. \n   */\n  @Test\n  public void testWriterSimpler() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    assertEquals(1, tw.getSize()); // the root only\n    // Test that adding a new top-level category works\n    assertEquals(1, tw.addCategory(new FacetLabel(\"a\")));\n    assertEquals(2, tw.getSize());\n    // Test that adding the same category again is noticed, and the\n    // same ordinal (and not a new one) is returned.\n    assertEquals(1, tw.addCategory(new FacetLabel(\"a\")));\n    assertEquals(2, tw.getSize());\n    // Test that adding another top-level category returns a new ordinal,\n    // not the same one\n    assertEquals(2, tw.addCategory(new FacetLabel(\"b\")));\n    assertEquals(3, tw.getSize());\n    // Test that adding a category inside one of the above adds just one\n    // new ordinal:\n    assertEquals(3, tw.addCategory(new FacetLabel(\"a\",\"c\")));\n    assertEquals(4, tw.getSize());\n    // Test that adding the same second-level category doesn't do anything:\n    assertEquals(3, tw.addCategory(new FacetLabel(\"a\",\"c\")));\n    assertEquals(4, tw.getSize());\n    // Test that adding a second-level category with two new components\n    // indeed adds two categories\n    assertEquals(5, tw.addCategory(new FacetLabel(\"d\",\"e\")));\n    assertEquals(6, tw.getSize());\n    // Verify that the parents were added above in the order we expected\n    assertEquals(4, tw.addCategory(new FacetLabel(\"d\")));\n    // Similar, but inside a category that already exists:\n    assertEquals(7, tw.addCategory(new FacetLabel(\"b\", \"d\",\"e\")));\n    assertEquals(8, tw.getSize());\n    // And now inside two levels of categories that already exist:\n    assertEquals(8, tw.addCategory(new FacetLabel(\"b\", \"d\",\"f\")));\n    assertEquals(9, tw.getSize());\n    \n    tw.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**  Another set of tests for the writer, which don't use an array and\n   *  try to distill the different cases, and therefore may be more helpful\n   *  for debugging a problem than testWriter() which is hard to know why\n   *  or where it failed. \n   */\n  @Test\n  public void testWriterSimpler() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    assertEquals(1, tw.getSize()); // the root only\n    // Test that adding a new top-level category works\n    assertEquals(1, tw.addCategory(new CategoryPath(\"a\")));\n    assertEquals(2, tw.getSize());\n    // Test that adding the same category again is noticed, and the\n    // same ordinal (and not a new one) is returned.\n    assertEquals(1, tw.addCategory(new CategoryPath(\"a\")));\n    assertEquals(2, tw.getSize());\n    // Test that adding another top-level category returns a new ordinal,\n    // not the same one\n    assertEquals(2, tw.addCategory(new CategoryPath(\"b\")));\n    assertEquals(3, tw.getSize());\n    // Test that adding a category inside one of the above adds just one\n    // new ordinal:\n    assertEquals(3, tw.addCategory(new CategoryPath(\"a\",\"c\")));\n    assertEquals(4, tw.getSize());\n    // Test that adding the same second-level category doesn't do anything:\n    assertEquals(3, tw.addCategory(new CategoryPath(\"a\",\"c\")));\n    assertEquals(4, tw.getSize());\n    // Test that adding a second-level category with two new components\n    // indeed adds two categories\n    assertEquals(5, tw.addCategory(new CategoryPath(\"d\",\"e\")));\n    assertEquals(6, tw.getSize());\n    // Verify that the parents were added above in the order we expected\n    assertEquals(4, tw.addCategory(new CategoryPath(\"d\")));\n    // Similar, but inside a category that already exists:\n    assertEquals(7, tw.addCategory(new CategoryPath(\"b\", \"d\",\"e\")));\n    assertEquals(8, tw.getSize());\n    // And now inside two levels of categories that already exist:\n    assertEquals(8, tw.addCategory(new CategoryPath(\"b\", \"d\",\"f\")));\n    assertEquals(9, tw.getSize());\n    \n    tw.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["b89678825b68eccaf09e6ab71675fc0b0af1e099","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}