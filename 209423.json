{"path":"backwards/src/java/org/apache/lucene/document/NumericField#NumericField(String,int,Field.Store,boolean).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/document/NumericField#NumericField(String,int,Field.Store,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a field for numeric values with the specified\n   * <code>precisionStep</code>. The instance is not yet initialized with\n   * a numeric value, before indexing a document containing this field,\n   * set a value using the various set<em>???</em>Value() methods.\n   * @param name the field name\n   * @param precisionStep the used <a href=\"../search/NumericRangeQuery.html#precisionStepDesc\">precision step</a>\n   * @param store if the field should be stored in plain text form\n   *  (according to <code>toString(value)</code> of the used data type)\n   * @param index if the field should be indexed using {@link NumericTokenStream}\n   */\n  public NumericField(String name, int precisionStep, Field.Store store, boolean index) {\n    super(name, store, index ? Field.Index.ANALYZED_NO_NORMS : Field.Index.NO, Field.TermVector.NO);\n    setOmitTermFreqAndPositions(true);\n    tokenStream = new NumericTokenStream(precisionStep);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/document/NumericField#NumericField(String,int,Field.Store,boolean).mjava","pathOld":"backwards/src/java/org/apache/lucene/document/NumericField#NumericField(String,int,Field.Store,boolean).mjava","sourceNew":"  /**\n   * Creates a field for numeric values with the specified\n   * <code>precisionStep</code>. The instance is not yet initialized with\n   * a numeric value, before indexing a document containing this field,\n   * set a value using the various set<em>???</em>Value() methods.\n   * @param name the field name\n   * @param precisionStep the used <a href=\"../search/NumericRangeQuery.html#precisionStepDesc\">precision step</a>\n   * @param store if the field should be stored in plain text form\n   *  (according to <code>toString(value)</code> of the used data type)\n   * @param index if the field should be indexed using {@link NumericTokenStream}\n   */\n  public NumericField(String name, int precisionStep, Field.Store store, boolean index) {\n    super(name, store, index ? Field.Index.ANALYZED_NO_NORMS : Field.Index.NO, Field.TermVector.NO);\n    setOmitTermFreqAndPositions(true);\n    tokenStream = new NumericTokenStream(precisionStep);\n  }\n\n","sourceOld":"  /**\n   * Creates a field for numeric values with the specified\n   * <code>precisionStep</code>. The instance is not yet initialized with\n   * a numeric value, before indexing a document containing this field,\n   * set a value using the various set<em>???</em>Value() methods.\n   * @param name the field name\n   * @param precisionStep the used <a href=\"../search/NumericRangeQuery.html#precisionStepDesc\">precision step</a>\n   * @param store if the field should be stored in plain text form\n   *  (according to <code>toString(value)</code> of the used data type)\n   * @param index if the field should be indexed using {@link NumericTokenStream}\n   */\n  public NumericField(String name, int precisionStep, Field.Store store, boolean index) {\n    super(name, store, index ? Field.Index.ANALYZED_NO_NORMS : Field.Index.NO, Field.TermVector.NO);\n    setOmitTermFreqAndPositions(true);\n    tokenStream = new NumericTokenStream(precisionStep);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}