{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBSolrClient#pickServer(ServerWrapper[],SolrRequest).mjava","commits":[{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBSolrClient#pickServer(ServerWrapper[],SolrRequest).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Pick a server from list to execute request.\n   * By default servers are picked in round-robin manner,\n   * custom classes can override this method for more advance logic\n   * @param aliveServerList list of currently alive servers\n   * @param request the request will be sent to the picked server\n   * @return the picked server\n   */\n  protected ServerWrapper pickServer(ServerWrapper[] aliveServerList, SolrRequest request) {\n    int count = counter.incrementAndGet() & Integer.MAX_VALUE;\n    return aliveServerList[count % aliveServerList.length];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d","date":1592006776,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBSolrClient#pickServer(ServerWrapper[],SolrRequest).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBSolrClient#pickServer(ServerWrapper[],SolrRequest).mjava","sourceNew":"  /**\n   * Pick a server from list to execute request.\n   * By default servers are picked in round-robin manner,\n   * custom classes can override this method for more advance logic\n   * @param aliveServerList list of currently alive servers\n   * @param request the request will be sent to the picked server\n   * @return the picked server\n   */\n  protected ServerWrapper pickServer(ServerWrapper[] aliveServerList,\n                                     @SuppressWarnings({\"rawtypes\"})SolrRequest request) {\n    int count = counter.incrementAndGet() & Integer.MAX_VALUE;\n    return aliveServerList[count % aliveServerList.length];\n  }\n\n","sourceOld":"  /**\n   * Pick a server from list to execute request.\n   * By default servers are picked in round-robin manner,\n   * custom classes can override this method for more advance logic\n   * @param aliveServerList list of currently alive servers\n   * @param request the request will be sent to the picked server\n   * @return the picked server\n   */\n  protected ServerWrapper pickServer(ServerWrapper[] aliveServerList, SolrRequest request) {\n    int count = counter.incrementAndGet() & Integer.MAX_VALUE;\n    return aliveServerList[count % aliveServerList.length];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d"]},"commit2Childs":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d"],"0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}