{"path":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    MockDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random.nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      IndexReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    MockDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random.nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      IndexReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    MockDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      IndexReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    MockDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random.nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      IndexReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    MockDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    MockDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = IndexReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      IndexReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d19974432be9aed28ee7dca73bdf01d139e763a9","date":1342822166,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    MockDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":["7b91922b55d15444d554721b352861d028eb8278"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","date":1343059585,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    MockDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    MockDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf8086c7e11dc41303ef1b8050bd355ddfaee76d","date":1350007219,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing41PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7492bcb52be51e55d596134b95b2e53cc4ffb91","date":1350223278,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing41PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing41PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing40PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing41PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing41PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing41PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing41PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(TestUtil.alwaysPostingsFormat(new Pulsing41PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(_TestUtil.alwaysPostingsFormat(new Pulsing41PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.shutdown();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(TestUtil.alwaysPostingsFormat(new Pulsing41PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.shutdown();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(TestUtil.alwaysPostingsFormat(new Pulsing41PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.shutdown();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(TestUtil.alwaysPostingsFormat(new Pulsing41PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.shutdown();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.shutdown();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random()));\n      conf.setCodec(TestUtil.alwaysPostingsFormat(new Pulsing41PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.shutdown();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(TestUtil.alwaysPostingsFormat(new Pulsing41PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.shutdown();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(TestUtil.alwaysPostingsFormat(new Pulsing41PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.shutdown();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fbaae1c00d39df2c872bbe043af26d02d3818313","date":1409657064,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(TestUtil.alwaysPostingsFormat(new MemoryPostingsFormat()));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(TestUtil.alwaysPostingsFormat(new Pulsing41PostingsFormat(1 + random().nextInt(20))));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3184874f7f3aca850248483485b4995343066875","date":1413876758,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(TestUtil.alwaysPostingsFormat(new MemoryPostingsFormat()));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(TestUtil.alwaysPostingsFormat(new MemoryPostingsFormat()));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(TestUtil.alwaysPostingsFormat(new MemoryPostingsFormat()));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexed(true); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(TestUtil.alwaysPostingsFormat(new MemoryPostingsFormat()));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(TestUtil.alwaysPostingsFormat(new MemoryPostingsFormat()));\n      IndexWriter w = new IndexWriter(dir, conf);\n      expectThrows(IllegalArgumentException.class, () -> {\n        w.addIndexes(toAdd);\n      });\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      DirectoryReader.open(toAdd);\n    });\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(TestUtil.alwaysPostingsFormat(new MemoryPostingsFormat()));\n      IndexWriter w = new IndexWriter(dir, conf);\n      try {\n        w.addIndexes(toAdd);\n        fail(\"no such codec\");\n      } catch (IllegalArgumentException ex) {\n        // expected\n      }\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    try {\n      DirectoryReader.open(toAdd);\n      fail(\"no such codec\");\n    } catch (IllegalArgumentException ex) {\n      // expected\n    }\n    toAdd.close();\n  }\n\n","bugFix":["7b91922b55d15444d554721b352861d028eb8278","cf9c0f886c5cc7e62234e9496a775d280cb053ab"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24f89e8a6aac05753cde4c83d62a74356098200d","date":1525768331,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexMissingCodec().mjava","sourceNew":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(TestUtil.alwaysPostingsFormat(new DirectPostingsFormat()));\n      IndexWriter w = new IndexWriter(dir, conf);\n      expectThrows(IllegalArgumentException.class, () -> {\n        w.addIndexes(toAdd);\n      });\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      DirectoryReader.open(toAdd);\n    });\n    toAdd.close();\n  }\n\n","sourceOld":"  /*\n   * simple test that ensures we getting expected exceptions \n   */\n  public void testAddIndexMissingCodec() throws IOException {\n    BaseDirectoryWrapper toAdd = newDirectory();\n    // Disable checkIndex, else we get an exception because\n    // of the unregistered codec:\n    toAdd.setCheckIndexOnClose(false);\n    {\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(new UnRegisteredCodec());\n      IndexWriter w = new IndexWriter(toAdd, conf);\n      Document doc = new Document();\n      FieldType customType = new FieldType();\n      customType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS); \n      doc.add(newField(\"foo\", \"bar\", customType));\n      w.addDocument(doc);\n      w.close();\n    }\n\n    {\n      Directory dir = newDirectory();\n      IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n      conf.setCodec(TestUtil.alwaysPostingsFormat(new MemoryPostingsFormat()));\n      IndexWriter w = new IndexWriter(dir, conf);\n      expectThrows(IllegalArgumentException.class, () -> {\n        w.addIndexes(toAdd);\n      });\n      w.close();\n      IndexReader open = DirectoryReader.open(dir);\n      assertEquals(0, open.numDocs());\n      open.close();\n      dir.close();\n    }\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      DirectoryReader.open(toAdd);\n    });\n    toAdd.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"6613659748fe4411a7dcf85266e55db1f95f7315":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"05fe562aa248790944d43cdd478f512572835ba0":["3184874f7f3aca850248483485b4995343066875"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["d19974432be9aed28ee7dca73bdf01d139e763a9","c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"3184874f7f3aca850248483485b4995343066875":["fbaae1c00d39df2c872bbe043af26d02d3818313"],"fbaae1c00d39df2c872bbe043af26d02d3818313":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["d19974432be9aed28ee7dca73bdf01d139e763a9","cf8086c7e11dc41303ef1b8050bd355ddfaee76d"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["fbaae1c00d39df2c872bbe043af26d02d3818313","3184874f7f3aca850248483485b4995343066875"],"aba371508186796cc6151d8223a5b4e16d02e26e":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","d19974432be9aed28ee7dca73bdf01d139e763a9"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["d19974432be9aed28ee7dca73bdf01d139e763a9"],"24f89e8a6aac05753cde4c83d62a74356098200d":["05fe562aa248790944d43cdd478f512572835ba0"],"d19974432be9aed28ee7dca73bdf01d139e763a9":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["6613659748fe4411a7dcf85266e55db1f95f7315"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","d19974432be9aed28ee7dca73bdf01d139e763a9"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["24f89e8a6aac05753cde4c83d62a74356098200d"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"6613659748fe4411a7dcf85266e55db1f95f7315":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"05fe562aa248790944d43cdd478f512572835ba0":["24f89e8a6aac05753cde4c83d62a74356098200d"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["6613659748fe4411a7dcf85266e55db1f95f7315"],"3184874f7f3aca850248483485b4995343066875":["05fe562aa248790944d43cdd478f512572835ba0","0a22eafe3f72a4c2945eaad9547e6c78816978f4"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","19275ba31e621f6da1b83bf13af75233876fd3d4","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"fbaae1c00d39df2c872bbe043af26d02d3818313":["3184874f7f3aca850248483485b4995343066875","0a22eafe3f72a4c2945eaad9547e6c78816978f4"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["aba371508186796cc6151d8223a5b4e16d02e26e","d19974432be9aed28ee7dca73bdf01d139e763a9","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"d19974432be9aed28ee7dca73bdf01d139e763a9":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","c7492bcb52be51e55d596134b95b2e53cc4ffb91","aba371508186796cc6151d8223a5b4e16d02e26e","cf8086c7e11dc41303ef1b8050bd355ddfaee76d","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"24f89e8a6aac05753cde4c83d62a74356098200d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["fbaae1c00d39df2c872bbe043af26d02d3818313"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","0a22eafe3f72a4c2945eaad9547e6c78816978f4","aba371508186796cc6151d8223a5b4e16d02e26e","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}