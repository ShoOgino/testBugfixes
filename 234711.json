{"path":"solr/core/src/test/org/apache/solr/pkg/TestPackages#executeReq(String,JettySolrRunner,Utils.InputStreamConsumer,Map).mjava","commits":[{"id":"954ae83b7dfacaa33d48ea056448ae11f7745a93","date":1571867711,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/pkg/TestPackages#executeReq(String,JettySolrRunner,Utils.InputStreamConsumer,Map).mjava","pathOld":"/dev/null","sourceNew":"  private void executeReq(String uri, JettySolrRunner jetty, Utils.InputStreamConsumer parser, Map expected) throws Exception {\n    try(HttpSolrClient client = (HttpSolrClient) jetty.newClient()){\n      TestDistribPackageStore.assertResponseValues(10,\n          () -> {\n            Object o = Utils.executeGET(client.getHttpClient(),\n                jetty.getBaseUrl() + uri, parser);\n            if(o instanceof NavigableObject) return (NavigableObject) o;\n            if(o instanceof Map) return new MapWriterMap((Map) o);\n            throw new RuntimeException(\"Unknown response\");\n          }, expected);\n\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/pkg/TestPackages#executeReq(String,JettySolrRunner,Utils.InputStreamConsumer,Map).mjava","pathOld":"solr/core/src/test/org/apache/solr/pkg/TestPackages#executeReq(String,JettySolrRunner,Utils.InputStreamConsumer,Map).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  private void executeReq(String uri, JettySolrRunner jetty,\n                          @SuppressWarnings({\"rawtypes\"})Utils.InputStreamConsumer parser,\n                          @SuppressWarnings({\"rawtypes\"})Map expected) throws Exception {\n    try(HttpSolrClient client = (HttpSolrClient) jetty.newClient()){\n      TestDistribPackageStore.assertResponseValues(10,\n          () -> {\n            Object o = Utils.executeGET(client.getHttpClient(),\n                jetty.getBaseUrl() + uri, parser);\n            if(o instanceof NavigableObject) return (NavigableObject) o;\n            if(o instanceof Map) return new MapWriterMap((Map) o);\n            throw new RuntimeException(\"Unknown response\");\n          }, expected);\n\n    }\n  }\n\n","sourceOld":"  private void executeReq(String uri, JettySolrRunner jetty, Utils.InputStreamConsumer parser, Map expected) throws Exception {\n    try(HttpSolrClient client = (HttpSolrClient) jetty.newClient()){\n      TestDistribPackageStore.assertResponseValues(10,\n          () -> {\n            Object o = Utils.executeGET(client.getHttpClient(),\n                jetty.getBaseUrl() + uri, parser);\n            if(o instanceof NavigableObject) return (NavigableObject) o;\n            if(o instanceof Map) return new MapWriterMap((Map) o);\n            throw new RuntimeException(\"Unknown response\");\n          }, expected);\n\n    }\n  }\n\n","bugFix":null,"bugIntro":["9ac35455ac6925b629dedf2c0c52c0a8d5cb55b6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9ac35455ac6925b629dedf2c0c52c0a8d5cb55b6","date":1601357122,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/pkg/TestPackages#executeReq(String,JettySolrRunner,Utils.InputStreamConsumer,Map).mjava","pathOld":"solr/core/src/test/org/apache/solr/pkg/TestPackages#executeReq(String,JettySolrRunner,Utils.InputStreamConsumer,Map).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  private void executeReq(String uri, JettySolrRunner jetty, Utils.InputStreamConsumer parser, Map expected) throws Exception {\n    try(HttpSolrClient client = (HttpSolrClient) jetty.newClient()){\n      TestDistribPackageStore.assertResponseValues(10,\n          () -> {\n            Object o = Utils.executeGET(client.getHttpClient(),\n                jetty.getBaseUrl() + uri, parser);\n            if(o instanceof NavigableObject) return (NavigableObject) o;\n            if(o instanceof Map) return new MapWriterMap((Map) o);\n            throw new RuntimeException(\"Unknown response\");\n          }, expected);\n\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings({\"unchecked\"})\n  private void executeReq(String uri, JettySolrRunner jetty,\n                          @SuppressWarnings({\"rawtypes\"})Utils.InputStreamConsumer parser,\n                          @SuppressWarnings({\"rawtypes\"})Map expected) throws Exception {\n    try(HttpSolrClient client = (HttpSolrClient) jetty.newClient()){\n      TestDistribPackageStore.assertResponseValues(10,\n          () -> {\n            Object o = Utils.executeGET(client.getHttpClient(),\n                jetty.getBaseUrl() + uri, parser);\n            if(o instanceof NavigableObject) return (NavigableObject) o;\n            if(o instanceof Map) return new MapWriterMap((Map) o);\n            throw new RuntimeException(\"Unknown response\");\n          }, expected);\n\n    }\n  }\n\n","bugFix":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["954ae83b7dfacaa33d48ea056448ae11f7745a93"],"954ae83b7dfacaa33d48ea056448ae11f7745a93":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9ac35455ac6925b629dedf2c0c52c0a8d5cb55b6":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ac35455ac6925b629dedf2c0c52c0a8d5cb55b6"]},"commit2Childs":{"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["9ac35455ac6925b629dedf2c0c52c0a8d5cb55b6"],"954ae83b7dfacaa33d48ea056448ae11f7745a93":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"9ac35455ac6925b629dedf2c0c52c0a8d5cb55b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["954ae83b7dfacaa33d48ea056448ae11f7745a93"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}