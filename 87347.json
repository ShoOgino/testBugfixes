{"path":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#DistributedQueue(SolrZkClient,String,List[ACL]).mjava","commits":[{"id":"c2d0da1152c8dd998675c30a3f6f599a91770c2b","date":1342792640,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#DistributedQueue(SolrZkClient,String,List[ACL]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#DistributedQueue(ZooKeeper,String,List[ACL]).mjava","sourceNew":"  public DistributedQueue(SolrZkClient zookeeper, String dir, List<ACL> acl) {\n    this.dir = dir;\n    \n    if (acl != null) {\n      this.acl = acl;\n    }\n    this.zookeeper = zookeeper;\n    \n  }\n\n","sourceOld":"  public DistributedQueue(ZooKeeper zookeeper, String dir, List<ACL> acl) {\n    this.dir = dir;\n    \n    if (acl != null) {\n      this.acl = acl;\n    }\n    this.zookeeper = zookeeper;\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","date":1343059585,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#DistributedQueue(SolrZkClient,String,List[ACL]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#DistributedQueue(ZooKeeper,String,List[ACL]).mjava","sourceNew":"  public DistributedQueue(SolrZkClient zookeeper, String dir, List<ACL> acl) {\n    this.dir = dir;\n    \n    if (acl != null) {\n      this.acl = acl;\n    }\n    this.zookeeper = zookeeper;\n    \n  }\n\n","sourceOld":"  public DistributedQueue(ZooKeeper zookeeper, String dir, List<ACL> acl) {\n    this.dir = dir;\n    \n    if (acl != null) {\n      this.acl = acl;\n    }\n    this.zookeeper = zookeeper;\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#DistributedQueue(SolrZkClient,String,List[ACL]).mjava","pathOld":"/dev/null","sourceNew":"  public DistributedQueue(SolrZkClient zookeeper, String dir, List<ACL> acl) {\n    this.dir = dir;\n    \n    if (acl != null) {\n      this.acl = acl;\n    }\n    this.zookeeper = zookeeper;\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c4c38000077c9d25d50577cb09562d9563aa7ef","date":1363468630,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#DistributedQueue(SolrZkClient,String,List[ACL]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#DistributedQueue(SolrZkClient,String,List[ACL]).mjava","sourceNew":"  public DistributedQueue(SolrZkClient zookeeper, String dir, List<ACL> acl) {\n    this.dir = dir;\n    \n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(30);\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n    \n    if (acl != null) {\n      this.acl = acl;\n    }\n    this.zookeeper = zookeeper;\n    \n  }\n\n","sourceOld":"  public DistributedQueue(SolrZkClient zookeeper, String dir, List<ACL> acl) {\n    this.dir = dir;\n    \n    if (acl != null) {\n      this.acl = acl;\n    }\n    this.zookeeper = zookeeper;\n    \n  }\n\n","bugFix":null,"bugIntro":["001ed520e8a09b54914b9a9ee36cd13a30cbf599"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"001ed520e8a09b54914b9a9ee36cd13a30cbf599","date":1388361178,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#DistributedQueue(SolrZkClient,String,List[ACL]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#DistributedQueue(SolrZkClient,String,List[ACL]).mjava","sourceNew":"  public DistributedQueue(SolrZkClient zookeeper, String dir, List<ACL> acl) {\n    this.dir = dir;\n    \n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n    \n    if (acl != null) {\n      this.acl = acl;\n    }\n    this.zookeeper = zookeeper;\n    \n  }\n\n","sourceOld":"  public DistributedQueue(SolrZkClient zookeeper, String dir, List<ACL> acl) {\n    this.dir = dir;\n    \n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(30);\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n    \n    if (acl != null) {\n      this.acl = acl;\n    }\n    this.zookeeper = zookeeper;\n    \n  }\n\n","bugFix":["1c4c38000077c9d25d50577cb09562d9563aa7ef"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f45f67a018421da088ea39274f23ad5d339b97d","date":1395559348,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#DistributedQueue(SolrZkClient,String,List[ACL]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#DistributedQueue(SolrZkClient,String,List[ACL]).mjava","sourceNew":"  public DistributedQueue(SolrZkClient zookeeper, String dir, List<ACL> acl) {\n    this(zookeeper, dir, acl, new Overseer.Stats());\n  }\n\n","sourceOld":"  public DistributedQueue(SolrZkClient zookeeper, String dir, List<ACL> acl) {\n    this.dir = dir;\n    \n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n    \n    if (acl != null) {\n      this.acl = acl;\n    }\n    this.zookeeper = zookeeper;\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c83f985d9828d30801541f1eed26aa3169646baf","date":1409315453,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#DistributedQueue(SolrZkClient,String,List[ACL]).mjava","sourceNew":null,"sourceOld":"  public DistributedQueue(SolrZkClient zookeeper, String dir, List<ACL> acl) {\n    this(zookeeper, dir, acl, new Overseer.Stats());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2d0da1152c8dd998675c30a3f6f599a91770c2b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"001ed520e8a09b54914b9a9ee36cd13a30cbf599":["1c4c38000077c9d25d50577cb09562d9563aa7ef"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c2d0da1152c8dd998675c30a3f6f599a91770c2b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9f45f67a018421da088ea39274f23ad5d339b97d":["001ed520e8a09b54914b9a9ee36cd13a30cbf599"],"1c4c38000077c9d25d50577cb09562d9563aa7ef":["c2d0da1152c8dd998675c30a3f6f599a91770c2b"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c2d0da1152c8dd998675c30a3f6f599a91770c2b"],"c83f985d9828d30801541f1eed26aa3169646baf":["9f45f67a018421da088ea39274f23ad5d339b97d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c83f985d9828d30801541f1eed26aa3169646baf"]},"commit2Childs":{"c2d0da1152c8dd998675c30a3f6f599a91770c2b":["aba371508186796cc6151d8223a5b4e16d02e26e","1c4c38000077c9d25d50577cb09562d9563aa7ef","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"001ed520e8a09b54914b9a9ee36cd13a30cbf599":["9f45f67a018421da088ea39274f23ad5d339b97d"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c2d0da1152c8dd998675c30a3f6f599a91770c2b","aba371508186796cc6151d8223a5b4e16d02e26e","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"1c4c38000077c9d25d50577cb09562d9563aa7ef":["001ed520e8a09b54914b9a9ee36cd13a30cbf599"],"9f45f67a018421da088ea39274f23ad5d339b97d":["c83f985d9828d30801541f1eed26aa3169646baf"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":[],"c83f985d9828d30801541f1eed26aa3169646baf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}