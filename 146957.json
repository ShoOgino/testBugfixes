{"path":"lucene/src/java/org/apache/lucene/index/CompoundFileReader#openInput(String,IOContext).mjava","commits":[{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileReader#openInput(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileReader#openInput(String,int).mjava","sourceNew":"  @Override\n  public synchronized IndexInput openInput(String id, IOContext context) throws IOException {\n    if (stream == null)\n      throw new IOException(\"Stream closed\");\n    \n    id = IndexFileNames.stripSegmentName(id);\n    final FileEntry entry = entries.get(id);\n    if (entry == null)\n      throw new IOException(\"No sub-file with id \" + id + \" found (files: \" + entries.keySet() + \")\");\n    // nocommit set read buffer size based on IOContext\n    return new CSIndexInput(stream, entry.offset, entry.length, BufferedIndexInput.BUFFER_SIZE);\n  }\n\n","sourceOld":"  @Override\n  public synchronized IndexInput openInput(String id, int readBufferSize) throws IOException {\n    if (stream == null)\n      throw new IOException(\"Stream closed\");\n    \n    id = IndexFileNames.stripSegmentName(id);\n    final FileEntry entry = entries.get(id);\n    if (entry == null)\n      throw new IOException(\"No sub-file with id \" + id + \" found (files: \" + entries.keySet() + \")\");\n    \n    return new CSIndexInput(stream, entry.offset, entry.length, readBufferSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c162b4b9ef005383c38e0912c16267584dc40de5","date":1310021443,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileReader#openInput(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileReader#openInput(String,IOContext).mjava","sourceNew":"  @Override\n  public synchronized IndexInput openInput(String id, IOContext context) throws IOException {\n    if (stream == null)\n      throw new IOException(\"Stream closed\");\n    \n    id = IndexFileNames.stripSegmentName(id);\n    final FileEntry entry = entries.get(id);\n    if (entry == null)\n      throw new IOException(\"No sub-file with id \" + id + \" found (files: \" + entries.keySet() + \")\");\n    return new CSIndexInput(stream, entry.offset, entry.length, context);\n  }\n\n","sourceOld":"  @Override\n  public synchronized IndexInput openInput(String id, IOContext context) throws IOException {\n    if (stream == null)\n      throw new IOException(\"Stream closed\");\n    \n    id = IndexFileNames.stripSegmentName(id);\n    final FileEntry entry = entries.get(id);\n    if (entry == null)\n      throw new IOException(\"No sub-file with id \" + id + \" found (files: \" + entries.keySet() + \")\");\n    // nocommit set read buffer size based on IOContext\n    return new CSIndexInput(stream, entry.offset, entry.length, BufferedIndexInput.BUFFER_SIZE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileReader#openInput(String,IOContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public synchronized IndexInput openInput(String id, IOContext context) throws IOException {\n    if (stream == null)\n      throw new IOException(\"Stream closed\");\n    \n    id = IndexFileNames.stripSegmentName(id);\n    final FileEntry entry = entries.get(id);\n    if (entry == null)\n      throw new IOException(\"No sub-file with id \" + id + \" found (files: \" + entries.keySet() + \")\");\n    return new CSIndexInput(stream, entry.offset, entry.length, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c162b4b9ef005383c38e0912c16267584dc40de5":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["c162b4b9ef005383c38e0912c16267584dc40de5","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c162b4b9ef005383c38e0912c16267584dc40de5":["d083e83f225b11e5fdd900e83d26ddb385b6955c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["c162b4b9ef005383c38e0912c16267584dc40de5"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}