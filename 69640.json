{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","commits":[{"id":"b5438f921924c13c882efeac58b6d3a7c2a3978e","date":1400171541,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n    if (lastPosition != -1) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"term appears more than once in document\");\n    }\n    lastPosition = position;\n    if (payload == null) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"missing payload\");\n    }\n    if (payload.length == 0) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"payload.length == 0\");\n    }\n    // nocommit decode payload to long here ... PayloadHelper!?  or keep as byte[]?\n    lastVersion = 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d3eedff9ce5a77e403f9d084a3f5a7a9d9eeaed","date":1400194410,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","sourceNew":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n    if (lastPosition != -1) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"term appears more than once in document\");\n    }\n    lastPosition = position;\n    if (payload == null) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"token doens't have a payload\");\n    }\n    if (payload.length != 8) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"payload.length != 8 (got \" + payload.length + \")\");\n    }\n    \n    lastVersion = IDVersionPostingsFormat.bytesToLong(payload);\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n    if (lastPosition != -1) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"term appears more than once in document\");\n    }\n    lastPosition = position;\n    if (payload == null) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"missing payload\");\n    }\n    if (payload.length == 0) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"payload.length == 0\");\n    }\n    // nocommit decode payload to long here ... PayloadHelper!?  or keep as byte[]?\n    lastVersion = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3251bdaf728baf81f779183e464984bc769ed9c7","date":1400494940,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","sourceNew":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n    if (lastPosition != -1) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"term appears more than once in document\");\n    }\n    lastPosition = position;\n    if (payload == null) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"token doens't have a payload\");\n    }\n    if (payload.length != 8) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"payload.length != 8 (got \" + payload.length + \")\");\n    }\n    \n    lastVersion = IDVersionPostingsFormat.bytesToLong(payload);\n    if (lastVersion < 0) {\n      throw new IllegalArgumentException(\"version must be >= 0 (got: \" + lastVersion + \"; payload=\" + payload + \")\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n    if (lastPosition != -1) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"term appears more than once in document\");\n    }\n    lastPosition = position;\n    if (payload == null) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"token doens't have a payload\");\n    }\n    if (payload.length != 8) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"payload.length != 8 (got \" + payload.length + \")\");\n    }\n    \n    lastVersion = IDVersionPostingsFormat.bytesToLong(payload);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a16b40feb4e6e0d55c1716733bde48296bedd20","date":1400540388,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","sourceNew":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n    if (lastPosition != -1) {\n      throw new IllegalArgumentException(\"term appears more than once in document\");\n    }\n    lastPosition = position;\n    if (payload == null) {\n      throw new IllegalArgumentException(\"token doens't have a payload\");\n    }\n    if (payload.length != 8) {\n      throw new IllegalArgumentException(\"payload.length != 8 (got \" + payload.length + \")\");\n    }\n    \n    lastVersion = IDVersionPostingsFormat.bytesToLong(payload);\n    if (lastVersion < 0) {\n      throw new IllegalArgumentException(\"version must be >= 0 (got: \" + lastVersion + \"; payload=\" + payload + \")\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n    if (lastPosition != -1) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"term appears more than once in document\");\n    }\n    lastPosition = position;\n    if (payload == null) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"token doens't have a payload\");\n    }\n    if (payload.length != 8) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"payload.length != 8 (got \" + payload.length + \")\");\n    }\n    \n    lastVersion = IDVersionPostingsFormat.bytesToLong(payload);\n    if (lastVersion < 0) {\n      throw new IllegalArgumentException(\"version must be >= 0 (got: \" + lastVersion + \"; payload=\" + payload + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efcf27cd5ca23def8376b4c321970c14dd71623","date":1400662679,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","sourceNew":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n    if (lastPosition != -1) {\n      throw new IllegalArgumentException(\"term appears more than once in document\");\n    }\n    lastPosition = position;\n    if (payload == null) {\n      throw new IllegalArgumentException(\"token doens't have a payload\");\n    }\n    if (payload.length != 8) {\n      throw new IllegalArgumentException(\"payload.length != 8 (got \" + payload.length + \")\");\n    }\n\n    lastVersion = IDVersionPostingsFormat.bytesToLong(payload);\n    if (lastVersion < 0) {\n      throw new IllegalArgumentException(\"version must be >= 0 (got: \" + lastVersion + \"; payload=\" + payload + \")\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n    if (lastPosition != -1) {\n      throw new IllegalArgumentException(\"term appears more than once in document\");\n    }\n    lastPosition = position;\n    if (payload == null) {\n      throw new IllegalArgumentException(\"token doens't have a payload\");\n    }\n    if (payload.length != 8) {\n      throw new IllegalArgumentException(\"payload.length != 8 (got \" + payload.length + \")\");\n    }\n    \n    lastVersion = IDVersionPostingsFormat.bytesToLong(payload);\n    if (lastVersion < 0) {\n      throw new IllegalArgumentException(\"version must be >= 0 (got: \" + lastVersion + \"; payload=\" + payload + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a2a0b58a171748f1022e63a0483908e6f50b0abf","date":1400686165,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","sourceNew":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n    if (lastDocID == -1) {\n      // Doc is deleted; skip it\n      return;\n    }\n    if (lastPosition != -1) {\n      throw new IllegalArgumentException(\"term appears more than once in document\");\n    }\n    lastPosition = position;\n    if (payload == null) {\n      throw new IllegalArgumentException(\"token doens't have a payload\");\n    }\n    if (payload.length != 8) {\n      throw new IllegalArgumentException(\"payload.length != 8 (got \" + payload.length + \")\");\n    }\n\n    lastVersion = IDVersionPostingsFormat.bytesToLong(payload);\n    if (lastVersion < 0) {\n      throw new IllegalArgumentException(\"version must be >= 0 (got: \" + lastVersion + \"; payload=\" + payload + \")\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n    if (lastPosition != -1) {\n      throw new IllegalArgumentException(\"term appears more than once in document\");\n    }\n    lastPosition = position;\n    if (payload == null) {\n      throw new IllegalArgumentException(\"token doens't have a payload\");\n    }\n    if (payload.length != 8) {\n      throw new IllegalArgumentException(\"payload.length != 8 (got \" + payload.length + \")\");\n    }\n\n    lastVersion = IDVersionPostingsFormat.bytesToLong(payload);\n    if (lastVersion < 0) {\n      throw new IllegalArgumentException(\"version must be >= 0 (got: \" + lastVersion + \"; payload=\" + payload + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","date":1400786907,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#addPosition(int,BytesRef,int,int).mjava","sourceNew":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n    if (lastDocID == -1) {\n      // Doc is deleted; skip it\n      return;\n    }\n    if (lastPosition != -1) {\n      throw new IllegalArgumentException(\"term appears more than once in document\");\n    }\n    lastPosition = position;\n    if (payload == null) {\n      throw new IllegalArgumentException(\"token doens't have a payload\");\n    }\n    if (payload.length != 8) {\n      throw new IllegalArgumentException(\"payload.length != 8 (got \" + payload.length + \")\");\n    }\n\n    lastVersion = IDVersionPostingsFormat.bytesToLong(payload);\n    if (lastVersion < 0) {\n      throw new IllegalArgumentException(\"version must be >= 0 (got: \" + lastVersion + \"; payload=\" + payload + \")\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n    if (lastDocID == -1) {\n      // Doc is deleted; skip it\n      return;\n    }\n    if (lastPosition != -1) {\n      throw new IllegalArgumentException(\"term appears more than once in document\");\n    }\n    lastPosition = position;\n    if (payload == null) {\n      throw new IllegalArgumentException(\"token doens't have a payload\");\n    }\n    if (payload.length != 8) {\n      throw new IllegalArgumentException(\"payload.length != 8 (got \" + payload.length + \")\");\n    }\n\n    lastVersion = IDVersionPostingsFormat.bytesToLong(payload);\n    if (lastVersion < 0) {\n      throw new IllegalArgumentException(\"version must be >= 0 (got: \" + lastVersion + \"; payload=\" + payload + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":["a2a0b58a171748f1022e63a0483908e6f50b0abf"],"0a16b40feb4e6e0d55c1716733bde48296bedd20":["3251bdaf728baf81f779183e464984bc769ed9c7"],"0efcf27cd5ca23def8376b4c321970c14dd71623":["0a16b40feb4e6e0d55c1716733bde48296bedd20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6d3eedff9ce5a77e403f9d084a3f5a7a9d9eeaed":["b5438f921924c13c882efeac58b6d3a7c2a3978e"],"a2a0b58a171748f1022e63a0483908e6f50b0abf":["0efcf27cd5ca23def8376b4c321970c14dd71623"],"b5438f921924c13c882efeac58b6d3a7c2a3978e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3251bdaf728baf81f779183e464984bc769ed9c7":["6d3eedff9ce5a77e403f9d084a3f5a7a9d9eeaed"]},"commit2Childs":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":[],"0a16b40feb4e6e0d55c1716733bde48296bedd20":["0efcf27cd5ca23def8376b4c321970c14dd71623"],"0efcf27cd5ca23def8376b4c321970c14dd71623":["a2a0b58a171748f1022e63a0483908e6f50b0abf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b5438f921924c13c882efeac58b6d3a7c2a3978e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6d3eedff9ce5a77e403f9d084a3f5a7a9d9eeaed":["3251bdaf728baf81f779183e464984bc769ed9c7"],"a2a0b58a171748f1022e63a0483908e6f50b0abf":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e"],"b5438f921924c13c882efeac58b6d3a7c2a3978e":["6d3eedff9ce5a77e403f9d084a3f5a7a9d9eeaed"],"3251bdaf728baf81f779183e464984bc769ed9c7":["0a16b40feb4e6e0d55c1716733bde48296bedd20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}