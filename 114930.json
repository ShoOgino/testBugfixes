{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesConsumer#addSortedNumericField(FieldInfo,DocValuesProducer).mjava","commits":[{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesConsumer#addSortedNumericField(FieldInfo,DocValuesProducer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesConsumer#addSortedNumericField(FieldInfo,Iterable[Number],Iterable[Number]).mjava","sourceNew":"  @Override\n  public void addSortedNumericField(FieldInfo field, final DocValuesProducer valuesProducer) throws IOException {\n\n    final Iterable<Number> docToValueCount = LegacyDocValuesIterables.sortedNumericToDocCount(valuesProducer, field, maxDoc);\n    final Iterable<Number> values = LegacyDocValuesIterables.sortedNumericToValues(valuesProducer, field);\n    \n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene54DocValuesFormat.SORTED_NUMERIC);\n    if (isSingleValued(docToValueCount)) {\n      meta.writeVInt(SORTED_SINGLE_VALUED);\n      // The field is single-valued, we can encode it as NUMERIC\n      addNumericField(field, singletonView(docToValueCount, values, null), NumberType.VALUE);\n    } else {\n      final SortedSet<LongsRef> uniqueValueSets = uniqueValueSets(docToValueCount, values);\n      if (uniqueValueSets != null) {\n        meta.writeVInt(SORTED_SET_TABLE);\n\n        // write the set_id -> values mapping\n        writeDictionary(uniqueValueSets);\n\n        // write the doc -> set_id as a numeric field\n        addNumericField(field, docToSetId(uniqueValueSets, docToValueCount, values), NumberType.ORDINAL);\n      } else {\n        meta.writeVInt(SORTED_WITH_ADDRESSES);\n        // write the stream of values as a numeric field\n        addNumericField(field, values, NumberType.VALUE);\n        // write the doc -> ord count as a absolute index to the stream\n        addOrdIndex(field, docToValueCount);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addSortedNumericField(FieldInfo field, final Iterable<Number> docToValueCount, final Iterable<Number> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene54DocValuesFormat.SORTED_NUMERIC);\n    if (isSingleValued(docToValueCount)) {\n      meta.writeVInt(SORTED_SINGLE_VALUED);\n      // The field is single-valued, we can encode it as NUMERIC\n      addNumericField(field, singletonView(docToValueCount, values, null));\n    } else {\n      final SortedSet<LongsRef> uniqueValueSets = uniqueValueSets(docToValueCount, values);\n      if (uniqueValueSets != null) {\n        meta.writeVInt(SORTED_SET_TABLE);\n\n        // write the set_id -> values mapping\n        writeDictionary(uniqueValueSets);\n\n        // write the doc -> set_id as a numeric field\n        addNumericField(field, docToSetId(uniqueValueSets, docToValueCount, values), NumberType.ORDINAL);\n      } else {\n        meta.writeVInt(SORTED_WITH_ADDRESSES);\n        // write the stream of values as a numeric field\n        addNumericField(field, values, NumberType.VALUE);\n        // write the doc -> ord count as a absolute index to the stream\n        addOrdIndex(field, docToValueCount);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesConsumer#addSortedNumericField(FieldInfo,DocValuesProducer).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void addSortedNumericField(FieldInfo field, final DocValuesProducer valuesProducer) throws IOException {\n\n    final Iterable<Number> docToValueCount = LegacyDocValuesIterables.sortedNumericToDocCount(valuesProducer, field, maxDoc);\n    final Iterable<Number> values = LegacyDocValuesIterables.sortedNumericToValues(valuesProducer, field);\n    \n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene54DocValuesFormat.SORTED_NUMERIC);\n    if (isSingleValued(docToValueCount)) {\n      meta.writeVInt(SORTED_SINGLE_VALUED);\n      // The field is single-valued, we can encode it as NUMERIC\n      addNumericField(field, singletonView(docToValueCount, values, null), NumberType.VALUE);\n    } else {\n      final SortedSet<LongsRef> uniqueValueSets = uniqueValueSets(docToValueCount, values);\n      if (uniqueValueSets != null) {\n        meta.writeVInt(SORTED_SET_TABLE);\n\n        // write the set_id -> values mapping\n        writeDictionary(uniqueValueSets);\n\n        // write the doc -> set_id as a numeric field\n        addNumericField(field, docToSetId(uniqueValueSets, docToValueCount, values), NumberType.ORDINAL);\n      } else {\n        meta.writeVInt(SORTED_WITH_ADDRESSES);\n        // write the stream of values as a numeric field\n        addNumericField(field, values, NumberType.VALUE);\n        // write the doc -> ord count as a absolute index to the stream\n        addOrdIndex(field, docToValueCount);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262","date":1475755647,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesConsumer#addSortedNumericField(FieldInfo,DocValuesProducer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesConsumer#addSortedNumericField(FieldInfo,DocValuesProducer).mjava","sourceNew":"  @Override\n  public void addSortedNumericField(FieldInfo field, final DocValuesProducer valuesProducer) throws IOException {\n\n    final Iterable<Number> docToValueCount = LegacyDocValuesIterables.sortedNumericToDocCount(valuesProducer, field, maxDoc);\n    final Iterable<Number> values = LegacyDocValuesIterables.sortedNumericToValues(valuesProducer, field);\n    \n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene54DocValuesFormat.SORTED_NUMERIC);\n    if (isSingleValued(docToValueCount)) {\n      meta.writeVInt(SORTED_SINGLE_VALUED);\n      // The field is single-valued, we can encode it as NUMERIC\n      addNumericField(field, singletonView(docToValueCount, values, null), NumberType.VALUE);\n    } else {\n      final SortedSet<LongsRef> uniqueValueSets = uniqueValueSets(docToValueCount, values);\n      if (uniqueValueSets != null) {\n        meta.writeVInt(SORTED_SET_TABLE);\n\n        // write the set_id -> values mapping\n        writeDictionary(uniqueValueSets);\n\n        // write the doc -> set_id as a numeric field\n        addNumericField(field, docToSetId(uniqueValueSets, docToValueCount, values), NumberType.ORDINAL);\n      } else {\n        meta.writeVInt(SORTED_WITH_ADDRESSES);\n        // write the stream of values as a numeric field\n        addNumericField(field, values, NumberType.VALUE);\n        // write the doc -> ord count as a absolute index to the stream\n        addOrdIndex(field, docToValueCount);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addSortedNumericField(FieldInfo field, final DocValuesProducer valuesProducer) throws IOException {\n\n    final Iterable<Number> docToValueCount = LegacyDocValuesIterables.sortedNumericToDocCount(valuesProducer, field, maxDoc);\n    final Iterable<Number> values = LegacyDocValuesIterables.sortedNumericToValues(valuesProducer, field);\n    \n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene54DocValuesFormat.SORTED_NUMERIC);\n    if (isSingleValued(docToValueCount)) {\n      meta.writeVInt(SORTED_SINGLE_VALUED);\n      // The field is single-valued, we can encode it as NUMERIC\n      addNumericField(field, singletonView(docToValueCount, values, null), NumberType.VALUE);\n    } else {\n      final SortedSet<LongsRef> uniqueValueSets = uniqueValueSets(docToValueCount, values);\n      if (uniqueValueSets != null) {\n        meta.writeVInt(SORTED_SET_TABLE);\n\n        // write the set_id -> values mapping\n        writeDictionary(uniqueValueSets);\n\n        // write the doc -> set_id as a numeric field\n        addNumericField(field, docToSetId(uniqueValueSets, docToValueCount, values), NumberType.ORDINAL);\n      } else {\n        meta.writeVInt(SORTED_WITH_ADDRESSES);\n        // write the stream of values as a numeric field\n        addNumericField(field, values, NumberType.VALUE);\n        // write the doc -> ord count as a absolute index to the stream\n        addOrdIndex(field, docToValueCount);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7f3090f7e0cab5b1f5acf12d21f31f00fe74a262"]},"commit2Childs":{"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["7f3090f7e0cab5b1f5acf12d21f31f00fe74a262"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}