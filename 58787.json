{"path":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterKerberos#setupMiniKdc().mjava","commits":[{"id":"8293bb9f086fce9590482de97de6eac8381ae15a","date":1432275970,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterKerberos#setupMiniKdc().mjava","pathOld":"/dev/null","sourceNew":"  private void setupMiniKdc() throws Exception {\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    kdc = KerberosTestUtil.getKdc(new File(kdcDir));\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String principal = \"HTTP/127.0.0.1\";\n    String zkServerPrincipal = \"zookeeper/127.0.0.1\";\n\n    kdc.start();\n    kdc.createPrincipal(keytabFile, principal, zkServerPrincipal);\n\n    String jaas = \"Client {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+principal+\"\\\";\\n\" \n        + \"};\\n\"\n        + \"Server {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+zkServerPrincipal+\"\\\";\\n\" \n        + \"};\\n\";\n    \n    Configuration conf = new KerberosTestUtil.JaasConfiguration(principal, keytabFile, zkServerPrincipal, keytabFile);\n    javax.security.auth.login.Configuration.setConfiguration(conf);\n    \n    String jaasFilePath = kdcDir+File.separator + \"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", principal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3cc56892371c2fde6f65948862e91c81a2f2503","date":1466364454,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterKerberos#setupMiniKdc().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterKerberos#setupMiniKdc().mjava","sourceNew":"  private void setupMiniKdc() throws Exception {\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    kdc = KerberosTestUtil.getKdc(new File(kdcDir));\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String principal = \"HTTP/127.0.0.1\";\n    String zkServerPrincipal = \"zookeeper/127.0.0.1\";\n\n    kdc.start();\n    kdc.createPrincipal(keytabFile, principal, zkServerPrincipal);\n\n    String jaas = \"Client {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+principal+\"\\\";\\n\" \n        + \"};\\n\"\n        + \"Server {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+zkServerPrincipal+\"\\\";\\n\" \n        + \"};\\n\";\n    \n    Configuration conf = new KerberosTestUtil.JaasConfiguration(principal, keytabFile, zkServerPrincipal, keytabFile);\n    javax.security.auth.login.Configuration.setConfiguration(conf);\n    \n    String jaasFilePath = kdcDir+File.separator + \"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", principal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","sourceOld":"  private void setupMiniKdc() throws Exception {\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    kdc = KerberosTestUtil.getKdc(new File(kdcDir));\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String principal = \"HTTP/127.0.0.1\";\n    String zkServerPrincipal = \"zookeeper/127.0.0.1\";\n\n    kdc.start();\n    kdc.createPrincipal(keytabFile, principal, zkServerPrincipal);\n\n    String jaas = \"Client {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+principal+\"\\\";\\n\" \n        + \"};\\n\"\n        + \"Server {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+zkServerPrincipal+\"\\\";\\n\" \n        + \"};\\n\";\n    \n    Configuration conf = new KerberosTestUtil.JaasConfiguration(principal, keytabFile, zkServerPrincipal, keytabFile);\n    javax.security.auth.login.Configuration.setConfiguration(conf);\n    \n    String jaasFilePath = kdcDir+File.separator + \"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", principal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20be168d828ac40d262f85364d02f15b491dd88b","date":1469725145,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterKerberos#setupMiniKdc().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterKerberos#setupMiniKdc().mjava","sourceNew":"  private void setupMiniKdc() throws Exception {\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String principal = \"HTTP/127.0.0.1\";\n    String zkServerPrincipal = \"zookeeper/127.0.0.1\";\n    KerberosTestServices kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(principal, keytabFile, zkServerPrincipal, keytabFile)\n        .build();\n\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, principal, zkServerPrincipal);\n\n    String jaas = \"Client {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+principal+\"\\\";\\n\" \n        + \"};\\n\"\n        + \"Server {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+zkServerPrincipal+\"\\\";\\n\" \n        + \"};\\n\";\n\n    String jaasFilePath = kdcDir+File.separator + \"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", principal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","sourceOld":"  private void setupMiniKdc() throws Exception {\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    kdc = KerberosTestUtil.getKdc(new File(kdcDir));\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String principal = \"HTTP/127.0.0.1\";\n    String zkServerPrincipal = \"zookeeper/127.0.0.1\";\n\n    kdc.start();\n    kdc.createPrincipal(keytabFile, principal, zkServerPrincipal);\n\n    String jaas = \"Client {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+principal+\"\\\";\\n\" \n        + \"};\\n\"\n        + \"Server {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+zkServerPrincipal+\"\\\";\\n\" \n        + \"};\\n\";\n    \n    Configuration conf = new KerberosTestUtil.JaasConfiguration(principal, keytabFile, zkServerPrincipal, keytabFile);\n    javax.security.auth.login.Configuration.setConfiguration(conf);\n    \n    String jaasFilePath = kdcDir+File.separator + \"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", principal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterKerberos#setupMiniKdc().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterKerberos#setupMiniKdc().mjava","sourceNew":"  private void setupMiniKdc() throws Exception {\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String principal = \"HTTP/127.0.0.1\";\n    String zkServerPrincipal = \"zookeeper/127.0.0.1\";\n    KerberosTestServices kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(principal, keytabFile, zkServerPrincipal, keytabFile)\n        .build();\n\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, principal, zkServerPrincipal);\n\n    String jaas = \"Client {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+principal+\"\\\";\\n\" \n        + \"};\\n\"\n        + \"Server {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+zkServerPrincipal+\"\\\";\\n\" \n        + \"};\\n\";\n\n    String jaasFilePath = kdcDir+File.separator + \"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", principal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","sourceOld":"  private void setupMiniKdc() throws Exception {\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    kdc = KerberosTestUtil.getKdc(new File(kdcDir));\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String principal = \"HTTP/127.0.0.1\";\n    String zkServerPrincipal = \"zookeeper/127.0.0.1\";\n\n    kdc.start();\n    kdc.createPrincipal(keytabFile, principal, zkServerPrincipal);\n\n    String jaas = \"Client {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+principal+\"\\\";\\n\" \n        + \"};\\n\"\n        + \"Server {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+zkServerPrincipal+\"\\\";\\n\" \n        + \"};\\n\";\n    \n    Configuration conf = new KerberosTestUtil.JaasConfiguration(principal, keytabFile, zkServerPrincipal, keytabFile);\n    javax.security.auth.login.Configuration.setConfiguration(conf);\n    \n    String jaasFilePath = kdcDir+File.separator + \"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", principal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterKerberos#setupMiniKdc().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterKerberos#setupMiniKdc().mjava","sourceNew":"  private void setupMiniKdc() throws Exception {\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String principal = \"HTTP/127.0.0.1\";\n    String zkServerPrincipal = \"zookeeper/127.0.0.1\";\n    KerberosTestServices kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(principal, keytabFile, zkServerPrincipal, keytabFile)\n        .build();\n\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, principal, zkServerPrincipal);\n\n    String jaas = \"Client {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+principal+\"\\\";\\n\" \n        + \"};\\n\"\n        + \"Server {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+zkServerPrincipal+\"\\\";\\n\" \n        + \"};\\n\";\n\n    String jaasFilePath = kdcDir+File.separator + \"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", principal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","sourceOld":"  private void setupMiniKdc() throws Exception {\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    kdc = KerberosTestUtil.getKdc(new File(kdcDir));\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String principal = \"HTTP/127.0.0.1\";\n    String zkServerPrincipal = \"zookeeper/127.0.0.1\";\n\n    kdc.start();\n    kdc.createPrincipal(keytabFile, principal, zkServerPrincipal);\n\n    String jaas = \"Client {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+principal+\"\\\";\\n\" \n        + \"};\\n\"\n        + \"Server {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+zkServerPrincipal+\"\\\";\\n\" \n        + \"};\\n\";\n    \n    Configuration conf = new KerberosTestUtil.JaasConfiguration(principal, keytabFile, zkServerPrincipal, keytabFile);\n    javax.security.auth.login.Configuration.setConfiguration(conf);\n    \n    String jaasFilePath = kdcDir+File.separator + \"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", principal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5719bfb2650ba43855e20564d39873bbbdc7f02c","date":1500676092,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterKerberos#setupMiniKdc().mjava","sourceNew":null,"sourceOld":"  private void setupMiniKdc() throws Exception {\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String principal = \"HTTP/127.0.0.1\";\n    String zkServerPrincipal = \"zookeeper/127.0.0.1\";\n    KerberosTestServices kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(principal, keytabFile, zkServerPrincipal, keytabFile)\n        .build();\n\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, principal, zkServerPrincipal);\n\n    String jaas = \"Client {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+principal+\"\\\";\\n\" \n        + \"};\\n\"\n        + \"Server {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+zkServerPrincipal+\"\\\";\\n\" \n        + \"};\\n\";\n\n    String jaasFilePath = kdcDir+File.separator + \"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", principal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":4,"author":"Cao Manh Dat","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterKerberos#setupMiniKdc().mjava","sourceNew":null,"sourceOld":"  private void setupMiniKdc() throws Exception {\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String principal = \"HTTP/127.0.0.1\";\n    String zkServerPrincipal = \"zookeeper/127.0.0.1\";\n    KerberosTestServices kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(principal, keytabFile, zkServerPrincipal, keytabFile)\n        .build();\n\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, principal, zkServerPrincipal);\n\n    String jaas = \"Client {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+principal+\"\\\";\\n\" \n        + \"};\\n\"\n        + \"Server {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+zkServerPrincipal+\"\\\";\\n\" \n        + \"};\\n\";\n\n    String jaasFilePath = kdcDir+File.separator + \"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", principal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a52341299179de5479672f7cf518bf4b173f34b3","date":1501079746,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterKerberos#setupMiniKdc().mjava","sourceNew":null,"sourceOld":"  private void setupMiniKdc() throws Exception {\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String principal = \"HTTP/127.0.0.1\";\n    String zkServerPrincipal = \"zookeeper/127.0.0.1\";\n    KerberosTestServices kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(principal, keytabFile, zkServerPrincipal, keytabFile)\n        .build();\n\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, principal, zkServerPrincipal);\n\n    String jaas = \"Client {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+principal+\"\\\";\\n\" \n        + \"};\\n\"\n        + \"Server {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\"+keytabFile.getAbsolutePath()+\"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\"+zkServerPrincipal+\"\\\";\\n\" \n        + \"};\\n\";\n\n    String jaasFilePath = kdcDir+File.separator + \"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", principal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a52341299179de5479672f7cf518bf4b173f34b3":["20be168d828ac40d262f85364d02f15b491dd88b","5719bfb2650ba43855e20564d39873bbbdc7f02c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8293bb9f086fce9590482de97de6eac8381ae15a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"936cdd5882761db3b844afd6f84ab81cbb011a75":["20be168d828ac40d262f85364d02f15b491dd88b","5719bfb2650ba43855e20564d39873bbbdc7f02c"],"5719bfb2650ba43855e20564d39873bbbdc7f02c":["20be168d828ac40d262f85364d02f15b491dd88b"],"f3cc56892371c2fde6f65948862e91c81a2f2503":["8293bb9f086fce9590482de97de6eac8381ae15a"],"20be168d828ac40d262f85364d02f15b491dd88b":["f3cc56892371c2fde6f65948862e91c81a2f2503"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["8293bb9f086fce9590482de97de6eac8381ae15a","20be168d828ac40d262f85364d02f15b491dd88b"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["f3cc56892371c2fde6f65948862e91c81a2f2503","20be168d828ac40d262f85364d02f15b491dd88b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a52341299179de5479672f7cf518bf4b173f34b3"]},"commit2Childs":{"a52341299179de5479672f7cf518bf4b173f34b3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8293bb9f086fce9590482de97de6eac8381ae15a"],"8293bb9f086fce9590482de97de6eac8381ae15a":["f3cc56892371c2fde6f65948862e91c81a2f2503","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"5719bfb2650ba43855e20564d39873bbbdc7f02c":["a52341299179de5479672f7cf518bf4b173f34b3","936cdd5882761db3b844afd6f84ab81cbb011a75"],"f3cc56892371c2fde6f65948862e91c81a2f2503":["20be168d828ac40d262f85364d02f15b491dd88b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"20be168d828ac40d262f85364d02f15b491dd88b":["a52341299179de5479672f7cf518bf4b173f34b3","936cdd5882761db3b844afd6f84ab81cbb011a75","5719bfb2650ba43855e20564d39873bbbdc7f02c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}