{"path":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#createDocument(int,String,int,NumberFormat).mjava","commits":[{"id":"d598d69959907d30ecae2c9143a637fd3d7f2279","date":1308351175,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#createDocument(int,String,int,NumberFormat).mjava","pathOld":"/dev/null","sourceNew":"  public Document createDocument(int n, String indexName, \n      int numFields, NumberFormat format) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    String id = format.format(n);\n    doc.add(new Field(\"id\", id, Store.YES, Index.NOT_ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"indexname\", indexName, Store.YES, Index.NOT_ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n    sb.append(\"a\");\n    sb.append(n);\n    doc.add(new Field(\"field1\", sb.toString(), Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(new Field(\"field\" + (i + 1), sb.toString(), Store.YES,\n                        Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n    }\n    return doc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7edfc3f7caa7b49a18fe367692768b33b018e9db","date":1308374217,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#createDocument(int,String,int,NumberFormat).mjava","pathOld":"/dev/null","sourceNew":"  public Document createDocument(int n, String indexName, \n      int numFields, NumberFormat format) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    String id = format.format(n);\n    doc.add(new Field(\"id\", id, Store.YES, Index.NOT_ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"indexname\", indexName, Store.YES, Index.NOT_ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n    sb.append(\"a\");\n    sb.append(n);\n    doc.add(new Field(\"field1\", sb.toString(), Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(new Field(\"field\" + (i + 1), sb.toString(), Store.YES,\n                        Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n    }\n    return doc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd5b0696fbde24daf807b2f98cffa838a7c0e159","date":1308394033,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#createDocument(int,String,int,NumberFormat).mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#createDocument(int,String,int,NumberFormat).mjava","sourceNew":"  private Document createDocument(int n, String indexName, \n      int numFields, NumberFormat format) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    String id = format.format(n);\n    doc.add(newField(\"id\", id, Store.YES, Index.NOT_ANALYZED));\n    doc.add(newField(\"indexname\", indexName, Store.YES, Index.NOT_ANALYZED));\n    sb.append(\"a\");\n    sb.append(n);\n    doc.add(newField(\"field1\", sb.toString(), Store.YES, Index.ANALYZED));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(newField(\"field\" + (i + 1), sb.toString(), Store.YES, Index.ANALYZED));\n    }\n    return doc;\n  }\n\n","sourceOld":"  public Document createDocument(int n, String indexName, \n      int numFields, NumberFormat format) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    String id = format.format(n);\n    doc.add(new Field(\"id\", id, Store.YES, Index.NOT_ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"indexname\", indexName, Store.YES, Index.NOT_ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n    sb.append(\"a\");\n    sb.append(n);\n    doc.add(new Field(\"field1\", sb.toString(), Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(new Field(\"field\" + (i + 1), sb.toString(), Store.YES,\n                        Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","date":1308439813,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#createDocument(int,String,int,NumberFormat).mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#createDocument(int,String,int,NumberFormat).mjava","sourceNew":"  private Document createDocument(int n, String indexName, \n      int numFields, NumberFormat format) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    String id = format.format(n);\n    doc.add(newField(\"id\", id, Store.YES, Index.NOT_ANALYZED));\n    doc.add(newField(\"indexname\", indexName, Store.YES, Index.NOT_ANALYZED));\n    sb.append(\"a\");\n    sb.append(n);\n    doc.add(newField(\"field1\", sb.toString(), Store.YES, Index.ANALYZED));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(newField(\"field\" + (i + 1), sb.toString(), Store.YES, Index.ANALYZED));\n    }\n    return doc;\n  }\n\n","sourceOld":"  public Document createDocument(int n, String indexName, \n      int numFields, NumberFormat format) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    String id = format.format(n);\n    doc.add(new Field(\"id\", id, Store.YES, Index.NOT_ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n    doc.add(new Field(\"indexname\", indexName, Store.YES, Index.NOT_ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n    sb.append(\"a\");\n    sb.append(n);\n    doc.add(new Field(\"field1\", sb.toString(), Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(new Field(\"field\" + (i + 1), sb.toString(), Store.YES,\n                        Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#createDocument(int,String,int,NumberFormat).mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#createDocument(int,String,int,NumberFormat).mjava","sourceNew":"  private Document createDocument(int n, String indexName, \n      int numFields, NumberFormat format) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    String id = format.format(n);\n    doc.add(newField(\"id\", id, StringField.TYPE_STORED));\n    doc.add(newField(\"indexname\", indexName, StringField.TYPE_STORED));\n    sb.append(\"a\");\n    sb.append(n);\n    doc.add(newField(\"field1\", sb.toString(), TextField.TYPE_STORED));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(newField(\"field\" + (i + 1), sb.toString(), TextField.TYPE_STORED));\n    }\n    return doc;\n  }\n\n","sourceOld":"  private Document createDocument(int n, String indexName, \n      int numFields, NumberFormat format) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    String id = format.format(n);\n    doc.add(newField(\"id\", id, Store.YES, Index.NOT_ANALYZED));\n    doc.add(newField(\"indexname\", indexName, Store.YES, Index.NOT_ANALYZED));\n    sb.append(\"a\");\n    sb.append(n);\n    doc.add(newField(\"field1\", sb.toString(), Store.YES, Index.ANALYZED));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(newField(\"field\" + (i + 1), sb.toString(), Store.YES, Index.ANALYZED));\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#createDocument(int,String,int,NumberFormat).mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#createDocument(int,String,int,NumberFormat).mjava","sourceNew":"  private Document createDocument(int n, String indexName, \n      int numFields, NumberFormat format) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    String id = format.format(n);\n    doc.add(newField(\"id\", id, StringField.TYPE_STORED));\n    doc.add(newField(\"indexname\", indexName, StringField.TYPE_STORED));\n    sb.append(\"a\");\n    sb.append(n);\n    doc.add(newField(\"field1\", sb.toString(), TextField.TYPE_STORED));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(newField(\"field\" + (i + 1), sb.toString(), TextField.TYPE_STORED));\n    }\n    return doc;\n  }\n\n","sourceOld":"  private Document createDocument(int n, String indexName, \n      int numFields, NumberFormat format) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    String id = format.format(n);\n    doc.add(newField(\"id\", id, StringField.TYPE_STORED));\n    doc.add(newField(\"indexname\", indexName, StringField.TYPE_STORED));\n    sb.append(\"a\");\n    sb.append(n);\n    doc.add(newField(\"field1\", sb.toString(), TextField.TYPE_STORED));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(newField(\"field\" + (i + 1), sb.toString(), TextField.TYPE_STORED));\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"7edfc3f7caa7b49a18fe367692768b33b018e9db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d598d69959907d30ecae2c9143a637fd3d7f2279"],"d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886":["7edfc3f7caa7b49a18fe367692768b33b018e9db","bd5b0696fbde24daf807b2f98cffa838a7c0e159"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["bd5b0696fbde24daf807b2f98cffa838a7c0e159"],"bd5b0696fbde24daf807b2f98cffa838a7c0e159":["d598d69959907d30ecae2c9143a637fd3d7f2279"],"d598d69959907d30ecae2c9143a637fd3d7f2279":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7edfc3f7caa7b49a18fe367692768b33b018e9db":["d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886"],"d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7edfc3f7caa7b49a18fe367692768b33b018e9db","d598d69959907d30ecae2c9143a637fd3d7f2279"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"bd5b0696fbde24daf807b2f98cffa838a7c0e159":["d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"d598d69959907d30ecae2c9143a637fd3d7f2279":["7edfc3f7caa7b49a18fe367692768b33b018e9db","bd5b0696fbde24daf807b2f98cffa838a7c0e159"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}