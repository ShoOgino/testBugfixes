{"path":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getInts(AtomicIndexReader,String,IntParser,boolean).mjava","commits":[{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getInts(AtomicIndexReader,String,IntParser,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getInts(IndexReader,String,IntParser,boolean).mjava","sourceNew":"  // inherit javadocs\n  public int[] getInts(AtomicIndexReader reader, String field, IntParser parser, boolean setDocsWithField)\n      throws IOException {\n    return (int[]) caches.get(Integer.TYPE).get(reader, new Entry(field, parser), setDocsWithField);\n  }\n\n","sourceOld":"  // inherit javadocs\n  public int[] getInts(IndexReader reader, String field, IntParser parser, boolean setDocsWithField)\n      throws IOException {\n    return (int[]) caches.get(Integer.TYPE).get(reader, new Entry(field, parser), setDocsWithField);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da6d5ac19a80d65b1e864251f155d30960353b7e","date":1327881054,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getInts(AtomicReader,String,IntParser,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getInts(AtomicIndexReader,String,IntParser,boolean).mjava","sourceNew":"  // inherit javadocs\n  public int[] getInts(AtomicReader reader, String field, IntParser parser, boolean setDocsWithField)\n      throws IOException {\n    return (int[]) caches.get(Integer.TYPE).get(reader, new Entry(field, parser), setDocsWithField);\n  }\n\n","sourceOld":"  // inherit javadocs\n  public int[] getInts(AtomicIndexReader reader, String field, IntParser parser, boolean setDocsWithField)\n      throws IOException {\n    return (int[]) caches.get(Integer.TYPE).get(reader, new Entry(field, parser), setDocsWithField);\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"da6d5ac19a80d65b1e864251f155d30960353b7e":["2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"da6d5ac19a80d65b1e864251f155d30960353b7e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["da6d5ac19a80d65b1e864251f155d30960353b7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["da6d5ac19a80d65b1e864251f155d30960353b7e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}