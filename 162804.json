{"path":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String).mjava","commits":[{"id":"733eaf468f18297b1bcc51031353bdfdd1913bdf","date":1456928540,"type":1,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String,String).mjava","sourceNew":"  private void setupRPTField(String distanceUnits, String geo) throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); // Delete managed-schema so it won't block parsing a new schema\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n    \n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n\n    SpatialRecursivePrefixTreeFieldType rptFieldType = new SpatialRecursivePrefixTreeFieldType();\n    Map<String, String> rptMap = new HashMap<String,String>();\n    if(distanceUnits!=null)\n      rptMap.put(\"distanceUnits\", distanceUnits);\n    if(geo!=null)\n      rptMap.put(\"geo\", geo);\n    rptFieldType.init(oldSchema, rptMap);\n    rptFieldType.setTypeName(\"location_rpt\");\n    SchemaField newField = new SchemaField(\"geo\", rptFieldType, SchemaField.STORED | SchemaField.INDEXED, null);\n    IndexSchema newSchema = oldSchema.addField(newField);\n\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(delQ(\"*:*\"));\n  }\n\n","sourceOld":"  private void setupRPTField(String units, String distanceUnits, String geo) throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); // Delete managed-schema so it won't block parsing a new schema\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n    \n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n\n    SpatialRecursivePrefixTreeFieldType rptFieldType = new SpatialRecursivePrefixTreeFieldType();\n    Map<String, String> rptMap = new HashMap<String,String>();\n    if(units!=null)\n      rptMap.put(\"units\", units);\n    if(distanceUnits!=null)\n      rptMap.put(\"distanceUnits\", distanceUnits);\n    if(geo!=null)\n      rptMap.put(\"geo\", geo);\n    rptFieldType.init(oldSchema, rptMap);\n    rptFieldType.setTypeName(\"location_rpt\");\n    SchemaField newField = new SchemaField(\"geo\", rptFieldType, SchemaField.STORED | SchemaField.INDEXED, null);\n    IndexSchema newSchema = oldSchema.addField(newField);\n\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(delQ(\"*:*\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String,String).mjava","sourceNew":"  private void setupRPTField(String distanceUnits, String geo) throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); // Delete managed-schema so it won't block parsing a new schema\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n    \n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n\n    SpatialRecursivePrefixTreeFieldType rptFieldType = new SpatialRecursivePrefixTreeFieldType();\n    Map<String, String> rptMap = new HashMap<String,String>();\n    if(distanceUnits!=null)\n      rptMap.put(\"distanceUnits\", distanceUnits);\n    if(geo!=null)\n      rptMap.put(\"geo\", geo);\n    rptFieldType.init(oldSchema, rptMap);\n    rptFieldType.setTypeName(\"location_rpt\");\n    SchemaField newField = new SchemaField(\"geo\", rptFieldType, SchemaField.STORED | SchemaField.INDEXED, null);\n    IndexSchema newSchema = oldSchema.addField(newField);\n\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(delQ(\"*:*\"));\n  }\n\n","sourceOld":"  private void setupRPTField(String units, String distanceUnits, String geo) throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); // Delete managed-schema so it won't block parsing a new schema\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n    \n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n\n    SpatialRecursivePrefixTreeFieldType rptFieldType = new SpatialRecursivePrefixTreeFieldType();\n    Map<String, String> rptMap = new HashMap<String,String>();\n    if(units!=null)\n      rptMap.put(\"units\", units);\n    if(distanceUnits!=null)\n      rptMap.put(\"distanceUnits\", distanceUnits);\n    if(geo!=null)\n      rptMap.put(\"geo\", geo);\n    rptFieldType.init(oldSchema, rptMap);\n    rptFieldType.setTypeName(\"location_rpt\");\n    SchemaField newField = new SchemaField(\"geo\", rptFieldType, SchemaField.STORED | SchemaField.INDEXED, null);\n    IndexSchema newSchema = oldSchema.addField(newField);\n\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(delQ(\"*:*\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03d8df7e95735d8cda6a255c42e0997c699bb176","date":1458157920,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String).mjava","sourceNew":"  private void setupRPTField(String distanceUnits, String geo) throws Exception {\n    setupRPTField(distanceUnits, geo, null);\n  }\n\n","sourceOld":"  private void setupRPTField(String distanceUnits, String geo) throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); // Delete managed-schema so it won't block parsing a new schema\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n    \n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n\n    SpatialRecursivePrefixTreeFieldType rptFieldType = new SpatialRecursivePrefixTreeFieldType();\n    Map<String, String> rptMap = new HashMap<String,String>();\n    if(distanceUnits!=null)\n      rptMap.put(\"distanceUnits\", distanceUnits);\n    if(geo!=null)\n      rptMap.put(\"geo\", geo);\n    rptFieldType.init(oldSchema, rptMap);\n    rptFieldType.setTypeName(\"location_rpt\");\n    SchemaField newField = new SchemaField(\"geo\", rptFieldType, SchemaField.STORED | SchemaField.INDEXED, null);\n    IndexSchema newSchema = oldSchema.addField(newField);\n\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(delQ(\"*:*\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23aec8f6a0b5a11d050d784a13871261bef7c925","date":1465332514,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String).mjava","sourceNew":"  private void setupRPTField(String distanceUnits, String geo) throws Exception {\n    setupRPTField(distanceUnits, geo, null, null);\n  }\n\n","sourceOld":"  private void setupRPTField(String distanceUnits, String geo) throws Exception {\n    setupRPTField(distanceUnits, geo, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String).mjava","sourceNew":"  private void setupRPTField(String distanceUnits, String geo) throws Exception {\n    setupRPTField(distanceUnits, geo, null, null);\n  }\n\n","sourceOld":"  private void setupRPTField(String distanceUnits, String geo) throws Exception {\n    setupRPTField(distanceUnits, geo, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"03d8df7e95735d8cda6a255c42e0997c699bb176":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"23aec8f6a0b5a11d050d784a13871261bef7c925":["03d8df7e95735d8cda6a255c42e0997c699bb176"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","733eaf468f18297b1bcc51031353bdfdd1913bdf"],"733eaf468f18297b1bcc51031353bdfdd1913bdf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["03d8df7e95735d8cda6a255c42e0997c699bb176","23aec8f6a0b5a11d050d784a13871261bef7c925"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23aec8f6a0b5a11d050d784a13871261bef7c925"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","733eaf468f18297b1bcc51031353bdfdd1913bdf"],"03d8df7e95735d8cda6a255c42e0997c699bb176":["23aec8f6a0b5a11d050d784a13871261bef7c925","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["03d8df7e95735d8cda6a255c42e0997c699bb176"],"23aec8f6a0b5a11d050d784a13871261bef7c925":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"733eaf468f18297b1bcc51031353bdfdd1913bdf":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}