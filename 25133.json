{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseTermVectorsFormatTestCase.RandomTokenStream#incrementToken().mjava","commits":[{"id":"f21ce13f410ee015e1ba14687ab4b8518ac52a11","date":1359713213,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseTermVectorsFormatTestCase.RandomTokenStream#incrementToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPayloadsOnVectors.RandomTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public final boolean incrementToken() throws IOException {\n      if (i < terms.length) {\n        termAtt.setLength(0).append(terms[i]);\n        piAtt.setPositionIncrement(positionsIncrements[i]);\n        oAtt.setOffset(startOffsets[i], endOffsets[i]);\n        pAtt.setPayload(payloads[i]);\n        ++i;\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public final boolean incrementToken() throws IOException {\n      if (i < terms.length) {\n        termAtt.setLength(0).append(terms[i]);\n        piAtt.setPositionIncrement(positionsIncrements[i]);\n        oAtt.setOffset(startOffsets[i], endOffsets[i]);\n        pAtt.setPayload(payloads[i]);\n        ++i;\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0fa6955ed1b1007ded1349ab72cea4555640432f","date":1359721908,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseTermVectorsFormatTestCase.RandomTokenStream#incrementToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPayloadsOnVectors.RandomTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public final boolean incrementToken() throws IOException {\n      if (i < terms.length) {\n        termAtt.setLength(0).append(terms[i]);\n        piAtt.setPositionIncrement(positionsIncrements[i]);\n        oAtt.setOffset(startOffsets[i], endOffsets[i]);\n        pAtt.setPayload(payloads[i]);\n        ++i;\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public final boolean incrementToken() throws IOException {\n      if (i < terms.length) {\n        termAtt.setLength(0).append(terms[i]);\n        piAtt.setPositionIncrement(positionsIncrements[i]);\n        oAtt.setOffset(startOffsets[i], endOffsets[i]);\n        pAtt.setPayload(payloads[i]);\n        ++i;\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae230518a1a68acc124bef8df61ef94bd7c1295e","date":1417181719,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseTermVectorsFormatTestCase.RandomTokenStream#incrementToken().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseTermVectorsFormatTestCase.RandomTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public final boolean incrementToken() throws IOException {\n      if (i < terms.length) {\n        clearAttributes();\n        termAtt.setLength(0).append(terms[i]);\n        piAtt.setPositionIncrement(positionsIncrements[i]);\n        oAtt.setOffset(startOffsets[i], endOffsets[i]);\n        pAtt.setPayload(payloads[i]);\n        ++i;\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public final boolean incrementToken() throws IOException {\n      if (i < terms.length) {\n        termAtt.setLength(0).append(terms[i]);\n        piAtt.setPositionIncrement(positionsIncrements[i]);\n        oAtt.setOffset(startOffsets[i], endOffsets[i]);\n        pAtt.setPayload(payloads[i]);\n        ++i;\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0fa6955ed1b1007ded1349ab72cea4555640432f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f21ce13f410ee015e1ba14687ab4b8518ac52a11"],"ae230518a1a68acc124bef8df61ef94bd7c1295e":["f21ce13f410ee015e1ba14687ab4b8518ac52a11"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f21ce13f410ee015e1ba14687ab4b8518ac52a11":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae230518a1a68acc124bef8df61ef94bd7c1295e"]},"commit2Childs":{"0fa6955ed1b1007ded1349ab72cea4555640432f":[],"ae230518a1a68acc124bef8df61ef94bd7c1295e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0fa6955ed1b1007ded1349ab72cea4555640432f","f21ce13f410ee015e1ba14687ab4b8518ac52a11"],"f21ce13f410ee015e1ba14687ab4b8518ac52a11":["0fa6955ed1b1007ded1349ab72cea4555640432f","ae230518a1a68acc124bef8df61ef94bd7c1295e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0fa6955ed1b1007ded1349ab72cea4555640432f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}