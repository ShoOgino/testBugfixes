{"path":"solr/core/src/test/org/apache/solr/handler/component/DistributedSuggestComponentTest#doTest().mjava","commits":[{"id":"bf2ccf302186b563c9549824a4d45db1e8cf8a0d","date":1387322051,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedSuggestComponentTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedSuggesterComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"cat\", \"This is another title\", \"price\", \"10\", \"weight\", \"10\");\n    index(id, \"2\", \"cat\", \"Yet another\", \"price\", \"15\", \"weight\", \"10\");\n    index(id, \"3\", \"cat\", \"Yet another title\", \"price\", \"20\", \"weight\", \"20\");\n    index(id, \"4\", \"cat\", \"suggestions for suggest\", \"price\", \"25\", \"weight\", \"20\");\n    index(id, \"5\", \"cat\", \"Red fox\", \"price\", \"30\", \"weight\", \"20\");\n    index(id, \"6\", \"cat\", \"Rad fox\", \"price\", \"35\", \"weight\", \"30\");\n    index(id, \"7\", \"cat\", \"example data\", \"price\", \"40\", \"weight\", \"30\");\n    index(id, \"8\", \"cat\", \"example inputdata\", \"price\", \"45\", \"weight\", \"30\");\n    index(id, \"9\", \"cat\", \"blah in blah\", \"price\", \"50\", \"weight\", \"40\");\n    index(id, \"10\", \"cat\", \"another blah in blah\", \"price\", \"55\", \"weight\", \"40\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"response\", SKIP);\n    \n    String requestHandlerName = \"/suggest\";\n    String docDictName = \"suggest_fuzzy_doc_dict\";\n    String docExprDictName = \"suggest_fuzzy_doc_expr_dict\";\n    \n    //Shortcut names\n    String build = SuggesterParams.SUGGEST_BUILD;\n    String count = SuggesterParams.SUGGEST_COUNT;\n    String dictionaryName = SuggesterParams.SUGGEST_DICT;\n    \n    //Build the suggest dictionary \n    query(buildRequest(\"\", true, requestHandlerName, build, \"true\", dictionaryName, docDictName));\n    query(buildRequest(\"\", true, requestHandlerName, build, \"true\", dictionaryName, docExprDictName));\n    \n    //Test Basic Functionality\n    query(buildRequest(\"exampel\", false, requestHandlerName, dictionaryName, docDictName, count, \"2\"));\n    query(buildRequest(\"Yet\", false, requestHandlerName, dictionaryName, docExprDictName, count, \"2\"));\n    query(buildRequest(\"blah\", true, requestHandlerName, dictionaryName, docExprDictName, count, \"2\"));\n    query(buildRequest(\"blah\", true, requestHandlerName, dictionaryName, docDictName, count, \"2\"));\n    \n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"cat\", \"This is another title\", \"price\", \"10\", \"weight\", \"10\");\n    index(id, \"2\", \"cat\", \"Yet another\", \"price\", \"15\", \"weight\", \"10\");\n    index(id, \"3\", \"cat\", \"Yet another title\", \"price\", \"20\", \"weight\", \"20\");\n    index(id, \"4\", \"cat\", \"suggestions for suggest\", \"price\", \"25\", \"weight\", \"20\");\n    index(id, \"5\", \"cat\", \"Red fox\", \"price\", \"30\", \"weight\", \"20\");\n    index(id, \"6\", \"cat\", \"Rad fox\", \"price\", \"35\", \"weight\", \"30\");\n    index(id, \"7\", \"cat\", \"example data\", \"price\", \"40\", \"weight\", \"30\");\n    index(id, \"8\", \"cat\", \"example inputdata\", \"price\", \"45\", \"weight\", \"30\");\n    index(id, \"9\", \"cat\", \"blah in blah\", \"price\", \"50\", \"weight\", \"40\");\n    index(id, \"10\", \"cat\", \"another blah in blah\", \"price\", \"55\", \"weight\", \"40\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"response\", SKIP);\n    \n    String requestHandlerName = \"/suggest\";\n    String docDictName = \"suggest_fuzzy_doc_dict\";\n    String docExprDictName = \"suggest_fuzzy_doc_expr_dict\";\n    \n    //Shortcut names\n    String build = SuggesterParams.SUGGEST_BUILD;\n    String count = SuggesterParams.SUGGEST_COUNT;\n    String dictionaryName = SuggesterParams.SUGGEST_DICT;\n    \n    //Build the suggest dictionary \n    query(buildRequest(\"\", true, requestHandlerName, build, \"true\", dictionaryName, docDictName));\n    query(buildRequest(\"\", true, requestHandlerName, build, \"true\", dictionaryName, docExprDictName));\n    \n    //Test Basic Functionality\n    query(buildRequest(\"exampel\", false, requestHandlerName, dictionaryName, docDictName, count, \"2\"));\n    query(buildRequest(\"Yet\", false, requestHandlerName, dictionaryName, docExprDictName, count, \"2\"));\n    query(buildRequest(\"blah\", true, requestHandlerName, dictionaryName, docExprDictName, count, \"2\"));\n    query(buildRequest(\"blah\", true, requestHandlerName, dictionaryName, docDictName, count, \"2\"));\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedSuggestComponentTest#doTest().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"cat\", \"This is another title\", \"price\", \"10\", \"weight\", \"10\");\n    index(id, \"2\", \"cat\", \"Yet another\", \"price\", \"15\", \"weight\", \"10\");\n    index(id, \"3\", \"cat\", \"Yet another title\", \"price\", \"20\", \"weight\", \"20\");\n    index(id, \"4\", \"cat\", \"suggestions for suggest\", \"price\", \"25\", \"weight\", \"20\");\n    index(id, \"5\", \"cat\", \"Red fox\", \"price\", \"30\", \"weight\", \"20\");\n    index(id, \"6\", \"cat\", \"Rad fox\", \"price\", \"35\", \"weight\", \"30\");\n    index(id, \"7\", \"cat\", \"example data\", \"price\", \"40\", \"weight\", \"30\");\n    index(id, \"8\", \"cat\", \"example inputdata\", \"price\", \"45\", \"weight\", \"30\");\n    index(id, \"9\", \"cat\", \"blah in blah\", \"price\", \"50\", \"weight\", \"40\");\n    index(id, \"10\", \"cat\", \"another blah in blah\", \"price\", \"55\", \"weight\", \"40\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"response\", SKIP);\n    \n    String requestHandlerName = \"/suggest\";\n    String docDictName = \"suggest_fuzzy_doc_dict\";\n    String docExprDictName = \"suggest_fuzzy_doc_expr_dict\";\n    \n    //Shortcut names\n    String build = SuggesterParams.SUGGEST_BUILD;\n    String count = SuggesterParams.SUGGEST_COUNT;\n    String dictionaryName = SuggesterParams.SUGGEST_DICT;\n    \n    //Build the suggest dictionary \n    query(buildRequest(\"\", true, requestHandlerName, build, \"true\", dictionaryName, docDictName));\n    query(buildRequest(\"\", true, requestHandlerName, build, \"true\", dictionaryName, docExprDictName));\n    \n    //Test Basic Functionality\n    query(buildRequest(\"exampel\", false, requestHandlerName, dictionaryName, docDictName, count, \"2\"));\n    query(buildRequest(\"Yet\", false, requestHandlerName, dictionaryName, docExprDictName, count, \"2\"));\n    query(buildRequest(\"blah\", true, requestHandlerName, dictionaryName, docExprDictName, count, \"2\"));\n    query(buildRequest(\"blah\", true, requestHandlerName, dictionaryName, docDictName, count, \"2\"));\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"214b8610690edbe7e294594a7bc58a978ef1863c","date":1389376762,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedSuggestComponentTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedSuggestComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"cat\", \"This is another title\", \"price\", \"10\", \"weight\", \"10\");\n    index(id, \"2\", \"cat\", \"Yet another\", \"price\", \"15\", \"weight\", \"10\");\n    index(id, \"3\", \"cat\", \"Yet another title\", \"price\", \"20\", \"weight\", \"20\");\n    index(id, \"4\", \"cat\", \"suggestions for suggest\", \"price\", \"25\", \"weight\", \"20\");\n    index(id, \"5\", \"cat\", \"Red fox\", \"price\", \"30\", \"weight\", \"20\");\n    index(id, \"6\", \"cat\", \"Rad fox\", \"price\", \"35\", \"weight\", \"30\");\n    index(id, \"7\", \"cat\", \"example data\", \"price\", \"40\", \"weight\", \"30\");\n    index(id, \"8\", \"cat\", \"example inputdata\", \"price\", \"45\", \"weight\", \"30\");\n    index(id, \"9\", \"cat\", \"blah in blah\", \"price\", \"50\", \"weight\", \"40\");\n    index(id, \"10\", \"cat\", \"another blah in blah\", \"price\", \"55\", \"weight\", \"40\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"response\", SKIP);\n    \n    String requestHandlerName = \"/suggest\";\n    String docDictName = \"suggest_fuzzy_doc_dict\";\n    String docExprDictName = \"suggest_fuzzy_doc_expr_dict\";\n    \n    //Shortcut names\n    String build = SuggesterParams.SUGGEST_BUILD;\n    String buildAll = SuggesterParams.SUGGEST_BUILD_ALL;\n    String count = SuggesterParams.SUGGEST_COUNT;\n    String dictionaryName = SuggesterParams.SUGGEST_DICT;\n    \n    //Build the suggest dictionary\n    if (random().nextBoolean()) { // build all the suggesters in one go\n      query(buildRequest(\"\", true, requestHandlerName, buildAll, \"true\"));\n    } else { // build suggesters individually\n      query(buildRequest(\"\", true, requestHandlerName, build, \"true\", dictionaryName, docDictName));\n      query(buildRequest(\"\", true, requestHandlerName, build, \"true\", dictionaryName, docExprDictName)); \n    }\n    \n    //Test Basic Functionality\n    query(buildRequest(\"exampel\", false, requestHandlerName, dictionaryName, docDictName, count, \"2\"));\n    query(buildRequest(\"Yet\", false, requestHandlerName, dictionaryName, docExprDictName, count, \"2\"));\n    query(buildRequest(\"blah\", true, requestHandlerName, dictionaryName, docExprDictName, count, \"2\"));\n    query(buildRequest(\"blah\", true, requestHandlerName, dictionaryName, docDictName, count, \"2\"));\n    \n    //Test multiSuggester\n    query(buildRequest(\"exampel\", false, requestHandlerName, dictionaryName, docDictName, dictionaryName, docExprDictName, count, \"2\"));\n    \n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"cat\", \"This is another title\", \"price\", \"10\", \"weight\", \"10\");\n    index(id, \"2\", \"cat\", \"Yet another\", \"price\", \"15\", \"weight\", \"10\");\n    index(id, \"3\", \"cat\", \"Yet another title\", \"price\", \"20\", \"weight\", \"20\");\n    index(id, \"4\", \"cat\", \"suggestions for suggest\", \"price\", \"25\", \"weight\", \"20\");\n    index(id, \"5\", \"cat\", \"Red fox\", \"price\", \"30\", \"weight\", \"20\");\n    index(id, \"6\", \"cat\", \"Rad fox\", \"price\", \"35\", \"weight\", \"30\");\n    index(id, \"7\", \"cat\", \"example data\", \"price\", \"40\", \"weight\", \"30\");\n    index(id, \"8\", \"cat\", \"example inputdata\", \"price\", \"45\", \"weight\", \"30\");\n    index(id, \"9\", \"cat\", \"blah in blah\", \"price\", \"50\", \"weight\", \"40\");\n    index(id, \"10\", \"cat\", \"another blah in blah\", \"price\", \"55\", \"weight\", \"40\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"response\", SKIP);\n    \n    String requestHandlerName = \"/suggest\";\n    String docDictName = \"suggest_fuzzy_doc_dict\";\n    String docExprDictName = \"suggest_fuzzy_doc_expr_dict\";\n    \n    //Shortcut names\n    String build = SuggesterParams.SUGGEST_BUILD;\n    String count = SuggesterParams.SUGGEST_COUNT;\n    String dictionaryName = SuggesterParams.SUGGEST_DICT;\n    \n    //Build the suggest dictionary \n    query(buildRequest(\"\", true, requestHandlerName, build, \"true\", dictionaryName, docDictName));\n    query(buildRequest(\"\", true, requestHandlerName, build, \"true\", dictionaryName, docExprDictName));\n    \n    //Test Basic Functionality\n    query(buildRequest(\"exampel\", false, requestHandlerName, dictionaryName, docDictName, count, \"2\"));\n    query(buildRequest(\"Yet\", false, requestHandlerName, dictionaryName, docExprDictName, count, \"2\"));\n    query(buildRequest(\"blah\", true, requestHandlerName, dictionaryName, docExprDictName, count, \"2\"));\n    query(buildRequest(\"blah\", true, requestHandlerName, dictionaryName, docDictName, count, \"2\"));\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"072f211dfa8387028bb978d128c35bf9a450bbbf","date":1406041363,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedSuggestComponentTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedSuggestComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"cat\", \"This is another title\", \"price\", \"10\", \"weight\", \"10\");\n    index(id, \"2\", \"cat\", \"Yet another\", \"price\", \"15\", \"weight\", \"10\");\n    index(id, \"3\", \"cat\", \"Yet another title\", \"price\", \"20\", \"weight\", \"20\");\n    index(id, \"4\", \"cat\", \"suggestions for suggest\", \"price\", \"25\", \"weight\", \"20\");\n    index(id, \"5\", \"cat\", \"Red fox\", \"price\", \"30\", \"weight\", \"20\");\n    index(id, \"6\", \"cat\", \"Rad fox\", \"price\", \"35\", \"weight\", \"30\");\n    index(id, \"7\", \"cat\", \"example data\", \"price\", \"40\", \"weight\", \"30\");\n    index(id, \"8\", \"cat\", \"example inputdata\", \"price\", \"45\", \"weight\", \"30\");\n    index(id, \"9\", \"cat\", \"blah in blah\", \"price\", \"50\", \"weight\", \"40\");\n    index(id, \"10\", \"cat\", \"another blah in blah\", \"price\", \"55\", \"weight\", \"40\");\n    commit();\n\n    handle.clear();\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"response\", SKIP);\n    \n    String requestHandlerName = \"/suggest\";\n    String docDictName = \"suggest_fuzzy_doc_dict\";\n    String docExprDictName = \"suggest_fuzzy_doc_expr_dict\";\n    \n    //Shortcut names\n    String build = SuggesterParams.SUGGEST_BUILD;\n    String buildAll = SuggesterParams.SUGGEST_BUILD_ALL;\n    String count = SuggesterParams.SUGGEST_COUNT;\n    String dictionaryName = SuggesterParams.SUGGEST_DICT;\n    \n    //Build the suggest dictionary\n    if (random().nextBoolean()) { // build all the suggesters in one go\n      query(buildRequest(\"\", true, requestHandlerName, buildAll, \"true\"));\n    } else { // build suggesters individually\n      query(buildRequest(\"\", true, requestHandlerName, build, \"true\", dictionaryName, docDictName));\n      query(buildRequest(\"\", true, requestHandlerName, build, \"true\", dictionaryName, docExprDictName)); \n    }\n    \n    //Test Basic Functionality\n    query(buildRequest(\"exampel\", false, requestHandlerName, dictionaryName, docDictName, count, \"2\"));\n    query(buildRequest(\"Yet\", false, requestHandlerName, dictionaryName, docExprDictName, count, \"2\"));\n    query(buildRequest(\"blah\", true, requestHandlerName, dictionaryName, docExprDictName, count, \"2\"));\n    query(buildRequest(\"blah\", true, requestHandlerName, dictionaryName, docDictName, count, \"2\"));\n    \n    //Test multiSuggester\n    query(buildRequest(\"exampel\", false, requestHandlerName, dictionaryName, docDictName, dictionaryName, docExprDictName, count, \"2\"));\n    \n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"cat\", \"This is another title\", \"price\", \"10\", \"weight\", \"10\");\n    index(id, \"2\", \"cat\", \"Yet another\", \"price\", \"15\", \"weight\", \"10\");\n    index(id, \"3\", \"cat\", \"Yet another title\", \"price\", \"20\", \"weight\", \"20\");\n    index(id, \"4\", \"cat\", \"suggestions for suggest\", \"price\", \"25\", \"weight\", \"20\");\n    index(id, \"5\", \"cat\", \"Red fox\", \"price\", \"30\", \"weight\", \"20\");\n    index(id, \"6\", \"cat\", \"Rad fox\", \"price\", \"35\", \"weight\", \"30\");\n    index(id, \"7\", \"cat\", \"example data\", \"price\", \"40\", \"weight\", \"30\");\n    index(id, \"8\", \"cat\", \"example inputdata\", \"price\", \"45\", \"weight\", \"30\");\n    index(id, \"9\", \"cat\", \"blah in blah\", \"price\", \"50\", \"weight\", \"40\");\n    index(id, \"10\", \"cat\", \"another blah in blah\", \"price\", \"55\", \"weight\", \"40\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"response\", SKIP);\n    \n    String requestHandlerName = \"/suggest\";\n    String docDictName = \"suggest_fuzzy_doc_dict\";\n    String docExprDictName = \"suggest_fuzzy_doc_expr_dict\";\n    \n    //Shortcut names\n    String build = SuggesterParams.SUGGEST_BUILD;\n    String buildAll = SuggesterParams.SUGGEST_BUILD_ALL;\n    String count = SuggesterParams.SUGGEST_COUNT;\n    String dictionaryName = SuggesterParams.SUGGEST_DICT;\n    \n    //Build the suggest dictionary\n    if (random().nextBoolean()) { // build all the suggesters in one go\n      query(buildRequest(\"\", true, requestHandlerName, buildAll, \"true\"));\n    } else { // build suggesters individually\n      query(buildRequest(\"\", true, requestHandlerName, build, \"true\", dictionaryName, docDictName));\n      query(buildRequest(\"\", true, requestHandlerName, build, \"true\", dictionaryName, docExprDictName)); \n    }\n    \n    //Test Basic Functionality\n    query(buildRequest(\"exampel\", false, requestHandlerName, dictionaryName, docDictName, count, \"2\"));\n    query(buildRequest(\"Yet\", false, requestHandlerName, dictionaryName, docExprDictName, count, \"2\"));\n    query(buildRequest(\"blah\", true, requestHandlerName, dictionaryName, docExprDictName, count, \"2\"));\n    query(buildRequest(\"blah\", true, requestHandlerName, dictionaryName, docDictName, count, \"2\"));\n    \n    //Test multiSuggester\n    query(buildRequest(\"exampel\", false, requestHandlerName, dictionaryName, docDictName, dictionaryName, docExprDictName, count, \"2\"));\n    \n  }\n\n","bugFix":["7f2e96099703c24c0c63d27806ba7020626b649b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedSuggestComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedSuggestComponentTest#doTest().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"cat\", \"This is another title\", \"price\", \"10\", \"weight\", \"10\");\n    index(id, \"2\", \"cat\", \"Yet another\", \"price\", \"15\", \"weight\", \"10\");\n    index(id, \"3\", \"cat\", \"Yet another title\", \"price\", \"20\", \"weight\", \"20\");\n    index(id, \"4\", \"cat\", \"suggestions for suggest\", \"price\", \"25\", \"weight\", \"20\");\n    index(id, \"5\", \"cat\", \"Red fox\", \"price\", \"30\", \"weight\", \"20\");\n    index(id, \"6\", \"cat\", \"Rad fox\", \"price\", \"35\", \"weight\", \"30\");\n    index(id, \"7\", \"cat\", \"example data\", \"price\", \"40\", \"weight\", \"30\");\n    index(id, \"8\", \"cat\", \"example inputdata\", \"price\", \"45\", \"weight\", \"30\");\n    index(id, \"9\", \"cat\", \"blah in blah\", \"price\", \"50\", \"weight\", \"40\");\n    index(id, \"10\", \"cat\", \"another blah in blah\", \"price\", \"55\", \"weight\", \"40\");\n    commit();\n\n    handle.clear();\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"response\", SKIP);\n    \n    String requestHandlerName = \"/suggest\";\n    String docDictName = \"suggest_fuzzy_doc_dict\";\n    String docExprDictName = \"suggest_fuzzy_doc_expr_dict\";\n    \n    //Shortcut names\n    String build = SuggesterParams.SUGGEST_BUILD;\n    String buildAll = SuggesterParams.SUGGEST_BUILD_ALL;\n    String count = SuggesterParams.SUGGEST_COUNT;\n    String dictionaryName = SuggesterParams.SUGGEST_DICT;\n    \n    //Build the suggest dictionary\n    if (random().nextBoolean()) { // build all the suggesters in one go\n      query(buildRequest(\"\", true, requestHandlerName, buildAll, \"true\"));\n    } else { // build suggesters individually\n      query(buildRequest(\"\", true, requestHandlerName, build, \"true\", dictionaryName, docDictName));\n      query(buildRequest(\"\", true, requestHandlerName, build, \"true\", dictionaryName, docExprDictName)); \n    }\n    \n    //Test Basic Functionality\n    query(buildRequest(\"exampel\", false, requestHandlerName, dictionaryName, docDictName, count, \"2\"));\n    query(buildRequest(\"Yet\", false, requestHandlerName, dictionaryName, docExprDictName, count, \"2\"));\n    query(buildRequest(\"blah\", true, requestHandlerName, dictionaryName, docExprDictName, count, \"2\"));\n    query(buildRequest(\"blah\", true, requestHandlerName, dictionaryName, docDictName, count, \"2\"));\n    \n    //Test multiSuggester\n    query(buildRequest(\"exampel\", false, requestHandlerName, dictionaryName, docDictName, dictionaryName, docExprDictName, count, \"2\"));\n    \n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"cat\", \"This is another title\", \"price\", \"10\", \"weight\", \"10\");\n    index(id, \"2\", \"cat\", \"Yet another\", \"price\", \"15\", \"weight\", \"10\");\n    index(id, \"3\", \"cat\", \"Yet another title\", \"price\", \"20\", \"weight\", \"20\");\n    index(id, \"4\", \"cat\", \"suggestions for suggest\", \"price\", \"25\", \"weight\", \"20\");\n    index(id, \"5\", \"cat\", \"Red fox\", \"price\", \"30\", \"weight\", \"20\");\n    index(id, \"6\", \"cat\", \"Rad fox\", \"price\", \"35\", \"weight\", \"30\");\n    index(id, \"7\", \"cat\", \"example data\", \"price\", \"40\", \"weight\", \"30\");\n    index(id, \"8\", \"cat\", \"example inputdata\", \"price\", \"45\", \"weight\", \"30\");\n    index(id, \"9\", \"cat\", \"blah in blah\", \"price\", \"50\", \"weight\", \"40\");\n    index(id, \"10\", \"cat\", \"another blah in blah\", \"price\", \"55\", \"weight\", \"40\");\n    commit();\n\n    handle.clear();\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"response\", SKIP);\n    \n    String requestHandlerName = \"/suggest\";\n    String docDictName = \"suggest_fuzzy_doc_dict\";\n    String docExprDictName = \"suggest_fuzzy_doc_expr_dict\";\n    \n    //Shortcut names\n    String build = SuggesterParams.SUGGEST_BUILD;\n    String buildAll = SuggesterParams.SUGGEST_BUILD_ALL;\n    String count = SuggesterParams.SUGGEST_COUNT;\n    String dictionaryName = SuggesterParams.SUGGEST_DICT;\n    \n    //Build the suggest dictionary\n    if (random().nextBoolean()) { // build all the suggesters in one go\n      query(buildRequest(\"\", true, requestHandlerName, buildAll, \"true\"));\n    } else { // build suggesters individually\n      query(buildRequest(\"\", true, requestHandlerName, build, \"true\", dictionaryName, docDictName));\n      query(buildRequest(\"\", true, requestHandlerName, build, \"true\", dictionaryName, docExprDictName)); \n    }\n    \n    //Test Basic Functionality\n    query(buildRequest(\"exampel\", false, requestHandlerName, dictionaryName, docDictName, count, \"2\"));\n    query(buildRequest(\"Yet\", false, requestHandlerName, dictionaryName, docExprDictName, count, \"2\"));\n    query(buildRequest(\"blah\", true, requestHandlerName, dictionaryName, docExprDictName, count, \"2\"));\n    query(buildRequest(\"blah\", true, requestHandlerName, dictionaryName, docDictName, count, \"2\"));\n    \n    //Test multiSuggester\n    query(buildRequest(\"exampel\", false, requestHandlerName, dictionaryName, docDictName, dictionaryName, docExprDictName, count, \"2\"));\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"072f211dfa8387028bb978d128c35bf9a450bbbf":["214b8610690edbe7e294594a7bc58a978ef1863c"],"abb23fcc2461782ab204e61213240feb77d355aa":["072f211dfa8387028bb978d128c35bf9a450bbbf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"214b8610690edbe7e294594a7bc58a978ef1863c":["bf2ccf302186b563c9549824a4d45db1e8cf8a0d"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bf2ccf302186b563c9549824a4d45db1e8cf8a0d"],"bf2ccf302186b563c9549824a4d45db1e8cf8a0d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["abb23fcc2461782ab204e61213240feb77d355aa"]},"commit2Childs":{"072f211dfa8387028bb978d128c35bf9a450bbbf":["abb23fcc2461782ab204e61213240feb77d355aa"],"abb23fcc2461782ab204e61213240feb77d355aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","bf2ccf302186b563c9549824a4d45db1e8cf8a0d"],"214b8610690edbe7e294594a7bc58a978ef1863c":["072f211dfa8387028bb978d128c35bf9a450bbbf"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"bf2ccf302186b563c9549824a4d45db1e8cf8a0d":["214b8610690edbe7e294594a7bc58a978ef1863c","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}