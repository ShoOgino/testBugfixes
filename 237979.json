{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWTermVectorsWriter#finish(FieldInfos,int).mjava","commits":[{"id":"8febb56d1ed9f3314d35d075599fd9aff857be3c","date":1337729003,"type":2,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWTermVectorsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#finish(int).mjava","sourceNew":"  @Override\n  public void finish(FieldInfos fis, int numDocs) throws IOException {\n    if (4+((long) numDocs)*16 != tvx.getFilePointer())\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"tvx size mismatch: mergedDocs is \" + numDocs + \" but tvx size is \" + tvx.getFilePointer() + \" file=\" + tvx.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","sourceOld":"  @Override\n  public void finish(int numDocs) throws IOException {\n    if (4+((long) numDocs)*16 != tvx.getFilePointer())\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"tvx size mismatch: mergedDocs is \" + numDocs + \" but tvx size is \" + tvx.getFilePointer() + \" file=\" + tvx.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWTermVectorsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWTermVectorsWriter#finish(int).mjava","sourceNew":"  @Override\n  public void finish(FieldInfos fis, int numDocs) throws IOException {\n    if (4+((long) numDocs)*16 != tvx.getFilePointer())\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"tvx size mismatch: mergedDocs is \" + numDocs + \" but tvx size is \" + tvx.getFilePointer() + \" file=\" + tvx.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","sourceOld":"  @Override\n  public void finish(int numDocs) throws IOException {\n    if (4+((long) numDocs)*16 != tvx.getFilePointer())\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"tvx size mismatch: mergedDocs is \" + numDocs + \" but tvx size is \" + tvx.getFilePointer() + \" file=\" + tvx.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57ae3024996ccdb3c36c42cb890e1efb37df4ce8","date":1338343651,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWTermVectorsWriter#finish(FieldInfos,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void finish(FieldInfos fis, int numDocs) throws IOException {\n    if (4+((long) numDocs)*16 != tvx.getFilePointer())\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"tvx size mismatch: mergedDocs is \" + numDocs + \" but tvx size is \" + tvx.getFilePointer() + \" file=\" + tvx.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"8febb56d1ed9f3314d35d075599fd9aff857be3c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8febb56d1ed9f3314d35d075599fd9aff857be3c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"]},"commit2Childs":{"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8febb56d1ed9f3314d35d075599fd9aff857be3c":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8febb56d1ed9f3314d35d075599fd9aff857be3c","615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}