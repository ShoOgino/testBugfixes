{"path":"solr/src/java/org/apache/solr/search/Phase2StringGroupCollector[Grouping]#setNextReader(IndexReader,int).mjava","commits":[{"id":"129258e6ec9684fea792a51eda00f2e0e03c1480","date":1289770450,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/Phase2StringGroupCollector[Grouping]#setNextReader(IndexReader,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setNextReader(IndexReader reader, int docBase) throws IOException {\n    super.setNextReader(reader, docBase);\n    index = ((StringIndexDocValues)docValues).getDocTermsIndex();\n\n    ordSet.clear();\n    for (SearchGroupDocs group : groupMap.values()) {\n      int ord = index.binarySearchLookup(((MutableValueStr)group.groupValue).value, spare);\n      if (ord > 0) {\n        int slot = ordSet.put(ord);\n        groups[slot] = group;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/Phase2StringGroupCollector[Grouping]#setNextReader(IndexReader,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setNextReader(IndexReader reader, int docBase) throws IOException {\n    super.setNextReader(reader, docBase);\n    index = ((StringIndexDocValues)docValues).getDocTermsIndex();\n\n    ordSet.clear();\n    for (SearchGroupDocs group : groupMap.values()) {\n      int ord = index.binarySearchLookup(((MutableValueStr)group.groupValue).value, spare);\n      if (ord > 0) {\n        int slot = ordSet.put(ord);\n        groups[slot] = group;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2faff97930a7d82742cb7c071c3c350ec28b37df","date":1290544406,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/Phase2StringGroupCollector[Grouping]#setNextReader(IndexReader,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/Phase2StringGroupCollector[Grouping]#setNextReader(IndexReader,int).mjava","sourceNew":"  @Override\n  public void setNextReader(IndexReader reader, int docBase) throws IOException {\n    super.setNextReader(reader, docBase);\n    index = ((StringIndexDocValues)docValues).getDocTermsIndex();\n\n    ordSet.clear();\n    for (SearchGroupDocs group : groupMap.values()) {\n      MutableValueStr gv = (MutableValueStr)group.groupValue;\n      int ord = 0;\n      if (gv.exists) {\n        ord = index.binarySearchLookup(((MutableValueStr)group.groupValue).value, spare);\n      }\n      if (ord >= 0) {\n        int slot = ordSet.put(ord);\n        groups[slot] = group;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(IndexReader reader, int docBase) throws IOException {\n    super.setNextReader(reader, docBase);\n    index = ((StringIndexDocValues)docValues).getDocTermsIndex();\n\n    ordSet.clear();\n    for (SearchGroupDocs group : groupMap.values()) {\n      int ord = index.binarySearchLookup(((MutableValueStr)group.groupValue).value, spare);\n      if (ord > 0) {\n        int slot = ordSet.put(ord);\n        groups[slot] = group;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/Phase2StringGroupCollector[Grouping]#setNextReader(IndexReader,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/Phase2StringGroupCollector[Grouping]#setNextReader(IndexReader,int).mjava","sourceNew":"  @Override\n  public void setNextReader(IndexReader reader, int docBase) throws IOException {\n    super.setNextReader(reader, docBase);\n    index = ((StringIndexDocValues)docValues).getDocTermsIndex();\n\n    ordSet.clear();\n    for (SearchGroupDocs group : groupMap.values()) {\n      MutableValueStr gv = (MutableValueStr)group.groupValue;\n      int ord = 0;\n      if (gv.exists) {\n        ord = index.binarySearchLookup(((MutableValueStr)group.groupValue).value, spare);\n      }\n      if (ord >= 0) {\n        int slot = ordSet.put(ord);\n        groups[slot] = group;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(IndexReader reader, int docBase) throws IOException {\n    super.setNextReader(reader, docBase);\n    index = ((StringIndexDocValues)docValues).getDocTermsIndex();\n\n    ordSet.clear();\n    for (SearchGroupDocs group : groupMap.values()) {\n      int ord = index.binarySearchLookup(((MutableValueStr)group.groupValue).value, spare);\n      if (ord > 0) {\n        int slot = ordSet.put(ord);\n        groups[slot] = group;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/Phase2StringGroupCollector[Grouping]#setNextReader(IndexReader,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setNextReader(IndexReader reader, int docBase) throws IOException {\n    super.setNextReader(reader, docBase);\n    index = ((StringIndexDocValues)docValues).getDocTermsIndex();\n\n    ordSet.clear();\n    for (SearchGroupDocs group : groupMap.values()) {\n      MutableValueStr gv = (MutableValueStr)group.groupValue;\n      int ord = 0;\n      if (gv.exists) {\n        ord = index.binarySearchLookup(((MutableValueStr)group.groupValue).value, spare);\n      }\n      if (ord >= 0) {\n        int slot = ordSet.put(ord);\n        groups[slot] = group;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"323f871ffe96b871d8c534a614be60751bb023c2","date":1294820532,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/Phase2StringGroupCollector[Grouping]#setNextReader(AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/Phase2StringGroupCollector[Grouping]#setNextReader(IndexReader,int).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext context) throws IOException {\n    super.setNextReader(context);\n    index = ((StringIndexDocValues)docValues).getDocTermsIndex();\n\n    ordSet.clear();\n    for (SearchGroupDocs group : groupMap.values()) {\n      MutableValueStr gv = (MutableValueStr)group.groupValue;\n      int ord = 0;\n      if (gv.exists) {\n        ord = index.binarySearchLookup(((MutableValueStr)group.groupValue).value, spare);\n      }\n      if (ord >= 0) {\n        int slot = ordSet.put(ord);\n        groups[slot] = group;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(IndexReader reader, int docBase) throws IOException {\n    super.setNextReader(reader, docBase);\n    index = ((StringIndexDocValues)docValues).getDocTermsIndex();\n\n    ordSet.clear();\n    for (SearchGroupDocs group : groupMap.values()) {\n      MutableValueStr gv = (MutableValueStr)group.groupValue;\n      int ord = 0;\n      if (gv.exists) {\n        ord = index.binarySearchLookup(((MutableValueStr)group.groupValue).value, spare);\n      }\n      if (ord >= 0) {\n        int slot = ordSet.put(ord);\n        groups[slot] = group;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/Phase2StringGroupCollector[Grouping]#setNextReader(IndexReader,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void setNextReader(IndexReader reader, int docBase) throws IOException {\n    super.setNextReader(reader, docBase);\n    index = ((StringIndexDocValues)docValues).getDocTermsIndex();\n\n    ordSet.clear();\n    for (SearchGroupDocs group : groupMap.values()) {\n      MutableValueStr gv = (MutableValueStr)group.groupValue;\n      int ord = 0;\n      if (gv.exists) {\n        ord = index.binarySearchLookup(((MutableValueStr)group.groupValue).value, spare);\n      }\n      if (ord >= 0) {\n        int slot = ordSet.put(ord);\n        groups[slot] = group;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/Phase2StringGroupCollector[Grouping]#setNextReader(IndexReader,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void setNextReader(IndexReader reader, int docBase) throws IOException {\n    super.setNextReader(reader, docBase);\n    index = ((StringIndexDocValues)docValues).getDocTermsIndex();\n\n    ordSet.clear();\n    for (SearchGroupDocs group : groupMap.values()) {\n      MutableValueStr gv = (MutableValueStr)group.groupValue;\n      int ord = 0;\n      if (gv.exists) {\n        ord = index.binarySearchLookup(((MutableValueStr)group.groupValue).value, spare);\n      }\n      if (ord >= 0) {\n        int slot = ordSet.put(ord);\n        groups[slot] = group;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"323f871ffe96b871d8c534a614be60751bb023c2":["2faff97930a7d82742cb7c071c3c350ec28b37df"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","129258e6ec9684fea792a51eda00f2e0e03c1480"],"2faff97930a7d82742cb7c071c3c350ec28b37df":["129258e6ec9684fea792a51eda00f2e0e03c1480"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["3bb13258feba31ab676502787ab2e1779f129b7a","323f871ffe96b871d8c534a614be60751bb023c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"129258e6ec9684fea792a51eda00f2e0e03c1480":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2faff97930a7d82742cb7c071c3c350ec28b37df"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","323f871ffe96b871d8c534a614be60751bb023c2"],"3bb13258feba31ab676502787ab2e1779f129b7a":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","2faff97930a7d82742cb7c071c3c350ec28b37df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["323f871ffe96b871d8c534a614be60751bb023c2"]},"commit2Childs":{"323f871ffe96b871d8c534a614be60751bb023c2":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["3bb13258feba31ab676502787ab2e1779f129b7a"],"2faff97930a7d82742cb7c071c3c350ec28b37df":["323f871ffe96b871d8c534a614be60751bb023c2","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","129258e6ec9684fea792a51eda00f2e0e03c1480","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"129258e6ec9684fea792a51eda00f2e0e03c1480":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","2faff97930a7d82742cb7c071c3c350ec28b37df"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"3bb13258feba31ab676502787ab2e1779f129b7a":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}