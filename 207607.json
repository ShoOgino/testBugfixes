{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","sourceNew":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer.addStopWords(reader, \"repetitiveField\", 10);\n    int numHits = search(protectedAnalyzer, \"repetitiveField:boring\");\n    assertEquals(\"Check filter set up OK\", 0, numHits);\n\n    numHits = search(protectedAnalyzer, \"variedField:boring\");\n    assertTrue(\"Filter should not prevent stopwords in one field being used in another \", numHits > 0);\n\n  }\n\n","sourceOld":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer.addStopWords(reader, \"repetitiveField\", 10);\n    int numHits = search(protectedAnalyzer, \"repetitiveField:boring\");\n    assertEquals(\"Check filter set up OK\", 0, numHits);\n\n    numHits = search(protectedAnalyzer, \"variedField:boring\");\n    assertTrue(\"Filter should not prevent stopwords in one field being used in another \", numHits > 0);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dfd4d352ddf04b37253ad97ce1aad1448253f0f7","date":1310173878,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","sourceNew":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer.addStopWords(reader, \"repetitiveField\", 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"repetitiveField\", new StringReader(\"boring\"));\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"variedField\", new StringReader(\"boring\"));\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","sourceOld":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer.addStopWords(reader, \"repetitiveField\", 10);\n    int numHits = search(protectedAnalyzer, \"repetitiveField:boring\");\n    assertEquals(\"Check filter set up OK\", 0, numHits);\n\n    numHits = search(protectedAnalyzer, \"variedField:boring\");\n    assertTrue(\"Filter should not prevent stopwords in one field being used in another \", numHits > 0);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63639dd66fd5bd9b90bc24dd596ae01575f27cc4","date":1310237454,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","sourceNew":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer.addStopWords(reader, \"repetitiveField\", 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"repetitiveField\", new StringReader(\"boring\"));\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"variedField\", new StringReader(\"boring\"));\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","sourceOld":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer.addStopWords(reader, \"repetitiveField\", 10);\n    int numHits = search(protectedAnalyzer, \"repetitiveField:boring\");\n    assertEquals(\"Check filter set up OK\", 0, numHits);\n\n    numHits = search(protectedAnalyzer, \"variedField:boring\");\n    assertTrue(\"Filter should not prevent stopwords in one field being used in another \", numHits > 0);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"193a8346fc41165af561d084bb5f40a62125a878","date":1315971230,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","sourceNew":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"repetitiveField\", new StringReader(\"boring\"));\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"variedField\", new StringReader(\"boring\"));\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","sourceOld":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer.addStopWords(reader, \"repetitiveField\", 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"repetitiveField\", new StringReader(\"boring\"));\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"variedField\", new StringReader(\"boring\"));\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"69e043c521d4e8db770cc140c63f5ef51f03426a","date":1317187614,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","sourceNew":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", new StringReader(\"boring\"));\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", new StringReader(\"boring\"));\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","sourceOld":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"repetitiveField\", new StringReader(\"boring\"));\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"variedField\", new StringReader(\"boring\"));\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","bugFix":null,"bugIntro":["c83d6c4335f31cae14f625a222bc842f20073dcd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","sourceNew":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", new StringReader(\"boring\"));\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", new StringReader(\"boring\"));\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","sourceOld":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", new StringReader(\"boring\"));\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", new StringReader(\"boring\"));\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["69e043c521d4e8db770cc140c63f5ef51f03426a"],"dfd4d352ddf04b37253ad97ce1aad1448253f0f7":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"193a8346fc41165af561d084bb5f40a62125a878":["dfd4d352ddf04b37253ad97ce1aad1448253f0f7"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"63639dd66fd5bd9b90bc24dd596ae01575f27cc4":["0f080986da691a3bba7b757f43ab72cdc82b57ce","dfd4d352ddf04b37253ad97ce1aad1448253f0f7"],"69e043c521d4e8db770cc140c63f5ef51f03426a":["193a8346fc41165af561d084bb5f40a62125a878"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dfd4d352ddf04b37253ad97ce1aad1448253f0f7":["193a8346fc41165af561d084bb5f40a62125a878","63639dd66fd5bd9b90bc24dd596ae01575f27cc4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"193a8346fc41165af561d084bb5f40a62125a878":["69e043c521d4e8db770cc140c63f5ef51f03426a"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["dfd4d352ddf04b37253ad97ce1aad1448253f0f7","63639dd66fd5bd9b90bc24dd596ae01575f27cc4"],"63639dd66fd5bd9b90bc24dd596ae01575f27cc4":[],"69e043c521d4e8db770cc140c63f5ef51f03426a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["63639dd66fd5bd9b90bc24dd596ae01575f27cc4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}