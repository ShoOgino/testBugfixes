{"path":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomForceMerge();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomForceMerge();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"732de6718534f7b42fc956f4929b953ef4b1610f","date":1332871688,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomForceMerge();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"57ae3024996ccdb3c36c42cb890e1efb37df4ce8","date":1338343651,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"003dc2cb64b06ce8caea28156505feb3c5059ba2","date":1359688932,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":["7b91922b55d15444d554721b352861d028eb8278"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a45bec74b98f6fc05f52770cfb425739e6563960","date":1375119292,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory());\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory());\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09603b329b773f13c5bc71091a8e683671cbc9ba","date":1399576172,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory());\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory());\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions, boolean writeAllDeletes) throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions, writeAllDeletes);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory());\n      } else {\n        return w.getReader(applyDeletions, writeAllDeletes);\n      }\n    }\n  }\n\n","sourceOld":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory());\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions, boolean writeAllDeletes) throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions, writeAllDeletes);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory());\n      } else {\n        return w.getReader(applyDeletions, writeAllDeletes);\n      }\n    }\n  }\n\n","sourceOld":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory());\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a45bec74b98f6fc05f52770cfb425739e6563960":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09603b329b773f13c5bc71091a8e683671cbc9ba":["a45bec74b98f6fc05f52770cfb425739e6563960"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["732de6718534f7b42fc956f4929b953ef4b1610f"],"732de6718534f7b42fc956f4929b953ef4b1610f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","003dc2cb64b06ce8caea28156505feb3c5059ba2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"003dc2cb64b06ce8caea28156505feb3c5059ba2":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"68496c2200e559fb7802f7575427b7a482659afb":["09603b329b773f13c5bc71091a8e683671cbc9ba","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68496c2200e559fb7802f7575427b7a482659afb"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["09603b329b773f13c5bc71091a8e683671cbc9ba"]},"commit2Childs":{"a45bec74b98f6fc05f52770cfb425739e6563960":["09603b329b773f13c5bc71091a8e683671cbc9ba"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["732de6718534f7b42fc956f4929b953ef4b1610f"],"09603b329b773f13c5bc71091a8e683671cbc9ba":["68496c2200e559fb7802f7575427b7a482659afb","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"732de6718534f7b42fc956f4929b953ef4b1610f":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a45bec74b98f6fc05f52770cfb425739e6563960","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["d4d69c535930b5cce125cff868d40f6373dc27d4","003dc2cb64b06ce8caea28156505feb3c5059ba2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"003dc2cb64b06ce8caea28156505feb3c5059ba2":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"68496c2200e559fb7802f7575427b7a482659afb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["68496c2200e559fb7802f7575427b7a482659afb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}