{"path":"lucene/src/java/org/apache/lucene/util/packed/PackedInts#getWriter(IndexOutput,int,int).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/packed/PackedInts#getWriter(IndexOutput,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a packed integer array writer for the given number of values at the\n   * given bits/value. Writers append to the given IndexOutput and has very\n   * low memory overhead.\n   * @param out          the destination for the produced bits.\n   * @param valueCount   the number of elements.\n   * @param bitsPerValue the number of bits available for any given value.\n   * @return a Writer ready for receiving values.\n   * @throws IOException if bits could not be written to out.\n   * @lucene.internal\n   */\n  public static Writer getWriter(IndexOutput out, int valueCount, int bitsPerValue)\n    throws IOException {\n    return new PackedWriter(out, valueCount, bitsPerValue);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"25f4e7603b223ce22ed6ce764fb665989313410a","date":1317061501,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/packed/PackedInts#getWriter(DataOutput,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/packed/PackedInts#getWriter(IndexOutput,int,int).mjava","sourceNew":"  /**\n   * Create a packed integer array writer for the given number of values at the\n   * given bits/value. Writers append to the given IndexOutput and has very\n   * low memory overhead.\n   * @param out          the destination for the produced bits.\n   * @param valueCount   the number of elements.\n   * @param bitsPerValue the number of bits available for any given value.\n   * @return a Writer ready for receiving values.\n   * @throws IOException if bits could not be written to out.\n   * @lucene.internal\n   */\n  public static Writer getWriter(DataOutput out, int valueCount, int bitsPerValue)\n    throws IOException {\n    return new PackedWriter(out, valueCount, bitsPerValue);\n  }\n\n","sourceOld":"  /**\n   * Create a packed integer array writer for the given number of values at the\n   * given bits/value. Writers append to the given IndexOutput and has very\n   * low memory overhead.\n   * @param out          the destination for the produced bits.\n   * @param valueCount   the number of elements.\n   * @param bitsPerValue the number of bits available for any given value.\n   * @return a Writer ready for receiving values.\n   * @throws IOException if bits could not be written to out.\n   * @lucene.internal\n   */\n  public static Writer getWriter(IndexOutput out, int valueCount, int bitsPerValue)\n    throws IOException {\n    return new PackedWriter(out, valueCount, bitsPerValue);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"25f4e7603b223ce22ed6ce764fb665989313410a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["25f4e7603b223ce22ed6ce764fb665989313410a"]},"commit2Childs":{"25f4e7603b223ce22ed6ce764fb665989313410a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["25f4e7603b223ce22ed6ce764fb665989313410a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}