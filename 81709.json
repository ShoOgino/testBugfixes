{"path":"lucene/core/src/test/org/apache/lucene/util/automaton/TestDaciukMihovAutomatonBuilder#testLargeTerms().mjava","commits":[{"id":"3ea57d3346f0253c68dee891939b8cf9fba455b8","date":1532682688,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestDaciukMihovAutomatonBuilder#testLargeTerms().mjava","pathOld":"/dev/null","sourceNew":"  public void testLargeTerms() {\n    byte[] b10k = new byte[10_000];\n    Arrays.fill(b10k, (byte) 'a');\n    IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n        () -> DaciukMihovAutomatonBuilder.build(Collections.singleton(new BytesRef(b10k))));\n    assertTrue(e.getMessage().startsWith(\"This builder doesn't allow terms that are larger than 1,000 characters\"));\n\n    byte[] b1k = ArrayUtil.copyOfSubArray(b10k, 0, 1000);\n    DaciukMihovAutomatonBuilder.build(Collections.singleton(new BytesRef(b1k))); // no exception\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3ea57d3346f0253c68dee891939b8cf9fba455b8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3ea57d3346f0253c68dee891939b8cf9fba455b8"]},"commit2Childs":{"3ea57d3346f0253c68dee891939b8cf9fba455b8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3ea57d3346f0253c68dee891939b8cf9fba455b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}