{"path":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,PayloadProcessorProvider,FieldInfos,IOContext).mjava","commits":[{"id":"b6f9be74ca7baaef11857ad002cad40419979516","date":1309449808,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,PayloadProcessorProvider,FieldInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,PayloadProcessorProvider,FieldInfos).mjava","sourceNew":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos, IOContext context) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    segment = name;\n    this.fieldInfos = fieldInfos;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n    this.context = context;\n  }\n\n","sourceOld":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    segment = name;\n    this.fieldInfos = fieldInfos;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,PayloadProcessorProvider,FieldInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,PayloadProcessorProvider,FieldInfos).mjava","sourceNew":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos, IOContext context) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    segment = name;\n    this.fieldInfos = fieldInfos;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n    this.context = context;\n  }\n\n","sourceOld":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    segment = name;\n    this.fieldInfos = fieldInfos;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,PayloadProcessorProvider,FieldInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,PayloadProcessorProvider,FieldInfos).mjava","sourceNew":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos, IOContext context) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    segment = name;\n    this.fieldInfos = fieldInfos;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n    this.context = context;\n  }\n\n","sourceOld":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    segment = name;\n    this.fieldInfos = fieldInfos;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,PayloadProcessorProvider,FieldInfos,Codec,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,PayloadProcessorProvider,FieldInfos,IOContext).mjava","sourceNew":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos, Codec codec, IOContext context) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    segment = name;\n    this.fieldInfos = fieldInfos;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n    this.codec = codec;\n    this.context = context;\n  }\n\n","sourceOld":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos, IOContext context) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    segment = name;\n    this.fieldInfos = fieldInfos;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n    this.context = context;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b6f9be74ca7baaef11857ad002cad40419979516":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b6f9be74ca7baaef11857ad002cad40419979516"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b6f9be74ca7baaef11857ad002cad40419979516","5d004d0e0b3f65bb40da76d476d659d7888270e8","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"b6f9be74ca7baaef11857ad002cad40419979516":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["7b91922b55d15444d554721b352861d028eb8278","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}