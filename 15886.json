{"path":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","commits":[{"id":"2d629ca62e3b8ab6e29a127aebe213163d490413","date":1405524223,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    solrHomeDirectory = createTempDir(\"_deleteBadCores\");\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(solrHomeDirectory.getAbsolutePath());\n    File instanceDir = new File(solrHomeDirectory, \"_deleteBadCores\");\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(resourceLoader, ConfigSolr.fromString(resourceLoader, EMPTY_SOLR_XML2), cl);\n    CoreDescriptor badcore = new CoreDescriptor(cc, \"badcore\", instanceDir.getAbsolutePath(), \"configSet\", \"nosuchconfigset\");\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(new CoreDescriptor(cc, \"badcore\", instanceDir.getAbsolutePath(), \"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","sourceNew":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    solrHomeDirectory = createTempDir(\"_deleteBadCores\").toFile();\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(solrHomeDirectory.getAbsolutePath());\n    File instanceDir = new File(solrHomeDirectory, \"_deleteBadCores\");\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(resourceLoader, ConfigSolr.fromString(resourceLoader, EMPTY_SOLR_XML2), cl);\n    CoreDescriptor badcore = new CoreDescriptor(cc, \"badcore\", instanceDir.getAbsolutePath(), \"configSet\", \"nosuchconfigset\");\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(new CoreDescriptor(cc, \"badcore\", instanceDir.getAbsolutePath(), \"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    solrHomeDirectory = createTempDir(\"_deleteBadCores\");\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(solrHomeDirectory.getAbsolutePath());\n    File instanceDir = new File(solrHomeDirectory, \"_deleteBadCores\");\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(resourceLoader, ConfigSolr.fromString(resourceLoader, EMPTY_SOLR_XML2), cl);\n    CoreDescriptor badcore = new CoreDescriptor(cc, \"badcore\", instanceDir.getAbsolutePath(), \"configSet\", \"nosuchconfigset\");\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(new CoreDescriptor(cc, \"badcore\", instanceDir.getAbsolutePath(), \"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","sourceNew":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(createTempDir().toString());\n\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(ConfigSolr.fromString(resourceLoader, CONFIGSETS_SOLR_XML), cl);\n    CoreDescriptor badcore = new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"nosuchconfigset\");\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    solrHomeDirectory = createTempDir(\"_deleteBadCores\").toFile();\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(solrHomeDirectory.getAbsolutePath());\n    File instanceDir = new File(solrHomeDirectory, \"_deleteBadCores\");\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(resourceLoader, ConfigSolr.fromString(resourceLoader, EMPTY_SOLR_XML2), cl);\n    CoreDescriptor badcore = new CoreDescriptor(cc, \"badcore\", instanceDir.getAbsolutePath(), \"configSet\", \"nosuchconfigset\");\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(new CoreDescriptor(cc, \"badcore\", instanceDir.getAbsolutePath(), \"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","sourceNew":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(createTempDir().toString());\n\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(SolrXmlConfig.fromString(resourceLoader, CONFIGSETS_SOLR_XML), cl);\n    CoreDescriptor badcore = new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"nosuchconfigset\");\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(createTempDir().toString());\n\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(ConfigSolr.fromString(resourceLoader, CONFIGSETS_SOLR_XML), cl);\n    CoreDescriptor badcore = new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"nosuchconfigset\");\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bc766d645fa848f86c381c7f6acf2c881c99399","date":1425549246,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","sourceNew":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(createTempDir().toString());\n\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(SolrXmlConfig.fromString(resourceLoader, CONFIGSETS_SOLR_XML), new Properties(), cl);\n    CoreDescriptor badcore = new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"nosuchconfigset\");\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(createTempDir().toString());\n\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(SolrXmlConfig.fromString(resourceLoader, CONFIGSETS_SOLR_XML), cl);\n    CoreDescriptor badcore = new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"nosuchconfigset\");\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","sourceNew":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(createTempDir().toString());\n\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(SolrXmlConfig.fromString(resourceLoader, CONFIGSETS_SOLR_XML), new Properties(), cl);\n    CoreDescriptor badcore = new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"nosuchconfigset\");\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(createTempDir().toString());\n\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(ConfigSolr.fromString(resourceLoader, CONFIGSETS_SOLR_XML), cl);\n    CoreDescriptor badcore = new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"nosuchconfigset\");\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","sourceNew":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(createTempDir());\n\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(SolrXmlConfig.fromString(resourceLoader, CONFIGSETS_SOLR_XML), new Properties(), cl);\n    CoreDescriptor badcore = new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"nosuchconfigset\");\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(createTempDir().toString());\n\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(SolrXmlConfig.fromString(resourceLoader, CONFIGSETS_SOLR_XML), new Properties(), cl);\n    CoreDescriptor badcore = new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"nosuchconfigset\");\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","date":1448892165,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","sourceNew":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(createTempDir());\n\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(SolrXmlConfig.fromString(resourceLoader, CONFIGSETS_SOLR_XML), new Properties(), cl);\n    Path corePath = resourceLoader.getInstancePath().resolve(\"badcore\");\n    CoreDescriptor badcore = new CoreDescriptor(cc, \"badcore\", corePath, \"configSet\", \"nosuchconfigset\");\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(\"badcore\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(createTempDir());\n\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(SolrXmlConfig.fromString(resourceLoader, CONFIGSETS_SOLR_XML), new Properties(), cl);\n    CoreDescriptor badcore = new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"nosuchconfigset\");\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(new CoreDescriptor(cc, \"badcore\", \"badcore\", \"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"729cb470f975115d4c60517b2cb7c42e37a7a2e1","date":1492041760,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","sourceNew":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(createTempDir());\n\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(SolrXmlConfig.fromString(resourceLoader, CONFIGSETS_SOLR_XML), new Properties(), cl);\n    Path corePath = resourceLoader.getInstancePath().resolve(\"badcore\");\n    CoreDescriptor badcore = new CoreDescriptor(\"badcore\", corePath, cc.getContainerProperties(), cc.isZooKeeperAware(),\n        \"configSet\", \"nosuchconfigset\");\n\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(\"badcore\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(createTempDir());\n\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(SolrXmlConfig.fromString(resourceLoader, CONFIGSETS_SOLR_XML), new Properties(), cl);\n    Path corePath = resourceLoader.getInstancePath().resolve(\"badcore\");\n    CoreDescriptor badcore = new CoreDescriptor(cc, \"badcore\", corePath, \"configSet\", \"nosuchconfigset\");\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(\"badcore\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","sourceNew":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(createTempDir());\n\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(SolrXmlConfig.fromString(resourceLoader, CONFIGSETS_SOLR_XML), new Properties(), cl);\n    Path corePath = resourceLoader.getInstancePath().resolve(\"badcore\");\n    CoreDescriptor badcore = new CoreDescriptor(\"badcore\", corePath, cc.getContainerProperties(), cc.isZooKeeperAware(),\n        \"configSet\", \"nosuchconfigset\");\n\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(\"badcore\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(createTempDir());\n\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(SolrXmlConfig.fromString(resourceLoader, CONFIGSETS_SOLR_XML), new Properties(), cl);\n    Path corePath = resourceLoader.getInstancePath().resolve(\"badcore\");\n    CoreDescriptor badcore = new CoreDescriptor(cc, \"badcore\", corePath, \"configSet\", \"nosuchconfigset\");\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(\"badcore\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e4fb176991e13ab85dfe62dceeb287dde115745","date":1579630717,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","sourceNew":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(createTempDir());\n\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(SolrXmlConfig.fromString(resourceLoader, CONFIGSETS_SOLR_XML), new Properties(), cl);\n    Path corePath = resourceLoader.getInstancePath().resolve(\"badcore\");\n    CoreDescriptor badcore = new CoreDescriptor(\"badcore\", corePath, cc,\n        \"configSet\", \"nosuchconfigset\");\n\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(\"badcore\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(createTempDir());\n\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(SolrXmlConfig.fromString(resourceLoader, CONFIGSETS_SOLR_XML), new Properties(), cl);\n    Path corePath = resourceLoader.getInstancePath().resolve(\"badcore\");\n    CoreDescriptor badcore = new CoreDescriptor(\"badcore\", corePath, cc.getContainerProperties(), cc.isZooKeeperAware(),\n        \"configSet\", \"nosuchconfigset\");\n\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(\"badcore\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testDeleteBadCores().mjava","sourceNew":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    Path solrHome = createTempDir();\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(SolrXmlConfig.fromString(solrHome, CONFIGSETS_SOLR_XML), cl);\n    Path corePath = solrHome.resolve(\"badcore\");\n    CoreDescriptor badcore = new CoreDescriptor(\"badcore\", corePath, cc,\n        \"configSet\", \"nosuchconfigset\");\n\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(\"badcore\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDeleteBadCores() throws Exception {\n\n    MockCoresLocator cl = new MockCoresLocator();\n\n    SolrResourceLoader resourceLoader = new SolrResourceLoader(createTempDir());\n\n    System.setProperty(\"configsets\", getFile(\"solr/configsets\").getAbsolutePath());\n\n    final CoreContainer cc = new CoreContainer(SolrXmlConfig.fromString(resourceLoader, CONFIGSETS_SOLR_XML), new Properties(), cl);\n    Path corePath = resourceLoader.getInstancePath().resolve(\"badcore\");\n    CoreDescriptor badcore = new CoreDescriptor(\"badcore\", corePath, cc,\n        \"configSet\", \"nosuchconfigset\");\n\n    cl.add(badcore);\n\n    try {\n      cc.load();\n      assertThat(cc.getCoreInitFailures().size(), is(1));\n      assertThat(cc.getCoreInitFailures().get(\"badcore\").exception.getMessage(), containsString(\"nosuchconfigset\"));\n      cc.unload(\"badcore\", true, true, true);\n      assertThat(cc.getCoreInitFailures().size(), is(0));\n\n      // can we create the core now with a good config?\n      SolrCore core = cc.create(\"badcore\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      assertThat(core, not(nullValue()));\n\n    }\n    finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"3e4fb176991e13ab85dfe62dceeb287dde115745":["729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["e15199583d3635cb940942caed05132dd6c4c7c6"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["2d629ca62e3b8ab6e29a127aebe213163d490413"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"e15199583d3635cb940942caed05132dd6c4c7c6":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39","9bc766d645fa848f86c381c7f6acf2c881c99399"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["3e4fb176991e13ab85dfe62dceeb287dde115745"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2d629ca62e3b8ab6e29a127aebe213163d490413":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"3e4fb176991e13ab85dfe62dceeb287dde115745":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a626ec4d1c92e59fe390724d6220081047b03ce7"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["e15199583d3635cb940942caed05132dd6c4c7c6","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"f4abec28b874149a7223e32cc7a01704c27790de":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["3e4fb176991e13ab85dfe62dceeb287dde115745"],"e15199583d3635cb940942caed05132dd6c4c7c6":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2d629ca62e3b8ab6e29a127aebe213163d490413"],"2d629ca62e3b8ab6e29a127aebe213163d490413":["f4abec28b874149a7223e32cc7a01704c27790de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}