{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/response/DelegationTokenResponse.JsonMapResponseParser#processResponse(InputStream,String).mjava","commits":[{"id":"20be168d828ac40d262f85364d02f15b491dd88b","date":1469725145,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/DelegationTokenResponse.JsonMapResponseParser#processResponse(InputStream,String).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public NamedList<Object> processResponse(InputStream body, String encoding) {\n      ObjectMapper mapper = new ObjectMapper();\n      Map map = null;\n      try {\n        map = mapper.readValue(body, Map.class);\n      } catch (IOException e) {\n        throw new SolrException (SolrException.ErrorCode.SERVER_ERROR,\n          \"parsing error\", e);\n      }\n      NamedList<Object> list = new NamedList<Object>();\n      list.addAll(map);\n      return list;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/DelegationTokenResponse.JsonMapResponseParser#processResponse(InputStream,String).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public NamedList<Object> processResponse(InputStream body, String encoding) {\n      ObjectMapper mapper = new ObjectMapper();\n      Map map = null;\n      try {\n        map = mapper.readValue(body, Map.class);\n      } catch (IOException e) {\n        throw new SolrException (SolrException.ErrorCode.SERVER_ERROR,\n          \"parsing error\", e);\n      }\n      NamedList<Object> list = new NamedList<Object>();\n      list.addAll(map);\n      return list;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c3c38ff76e8b94e59e74438ab89df3944861a39","date":1475589044,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/DelegationTokenResponse.JsonMapResponseParser#processResponse(InputStream,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/response/DelegationTokenResponse.JsonMapResponseParser#processResponse(InputStream,String).mjava","sourceNew":"    @Override\n    public NamedList<Object> processResponse(InputStream body, String encoding) {\n      Map map = null;\n      try {\n        ObjectBuilder builder = new ObjectBuilder(\n            new JSONParser(new InputStreamReader(body, encoding == null? \"UTF-8\": encoding)));\n        map = (Map)builder.getObject();\n      } catch (IOException | JSONParser.ParseException e) {\n        throw new SolrException (SolrException.ErrorCode.SERVER_ERROR,\n          \"parsing error\", e);\n      }\n      NamedList<Object> list = new NamedList<Object>();\n      list.addAll(map);\n      return list;\n    }\n\n","sourceOld":"    @Override\n    public NamedList<Object> processResponse(InputStream body, String encoding) {\n      ObjectMapper mapper = new ObjectMapper();\n      Map map = null;\n      try {\n        map = mapper.readValue(body, Map.class);\n      } catch (IOException e) {\n        throw new SolrException (SolrException.ErrorCode.SERVER_ERROR,\n          \"parsing error\", e);\n      }\n      NamedList<Object> list = new NamedList<Object>();\n      list.addAll(map);\n      return list;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/DelegationTokenResponse.JsonMapResponseParser#processResponse(InputStream,String).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public NamedList<Object> processResponse(InputStream body, String encoding) {\n      Map map = null;\n      try {\n        ObjectBuilder builder = new ObjectBuilder(\n            new JSONParser(new InputStreamReader(body, encoding == null? \"UTF-8\": encoding)));\n        map = (Map)builder.getObject();\n      } catch (IOException | JSONParser.ParseException e) {\n        throw new SolrException (SolrException.ErrorCode.SERVER_ERROR,\n          \"parsing error\", e);\n      }\n      NamedList<Object> list = new NamedList<Object>();\n      list.addAll(map);\n      return list;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7dfea4f7c80813344b0152e37fc18b31369e8ff","date":1592136683,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/DelegationTokenResponse.JsonMapResponseParser#processResponse(InputStream,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/response/DelegationTokenResponse.JsonMapResponseParser#processResponse(InputStream,String).mjava","sourceNew":"    @Override\n    @SuppressWarnings({\"unchecked\"})\n    public NamedList<Object> processResponse(InputStream body, String encoding) {\n      @SuppressWarnings({\"rawtypes\"})\n      Map map = null;\n      try {\n        ObjectBuilder builder = new ObjectBuilder(\n            new JSONParser(new InputStreamReader(body, encoding == null? \"UTF-8\": encoding)));\n        map = (Map)builder.getObject();\n      } catch (IOException | JSONParser.ParseException e) {\n        throw new SolrException (SolrException.ErrorCode.SERVER_ERROR,\n          \"parsing error\", e);\n      }\n      NamedList<Object> list = new NamedList<Object>();\n      list.addAll(map);\n      return list;\n    }\n\n","sourceOld":"    @Override\n    public NamedList<Object> processResponse(InputStream body, String encoding) {\n      Map map = null;\n      try {\n        ObjectBuilder builder = new ObjectBuilder(\n            new JSONParser(new InputStreamReader(body, encoding == null? \"UTF-8\": encoding)));\n        map = (Map)builder.getObject();\n      } catch (IOException | JSONParser.ParseException e) {\n        throw new SolrException (SolrException.ErrorCode.SERVER_ERROR,\n          \"parsing error\", e);\n      }\n      NamedList<Object> list = new NamedList<Object>();\n      list.addAll(map);\n      return list;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["3c3c38ff76e8b94e59e74438ab89df3944861a39"],"3c3c38ff76e8b94e59e74438ab89df3944861a39":["20be168d828ac40d262f85364d02f15b491dd88b"],"20be168d828ac40d262f85364d02f15b491dd88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3c3c38ff76e8b94e59e74438ab89df3944861a39"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","20be168d828ac40d262f85364d02f15b491dd88b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["20be168d828ac40d262f85364d02f15b491dd88b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3c3c38ff76e8b94e59e74438ab89df3944861a39":["a7dfea4f7c80813344b0152e37fc18b31369e8ff","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"20be168d828ac40d262f85364d02f15b491dd88b":["3c3c38ff76e8b94e59e74438ab89df3944861a39","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}