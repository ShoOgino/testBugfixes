{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocProducer#SimpleTextPerDocProducer(SegmentReadState,Comparator[BytesRef],String).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocProducer#SimpleTextPerDocProducer(SegmentReadState,Comparator[BytesRef],String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocProducer#SimpleTextPerDocProducer(SegmentReadState,Comparator[BytesRef],String).mjava","sourceNew":"  /**\n   * Creates a new {@link SimpleTextPerDocProducer} instance and loads all\n   * {@link DocValues} instances for this segment and codec.\n   */\n  public SimpleTextPerDocProducer(SegmentReadState state,\n      Comparator<BytesRef> comp, String segmentSuffix) throws IOException {\n    this.comp = comp;\n    this.segmentSuffix = segmentSuffix;\n    if (anyDocValuesFields(state.fieldInfos)) {\n      docValues = load(state.fieldInfos, state.segmentInfo.name,\n                       state.segmentInfo.getDocCount(), state.dir, state.context);\n    } else {\n      docValues = new TreeMap<String, DocValues>();\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link SimpleTextPerDocProducer} instance and loads all\n   * {@link DocValues} instances for this segment and codec.\n   */\n  public SimpleTextPerDocProducer(SegmentReadState state,\n      Comparator<BytesRef> comp, String segmentSuffix) throws IOException {\n    this.comp = comp;\n    this.segmentSuffix = segmentSuffix;\n    if (anyDocValuesFields(state.fieldInfos)) {\n      docValues = load(state.fieldInfos, state.segmentInfo.name,\n                       state.segmentInfo.getDocCount(), state.dir, state.context);\n    } else {\n      docValues = new TreeMap<String, DocValues>();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ede45a461a2dcb573505ed9b6a5182dfebd3688f","date":1353338494,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocProducer#SimpleTextPerDocProducer(SegmentReadState,Comparator[BytesRef],String).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocProducer#SimpleTextPerDocProducer(SegmentReadState,Comparator[BytesRef],String).mjava","sourceNew":"  /**\n   * Creates a new {@link SimpleTextPerDocProducer} instance and loads all\n   * {@link DocValues} instances for this segment and codec.\n   */\n  public SimpleTextPerDocProducer(SegmentReadState state,\n      Comparator<BytesRef> comp, String segmentSuffix) throws IOException {\n    this.comp = comp;\n    this.segmentSuffix = segmentSuffix;\n    if (anyDocValuesFields(state.fieldInfos)) {\n      docValues = load(state.fieldInfos, state.segmentInfo.name,\n                       state.segmentInfo.getDocCount(), state.directory, state.context);\n    } else {\n      docValues = new TreeMap<String, DocValues>();\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link SimpleTextPerDocProducer} instance and loads all\n   * {@link DocValues} instances for this segment and codec.\n   */\n  public SimpleTextPerDocProducer(SegmentReadState state,\n      Comparator<BytesRef> comp, String segmentSuffix) throws IOException {\n    this.comp = comp;\n    this.segmentSuffix = segmentSuffix;\n    if (anyDocValuesFields(state.fieldInfos)) {\n      docValues = load(state.fieldInfos, state.segmentInfo.name,\n                       state.segmentInfo.getDocCount(), state.dir, state.context);\n    } else {\n      docValues = new TreeMap<String, DocValues>();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0837ab0472feecb3a54260729d845f839e1cbd72","date":1358283639,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocProducer#SimpleTextPerDocProducer(SegmentReadState,Comparator[BytesRef],String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a new {@link SimpleTextPerDocProducer} instance and loads all\n   * {@link DocValues} instances for this segment and codec.\n   */\n  public SimpleTextPerDocProducer(SegmentReadState state,\n      Comparator<BytesRef> comp, String segmentSuffix) throws IOException {\n    this.comp = comp;\n    this.segmentSuffix = segmentSuffix;\n    if (anyDocValuesFields(state.fieldInfos)) {\n      docValues = load(state.fieldInfos, state.segmentInfo.name,\n                       state.segmentInfo.getDocCount(), state.directory, state.context);\n    } else {\n      docValues = new TreeMap<String, DocValues>();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocProducer#SimpleTextPerDocProducer(SegmentReadState,Comparator[BytesRef],String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a new {@link SimpleTextPerDocProducer} instance and loads all\n   * {@link DocValues} instances for this segment and codec.\n   */\n  public SimpleTextPerDocProducer(SegmentReadState state,\n      Comparator<BytesRef> comp, String segmentSuffix) throws IOException {\n    this.comp = comp;\n    this.segmentSuffix = segmentSuffix;\n    if (anyDocValuesFields(state.fieldInfos)) {\n      docValues = load(state.fieldInfos, state.segmentInfo.name,\n                       state.segmentInfo.getDocCount(), state.dir, state.context);\n    } else {\n      docValues = new TreeMap<String, DocValues>();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ede45a461a2dcb573505ed9b6a5182dfebd3688f":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","0837ab0472feecb3a54260729d845f839e1cbd72"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0837ab0472feecb3a54260729d845f839e1cbd72":["ede45a461a2dcb573505ed9b6a5182dfebd3688f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"ede45a461a2dcb573505ed9b6a5182dfebd3688f":["0837ab0472feecb3a54260729d845f839e1cbd72"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["ede45a461a2dcb573505ed9b6a5182dfebd3688f","d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"0837ab0472feecb3a54260729d845f839e1cbd72":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}