{"path":"lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts#testSingleValue().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts#testSingleValue().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/packed/TestPackedInts#testSingleValue().mjava","sourceNew":"  public void testSingleValue() throws Exception {\n    Directory dir = newDirectory();\n    IndexOutput out = dir.createOutput(\"out\", newIOContext(random));\n    PackedInts.Writer w = PackedInts.getWriter(out, 1, 8);\n    w.add(17);\n    w.finish();\n    final long end = out.getFilePointer();\n    out.close();\n\n    IndexInput in = dir.openInput(\"out\", newIOContext(random));\n    PackedInts.getReader(in);\n    assertEquals(end, in.getFilePointer());\n    in.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testSingleValue() throws Exception {\n    Directory dir = newDirectory();\n    IndexOutput out = dir.createOutput(\"out\", newIOContext(random));\n    PackedInts.Writer w = PackedInts.getWriter(out, 1, 8);\n    w.add(17);\n    w.finish();\n    final long end = out.getFilePointer();\n    out.close();\n\n    IndexInput in = dir.openInput(\"out\", newIOContext(random));\n    PackedInts.getReader(in);\n    assertEquals(end, in.getFilePointer());\n    in.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts#testSingleValue().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts#testSingleValue().mjava","sourceNew":"  public void testSingleValue() throws Exception {\n    Directory dir = newDirectory();\n    IndexOutput out = dir.createOutput(\"out\", newIOContext(random()));\n    PackedInts.Writer w = PackedInts.getWriter(out, 1, 8);\n    w.add(17);\n    w.finish();\n    final long end = out.getFilePointer();\n    out.close();\n\n    IndexInput in = dir.openInput(\"out\", newIOContext(random()));\n    PackedInts.getReader(in);\n    assertEquals(end, in.getFilePointer());\n    in.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testSingleValue() throws Exception {\n    Directory dir = newDirectory();\n    IndexOutput out = dir.createOutput(\"out\", newIOContext(random));\n    PackedInts.Writer w = PackedInts.getWriter(out, 1, 8);\n    w.add(17);\n    w.finish();\n    final long end = out.getFilePointer();\n    out.close();\n\n    IndexInput in = dir.openInput(\"out\", newIOContext(random));\n    PackedInts.getReader(in);\n    assertEquals(end, in.getFilePointer());\n    in.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a470c93b2b0f8f51241f52705fc110a01f27ad2","date":1337969379,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts#testSingleValue().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts#testSingleValue().mjava","sourceNew":"  public void testSingleValue() throws Exception {\n    for (int bitsPerValue = 1; bitsPerValue <= 64; ++bitsPerValue) {\n      Directory dir = newDirectory();\n      IndexOutput out = dir.createOutput(\"out\", newIOContext(random()));\n      PackedInts.Writer w = PackedInts.getWriter(out, 1, bitsPerValue, PackedInts.DEFAULT);\n      long value = 17L & PackedInts.maxValue(bitsPerValue);\n      w.add(value);\n      w.finish();\n      final long end = out.getFilePointer();\n      out.close();\n\n      IndexInput in = dir.openInput(\"out\", newIOContext(random()));\n      Reader reader = PackedInts.getReader(in);\n      String msg = \"Impl=\" + w.getClass().getSimpleName() + \", bitsPerValue=\" + bitsPerValue;\n      assertEquals(msg, 1, reader.size());\n      assertEquals(msg, value, reader.get(0));\n      assertEquals(msg, end, in.getFilePointer());\n      in.close();\n\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testSingleValue() throws Exception {\n    Directory dir = newDirectory();\n    IndexOutput out = dir.createOutput(\"out\", newIOContext(random()));\n    PackedInts.Writer w = PackedInts.getWriter(out, 1, 8);\n    w.add(17);\n    w.finish();\n    final long end = out.getFilePointer();\n    out.close();\n\n    IndexInput in = dir.openInput(\"out\", newIOContext(random()));\n    PackedInts.getReader(in);\n    assertEquals(end, in.getFilePointer());\n    in.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4a470c93b2b0f8f51241f52705fc110a01f27ad2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a470c93b2b0f8f51241f52705fc110a01f27ad2"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["4a470c93b2b0f8f51241f52705fc110a01f27ad2"],"4a470c93b2b0f8f51241f52705fc110a01f27ad2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}