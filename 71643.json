{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAnother().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAnother().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAnother().mjava","sourceNew":"  @Test\n  public void testAnother() {\n    String xml=\"<root>\\n\"\n            + \"       <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    <antetitulo></antetitulo>\\n\"\n             + \"    <titulo>    This is my title             </titulo>\\n\"\n             + \"    <resumen>   This is my summary           </resumen>\\n\"\n             + \"    <texto>     This is the body of my text  </texto>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/contenido\");\n    rr.addField(\"id\", \"/root/contenido/@id\", false);\n    rr.addField(\"title\", \"/root/contenido/titulo\", false);\n    rr.addField(\"resume\",\"/root/contenido/resumen\",false);\n    rr.addField(\"text\", \"/root/contenido/texto\", false);\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    assertEquals(\"10097\", m.get(\"id\"));\n    assertEquals(\"This is my title\", m.get(\"title\").toString().trim());\n    assertEquals(\"This is my summary\", m.get(\"resume\").toString().trim());\n    assertEquals(\"This is the body of my text\", m.get(\"text\").toString()\n            .trim());\n  }\n\n","sourceOld":"  @Test\n  public void testAnother() {\n    String xml=\"<root>\\n\"\n            + \"       <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    <antetitulo></antetitulo>\\n\"\n             + \"    <titulo>    This is my title             </titulo>\\n\"\n             + \"    <resumen>   This is my summary           </resumen>\\n\"\n             + \"    <texto>     This is the body of my text  </texto>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/contenido\");\n    rr.addField(\"id\", \"/root/contenido/@id\", false);\n    rr.addField(\"title\", \"/root/contenido/titulo\", false);\n    rr.addField(\"resume\",\"/root/contenido/resumen\",false);\n    rr.addField(\"text\", \"/root/contenido/texto\", false);\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    assertEquals(\"10097\", m.get(\"id\"));\n    assertEquals(\"This is my title\", m.get(\"title\").toString().trim());\n    assertEquals(\"This is my summary\", m.get(\"resume\").toString().trim());\n    assertEquals(\"This is the body of my text\", m.get(\"text\").toString()\n            .trim());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAnother().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAnother().mjava","sourceNew":"  @Test\n  public void testAnother() {\n    String xml=\"<root>\\n\"\n            + \"       <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    <antetitulo></antetitulo>\\n\"\n             + \"    <titulo>    This is my title             </titulo>\\n\"\n             + \"    <resumen>   This is my summary           </resumen>\\n\"\n             + \"    <texto>     This is the body of my text  </texto>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/contenido\");\n    rr.addField(\"id\", \"/root/contenido/@id\", false);\n    rr.addField(\"title\", \"/root/contenido/titulo\", false);\n    rr.addField(\"resume\",\"/root/contenido/resumen\",false);\n    rr.addField(\"text\", \"/root/contenido/texto\", false);\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    assertEquals(\"10097\", m.get(\"id\"));\n    assertEquals(\"This is my title\", m.get(\"title\").toString().trim());\n    assertEquals(\"This is my summary\", m.get(\"resume\").toString().trim());\n    assertEquals(\"This is the body of my text\", m.get(\"text\").toString()\n            .trim());\n  }\n\n","sourceOld":"  @Test\n  public void testAnother() {\n    String xml=\"<root>\\n\"\n            + \"       <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    <antetitulo></antetitulo>\\n\"\n             + \"    <titulo>    This is my title             </titulo>\\n\"\n             + \"    <resumen>   This is my summary           </resumen>\\n\"\n             + \"    <texto>     This is the body of my text  </texto>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/contenido\");\n    rr.addField(\"id\", \"/root/contenido/@id\", false);\n    rr.addField(\"title\", \"/root/contenido/titulo\", false);\n    rr.addField(\"resume\",\"/root/contenido/resumen\",false);\n    rr.addField(\"text\", \"/root/contenido/texto\", false);\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    assertEquals(\"10097\", m.get(\"id\"));\n    assertEquals(\"This is my title\", m.get(\"title\").toString().trim());\n    assertEquals(\"This is my summary\", m.get(\"resume\").toString().trim());\n    assertEquals(\"This is the body of my text\", m.get(\"text\").toString()\n            .trim());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAnother().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testAnother() {\n    String xml=\"<root>\\n\"\n            + \"       <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    <antetitulo></antetitulo>\\n\"\n             + \"    <titulo>    This is my title             </titulo>\\n\"\n             + \"    <resumen>   This is my summary           </resumen>\\n\"\n             + \"    <texto>     This is the body of my text  </texto>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/contenido\");\n    rr.addField(\"id\", \"/root/contenido/@id\", false);\n    rr.addField(\"title\", \"/root/contenido/titulo\", false);\n    rr.addField(\"resume\",\"/root/contenido/resumen\",false);\n    rr.addField(\"text\", \"/root/contenido/texto\", false);\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    assertEquals(\"10097\", m.get(\"id\"));\n    assertEquals(\"This is my title\", m.get(\"title\").toString().trim());\n    assertEquals(\"This is my summary\", m.get(\"resume\").toString().trim());\n    assertEquals(\"This is the body of my text\", m.get(\"text\").toString()\n            .trim());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}