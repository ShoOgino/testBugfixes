{"path":"lucene/misc/src/test/org/apache/lucene/index/sorter/SorterTestBase#doc(int,PositionsTokenStream).mjava","commits":[{"id":"cb767289784b682dea51f9e6d7222add811edb77","date":1362902138,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/sorter/SorterTestBase#doc(int,PositionsTokenStream).mjava","pathOld":"/dev/null","sourceNew":"  private static Document doc(final int id, PositionsTokenStream positions) {\n    final Document doc = new Document();\n    doc.add(new StringField(ID_FIELD, Integer.toString(id), Store.YES));\n    doc.add(new StringField(DOCS_ENUM_FIELD, DOCS_ENUM_TERM, Store.NO));\n    positions.setId(id);\n    if (doesntSupportOffsets.contains(_TestUtil.getPostingsFormat(DOC_POSITIONS_FIELD))) {\n      // codec doesnt support offsets: just index positions for the field\n      doc.add(new Field(DOC_POSITIONS_FIELD, positions, TextField.TYPE_NOT_STORED));\n    } else {\n      doc.add(new Field(DOC_POSITIONS_FIELD, positions, POSITIONS_TYPE));\n    }\n    doc.add(new NumericDocValuesField(NUMERIC_DV_FIELD, id));\n    TextField norms = new TextField(NORMS_FIELD, Integer.toString(id), Store.NO);\n    norms.setBoost(Float.intBitsToFloat(id));\n    doc.add(norms);\n    doc.add(new BinaryDocValuesField(BINARY_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedDocValuesField(SORTED_DV_FIELD, new BytesRef(Integer.toString(id))));\n    if (defaultCodecSupportsSortedSet()) {\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id))));\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id + 1))));\n    }\n    doc.add(new Field(TERM_VECTORS_FIELD, Integer.toString(id), TERM_VECTORS_TYPE));\n    return doc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/sorter/SorterTestBase#doc(int,PositionsTokenStream).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/sorter/SorterTestBase#doc(int,PositionsTokenStream).mjava","sourceNew":"  private static Document doc(final int id, PositionsTokenStream positions) {\n    final Document doc = new Document();\n    doc.add(new StringField(ID_FIELD, Integer.toString(id), Store.YES));\n    doc.add(new StringField(DOCS_ENUM_FIELD, DOCS_ENUM_TERM, Store.NO));\n    positions.setId(id);\n    if (doesntSupportOffsets.contains(TestUtil.getPostingsFormat(DOC_POSITIONS_FIELD))) {\n      // codec doesnt support offsets: just index positions for the field\n      doc.add(new Field(DOC_POSITIONS_FIELD, positions, TextField.TYPE_NOT_STORED));\n    } else {\n      doc.add(new Field(DOC_POSITIONS_FIELD, positions, POSITIONS_TYPE));\n    }\n    doc.add(new NumericDocValuesField(NUMERIC_DV_FIELD, id));\n    TextField norms = new TextField(NORMS_FIELD, Integer.toString(id), Store.NO);\n    norms.setBoost(Float.intBitsToFloat(id));\n    doc.add(norms);\n    doc.add(new BinaryDocValuesField(BINARY_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedDocValuesField(SORTED_DV_FIELD, new BytesRef(Integer.toString(id))));\n    if (defaultCodecSupportsSortedSet()) {\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id))));\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id + 1))));\n    }\n    doc.add(new Field(TERM_VECTORS_FIELD, Integer.toString(id), TERM_VECTORS_TYPE));\n    return doc;\n  }\n\n","sourceOld":"  private static Document doc(final int id, PositionsTokenStream positions) {\n    final Document doc = new Document();\n    doc.add(new StringField(ID_FIELD, Integer.toString(id), Store.YES));\n    doc.add(new StringField(DOCS_ENUM_FIELD, DOCS_ENUM_TERM, Store.NO));\n    positions.setId(id);\n    if (doesntSupportOffsets.contains(_TestUtil.getPostingsFormat(DOC_POSITIONS_FIELD))) {\n      // codec doesnt support offsets: just index positions for the field\n      doc.add(new Field(DOC_POSITIONS_FIELD, positions, TextField.TYPE_NOT_STORED));\n    } else {\n      doc.add(new Field(DOC_POSITIONS_FIELD, positions, POSITIONS_TYPE));\n    }\n    doc.add(new NumericDocValuesField(NUMERIC_DV_FIELD, id));\n    TextField norms = new TextField(NORMS_FIELD, Integer.toString(id), Store.NO);\n    norms.setBoost(Float.intBitsToFloat(id));\n    doc.add(norms);\n    doc.add(new BinaryDocValuesField(BINARY_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedDocValuesField(SORTED_DV_FIELD, new BytesRef(Integer.toString(id))));\n    if (defaultCodecSupportsSortedSet()) {\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id))));\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id + 1))));\n    }\n    doc.add(new Field(TERM_VECTORS_FIELD, Integer.toString(id), TERM_VECTORS_TYPE));\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"91d86ebcdb45ce6a1b2584e2603f76db47523d0a","date":1396466913,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/sorter/SorterTestBase#doc(int,PositionsTokenStream).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/sorter/SorterTestBase#doc(int,PositionsTokenStream).mjava","sourceNew":"  private static Document doc(final int id, PositionsTokenStream positions) {\n    final Document doc = new Document();\n    doc.add(new StringField(ID_FIELD, Integer.toString(id), Store.YES));\n    doc.add(new StringField(DOCS_ENUM_FIELD, DOCS_ENUM_TERM, Store.NO));\n    positions.setId(id);\n    doc.add(new Field(DOC_POSITIONS_FIELD, positions, POSITIONS_TYPE));\n    doc.add(new NumericDocValuesField(NUMERIC_DV_FIELD, id));\n    TextField norms = new TextField(NORMS_FIELD, Integer.toString(id), Store.NO);\n    norms.setBoost(Float.intBitsToFloat(id));\n    doc.add(norms);\n    doc.add(new BinaryDocValuesField(BINARY_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedDocValuesField(SORTED_DV_FIELD, new BytesRef(Integer.toString(id))));\n    if (defaultCodecSupportsSortedSet()) {\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id))));\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id + 1))));\n    }\n    doc.add(new Field(TERM_VECTORS_FIELD, Integer.toString(id), TERM_VECTORS_TYPE));\n    return doc;\n  }\n\n","sourceOld":"  private static Document doc(final int id, PositionsTokenStream positions) {\n    final Document doc = new Document();\n    doc.add(new StringField(ID_FIELD, Integer.toString(id), Store.YES));\n    doc.add(new StringField(DOCS_ENUM_FIELD, DOCS_ENUM_TERM, Store.NO));\n    positions.setId(id);\n    if (doesntSupportOffsets.contains(TestUtil.getPostingsFormat(DOC_POSITIONS_FIELD))) {\n      // codec doesnt support offsets: just index positions for the field\n      doc.add(new Field(DOC_POSITIONS_FIELD, positions, TextField.TYPE_NOT_STORED));\n    } else {\n      doc.add(new Field(DOC_POSITIONS_FIELD, positions, POSITIONS_TYPE));\n    }\n    doc.add(new NumericDocValuesField(NUMERIC_DV_FIELD, id));\n    TextField norms = new TextField(NORMS_FIELD, Integer.toString(id), Store.NO);\n    norms.setBoost(Float.intBitsToFloat(id));\n    doc.add(norms);\n    doc.add(new BinaryDocValuesField(BINARY_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedDocValuesField(SORTED_DV_FIELD, new BytesRef(Integer.toString(id))));\n    if (defaultCodecSupportsSortedSet()) {\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id))));\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id + 1))));\n    }\n    doc.add(new Field(TERM_VECTORS_FIELD, Integer.toString(id), TERM_VECTORS_TYPE));\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/sorter/SorterTestBase#doc(int,PositionsTokenStream).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/sorter/SorterTestBase#doc(int,PositionsTokenStream).mjava","sourceNew":"  private static Document doc(final int id, PositionsTokenStream positions) {\n    final Document doc = new Document();\n    doc.add(new StringField(ID_FIELD, Integer.toString(id), Store.YES));\n    doc.add(new StringField(DOCS_ENUM_FIELD, DOCS_ENUM_TERM, Store.NO));\n    positions.setId(id);\n    doc.add(new Field(DOC_POSITIONS_FIELD, positions, POSITIONS_TYPE));\n    doc.add(new NumericDocValuesField(NUMERIC_DV_FIELD, id));\n    TextField norms = new TextField(NORMS_FIELD, Integer.toString(id), Store.NO);\n    norms.setBoost(Float.intBitsToFloat(id));\n    doc.add(norms);\n    doc.add(new BinaryDocValuesField(BINARY_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedDocValuesField(SORTED_DV_FIELD, new BytesRef(Integer.toString(id))));\n    if (defaultCodecSupportsSortedSet()) {\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id))));\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id + 1))));\n    }\n    doc.add(new Field(TERM_VECTORS_FIELD, Integer.toString(id), TERM_VECTORS_TYPE));\n    return doc;\n  }\n\n","sourceOld":"  private static Document doc(final int id, PositionsTokenStream positions) {\n    final Document doc = new Document();\n    doc.add(new StringField(ID_FIELD, Integer.toString(id), Store.YES));\n    doc.add(new StringField(DOCS_ENUM_FIELD, DOCS_ENUM_TERM, Store.NO));\n    positions.setId(id);\n    if (doesntSupportOffsets.contains(TestUtil.getPostingsFormat(DOC_POSITIONS_FIELD))) {\n      // codec doesnt support offsets: just index positions for the field\n      doc.add(new Field(DOC_POSITIONS_FIELD, positions, TextField.TYPE_NOT_STORED));\n    } else {\n      doc.add(new Field(DOC_POSITIONS_FIELD, positions, POSITIONS_TYPE));\n    }\n    doc.add(new NumericDocValuesField(NUMERIC_DV_FIELD, id));\n    TextField norms = new TextField(NORMS_FIELD, Integer.toString(id), Store.NO);\n    norms.setBoost(Float.intBitsToFloat(id));\n    doc.add(norms);\n    doc.add(new BinaryDocValuesField(BINARY_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedDocValuesField(SORTED_DV_FIELD, new BytesRef(Integer.toString(id))));\n    if (defaultCodecSupportsSortedSet()) {\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id))));\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id + 1))));\n    }\n    doc.add(new Field(TERM_VECTORS_FIELD, Integer.toString(id), TERM_VECTORS_TYPE));\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0cbcfd9c75cfb63c75be6ce6bd632aa60521273e","date":1403088676,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/sorter/SorterTestBase#doc(int,PositionsTokenStream).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/sorter/SorterTestBase#doc(int,PositionsTokenStream).mjava","sourceNew":"  private static Document doc(final int id, PositionsTokenStream positions) {\n    final Document doc = new Document();\n    doc.add(new StringField(ID_FIELD, Integer.toString(id), Store.YES));\n    doc.add(new StringField(DOCS_ENUM_FIELD, DOCS_ENUM_TERM, Store.NO));\n    positions.setId(id);\n    doc.add(new Field(DOC_POSITIONS_FIELD, positions, POSITIONS_TYPE));\n    doc.add(new NumericDocValuesField(NUMERIC_DV_FIELD, id));\n    TextField norms = new TextField(NORMS_FIELD, Integer.toString(id), Store.NO);\n    norms.setBoost(Float.intBitsToFloat(id));\n    doc.add(norms);\n    doc.add(new BinaryDocValuesField(BINARY_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedDocValuesField(SORTED_DV_FIELD, new BytesRef(Integer.toString(id))));\n    if (defaultCodecSupportsSortedSet()) {\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id))));\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id + 1))));\n    }\n    if (defaultCodecSupportsSortedNumeric()) {\n      doc.add(new SortedNumericDocValuesField(SORTED_NUMERIC_DV_FIELD, id));\n      doc.add(new SortedNumericDocValuesField(SORTED_NUMERIC_DV_FIELD, id + 1));\n    }\n    doc.add(new Field(TERM_VECTORS_FIELD, Integer.toString(id), TERM_VECTORS_TYPE));\n    return doc;\n  }\n\n","sourceOld":"  private static Document doc(final int id, PositionsTokenStream positions) {\n    final Document doc = new Document();\n    doc.add(new StringField(ID_FIELD, Integer.toString(id), Store.YES));\n    doc.add(new StringField(DOCS_ENUM_FIELD, DOCS_ENUM_TERM, Store.NO));\n    positions.setId(id);\n    doc.add(new Field(DOC_POSITIONS_FIELD, positions, POSITIONS_TYPE));\n    doc.add(new NumericDocValuesField(NUMERIC_DV_FIELD, id));\n    TextField norms = new TextField(NORMS_FIELD, Integer.toString(id), Store.NO);\n    norms.setBoost(Float.intBitsToFloat(id));\n    doc.add(norms);\n    doc.add(new BinaryDocValuesField(BINARY_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedDocValuesField(SORTED_DV_FIELD, new BytesRef(Integer.toString(id))));\n    if (defaultCodecSupportsSortedSet()) {\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id))));\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id + 1))));\n    }\n    doc.add(new Field(TERM_VECTORS_FIELD, Integer.toString(id), TERM_VECTORS_TYPE));\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e57c73924f3b8c19defa62e96bfa34a4922d49c2","date":1403106358,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/sorter/SorterTestBase#doc(int,PositionsTokenStream).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/sorter/SorterTestBase#doc(int,PositionsTokenStream).mjava","sourceNew":"  private static Document doc(final int id, PositionsTokenStream positions) {\n    final Document doc = new Document();\n    doc.add(new StringField(ID_FIELD, Integer.toString(id), Store.YES));\n    doc.add(new StringField(DOCS_ENUM_FIELD, DOCS_ENUM_TERM, Store.NO));\n    positions.setId(id);\n    doc.add(new Field(DOC_POSITIONS_FIELD, positions, POSITIONS_TYPE));\n    doc.add(new NumericDocValuesField(NUMERIC_DV_FIELD, id));\n    TextField norms = new TextField(NORMS_FIELD, Integer.toString(id), Store.NO);\n    norms.setBoost(Float.intBitsToFloat(id));\n    doc.add(norms);\n    doc.add(new BinaryDocValuesField(BINARY_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedDocValuesField(SORTED_DV_FIELD, new BytesRef(Integer.toString(id))));\n    if (defaultCodecSupportsSortedSet()) {\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id))));\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id + 1))));\n    }\n    if (defaultCodecSupportsSortedNumeric()) {\n      doc.add(new SortedNumericDocValuesField(SORTED_NUMERIC_DV_FIELD, id));\n      doc.add(new SortedNumericDocValuesField(SORTED_NUMERIC_DV_FIELD, id + 1));\n    }\n    doc.add(new Field(TERM_VECTORS_FIELD, Integer.toString(id), TERM_VECTORS_TYPE));\n    return doc;\n  }\n\n","sourceOld":"  private static Document doc(final int id, PositionsTokenStream positions) {\n    final Document doc = new Document();\n    doc.add(new StringField(ID_FIELD, Integer.toString(id), Store.YES));\n    doc.add(new StringField(DOCS_ENUM_FIELD, DOCS_ENUM_TERM, Store.NO));\n    positions.setId(id);\n    doc.add(new Field(DOC_POSITIONS_FIELD, positions, POSITIONS_TYPE));\n    doc.add(new NumericDocValuesField(NUMERIC_DV_FIELD, id));\n    TextField norms = new TextField(NORMS_FIELD, Integer.toString(id), Store.NO);\n    norms.setBoost(Float.intBitsToFloat(id));\n    doc.add(norms);\n    doc.add(new BinaryDocValuesField(BINARY_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedDocValuesField(SORTED_DV_FIELD, new BytesRef(Integer.toString(id))));\n    if (defaultCodecSupportsSortedSet()) {\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id))));\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id + 1))));\n    }\n    doc.add(new Field(TERM_VECTORS_FIELD, Integer.toString(id), TERM_VECTORS_TYPE));\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad2a673349939e48652bf304cccf673c3412198f","date":1409585169,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/sorter/SorterTestBase#doc(int,PositionsTokenStream).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/sorter/SorterTestBase#doc(int,PositionsTokenStream).mjava","sourceNew":"  private static Document doc(final int id, PositionsTokenStream positions) {\n    final Document doc = new Document();\n    doc.add(new StringField(ID_FIELD, Integer.toString(id), Store.YES));\n    doc.add(new StringField(DOCS_ENUM_FIELD, DOCS_ENUM_TERM, Store.NO));\n    positions.setId(id);\n    doc.add(new Field(DOC_POSITIONS_FIELD, positions, POSITIONS_TYPE));\n    doc.add(new NumericDocValuesField(NUMERIC_DV_FIELD, id));\n    TextField norms = new TextField(NORMS_FIELD, Integer.toString(id), Store.NO);\n    norms.setBoost(Float.intBitsToFloat(id));\n    doc.add(norms);\n    doc.add(new BinaryDocValuesField(BINARY_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedDocValuesField(SORTED_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id + 1))));\n    doc.add(new SortedNumericDocValuesField(SORTED_NUMERIC_DV_FIELD, id));\n    doc.add(new SortedNumericDocValuesField(SORTED_NUMERIC_DV_FIELD, id + 1));\n    doc.add(new Field(TERM_VECTORS_FIELD, Integer.toString(id), TERM_VECTORS_TYPE));\n    return doc;\n  }\n\n","sourceOld":"  private static Document doc(final int id, PositionsTokenStream positions) {\n    final Document doc = new Document();\n    doc.add(new StringField(ID_FIELD, Integer.toString(id), Store.YES));\n    doc.add(new StringField(DOCS_ENUM_FIELD, DOCS_ENUM_TERM, Store.NO));\n    positions.setId(id);\n    doc.add(new Field(DOC_POSITIONS_FIELD, positions, POSITIONS_TYPE));\n    doc.add(new NumericDocValuesField(NUMERIC_DV_FIELD, id));\n    TextField norms = new TextField(NORMS_FIELD, Integer.toString(id), Store.NO);\n    norms.setBoost(Float.intBitsToFloat(id));\n    doc.add(norms);\n    doc.add(new BinaryDocValuesField(BINARY_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedDocValuesField(SORTED_DV_FIELD, new BytesRef(Integer.toString(id))));\n    if (defaultCodecSupportsSortedSet()) {\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id))));\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id + 1))));\n    }\n    if (defaultCodecSupportsSortedNumeric()) {\n      doc.add(new SortedNumericDocValuesField(SORTED_NUMERIC_DV_FIELD, id));\n      doc.add(new SortedNumericDocValuesField(SORTED_NUMERIC_DV_FIELD, id + 1));\n    }\n    doc.add(new Field(TERM_VECTORS_FIELD, Integer.toString(id), TERM_VECTORS_TYPE));\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/sorter/SorterTestBase#doc(int,PositionsTokenStream).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/sorter/SorterTestBase#doc(int,PositionsTokenStream).mjava","sourceNew":"  private static Document doc(final int id, PositionsTokenStream positions) {\n    final Document doc = new Document();\n    doc.add(new StringField(ID_FIELD, Integer.toString(id), Store.YES));\n    doc.add(new StringField(DOCS_ENUM_FIELD, DOCS_ENUM_TERM, Store.NO));\n    positions.setId(id);\n    doc.add(new Field(DOC_POSITIONS_FIELD, positions, POSITIONS_TYPE));\n    doc.add(new NumericDocValuesField(NUMERIC_DV_FIELD, id));\n    TextField norms = new TextField(NORMS_FIELD, Integer.toString(id), Store.NO);\n    norms.setBoost(Float.intBitsToFloat(id));\n    doc.add(norms);\n    doc.add(new BinaryDocValuesField(BINARY_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedDocValuesField(SORTED_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id + 1))));\n    doc.add(new SortedNumericDocValuesField(SORTED_NUMERIC_DV_FIELD, id));\n    doc.add(new SortedNumericDocValuesField(SORTED_NUMERIC_DV_FIELD, id + 1));\n    doc.add(new Field(TERM_VECTORS_FIELD, Integer.toString(id), TERM_VECTORS_TYPE));\n    return doc;\n  }\n\n","sourceOld":"  private static Document doc(final int id, PositionsTokenStream positions) {\n    final Document doc = new Document();\n    doc.add(new StringField(ID_FIELD, Integer.toString(id), Store.YES));\n    doc.add(new StringField(DOCS_ENUM_FIELD, DOCS_ENUM_TERM, Store.NO));\n    positions.setId(id);\n    doc.add(new Field(DOC_POSITIONS_FIELD, positions, POSITIONS_TYPE));\n    doc.add(new NumericDocValuesField(NUMERIC_DV_FIELD, id));\n    TextField norms = new TextField(NORMS_FIELD, Integer.toString(id), Store.NO);\n    norms.setBoost(Float.intBitsToFloat(id));\n    doc.add(norms);\n    doc.add(new BinaryDocValuesField(BINARY_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedDocValuesField(SORTED_DV_FIELD, new BytesRef(Integer.toString(id))));\n    if (defaultCodecSupportsSortedSet()) {\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id))));\n      doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id + 1))));\n    }\n    if (defaultCodecSupportsSortedNumeric()) {\n      doc.add(new SortedNumericDocValuesField(SORTED_NUMERIC_DV_FIELD, id));\n      doc.add(new SortedNumericDocValuesField(SORTED_NUMERIC_DV_FIELD, id + 1));\n    }\n    doc.add(new Field(TERM_VECTORS_FIELD, Integer.toString(id), TERM_VECTORS_TYPE));\n    return doc;\n  }\n\n","bugFix":["0cbcfd9c75cfb63c75be6ce6bd632aa60521273e","cb767289784b682dea51f9e6d7222add811edb77"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e","date":1419346542,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/SorterTestBase#doc(int,PositionsTokenStream).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/sorter/SorterTestBase#doc(int,PositionsTokenStream).mjava","sourceNew":"  private static Document doc(final int id, PositionsTokenStream positions) {\n    final Document doc = new Document();\n    doc.add(new StringField(ID_FIELD, Integer.toString(id), Store.YES));\n    doc.add(new StringField(DOCS_ENUM_FIELD, DOCS_ENUM_TERM, Store.NO));\n    positions.setId(id);\n    doc.add(new Field(DOC_POSITIONS_FIELD, positions, POSITIONS_TYPE));\n    doc.add(new NumericDocValuesField(NUMERIC_DV_FIELD, id));\n    TextField norms = new TextField(NORMS_FIELD, Integer.toString(id), Store.NO);\n    norms.setBoost(Float.intBitsToFloat(id));\n    doc.add(norms);\n    doc.add(new BinaryDocValuesField(BINARY_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedDocValuesField(SORTED_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id + 1))));\n    doc.add(new SortedNumericDocValuesField(SORTED_NUMERIC_DV_FIELD, id));\n    doc.add(new SortedNumericDocValuesField(SORTED_NUMERIC_DV_FIELD, id + 1));\n    doc.add(new Field(TERM_VECTORS_FIELD, Integer.toString(id), TERM_VECTORS_TYPE));\n    return doc;\n  }\n\n","sourceOld":"  private static Document doc(final int id, PositionsTokenStream positions) {\n    final Document doc = new Document();\n    doc.add(new StringField(ID_FIELD, Integer.toString(id), Store.YES));\n    doc.add(new StringField(DOCS_ENUM_FIELD, DOCS_ENUM_TERM, Store.NO));\n    positions.setId(id);\n    doc.add(new Field(DOC_POSITIONS_FIELD, positions, POSITIONS_TYPE));\n    doc.add(new NumericDocValuesField(NUMERIC_DV_FIELD, id));\n    TextField norms = new TextField(NORMS_FIELD, Integer.toString(id), Store.NO);\n    norms.setBoost(Float.intBitsToFloat(id));\n    doc.add(norms);\n    doc.add(new BinaryDocValuesField(BINARY_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedDocValuesField(SORTED_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id))));\n    doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD, new BytesRef(Integer.toString(id + 1))));\n    doc.add(new SortedNumericDocValuesField(SORTED_NUMERIC_DV_FIELD, id));\n    doc.add(new SortedNumericDocValuesField(SORTED_NUMERIC_DV_FIELD, id + 1));\n    doc.add(new Field(TERM_VECTORS_FIELD, Integer.toString(id), TERM_VECTORS_TYPE));\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["6613659748fe4411a7dcf85266e55db1f95f7315","91d86ebcdb45ce6a1b2584e2603f76db47523d0a"],"0cbcfd9c75cfb63c75be6ce6bd632aa60521273e":["91d86ebcdb45ce6a1b2584e2603f76db47523d0a"],"91d86ebcdb45ce6a1b2584e2603f76db47523d0a":["6613659748fe4411a7dcf85266e55db1f95f7315"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":["91d86ebcdb45ce6a1b2584e2603f76db47523d0a","0cbcfd9c75cfb63c75be6ce6bd632aa60521273e"],"6613659748fe4411a7dcf85266e55db1f95f7315":["cb767289784b682dea51f9e6d7222add811edb77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cb767289784b682dea51f9e6d7222add811edb77":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ad2a673349939e48652bf304cccf673c3412198f":["0cbcfd9c75cfb63c75be6ce6bd632aa60521273e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["0cbcfd9c75cfb63c75be6ce6bd632aa60521273e","ad2a673349939e48652bf304cccf673c3412198f"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"91d86ebcdb45ce6a1b2584e2603f76db47523d0a":["5eb2511ababf862ea11e10761c70ee560cd84510","0cbcfd9c75cfb63c75be6ce6bd632aa60521273e","e57c73924f3b8c19defa62e96bfa34a4922d49c2"],"0cbcfd9c75cfb63c75be6ce6bd632aa60521273e":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","ad2a673349939e48652bf304cccf673c3412198f","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":[],"6613659748fe4411a7dcf85266e55db1f95f7315":["5eb2511ababf862ea11e10761c70ee560cd84510","91d86ebcdb45ce6a1b2584e2603f76db47523d0a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cb767289784b682dea51f9e6d7222add811edb77"],"cb767289784b682dea51f9e6d7222add811edb77":["6613659748fe4411a7dcf85266e55db1f95f7315"],"82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad2a673349939e48652bf304cccf673c3412198f":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","e57c73924f3b8c19defa62e96bfa34a4922d49c2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}