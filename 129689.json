{"path":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput,String).mjava","commits":[{"id":"0cd8367c3d48e4b63dee1895a261d4986c716bbb","date":1279637747,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput,String).mjava","pathOld":"/dev/null","sourceNew":"  private int checkValidFormat(IndexInput in, String fn) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format < FORMAT_MINIMUM)\n      throw new IndexFormatTooOldException(fn, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    if (format > FORMAT_CURRENT)\n      throw new IndexFormatTooNewException(fn, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    return format;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput,String).mjava","pathOld":"/dev/null","sourceNew":"  private int checkValidFormat(IndexInput in, String fn) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format < FORMAT_MINIMUM)\n      throw new IndexFormatTooOldException(fn, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    if (format > FORMAT_CURRENT)\n      throw new IndexFormatTooNewException(fn, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    return format;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1efe3edca215dd9891cb42af283fed96f792ca0","date":1320428891,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput,String).mjava","sourceNew":"  private int checkValidFormat(IndexInput in, String fn) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format < FORMAT_MINIMUM)\n      throw new IndexFormatTooOldException(in, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    if (format > FORMAT_CURRENT)\n      throw new IndexFormatTooNewException(in, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    return format;\n  }\n\n","sourceOld":"  private int checkValidFormat(IndexInput in, String fn) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format < FORMAT_MINIMUM)\n      throw new IndexFormatTooOldException(fn, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    if (format > FORMAT_CURRENT)\n      throw new IndexFormatTooNewException(fn, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    return format;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultTermVectorsReader#checkValidFormat(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#checkValidFormat(IndexInput,String).mjava","sourceNew":"  private int checkValidFormat(IndexInput in) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format < FORMAT_MINIMUM)\n      throw new IndexFormatTooOldException(in, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    if (format > FORMAT_CURRENT)\n      throw new IndexFormatTooNewException(in, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    return format;\n  }\n\n","sourceOld":"  private int checkValidFormat(IndexInput in, String fn) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format < FORMAT_MINIMUM)\n      throw new IndexFormatTooOldException(in, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    if (format > FORMAT_CURRENT)\n      throw new IndexFormatTooNewException(in, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    return format;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f1efe3edca215dd9891cb42af283fed96f792ca0":["0cd8367c3d48e4b63dee1895a261d4986c716bbb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["f1efe3edca215dd9891cb42af283fed96f792ca0"],"0cd8367c3d48e4b63dee1895a261d4986c716bbb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0cd8367c3d48e4b63dee1895a261d4986c716bbb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc749c053615f5871f3b95715fe292f34e70a53"]},"commit2Childs":{"f1efe3edca215dd9891cb42af283fed96f792ca0":["3cc749c053615f5871f3b95715fe292f34e70a53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0cd8367c3d48e4b63dee1895a261d4986c716bbb","5f4e87790277826a2aea119328600dfb07761f32"],"3cc749c053615f5871f3b95715fe292f34e70a53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0cd8367c3d48e4b63dee1895a261d4986c716bbb":["f1efe3edca215dd9891cb42af283fed96f792ca0","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}